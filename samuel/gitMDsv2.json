{"body":{"0":"\n\n\n\n\nfreeCodeCamp.org's open-source codebase and curriculum\nfreeCodeCamp.org is a friendly community where you can learn to code for free. It is run by a donor-supported 501(c)(3) nonprofit to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.\nOur full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.\nTable of Contents\n\nCertifications\nThe Learning Platform\nReporting Bugs and Issues\nReporting Security Issues and Responsible Disclosure\nContributing\nPlatform, Build and Deployment Status\nLicense\n\nCertifications\nfreeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.\nEach of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.\nYou can pull in these test suites through freeCodeCamp's CDN. This means you can build these projects on websites like CodePen and Glitch - or even on your local computer's development environment.\nOnce you\u2019ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or r\u00e9sum\u00e9. And when your prospective employers or freelance clients click that link, they\u2019ll see a verified certification specific to you.\nThe one exception to this is if we discover violations of our Academic Honesty Policy. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.\nHere are our ten core certifications:\n1. Responsive Web Design Certification\n\nBasic HTML and HTML5\nBasic CSS\nApplied Visual Design\nApplied Accessibility\nResponsive Web Design Principles\nCSS Flexbox\nCSS Grid\n\n\nProjects: Tribute Page, Survey Form, Product Landing Page, Technical Documentation Page, Personal Portfolio Webpage\n\n2. JavaScript Algorithms and Data Structures Certification\n\nBasic JavaScript\nES6\nRegular Expressions\nDebugging\nBasic Data Structures\nAlgorithm Scripting\nObject-Oriented Programming\nFunctional Programming\nIntermediate Algorithm Scripting\n\n\nProjects: Palindrome Checker, Roman Numeral Converter, Caesar's Cipher, Telephone Number Validator, Cash Register\n\n3. Front End Libraries Certification\n\nBootstrap\njQuery\nSass\nReact\nRedux\nReact and Redux\n\n\nProjects:  Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, 25 + 5 Clock\n\n4. Data Visualization Certification\n\nData Visualization with D3\nJSON APIs and Ajax\n\n\nProjects:  Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram\n\n5. APIs and Microservices Certification\n\nManaging Packages with Npm\nBasic Node and Express\nMongoDB and Mongoose\n\n\nProjects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice\n\n6. Quality Assurance Certification\n\nQuality Assurance and Testing with Chai\nAdvanced Node and Express\n\n\nProjects:  Metric-Imperial Converter, Issue Tracker, Personal Library, Sudoku Solver, American British Translator\n\n7. Scientific Computing with Python Certification\n\nIntroduction to Python for Everybody\n\n\nProjects: Arithmetic Formatter, Time Calculator, Budget App, Polygon Area Calculator, Probability Calculator\n\n8. Data Analysis with Python Certification\n\nData Analysis with Python Course\nNumPy\n\n\nProjects: Mean-Variance-Standard Deviation Calculator, Demographic Data Analyzer, Medical Data Visualizer, Page View Time Series Visualizer, Sea Level Predictor\n\n9. Information Security Certification\n\nInformation Security with HelmetJS\nPython for Penetration Testing\n\n\nProjects:  Stock Price Checker, Anonymous Message Board, Port Scanner, SHA-1 Password Cracker, Secure Real Time Multiplayer Game \n\n10. Machine Learning with Python Certification\n\nTensorFlow\nHow Neural Networks Work\n\n\nProjects: Rock Paper Scissors, Cat and Dog Image Classifier, Book Recommendation Engine using KNN, Linear Regression Health Costs Calculator, Neural Network SMS Text Classifier\n\nLegacy Full Stack Development Certification\nOnce you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Libraries, Data Visualization, APIs and Microservices, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools.\nLegacy Certifications\nWe also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.\n\nLegacy Front End Development Certification\nLegacy Data Visualization Certification\nLegacy Back End Development Certification\nLegacy Information Security and Quality Assurance Certification\n\nThe Learning Platform\nThis code is running live at freeCodeCamp.org.\nOur community also has:\n\nA forum where you can usually get programming help or project feedback within hours.\nA YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies.\nA technical publication with thousands of programming tutorials and articles about math and computer science.\nA Discord chat room where you can hang out and talk with developers and people who are learning to code.\n\n\nJoin the community here.\n\nReporting Bugs and Issues\nIf you think you've found a bug, first read the how to report a bug article and follow its instructions.\nIf you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.\nReporting Security Issues and Responsible Disclosure\nIf you think you have found a vulnerability, please report responsibly. Don't create GitHub issues for security issues. Instead, please send an email to security@freecodecamp.org and we'll look into it immediately.\nWe appreciate any responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users. While we do not offer any bounties or swags at the moment, we'll be happy to list your name in our Hall of Fame for security researchers.\nContributing\nThe freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome any and all contributions to the community and are excited to welcome you aboard.\n\nPlease follow these steps to contribute.\n\nPlatform, Build and Deployment Status\nThe general platform status for all our applications is available at status.freecodecamp.org. The build and deployment status for the code is available in our DevOps Guide.\nLicense\nCopyright \u00a9 2020 freeCodeCamp.org\nThe content of this repository is bound by the following licenses:\n\nThe computer software is licensed under the BSD-3-Clause license.\nThe learning resources in the \/curriculum directory including their subdirectories thereon are licensed under the CC-BY-SA-4.0 license.\n\n","1":"\n\n\n\n\n\n\n\n\n\n\nSupporting Vue.js\nVue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. If you'd like to join them, please consider:\n\nBecome a backer or sponsor on Patreon.\nBecome a backer or sponsor on Open Collective.\nOne-time donation via PayPal or crypto-currencies.\n\nWhat's the difference between Patreon and OpenCollective?\nFunds donated via Patreon go directly to support Evan You's full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name\/logo will receive proper recognition and exposure by donating on either platform.\nSpecial Sponsors\n\n\n\n\n\nPlatinum Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlatinum Sponsors (China)\n\n\n\n\n\n\n\n\n\n\n\nGold Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors via Open Collective\nPlatinum\n\n\nGold\n\n\n\n\n\n\nIntroduction\nVue (pronounced \/vju\u02d0\/, like view) is a progressive framework for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.\nBrowser Compatibility\nVue.js supports all browsers that are ES5-compliant (IE8 and below are not supported).\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nvue-router\n\nSingle-page application routing\n\n\nvuex\n\nLarge-scale state management\n\n\nvue-cli\n\nProject scaffolding\n\n\nvue-loader\n\nSingle File Component (*.vue file) loader for webpack\n\n\nvue-server-renderer\n\nServer-side rendering support\n\n\nvue-class-component\n\nTypeScript decorator for a class-based API\n\n\nvue-rx\n\nRxJS integration\n\n\nvue-devtools\n\nBrowser DevTools extension\n\n\n\nDocumentation\nTo check out live examples and docs, visit vuejs.org.\nQuestions\nFor questions and support please use the official forum or community chat. The issue list of this repo is exclusively for bug reports and feature requests.\nIssues\nPlease make sure to read the Issue Reporting Checklist before opening an issue. Issues not conforming to the guidelines may be closed immediately.\nChangelog\nDetailed changes for each release are documented in the release notes.\nStay In Touch\n\nTwitter\nBlog\nJob Board\n\nContribution\nPlease make sure to read the Contributing Guide before making a pull request. If you have a Vue-related project\/component\/tool, add it with a pull request to this curated list!\nThank you to all the people who already contributed to Vue!\n\nLicense\nMIT\nCopyright (c) 2013-present, Yuxi (Evan) You\n","2":"React \u00b7    \nReact is a JavaScript library for building user interfaces.\n\nDeclarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\nComponent-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\nLearn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.\n\nLearn how to use React in your own project.\nInstallation\nReact has been designed for gradual adoption from the start, and you can use as little or as much React as you need:\n\nUse Online Playgrounds to get a taste of React.\nAdd React to a Website as a <script> tag in one minute.\nCreate a New React App if you're looking for a powerful JavaScript toolchain.\n\nYou can use React as a <script> tag from a CDN, or as a react package on npm.\nDocumentation\nYou can find the React documentation on the website.\nCheck out the Getting Started page for a quick overview.\nThe documentation is divided into several sections:\n\nTutorial\nMain Concepts\nAdvanced Guides\nAPI Reference\nWhere to Get Support\nContributing Guide\n\nYou can improve it by sending pull requests to this repository.\nExamples\nWe have several examples on the website. Here is the first one to get you started:\nfunction HelloMessage({ name }) {\n  return <div>Hello {name}<\/div>;\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" \/>,\n  document.getElementById('container')\n);\nThis example will render \"Hello Taylor\" into a container on the page.\nYou'll notice that we used an HTML-like syntax; we call it JSX. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a <script> tag, read this section on integrating JSX; otherwise, the recommended JavaScript toolchains handle it automatically.\nContributing\nThe main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.\nGood First Issues\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.\nLicense\nReact is MIT licensed.\n","3":"\n\n\n\n\nBootstrap\n\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  \nExplore Bootstrap docs \u00bb\n\n\nReport bug\n  \u00b7\n  Request feature\n  \u00b7\n  Themes\n  \u00b7\n  Blog\n\nBootstrap 4\nOur default branch is for development of our upcoming Bootstrap 5 release. Head to the v4-dev branch to view the readme, documentation, and source code for Bootstrap 4.\nTable of contents\n\nQuick start\nStatus\nWhat's included\nBugs and feature requests\nDocumentation\nContributing\nCommunity\nVersioning\nCreators\nThanks\nCopyright and license\n\nQuick start\nSeveral quick start options are available:\n\nDownload the latest release\nClone the repo: git clone https:\/\/github.com\/twbs\/bootstrap.git\nInstall with npm: npm install bootstrap@next\nInstall with yarn: yarn add bootstrap@next\nInstall with Composer: composer require twbs\/bootstrap:5.0.0-alpha3\nInstall with NuGet: CSS: Install-Package bootstrap Sass: Install-Package bootstrap.sass\n\nRead the Getting started page for information on the framework contents, templates and examples, and more.\nStatus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's included\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\nbootstrap\/\n\u2514\u2500\u2500 dist\/\n    \u251c\u2500\u2500 css\/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js\/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n\nWe provide compiled CSS and JS (bootstrap.*), as well as compiled and minified CSS and JS (bootstrap.min.*). source maps (bootstrap.*.map) are available for use with certain browsers' developer tools. Bundled JS files (bootstrap.bundle.js and minified bootstrap.bundle.min.js) include Popper.\nBugs and feature requests\nHave a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, please open a new issue.\nDocumentation\nBootstrap's documentation, included in this repo in the root directory, is built with Hugo and publicly hosted on GitHub Pages at https:\/\/v5.getbootstrap.com\/. The docs may also be run locally.\nDocumentation search is powered by Algolia's DocSearch. Working on our search? Be sure to set debug: true in site\/assets\/js\/src\/search.js file.\nRunning documentation locally\n\nRun npm install to install the Node.js dependencies, including Hugo (the site builder).\nRun npm run test (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\nFrom the root \/bootstrap directory, run npm run docs-serve in the command line.\nOpen http:\/\/localhost:9001\/ in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its documentation.\nDocumentation for previous releases\nYou can find all our previous releases docs on https:\/\/v5.getbootstrap.com\/docs\/versions\/.\nPrevious releases and their documentation are also available for download.\nContributing\nPlease read through our contributing guidelines. Included are directions for opening issues, coding standards, and notes on development.\nMoreover, if your pull request contains JavaScript patches or features, you must include relevant unit tests. All HTML and CSS should conform to the Code Guide, maintained by Mark Otto.\nEditor preferences are available in the editor config for easy use in common text editors. Read more and download plugins at https:\/\/editorconfig.org\/.\nCommunity\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\nFollow @getbootstrap on Twitter.\nRead and subscribe to The Official Bootstrap Blog.\nJoin the official Slack room.\nChat with fellow Bootstrappers in IRC. On the irc.freenode.net server, in the ##bootstrap channel.\nImplementation help may be found at Stack Overflow (tagged bootstrap-5).\nDevelopers should use the keyword bootstrap on packages which modify or add to the functionality of Bootstrap when distributing through npm or similar delivery mechanisms for maximum discoverability.\n\nVersioning\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we adhere to those rules whenever possible.\nSee the Releases section of our GitHub project for changelogs for each release version of Bootstrap. Release announcement posts on the official Bootstrap blog contain summaries of the most noteworthy changes made in each release.\nCreators\nMark Otto\n\nhttps:\/\/twitter.com\/mdo\nhttps:\/\/github.com\/mdo\n\nJacob Thornton\n\nhttps:\/\/twitter.com\/fat\nhttps:\/\/github.com\/fat\n\nThanks\n\n\n\nThanks to BrowserStack for providing the infrastructure that allows us to test in real browsers!\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nCopyright and license\nCode and documentation copyright 2011\u20132020 the Bootstrap Authors and Twitter, Inc. Code released under the MIT License. Docs released under Creative Commons.\n","4":"Airbnb JavaScript Style Guide() {\nA mostly reasonable approach to JavaScript\n\nNote: this guide assumes you are using Babel, and requires that you use babel-preset-airbnb or the equivalent. It also assumes you are installing shims\/polyfills in your app, with airbnb-browser-shims or the equivalent.\n\n\n\n\nThis guide is available in other languages too. See Translation\nOther Style Guides\n\nES5 (Deprecated)\nReact\nCSS-in-JavaScript\nCSS & Sass\nRuby\n\nTable of Contents\n\nTypes\nReferences\nObjects\nArrays\nDestructuring\nStrings\nFunctions\nArrow Functions\nClasses & Constructors\nModules\nIterators and Generators\nProperties\nVariables\nHoisting\nComparison Operators & Equality\nBlocks\nControl Statements\nComments\nWhitespace\nCommas\nSemicolons\nType Casting & Coercion\nNaming Conventions\nAccessors\nEvents\njQuery\nECMAScript 5 Compatibility\nECMAScript 6+ (ES 2015+) Styles\nStandard Library\nTesting\nPerformance\nResources\nIn the Wild\nTranslation\nThe JavaScript Style Guide Guide\nChat With Us About JavaScript\nContributors\nLicense\nAmendments\n\nTypes\n\n\n\n1.1 Primitives: When you access a primitive type you work directly on its value.\n\nstring\nnumber\nboolean\nnull\nundefined\nsymbol\nbigint\n\nconst foo = 1;\nlet bar = foo;\n\nbar = 9;\n\nconsole.log(foo, bar); \/\/ => 1, 9\n\nSymbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers\/environments that don\u2019t support them natively.\n\n\n\n\n\n\n1.2 Complex: When you access a complex type you work on a reference to its value.\n\nobject\narray\nfunction\n\nconst foo = [1, 2];\nconst bar = foo;\n\nbar[0] = 9;\n\nconsole.log(foo[0], bar[0]); \/\/ => 9, 9\n\n\n\u2b06 back to top\nReferences\n\n\n\n2.1 Use const for all of your references; avoid using var. eslint: prefer-const, no-const-assign\n\nWhy? This ensures that you can\u2019t reassign your references, which can lead to bugs and difficult to comprehend code.\n\n\/\/ bad\nvar a = 1;\nvar b = 2;\n\n\/\/ good\nconst a = 1;\nconst b = 2;\n\n\n\n\n\n2.2 If you must reassign references, use let instead of var. eslint: no-var\n\nWhy? let is block-scoped rather than function-scoped like var.\n\n\/\/ bad\nvar count = 1;\nif (true) {\n  count += 1;\n}\n\n\/\/ good, use the let.\nlet count = 1;\nif (true) {\n  count += 1;\n}\n\n\n\n\n\n2.3 Note that both let and const are block-scoped.\n\/\/ const and let only exist in the blocks they are defined in.\n{\n  let a = 1;\n  const b = 1;\n}\nconsole.log(a); \/\/ ReferenceError\nconsole.log(b); \/\/ ReferenceError\n\n\n\u2b06 back to top\nObjects\n\n\n\n3.1 Use the literal syntax for object creation. eslint: no-new-object\n\/\/ bad\nconst item = new Object();\n\n\/\/ good\nconst item = {};\n\n\n\n\n\n3.2 Use computed property names when creating objects with dynamic property names.\n\nWhy? They allow you to define all the properties of an object in one place.\n\nfunction getKey(k) {\n  return `a key named ${k}`;\n}\n\n\/\/ bad\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n};\nobj[getKey('enabled')] = true;\n\n\/\/ good\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n  [getKey('enabled')]: true,\n};\n\n\n\n\n\n3.3 Use object method shorthand. eslint: object-shorthand\n\/\/ bad\nconst atom = {\n  value: 1,\n\n  addValue: function (value) {\n    return atom.value + value;\n  },\n};\n\n\/\/ good\nconst atom = {\n  value: 1,\n\n  addValue(value) {\n    return atom.value + value;\n  },\n};\n\n\n\n\n\n3.4 Use property value shorthand. eslint: object-shorthand\n\nWhy? It is shorter and descriptive.\n\nconst lukeSkywalker = 'Luke Skywalker';\n\n\/\/ bad\nconst obj = {\n  lukeSkywalker: lukeSkywalker,\n};\n\n\/\/ good\nconst obj = {\n  lukeSkywalker,\n};\n\n\n\n\n\n3.5 Group your shorthand properties at the beginning of your object declaration.\n\nWhy? It\u2019s easier to tell which properties are using the shorthand.\n\nconst anakinSkywalker = 'Anakin Skywalker';\nconst lukeSkywalker = 'Luke Skywalker';\n\n\/\/ bad\nconst obj = {\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  lukeSkywalker,\n  episodeThree: 3,\n  mayTheFourth: 4,\n  anakinSkywalker,\n};\n\n\/\/ good\nconst obj = {\n  lukeSkywalker,\n  anakinSkywalker,\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  episodeThree: 3,\n  mayTheFourth: 4,\n};\n\n\n\n\n\n3.6 Only quote properties that are invalid identifiers. eslint: quote-props\n\nWhy? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.\n\n\/\/ bad\nconst bad = {\n  'foo': 3,\n  'bar': 4,\n  'data-blah': 5,\n};\n\n\/\/ good\nconst good = {\n  foo: 3,\n  bar: 4,\n  'data-blah': 5,\n};\n\n\n\n\n\n3.7 Do not call Object.prototype methods directly, such as hasOwnProperty, propertyIsEnumerable, and isPrototypeOf. eslint: no-prototype-builtins\n\nWhy? These methods may be shadowed by properties on the object in question - consider { hasOwnProperty: false } - or, the object may be a null object (Object.create(null)).\n\n\/\/ bad\nconsole.log(object.hasOwnProperty(key));\n\n\/\/ good\nconsole.log(Object.prototype.hasOwnProperty.call(object, key));\n\n\/\/ best\nconst has = Object.prototype.hasOwnProperty; \/\/ cache the lookup once, in module scope.\nconsole.log(has.call(object, key));\n\/* or *\/\nimport has from 'has'; \/\/ https:\/\/www.npmjs.com\/package\/has\nconsole.log(has(object, key));\n\n\n\n\n\n3.8 Prefer the object spread operator over Object.assign to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: prefer-object-spread\n\/\/ very bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign(original, { c: 3 }); \/\/ this mutates `original` \u0ca0_\u0ca0\ndelete copy.a; \/\/ so does this\n\n\/\/ bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign({}, original, { c: 3 }); \/\/ copy => { a: 1, b: 2, c: 3 }\n\n\/\/ good\nconst original = { a: 1, b: 2 };\nconst copy = { ...original, c: 3 }; \/\/ copy => { a: 1, b: 2, c: 3 }\n\nconst { a, ...noA } = copy; \/\/ noA => { b: 2, c: 3 }\n\n\n\u2b06 back to top\nArrays\n\n\n\n4.1 Use the literal syntax for array creation. eslint: no-array-constructor\n\/\/ bad\nconst items = new Array();\n\n\/\/ good\nconst items = [];\n\n\n\n\n\n4.2 Use Array#push instead of direct assignment to add items to an array.\nconst someStack = [];\n\n\/\/ bad\nsomeStack[someStack.length] = 'abracadabra';\n\n\/\/ good\nsomeStack.push('abracadabra');\n\n\n\n\n\n4.3 Use array spreads ... to copy arrays.\n\/\/ bad\nconst len = items.length;\nconst itemsCopy = [];\nlet i;\n\nfor (i = 0; i < len; i += 1) {\n  itemsCopy[i] = items[i];\n}\n\n\/\/ good\nconst itemsCopy = [...items];\n\n\n\n\n\n\n4.4 To convert an iterable object to an array, use spreads ... instead of Array.from.\nconst foo = document.querySelectorAll('.foo');\n\n\/\/ good\nconst nodes = Array.from(foo);\n\n\/\/ best\nconst nodes = [...foo];\n\n\n\n\n\n4.5 Use Array.from for converting an array-like object to an array.\nconst arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };\n\n\/\/ bad\nconst arr = Array.prototype.slice.call(arrLike);\n\n\/\/ good\nconst arr = Array.from(arrLike);\n\n\n\n\n\n4.6 Use Array.from instead of spread ... for mapping over iterables, because it avoids creating an intermediate array.\n\/\/ bad\nconst baz = [...foo].map(bar);\n\n\/\/ good\nconst baz = Array.from(foo, bar);\n\n\n\n\n\n4.7 Use return statements in array method callbacks. It\u2019s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following 8.2. eslint: array-callback-return\n\/\/ good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\/\/ good\n[1, 2, 3].map((x) => x + 1);\n\n\/\/ bad - no returned value means `acc` becomes undefined after the first iteration\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n});\n\n\/\/ good\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n  return flatten;\n});\n\n\/\/ bad\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  } else {\n    return false;\n  }\n});\n\n\/\/ good\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  }\n\n  return false;\n});\n\n\n\n\n\n4.8 Use line breaks after open and before close array brackets if an array has multiple lines\n\/\/ bad\nconst arr = [\n  [0, 1], [2, 3], [4, 5],\n];\n\nconst objectInArray = [{\n  id: 1,\n}, {\n  id: 2,\n}];\n\nconst numberInArray = [\n  1, 2,\n];\n\n\/\/ good\nconst arr = [[0, 1], [2, 3], [4, 5]];\n\nconst objectInArray = [\n  {\n    id: 1,\n  },\n  {\n    id: 2,\n  },\n];\n\nconst numberInArray = [\n  1,\n  2,\n];\n\n\n\u2b06 back to top\nDestructuring\n\n\n\n5.1 Use object destructuring when accessing and using multiple properties of an object. eslint: prefer-destructuring\n\nWhy? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.\n\n\/\/ bad\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n\n  return `${firstName} ${lastName}`;\n}\n\n\/\/ good\nfunction getFullName(user) {\n  const { firstName, lastName } = user;\n  return `${firstName} ${lastName}`;\n}\n\n\/\/ best\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\n\n\n\n\n\n5.2 Use array destructuring. eslint: prefer-destructuring\nconst arr = [1, 2, 3, 4];\n\n\/\/ bad\nconst first = arr[0];\nconst second = arr[1];\n\n\/\/ good\nconst [first, second] = arr;\n\n\n\n\n\n5.3 Use object destructuring for multiple return values, not array destructuring.\n\nWhy? You can add new properties over time or change the order of things without breaking call sites.\n\n\/\/ bad\nfunction processInput(input) {\n  \/\/ then a miracle occurs\n  return [left, right, top, bottom];\n}\n\n\/\/ the caller needs to think about the order of return data\nconst [left, __, top] = processInput(input);\n\n\/\/ good\nfunction processInput(input) {\n  \/\/ then a miracle occurs\n  return { left, right, top, bottom };\n}\n\n\/\/ the caller selects only the data they need\nconst { left, top } = processInput(input);\n\n\n\u2b06 back to top\nStrings\n\n\n\n6.1 Use single quotes '' for strings. eslint: quotes\n\/\/ bad\nconst name = \"Capt. Janeway\";\n\n\/\/ bad - template literals should contain interpolation or newlines\nconst name = `Capt. Janeway`;\n\n\/\/ good\nconst name = 'Capt. Janeway';\n\n\n\n\n\n6.2 Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.\n\nWhy? Broken strings are painful to work with and make code less searchable.\n\n\/\/ bad\nconst errorMessage = 'This is a super long error that was thrown because \\\nof Batman. When you stop to think about how Batman had anything to do \\\nwith this, you would get nowhere \\\nfast.';\n\n\/\/ bad\nconst errorMessage = 'This is a super long error that was thrown because ' +\n  'of Batman. When you stop to think about how Batman had anything to do ' +\n  'with this, you would get nowhere fast.';\n\n\/\/ good\nconst errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';\n\n\n\n\n\n6.3 When programmatically building up strings, use template strings instead of concatenation. eslint: prefer-template template-curly-spacing\n\nWhy? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.\n\n\/\/ bad\nfunction sayHi(name) {\n  return 'How are you, ' + name + '?';\n}\n\n\/\/ bad\nfunction sayHi(name) {\n  return ['How are you, ', name, '?'].join();\n}\n\n\/\/ bad\nfunction sayHi(name) {\n  return `How are you, ${ name }?`;\n}\n\n\/\/ good\nfunction sayHi(name) {\n  return `How are you, ${name}?`;\n}\n\n\n\n\n6.4 Never use eval() on a string, it opens too many vulnerabilities. eslint: no-eval\n\n\n\n\n6.5 Do not unnecessarily escape characters in strings. eslint: no-useless-escape\n\nWhy? Backslashes harm readability, thus they should only be present when necessary.\n\n\/\/ bad\nconst foo = '\\'this\\' \\i\\s \\\"quoted\\\"';\n\n\/\/ good\nconst foo = '\\'this\\' is \"quoted\"';\nconst foo = `my name is '${name}'`;\n\n\n\u2b06 back to top\nFunctions\n\n\n\n7.1 Use named function expressions instead of function declarations. eslint: func-style\n\nWhy? Function declarations are hoisted, which means that it\u2019s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function\u2019s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it\u2019s time to extract it to its own module! Don\u2019t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error\u2019s call stack. (Discussion)\n\n\/\/ bad\nfunction foo() {\n  \/\/ ...\n}\n\n\/\/ bad\nconst foo = function () {\n  \/\/ ...\n};\n\n\/\/ good\n\/\/ lexical name distinguished from the variable-referenced invocation(s)\nconst short = function longUniqueMoreDescriptiveLexicalFoo() {\n  \/\/ ...\n};\n\n\n\n\n\n7.2 Wrap immediately invoked function expressions in parentheses. eslint: wrap-iife\n\nWhy? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.\n\n\/\/ immediately-invoked function expression (IIFE)\n(function () {\n  console.log('Welcome to the Internet. Please follow me.');\n}());\n\n\n\n\n7.3 Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: no-loop-func\n\n\n\n\n7.4 Note: ECMA-262 defines a block as a list of statements. A function declaration is not a statement.\n\/\/ bad\nif (currentUser) {\n  function test() {\n    console.log('Nope.');\n  }\n}\n\n\/\/ good\nlet test;\nif (currentUser) {\n  test = () => {\n    console.log('Yup.');\n  };\n}\n\n\n\n\n\n7.5 Never name a parameter arguments. This will take precedence over the arguments object that is given to every function scope.\n\/\/ bad\nfunction foo(name, options, arguments) {\n  \/\/ ...\n}\n\n\/\/ good\nfunction foo(name, options, args) {\n  \/\/ ...\n}\n\n\n\n\n\n7.6 Never use arguments, opt to use rest syntax ... instead. eslint: prefer-rest-params\n\nWhy? ... is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like arguments.\n\n\/\/ bad\nfunction concatenateAll() {\n  const args = Array.prototype.slice.call(arguments);\n  return args.join('');\n}\n\n\/\/ good\nfunction concatenateAll(...args) {\n  return args.join('');\n}\n\n\n\n\n\n7.7 Use default parameter syntax rather than mutating function arguments.\n\/\/ really bad\nfunction handleThings(opts) {\n  \/\/ No! We shouldn\u2019t mutate function arguments.\n  \/\/ Double bad: if opts is falsy it'll be set to an object which may\n  \/\/ be what you want but it can introduce subtle bugs.\n  opts = opts || {};\n  \/\/ ...\n}\n\n\/\/ still bad\nfunction handleThings(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  \/\/ ...\n}\n\n\/\/ good\nfunction handleThings(opts = {}) {\n  \/\/ ...\n}\n\n\n\n\n\n7.8 Avoid side effects with default parameters.\n\nWhy? They are confusing to reason about.\n\nvar b = 1;\n\/\/ bad\nfunction count(a = b++) {\n  console.log(a);\n}\ncount();  \/\/ 1\ncount();  \/\/ 2\ncount(3); \/\/ 3\ncount();  \/\/ 3\n\n\n\n\n\n7.9 Always put default parameters last. eslint: default-param-last\n\/\/ bad\nfunction handleThings(opts = {}, name) {\n  \/\/ ...\n}\n\n\/\/ good\nfunction handleThings(name, opts = {}) {\n  \/\/ ...\n}\n\n\n\n\n\n7.10 Never use the Function constructor to create a new function. eslint: no-new-func\n\nWhy? Creating a function in this way evaluates a string similarly to eval(), which opens vulnerabilities.\n\n\/\/ bad\nvar add = new Function('a', 'b', 'return a + b');\n\n\/\/ still bad\nvar subtract = Function('a', 'b', 'return a - b');\n\n\n\n\n\n7.11 Spacing in a function signature. eslint: space-before-function-paren space-before-blocks\n\nWhy? Consistency is good, and you shouldn\u2019t have to add or remove a space when adding or removing a name.\n\n\/\/ bad\nconst f = function(){};\nconst g = function (){};\nconst h = function() {};\n\n\/\/ good\nconst x = function () {};\nconst y = function a() {};\n\n\n\n\n\n7.12 Never mutate parameters. eslint: no-param-reassign\n\nWhy? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.\n\n\/\/ bad\nfunction f1(obj) {\n  obj.key = 1;\n}\n\n\/\/ good\nfunction f2(obj) {\n  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;\n}\n\n\n\n\n\n7.13 Never reassign parameters. eslint: no-param-reassign\n\nWhy? Reassigning parameters can lead to unexpected behavior, especially when accessing the arguments object. It can also cause optimization issues, especially in V8.\n\n\/\/ bad\nfunction f1(a) {\n  a = 1;\n  \/\/ ...\n}\n\nfunction f2(a) {\n  if (!a) { a = 1; }\n  \/\/ ...\n}\n\n\/\/ good\nfunction f3(a) {\n  const b = a || 1;\n  \/\/ ...\n}\n\nfunction f4(a = 1) {\n  \/\/ ...\n}\n\n\n\n\n\n7.14 Prefer the use of the spread operator ... to call variadic functions. eslint: prefer-spread\n\nWhy? It\u2019s cleaner, you don\u2019t need to supply a context, and you can not easily compose new with apply.\n\n\/\/ bad\nconst x = [1, 2, 3, 4, 5];\nconsole.log.apply(console, x);\n\n\/\/ good\nconst x = [1, 2, 3, 4, 5];\nconsole.log(...x);\n\n\/\/ bad\nnew (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));\n\n\/\/ good\nnew Date(...[2016, 8, 5]);\n\n\n\n\n\n7.15 Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: function-paren-newline\n\/\/ bad\nfunction foo(bar,\n             baz,\n             quux) {\n  \/\/ ...\n}\n\n\/\/ good\nfunction foo(\n  bar,\n  baz,\n  quux,\n) {\n  \/\/ ...\n}\n\n\/\/ bad\nconsole.log(foo,\n  bar,\n  baz);\n\n\/\/ good\nconsole.log(\n  foo,\n  bar,\n  baz,\n);\n\n\n\u2b06 back to top\nArrow Functions\n\n\n\n8.1 When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: prefer-arrow-callback, arrow-spacing\n\nWhy? It creates a version of the function that executes in the context of this, which is usually what you want, and is a more concise syntax.\n\n\nWhy not? If you have a fairly complicated function, you might move that logic out into its own named function expression.\n\n\/\/ bad\n[1, 2, 3].map(function (x) {\n  const y = x + 1;\n  return x * y;\n});\n\n\/\/ good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.2 If the function body consists of a single statement returning an expression without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a return statement. eslint: arrow-parens, arrow-body-style\n\nWhy? Syntactic sugar. It reads well when multiple functions are chained together.\n\n\/\/ bad\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  `A string containing the ${nextNumber}.`;\n});\n\n\/\/ good\n[1, 2, 3].map((number) => `A string containing the ${number + 1}.`);\n\n\/\/ good\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  return `A string containing the ${nextNumber}.`;\n});\n\n\/\/ good\n[1, 2, 3].map((number, index) => ({\n  [index]: number,\n}));\n\n\/\/ No implicit return with side effects\nfunction foo(callback) {\n  const val = callback();\n  if (val === true) {\n    \/\/ Do something if callback returns true\n  }\n}\n\nlet bool = false;\n\n\/\/ bad\nfoo(() => bool = true);\n\n\/\/ good\nfoo(() => {\n  bool = true;\n});\n\n\n\n\n\n8.3 In case the expression spans over multiple lines, wrap it in parentheses for better readability.\n\nWhy? It shows clearly where the function starts and ends.\n\n\/\/ bad\n['get', 'post', 'put'].map((httpMethod) => Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n);\n\n\/\/ good\n['get', 'post', 'put'].map((httpMethod) => (\n  Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n));\n\n\n\n\n\n8.4 Always include parentheses around arguments for clarity and consistency. eslint: arrow-parens\n\nWhy? Minimizes diff churn when adding or removing arguments.\n\n\/\/ bad\n[1, 2, 3].map(x => x * x);\n\n\/\/ good\n[1, 2, 3].map((x) => x * x);\n\n\/\/ bad\n[1, 2, 3].map(number => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n\/\/ good\n[1, 2, 3].map((number) => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n\/\/ bad\n[1, 2, 3].map(x => {\n  const y = x + 1;\n  return x * y;\n});\n\n\/\/ good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.5 Avoid confusing arrow function syntax (=>) with comparison operators (<=, >=). eslint: no-confusing-arrow\n\/\/ bad\nconst itemHeight = (item) => item.height <= 256 ? item.largeSize : item.smallSize;\n\n\/\/ bad\nconst itemHeight = (item) => item.height >= 256 ? item.largeSize : item.smallSize;\n\n\/\/ good\nconst itemHeight = (item) => (item.height <= 256 ? item.largeSize : item.smallSize);\n\n\/\/ good\nconst itemHeight = (item) => {\n  const { height, largeSize, smallSize } = item;\n  return height <= 256 ? largeSize : smallSize;\n};\n\n\n\n\n\n8.6 Enforce the location of arrow function bodies with implicit returns. eslint: implicit-arrow-linebreak\n\/\/ bad\n(foo) =>\n  bar;\n\n(foo) =>\n  (bar);\n\n\/\/ good\n(foo) => bar;\n(foo) => (bar);\n(foo) => (\n   bar\n)\n\n\n\u2b06 back to top\nClasses & Constructors\n\n\n\n9.1 Always use class. Avoid manipulating prototype directly.\n\nWhy? class syntax is more concise and easier to reason about.\n\n\/\/ bad\nfunction Queue(contents = []) {\n  this.queue = [...contents];\n}\nQueue.prototype.pop = function () {\n  const value = this.queue[0];\n  this.queue.splice(0, 1);\n  return value;\n};\n\n\/\/ good\nclass Queue {\n  constructor(contents = []) {\n    this.queue = [...contents];\n  }\n  pop() {\n    const value = this.queue[0];\n    this.queue.splice(0, 1);\n    return value;\n  }\n}\n\n\n\n\n\n9.2 Use extends for inheritance.\n\nWhy? It is a built-in way to inherit prototype functionality without breaking instanceof.\n\n\/\/ bad\nconst inherits = require('inherits');\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents);\n}\ninherits(PeekableQueue, Queue);\nPeekableQueue.prototype.peek = function () {\n  return this.queue[0];\n};\n\n\/\/ good\nclass PeekableQueue extends Queue {\n  peek() {\n    return this.queue[0];\n  }\n}\n\n\n\n\n\n9.3 Methods can return this to help with method chaining.\n\/\/ bad\nJedi.prototype.jump = function () {\n  this.jumping = true;\n  return true;\n};\n\nJedi.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nconst luke = new Jedi();\nluke.jump(); \/\/ => true\nluke.setHeight(20); \/\/ => undefined\n\n\/\/ good\nclass Jedi {\n  jump() {\n    this.jumping = true;\n    return this;\n  }\n\n  setHeight(height) {\n    this.height = height;\n    return this;\n  }\n}\n\nconst luke = new Jedi();\n\nluke.jump()\n  .setHeight(20);\n\n\n\n\n\n9.4 It\u2019s okay to write a custom toString() method, just make sure it works successfully and causes no side effects.\nclass Jedi {\n  constructor(options = {}) {\n    this.name = options.name || 'no name';\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  toString() {\n    return `Jedi - ${this.getName()}`;\n  }\n}\n\n\n\n\n\n9.5 Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: no-useless-constructor\n\/\/ bad\nclass Jedi {\n  constructor() {}\n\n  getName() {\n    return this.name;\n  }\n}\n\n\/\/ bad\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n  }\n}\n\n\/\/ good\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n    this.name = 'Rey';\n  }\n}\n\n\n\n\n\n9.6 Avoid duplicate class members. eslint: no-dupe-class-members\n\nWhy? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.\n\n\/\/ bad\nclass Foo {\n  bar() { return 1; }\n  bar() { return 2; }\n}\n\n\/\/ good\nclass Foo {\n  bar() { return 1; }\n}\n\n\/\/ good\nclass Foo {\n  bar() { return 2; }\n}\n\n\n\n\n\n9.7 Class methods should use this or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: class-methods-use-this\n\/\/ bad\nclass Foo {\n  bar() {\n    console.log('bar');\n  }\n}\n\n\/\/ good - this is used\nclass Foo {\n  bar() {\n    console.log(this.bar);\n  }\n}\n\n\/\/ good - constructor is exempt\nclass Foo {\n  constructor() {\n    \/\/ ...\n  }\n}\n\n\/\/ good - static methods aren't expected to use this\nclass Foo {\n  static bar() {\n    console.log('bar');\n  }\n}\n\n\n\u2b06 back to top\nModules\n\n\n\n10.1 Always use modules (import\/export) over a non-standard module system. You can always transpile to your preferred module system.\n\nWhy? Modules are the future, let\u2019s start using the future now.\n\n\/\/ bad\nconst AirbnbStyleGuide = require('.\/AirbnbStyleGuide');\nmodule.exports = AirbnbStyleGuide.es6;\n\n\/\/ ok\nimport AirbnbStyleGuide from '.\/AirbnbStyleGuide';\nexport default AirbnbStyleGuide.es6;\n\n\/\/ best\nimport { es6 } from '.\/AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.2 Do not use wildcard imports.\n\nWhy? This makes sure you have a single default export.\n\n\/\/ bad\nimport * as AirbnbStyleGuide from '.\/AirbnbStyleGuide';\n\n\/\/ good\nimport AirbnbStyleGuide from '.\/AirbnbStyleGuide';\n\n\n\n\n\n10.3 And do not export directly from an import.\n\nWhy? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.\n\n\/\/ bad\n\/\/ filename es6.js\nexport { es6 as default } from '.\/AirbnbStyleGuide';\n\n\/\/ good\n\/\/ filename es6.js\nimport { es6 } from '.\/AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.4 Only import from a path in one place.\neslint: no-duplicate-imports\n\nWhy? Having multiple lines that import from the same path can make code harder to maintain.\n\n\/\/ bad\nimport foo from 'foo';\n\/\/ \u2026 some other imports \u2026 \/\/\nimport { named1, named2 } from 'foo';\n\n\/\/ good\nimport foo, { named1, named2 } from 'foo';\n\n\/\/ good\nimport foo, {\n  named1,\n  named2,\n} from 'foo';\n\n\n\n\n\n10.5 Do not export mutable bindings.\neslint: import\/no-mutable-exports\n\nWhy? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.\n\n\/\/ bad\nlet foo = 3;\nexport { foo };\n\n\/\/ good\nconst foo = 3;\nexport { foo };\n\n\n\n\n\n10.6 In modules with a single export, prefer default export over named export.\neslint: import\/prefer-default-export\n\nWhy? To encourage more files that only ever export one thing, which is better for readability and maintainability.\n\n\/\/ bad\nexport function foo() {}\n\n\/\/ good\nexport default function foo() {}\n\n\n\n\n\n10.7 Put all imports above non-import statements.\neslint: import\/first\n\nWhy? Since imports are hoisted, keeping them all at the top prevents surprising behavior.\n\n\/\/ bad\nimport foo from 'foo';\nfoo.init();\n\nimport bar from 'bar';\n\n\/\/ good\nimport foo from 'foo';\nimport bar from 'bar';\n\nfoo.init();\n\n\n\n\n\n10.8 Multiline imports should be indented just like multiline array and object literals.\neslint: object-curly-newline\n\nWhy? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.\n\n\/\/ bad\nimport {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';\n\n\/\/ good\nimport {\n  longNameA,\n  longNameB,\n  longNameC,\n  longNameD,\n  longNameE,\n} from 'path';\n\n\n\n\n\n10.9 Disallow Webpack loader syntax in module import statements.\neslint: import\/no-webpack-loader-syntax\n\nWhy? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in webpack.config.js.\n\n\/\/ bad\nimport fooSass from 'css!sass!foo.scss';\nimport barCss from 'style!css!bar.css';\n\n\/\/ good\nimport fooSass from 'foo.scss';\nimport barCss from 'bar.css';\n\n\n\n\n\n10.10 Do not include JavaScript filename extensions\neslint: import\/extensions\n\nWhy? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you're importing in every consumer.\n\n\/\/ bad\nimport foo from '.\/foo.js';\nimport bar from '.\/bar.jsx';\nimport baz from '.\/baz\/index.jsx';\n\n\/\/ good\nimport foo from '.\/foo';\nimport bar from '.\/bar';\nimport baz from '.\/baz';\n\n\n\u2b06 back to top\nIterators and Generators\n\n\n\n11.1 Don\u2019t use iterators. Prefer JavaScript\u2019s higher-order functions instead of loops like for-in or for-of. eslint: no-iterator no-restricted-syntax\n\nWhy? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.\n\n\nUse map() \/ every() \/ filter() \/ find() \/ findIndex() \/ reduce() \/ some() \/ ... to iterate over arrays, and Object.keys() \/ Object.values() \/ Object.entries() to produce arrays so you can iterate over objects.\n\nconst numbers = [1, 2, 3, 4, 5];\n\n\/\/ bad\nlet sum = 0;\nfor (let num of numbers) {\n  sum += num;\n}\nsum === 15;\n\n\/\/ good\nlet sum = 0;\nnumbers.forEach((num) => {\n  sum += num;\n});\nsum === 15;\n\n\/\/ best (use the functional force)\nconst sum = numbers.reduce((total, num) => total + num, 0);\nsum === 15;\n\n\/\/ bad\nconst increasedByOne = [];\nfor (let i = 0; i < numbers.length; i++) {\n  increasedByOne.push(numbers[i] + 1);\n}\n\n\/\/ good\nconst increasedByOne = [];\nnumbers.forEach((num) => {\n  increasedByOne.push(num + 1);\n});\n\n\/\/ best (keeping it functional)\nconst increasedByOne = numbers.map((num) => num + 1);\n\n\n\n\n\n11.2 Don\u2019t use generators for now.\n\nWhy? They don\u2019t transpile well to ES5.\n\n\n\n\n\n\n11.3 If you must use generators, or if you disregard our advice, make sure their function signature is spaced properly. eslint: generator-star-spacing\n\nWhy? function and * are part of the same conceptual keyword - * is not a modifier for function, function* is a unique construct, different from function.\n\n\/\/ bad\nfunction * foo() {\n  \/\/ ...\n}\n\n\/\/ bad\nconst bar = function * () {\n  \/\/ ...\n};\n\n\/\/ bad\nconst baz = function *() {\n  \/\/ ...\n};\n\n\/\/ bad\nconst quux = function*() {\n  \/\/ ...\n};\n\n\/\/ bad\nfunction*foo() {\n  \/\/ ...\n}\n\n\/\/ bad\nfunction *foo() {\n  \/\/ ...\n}\n\n\/\/ very bad\nfunction\n*\nfoo() {\n  \/\/ ...\n}\n\n\/\/ very bad\nconst wat = function\n*\n() {\n  \/\/ ...\n};\n\n\/\/ good\nfunction* foo() {\n  \/\/ ...\n}\n\n\/\/ good\nconst foo = function* () {\n  \/\/ ...\n};\n\n\n\u2b06 back to top\nProperties\n\n\n\n12.1 Use dot notation when accessing properties. eslint: dot-notation\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\n\/\/ bad\nconst isJedi = luke['jedi'];\n\n\/\/ good\nconst isJedi = luke.jedi;\n\n\n\n\n\n12.2 Use bracket notation [] when accessing properties with a variable.\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\nfunction getProp(prop) {\n  return luke[prop];\n}\n\nconst isJedi = getProp('jedi');\n\n\n\n\n\n12.3 Use exponentiation operator ** when calculating exponentiations. eslint: no-restricted-properties.\n\/\/ bad\nconst binary = Math.pow(2, 10);\n\n\/\/ good\nconst binary = 2 ** 10;\n\n\n\u2b06 back to top\nVariables\n\n\n\n13.1 Always use const or let to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: no-undef prefer-const\n\/\/ bad\nsuperPower = new SuperPower();\n\n\/\/ good\nconst superPower = new SuperPower();\n\n\n\n\n\n13.2 Use one const or let declaration per variable or assignment. eslint: one-var\n\nWhy? It\u2019s easier to add new variable declarations this way, and you never have to worry about swapping out a ; for a , or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.\n\n\/\/ bad\nconst items = getItems(),\n    goSportsTeam = true,\n    dragonball = 'z';\n\n\/\/ bad\n\/\/ (compare to above, and try to spot the mistake)\nconst items = getItems(),\n    goSportsTeam = true;\n    dragonball = 'z';\n\n\/\/ good\nconst items = getItems();\nconst goSportsTeam = true;\nconst dragonball = 'z';\n\n\n\n\n\n13.3 Group all your consts and then group all your lets.\n\nWhy? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.\n\n\/\/ bad\nlet i, len, dragonball,\n    items = getItems(),\n    goSportsTeam = true;\n\n\/\/ bad\nlet i;\nconst items = getItems();\nlet dragonball;\nconst goSportsTeam = true;\nlet len;\n\n\/\/ good\nconst goSportsTeam = true;\nconst items = getItems();\nlet dragonball;\nlet i;\nlet length;\n\n\n\n\n\n13.4 Assign variables where you need them, but place them in a reasonable place.\n\nWhy? let and const are block scoped and not function scoped.\n\n\/\/ bad - unnecessary function call\nfunction checkName(hasName) {\n  const name = getName();\n\n  if (hasName === 'test') {\n    return false;\n  }\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n\/\/ good\nfunction checkName(hasName) {\n  if (hasName === 'test') {\n    return false;\n  }\n\n  const name = getName();\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n\n\n\n\n13.5 Don\u2019t chain variable assignments. eslint: no-multi-assign\n\nWhy? Chaining variable assignments creates implicit global variables.\n\n\/\/ bad\n(function example() {\n  \/\/ JavaScript interprets this as\n  \/\/ let a = ( b = ( c = 1 ) );\n  \/\/ The let keyword only applies to variable a; variables b and c become\n  \/\/ global variables.\n  let a = b = c = 1;\n}());\n\nconsole.log(a); \/\/ throws ReferenceError\nconsole.log(b); \/\/ 1\nconsole.log(c); \/\/ 1\n\n\/\/ good\n(function example() {\n  let a = 1;\n  let b = a;\n  let c = a;\n}());\n\nconsole.log(a); \/\/ throws ReferenceError\nconsole.log(b); \/\/ throws ReferenceError\nconsole.log(c); \/\/ throws ReferenceError\n\n\/\/ the same applies for `const`\n\n\n\n\n\n13.6 Avoid using unary increments and decrements (++, --). eslint no-plusplus\n\nWhy? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like num += 1 instead of num++ or num ++. Disallowing unary increment and decrement statements also prevents you from pre-incrementing\/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.\n\n\/\/ bad\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum++;\n--num;\n\nlet sum = 0;\nlet truthyCount = 0;\nfor (let i = 0; i < array.length; i++) {\n  let value = array[i];\n  sum += value;\n  if (value) {\n    truthyCount++;\n  }\n}\n\n\/\/ good\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum += 1;\nnum -= 1;\n\nconst sum = array.reduce((a, b) => a + b, 0);\nconst truthyCount = array.filter(Boolean).length;\n\n\n\n\n\n13.7 Avoid linebreaks before or after = in an assignment. If your assignment violates max-len, surround the value in parens. eslint operator-linebreak.\n\nWhy? Linebreaks surrounding = can obfuscate the value of an assignment.\n\n\/\/ bad\nconst foo =\n  superLongLongLongLongLongLongLongLongFunctionName();\n\n\/\/ bad\nconst foo\n  = 'superLongLongLongLongLongLongLongLongString';\n\n\/\/ good\nconst foo = (\n  superLongLongLongLongLongLongLongLongFunctionName()\n);\n\n\/\/ good\nconst foo = 'superLongLongLongLongLongLongLongLongString';\n\n\n\n\n\n13.8 Disallow unused variables. eslint: no-unused-vars\n\nWhy? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.\n\n\/\/ bad\n\nvar some_unused_var = 42;\n\n\/\/ Write-only variables are not considered as used.\nvar y = 10;\ny = 5;\n\n\/\/ A read for a modification of itself is not considered as used.\nvar z = 0;\nz = z + 1;\n\n\/\/ Unused function arguments.\nfunction getX(x, y) {\n    return x;\n}\n\n\/\/ good\n\nfunction getXPlusY(x, y) {\n  return x + y;\n}\n\nvar x = 1;\nvar y = a + 2;\n\nalert(getXPlusY(x, y));\n\n\/\/ 'type' is ignored even if unused because it has a rest property sibling.\n\/\/ This is a form of extracting an object that omits the specified keys.\nvar { type, ...coords } = data;\n\/\/ 'coords' is now the 'data' object without its 'type' property.\n\n\n\u2b06 back to top\nHoisting\n\n\n\n14.1 var declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. const and let declarations are blessed with a new concept called Temporal Dead Zones (TDZ). It\u2019s important to know why typeof is no longer safe.\n\/\/ we know this wouldn\u2019t work (assuming there\n\/\/ is no notDefined global variable)\nfunction example() {\n  console.log(notDefined); \/\/ => throws a ReferenceError\n}\n\n\/\/ creating a variable declaration after you\n\/\/ reference the variable will work due to\n\/\/ variable hoisting. Note: the assignment\n\/\/ value of `true` is not hoisted.\nfunction example() {\n  console.log(declaredButNotAssigned); \/\/ => undefined\n  var declaredButNotAssigned = true;\n}\n\n\/\/ the interpreter is hoisting the variable\n\/\/ declaration to the top of the scope,\n\/\/ which means our example could be rewritten as:\nfunction example() {\n  let declaredButNotAssigned;\n  console.log(declaredButNotAssigned); \/\/ => undefined\n  declaredButNotAssigned = true;\n}\n\n\/\/ using const and let\nfunction example() {\n  console.log(declaredButNotAssigned); \/\/ => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned); \/\/ => throws a ReferenceError\n  const declaredButNotAssigned = true;\n}\n\n\n\n\n\n14.2 Anonymous function expressions hoist their variable name, but not the function assignment.\nfunction example() {\n  console.log(anonymous); \/\/ => undefined\n\n  anonymous(); \/\/ => TypeError anonymous is not a function\n\n  var anonymous = function () {\n    console.log('anonymous function expression');\n  };\n}\n\n\n\n\n\n14.3 Named function expressions hoist the variable name, not the function name or the function body.\nfunction example() {\n  console.log(named); \/\/ => undefined\n\n  named(); \/\/ => TypeError named is not a function\n\n  superPower(); \/\/ => ReferenceError superPower is not defined\n\n  var named = function superPower() {\n    console.log('Flying');\n  };\n}\n\n\/\/ the same is true when the function name\n\/\/ is the same as the variable name.\nfunction example() {\n  console.log(named); \/\/ => undefined\n\n  named(); \/\/ => TypeError named is not a function\n\n  var named = function named() {\n    console.log('named');\n  };\n}\n\n\n\n\n\n14.4 Function declarations hoist their name and the function body.\nfunction example() {\n  superPower(); \/\/ => Flying\n\n  function superPower() {\n    console.log('Flying');\n  }\n}\n\n\nFor more information refer to JavaScript Scoping & Hoisting by Ben Cherry.\n\n\n\u2b06 back to top\nComparison Operators & Equality\n\n\n15.1 Use === and !== over == and !=. eslint: eqeqeq\n\n\n\n\n15.2 Conditional statements such as the if statement evaluate their expression using coercion with the ToBoolean abstract method and always follow these simple rules:\n\nObjects evaluate to true\nUndefined evaluates to false\nNull evaluates to false\nBooleans evaluate to the value of the boolean\nNumbers evaluate to false if +0, -0, or NaN, otherwise true\nStrings evaluate to false if an empty string '', otherwise true\n\nif ([0] && []) {\n  \/\/ true\n  \/\/ an array (even an empty one) is an object, objects will evaluate to true\n}\n\n\n\n\n\n15.3 Use shortcuts for booleans, but explicit comparisons for strings and numbers.\n\/\/ bad\nif (isValid === true) {\n  \/\/ ...\n}\n\n\/\/ good\nif (isValid) {\n  \/\/ ...\n}\n\n\/\/ bad\nif (name) {\n  \/\/ ...\n}\n\n\/\/ good\nif (name !== '') {\n  \/\/ ...\n}\n\n\/\/ bad\nif (collection.length) {\n  \/\/ ...\n}\n\n\/\/ good\nif (collection.length > 0) {\n  \/\/ ...\n}\n\n\n\n\n15.4 For more information see Truth Equality and JavaScript by Angus Croll.\n\n\n\n\n15.5 Use braces to create blocks in case and default clauses that contain lexical declarations (e.g. let, const, function, and class). eslint: no-case-declarations\n\nWhy? Lexical declarations are visible in the entire switch block but only get initialized when assigned, which only happens when its case is reached. This causes problems when multiple case clauses attempt to define the same thing.\n\n\/\/ bad\nswitch (foo) {\n  case 1:\n    let x = 1;\n    break;\n  case 2:\n    const y = 2;\n    break;\n  case 3:\n    function f() {\n      \/\/ ...\n    }\n    break;\n  default:\n    class C {}\n}\n\n\/\/ good\nswitch (foo) {\n  case 1: {\n    let x = 1;\n    break;\n  }\n  case 2: {\n    const y = 2;\n    break;\n  }\n  case 3: {\n    function f() {\n      \/\/ ...\n    }\n    break;\n  }\n  case 4:\n    bar();\n    break;\n  default: {\n    class C {}\n  }\n}\n\n\n\n\n\n15.6 Ternaries should not be nested and generally be single line expressions. eslint: no-nested-ternary\n\/\/ bad\nconst foo = maybe1 > maybe2\n  ? \"bar\"\n  : value1 > value2 ? \"baz\" : null;\n\n\/\/ split into 2 separated ternary expressions\nconst maybeNull = value1 > value2 ? 'baz' : null;\n\n\/\/ better\nconst foo = maybe1 > maybe2\n  ? 'bar'\n  : maybeNull;\n\n\/\/ best\nconst foo = maybe1 > maybe2 ? 'bar' : maybeNull;\n\n\n\n\n\n15.7 Avoid unneeded ternary statements. eslint: no-unneeded-ternary\n\/\/ bad\nconst foo = a ? a : b;\nconst bar = c ? true : false;\nconst baz = c ? false : true;\n\n\/\/ good\nconst foo = a || b;\nconst bar = !!c;\nconst baz = !c;\n\n\n\n\n\n15.8 When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: +, -, and ** since their precedence is broadly understood. We recommend enclosing \/ and * in parentheses because their precedence can be ambiguous when they are mixed.\neslint: no-mixed-operators\n\nWhy? This improves readability and clarifies the developer\u2019s intention.\n\n\/\/ bad\nconst foo = a && b < 0 || c > 0 || d + 1 === 0;\n\n\/\/ bad\nconst bar = a ** b - 5 % d;\n\n\/\/ bad\n\/\/ one may be confused into thinking (a || b) && c\nif (a || b && c) {\n  return d;\n}\n\n\/\/ bad\nconst bar = a + b \/ c * d;\n\n\/\/ good\nconst foo = (a && b < 0) || c > 0 || (d + 1 === 0);\n\n\/\/ good\nconst bar = a ** b - (5 % d);\n\n\/\/ good\nif (a || (b && c)) {\n  return d;\n}\n\n\/\/ good\nconst bar = a + (b \/ c) * d;\n\n\n\u2b06 back to top\nBlocks\n\n\n\n16.1 Use braces with all multiline blocks. eslint: nonblock-statement-body-position\n\/\/ bad\nif (test)\n  return false;\n\n\/\/ good\nif (test) return false;\n\n\/\/ good\nif (test) {\n  return false;\n}\n\n\/\/ bad\nfunction foo() { return false; }\n\n\/\/ good\nfunction bar() {\n  return false;\n}\n\n\n\n\n\n16.2 If you\u2019re using multiline blocks with if and else, put else on the same line as your if block\u2019s closing brace. eslint: brace-style\n\/\/ bad\nif (test) {\n  thing1();\n  thing2();\n}\nelse {\n  thing3();\n}\n\n\/\/ good\nif (test) {\n  thing1();\n  thing2();\n} else {\n  thing3();\n}\n\n\n\n\n\n16.3 If an if block always executes a return statement, the subsequent else block is unnecessary. A return in an else if block following an if block that contains a return can be separated into multiple if blocks. eslint: no-else-return\n\/\/ bad\nfunction foo() {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\n\/\/ bad\nfunction cats() {\n  if (x) {\n    return x;\n  } else if (y) {\n    return y;\n  }\n}\n\n\/\/ bad\nfunction dogs() {\n  if (x) {\n    return x;\n  } else {\n    if (y) {\n      return y;\n    }\n  }\n}\n\n\/\/ good\nfunction foo() {\n  if (x) {\n    return x;\n  }\n\n  return y;\n}\n\n\/\/ good\nfunction cats() {\n  if (x) {\n    return x;\n  }\n\n  if (y) {\n    return y;\n  }\n}\n\n\/\/ good\nfunction dogs(x) {\n  if (x) {\n    if (z) {\n      return y;\n    }\n  } else {\n    return z;\n  }\n}\n\n\n\u2b06 back to top\nControl Statements\n\n\n\n17.1 In case your control statement (if, while etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.\n\nWhy? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.\n\n\/\/ bad\nif ((foo === 123 || bar === 'abc') && doesItLookGoodWhenItBecomesThatLong() && isThisReallyHappening()) {\n  thing1();\n}\n\n\/\/ bad\nif (foo === 123 &&\n  bar === 'abc') {\n  thing1();\n}\n\n\/\/ bad\nif (foo === 123\n  && bar === 'abc') {\n  thing1();\n}\n\n\/\/ bad\nif (\n  foo === 123 &&\n  bar === 'abc'\n) {\n  thing1();\n}\n\n\/\/ good\nif (\n  foo === 123\n  && bar === 'abc'\n) {\n  thing1();\n}\n\n\/\/ good\nif (\n  (foo === 123 || bar === 'abc')\n  && doesItLookGoodWhenItBecomesThatLong()\n  && isThisReallyHappening()\n) {\n  thing1();\n}\n\n\/\/ good\nif (foo === 123 && bar === 'abc') {\n  thing1();\n}\n\n\n\n\n\n17.2 Don't use selection operators in place of control statements.\n\/\/ bad\n!isRunning && startRunning();\n\n\/\/ good\nif (!isRunning) {\n  startRunning();\n}\n\n\n\u2b06 back to top\nComments\n\n\n\n18.1 Use \/** ... *\/ for multiline comments.\n\/\/ bad\n\/\/ make() returns a new element\n\/\/ based on the passed in tag name\n\/\/\n\/\/ @param {String} tag\n\/\/ @return {Element} element\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\/\/ good\n\/**\n * make() returns a new element\n * based on the passed-in tag name\n *\/\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\n\n\n\n18.2 Use \/\/ for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it\u2019s on the first line of a block.\n\/\/ bad\nconst active = true;  \/\/ is current tab\n\n\/\/ good\n\/\/ is current tab\nconst active = true;\n\n\/\/ bad\nfunction getType() {\n  console.log('fetching type...');\n  \/\/ set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\/\/ good\nfunction getType() {\n  console.log('fetching type...');\n\n  \/\/ set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\/\/ also good\nfunction getType() {\n  \/\/ set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\n\n\n\n18.3 Start all comments with a space to make it easier to read. eslint: spaced-comment\n\/\/ bad\n\/\/is current tab\nconst active = true;\n\n\/\/ good\n\/\/ is current tab\nconst active = true;\n\n\/\/ bad\n\/**\n *make() returns a new element\n *based on the passed-in tag name\n *\/\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\/\/ good\n\/**\n * make() returns a new element\n * based on the passed-in tag name\n *\/\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\n\n\n18.4 Prefixing your comments with FIXME or TODO helps other developers quickly understand if you\u2019re pointing out a problem that needs to be revisited, or if you\u2019re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are FIXME: -- need to figure this out or TODO: -- need to implement.\n\n\n\n\n18.5 Use \/\/ FIXME: to annotate problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    \/\/ FIXME: shouldn\u2019t use a global here\n    total = 0;\n  }\n}\n\n\n\n\n\n18.6 Use \/\/ TODO: to annotate solutions to problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    \/\/ TODO: total should be configurable by an options param\n    this.total = 0;\n  }\n}\n\n\n\u2b06 back to top\nWhitespace\n\n\n\n19.1 Use soft tabs (space character) set to 2 spaces. eslint: indent\n\/\/ bad\nfunction foo() {\n\u2219\u2219\u2219\u2219let name;\n}\n\n\/\/ bad\nfunction bar() {\n\u2219let name;\n}\n\n\/\/ good\nfunction baz() {\n\u2219\u2219let name;\n}\n\n\n\n\n\n19.2 Place 1 space before the leading brace. eslint: space-before-blocks\n\/\/ bad\nfunction test(){\n  console.log('test');\n}\n\n\/\/ good\nfunction test() {\n  console.log('test');\n}\n\n\/\/ bad\ndog.set('attr',{\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n\/\/ good\ndog.set('attr', {\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n\n\n\n\n19.3 Place 1 space before the opening parenthesis in control statements (if, while etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: keyword-spacing\n\/\/ bad\nif(isJedi) {\n  fight ();\n}\n\n\/\/ good\nif (isJedi) {\n  fight();\n}\n\n\/\/ bad\nfunction fight () {\n  console.log ('Swooosh!');\n}\n\n\/\/ good\nfunction fight() {\n  console.log('Swooosh!');\n}\n\n\n\n\n\n19.4 Set off operators with spaces. eslint: space-infix-ops\n\/\/ bad\nconst x=y+5;\n\n\/\/ good\nconst x = y + 5;\n\n\n\n\n\n19.5 End files with a single newline character. eslint: eol-last\n\/\/ bad\nimport { es6 } from '.\/AirbnbStyleGuide';\n  \/\/ ...\nexport default es6;\n\/\/ bad\nimport { es6 } from '.\/AirbnbStyleGuide';\n  \/\/ ...\nexport default es6;\u21b5\n\u21b5\n\/\/ good\nimport { es6 } from '.\/AirbnbStyleGuide';\n  \/\/ ...\nexport default es6;\u21b5\n\n\n\n\n\n19.6 Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which\nemphasizes that the line is a method call, not a new statement. eslint: newline-per-chained-call no-whitespace-before-property\n\/\/ bad\n$('#items').find('.selected').highlight().end().find('.open').updateCount();\n\n\/\/ bad\n$('#items').\n  find('.selected').\n    highlight().\n    end().\n  find('.open').\n    updateCount();\n\n\/\/ good\n$('#items')\n  .find('.selected')\n    .highlight()\n    .end()\n  .find('.open')\n    .updateCount();\n\n\/\/ bad\nconst leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)\n    .attr('width', (radius + margin) * 2).append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n\/\/ good\nconst leds = stage.selectAll('.led')\n    .data(data)\n  .enter().append('svg:svg')\n    .classed('led', true)\n    .attr('width', (radius + margin) * 2)\n  .append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n\/\/ good\nconst leds = stage.selectAll('.led').data(data);\n\n\n\n\n\n19.7 Leave a blank line after blocks and before the next statement.\n\/\/ bad\nif (foo) {\n  return bar;\n}\nreturn baz;\n\n\/\/ good\nif (foo) {\n  return bar;\n}\n\nreturn baz;\n\n\/\/ bad\nconst obj = {\n  foo() {\n  },\n  bar() {\n  },\n};\nreturn obj;\n\n\/\/ good\nconst obj = {\n  foo() {\n  },\n\n  bar() {\n  },\n};\n\nreturn obj;\n\n\/\/ bad\nconst arr = [\n  function foo() {\n  },\n  function bar() {\n  },\n];\nreturn arr;\n\n\/\/ good\nconst arr = [\n  function foo() {\n  },\n\n  function bar() {\n  },\n];\n\nreturn arr;\n\n\n\n\n\n19.8 Do not pad your blocks with blank lines. eslint: padded-blocks\n\/\/ bad\nfunction bar() {\n\n  console.log(foo);\n\n}\n\n\/\/ bad\nif (baz) {\n\n  console.log(qux);\n} else {\n  console.log(foo);\n\n}\n\n\/\/ bad\nclass Foo {\n\n  constructor(bar) {\n    this.bar = bar;\n  }\n}\n\n\/\/ good\nfunction bar() {\n  console.log(foo);\n}\n\n\/\/ good\nif (baz) {\n  console.log(qux);\n} else {\n  console.log(foo);\n}\n\n\n\n\n\n19.9 Do not use multiple blank lines to pad your code. eslint: no-multiple-empty-lines\n\/\/ bad\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n\n\n    this.email = email;\n\n\n    this.setAge(birthday);\n  }\n\n\n  setAge(birthday) {\n    const today = new Date();\n\n\n    const age = this.getAge(today, birthday);\n\n\n    this.age = age;\n  }\n\n\n  getAge(today, birthday) {\n    \/\/ ..\n  }\n}\n\n\/\/ good\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n    this.email = email;\n    this.setAge(birthday);\n  }\n\n  setAge(birthday) {\n    const today = new Date();\n    const age = getAge(today, birthday);\n    this.age = age;\n  }\n\n  getAge(today, birthday) {\n    \/\/ ..\n  }\n}\n\n\n\n\n\n19.10 Do not add spaces inside parentheses. eslint: space-in-parens\n\/\/ bad\nfunction bar( foo ) {\n  return foo;\n}\n\n\/\/ good\nfunction bar(foo) {\n  return foo;\n}\n\n\/\/ bad\nif ( foo ) {\n  console.log(foo);\n}\n\n\/\/ good\nif (foo) {\n  console.log(foo);\n}\n\n\n\n\n\n19.11 Do not add spaces inside brackets. eslint: array-bracket-spacing\n\/\/ bad\nconst foo = [ 1, 2, 3 ];\nconsole.log(foo[ 0 ]);\n\n\/\/ good\nconst foo = [1, 2, 3];\nconsole.log(foo[0]);\n\n\n\n\n\n19.12 Add spaces inside curly braces. eslint: object-curly-spacing\n\/\/ bad\nconst foo = {clark: 'kent'};\n\n\/\/ good\nconst foo = { clark: 'kent' };\n\n\n\n\n\n19.13 Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per above, long strings are exempt from this rule, and should not be broken up. eslint: max-len\n\nWhy? This ensures readability and maintainability.\n\n\/\/ bad\nconst foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy;\n\n\/\/ bad\n$.ajax({ method: 'POST', url: 'https:\/\/airbnb.com\/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.'));\n\n\/\/ good\nconst foo = jsonData\n  && jsonData.foo\n  && jsonData.foo.bar\n  && jsonData.foo.bar.baz\n  && jsonData.foo.bar.baz.quux\n  && jsonData.foo.bar.baz.quux.xyzzy;\n\n\/\/ good\n$.ajax({\n  method: 'POST',\n  url: 'https:\/\/airbnb.com\/',\n  data: { name: 'John' },\n})\n  .done(() => console.log('Congratulations!'))\n  .fail(() => console.log('You have failed this city.'));\n\n\n\n\n\n19.14 Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: block-spacing\n\/\/ bad\nfunction foo() {return true;}\nif (foo) { bar = 0;}\n\n\/\/ good\nfunction foo() { return true; }\nif (foo) { bar = 0; }\n\n\n\n\n\n19.15 Avoid spaces before commas and require a space after commas. eslint: comma-spacing\n\/\/ bad\nvar foo = 1,bar = 2;\nvar arr = [1 , 2];\n\n\/\/ good\nvar foo = 1, bar = 2;\nvar arr = [1, 2];\n\n\n\n\n\n19.16 Enforce spacing inside of computed property brackets. eslint: computed-property-spacing\n\/\/ bad\nobj[foo ]\nobj[ 'foo']\nvar x = {[ b ]: a}\nobj[foo[ bar ]]\n\n\/\/ good\nobj[foo]\nobj['foo']\nvar x = { [b]: a }\nobj[foo[bar]]\n\n\n\n\n\n19.17 Avoid spaces between functions and their invocations. eslint: func-call-spacing\n\/\/ bad\nfunc ();\n\nfunc\n();\n\n\/\/ good\nfunc();\n\n\n\n\n\n19.18 Enforce spacing between keys and values in object literal properties. eslint: key-spacing\n\/\/ bad\nvar obj = { foo : 42 };\nvar obj2 = { foo:42 };\n\n\/\/ good\nvar obj = { foo: 42 };\n\n\n\n\n19.19 Avoid trailing spaces at the end of lines. eslint: no-trailing-spaces\n\n\n\n\n19.20 Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: no-multiple-empty-lines\n\/\/ bad - multiple empty lines\nvar x = 1;\n\n\nvar y = 2;\n\n\/\/ bad - 2+ newlines at end of file\nvar x = 1;\nvar y = 2;\n\n\n\/\/ bad - 1+ newline(s) at beginning of file\n\nvar x = 1;\nvar y = 2;\n\n\/\/ good\nvar x = 1;\nvar y = 2;\n\n\n\u2b06 back to top\nCommas\n\n\n\n20.1 Leading commas: Nope. eslint: comma-style\n\/\/ bad\nconst story = [\n    once\n  , upon\n  , aTime\n];\n\n\/\/ good\nconst story = [\n  once,\n  upon,\n  aTime,\n];\n\n\/\/ bad\nconst hero = {\n    firstName: 'Ada'\n  , lastName: 'Lovelace'\n  , birthYear: 1815\n  , superPower: 'computers'\n};\n\n\/\/ good\nconst hero = {\n  firstName: 'Ada',\n  lastName: 'Lovelace',\n  birthYear: 1815,\n  superPower: 'computers',\n};\n\n\n\n\n\n20.2 Additional trailing comma: Yup. eslint: comma-dangle\n\nWhy? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don\u2019t have to worry about the trailing comma problem in legacy browsers.\n\n\/\/ bad - git diff without trailing comma\nconst hero = {\n     firstName: 'Florence',\n-    lastName: 'Nightingale'\n+    lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing']\n};\n\n\/\/ good - git diff with trailing comma\nconst hero = {\n     firstName: 'Florence',\n     lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing'],\n};\n\/\/ bad\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully'\n};\n\nconst heroes = [\n  'Batman',\n  'Superman'\n];\n\n\/\/ good\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully',\n};\n\nconst heroes = [\n  'Batman',\n  'Superman',\n];\n\n\/\/ bad\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf\n) {\n  \/\/ does nothing\n}\n\n\/\/ good\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n) {\n  \/\/ does nothing\n}\n\n\/\/ good (note that a comma must not appear after a \"rest\" element)\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n) {\n  \/\/ does nothing\n}\n\n\/\/ bad\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf\n);\n\n\/\/ good\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n);\n\n\/\/ good (note that a comma must not appear after a \"rest\" element)\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n);\n\n\n\u2b06 back to top\nSemicolons\n\n\n\n21.1 Yup. eslint: semi\n\nWhy? When JavaScript encounters a line break without a semicolon, it uses a set of rules called Automatic Semicolon Insertion to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.\n\n\/\/ bad - raises exception\nconst luke = {}\nconst leia = {}\n[luke, leia].forEach((jedi) => jedi.father = 'vader')\n\n\/\/ bad - raises exception\nconst reaction = \"No! That\u2019s impossible!\"\n(async function meanwhileOnTheFalcon() {\n  \/\/ handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  \/\/ ...\n}())\n\n\/\/ bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!\nfunction foo() {\n  return\n    'search your feelings, you know it to be foo'\n}\n\n\/\/ good\nconst luke = {};\nconst leia = {};\n[luke, leia].forEach((jedi) => {\n  jedi.father = 'vader';\n});\n\n\/\/ good\nconst reaction = \"No! That\u2019s impossible!\";\n(async function meanwhileOnTheFalcon() {\n  \/\/ handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  \/\/ ...\n}());\n\n\/\/ good\nfunction foo() {\n  return 'search your feelings, you know it to be foo';\n}\nRead more.\n\n\n\u2b06 back to top\nType Casting & Coercion\n\n\n22.1 Perform type coercion at the beginning of the statement.\n\n\n\n\n22.2 Strings: eslint: no-new-wrappers\n\/\/ => this.reviewScore = 9;\n\n\/\/ bad\nconst totalScore = new String(this.reviewScore); \/\/ typeof totalScore is \"object\" not \"string\"\n\n\/\/ bad\nconst totalScore = this.reviewScore + ''; \/\/ invokes this.reviewScore.valueOf()\n\n\/\/ bad\nconst totalScore = this.reviewScore.toString(); \/\/ isn\u2019t guaranteed to return a string\n\n\/\/ good\nconst totalScore = String(this.reviewScore);\n\n\n\n\n\n22.3 Numbers: Use Number for type casting and parseInt always with a radix for parsing strings. eslint: radix no-new-wrappers\n\nWhy? The parseInt function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is undefined or 0, it is assumed to be 10 except when the number begins with the character pairs 0x or 0X, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.\n\nconst inputValue = '4';\n\n\/\/ bad\nconst val = new Number(inputValue);\n\n\/\/ bad\nconst val = +inputValue;\n\n\/\/ bad\nconst val = inputValue >> 0;\n\n\/\/ bad\nconst val = parseInt(inputValue);\n\n\/\/ good\nconst val = Number(inputValue);\n\n\/\/ good\nconst val = parseInt(inputValue, 10);\n\n\n\n\n\n22.4 If for whatever reason you are doing something wild and parseInt is your bottleneck and need to use Bitshift for performance reasons, leave a comment explaining why and what you\u2019re doing.\n\/\/ good\n\/**\n * parseInt was the reason my code was slow.\n * Bitshifting the String to coerce it to a\n * Number made it a lot faster.\n *\/\nconst val = inputValue >> 0;\n\n\n\n\n\n22.5 Note: Be careful when using bitshift operations. Numbers are represented as 64-bit values, but bitshift operations always return a 32-bit integer (source). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. Discussion. Largest signed 32-bit Int is 2,147,483,647:\n2147483647 >> 0; \/\/ => 2147483647\n2147483648 >> 0; \/\/ => -2147483648\n2147483649 >> 0; \/\/ => -2147483647\n\n\n\n\n\n22.6 Booleans: eslint: no-new-wrappers\nconst age = 0;\n\n\/\/ bad\nconst hasAge = new Boolean(age);\n\n\/\/ good\nconst hasAge = Boolean(age);\n\n\/\/ best\nconst hasAge = !!age;\n\n\n\u2b06 back to top\nNaming Conventions\n\n\n\n23.1 Avoid single letter names. Be descriptive with your naming. eslint: id-length\n\/\/ bad\nfunction q() {\n  \/\/ ...\n}\n\n\/\/ good\nfunction query() {\n  \/\/ ...\n}\n\n\n\n\n\n23.2 Use camelCase when naming objects, functions, and instances. eslint: camelcase\n\/\/ bad\nconst OBJEcttsssss = {};\nconst this_is_my_object = {};\nfunction c() {}\n\n\/\/ good\nconst thisIsMyObject = {};\nfunction thisIsMyFunction() {}\n\n\n\n\n\n23.3 Use PascalCase only when naming constructors or classes. eslint: new-cap\n\/\/ bad\nfunction user(options) {\n  this.name = options.name;\n}\n\nconst bad = new user({\n  name: 'nope',\n});\n\n\/\/ good\nclass User {\n  constructor(options) {\n    this.name = options.name;\n  }\n}\n\nconst good = new User({\n  name: 'yup',\n});\n\n\n\n\n\n23.4 Do not use trailing or leading underscores. eslint: no-underscore-dangle\n\nWhy? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean \u201cprivate\u201d, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won\u2019t count as breaking, or that tests aren\u2019t needed. tl;dr: if you want something to be \u201cprivate\u201d, it must not be observably present.\n\n\/\/ bad\nthis.__firstName__ = 'Panda';\nthis.firstName_ = 'Panda';\nthis._firstName = 'Panda';\n\n\/\/ good\nthis.firstName = 'Panda';\n\n\/\/ good, in environments where WeakMaps are available\n\/\/ see https:\/\/kangax.github.io\/compat-table\/es6\/#test-WeakMap\nconst firstNames = new WeakMap();\nfirstNames.set(this, 'Panda');\n\n\n\n\n\n23.5 Don\u2019t save references to this. Use arrow functions or Function#bind.\n\/\/ bad\nfunction foo() {\n  const self = this;\n  return function () {\n    console.log(self);\n  };\n}\n\n\/\/ bad\nfunction foo() {\n  const that = this;\n  return function () {\n    console.log(that);\n  };\n}\n\n\/\/ good\nfunction foo() {\n  return () => {\n    console.log(this);\n  };\n}\n\n\n\n\n\n23.6 A base filename should exactly match the name of its default export.\n\/\/ file 1 contents\nclass CheckBox {\n  \/\/ ...\n}\nexport default CheckBox;\n\n\/\/ file 2 contents\nexport default function fortyTwo() { return 42; }\n\n\/\/ file 3 contents\nexport default function insideDirectory() {}\n\n\/\/ in some other file\n\/\/ bad\nimport CheckBox from '.\/checkBox'; \/\/ PascalCase import\/export, camelCase filename\nimport FortyTwo from '.\/FortyTwo'; \/\/ PascalCase import\/filename, camelCase export\nimport InsideDirectory from '.\/InsideDirectory'; \/\/ PascalCase import\/filename, camelCase export\n\n\/\/ bad\nimport CheckBox from '.\/check_box'; \/\/ PascalCase import\/export, snake_case filename\nimport forty_two from '.\/forty_two'; \/\/ snake_case import\/filename, camelCase export\nimport inside_directory from '.\/inside_directory'; \/\/ snake_case import, camelCase export\nimport index from '.\/inside_directory\/index'; \/\/ requiring the index file explicitly\nimport insideDirectory from '.\/insideDirectory\/index'; \/\/ requiring the index file explicitly\n\n\/\/ good\nimport CheckBox from '.\/CheckBox'; \/\/ PascalCase export\/import\/filename\nimport fortyTwo from '.\/fortyTwo'; \/\/ camelCase export\/import\/filename\nimport insideDirectory from '.\/insideDirectory'; \/\/ camelCase export\/import\/directory name\/implicit \"index\"\n\/\/ ^ supports both insideDirectory.js and insideDirectory\/index.js\n\n\n\n\n\n23.7 Use camelCase when you export-default a function. Your filename should be identical to your function\u2019s name.\nfunction makeStyleGuide() {\n  \/\/ ...\n}\n\nexport default makeStyleGuide;\n\n\n\n\n\n23.8 Use PascalCase when you export a constructor \/ class \/ singleton \/ function library \/ bare object.\nconst AirbnbStyleGuide = {\n  es6: {\n  },\n};\n\nexport default AirbnbStyleGuide;\n\n\n\n\n\n23.9 Acronyms and initialisms should always be all uppercased, or all lowercased.\n\nWhy? Names are for readability, not to appease a computer algorithm.\n\n\/\/ bad\nimport SmsContainer from '.\/containers\/SmsContainer';\n\n\/\/ bad\nconst HttpRequests = [\n  \/\/ ...\n];\n\n\/\/ good\nimport SMSContainer from '.\/containers\/SMSContainer';\n\n\/\/ good\nconst HTTPRequests = [\n  \/\/ ...\n];\n\n\/\/ also good\nconst httpRequests = [\n  \/\/ ...\n];\n\n\/\/ best\nimport TextMessageContainer from '.\/containers\/TextMessageContainer';\n\n\/\/ best\nconst requests = [\n  \/\/ ...\n];\n\n\n\n\n\n23.10 You may optionally uppercase a constant only if it (1) is exported, (2) is a const (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.\n\nWhy? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.\n\n\nWhat about all const variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.\nWhat about exported objects? - Uppercase at the top level of export (e.g. EXPORTED_OBJECT.key) and maintain that all nested properties do not change.\n\n\/\/ bad\nconst PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';\n\n\/\/ bad\nexport const THING_TO_BE_CHANGED = 'should obviously not be uppercased';\n\n\/\/ bad\nexport let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';\n\n\/\/ ---\n\n\/\/ allowed but does not supply semantic value\nexport const apiKey = 'SOMEKEY';\n\n\/\/ better in most cases\nexport const API_KEY = 'SOMEKEY';\n\n\/\/ ---\n\n\/\/ bad - unnecessarily uppercases key while adding no semantic value\nexport const MAPPING = {\n  KEY: 'value'\n};\n\n\/\/ good\nexport const MAPPING = {\n  key: 'value'\n};\n\n\n\u2b06 back to top\nAccessors\n\n\n24.1 Accessor functions for properties are not required.\n\n\n\n\n24.2 Do not use JavaScript getters\/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use getVal() and setVal('hello').\n\/\/ bad\nclass Dragon {\n  get age() {\n    \/\/ ...\n  }\n\n  set age(value) {\n    \/\/ ...\n  }\n}\n\n\/\/ good\nclass Dragon {\n  getAge() {\n    \/\/ ...\n  }\n\n  setAge(value) {\n    \/\/ ...\n  }\n}\n\n\n\n\n\n24.3 If the property\/method is a boolean, use isVal() or hasVal().\n\/\/ bad\nif (!dragon.age()) {\n  return false;\n}\n\n\/\/ good\nif (!dragon.hasAge()) {\n  return false;\n}\n\n\n\n\n\n24.4 It\u2019s okay to create get() and set() functions, but be consistent.\nclass Jedi {\n  constructor(options = {}) {\n    const lightsaber = options.lightsaber || 'blue';\n    this.set('lightsaber', lightsaber);\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n\n  get(key) {\n    return this[key];\n  }\n}\n\n\n\u2b06 back to top\nEvents\n\n\n\n25.1 When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a \"hash\") instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:\n\/\/ bad\n$(this).trigger('listingUpdated', listing.id);\n\n\/\/ ...\n\n$(this).on('listingUpdated', (e, listingID) => {\n  \/\/ do something with listingID\n});\nprefer:\n\/\/ good\n$(this).trigger('listingUpdated', { listingID: listing.id });\n\n\/\/ ...\n\n$(this).on('listingUpdated', (e, data) => {\n  \/\/ do something with data.listingID\n});\n\n\n\u2b06 back to top\njQuery\n\n\n\n26.1 Prefix jQuery object variables with a $.\n\/\/ bad\nconst sidebar = $('.sidebar');\n\n\/\/ good\nconst $sidebar = $('.sidebar');\n\n\/\/ good\nconst $sidebarBtn = $('.sidebar-btn');\n\n\n\n\n\n26.2 Cache jQuery lookups.\n\/\/ bad\nfunction setSidebar() {\n  $('.sidebar').hide();\n\n  \/\/ ...\n\n  $('.sidebar').css({\n    'background-color': 'pink',\n  });\n}\n\n\/\/ good\nfunction setSidebar() {\n  const $sidebar = $('.sidebar');\n  $sidebar.hide();\n\n  \/\/ ...\n\n  $sidebar.css({\n    'background-color': 'pink',\n  });\n}\n\n\n\n\n26.3 For DOM queries use Cascading $('.sidebar ul') or parent > child $('.sidebar > ul'). jsPerf\n\n\n\n\n26.4 Use find with scoped jQuery object queries.\n\/\/ bad\n$('ul', '.sidebar').hide();\n\n\/\/ bad\n$('.sidebar').find('ul').hide();\n\n\/\/ good\n$('.sidebar ul').hide();\n\n\/\/ good\n$('.sidebar > ul').hide();\n\n\/\/ good\n$sidebar.find('ul').hide();\n\n\n\u2b06 back to top\nECMAScript 5 Compatibility\n\n\n27.1 Refer to Kangax\u2019s ES5 compatibility table.\n\n\u2b06 back to top\n\nECMAScript 6+ (ES 2015+) Styles\n\n\n28.1 This is a collection of links to the various ES6+ features.\n\n\nArrow Functions\nClasses\nObject Shorthand\nObject Concise\nObject Computed Properties\nTemplate Strings\nDestructuring\nDefault Parameters\nRest\nArray Spreads\nLet and Const\nExponentiation Operator\nIterators and Generators\nModules\n\n\n\n\n28.2 Do not use TC39 proposals that have not reached stage 3.\n\nWhy? They are not finalized, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.\n\n\n\n\u2b06 back to top\nStandard Library\nThe Standard Library\ncontains utilities that are functionally broken but remain for legacy reasons.\n\n\n\n29.1 Use Number.isNaN instead of global isNaN.\neslint: no-restricted-globals\n\nWhy? The global isNaN coerces non-numbers to numbers, returning true for anything that coerces to NaN.\nIf this behavior is desired, make it explicit.\n\n\/\/ bad\nisNaN('1.2'); \/\/ false\nisNaN('1.2.3'); \/\/ true\n\n\/\/ good\nNumber.isNaN('1.2.3'); \/\/ false\nNumber.isNaN(Number('1.2.3')); \/\/ true\n\n\n\n\n\n29.2 Use Number.isFinite instead of global isFinite.\neslint: no-restricted-globals\n\nWhy? The global isFinite coerces non-numbers to numbers, returning true for anything that coerces to a finite number.\nIf this behavior is desired, make it explicit.\n\n\/\/ bad\nisFinite('2e3'); \/\/ true\n\n\/\/ good\nNumber.isFinite('2e3'); \/\/ false\nNumber.isFinite(parseInt('2e3', 10)); \/\/ true\n\n\n\u2b06 back to top\nTesting\n\n\n\n30.1 Yup.\nfunction foo() {\n  return true;\n}\n\n\n\n\n30.2 No, but seriously:\n\nWhichever testing framework you use, you should be writing tests!\nStrive to write many small pure functions, and minimize where mutations occur.\nBe cautious about stubs and mocks - they can make your tests more brittle.\nWe primarily use mocha and jest at Airbnb. tape is also used occasionally for small, separate modules.\n100% test coverage is a good goal to strive for, even if it\u2019s not always practical to reach it.\nWhenever you fix a bug, write a regression test. A bug fixed without a regression test is almost certainly going to break again in the future.\n\n\n\n\u2b06 back to top\nPerformance\n\nOn Layout & Web Performance\nString vs Array Concat\nTry\/Catch Cost In a Loop\nBang Function\njQuery Find vs Context, Selector\ninnerHTML vs textContent for script text\nLong String Concatenation\nAre JavaScript functions like map(), reduce(), and filter() optimized for traversing arrays?\nLoading...\n\n\u2b06 back to top\nResources\nLearning ES6+\n\nLatest ECMA spec\nExploringJS\nES6 Compatibility Table\nComprehensive Overview of ES6 Features\n\nRead This\n\nStandard ECMA-262\n\nTools\n\nCode Style Linters\n\nESlint - Airbnb Style .eslintrc\nJSHint - Airbnb Style .jshintrc\n\n\nNeutrino Preset - @neutrinojs\/airbnb\n\nOther Style Guides\n\nGoogle JavaScript Style Guide\nGoogle JavaScript Style Guide (Old)\njQuery Core Style Guidelines\nPrinciples of Writing Consistent, Idiomatic JavaScript\nStandardJS\n\nOther Styles\n\nNaming this in nested functions - Christian Johansen\nConditional Callbacks - Ross Allen\nPopular JavaScript Coding Conventions on GitHub - JeongHoon Byun\nMultiple var statements in JavaScript, not superfluous - Ben Alman\n\nFurther Reading\n\nUnderstanding JavaScript Closures - Angus Croll\nBasic JavaScript for the impatient programmer - Dr. Axel Rauschmayer\nYou Might Not Need jQuery - Zack Bloom & Adam Schwartz\nES6 Features - Luke Hoban\nFrontend Guidelines - Benjamin De Cock\n\nBooks\n\nJavaScript: The Good Parts - Douglas Crockford\nJavaScript Patterns - Stoyan Stefanov\nPro JavaScript Design Patterns - Ross Harmes and Dustin Diaz\nHigh Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders\nMaintainable JavaScript - Nicholas C. Zakas\nJavaScript Web Applications - Alex MacCaw\nPro JavaScript Techniques - John Resig\nSmashing Node.js: JavaScript Everywhere - Guillermo Rauch\nSecrets of the JavaScript Ninja - John Resig and Bear Bibeault\nHuman JavaScript - Henrik Joreteg\nSuperhero.js - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy\nJSBooks - Julien Bouquillon\nThird Party JavaScript - Ben Vinegar and Anton Kovalyov\nEffective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman\nEloquent JavaScript - Marijn Haverbeke\nYou Don\u2019t Know JS: ES6 & Beyond - Kyle Simpson\n\nBlogs\n\nJavaScript Weekly\nJavaScript, JavaScript...\nBocoup Weblog\nAdequately Good\nNCZOnline\nPerfection Kills\nBen Alman\nDmitry Baranovskiy\nnettuts\n\nPodcasts\n\nJavaScript Air\nJavaScript Jabber\n\n\u2b06 back to top\nIn the Wild\nThis is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.\n\n123erfasst: 123erfasst\/javascript\n3blades: 3Blades\n4Catalyzer: 4Catalyzer\/javascript\nAan Zee: AanZee\/javascript\nAdult Swim: adult-swim\/javascript\nAirbnb: airbnb\/javascript\nAltSchool: AltSchool\/javascript\nApartmint: apartmint\/javascript\nAscribe: ascribe\/javascript\nAvalara: avalara\/javascript\nAvant: avantcredit\/javascript\nAxept: axept\/javascript\nBashPros: BashPros\/javascript\nBillabong: billabong\/javascript\nBisk: bisk\nBonhomme: bonhommeparis\/javascript\nBrainshark: brainshark\/javascript\nCaseNine: CaseNine\/javascript\nCerner: Cerner\nChartboost: ChartBoost\/javascript-style-guide\nCoeur d'Alene Tribe: www.cdatribe-nsn.gov\nComparaOnline: comparaonline\/javascript\nCompass Learning: compasslearning\/javascript-style-guide\nDailyMotion: dailymotion\/javascript\nDoSomething: DoSomething\/eslint-config\nDigitpaint digitpaint\/javascript\nDrupal: www.drupal.org\nEcosia: ecosia\/javascript\nEvernote: evernote\/javascript-style-guide\nEvolution Gaming: evolution-gaming\/javascript\nEvozonJs: evozonjs\/javascript\nExactTarget: ExactTarget\/javascript\nExpensify Expensify\/Style-Guide\nFlexberry: Flexberry\/javascript-style-guide\nGawker Media: gawkermedia\nGeneral Electric: GeneralElectric\/javascript\nGeneration Tux: GenerationTux\/javascript\nGoodData: gooddata\/gdc-js-style\nGreenChef: greenchef\/javascript\nGrooveshark: grooveshark\/javascript\nGrupo-Abraxas: Grupo-Abraxas\/javascript\nHappeo: happeo\/javascript\nHoney: honeyscience\/javascript\nHow About We: howaboutwe\/javascript\nHuballin: huballin\nHubSpot: HubSpot\/javascript\nHyper: hyperoslo\/javascript-playbook\nInterCity Group: intercitygroup\/javascript-style-guide\nJam3: Jam3\/Javascript-Code-Conventions\nJeopardyBot: kesne\/jeopardy-bot\nJSSolutions: JSSolutions\/javascript\nKaplan Komputing: kaplankomputing\/javascript\nKickorStick: kickorstick\nKinetica Solutions: kinetica\/javascript\nLEINWAND: LEINWAND\/javascript\nLonely Planet: lonelyplanet\/javascript\nM2GEN: M2GEN\/javascript\nMighty Spring: mightyspring\/javascript\nMinnPost: MinnPost\/javascript\nMitocGroup: MitocGroup\/javascript\nModCloth: modcloth\/javascript\nMoney Advice Service: moneyadviceservice\/javascript\nMuber: muber\nNational Geographic: natgeo\nNimbl3: nimbl3\/javascript\nNullDev: NullDevCo\/JavaScript-Styleguide\nNulogy: nulogy\/javascript\nOrange Hill Development: orangehill\/javascript\nOrion Health: orionhealth\/javascript\nOutBoxSoft: OutBoxSoft\/javascript\nPeerby: Peerby\/javascript\nPier 1: Pier1\/javascript\nQotto: Qotto\/javascript-style-guide\nRazorfish: razorfish\/javascript-style-guide\nreddit: reddit\/styleguide\/javascript\nReact: facebook.github.io\/react\/contributing\/how-to-contribute.html#style-guide\nREI: reidev\/js-style-guide\nRipple: ripple\/javascript-style-guide\nSainsbury\u2019s Supermarkets: jsainsburyplc\nSeekingAlpha: seekingalpha\/javascript-style-guide\nShutterfly: shutterfly\/javascript\nSourcetoad: sourcetoad\/javascript\nSpringload: springload\nStratoDem Analytics: stratodem\/javascript\nSteelKiwi Development: steelkiwi\/javascript\nStudentSphere: studentsphere\/javascript\nSwoopApp: swoopapp\/javascript\nSysGarage: sysgarage\/javascript-style-guide\nSyzygy Warsaw: syzygypl\/javascript\nTarget: target\/javascript\nTerra: terra\nTheLadders: TheLadders\/javascript\nThe Nerdery: thenerdery\/javascript-standards\nTomify: tomprats\nTraitify: traitify\/eslint-config-traitify\nT4R Technology: T4R-Technology\/javascript\nUrbanSim: urbansim\nVoxFeed: VoxFeed\/javascript-style-guide\nWeBox Studio: weboxstudio\/javascript\nWeggo: Weggo\/javascript\nZillow: zillow\/javascript\nZocDoc: ZocDoc\/javascript\n\n\u2b06 back to top\nTranslation\nThis style guide is also available in other languages:\n\n Brazilian Portuguese: armoucar\/javascript-style-guide\n Bulgarian: borislavvv\/javascript\n Catalan: fpmweb\/javascript-style-guide\n Chinese (Simplified): lin-123\/javascript\n Chinese (Traditional): jigsawye\/javascript\n French: nmussy\/javascript-style-guide\n German: timofurrer\/javascript-style-guide\n Italian: sinkswim\/javascript-style-guide\n Japanese: mitsuruog\/javascript-style-guide\n Korean: ParkSB\/javascript-style-guide\n Russian: leonidlebedev\/javascript-airbnb\n Spanish: paolocarrasco\/javascript-style-guide\n Thai: lvarayut\/javascript-style-guide\n Turkish: eraycetinay\/javascript\n Ukrainian: ivanzusko\/javascript\n Vietnam: dangkyokhoang\/javascript-style-guide\n\nThe JavaScript Style Guide Guide\n\nReference\n\nChat With Us About JavaScript\n\nFind us on gitter.\n\nContributors\n\nView Contributors\n\nLicense\n(The MIT License)\nCopyright (c) 2012 Airbnb\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\u2b06 back to top\nAmendments\nWe encourage you to fork this guide and change the rules to fit your team\u2019s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.\n};\n","5":"D3: Data-Driven Documents\n\nD3 (or D3.js) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.\nResources\n\nIntroduction\nAPI Reference\nReleases\nExamples\nWiki\n\nInstalling\nIf you use npm, npm install d3. Otherwise, download the latest release. The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from d3js.org, CDNJS, or unpkg. For example:\n<script src=\"https:\/\/d3js.org\/d3.v6.js\"><\/script>\nFor the minified version:\n<script src=\"https:\/\/d3js.org\/d3.v6.min.js\"><\/script>\nYou can also use the standalone D3 microlibraries. For example, d3-selection:\n<script src=\"https:\/\/d3js.org\/d3-selection.v2.js\"><\/script>\nD3 is written using ES2015 modules. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:\nimport {scaleLinear} from \"d3-scale\";\nOr import everything into a namespace (here, d3):\nimport * as d3 from \"d3\";\nIn Node:\nconst d3 = require(\"d3\");\nYou can also require individual modules and combine them into a d3 object using Object.assign:\nconst d3 = Object.assign({}, require(\"d3-format\"), require(\"d3-geo\"), require(\"d3-geo-projection\"));\n","6":"\n\n    React Native\n  \n\n\nLearn once, write anywhere:\n  Build mobile apps with React.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\n \u00b7 \nLearn the Basics\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \nCommunity\n \u00b7 \nSupport\n\nReact Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\nDeclarative. React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\nComponent-Based. Build encapsulated components that manage their state, then compose them to make complex UIs.\nDeveloper Velocity. See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\nPortability. Reuse code across iOS, Android, and other platforms.\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our ecosystem overview.\nContents\n\nRequirements\nBuilding your first React Native app\nDocumentation\nUpgrading\nHow to Contribute\nCode of Conduct\nLicense\n\n\ud83d\udccb Requirements\nReact Native apps may target iOS 10.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like Expo can be used to work around this.\n\ud83c\udf89 Building your first React Native app\nFollow the Getting Started guide. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\nTrying out React Native\nCreating a New Application\nAdding React Native to an Existing Application\n\n\ud83d\udcd6 Documentation\nThe full documentation for React Native can be found on our website.\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the React documentation.\nThe source for the React Native documentation and website is hosted on a separate repo, @facebook\/react-native-website.\n\ud83d\ude80 Upgrading\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the Upgrading Guide for instructions.\nReact Native releases are discussed in the React Native Community, @react-native-community\/react-native-releases.\n\ud83d\udc4f How to Contribute\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our Contributing Guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\nOpen Source Roadmap\nYou can learn more about our vision for React Native in the Roadmap.\nGood First Issues\nWe have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\nDiscussions\nLarger discussions and proposals are discussed in @react-native-community\/discussions-and-proposals.\n\ud83d\udcc4 License\nReact Native is MIT licensed, as found in the LICENSE file.\nReact Native documentation is Creative Commons licensed, as found in the LICENSE-docs file.\n","7":"JavaScript Algorithms and Data Structures\n\n\nThis repository contains JavaScript based examples of many\npopular algorithms and data structures.\nEach algorithm and data structure has its own separate README\nwith related explanations and links for further reading (including ones\nto YouTube videos).\nRead this in other languages:\n\u7b80\u4f53\u4e2d\u6587,\n\u7e41\u9ad4\u4e2d\u6587,\n\ud55c\uad6d\uc5b4,\n\u65e5\u672c\u8a9e,\nPolski,\nFran\u00e7ais,\nEspa\u00f1ol,\nPortugu\u00eas,\nT\u00fcrk\n\u261d Note that this project is meant to be used for learning and researching purposes\nonly and it is not meant to be used for production.\nData Structures\nA data structure is a particular way of organizing and storing data in a computer so that it can\nbe accessed and modified efficiently. More precisely, a data structure is a collection of data\nvalues, the relationships among them, and the functions or operations that can be applied to\nthe data.\nB - Beginner, A - Advanced\n\nB Linked List\nB Doubly Linked List\nB Queue\nB Stack\nB Hash Table\nB Heap - max and min heap versions\nB Priority Queue\nA Trie\nA Tree\n\nA Binary Search Tree\nA AVL Tree\nA Red-Black Tree\nA Segment Tree - with min\/max\/sum range queries examples\nA Fenwick Tree (Binary Indexed Tree)\n\n\nA Graph (both directed and undirected)\nA Disjoint Set\nA Bloom Filter\n\nAlgorithms\nAn algorithm is an unambiguous specification of how to solve a class of problems. It is\na set of rules that precisely define a sequence of operations.\nB - Beginner, A - Advanced\nAlgorithms by Topic\n\nMath\n\nB Bit Manipulation - set\/get\/update\/clear bits, multiplication\/division by two, make negative etc.\nB Factorial\nB Fibonacci Number - classic and closed-form versions\nB Primality Test (trial division method)\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Least Common Multiple (LCM)\nB Sieve of Eratosthenes - finding all prime numbers up to any given limit\nB Is Power of Two - check if the number is power of two (naive and bitwise algorithms)\nB Pascal's Triangle\nB Complex Number - complex numbers and basic operations with them\nB Radian & Degree - radians to degree and backwards conversion\nB Fast Powering\nA Integer Partition\nA Square Root - Newton's method\nA Liu Hui \u03c0 Algorithm - approximate \u03c0 calculations based on N-gons\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nSets\n\nB Cartesian Product - product of multiple sets\nB Fisher\u2013Yates Shuffle - random permutation of a finite sequence\nA Power Set - all subsets of a set (bitwise and backtracking solutions)\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\nA Longest Common Subsequence (LCS)\nA Longest Increasing Subsequence\nA Shortest Common Supersequence (SCS)\nA Knapsack Problem - \"0\/1\" and \"Unbound\" ones\nA Maximum Subarray - \"Brute Force\" and \"Dynamic Programming\" (Kadane's) versions\nA Combination Sum - find all combinations that form specific sum\n\n\nStrings\n\nB Hamming Distance - number of positions at which the symbols are different\nA Levenshtein Distance - minimum edit distance between two sequences\nA Knuth\u2013Morris\u2013Pratt Algorithm (KMP Algorithm) - substring search (pattern matching)\nA Z Algorithm - substring search (pattern matching)\nA Rabin Karp Algorithm - substring search\nA Longest Common Substring\nA Regular Expression Matching\n\n\nSearches\n\nB Linear Search\nB Jump Search (or Block Search) - search in sorted array\nB Binary Search - search in sorted array\nB Interpolation Search - search in uniformly distributed sorted array\n\n\nSorting\n\nB Bubble Sort\nB Selection Sort\nB Insertion Sort\nB Heap Sort\nB Merge Sort\nB Quicksort - in-place and non-in-place implementations\nB Shellsort\nB Counting Sort\nB Radix Sort\n\n\nLinked Lists\n\nB Straight Traversal\nB Reverse Traversal\n\n\nTrees\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\n\n\nGraphs\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\nB Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Dijkstra Algorithm - finding shortest paths to all graph vertices from single vertex\nA Bellman-Ford Algorithm - finding shortest paths to all graph vertices from single vertex\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Detect Cycle - for both directed and undirected graphs (DFS and Disjoint Set based versions)\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Topological Sorting - DFS method\nA Articulation Points - Tarjan's algorithm (DFS based)\nA Bridges - DFS based algorithm\nA Eulerian Path and Eulerian Circuit - Fleury's algorithm - Visit every edge exactly once\nA Hamiltonian Cycle - Visit every vertex exactly once\nA Strongly Connected Components - Kosaraju's algorithm\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\n\n\nCryptography\n\nB Polynomial Hash - rolling hash function based on polynomial\nB Caesar Cipher - simple substitution cipher\n\n\nMachine Learning\n\nB NanoNeuron - 7 simple JS functions that illustrate how machines can actually learn (forward\/backward propagation)\n\n\nUncategorized\n\nB Tower of Hanoi\nB Square Matrix Rotation - in-place algorithm\nB Jump Game - backtracking, dynamic programming (top-down + bottom-up) and greedy examples\nB Unique Paths - backtracking, dynamic programming and Pascal's Triangle based examples\nB Rain Terraces - trapping rain water problem (dynamic programming and brute force versions)\nB Recursive Staircase - count the number of ways to reach to the top (4 solutions)\nA N-Queens Problem\nA Knight's Tour\n\n\n\nAlgorithms by Paradigm\nAn algorithmic paradigm is a generic method or approach which underlies the design of a class\nof algorithms. It is an abstraction higher than the notion of an algorithm, just as an\nalgorithm is an abstraction higher than a computer program.\n\nBrute Force - look at all the possibilities and selects the best solution\n\nB Linear Search\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Maximum Subarray\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nGreedy - choose the best option at the current time, without any consideration for the future\n\nB Jump Game\nA Unbound Knapsack Problem\nA Dijkstra Algorithm - finding shortest path to all graph vertices\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\n\n\nDivide and Conquer - divide the problem into smaller parts and then solve those parts\n\nB Binary Search\nB Tower of Hanoi\nB Pascal's Triangle\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Merge Sort\nB Quicksort\nB Tree Depth-First Search (DFS)\nB Graph Depth-First Search (DFS)\nB Jump Game\nB Fast Powering\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\n\n\nDynamic Programming - build up a solution using previously found sub-solutions\n\nB Fibonacci Number\nB Jump Game\nB Unique Paths\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Levenshtein Distance - minimum edit distance between two sequences\nA Longest Common Subsequence (LCS)\nA Longest Common Substring\nA Longest Increasing Subsequence\nA Shortest Common Supersequence\nA 0\/1 Knapsack Problem\nA Integer Partition\nA Maximum Subarray\nA Bellman-Ford Algorithm - finding shortest path to all graph vertices\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Regular Expression Matching\n\n\nBacktracking - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test\nif it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a\ndifferent path of finding a solution. Normally the DFS traversal of state-space is being used.\n\nB Jump Game\nB Unique Paths\nB Power Set - all subsets of a set\nA Hamiltonian Cycle - Visit every vertex exactly once\nA N-Queens Problem\nA Knight's Tour\nA Combination Sum - find all combinations that form specific sum\n\n\nBranch & Bound - remember the lowest-cost solution found at each stage of the backtracking\nsearch, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of\na least-cost solution to the problem, in order to discard partial solutions with costs larger than the\nlowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space\ntree is being used.\n\nHow to use this repository\nInstall all dependencies\nnpm install\n\nRun ESLint\nYou may want to run it to check code quality.\nnpm run lint\n\nRun all tests\nnpm test\n\nRun tests by name\nnpm test -- 'LinkedList'\n\nPlayground\nYou may play with data-structures and algorithms in .\/src\/playground\/playground.js file and write\ntests for it in .\/src\/playground\/__test__\/playground.test.js.\nThen just simply run the following command to test if your playground code works as expected:\nnpm test -- 'playground'\n\nUseful Information\nReferences\n\u25b6 Data Structures and Algorithms on YouTube\nBig O Notation\nBig O notation is used to classify algorithms according to how their running time or space requirements grow as the input size grows.\nOn the chart below you may find most common orders of growth of algorithms specified in Big O notation.\n\nSource: Big O Cheat Sheet.\nBelow is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.\n\n\n\nBig O Notation\nComputations for 10 elements\nComputations for 100 elements\nComputations for 1000 elements\n\n\n\n\nO(1)\n1\n1\n1\n\n\nO(log N)\n3\n6\n9\n\n\nO(N)\n10\n100\n1000\n\n\nO(N log N)\n30\n600\n9000\n\n\nO(N^2)\n100\n10000\n1000000\n\n\nO(2^N)\n1024\n1.26e+29\n1.07e+301\n\n\nO(N!)\n3628800\n9.3e+157\n4.02e+2567\n\n\n\nData Structure Operations Complexity\n\n\n\nData Structure\nAccess\nSearch\nInsertion\nDeletion\nComments\n\n\n\n\nArray\n1\nn\nn\nn\n\n\n\nStack\nn\nn\n1\n1\n\n\n\nQueue\nn\nn\n1\n1\n\n\n\nLinked List\nn\nn\n1\nn\n\n\n\nHash Table\n-\nn\nn\nn\nIn case of perfect hash function costs would be O(1)\n\n\nBinary Search Tree\nn\nn\nn\nn\nIn case of balanced tree costs would be O(log(n))\n\n\nB-Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nRed-Black Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nAVL Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nBloom Filter\n-\n1\n1\n-\nFalse positives are possible while searching\n\n\n\nArray Sorting Algorithms Complexity\n\n\n\nName\nBest\nAverage\nWorst\nMemory\nStable\nComments\n\n\n\n\nBubble sort\nn\nn2\nn2\n1\nYes\n\n\n\nInsertion sort\nn\nn2\nn2\n1\nYes\n\n\n\nSelection sort\nn2\nn2\nn2\n1\nNo\n\n\n\nHeap sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\n1\nNo\n\n\n\nMerge sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\nn\nYes\n\n\n\nQuick sort\nn\u00a0log(n)\nn\u00a0log(n)\nn2\nlog(n)\nNo\nQuicksort is usually done in-place with O(log(n)) stack space\n\n\nShell sort\nn\u00a0log(n)\ndepends on gap sequence\nn\u00a0(log(n))2\n1\nNo\n\n\n\nCounting sort\nn + r\nn + r\nn + r\nn + r\nYes\nr - biggest number in array\n\n\nRadix sort\nn * k\nn * k\nn * k\nn + k\nYes\nk - length of longest key\n\n\n\nSupporting the project\nYou may support this project via \u2764\ufe0f\ufe0f GitHub or \u2764\ufe0f\ufe0f Patreon.\n","8":"Create React App  \n\nCreate React apps with no build configuration.\n\nCreating an App \u2013 How to create a new app.\nUser Guide \u2013 How to develop apps bootstrapped with Create React App.\n\nCreate React App works on macOS, Windows, and Linux.\nIf something doesn\u2019t work, please file an issue.\nIf you have questions or need help, please ask in GitHub Discussions.\nQuick Overview\nnpx create-react-app my-app\ncd my-app\nnpm start\nIf you've previously installed create-react-app globally via npm install -g create-react-app, we recommend you uninstall the package using npm uninstall -g create-react-app or yarn global remove create-react-app to ensure that npx always uses the latest version.\n(npx comes with npm 5.2+ and higher, see instructions for older npm versions)\nThen open http:\/\/localhost:3000\/ to see your app.\nWhen you\u2019re ready to deploy to production, create a minified bundle with npm run build.\n\n\n\nGet Started Immediately\nYou don\u2019t need to install or configure tools like webpack or Babel.\nThey are preconfigured and hidden so that you can focus on the code.\nCreate a project, and you\u2019re good to go.\nCreating an App\nYou\u2019ll need to have Node 8.16.0 or Node 10.16.0 or later version on your local development machine (but it\u2019s not required on the server). You can use nvm (macOS\/Linux) or nvm-windows to switch Node versions between different projects.\nTo create a new app, you may choose one of the following methods:\nnpx\nnpx create-react-app my-app\n(npx is a package runner tool that comes with npm 5.2+ and higher, see instructions for older npm versions)\nnpm\nnpm init react-app my-app\nnpm init <initializer> is available in npm 6+\nYarn\nyarn create react-app my-app\nyarn create <starter-kit-package> is available in Yarn 0.25+\nIt will create a directory called my-app inside the current folder.\nInside that directory, it will generate the initial project structure and install the transitive dependencies:\nmy-app\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 manifest.json\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 App.css\n    \u251c\u2500\u2500 App.js\n    \u251c\u2500\u2500 App.test.js\n    \u251c\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.js\n    \u251c\u2500\u2500 logo.svg\n    \u2514\u2500\u2500 serviceWorker.js\n    \u2514\u2500\u2500 setupTests.js\n\nNo configuration or complicated folder structures, only the files you need to build your app.\nOnce the installation is done, you can open your project folder:\ncd my-app\nInside the newly created project, you can run some built-in commands:\nnpm start or yarn start\nRuns the app in development mode.\nOpen http:\/\/localhost:3000 to view it in the browser.\nThe page will automatically reload if you make changes to the code.\nYou will see the build errors and lint warnings in the console.\n\n\n\nnpm test or yarn test\nRuns the test watcher in an interactive mode.\nBy default, runs tests related to files changed since the last commit.\nRead more about testing.\nnpm run build or yarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed.\nUser Guide\nYou can find detailed instructions on using Create React App and many tips in its documentation.\nHow to Update to New Versions?\nPlease refer to the User Guide for this and other information.\nPhilosophy\n\n\nOne Dependency: There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.\n\n\nNo Configuration Required: You don't need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.\n\n\nNo Lock-In: You can \u201ceject\u201d to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.\n\n\nWhat\u2019s Included?\nYour environment will have everything you need to build a modern single-page React app:\n\nReact, JSX, ES6, TypeScript and Flow syntax support.\nLanguage extras beyond ES6 like the object spread operator.\nAutoprefixed CSS, so you don\u2019t need -webkit- or other prefixes.\nA fast interactive unit test runner with built-in support for coverage reporting.\nA live development server that warns about common mistakes.\nA build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.\nAn offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria. (Note: Using the service worker is opt-in as of react-scripts@2.0.0 and higher)\nHassle-free updates for the above tools with a single dependency.\n\nCheck out this guide for an overview of how these tools fit together.\nThe tradeoff is that these tools are preconfigured to work in a specific way. If your project needs more customization, you can \"eject\" and customize it, but then you will need to maintain this configuration.\nPopular Alternatives\nCreate React App is a great fit for:\n\nLearning React in a comfortable and feature-rich development environment.\nStarting new single-page React applications.\nCreating examples with React for your libraries and components.\n\nHere are a few common cases where you might want to try something else:\n\n\nIf you want to try React without hundreds of transitive build tool dependencies, consider using a single HTML file or an online sandbox instead.\n\n\nIf you need to integrate React code with a server-side template framework like Rails, Django or Symfony, or if you\u2019re not building a single-page app, consider using nwb, or Neutrino which are more flexible. For Rails specifically, you can use Rails Webpacker. For Symfony, try Symfony's webpack Encore.\n\n\nIf you need to publish a React component, nwb can also do this, as well as Neutrino's react-components preset.\n\n\nIf you want to do server rendering with React and Node.js, check out Next.js or Razzle. Create React App is agnostic of the backend, and only produces static HTML\/JS\/CSS bundles.\n\n\nIf your website is mostly static (for example, a portfolio or a blog), consider using Gatsby or Next.js. Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.\n\n\nFinally, if you need more customization, check out Neutrino and its React preset.\n\n\nAll of the above tools can work with little to no configuration.\nIf you prefer configuring the build yourself, follow this guide.\nReact Native\nLooking for something similar, but for React Native?\nCheck out Expo CLI.\nContributing\nWe'd love to have your helping hand on create-react-app! See CONTRIBUTING.md for more information on what we're looking for and how to get started.\nSupporting Create React App\nCreate React App is a community maintained project and all contributors are volunteers. If you'd like to support the future development of Create React App then please consider donating to our Open Collective.\nCredits\nThis project exists thanks to all the people who contribute.\n\nThanks to Netlify for hosting our documentation.\nAcknowledgements\nWe are grateful to the authors of existing related projects for their ideas and collaboration:\n\n@eanplatter\n@insin\n@mxstbr\n\nLicense\nCreate React App is open source software licensed as MIT. The Create React App logo is licensed  under a Creative Commons Attribution 4.0 International license.\n","9":"axios\n\n\n\n\n\n\n\n\nPromise based HTTP client for the browser and node.js\nTable of Contents\n\nFeatures\nBrowser Support\nInstalling\nExample\nAxios API\nRequest method aliases\nConcurrency (Deprecated)\nCreating an instance\nInstance methods\nRequest Config\nResponse Schema\nConfig Defaults\n\nGlobal axios defaults\nCustom instance defaults\nConfig order of precedence\n\n\nInterceptors\nHandling Errors\nCancellation\nUsing application\/x-www-form-urlencoded format\n\nBrowser\nNode.js\n\nQuery string\nForm data\n\n\n\n\nSemver\nPromises\nTypeScript\nResources\nCredits\nLicense\n\nFeatures\n\nMake XMLHttpRequests from the browser\nMake http requests from node.js\nSupports the Promise API\nIntercept request and response\nTransform request and response data\nCancel requests\nAutomatic transforms for JSON data\nClient side support for protecting against XSRF\n\nBrowser Support\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\n11 \u2714\n\n\n\n\nInstalling\nUsing npm:\n$ npm install axios\nUsing bower:\n$ bower install axios\nUsing yarn:\n$ yarn add axios\nUsing jsDelivr CDN:\n<script src=\"https:\/\/cdn.jsdelivr.net\/npm\/axios\/dist\/axios.min.js\"><\/script>\nUsing unpkg CDN:\n<script src=\"https:\/\/unpkg.com\/axios\/dist\/axios.min.js\"><\/script>\nExample\nnote: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense \/ autocomplete) while using CommonJS imports with require() use the following approach:\nconst axios = require('axios').default;\n\n\/\/ axios.<method> will now provide autocomplete and parameter typings\nPerforming a GET request\nconst axios = require('axios');\n\n\/\/ Make a request for a user with a given ID\naxios.get('\/user?ID=12345')\n  .then(function (response) {\n    \/\/ handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    \/\/ handle error\n    console.log(error);\n  })\n  .then(function () {\n    \/\/ always executed\n  });\n\n\/\/ Optionally the request above could also be done as\naxios.get('\/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .then(function () {\n    \/\/ always executed\n  });  \n\n\/\/ Want to use async\/await? Add the `async` keyword to your outer function\/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('\/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nNOTE: async\/await is part of ECMAScript 2017 and is not supported in Internet\nExplorer and older browsers, so use with caution.\n\nPerforming a POST request\naxios.post('\/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\nPerforming multiple concurrent requests\nfunction getUserAccount() {\n  return axios.get('\/user\/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('\/user\/12345\/permissions');\n}\n\nPromise.all([getUserAccount(), getUserPermissions()])\n  .then(function (results) {\n    const acct = results[0];\n    const perm = results[1];\n  });\naxios API\nRequests can be made by passing the relevant config to axios.\naxios(config)\n\/\/ Send a POST request\naxios({\n  method: 'post',\n  url: '\/user\/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n\/\/ GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'http:\/\/bit.ly\/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\naxios(url[, config])\n\/\/ Send a GET request (default method)\naxios('\/user\/12345');\nRequest method aliases\nFor convenience aliases have been provided for all supported request methods.\naxios.request(config)\naxios.get(url[, config])\naxios.delete(url[, config])\naxios.head(url[, config])\naxios.options(url[, config])\naxios.post(url[, data[, config]])\naxios.put(url[, data[, config]])\naxios.patch(url[, data[, config]])\nNOTE\nWhen using the alias methods url, method, and data properties don't need to be specified in config.\nConcurrency (Deprecated)\nPlease use Promise.all to replace the below functions.\nHelper functions for dealing with concurrent requests.\naxios.all(iterable)\naxios.spread(callback)\nCreating an instance\nYou can create a new instance of axios with a custom config.\naxios.create([config])\nconst instance = axios.create({\n  baseURL: 'https:\/\/some-domain.com\/api\/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\nInstance methods\nThe available instance methods are listed below. The specified config will be merged with the instance config.\naxios#request(config)\naxios#get(url[, config])\naxios#delete(url[, config])\naxios#head(url[, config])\naxios#options(url[, config])\naxios#post(url[, data[, config]])\naxios#put(url[, data[, config]])\naxios#patch(url[, data[, config]])\naxios#getUri([config])\nRequest Config\nThese are the available config options for making requests. Only the url is required. Requests will default to GET if method is not specified.\n{\n  \/\/ `url` is the server URL that will be used for the request\n  url: '\/user',\n\n  \/\/ `method` is the request method to be used when making the request\n  method: 'get', \/\/ default\n\n  \/\/ `baseURL` will be prepended to `url` unless `url` is absolute.\n  \/\/ It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  \/\/ to methods of that instance.\n  baseURL: 'https:\/\/some-domain.com\/api\/',\n\n  \/\/ `transformRequest` allows changes to the request data before it is sent to the server\n  \/\/ This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  \/\/ The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  \/\/ FormData or Stream\n  \/\/ You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    \/\/ Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  \/\/ `transformResponse` allows changes to the response data to be made before\n  \/\/ it is passed to then\/catch\n  transformResponse: [function (data) {\n    \/\/ Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  \/\/ `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  \/\/ `params` are the URL parameters to be sent with the request\n  \/\/ Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  \/\/ `paramsSerializer` is an optional function in charge of serializing `params`\n  \/\/ (e.g. https:\/\/www.npmjs.com\/package\/qs, http:\/\/api.jquery.com\/jquery.param\/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  \/\/ `data` is the data to be sent as the request body\n  \/\/ Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'\n  \/\/ When no `transformRequest` is set, must be of one of the following types:\n  \/\/ - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  \/\/ - Browser only: FormData, File, Blob\n  \/\/ - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  \/\/ syntax alternative to send data into the body\n  \/\/ method post\n  \/\/ only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  \/\/ `timeout` specifies the number of milliseconds before the request times out.\n  \/\/ If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, \/\/ default is `0` (no timeout)\n\n  \/\/ `withCredentials` indicates whether or not cross-site Access-Control requests\n  \/\/ should be made using credentials\n  withCredentials: false, \/\/ default\n\n  \/\/ `adapter` allows custom handling of requests which makes testing easier.\n  \/\/ Return a promise and supply a valid response (see lib\/adapters\/README.md).\n  adapter: function (config) {\n    \/* ... *\/\n  },\n\n  \/\/ `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  \/\/ This will set an `Authorization` header, overwriting any existing\n  \/\/ `Authorization` custom headers you have set using `headers`.\n  \/\/ Please note that only HTTP Basic auth is configurable through this parameter.\n  \/\/ For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  \/\/ `responseType` indicates the type of data that the server will respond with\n  \/\/ options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  \/\/   browser only: 'blob'\n  responseType: 'json', \/\/ default\n\n  \/\/ `responseEncoding` indicates encoding to use for decoding responses (Node.js only)\n  \/\/ Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', \/\/ default\n\n  \/\/ `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', \/\/ default\n\n  \/\/ `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', \/\/ default\n\n  \/\/ `onUploadProgress` allows handling of progress events for uploads\n  \/\/ browser only\n  onUploadProgress: function (progressEvent) {\n    \/\/ Do whatever you want with the native progress event\n  },\n\n  \/\/ `onDownloadProgress` allows handling of progress events for downloads\n  \/\/ browser only\n  onDownloadProgress: function (progressEvent) {\n    \/\/ Do whatever you want with the native progress event\n  },\n\n  \/\/ `maxContentLength` defines the max size of the http response content in bytes allowed in node.js\n  maxContentLength: 2000,\n\n  \/\/ `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed\n  maxBodyLength: 2000,\n\n  \/\/ `validateStatus` defines whether to resolve or reject the promise for a given\n  \/\/ HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  \/\/ or `undefined`), the promise will be resolved; otherwise, the promise will be\n  \/\/ rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; \/\/ default\n  },\n\n  \/\/ `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  \/\/ If set to 0, no redirects will be followed.\n  maxRedirects: 5, \/\/ default\n\n  \/\/ `socketPath` defines a UNIX Socket to be used in node.js.\n  \/\/ e.g. '\/var\/run\/docker.sock' to send requests to the docker daemon.\n  \/\/ Only either `socketPath` or `proxy` can be specified.\n  \/\/ If both are specified, `socketPath` is used.\n  socketPath: null, \/\/ default\n\n  \/\/ `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  \/\/ and https requests, respectively, in node.js. This allows options to be added like\n  \/\/ `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  \/\/ `proxy` defines the hostname and port of the proxy server.\n  \/\/ You can also define your proxy using the conventional `http_proxy` and\n  \/\/ `https_proxy` environment variables. If you are using environment variables\n  \/\/ for your proxy configuration, you can also define a `no_proxy` environment\n  \/\/ variable as a comma-separated list of domains that should not be proxied.\n  \/\/ Use `false` to disable proxies, ignoring environment variables.\n  \/\/ `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  \/\/ supplies credentials.\n  \/\/ This will set an `Proxy-Authorization` header, overwriting any existing\n  \/\/ `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  \/\/ `cancelToken` specifies a cancel token that can be used to cancel the request\n  \/\/ (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  }),\n\n  \/\/ `decompress` indicates whether or not the response body should be decompressed \n  \/\/ automatically. If set to `true` will also remove the 'content-encoding' header \n  \/\/ from the responses objects of all decompressed responses\n  \/\/ - Node only (XHR cannot turn off decompression)\n  decompress: true \/\/ default\n\n}\nResponse Schema\nThe response for a request contains the following information.\n{\n  \/\/ `data` is the response that was provided by the server\n  data: {},\n\n  \/\/ `status` is the HTTP status code from the server response\n  status: 200,\n\n  \/\/ `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  \/\/ `headers` the HTTP headers that the server responded with\n  \/\/ All header names are lower cased and can be accessed using the bracket notation.\n  \/\/ Example: `response.headers['content-type']`\n  headers: {},\n\n  \/\/ `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  \/\/ `request` is the request that generated this response\n  \/\/ It is the last ClientRequest instance in node.js (in redirects)\n  \/\/ and an XMLHttpRequest instance in the browser\n  request: {}\n}\nWhen using then, you will receive the response as follows:\naxios.get('\/user\/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\nWhen using catch, or passing a rejection callback as second parameter of then, the response will be available through the error object as explained in the Handling Errors section.\nConfig Defaults\nYou can specify config defaults that will be applied to every request.\nGlobal axios defaults\naxios.defaults.baseURL = 'https:\/\/api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application\/x-www-form-urlencoded';\nCustom instance defaults\n\/\/ Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https:\/\/api.example.com'\n});\n\n\/\/ Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nConfig order of precedence\nConfig will be merged with an order of precedence. The order is library defaults found in lib\/defaults.js, then defaults property of the instance, and finally config argument for the request. The latter will take precedence over the former. Here's an example.\n\/\/ Create an instance using the config defaults provided by the library\n\/\/ At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n\/\/ Override timeout default for the library\n\/\/ Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n\/\/ Override timeout for this request as it's known to take a long time\ninstance.get('\/longRequest', {\n  timeout: 5000\n});\nInterceptors\nYou can intercept requests or responses before they are handled by then or catch.\n\/\/ Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    \/\/ Do something before request is sent\n    return config;\n  }, function (error) {\n    \/\/ Do something with request error\n    return Promise.reject(error);\n  });\n\n\/\/ Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    \/\/ Any status code that lie within the range of 2xx cause this function to trigger\n    \/\/ Do something with response data\n    return response;\n  }, function (error) {\n    \/\/ Any status codes that falls outside the range of 2xx cause this function to trigger\n    \/\/ Do something with response error\n    return Promise.reject(error);\n  });\nIf you need to remove an interceptor later you can.\nconst myInterceptor = axios.interceptors.request.use(function () {\/*...*\/});\naxios.interceptors.request.eject(myInterceptor);\nYou can add interceptors to a custom instance of axios.\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {\/*...*\/});\nHandling Errors\naxios.get('\/user\/12345')\n  .catch(function (error) {\n    if (error.response) {\n      \/\/ The request was made and the server responded with a status code\n      \/\/ that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      \/\/ The request was made but no response was received\n      \/\/ `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      \/\/ http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      \/\/ Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\nUsing the validateStatus config option, you can define HTTP code(s) that should throw an error.\naxios.get('\/user\/12345', {\n  validateStatus: function (status) {\n    return status < 500; \/\/ Resolve only if the status code is less than 500\n  }\n})\nUsing toJSON you get an object with more information about the HTTP error.\naxios.get('\/user\/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\nCancellation\nYou can cancel a request using a cancel token.\n\nThe axios cancel token API is based on the withdrawn cancelable promises proposal.\n\nYou can create a cancel token using the CancelToken.source factory as shown below:\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('\/user\/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    \/\/ handle error\n  }\n});\n\naxios.post('\/user\/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n\/\/ cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\nYou can also create a cancel token by passing an executor function to the CancelToken constructor:\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('\/user\/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    \/\/ An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n\/\/ cancel the request\ncancel();\n\nNote: you can cancel several requests with the same cancel token.\n\nUsing application\/x-www-form-urlencoded format\nBy default, axios serializes JavaScript objects to JSON. To send data in the application\/x-www-form-urlencoded format instead, you can use one of the following options.\nBrowser\nIn a browser, you can use the URLSearchParams API as follows:\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('\/foo', params);\n\nNote that URLSearchParams is not supported by all browsers (see caniuse.com), but there is a polyfill available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the qs library:\nconst qs = require('qs');\naxios.post('\/foo', qs.stringify({ 'bar': 123 }));\nOr in another way (ES6),\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application\/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\nNode.js\nQuery string\nIn node.js, you can use the querystring module as follows:\nconst querystring = require('querystring');\naxios.post('http:\/\/something.com\/', querystring.stringify({ foo: 'bar' }));\nor 'URLSearchParams' from 'url module' as follows:\nconst url = require('url');\nconst params = new url.URLSearchParams({ foo: 'bar' });\naxios.post('http:\/\/something.com\/', params.toString());\nYou can also use the qs library.\nNOTE\nThe qs library is preferable if you need to stringify nested objects, as the querystring method has known issues with that use case (https:\/\/github.com\/nodejs\/node-v0.x-archive\/issues\/1665).\nForm data\nIn node.js, you can use the form-data library as follows:\nconst FormData = require('form-data');\n \nconst form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('\/foo\/bar.jpg'));\n\naxios.post('https:\/\/example.com', form, { headers: form.getHeaders() })\nAlternatively, use an interceptor:\naxios.interceptors.request.use(config => {\n  if (config.data instanceof FormData) {\n    Object.assign(config.headers, config.data.getHeaders());\n  }\n  return config;\n});\nSemver\nUntil axios reaches a 1.0 release, breaking changes will be released with a new minor version. For example 0.5.1, and 0.5.4 will have the same API, but 0.6.0 will have breaking changes.\nPromises\naxios depends on a native ES6 Promise implementation to be supported.\nIf your environment doesn't support ES6 Promises, you can polyfill.\nTypeScript\naxios includes TypeScript definitions.\nimport axios from 'axios';\naxios.get('\/user?ID=12345');\nResources\n\nChangelog\nUpgrade Guide\nEcosystem\nContributing Guide\nCode of Conduct\n\nCredits\naxios is heavily inspired by the $http service provided in Angular. Ultimately axios is an effort to provide a standalone $http-like service for use outside of Angular.\nLicense\nMIT\n","10":"\n\n\n\n\n\nNode.js is an open-source, cross-platform, JavaScript runtime environment. It\nexecutes JavaScript code outside of a browser. For more information on using\nNode.js, see the Node.js Website.\nThe Node.js project uses an open governance model. The\nOpenJS Foundation provides support for the project.\nThis project is bound by a Code of Conduct.\nTable of Contents\n\nSupport\nRelease Types\n\nDownload\n\nCurrent and LTS Releases\nNightly Releases\nAPI Documentation\n\n\nVerifying Binaries\n\n\nBuilding Node.js\nSecurity\nContributing to Node.js\nCurrent Project Team Members\n\nTSC (Technical Steering Committee)\nCollaborators\nRelease Keys\n\n\n\nSupport\nLooking for help? Check out the\ninstructions for getting support.\nRelease Types\n\nCurrent: Under active development. Code for the Current release is in the\nbranch for its major version number (for example,\nv10.x). Node.js releases a new\nmajor version every 6 months, allowing for breaking changes. This happens in\nApril and October every year. Releases appearing each October have a support\nlife of 8 months. Releases appearing each April convert to LTS (see below)\neach October.\nLTS: Releases that receive Long-term Support, with a focus on stability\nand security. Every even-numbered major version will become an LTS release.\nLTS releases receive 12 months of Active LTS support and a further 18 months\nof Maintenance. LTS release lines have alphabetically-ordered codenames,\nbeginning with v4 Argon. There are no breaking changes or feature additions,\nexcept in some special circumstances.\nNightly: Code from the Current branch built every 24-hours when there are\nchanges. Use with caution.\n\nCurrent and LTS releases follow Semantic Versioning. A\nmember of the Release Team signs each Current and LTS release.\nFor more information, see the\nRelease README.\nDownload\nBinaries, installers, and source tarballs are available at\nhttps:\/\/nodejs.org\/en\/download\/.\nCurrent and LTS Releases\nhttps:\/\/nodejs.org\/download\/release\/\nThe latest directory is an\nalias for the latest Current release. The latest-codename directory is an\nalias for the latest release from an LTS line. For example, the\nlatest-carbon directory\ncontains the latest Carbon (Node.js 8) release.\nNightly Releases\nhttps:\/\/nodejs.org\/download\/nightly\/\nEach directory name and filename contains a date (in UTC) and the commit\nSHA at the HEAD of the release.\nAPI Documentation\nDocumentation for the latest Current release is at https:\/\/nodejs.org\/api\/.\nVersion-specific documentation is available in each release directory in the\ndocs subdirectory. Version-specific documentation is also at\nhttps:\/\/nodejs.org\/download\/docs\/.\nVerifying Binaries\nDownload directories contain a SHASUMS256.txt file with SHA checksums for the\nfiles.\nTo download SHASUMS256.txt using curl:\n$ curl -O https:\/\/nodejs.org\/dist\/vx.y.z\/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nFor Current and LTS, the GPG detached signature of SHASUMS256.txt is in\nSHASUMS256.txt.sig. You can use it with gpg to verify the integrity of\nSHASUM256.txt. You will first need to import\nthe GPG keys of individuals authorized to create releases. To\nimport the keys:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\nSee the bottom of this README for a full script to import active release keys.\nNext, download the SHASUMS256.txt.sig for the release:\n$ curl -O https:\/\/nodejs.org\/dist\/vx.y.z\/SHASUMS256.txt.sig\nThen use gpg --verify SHASUMS256.txt.sig SHASUMS256.txt to verify\nthe file's signature.\nBuilding Node.js\nSee BUILDING.md for instructions on how to build Node.js from\nsource and a list of supported platforms.\nSecurity\nFor information on reporting security vulnerabilities in Node.js, see\nSECURITY.md.\nContributing to Node.js\n\nContributing to the project\nWorking Groups\nStrategic Initiatives\nTechnical values and prioritization\n\nCurrent Project Team Members\nFor information about the governance of the Node.js project, see\nGOVERNANCE.md.\nTSC (Technical Steering Committee)\n\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he\/him)\nBethGriggs -\nBeth Griggs <bgriggs@redhat.com> (she\/her)\nBridgeAR -\nRuben Bridgewater <ruben@bridgewater.de> (he\/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he\/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he\/him)\ncodebytere -\nShelley Vohr <codebytere@gmail.com> (she\/her)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he\/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she\/her)\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he\/him)\njasnell -\nJames M Snell <jasnell@gmail.com> (he\/him)\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she\/her)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he\/him)\nmhdawson -\nMichael Dawson <midawson@redhat.com> (he\/him)\nmmarchini -\nMary Marchini <oss@mmarchini.me> (she\/her)\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he\/him)\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he\/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\nTrott -\nRich Trott <rtrott@gmail.com> (he\/him)\n\nTSC Emeriti\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she\/her)\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he\/him)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com> (he\/they)\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he\/him)\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\nmscdex -\nBrian White <mscdex@mscdex.net>\nnebrius -\nBryan Hughes <bryan@nebri.us>\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he\/him)\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\nrvagg -\nRod Vagg <r@va.gg>\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he\/him)\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he\/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he\/him)\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\n\nCollaborators\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she\/her)\naduh95 -\nAntoine du Hamel <duhamelantoine1995@gmail.com> (he\/him)\nak239 -\nAleksei Koziatinskii <ak239spb@gmail.com>\nAndreasMadsen -\nAndreas Madsen <amwebdk@gmail.com> (he\/him)\nantsmartian -\nAnto Aravinth <anto.aravinth.cse@gmail.com> (he\/him)\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he\/him)\nAshCripps -\nAsh Cripps <acripps@redhat.com>\nbcoe -\nBen Coe <bencoe@gmail.com> (he\/him)\nbengl -\nBryan English <bryan@bryanenglish.com> (he\/him)\nbenjamingr -\nBenjamin Gruenbaum <benjamingr@gmail.com>\nBethGriggs -\nBeth Griggs <bgriggs@redhat.com> (she\/her)\nbmeck -\nBradley Farias <bradley.meck@gmail.com>\nbmeurer -\nBenedikt Meurer <benedikt.meurer@gmail.com>\nboneskull -\nChristopher Hiller <boneskull@boneskull.com> (he\/him)\nBridgeAR -\nRuben Bridgewater <ruben@bridgewater.de> (he\/him)\nbzoz -\nBartosz Sosnowski <bartosz@janeasystems.com>\ncclauss -\nChristian Clauss <cclauss@me.com> (he\/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he\/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he\/him)\ncodebytere -\nShelley Vohr <codebytere@gmail.com> (she\/her)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he\/him)\ndanielleadams -\nDanielle Adams <adamzdanielle@gmail.com> (she\/her)\ndavisjam -\nJamie Davis <davisjam@vt.edu> (he\/him)\nDerekNonGeneric -\nDerek Lewis <DerekNonGeneric@inf.is> (he\/him)\ndevnexen -\nDavid Carlier <devnexen@gmail.com>\ndevsnek -\nGus Caplan <me@gus.host> (they\/them)\nedsadr -\nAdrian Estrada <edsadr@gmail.com> (he\/him)\neugeneo -\nEugene Ostroukhov <eostroukhov@google.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he\/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she\/her)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com>  (he\/they)\nFlarna -\nGerhard St\u00f6bich <deb2001-github@yahoo.de>  (he\/they)\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngdams -\nGeorge Adams <george.adams@uk.ibm.com> (he\/him)\ngeek -\nWyatt Preul <wpreul@gmail.com>\ngengjiawen -\nJiawen Geng <technicalcute@gmail.com>\nGeoffreyBooth -\nGeoffrey Booth <webmaster@geoffreybooth.com> (he\/him)\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he\/him)\nguybedford -\nGuy Bedford <guybedford@gmail.com> (he\/him)\nHarshithaKP -\nHarshitha K P <harshitha014@gmail.com> (she\/her)\nhashseed -\nYang Guo <yangguo@chromium.org> (he\/him)\nhimself65 -\nZeyu Yang <himself65@outlook.com> (he\/him)\nhiroppy -\nYuta Hiroto <hello@hiroppy.me> (he\/him)\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nJacksonTian -\nJackson Tian <shyvo1987@gmail.com>\njasnell -\nJames M Snell <jasnell@gmail.com> (he\/him)\njdalton -\nJohn-David Dalton <john.david.dalton@gmail.com>\njkrems -\nJan Krems <jan.krems@gmail.com> (he\/him)\njoaocgreis -\nJo\u00e3o Reis <reis@janeasystems.com>\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she\/her)\njuanarbol -\nJuan Jos\u00e9 Arboleda <soyjuanarbol@gmail.com> (he\/him)\nJungMinu -\nMinwoo Jung <nodecorelab@gmail.com> (he\/him)\nlance -\nLance Ball <lball@redhat.com> (he\/him)\nlegendecas -\nChengzhong Wu <legendecas@gmail.com> (he\/him)\nLeko -\nShingo Inoue <leko.noor@gmail.com> (he\/him)\nlpinca -\nLuigi Pinca <luigipinca@gmail.com> (he\/him)\nlundibundi -\nDenys Otrishko <shishugi@gmail.com> (he\/him)\nmafintosh -\nMathias Buus <mathiasbuus@gmail.com> (he\/him)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he\/him)\nmhdawson -\nMichael Dawson <midawson@redhat.com> (he\/him)\nmildsunrise -\nAlba Mendez <me@alba.sh> (she\/her)\nmisterdjules -\nJulien Gilli <jgilli@nodejs.org>\nmmarchini -\nMary Marchini <oss@mmarchini.me> (she\/her)\nmscdex -\nBrian White <mscdex@mscdex.net>\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he\/him)\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he\/him)\noyyd -\nOuyang Yadong <oyydoibh@gmail.com> (he\/him)\npsmarshall -\nPeter Marshall <petermarshall@chromium.org> (he\/him)\npuzpuzpuz -\nAndrey Pechkurov <apechkurov@gmail.com> (he\/him)\nQard -\nStephen Belanger <admin@stephenbelanger.com> (he\/him)\nrefack -\nRefael Ackermann (\u05e8\u05e4\u05d0\u05dc \u05e4\u05dc\u05d7\u05d9) <refack@gmail.com> (he\/him\/\u05d4\u05d5\u05d0\/\u05d0\u05ea\u05d4)\nrexagod -\nPranshu Srivastava <rexagod@gmail.com> (he\/him)\nrichardlau -\nRichard Lau <rlau@redhat.com>\nrickyes -\nRicky Zhou <0x19951125@gmail.com> (he\/him)\nronag -\nRobert Nagy <ronagy@icloud.com>\nrubys -\nSam Ruby <rubys@intertwingly.net>\nruyadorno -\nRuy Adorno <ruyadorno@github.com> (he\/him)\nrvagg -\nRod Vagg <rod@vagg.org>\nryzokuken -\nUjjwal Sharma <ryzokuken@disroot.org> (he\/him)\nsaghul -\nSa\u00fal Ibarra Corretg\u00e9 <saghul@gmail.com>\nsantigimeno -\nSantiago Gimeno <santiago.gimeno@gmail.com>\nseishun -\nNikolai Vavilov <vvnicholas@gmail.com>\nshisama -\nMasashi Hirano <shisama07@gmail.com> (he\/him)\nsilverwind -\nRoman Reiss <me@silverwind.io>\nsrl295 -\nSteven R Loomis <srloomis@us.ibm.com>\nstarkwang -\nWeijia Wang <starkwang@126.com>\nsxa -\nStewart X Addison <sxa@redhat.com> (he\/him)\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he\/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he\/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\ntrivikr -\nTrivikram Kamat <trivikr.dev@gmail.com>\nTrott -\nRich Trott <rtrott@gmail.com> (he\/him)\nvdeturckheim -\nVladimir de Turckheim <vlad2t@hotmail.com> (he\/him)\nwatilde -\nDaijiro Wachi <daijiro.wachi@gmail.com> (he\/him)\nwatson -\nThomas Watson <w@tson.dk>\nXadillaX -\nKhaidi Chu <i@2333.moe> (he\/him)\nyhwang -\nYihong Wang <yh.wang@ibm.com>\nyorkie -\nYorkie Liu <yorkiefixer@gmail.com>\nyosuke-furukawa -\nYosuke Furukawa <yosuke.furukawa@gmail.com>\nZYSzys -\nYongsheng Zhang <zyszys98@gmail.com> (he\/him)\n\nCollaborator Emeriti\n\nandrasq -\nAndras <andras@kinvey.com>\nAnnaMag -\nAnna M. Kedzierska <anna.m.kedzierska@gmail.com>\naqrln -\nAlexey Orlenko <eaglexrlnk@gmail.com> (he\/him)\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nbrendanashworth -\nBrendan Ashworth <brendan.ashworth@me.com>\ncalvinmetcalf -\nCalvin Metcalf <calvin.metcalf@gmail.com>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nclaudiorodriguez -\nClaudio Rodriguez <cjrodr@yahoo.com>\nDavidCai1993 -\nDavid Cai <davidcai1993@yahoo.com> (he\/him)\ndigitalinfinity -\nHitesh Kanwathirtha <digitalinfinity@gmail.com> (he\/him)\neljefedelrodeodeljefe -\nRobert Jefe Lindstaedt <robert.lindstaedt@gmail.com>\nestliberitas -\nAlexander Makarenko <estliberitas@gmail.com>\nfiredfox -\nDaniel Wang <wangyang0123@gmail.com>\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he\/him)\nglentiki -\nGlen Keane <glenkeane.94@gmail.com> (he\/him)\niarna -\nRebecca Turner <me@re-becca.org>\nimran-iq -\nImran Iqbal <imran@imraniqbal.org>\nimyller -\nIlkka Myller <ilkka.myller@nodefield.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\nitaloacasas -\nItalo A. Casas <me@italoacasas.com> (he\/him)\njasongin -\nJason Ginchereau <jasongin@microsoft.com>\njbergstroem -\nJohan Bergstr\u00f6m <bugs@bergstroem.nu>\njhamhader -\nYuval Brik <yuval@brik.org.il>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\njulianduque -\nJulian Duque <julianduquej@gmail.com> (he\/him)\nkfarnung -\nKyle Farnung <kfarnung@microsoft.com> (he\/him)\nkunalspathak -\nKunal Pathak <kunal.pathak@microsoft.com>\nlucamaraschi -\nLuca Maraschi <luca.maraschi@gmail.com> (he\/him)\nlxe -\nAleksey Smolenchuk <lxe@lxe.co>\nmaclover7 -\nJon Moss <me@jonathanmoss.me> (he\/him)\nmatthewloring -\nMatthew Loring <mattloring@google.com>\nmicnic -\nNicu Micleu\u0219anu <micnic90@gmail.com> (he\/him)\nmikeal -\nMikeal Rogers <mikeal.rogers@gmail.com>\nmonsanto -\nChristopher Monsanto <chris@monsan.to>\nMoonBall -\nChen Gang <gangc.cxy@foxmail.com>\nnot-an-aardvark -\nTeddy Katz <teddy.katz@gmail.com> (he\/him)\nOlegas -\nOleg Elifantiev <oleg@elifantiev.ru>\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\nothiym23 -\nForrest L Norvell <ogd@aoaioxxysz.net> (he\/him)\npetkaantonov -\nPetka Antonov <petka_antonov@hotmail.com>\nphillipj -\nPhillip Johnsen <johphi@gmail.com>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\npmq20 -\nMinqi Pan <pmq2001@gmail.com>\nprincejwesley -\nPrince John Wesley <princejohnwesley@gmail.com>\nrlidwka -\nAlex Kocharin <alex@kocharin.ru>\nrmg -\nRyan Graham <r.m.graham@gmail.com>\nrobertkowalski -\nRobert Kowalski <rok@kowalski.gd>\nromankl -\nRoman Klauke <romaaan.git@gmail.com>\nronkorving -\nRon Korving <ron@ronkorving.nl>\nRReverser -\nIngvar Stepanyan <me@rreverser.com>\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\nsebdeckers -\nSebastiaan Deckers <sebdeckers83@gmail.com>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he\/him)\nstefanmb -\nStefan Budeanu <stefan@budeanu.com>\ntellnes -\nChristian Tellnes <christian@tellnes.no>\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he\/him)\nthlorenz -\nThorsten Lorenz <thlorenz@gmx.de>\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\ntunniclm -\nMike Tunnicliffe <m.j.tunnicliffe@gmail.com>\nvkurchatkin -\nVladimir Kurchatkin <vladimir.kurchatkin@gmail.com>\nvsemozhetbyt -\nVse Mozhet Byt <vsemozhetbyt@gmail.com> (he\/him)\nwhitlockjc -\nJeremy Whitlock <jwhitlock@apache.org>\n\nCollaborators follow the Collaborator Guide in\nmaintaining the Node.js project.\nTriagers\n\nPoojaDurgad -\nPooja Durgad <Pooja.D.P@ibm.com>\n\nRelease Keys\nPrimary GPG keys for Node.js Releasers (some Releasers sign with subkeys):\n\nBeth Griggs <bgriggs@redhat.com>\n4ED778F539E3634C779C87C6D7062848A1AB005C\nColin Ihrig <cjihrig@gmail.com>\n94AE36675C464D64BAFA68DD7434390BDBE9B9C5\nDanielle Adams <adamzdanielle@gmail.com>\n1C050899334244A8AF75E53792EF661D867B9DFA\nJames M Snell <jasnell@keybase.io>\n71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\nMicha\u00ebl Zasso <targos@protonmail.com>\n8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\nMyles Borins <myles.borins@gmail.com>\nC4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\nRichard Lau <rlau@redhat.com>\nC82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C\nRod Vagg <rod@vagg.org>\nDD8F2338BAE7501E3DD5AC78C273792F7D83545D\nRuben Bridgewater <ruben@bridgewater.de>\nA48C2BEE680E841632CD4E44F07496B3EB3C1762\nRuy Adorno <ruyadorno@hotmail.com>\n108F52B48DB57BB0CC439B2997B01419BD92F80A\nShelley Vohr <shelley.vohr@gmail.com>\nB9E2F5981AA6E0CD28160D9FF13993A75599653C\n\nTo import the full set of trusted release keys (including subkeys possibly used\nto sign releases):\ngpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C\ngpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5\ngpg --keyserver pool.sks-keyservers.net --recv-keys 1C050899334244A8AF75E53792EF661D867B9DFA\ngpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\ngpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\ngpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\ngpg --keyserver pool.sks-keyservers.net --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C\ngpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\ngpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762\ngpg --keyserver pool.sks-keyservers.net --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C\nSee the section above on Verifying Binaries for how to\nuse these keys to verify a downloaded file.\nOther keys used to sign some previous releases:\n\nChris Dickinson <christopher.s.dickinson@gmail.com>\n9554F04D7259F04124DE6B476D5A82AC7E37093B\nEvan Lucas <evanlucas@me.com>\nB9AE9905FFD7803F25714661B63B535A4C206CA9\nGibson Fahnestock <gibfahn@gmail.com>\n77984A986EBC2AA786BC0F66B01FBB92821C587A\nIsaac Z. Schlueter <i@izs.me>\n93C7E9E91B49E432C2F75674B0A78B0A6C481CF6\nItalo A. Casas <me@italoacasas.com>\n56730D5401028683275BD23C23EFEFE93C4CFFFE\nJeremiah Senkpiel <fishrock@keybase.io>\nFD3A5288F042B6850C66B31F09FE44734EB7990E\nJulien Gilli <jgilli@fastmail.fm>\n114F43EE0176B71C7BC219DD50A3051F888C628D\nTimothy J Fontaine <tjfontaine@gmail.com>\n7937DFD2AB06298B2293C3187D33FF9D0246406D\n\n","11":"\n30 seconds of code\n\nShort JavaScript code snippets for all your development needs\n\n\nVisit our website to view our snippet collection.\nUse the Search page to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.\nBrowse the JavaScript Snippet List to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.\nClick on each snippet card to view the whole snippet, including code, explanation and examples.\nYou can use the button on the right side of a snippet card to copy the code to clipboard.\nIf you like the project, give it a star. It means a lot to the people maintaining it.\n\nWant to contribute?\n\nIf you want to help us improve, take a minute to read the Contribution Guidelines first.\nUse the Snippet Template to add new snippets to the collection.\nIf you find a problem with a specific snippet, please open an issue.\nIf you find a problem with the website, please report it in the web repository.\n\nCredits & Sponsors\n\nThis repository is maintained by the 30-seconds organization on GitHub.\nAll snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.\nLogos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.\nOur website is powered by Netlify, Gatsby, Travis CI & GitHub.\n\n","12":"three.js\n\n\n\n\n\nJavaScript 3D library\nThe aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.\nExamples \u2014\nDocumentation \u2014\nWiki \u2014\nMigrating \u2014\nQuestions \u2014\nForum \u2014\nSlack \u2014\nDiscord\nUsage\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a WebGL renderer for the scene and camera, and it adds that viewport to the document.body element. Finally, it animates the cube within the scene for the camera.\nimport * as THREE from '.\/js\/three.module.js';\n\nlet camera, scene, renderer;\nlet geometry, material, mesh;\n\ninit();\nanimate();\n\nfunction init() {\n\n\tcamera = new THREE.PerspectiveCamera( 70, window.innerWidth \/ window.innerHeight, 0.01, 10 );\n\tcamera.position.z = 1;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\n\tmaterial = new THREE.MeshNormalMaterial();\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tdocument.body.appendChild( renderer.domElement );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.02;\n\n\trenderer.render( scene, camera );\n\n}\nIf everything went well, you should see this.\nCloning this repository\nCloning the repo with all its history results in a ~2GB download. If you don't need the whole history you can use the depth parameter to significantly reduce download size.\ngit clone --depth=1 https:\/\/github.com\/mrdoob\/three.js.git\nChange log\nReleases\n","13":"\n\nVersion 5 \u2013 the iconic SVG, font, and CSS framework\n\nThe internet's most popular icon toolkit has been redesigned and built from\nscratch. On top of this, features like icon font ligatures, an SVG framework,\nofficial NPM packages for popular frontend libraries like React, and access to\na new CDN.\nNot familiar with Font Awesome 5? Learn\nmore about our\nsuccessful Kickstarter and plan. You can also order Font Awesome\nPro which includes tons more icons directly\nfrom fontawesome.com.\nDocumentation\nLearn how to get started with Font Awesome and then dive deeper into other and advanced topics:\nUsing Font Awesome on the Web\n\nWith SVG with JavaScript\nWith web fonts with CSS\nUpgrading from version 4\nInstalling Font Awesome with a package manager\nDownloading + hosting Font Awesome yourself\nPerformance and security\nAccessibility\nTroubleshooting\n\nAdvanced Options & Techniques\n\nUsing CSS pseudo-elements\nSVG sprites\nThe Font Awesome API\nSVG symbols\nSVG JavaScript Core\nServer side rendering\n\nUsing Font Awesome on the Desktop\n\nGetting started\nUpgrading from version 4\nUsing ligatures\nUsing glyphs\nTroubleshooting\n\nWhere did Font Awesome 4 (or 3) go?\nNow that Font Awesome 5 has been released we are marking version 4 as\nend-of-life. We don't plan on releasing any further versions of the 4.x or 3.x.\nDocumentation is still available but it's moved to\nhttps:\/\/fontawesome.com\/v4.7.0 and\nhttps:\/\/fontawesome.com\/v3.2.1.\nThe Git repository for\nv4.7.0 and\nv3.2.1 can\nbe found in our GitHub releases.\nChange log\nWe'll keep track of each release in the CHANGELOG.md\nLooking for older versions of Font Awesome? Check the releases.\nUpgrading\nFrom time-to-time we'll have special upgrading instructions from one version to the next.\nCheck out the UPGRADING.md guide when you upgrade your dependencies.\nCode of conduct\nWe will behave ourselves if you behave yourselves. For more details see our\nCODE_OF_CONDUCT.md.\nContributing\nPlease read through our contributing guidelines.  Included\nare directions for opening issues.\nVersioning\nFont Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered\nwith the following format:\n<major>.<minor>.<patch>\nFor more information on SemVer, please visit http:\/\/semver.org.\nThe major version \"5\" is part of an umbrella release.  It includes many different types of files and technologies. Therefore\nwe deviate from normal SemVer in the following ways:\n\nAny release may update the design, look-and-feel, or branding of an existing\nicon\nWe will never intentionally release a patch version update that breaks\nbackward compatibility\nA minor release may include backward-incompatible changes but we will\nwrite clear upgrading instructions in UPGRADING.md\nA minor or patch release will never remove icons\nBug fixes will be addressed as patch releases unless they include backward\nincompatibility then they will be minor releases\n\nLicense\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\n\nIcons \u2014 CC BY 4.0 License\n\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.\n\n\nFonts \u2014 SIL OFL 1.1 License\n\nIn the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.\n\n\nCode \u2014 MIT License\n\nIn the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.\n\n\n\nAttribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\nTeam\n\nDave Gandy\nTravis Chase\nRob Madole\nBrian Talbot\nJory Raphael\nMike Wilkerson\nTrevor Chase\nJason Lundien\nJason Otero\nEdward Emanuel\nGeremia Taglialatela\n\n","14":"\n\n\nMaterial-UI\n\nReact components for faster and simpler web development. Build your own design system, or start with Material Design.\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nMaterial-UI is available as an npm package.\nStable channel v4\n\/\/ with npm\nnpm install @material-ui\/core\n\n\/\/ with yarn\nyarn add @material-ui\/core\nAlpha channel v5\n\/\/ with npm\nnpm install @material-ui\/core@next\n\n\/\/ with yarn\nyarn add @material-ui\/core@next\n\nOlder versions\n\nv3.x (Migration from v3 to v4)\nv0.x (Migration to v1)\n\n\nPlease note that @next will only point to pre-releases; to get the latest stable release use @latest instead.\nWho sponsors Material-UI?\nDiamond \ud83d\udc8e\n\n\n\n\nDiamond Sponsors are those who have pledged $1,500\/month or more to Material-UI.\nGold \ud83c\udfc6\nvia Patreon\n\n\n\n\nvia OpenCollective\n\n\n\n\nGold Sponsors are those who have pledged $500\/month or more to Material-UI.\nThere is more!\nSee the full list of our backers.\nUsage\nHere is a quick example to get you started, it's all you need:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui\/core\/Button';\n\nfunction App() {\n  return <Button variant=\"contained\">Hello World<\/Button>;\n}\n\nReactDOM.render(<App \/>, document.querySelector('#app'));\nYes, it's really all you need to get started as you can see in this live and interactive demo:\n\nQuestions\nFor how-to questions and other non-issues,\nplease use StackOverflow instead of GitHub issues.\nThere is a StackOverflow tag called \"material-ui\" that you can use to tag your questions.\nExamples\nAre you looking for an example project to get started?\nWe host some.\nDocumentation\nCheck out our documentation website.\nPremium Themes\nYou can find complete templates & themes in the Material-UI store.\nContributing\nRead the contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.\nNotice that contributions go far beyond pull requests and commits.\nAlthough we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of other contributions.\nChangelog\nIf you have recently updated, please read the changelog for details of what has changed.\nRoadmap\nThe future plans and high priority features and enhancements can be found in the roadmap file.\nLicense\nThis project is licensed under the terms of the\nMIT license.\nSponsoring services\nThese great services sponsor Material-UI's core infrastructure:\n\nGitHub allows us to host the Git repository.\n\nCircleCI allows us to run the test suite.\n\nNetlify allows us to distribute the documentation.\n\nCrowdIn allows us to translate the documentation.\n\nBrowserStack allows us to test in real browsers.\n\nCodeCov allows us to monitor the test coverage.\n","15":"AngularJS \nAngularJS lets you write client-side web applications as if you had a smarter browser.  It lets you\nuse good old HTML (or HAML, Jade\/Pug and friends!) as your template language and lets you extend HTML\u2019s\nsyntax to express your application\u2019s components clearly and succinctly.  It automatically\nsynchronizes data from your UI (view) with your JavaScript objects (model) through 2-way data\nbinding. To help you structure your application better and make it easy to test, AngularJS teaches\nthe browser how to do dependency injection and inversion of control.\nIt also helps with server-side communication, taming async callbacks with promises and deferred objects,\nand it makes client-side navigation and deep linking with hashbang urls or HTML5 pushState a\npiece of cake. Best of all? It makes development fun!\n\nOn July 1, 2018 AngularJS entered a 3 year Long Term Support period: Find out more\nLooking for the new Angular? Go here: https:\/\/github.com\/angular\/angular\n\n\nWeb site: https:\/\/angularjs.org\nTutorial: https:\/\/docs.angularjs.org\/tutorial\nAPI Docs: https:\/\/docs.angularjs.org\/api\nDeveloper Guide: https:\/\/docs.angularjs.org\/guide\nContribution guidelines: CONTRIBUTING.md\nCore Development: DEVELOPERS.md\nDashboard: https:\/\/dashboard.angularjs.org\n\nDocumentation\nGo to https:\/\/docs.angularjs.org\nContribute\nWe've set up a separate document for our\ncontribution guidelines.\nDevelop\nWe've set up a separate document for\ndevelopers.\n\nWhat to use AngularJS for and when to use it\nAngularJS is the next generation framework where each component is designed to work with every other\ncomponent in an interconnected way like a well-oiled machine. AngularJS is JavaScript MVC made easy\nand done right. (Well it is not really MVC, read on, to understand what this means.)\nMVC, no, MV* done the right way!\nMVC, short for Model-View-Controller, is a design pattern, i.e. how the code should be organized and\nhow the different parts of an application separated for proper readability and debugging. Model is\nthe data and the database. View is the user interface and what the user sees. Controller is the main\nlink between Model and View. These are the three pillars of major programming frameworks present on\nthe market today. On the other hand AngularJS works on MV*, short for Model-View-Whatever. The\nWhatever is AngularJS's way of telling that you may create any kind of linking between the Model\nand the View here.\nUnlike other frameworks in any programming language, where MVC, the three separate components, each\none has to be written and then connected by the programmer, AngularJS helps the programmer by asking\nhim\/her to just create these and everything else will be taken care of by AngularJS.\nInterconnection with HTML at the root level\nAngularJS uses HTML to define the user's interface. AngularJS also enables the programmer to write\nnew HTML tags (AngularJS Directives) and increase the readability and understandability of the HTML\ncode. Directives are AngularJS\u2019s way of bringing additional functionality to HTML. Directives\nachieve this by enabling us to invent our own HTML elements. This also helps in making the code DRY\n(Don't Repeat Yourself), which means once created, a new directive can be used anywhere within the\napplication.\nHTML is also used to determine the wiring of the app. Special attributes in the HTML determine where\nto load the app, which components or controllers to use for each element, etc. We specify \"what\"\ngets loaded, but not \"how\". This declarative approach greatly simplifies app development in a sort\nof WYSIWYG way. Rather than spending time on how the program flows and orchestrating the various\nmoving parts, we simply define what we want and AngularJS will take care of the dependencies.\nData Handling made simple\nData and Data Models in AngularJS are plain JavaScript objects and one can add and change properties\ndirectly on it and loop over objects and arrays at will.\nTwo-way Data Binding\nOne of AngularJS's strongest features. Two-way Data Binding means that if something changes in the\nModel, the change gets reflected in the View instantaneously, and the same happens the other way\naround. This is also referred to as Reactive Programming, i.e. suppose a = b + c is being\nprogrammed and after this, if the value of b and\/or c is changed then the value of a will be\nautomatically updated to reflect the change. AngularJS uses its \"scopes\" as a glue between the Model\nand View and makes these updates in one available for the other.\nLess Written Code and Easily Maintainable Code\nEverything in AngularJS is created to enable the programmer to end up writing less code that is\neasily maintainable and readable by any other new person on the team. Believe it or not, one can\nwrite a complete working two-way data binded application in less than 10 lines of code. Try and see\nfor yourself!\nTesting Ready\nAngularJS has Dependency Injection, i.e. it takes care of providing all the necessary dependencies\nto its controllers and services whenever required. This helps in making the AngularJS code ready for\nunit testing by making use of mock dependencies created and injected. This makes AngularJS more\nmodular and easily testable thus in turn helping a team create more robust applications.\n","16":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nVisit https:\/\/nextjs.org\/learn to get started with Next.js.\nDocumentation\nVisit https:\/\/nextjs.org\/docs to view the full documentation.\nWho is using Next.js?\nNext.js is used by the world's leading companies. Check out the Next.js Showcase to learn more.\nCommunity\nThe Next.js community can be found on GitHub Discussions, where you can ask questions, voice ideas, and share your projects.\nTo chat with other community members you can join the Next.js Discord.\nOur Code of Conduct applies to all Next.js community channels.\nContributing\nPlease see our contributing.md.\nAuthors\n\nArunoda Susiripala (@arunoda) \u2013 Vercel\nTim Neutkens (@timneutkens) \u2013 Vercel\nNaoyuki Kanezawa (@nkzawa) \u2013 Vercel\nTony Kovanen (@tonykovanen) \u2013 Vercel\nGuillermo Rauch (@rauchg) \u2013 Vercel\nDan Zajdband (@impronunciable) \u2013 Knight-Mozilla \/ Coral Project\n\n","17":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwebpack\n\n    webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.\n  \n\nTable of Contents\n\nInstall\nIntroduction\nConcepts\nContributing\nSupport\nCore Team\nSponsoring\nPremium Partners\nOther Backers and Sponsors\nGold Sponsors\nSilver Sponsors\nBronze Sponsors\nBackers\nSpecial Thanks\n\nInstall\nInstall with npm:\nnpm install --save-dev webpack\nInstall with yarn:\nyarn add webpack --dev\nIntroduction\nwebpack is a bundler for modules. The main purpose is to bundle JavaScript\nfiles for usage in a browser, yet it is also capable of transforming, bundling,\nor packaging just about any resource or asset.\nTL;DR\n\nBundles ES Modules, CommonJS, and AMD modules (even combined).\nCan create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).\nDependencies are resolved during compilation, reducing the runtime size.\nLoaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.\nHighly modular plugin system to do whatever else your application requires.\n\nGet Started\nCheck out webpack's quick Get Started guide and the other guides.\nBrowser Compatibility\nwebpack supports all browsers that are ES5-compliant (IE8 and below are not supported).\nwebpack also needs Promise for import() and require.ensure(). If you want to support older browsers, you will need to load a polyfill before using these expressions.\nConcepts\nPlugins\nwebpack has a rich plugin\ninterface. Most of the features\nwithin webpack itself use this plugin interface. This makes webpack very\nflexible.\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nmini-css-extract-plugin\n\n\nExtracts CSS into separate files. It creates a CSS file per JS file which contains CSS.\n\n\ncompression-webpack-plugin\n\n\nPrepares compressed versions of assets to serve them with Content-Encoding\n\n\ni18n-webpack-plugin\n\n\nAdds i18n support to your bundles\n\n\nhtml-webpack-plugin\n\n\nSimplifies creation of HTML files (index.html) to serve your bundles\n\n\nextract-text-webpack-plugin\n\n\nExtract text from a bundle, or bundles, into a separate file\n\n\n\nLoaders\nwebpack enables the use of loaders to preprocess files. This allows you to bundle\nany static resource way beyond JavaScript. You can easily write your own\nloaders using Node.js.\nLoaders are activated by using loadername! prefixes in require() statements,\nor are automatically applied via regex from your webpack configuration.\nFiles\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nraw-loader\n\n\nLoads raw content of a file (utf-8)\n\n\nval-loader\n\n\nExecutes code as module and considers exports as JS code\n\n\nurl-loader\n\n\nWorks like the file loader, but can return a Data Url if the file is smaller than a limit\n\n\nfile-loader\n\n\nEmits the file into the output folder and returns the (relative) url\n\n\n\nJSON\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads a JSON file (included by default)\n\n\n\n\n\nLoads and transpiles a JSON 5 file\n\n\n\n\n\nLoads and transpiles a CSON file\n\n\n\nTranspiling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<script>\n\n\nExecutes a JavaScript file once in global context (like in script tag), require()s are not parsed\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Babel\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Traceur\n\n\n\n\n\nLoads TypeScript like JavaScript\n\n\nawesome-typescript-loader\n\n\nAwesome TypeScript loader for webpack\n\n\n\n\n\nLoads CoffeeScript like JavaScript\n\n\n\nTemplating\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nExports HTML as string, requires references to static resources\n\n\n\n\n\nLoads Pug templates and returns a function\n\n\n\n\n\nCompiles Markdown to HTML\n\n\n\n\n\nLoads and transforms a HTML file using PostHTML\n\n\n\n\n\nCompiles Handlebars to HTML\n\n\n\nStyling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<style>\n\n\nAdd exports of a module as style to DOM\n\n\n\n\n\nLoads CSS file with resolved imports and returns CSS code\n\n\n\n\n\nLoads and compiles a LESS file\n\n\n\n\n\nLoads and compiles a Sass\/SCSS file\n\n\n\n\n\nLoads and compiles a Stylus file\n\n\n\n\n\nLoads and transforms a CSS\/SSS file using PostCSS\n\n\n\nLinting & Testing\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nTests with mocha (Browser\/NodeJS)\n\n\n\n\n\nPreLoader for linting code using ESLint\n\n\n\n\n\nPreLoader for linting code using JSHint\n\n\n\nFrameworks\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads and compiles Vue Components\n\n\n\n\n\nProcess HTML & CSS with preprocessor of choice and require() Web Components like first-class modules\n\n\n\n\n\nLoads and compiles Angular 2 Components\n\n\n\n\n\nRiot official webpack loader\n\n\n\nPerformance\nwebpack uses async I\/O and has multiple caching levels. This makes webpack fast\nand incredibly fast on incremental compilations.\nModule Formats\nwebpack supports ES2015+, CommonJS and AMD modules out of the box. It performs clever static\nanalysis on the AST of your code. It even has an evaluation engine to evaluate\nsimple expressions. This allows you to support most existing libraries out of the box.\nCode Splitting\nwebpack allows you to split your codebase into multiple chunks. Chunks are\nloaded asynchronously at runtime. This reduces the initial loading time.\nOptimizations\nwebpack can do many optimizations to reduce the output size of your\nJavaScript by deduplicating frequently used modules, minifying, and giving\nyou full control of what is loaded initially and what is loaded at runtime\nthrough code splitting. It can also make your code chunks cache\nfriendly by using hashes.\nContributing\nWe want contributing to webpack to be fun, enjoyable, and educational for anyone, and everyone. We have a vibrant ecosystem that spans beyond this single repo. We welcome you to check out any of the repositories in our organization or webpack-contrib organization which houses all of our loaders and plugins.\nContributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on webpack, we also are thrilled to receive a variety of other contributions including:\n\nDocumentation updates, enhancements, designs, or bugfixes\nSpelling or grammar fixes\nREADME.md corrections or redesigns\nAdding unit, or functional tests\nTriaging GitHub issues -- especially determining whether an issue still persists or is reproducible.\nSearching #webpack on twitter and helping someone else who needs help\nTeaching others how to contribute to one of the many webpack's repos!\nBlogging, speaking about, or creating tutorials about one of webpack's many features.\nHelping others in our webpack gitter channel.\n\nTo get started have a look at our documentation on contributing.\nIf you are worried or don't know where to start, you can always reach out to Sean Larkin (@TheLarkInn) on Twitter or simply submit an issue and a maintainer can help give you guidance!\nWe have also started a series on our Medium Publication called The Contributor's Guide to webpack. We welcome you to read it and post any questions or responses if you still need help.\nLooking to speak about webpack? We'd love to review your talk abstract\/CFP! You can email it to webpack [at] opencollective [dot] com and we can give pointers or tips!!!\nCreating your own plugins and loaders\nIf you create a loader or plugin, we would <3 for you to open source it, and put it on npm. We follow the x-loader, x-webpack-plugin naming convention.\nSupport\nWe consider webpack to be a low-level tool used not only individually but also layered beneath other awesome tools. Because of its flexibility, webpack isn't always the easiest entry-level solution, however we do believe it is the most powerful. That said, we're always looking for ways to improve and simplify the tool without compromising functionality. If you have any ideas on ways to accomplish this, we're all ears!\nIf you're just getting started, take a look at our new docs and concepts page. This has a high level overview that is great for beginners!!\nLooking for webpack 1 docs? Please check out the old wiki, but note that this deprecated version is no longer supported.\nIf you want to discuss something or just need help, here is our Gitter room where there are always individuals looking to help out!\nIf you are still having difficulty, we would love for you to post\na question to StackOverflow with the webpack tag. It is much easier to answer questions that include your webpack.config.js and relevant files! So if you can provide them, we'd be extremely grateful (and more likely to help you find the answer!)\nIf you are twitter savvy you can tweet #webpack with your question and someone should be able to reach out and help also.\nIf you have discovered a \ud83d\udc1c or have a feature suggestion, feel free to create an issue on Github.\nLicense\n\nCore Team\n\n\n\n\n\n\nTobias Koppers\nCore\n\nFounder of webpack\n\n\n\n\nJohannes Ewald\nLoaders & Plugins\n\nEarly adopter of webpack\n\n\n\n\nSean T. Larkin\nPublic Relations\n\nFounder of the core team\n\n\n\n\nKees Kluskens\nDevelopment\n\nSponsor\n\n\n\n\n\n\n\n\nSponsoring\nMost of the core team members, webpack contributors and contributors in the ecosystem do this open source work in their free time. If you use webpack for a serious task, and you'd like us to invest more time on it, please donate. This project increases your income\/productivity too. It makes development and applications faster and it reduces the required bandwidth.\nThis is how we use the donations:\n\nAllow the core team to work on webpack\nThank contributors if they invested a large amount of time in contributing\nSupport projects in the ecosystem that are of great value for users\nSupport projects that are voted most (work in progress)\nInfrastructure cost\nFees for money handling\n\nPremium Partners\n\n\n\n\nOther Backers and Sponsors\nBefore we started using OpenCollective, donations were made anonymously. Now that we have made the switch, we would like to acknowledge these sponsors (and the ones who continue to donate using OpenCollective). If we've missed someone, please send us a PR, and we'll add you to this list.\n\n\n\n\n\nGold Sponsors\nBecome a gold sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSilver Sponsors\nBecome a silver sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBronze Sponsors\nBecome a bronze sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackers\nBecome a backer and get your image on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecial Thanks to\n(In chronological order)\n\n@google for Google Web Toolkit (GWT), which aims to compile Java to JavaScript. It features a similar Code Splitting as webpack.\n@medikoo for modules-webmake, which is a similar project. webpack was born because I wanted Code Splitting for modules-webmake. Interestingly the Code Splitting issue is still open (thanks also to @Phoscur for the discussion).\n@substack for browserify, which is a similar project and source for many ideas.\n@jrburke for require.js, which is a similar project and source for many ideas.\n@defunctzombie for the browser-field spec, which makes modules available for node.js, browserify and webpack.\nEvery early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...\n@shama, @jhnns and @sokra for maintaining this project\nEveryone who has written a loader for webpack. You are the ecosystem...\nEveryone I forgot to mention here, but also influenced webpack.\n\n","18":"Node.js Best Practices\n\n\n\n\n\n  \n\n\n Follow us on Twitter! @nodepractices\n\nRead in a different language: CN, BR, RU, PL (ES, FR, HE, KR and TR in progress!)\n\nBuilt and maintained by our Steering Committee and Collaborators\nLatest Best Practices and News\n\n\n\u2705 New best practice: Bullet 6.8 by Josh Hemphill recommends \"Protect Users' Passwords\/Secrets using BCrypt or Script\". It contains an in-depth explanation about when and why each option suits a specific project. Don't miss this short guide with a brief overview of the various hashing options\n\n\n\ud83c\udf89 Node.js best practices reached 50k stars: Thank you to each and every contributor who helped turning this project into what it is today! We've got lots of plans for the time ahead, as we expand our ever-growing list of Node.js best practices even further\n\n\n\ud83d\udc33 Node.js + Docker best practices: We've just released the Docker with Node.js section which includes 15 bullets about better coding techniques with Docker\n\n\n\nWelcome! 3 Things You Ought To Know First\n1. You are reading dozens of the best Node.js articles - this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators\n2. It is the largest compilation, and it is growing every week - currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We'd love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our writing guidelines here\n3. Best practices have additional info - most bullets include a \ud83d\udd17Read More link that expands on the practice with code examples, quotes from selected blogs, and more information\n\nTable of Contents\n\nProject Structure Practices (5)\nError Handling Practices (11) \nCode Style Practices (12) \nTesting And Overall Quality Practices (13) \nGoing To Production Practices (19) \nSecurity Practices (25)\nPerformance Practices (2) (Work In Progress\ufe0f \u270d\ufe0f)\nDocker Practices (15)\n\n\n1. Project Structure Practices\n 1.1 Structure your solution by components\nTL;DR: The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit 'Read More' below to see examples of correct project structure\nOtherwise: When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It's also considered harder to scale-out when all the business units are not separated\n\ud83d\udd17 Read More: structure by components\n\n 1.2 Layer your components, keep the web layer within its boundaries\nTL;DR: Each component should contain 'layers' - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks\nOtherwise: App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc\n\ud83d\udd17 Read More: layer your app\n\n 1.3 Wrap common utilities as npm packages\nTL;DR: In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects\nOtherwise: You'll have to invent your deployment and the dependency wheel\n\ud83d\udd17 Read More: Structure by feature\n\n 1.4 Separate Express 'app' and 'server'\nTL;DR: Avoid the nasty habit of defining the entire Express app in a single huge file - separate your 'Express' definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components\nOtherwise: Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won't be a big pleasure to maintain hundreds of lines of code in a single file\n\ud83d\udd17 Read More: separate Express 'app' and 'server'\n\n 1.5 Use environment aware, secure and hierarchical config\nTL;DR: A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like rc, nconf, config, and convict.\nOtherwise: Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both\n\ud83d\udd17 Read More: configuration best practices\n\n\u2b06 Return to top\n2. Error Handling Practices\n 2.1 Use Async-Await or promises for async error handling\nTL;DR: Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch\nOtherwise: Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns\n\ud83d\udd17 Read More: avoiding callbacks\n\n 2.2 Use only the built-in Error object\nTL;DR: Many throw errors as a string or as some custom type \u2013 this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error \u2013 using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information\nOtherwise: When invoking some component, being uncertain which type of errors come in return \u2013 it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!\n\ud83d\udd17 Read More: using the built-in error object\n\n 2.3 Distinguish operational vs programmer errors\nTL;DR: Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application\nOtherwise: You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal \u2013 keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context\n\ud83d\udd17 Read More: operational vs programmer error\n\n 2.4 Handle errors centrally, not within a middleware\nTL;DR: Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in\nOtherwise: Not handling errors within a single place will lead to code duplication and probably to improperly handled errors\n\ud83d\udd17 Read More: handling errors in a centralized place\n\n 2.5 Document API errors using Swagger or GraphQL\nTL;DR: Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you're using GraphQL, you can utilize your schema and comments as well.\nOtherwise: An API client might decide to crash and restart only because it received back an error it couldn\u2019t understand. Note: the caller of your API might be you (very typical in a microservice environment)\n\ud83d\udd17 Read More: documenting API errors in Swagger or GraphQL\n\n 2.6 Exit the process gracefully when a stranger comes to town\nTL;DR: When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like Forever or PM2\nOtherwise: When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily\n\ud83d\udd17 Read More: shutting the process\n\n 2.7 Use a mature logger to increase error visibility\nTL;DR: A set of mature logging tools like Pino or Log4js, will speed-up error discovery and understanding. So forget about console.log\nOtherwise: Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late\n\ud83d\udd17 Read More: using a mature logger\n\n 2.8 Test error flows using your favorite test framework\nTL;DR: Whether professional automated QA or plain manual developer testing \u2013 Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha & Chai can handle this easily (see code examples within the \"Gist popup\")\nOtherwise: Without testing, whether automatically or manually, you can\u2019t rely on your code to return the right errors. Without meaningful errors \u2013 there\u2019s no error handling\n\ud83d\udd17 Read More: testing error flows\n\n 2.9 Discover errors and downtime using APM products\nTL;DR: Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing\nOtherwise: You might spend great effort on measuring API performance and downtimes, probably you\u2019ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX\n\ud83d\udd17 Read More: using APM products\n\n 2.10 Catch unhandled promise rejections\nTL;DR: Any exception thrown within a promise will get swallowed and discarded unless a developer didn\u2019t forget to explicitly handle it. Even if your code is subscribed to process.uncaughtException! Overcome this by registering to the event process.unhandledRejection\nOtherwise: Your errors will get swallowed and leave no trace. Nothing to worry about\n\ud83d\udd17 Read More: catching unhandled promise rejection\n\n 2.11 Fail fast, validate arguments using a dedicated library\nTL;DR: Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like ajv and Joi\nOtherwise: Consider this \u2013 your function expects a numeric argument \u201cDiscount\u201d which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?\n\ud83d\udd17 Read More: failing fast\n\n\u2b06 Return to top\n3. Code Style Practices\n 3.1 Use ESLint\nTL;DR: ESLint is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like prettier and beautify are more powerful in formatting the fix and work in conjunction with ESLint\nOtherwise: Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project's code style\n\ud83d\udd17 Read More: Using ESLint and Prettier\n\n 3.2 Node.js specific plugins\nTL;DR: On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like eslint-plugin-node, eslint-plugin-mocha and eslint-plugin-node-security\nOtherwise: Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early\n\n 3.3 Start a Codeblock's Curly Braces on the Same Line\nTL;DR: The opening curly braces of a code block should be on the same line as the opening statement\nCode Example\n\/\/ Do\nfunction someFunction() {\n  \/\/ code block\n}\n\n\/\/ Avoid\nfunction someFunction()\n{\n  \/\/ code block\n}\nOtherwise: Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:\n\ud83d\udd17 Read more: \"Why do results vary based on curly brace placement?\" (StackOverflow)\n\n 3.4 Separate your statements properly\nNo matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.\nTL;DR: Use ESLint to gain awareness about separation concerns. Prettier or Standardjs can automatically resolve these issues.\nOtherwise: As seen in the previous section, JavaScript's interpreter automatically adds a semicolon at the end of a statement if there isn't one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.\nCode example\n\/\/ Do\nfunction doThing() {\n    \/\/ ...\n}\n\ndoThing()\n\n\/\/ Do\n\nconst items = [1, 2, 3]\nitems.forEach(console.log)\n\n\/\/ Avoid \u2014 throws exception\nconst m = new Map()\nconst a = [1,2,3]\n[...m.values()].forEach(console.log)\n> [...m.values()].forEach(console.log)\n>  ^^^\n> SyntaxError: Unexpected token ...\n\n\/\/ Avoid \u2014 throws exception\nconst count = 2 \/\/ it tries to run 2(), but 2 is not a function\n(function doSomething() {\n  \/\/ do something amazing\n}())\n\/\/ put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs alltogether\n\ud83d\udd17 Read more: \"Semi ESLint rule\"\n\ud83d\udd17 Read more: \"No unexpected multiline ESLint rule\"\n\n 3.5 Name your functions\nTL;DR: Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you're looking at when checking a memory snapshot\nOtherwise: Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions\n\n 3.6 Use naming conventions for variables, constants, functions and classes\nTL;DR: Use lowerCamelCase when naming constants, variables and functions and UpperCamelCase (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables\/functions, and classes that require instantiation. Use descriptive names, but try to keep them short\nOtherwise: Javascript is the only language in the world that allows invoking a constructor (\"Class\") directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase\n3.6 Code Example\n\/\/ for class name we use UpperCamelCase\nclass SomeClassExample {}\n\n\/\/ for const names we use the const keyword and lowerCamelCase\nconst config = {\n  key: \"value\"\n};\n\n\/\/ for variables and functions names we use lowerCamelCase\nlet someVariableExample = \"value\";\nfunction doSomething() {}\n\n 3.7 Prefer const over let. Ditch the var\nTL;DR: Using const means that once a variable is assigned, it cannot be reassigned. Preferring const will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use let to declare it. Another important aspect of let is that a variable declared using it is only available in the block scope in which it was defined. var is function scoped, not block-scoped, and shouldn't be used in ES6 now that you have const and let at your disposal\nOtherwise: Debugging becomes way more cumbersome when following a variable that frequently changes\n\ud83d\udd17 Read more: JavaScript ES6+: var, let, or const? \n\n 3.8 Require modules first, not inside functions\nTL;DR: Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems\nOtherwise: Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function\n\n 3.9 Require modules by folders, as opposed to the files directly\nTL;DR: When developing a module\/library in a folder, place an index.js file that exposes the module's internals so every consumer will pass through it. This serves as an 'interface' to your module and eases future changes without breaking the contract\nOtherwise: Changing the internal structure of files or the signature may break the interface with clients\n3.9 Code example\n\/\/ Do\nmodule.exports.SMSProvider = require(\".\/SMSProvider\");\nmodule.exports.SMSNumberResolver = require(\".\/SMSNumberResolver\");\n\n\/\/ Avoid\nmodule.exports.SMSProvider = require(\".\/SMSProvider\/SMSProvider.js\");\nmodule.exports.SMSNumberResolver = require(\".\/SMSNumberResolver\/SMSNumberResolver.js\");\n\n 3.10 Use the === operator\nTL;DR: Prefer the strict equality operator === over the weaker abstract equality operator ==. == will compare two variables after converting them to a common type. There is no type conversion in ===, and both variables must be of the same type to be equal\nOtherwise: Unequal variables might return true when compared with the == operator\n3.10 Code example\n\"\" == \"0\"; \/\/ false\n0 == \"\"; \/\/ true\n0 == \"0\"; \/\/ true\n\nfalse == \"false\"; \/\/ false\nfalse == \"0\"; \/\/ true\n\nfalse == undefined; \/\/ false\nfalse == null; \/\/ false\nnull == undefined; \/\/ true\n\n\" \\t\\r\\n \" == 0; \/\/ true\nAll statements above will return false if used with ===\n\n 3.11 Use Async Await, avoid callbacks\nTL;DR: Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch\nOtherwise: Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow\n\ud83d\udd17Read more: Guide to async-await 1.0\n\n 3.12 Use arrow function expressions (=>)\nTL;DR: Though it's recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. this)\nOtherwise: Longer code (in ES5 functions) is more prone to bugs and cumbersome to read\n\ud83d\udd17 Read more: It\u2019s Time to Embrace Arrow Functions\n\n\u2b06 Return to top\n4. Testing And Overall Quality Practices\n 4.1 At the very least, write API (component) testing\nTL;DR: Most projects just don't have any automated testing due to short timetables or often the 'testing project' ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like Postman. Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc\nOtherwise: You may spend long days on writing unit tests to find out that you got only 20% system coverage\n\n 4.2 Include 3 parts in each test name\nTL;DR: Make the test speak at the requirements level so it's self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result\nOtherwise: A deployment just failed, a test named \u201cAdd product\u201d failed. Does this tell you what exactly is malfunctioning?\n\ud83d\udd17 Read More: Include 3 parts in each test name\n\n 4.3 Structure tests by the AAA pattern\nTL;DR: Structure your tests with 3 well-separated sections: Arrange, Act & Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan\nOtherwise: Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain\n\ud83d\udd17 Read More: Structure tests by the AAA pattern\n\n 4.4 Detect code issues with a linter\nTL;DR: Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check Section 3 on Code Style Practices\nOtherwise: You may let pass some anti-pattern and possible vulnerable code to your production environment.\n\n 4.5 Avoid global test fixtures and seeds, add data per-test\nTL;DR: To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records\nOtherwise: Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build\n\ud83d\udd17 Read More: Avoid global test fixtures\n\n 4.6 Constantly inspect for vulnerable dependencies\nTL;DR: Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as \ud83d\udd17 npm audit and \ud83d\udd17 snyk.io that can be invoked from your CI on every build\nOtherwise: Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious\n\n 4.7 Tag your tests\nTL;DR: Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha --grep 'sanity'\nOtherwise: Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests\n\n 4.8 Check your test coverage, it helps to identify wrong test patterns\nTL;DR: Code coverage tools like Istanbul\/NYC are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold\nOtherwise: There won't be any automated metric telling you when a large portion of your code is not covered by testing\n\n 4.9 Inspect for outdated packages\nTL;DR: Use your preferred tool (e.g. 'npm outdated' or npm-check-updates to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version\nOtherwise: Your production will run packages that have been explicitly tagged by their author as risky\n\n 4.10 Use production-like environment for e2e testing\nTL;DR: End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the Otherwise clause, this should mention docker-compose)\nOtherwise: Without docker-compose, teams must maintain a testing DB for each testing environment including developers' machines, keep all those DBs in sync so test results won't vary across environments\n\n 4.11 Refactor regularly using static analysis tools\nTL;DR: Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are Sonarqube (2,600+ stars) and Code Climate (1,500+ stars).\nOtherwise: With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix\n\ud83d\udd17 Read More: Refactoring!\n\n 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)\nTL;DR: Your continuous integration platform (CICD) will host all the quality tools (e.g test, lint) so it should come with a vibrant ecosystem of plugins. Jenkins used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like CircleCI and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it's a trade-off between robustness and speed - choose your side carefully\nOtherwise: Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup\n\ud83d\udd17 Read More: Choosing CI platform\n 4.13 Test your middlewares in isolation\nTL;DR: When a middleware holds some immense logic that spans many requests, it worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects\nOtherwise: A bug in Express middleware === a bug in all or most requests\n\ud83d\udd17 Read More: Test middlewares in isolation\n\n\u2b06 Return to top\n5. Going To Production Practices\n 5.1. Monitoring\nTL;DR: Monitoring is a game of finding out issues before customers do \u2013 obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click \u2018The Gist\u2019 below for an overview of the solutions\nOtherwise: Failure === disappointed customers. Simple\n\ud83d\udd17 Read More: Monitoring!\n\n 5.2. Increase transparency using smart logging\nTL;DR: Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted\nOtherwise: You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information\n\ud83d\udd17 Read More: Increase transparency using smart logging\n\n 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy\nTL;DR: Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use \u2018real\u2019 middleware services like nginx, HAproxy or cloud vendor services instead\nOtherwise: Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly\n\ud83d\udd17 Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy\n\n 5.4. Lock dependencies\nTL;DR: Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default \u2013 when you install packages at various environments it tries to fetch packages\u2019 latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use npm shrinkwrap. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default\nOtherwise: QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code\n\ud83d\udd17 Read More: Lock dependencies\n\n 5.5. Guard process uptime using the right tool\nTL;DR: The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today's \u2018dockerized\u2019 world, cluster management tools should be considered as well\nOtherwise: Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos\n\ud83d\udd17 Read More: Guard process uptime using the right tool\n\n 5.6. Utilize all CPU cores\nTL;DR: At its basic form, a Node app runs on a single CPU core while all others are left idling. It\u2019s your duty to replicate the Node process and utilize all CPUs \u2013 For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)\nOtherwise: Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)\n\ud83d\udd17 Read More: Utilize all CPU cores\n\n 5.7. Create a \u2018maintenance endpoint\u2019\nTL;DR: Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it\u2019s highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code\nOtherwise: You\u2019ll find that you\u2019re performing many \u201cdiagnostic deploys\u201d \u2013 shipping code to production only to extract some information for diagnostic purposes\n\ud83d\udd17 Read More: Create a \u2018maintenance endpoint\u2019\n\n 5.8. Discover errors and downtime using APM products\nTL;DR: Application monitoring and performance products (a.k.a APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-users side while suggesting the root cause\nOtherwise: You might spend great effort on measuring API performance and downtimes, probably you\u2019ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX\n\ud83d\udd17 Read More: Discover errors and downtime using APM products\n\n 5.9. Make your code production-ready\nTL;DR: Code with the end in mind, plan for production from day 1. This sounds a bit vague so I\u2019ve compiled a few development tips that are closely related to production maintenance (click Gist below)\nOtherwise: A world champion IT\/DevOps guy won\u2019t save a system that is badly written\n\ud83d\udd17 Read More: Make your code production-ready\n\n 5.10. Measure and guard the memory usage\nTL;DR: Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node\u2019s code \u2013 thus watching Node\u2019s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system\nOtherwise: Your process memory might leak a hundred megabytes a day like how it happened at Walmart\n\ud83d\udd17 Read More: Measure and guard the memory usage\n\n 5.11. Get your frontend assets out of Node\nTL;DR: Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model\nOtherwise: Your single Node thread will be busy streaming hundreds of html\/images\/angular\/react files instead of allocating all its resources for the task it was born for \u2013 serving dynamic content\n\ud83d\udd17 Read More: Get your frontend assets out of Node\n\n 5.12. Be stateless, kill your servers almost every day\nTL;DR: Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider \u2018killing\u2019 your servers periodically or use \u2018serverless\u2019 platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior\nOtherwise: Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server\n\ud83d\udd17 Read More: Be stateless, kill your Servers almost every day\n\n 5.13. Use tools that automatically detect vulnerabilities\nTL;DR: Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately\nOtherwise: Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious\n\ud83d\udd17 Read More: Use tools that automatically detect vulnerabilities\n\n 5.14. Assign a transaction id to each log statement\nTL;DR: Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Unfortunately, this is not easy to achieve in Node due to its async nature, see code examples inside\nOtherwise: Looking at a production error log without the context \u2013 what happened before \u2013 makes it much harder and slower to reason about the issue\n\ud83d\udd17 Read More: Assign \u2018TransactionId\u2019 to each log statement\n\n 5.15. Set NODE_ENV=production\nTL;DR: Set the environment variable NODE_ENV to \u2018production\u2019 or \u2018development\u2019 to flag whether production optimizations should get activated \u2013 many npm packages determine the current environment and optimize their code for production\nOtherwise: Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting NODE_ENV makes it slower by a factor of three!\n\ud83d\udd17 Read More: Set NODE_ENV=production\n\n 5.16. Design automated, atomic and zero-downtime deployments\nTL;DR: Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don\u2019t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment\nOtherwise: Long deployments -> production downtime & human-related error -> team unconfident in making deployment -> fewer deployments and features\n\n 5.17. Use an LTS release of Node.js\nTL;DR: Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements\nOtherwise: Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain\n\ud83d\udd17 Read More: Use an LTS release of Node.js\n\n 5.18. Don't route logs within the app\nTL;DR: Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to stdout using a logger utility and then let the execution environment (container, server, etc.) pipe the stdout stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).\nOtherwise: Application handling log routing === hard to scale, loss of logs, poor separation of concerns\n\ud83d\udd17 Read More: Log Routing\n\n 5.19. Install your packages with npm ci\nTL;DR: You have to be sure that production code uses the exact version of the packages you have tested it with. Run npm ci to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.\nOtherwise: QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.\n\ud83d\udd17 Read More: Use npm ci\n\n\u2b06 Return to top\n6. Security Best Practices\n\n\n\n 6.1. Embrace linter security rules\n \nTL;DR: Make use of security-related linter plugins such as eslint-plugin-security to catch security vulnerabilities and issues as early as possible, preferably while they're being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click 'Read more' below to see code examples that will get caught by a security linter\nOtherwise: What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories\n\ud83d\udd17 Read More: Lint rules\n\n 6.2. Limit concurrent requests using a middleware\n\nTL;DR: DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, rate-limiter-flexible package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. express-rate-limit)\nOtherwise: An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.\n\ud83d\udd17 Read More: Implement rate limiting\n\n 6.3 Extract secrets from config files or use packages to encrypt them\n \nTL;DR: Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes\/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit\/push hooks to prevent committing secrets accidentally\nOtherwise: Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).\n\ud83d\udd17 Read More: Secret management\n\n 6.4. Prevent query injection vulnerabilities with ORM\/ODM libraries\n\nTL;DR: To prevent SQL\/NoSQL injection and other malicious attacks, always make use of an ORM\/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. Sequelize, Knex, mongoose) have built-in protection against injection attacks.\nOtherwise: Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.\n\ud83d\udd17 Read More: Query injection prevention using ORM\/ODM libraries\n\n 6.5. Collection of generic security best practices\nTL;DR: This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.\n\ud83d\udd17 Read More: Common security best practices\n\n 6.6. Adjust the HTTP response headers for enhanced security\n\nTL;DR: Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like helmet.\nOtherwise: Attackers could perform direct attacks on your application's users, leading to huge security vulnerabilities\n\ud83d\udd17 Read More: Using secure headers in your application\n\n 6.7. Constantly and automatically inspect for vulnerable dependencies\n\nTL;DR: With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like npm audit or snyk to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.\nOtherwise: An attacker could detect your web framework and attack all its known vulnerabilities.\n\ud83d\udd17 Read More: Dependency security\n\n 6.8. Protect Users' Passwords\/Secrets using BCrypt or Script\n\nTL;DR: Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like bcrypt,scrypt, or worst case pbkdf2.\nOtherwise: Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.\n\ud83d\udd17 Read More: User Passwords\n\n 6.9. Escape HTML, JS and CSS output\n\nTL;DR: Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)\nOtherwise: An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients\n\ud83d\udd17 Read More: Escape output\n\n 6.10. Validate incoming JSON schemas\n \nTL;DR: Validate the incoming requests' body payload and ensure it meets expectations, fail fast if it doesn't. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as jsonschema or joi\nOtherwise: Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application\n\ud83d\udd17 Read More: Validate incoming JSON schemas\n\n 6.11. Support blacklisting JWTs\n\nTL;DR: When using JSON Web Tokens (for example, with Passport.js), by default there's no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there's no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blacklist of untrusted tokens that are validated on each request.\nOtherwise: Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.\n\ud83d\udd17 Read More: Blacklist JSON Web Tokens\n\n 6.12. Prevent brute-force attacks against authorization\n\nTL;DR: A simple and powerful technique is to limit authorization attempts using two metrics:\n\nThe first is number of consecutive failed attempts by the same user unique ID\/name and IP address.\nThe second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.\n\nOtherwise: An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application\n\ud83d\udd17 Read More: Login rate limiting\n\n 6.13. Run Node.js as non-root user\n\nTL;DR: There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It's recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user's behalf by invoking the container with the flag \"-u username\"\nOtherwise: An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)\n\ud83d\udd17 Read More: Run Node.js as non-root user\n\n 6.14. Limit payload size using a reverse-proxy or a middleware\n \nTL;DR: The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS\/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring express body parser to accept only small-size payloads\nOtherwise: Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks\n\ud83d\udd17 Read More: Limit payload size\n\n 6.15. Avoid JavaScript eval statements\n  \nTL;DR: eval is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is new Function constructor. setTimeout and setInterval should never be passed dynamic JavaScript code either.\nOtherwise: Malicious JavaScript code finds a way into text passed into eval or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.\n\ud83d\udd17 Read More: Avoid JavaScript eval statements\n\n 6.16. Prevent evil RegEx from overloading your single thread execution\n\nTL;DR: Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on \ud83d\udd25. For that reason, prefer third-party validation packages like validator.js instead of writing your own Regex patterns, or make use of safe-regex to detect vulnerable regex patterns\nOtherwise: Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular moment package was found vulnerable with malicious RegEx usage in November of 2017\n\ud83d\udd17 Read More: Prevent malicious RegEx\n\n 6.17. Avoid module loading using a variable\n  \nTL;DR: Avoid requiring\/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. fs.readFile()) or other sensitive resource access with dynamic variables originating from user input. Eslint-plugin-security linter can catch such patterns and warn early enough\nOtherwise: Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.\n\ud83d\udd17 Read More: Safe module loading\n\n 6.18. Run unsafe code in a sandbox\n  \nTL;DR: When tasked to run external code that is given at run-time (e.g. plugin), use any sort of 'sandbox' execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. cluster.fork()), serverless environment or dedicated npm packages that act as a sandbox\nOtherwise: A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables\n\ud83d\udd17 Read More: Run unsafe code in a sandbox\n\n 6.19. Take extra care when working with child processes\n  \nTL;DR: Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using child_process.execFile which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.\nOtherwise: Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.\n\ud83d\udd17 Read More: Be cautious when working with child processes\n\n 6.20. Hide error details from clients\n\nTL;DR: An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details\nOtherwise: Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace\n\ud83d\udd17 Read More: Hide error details from client\n\n 6.21. Configure 2FA for npm or Yarn\n\nTL;DR: Any step in the development chain should be protected with MFA (multi-factor authentication), npm\/Yarn are a sweet opportunity for attackers who can get their hands on some developer's password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.\nOtherwise: Have you heard about the eslint developer whose password was hijacked?\n\n 6.22. Modify session middleware settings\n\nTL;DR: Each web framework and technology has its known weaknesses\u200a-\u200atelling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the X-Powered-By header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)\nOtherwise: Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities\n\ud83d\udd17 Read More: Cookie and session security\n\n 6.23. Avoid DOS attacks by explicitly setting when a process should crash\n\nTL;DR: The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error\u200a-\u200aunless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There's no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)\nOtherwise: This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests\u200a-\u200aa handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease\n\n 6.24. Prevent unsafe redirects\n\nTL;DR: Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.\nOtherwise: If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.\n\ud83d\udd17 Read More: Prevent unsafe redirects\n\n 6.25. Avoid publishing secrets to the npm registry\n\nTL;DR: Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An .npmignore file can be used to blacklist specific files or folders, or the files array in package.json can act as a whitelist.\nOtherwise: Your project's API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.\n\ud83d\udd17 Read More: Avoid publishing secrets\n\n\u2b06 Return to top\n7. Draft: Performance Best Practices\nOur contributors are working on this section. Would you like to join?\n\n 7.1. Don't block the event loop\nTL;DR: Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.\nOtherwise: As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. 3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back\n\ud83d\udd17 Read More: Do not block the event loop\n\n 7.2. Prefer native JS methods over user-land utils like Lodash\nTL;DR: It's often more penalising to use utility libraries like lodash and underscore over native methods as it leads to unneeded dependencies and slower performance.\nBear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it's now about 50% more performant than utility libraries.\nOtherwise: You'll have to maintain less performant projects where you could have simply used what was already available or dealt with a few more lines in exchange of a few more files.\n\ud83d\udd17 Read More: Native over user land utils\n\n\u2b06 Return to top\n8. Docker Best Practices\n\ud83c\udfc5 Many thanks to Bret Fisher from whom we learned many of the following practices\n\n 8.1 Use multi-stage builds for leaner and more secure Docker images\nTL;DR: Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what's necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.\nOtherwise: Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.\nExample Dockerfile for multi-stage builds\nFROM node:14.4.0 AS build\n\nCOPY . .\nRUN npm ci && npm run build\n\nFROM node:slim-14.4.0\n\nUSER node\nEXPOSE 8080\n\nCOPY --from=build \/home\/node\/app\/dist \/home\/node\/app\/package.json \/home\/node\/app\/package-lock.json .\/\nRUN npm ci --production\n\nCMD [ \"node\", \"dist\/app.js\" ]\n\ud83d\udd17 Read More: Use multi-stage builds\n\n 8.2. Bootstrap using 'node' command, avoid npm start\nTL;DR: use CMD ['node','server.js'] to start your app, avoid using npm scripts which don't pass OS signals to the code. This prevents problems with child-process, signal handling, graceful shutdown and having zombie processes.\nOtherwise: When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and\/or data.\nRead More: Bootstrap container using node command, avoid npm start\n\n 8.3. Let the Docker runtime handle replication and uptime\nTL;DR: When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes\nOtherwise: Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance\n\ud83d\udd17 Read More: Let the Docker orchestrator restart and replicate processes\n\n 8.4. Use .dockerignore to prevent leaking secrets\nTL;DR: Include a .dockerignore file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker\nOtherwise: Common personal secret files like .env, .aws and .npmrc will be shared with anybody with access to the image (e.g. Docker repository)\n\ud83d\udd17 Read More: Use .dockerignore\n\n 8.5. Clean-up dependencies before production\nTL;DR: Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running npm ci --production\nOtherwise: Many of the infamous npm security breaches were found within development packages (e.g. eslint-scope)\n\ud83d\udd17 Read More: Remove development dependencies\n\n 8.6. Shutdown smartly and gracefully\nTL;DR: Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources\nOtherwise: Dying immediately means not responding to thousands of disappointed users\n\ud83d\udd17 Read More: Graceful shutdown\n\n 8.7. Set memory limits using both Docker and v8\nTL;DR: Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the --v8's flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8's old space memory to be a just bit less than the container limit\nOtherwise: The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8's limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources\n\ud83d\udd17 Read More: Set memory limits using Docker only\n\n 8.8. Plan for efficient caching\nTL;DR: Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.\nOtherwise: Docker build will be very long and consume lot of resources even when making tiny changes\n\ud83d\udd17 Read More: Leverage caching to reduce build times\n\n 8.9. Use explicit image reference, avoid latest tag\nTL;DR: Specify an explicit image digest or versioned label, never refer to latest. Developers are often led to believe that specifying the latest tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.\nIn addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.\nOtherwise: A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.\n\ud83d\udd17 Read More: Understand image tags and use the \"latest\" tag with caution\n\n 8.10. Prefer smaller Docker base images\nTL;DR: Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.\nOtherwise: Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.\n\ud83d\udd17 Read More: Prefer smaller images\n\n 8.11. Clean-out build-time secrets, avoid secrets in args\nTL;DR: Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like .npmrc and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces\nOtherwise: Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus\n\ud83d\udd17 Read More: Clean-out build-time secrets\n\n 8.12. Scan images for multi layers of vulnerabilities\nTL;DR: Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI\/CD plugins\nOtherwise: Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications\n\ud83d\udd17 Read More: Generic Docker practices\n\n 8.13 Clean NODE_MODULE cache\nTL;DR: After installing dependencies in a container remove the local cache. It doesn't make any sense to duplicate the dependencies for faster future installs since there won't be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off\nOtherwise: The image that will get shipped to production will weigh 30% more due to files that will never get used\n\ud83d\udd17 Read More: Clean NODE_MODULE cache\n\n 8.14. Generic Docker practices\nTL;DR: This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.\n\ud83d\udd17 Read More: Generic Docker practices\n\n 8.15. Lint your Dockerfile\nTL;DR: Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.\nOtherwise: Mistakenely the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.\n\ud83d\udd17 Read More: Lint your Dockerfile\n\n\u2b06 Return to top\nMilestones\nTo maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our milestones and join the working groups if you want to contribute to this project\n\nTranslations\nAll translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!\nCompleted translations\n\n Brazilian Portuguese - Courtesy of Marcelo Melo\n Chinese - Courtesy of Matt Jin\n Russian - Courtesy of Alex Ivanov\n Polish - Courtesy of Michal Biesiada\n\nTranslations in progress\n\n French (Discussion)\n Hebrew (Discussion)\n Korean - Courtesy of Sangbeom Han (Discussion)\n Spanish (Discussion)\n Turkish (Discussion)\n\n\nSteering Committee\nMeet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our Github projects.\n\nYoni Goldberg\n\n\nIndependent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at goldbergyoni.com. Reach Yoni at @goldbergyoni or me@goldbergyoni.com\n\n\nBruno Scheufler\n\n\ud83d\udcbb full-stack web engineer, Node.js & GraphQL enthusiast\n\n\nKyle Martin\n\n\nFull Stack Developer & Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.\n\n\nKevyn Bruyere\n\nIndependent full-stack developer with a taste for Ops and automation.\n\nSteering Committee Emeriti\n\nSagir Khan\n\n\n\nDeep specialist in JavaScript and its ecosystem \u2014 React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS\/JSON in any layer of the system \u2014 building products using the web platform for the world\u2019s most recognized brands. Individual Member of the Node.js Foundation.\n\nCollaborators\nThank you to all our collaborators! \ud83d\ude4f\nOur collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our contributor guidelines \ud83c\udf89\n\n\n\n\n\n\n\n\n\nIdo Richter (Founder)\nKeith Holliday\n\n\n\nCollaborator Emeriti\n\n\n\n\n\n\n\n\nRefael Ackermann\n\n\n\n\nContributing\nIf you've ever wanted to contribute to open source, now is your chance! See the contributing docs for more information.\nContributors \u2728\nThanks goes to these wonderful people who have contributed to this repository!\n\n\nKevin Rambaud\ud83d\udd8b\nMichael Fine\ud83d\udd8b\nShreya Dahal\ud83d\udd8b\nMatheus Cruz Rocha\ud83d\udd8b\nYog Mehta\ud83d\udd8b\nKudakwashe Paradzayi\ud83d\udd8b\nt1st3\ud83d\udd8b\n\n\nmulijordan1976\ud83d\udd8b\nMatan Kushner\ud83d\udd8b\nFabio Hiroki\ud83d\udd8b\nJames Sumners\ud83d\udd8b\nDan Gamble\ud83d\udd8b\nPJ Trainor\ud83d\udd8b\nRemek Ambroziak\ud83d\udd8b\n\n\nYoni Jah\ud83d\udd8b\nMisha Khokhlov\ud83d\udd8b\nEvgeny Orekhov\ud83d\udd8b\n-\ud83d\udd8b\nIsaac Halvorson\ud83d\udd8b\nVedran Kara\u010di\u0107\ud83d\udd8b\nlallenlowe\ud83d\udd8b\n\n\nNathan Wells\ud83d\udd8b\nPaulo Reis\ud83d\udd8b\nsyzer\ud83d\udd8b\nDavid Sancho\ud83d\udd8b\nRobert Manolea\ud83d\udd8b\nXavier Ho\ud83d\udd8b\nAaron\ud83d\udd8b\n\n\nJan Charles Maghirang Adona\ud83d\udd8b\nAllen\ud83d\udd8b\nLeonardo Villela\ud83d\udd8b\nMicha\u0142 Za\u0142\u0119cki\ud83d\udd8b\nChris Nicola\ud83d\udd8b\nAlejandro Corredor\ud83d\udd8b\ncwar\ud83d\udd8b\n\n\nYuwei\ud83d\udd8b\nUtkarsh Bhatt\ud83d\udd8b\nDuarte Mendes\ud83d\udd8b\nJason Kim\ud83d\udd8b\nMitja O.\ud83d\udd8b\nSandro Miguel Marques\ud83d\udd8b\nGabe\ud83d\udd8b\n\n\nRon Gross\ud83d\udd8b\nValeri Karpov\ud83d\udd8b\nSergio Bernal\ud83d\udd8b\nNikola Telkedzhiev\ud83d\udd8b\nVitor Godoy\ud83d\udd8b\nManish Saraan\ud83d\udd8b\nSangbeom Han\ud83d\udd8b\n\n\nblackmatch\ud83d\udd8b\nJoe Reeve\ud83d\udd8b\nRyan Busby\ud83d\udd8b\nIman Mohamadi\ud83d\udd8b\nSergii Paryzhskyi\ud83d\udd8b\nKapil Patel\ud83d\udd8b\n\u8ff7\u6e21\ud83d\udd8b\n\n\nHozefa\ud83d\udd8b\nEthan\ud83d\udd8b\nSam\ud83d\udd8b\nArlind\ud83d\udd8b\nTeddy Toussaint\ud83d\udd8b\nLewis\ud83d\udd8b\nGabriel Lidenor \ud83d\udd8b\n\n\nRoman\ud83d\udd8b\nFrancozeira\ud83d\udd8b\nInvvard\ud83d\udd8b\nR\u00f4mulo Garofalo\ud83d\udd8b\nTho Q Luong\ud83d\udd8b\nBurak Shen\ud83d\udd8b\nMartin Muzatko\ud83d\udd8b\n\n\nJared Collier\ud83d\udd8b\nHilton Meyer\ud83d\udd8b\nChangJoo Park(\ubc15\ucc3d\uc8fc)\ud83d\udd8b\nMasahiro Sakaguchi\ud83d\udd8b\nKeith Holliday\ud83d\udd8b\ncoreyc\ud83d\udd8b\nMaximilian Berkmann\ud83d\udd8b\n\n\nDouglas Mariano Valero\ud83d\udd8b\nMarcelo Melo\ud83d\udd8b\nMehmet Perk\ud83d\udd8b\nryan ouyang\ud83d\udd8b\nShabeer\ud83d\udd8b\nEduard Kyvenko\ud83d\udd8b\nDeyvison Rocha\ud83d\udd8b\n\n\nGeorge Mamer\ud83d\udd8b\nKonstantinos Leimonis\ud83d\udd8b\nOliver Lluberes\ud83c\udf0d\nTien Do\ud83d\udd8b\nRanvir Singh\ud83d\udd8b\nVadim Nicolaev\ud83d\udd8b\nGerman Gamboa Gonzalez\ud83d\udd8b\n\n\nHafez\ud83d\udd8b\nChandiran\ud83d\udd8b\nVinayaSathyanarayana\ud83d\udd8b\nKim Kern\ud83d\udd8b\nKenneth Freitas\ud83d\udd8b\nsonge\ud83d\udd8b\nKirill Shekhovtsov\ud83d\udd8b\n\n\nSerge\ud83d\udd8b\nkeyrwinz\ud83d\udd8b\nDmitry Nikitenko\ud83d\udd8b\nbushuai\ud83d\udc40 \ud83d\udd8b\nBenjamin Gruenbaum\ud83d\udd8b\nEzequiel\ud83c\udf0d\nJuan Jos\u00e9 Rodr\u00edguez\ud83c\udf0d\n\n\nOr Bin\ud83d\udd8b\nAndreo Vieira\ud83d\udd8b\nMichael Solomon\ud83d\udd8b\nJimmy Callin\ud83d\udd8b\nSiddharth\ud83d\udd8b\nRyan Smith\ud83d\udd8b\nTom Boettger\ud83d\udd8b\n\n\nJoaqu\u00edn Ormaechea\ud83c\udf0d\ndfrzuz\ud83c\udf0d\nVictor Homyakov\ud83d\udd8b\nJosh\ud83d\udd8b \ud83d\udee1\ufe0f\nAlec Francis\ud83d\udd8b\narjun6610\ud83d\udd8b\nJan Osch\ud83d\udd8b\n\n\nThiago Rotondo Sampaio\ud83c\udf0d\n\n\n","19":"jQuery \u2014 New Wave JavaScript\n\n\nContribution Guides\nIn the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:\n\nGetting Involved\nCore Style Guide\nWriting Code for jQuery Foundation Projects\n\nEnvironments in which to use jQuery\n\nBrowser support\njQuery also supports Node, browser extensions, and other non-browser environments.\n\nWhat you need to build your own jQuery\nTo build jQuery, you need to have the latest Node.js\/npm and git 1.7 or later. Earlier versions might work, but are not supported.\nFor Windows, you have to download and install git and Node.js.\nmacOS users should install Homebrew. Once Homebrew is installed, run brew install git to install git,\nand brew install node to install Node.js.\nLinux\/BSD users should use their appropriate package managers to install git and Node.js, or build from source\nif you swing that way. Easy-peasy.\nHow to build your own jQuery\nFirst, clone the jQuery git repo.\nThen, enter the jquery directory and run the build script:\ncd jquery && npm run build\nThe built version of jQuery will be put in the dist\/ subdirectory, along with the minified copy and associated map file.\nIf you want to create custom build or help with jQuery development, it would be better to install grunt command line interface as a global package:\nnpm install -g grunt-cli\n\nMake sure you have grunt installed by testing:\ngrunt -V\n\nNow by running the grunt command, in the jquery directory, you can build a full version of jQuery, just like with an npm run build command:\ngrunt\n\nThere are many other tasks available for jQuery Core:\ngrunt -help\n\nModules\nSpecial builds can be created that exclude subsets of jQuery functionality.\nThis allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.\nFor example, an app that only used JSONP for $.ajax() and did not need to calculate offsets or positions of elements could exclude the offset and ajax\/xhr modules.\nAny module may be excluded except for core, and selector. To exclude a module, pass its path relative to the src folder (without the .js extension).\nSome example modules that can be excluded are:\n\najax: All AJAX functionality: $.ajax(), $.get(), $.post(), $.ajaxSetup(), .load(), transports, and ajax event shorthands such as .ajaxStart().\najax\/xhr: The XMLHTTPRequest AJAX transport only.\najax\/script: The <script> AJAX transport only; used to retrieve scripts.\najax\/jsonp: The JSONP AJAX transport only; depends on the ajax\/script transport.\ncss: The .css() method. Also removes all modules depending on css (including effects, dimensions, and offset).\ncss\/showHide:  Non-animated .show(), .hide() and .toggle(); can be excluded if you use classes or explicit .css() calls to set the display property. Also removes the effects module.\ndeprecated: Methods documented as deprecated but not yet removed.\ndimensions: The .width() and .height() methods, including inner- and outer- variations.\neffects: The .animate() method and its shorthands such as .slideUp() or .hide(\"slow\").\nevent: The .on() and .off() methods and all event functionality.\nevent\/trigger: The .trigger() and .triggerHandler() methods.\noffset: The .offset(), .position(), .offsetParent(), .scrollLeft(), and .scrollTop() methods.\nwrap: The .wrap(), .wrapAll(), .wrapInner(), and .unwrap() methods.\ncore\/ready: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with jQuery() will simply be called immediately. However, jQuery(document).ready() will not be a function and .on(\"ready\", ...) or similar will not be triggered.\ndeferred: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. Note that modules that depend on jQuery.Deferred(AJAX, effects, core\/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (grunt custom:-deferred,-ajax,-effects,-core\/ready).\nexports\/global: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.\nexports\/amd: Exclude the AMD definition.\n\nThe build process shows a message for each dependent module it excludes or includes.\nAMD name\nAs an option, you can set the module name for jQuery's AMD definition. By default, it is set to \"jquery\", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply set the \"amd\" option:\ngrunt custom --amd=\"custom-name\"\nOr, to define anonymously, set the name to an empty string.\ngrunt custom --amd=\"\"\nCustom Build Examples\nTo create a custom build, first check out the version:\ngit pull; git checkout VERSION\nWhere VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:\nnpm install\nCreate the custom build using the grunt custom option, listing the modules to be excluded.\nExclude all ajax functionality:\ngrunt custom:-ajax\nExcluding css removes modules depending on CSS: effects, offset, dimensions.\ngrunt custom:-css\nExclude a bunch of modules:\ngrunt custom:-ajax\/jsonp,-css,-deprecated,-dimensions,-effects,-offset,-wrap\nThere is also a special alias to generate a build with the same configuration as the official jQuery Slim build is generated:\ngrunt custom:slim\nFor questions or requests regarding custom builds, please start a thread on the Developing jQuery Core section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process.\nRunning the Unit Tests\nMake sure you have the necessary dependencies:\nnpm install\nStart grunt watch or npm start to auto-build jQuery as you work:\ngrunt watch\nRun the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the \"test\" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:\n\nWindows: WAMP download\nMac: MAMP download\nLinux: Setting up LAMP\nMongoose (most platforms)\n\nBuilding to a different directory\nTo copy the built jQuery files from \/dist to another directory:\ngrunt && grunt dist:\/path\/to\/special\/location\/\nWith this example, the output files would be:\n\/path\/to\/special\/location\/jquery.js\n\/path\/to\/special\/location\/jquery.min.js\nTo add a permanent copy destination, create a file in dist\/ called \".destination.json\". Inside the file, paste and customize the following:\n{\n  \"\/Absolute\/path\/to\/other\/destination\": true\n}\nAdditionally, both methods can be combined.\nEssential Git\nAs the source code is handled by the Git version control system, it's useful to know some features used.\nCleaning\nIf you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):\ngit reset --hard upstream\/master\ngit clean -fdx\nRebasing\nFor feature\/topic branches, you should always use the --rebase flag to git pull, or if you are usually handling many temporary \"to be in a github pull request\" branches, run the following to automate this:\ngit config branch.autosetuprebase local\n(see man git-config for more information)\nHandling merge conflicts\nIf you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature\ngit mergetool. Even though the default tool xxdiff looks awful\/old, it's rather useful.\nThe following are some commands that can be used there:\n\nCtrl + Alt + M - automerge as much as possible\nb - jump to next merge conflict\ns - change the order of the conflicted lines\nu - undo a merge\nleft mouse button - mark a block to be the winner\nmiddle mouse button - mark a line to be the winner\nCtrl + S - save\nCtrl + Q - quit\n\nQUnit Reference\nTest methods\nexpect( numAssertions );\nstop();\nstart();\nNote: QUnit's eventual addition of an argument to stop\/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.\nTest assertions\nok( value, [message] );\nequal( actual, expected, [message] );\nnotEqual( actual, expected, [message] );\ndeepEqual( actual, expected, [message] );\nnotDeepEqual( actual, expected, [message] );\nstrictEqual( actual, expected, [message] );\nnotStrictEqual( actual, expected, [message] );\nthrows( block, [expected], [message] );\nTest Suite Convenience Methods Reference (See test\/data\/testinit.js)\nReturns an array of elements with the given IDs\nq( ... );\nExample:\nq(\"main\", \"foo\", \"bar\");\n\n=> [ div#main, span#foo, input#bar ]\nAsserts that a selection matches the given IDs\nt( testName, selector, [ \"array\", \"of\", \"ids\" ] );\nExample:\nt(\"Check for something\", \"\/\/[a]\", [\"foo\", \"bar\"]);\nFires a native DOM event without going through jQuery\nfireNative( node, eventType )\nExample:\nfireNative( jQuery(\"#elem\")[0], \"click\" );\nAdd random number to url to stop caching\nurl( \"some\/url\" );\nExample:\nurl(\"index.html\");\n\n=> \"data\/index.html?10538358428943\"\n\n\nurl(\"mock.php?foo=bar\");\n\n=> \"data\/mock.php?foo=bar&10538358345554\"\nRun tests in an iframe\nSome tests may require a document other than the standard test fixture, and\nthese can be run in a separate iframe. The actual test code and assertions\nremain in jQuery's main test files; only the minimal test fixture markup\nand setup code should be placed in the iframe file.\ntestIframe( testName, fileName,\n  function testCallback(\n      assert, jQuery, window, document,\n\t  [ additional args ] ) {\n\t...\n  } );\nThis loads a page, constructing a url with fileName \".\/data\/\" + fileName.\nThe iframed page determines when the callback occurs in the test by\nincluding the \"\/test\/data\/iframeTest.js\" script and calling\nstartIframeTest( [ additional args ] ) when appropriate. Often this\nwill be after either document ready or window.onload fires.\nThe testCallback receives the QUnit assert object created by testIframe\nfor this test, followed by the global jQuery, window, and document from\nthe iframe. If the iframe code passes any arguments to startIframeTest,\nthey follow the document argument.\nQuestions?\nIf you have any questions, please feel free to ask on the\nDeveloping jQuery Core forum or in #jquery on irc.freenode.net.\n","20":"\n\n\n\n\n\n\n\nreveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free. Check out the live demo.\nThe framework comes with a broad range of features including nested slides, Markdown support, Auto-Animate, PDF export, speaker notes, LaTeX support, syntax highlighted code and much more.\n\nGet Started\n\nDocumentation\nThe full reveal.js documentation is available at revealjs.com.\nOnline Editor\nWant to create your presentation using a visual editor? Try the official reveal.js presentation platform for free at Slides.com. It's made by the same people behind reveal.js.\nLicense\nMIT licensed\nCopyright (C) 2011-2020 Hakim El Hattab, https:\/\/hakim.se\n","21":"Atom\n\n\n\nAtom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.\n\n\nVisit atom.io to learn more or visit the Atom forum.\nFollow @AtomEditor on Twitter for important\nannouncements.\nThis project adheres to the Contributor Covenant code of conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.\nDocumentation\nIf you want to read about using Atom or developing packages in Atom, the Atom Flight Manual is free and available online. You can find the source to the manual in atom\/flight-manual.atom.io.\nThe API reference for developing packages is also documented on Atom.io.\nInstalling\nPrerequisites\n\nGit\n\nmacOS\nDownload the latest Atom release.\nAtom will automatically update when a new release is available.\nWindows\nDownload the latest Atom installer. AtomSetup.exe is 32-bit. For 64-bit systems, download AtomSetup-x64.exe.\nAtom will automatically update when a new release is available.\nYou can also download atom-windows.zip (32-bit) or atom-x64-windows.zip (64-bit) from the releases page.\nThe .zip version will not automatically update.\nUsing Chocolatey? Run cinst Atom to install the latest version of Atom.\nLinux\nAtom is only available for 64-bit Linux systems.\nConfigure your distribution's package manager to install and update Atom by following the Linux installation instructions in the Flight Manual.  You will also find instructions on how to install Atom's official Linux packages without using a package repository, though you will not get automatic updates after installing Atom this way.\nArchive extraction\nAn archive is available for people who don't want to install atom as root.\nThis version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,\nbut should be compatible with other Linux distributions.\n\nInstall dependencies (on Ubuntu): sudo apt install git gconf2 gconf-service libgtk2.0-0 libudev1 libgcrypt20 libnotify4 libxtst6 libnss3 python3 gvfs-bin xdg-utils libcap2\n\n(If the python3 package isn't available, or is too old (Python 3 should be >= 3.5), either python2 or python (2.6 or 2.7) will work in its place.)\n\n\nDownload atom-amd64.tar.gz from the Atom releases page.\nRun tar xf atom-amd64.tar.gz in the directory where you want to extract the Atom folder.\nLaunch Atom using the installed atom command from the newly extracted directory.\n\nThe Linux version does not currently automatically update so you will need to\nrepeat these steps to upgrade to future releases.\nBuilding\n\nLinux\nmacOS\nWindows\n\nDiscussion\n\nDiscuss Atom on our forums\nChat about Atom on our Slack team -- instructions for joining\n\nLicense\nMIT\nWhen using the Atom or other GitHub logos, be sure to follow the GitHub logo guidelines.\n","22":"socket.io\n \n\n\n\n\n\n\nFeatures\nSocket.IO enables real-time bidirectional event-based communication. It consists of:\n\na Node.js server (this repository)\na Javascript client library for the browser (or a Node.js client)\n\nSome implementations in other languages are also available:\n\nJava\nC++\nSwift\nDart\n\nIts main features are:\nReliability\nConnections are established even in the presence of:\n\nproxies and load balancers.\npersonal firewall and antivirus software.\n\nFor this purpose, it relies on Engine.IO, which first establishes a long-polling connection, then tries to upgrade to better transports that are \"tested\" on the side, like WebSocket. Please see the Goals section for more information.\nAuto-reconnection support\nUnless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options here.\nDisconnection detection\nA heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore.\nThat functionality is achieved with timers set on both the server and the client, with timeout values (the pingInterval and pingTimeout parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the sticky-session requirement when using multiples nodes.\nBinary support\nAny serializable data structures can be emitted, including:\n\nArrayBuffer and Blob in the browser\nArrayBuffer and Buffer in Node.js\n\nSimple and convenient API\nSample code:\nio.on('connection', socket => {\n  socket.emit('request', \/* \u2026 *\/); \/\/ emit an event to the socket\n  io.emit('broadcast', \/* \u2026 *\/); \/\/ emit an event to all connected sockets\n  socket.on('reply', () => { \/* \u2026 *\/ }); \/\/ listen to the event\n});\nCross-browser\nBrowser support is tested in Sauce Labs:\n\nMultiplexing support\nIn order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several Namespaces, which will act as separate communication channels but will share the same underlying connection.\nRoom support\nWithin each Namespace, you can define arbitrary channels, called Rooms, that sockets can join and leave. You can then broadcast to any given room, reaching every socket that has joined it.\nThis is a useful feature to send notifications to a group of users, or to a given user connected on several devices for example.\nNote: Socket.IO is not a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds some metadata to each packet: the packet type, the namespace and the ack id when a message acknowledgement is needed. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a WebSocket server (like ws:\/\/echo.websocket.org) either. Please see the protocol specification here.\nInstallation\nnpm install socket.io\nHow to use\nThe following example attaches socket.io to a plain Node.JS\nHTTP server listening on port 3000.\nconst server = require('http').createServer();\nconst io = require('socket.io')(server);\nio.on('connection', client => {\n  client.on('event', data => { \/* \u2026 *\/ });\n  client.on('disconnect', () => { \/* \u2026 *\/ });\n});\nserver.listen(3000);\nStandalone\nconst io = require('socket.io')();\nio.on('connection', client => { ... });\nio.listen(3000);\nIn conjunction with Express\nStarting with 3.0, express applications have become request handler\nfunctions that you pass to http or http Server instances. You need\nto pass the Server to socket.io, and not the express application\nfunction. Also make sure to call .listen on the server, not the app.\nconst app = require('express')();\nconst server = require('http').createServer(app);\nconst io = require('socket.io')(server);\nio.on('connection', () => { \/* \u2026 *\/ });\nserver.listen(3000);\nIn conjunction with Koa\nLike Express.JS, Koa works by exposing an application as a request\nhandler function, but only by calling the callback method.\nconst app = require('koa')();\nconst server = require('http').createServer(app.callback());\nconst io = require('socket.io')(server);\nio.on('connection', () => { \/* \u2026 *\/ });\nserver.listen(3000);\nIn conjunction with Fastify\nTo integrate Socket.io in your Fastify application you just need to\nregister fastify-socket.io plugin. It will create a decorator\ncalled io.\nconst app = require('fastify')();\napp.register(require('fastify-socket.io'));\napp.io.on('connection', () => { \/* \u2026 *\/ });\napp.listen(3000);\nDocumentation\nPlease see the documentation here.\nThe source code of the website can be found here. Contributions are welcome!\nDebug \/ logging\nSocket.IO is powered by debug.\nIn order to see all the debug output, run your app with the environment variable\nDEBUG including the desired scope.\nTo see the output from all of Socket.IO's debugging scopes you can use:\nDEBUG=socket.io* node myapp\n\nTesting\nnpm test\n\nThis runs the gulp task test. By default the test will be run with the source code in lib directory.\nSet the environmental variable TEST_VERSION to compat to test the transpiled es5-compat version of the code.\nThe gulp task test will always transpile the source code into es5 and export to dist first before running the test.\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n","23":"\n\n    Simple yet flexible JavaScript charting for designers & developers\n\n\n\n\n\n\n\n\nDocumentation\n\nIntroduction\nGetting Started\nGeneral\nConfiguration\nCharts\nAxes\nDevelopers\nPopular Extensions\nSamples\n\nContributing\nInstructions on building and testing Chart.js can be found in the documentation. Before submitting an issue or a pull request, please take a moment to look over the contributing guidelines first. For support, please post questions on Stack Overflow with the chartjs tag.\nLicense\nChart.js is available under the MIT license.\n","24":"\nFast, unopinionated, minimalist web framework for node.\n\n\n\n\n\nconst express = require('express')\nconst app = express()\n\napp.get('\/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\nInstallation\nThis is a Node.js module available through the\nnpm registry.\nBefore installing, download and install Node.js.\nNode.js 0.10 or higher is required.\nIf this is a brand new project, make sure to create a package.json first with\nthe npm init command.\nInstallation is done using the\nnpm install command:\n$ npm install express\nFollow our installing guide\nfor more information.\nFeatures\n\nRobust routing\nFocus on high performance\nSuper-high test coverage\nHTTP helpers (redirection, caching, etc)\nView system supporting 14+ template engines\nContent negotiation\nExecutable for generating applications quickly\n\nDocs & Community\n\nWebsite and Documentation - [website repo]\n#express on freenode IRC\nGitHub Organization for Official Middleware & Modules\nVisit the Wiki\nGoogle Group for discussion\nGitter for support and discussion\n\nPROTIP Be sure to read Migrating from 3.x to 4.x as well as New features in 4.x.\nSecurity Issues\nIf you discover a security vulnerability in Express, please see Security Policies and Procedures.\nQuick Start\nThe quickest way to get started with express is to utilize the executable express(1) to generate an application as shown below:\nInstall the executable. The executable's major version will match Express's:\n$ npm install -g express-generator@4\nCreate the app:\n$ express \/tmp\/foo && cd \/tmp\/foo\nInstall dependencies:\n$ npm install\nStart the server:\n$ npm start\nView the website at: http:\/\/localhost:3000\nPhilosophy\nThe Express philosophy is to provide small, robust tooling for HTTP servers, making\nit a great solution for single page applications, websites, hybrids, or public\nHTTP APIs.\nExpress does not force you to use any specific ORM or template engine. With support for over\n14 template engines via Consolidate.js,\nyou can quickly craft your perfect framework.\nExamples\nTo view the examples, clone the Express repo and install the dependencies:\n$ git clone git:\/\/github.com\/expressjs\/express.git --depth 1\n$ cd express\n$ npm install\nThen run whichever example you want:\n$ node examples\/content-negotiation\nTests\nTo run the test suite, first install the dependencies, then run npm test:\n$ npm install\n$ npm test\nContributing\nContributing Guide\nPeople\nThe original author of Express is TJ Holowaychuk\nThe current lead maintainer is Douglas Christopher Wilson\nList of all contributors\nLicense\nMIT\n","25":"JSON Server  \nGet a full fake REST API with zero coding in less than 30 seconds (seriously)\nCreated with <3 for front-end developers who need a quick back-end for prototyping and mocking.\n\nEgghead.io free video tutorial - Creating demo APIs with json-server\nJSONPlaceholder - Live running version\nMy JSON Server - no installation required, use your own data\n\nSee also:\n\n\ud83d\udc36 husky - Git hooks made easy\n\ud83c\udfe8 hotel - developer tool with local .localhost domain and https out of the box\n\n\u00a0\nGold sponsors \ud83e\udd47\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\u00a0\nBecome a sponsor and have your company logo here\nTable of contents\n\nGetting started\nRoutes\n\nPlural routes\nSingular routes\nFilter\nPaginate\nSort\nSlice\nOperators\nFull-text search\nRelationships\nDatabase\nHomepage\n\n\nExtras\n\nStatic file server\nAlternative port\nAccess from anywhere\nRemote schema\nGenerate random data\nHTTPS\nAdd custom routes\nAdd middlewares\nCLI usage\nModule\n\nSimple example\nCustom routes example\nAccess control example\nCustom output example\nRewriter example\nMounting JSON Server on another endpoint example\nAPI\n\n\nDeployment\n\n\nLinks\n\nVideo\nArticles\nThird-party tools\n\n\nLicense\n\nGetting started\nInstall JSON Server\nnpm install -g json-server\n\nCreate a db.json file with some data\n{\n  \"posts\": [\n    { \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\n  ],\n  \"comments\": [\n    { \"id\": 1, \"body\": \"some comment\", \"postId\": 1 }\n  ],\n  \"profile\": { \"name\": \"typicode\" }\n}\nStart JSON Server\njson-server --watch db.json\nNow if you go to http:\/\/localhost:3000\/posts\/1, you'll get\n{ \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\nAlso when doing requests, it's good to know that:\n\nIf you make POST, PUT, PATCH or DELETE requests, changes will be automatically and safely saved to db.json using lowdb.\nYour request body JSON should be object enclosed, just like the GET output. (for example {\"name\": \"Foobar\"})\nId values are not mutable. Any id value in the body of your PUT or PATCH request will be ignored. Only a value set in a POST request will be respected, but only if not already taken.\nA POST, PUT or PATCH request should include a Content-Type: application\/json header to use the JSON in the request body. Otherwise it will return a 2XX status code, but without changes being made to the data.\n\nRoutes\nBased on the previous db.json file, here are all the default routes. You can also add other routes using --routes.\nPlural routes\nGET    \/posts\nGET    \/posts\/1\nPOST   \/posts\nPUT    \/posts\/1\nPATCH  \/posts\/1\nDELETE \/posts\/1\n\nSingular routes\nGET    \/profile\nPOST   \/profile\nPUT    \/profile\nPATCH  \/profile\n\nFilter\nUse . to access deep properties\nGET \/posts?title=json-server&author=typicode\nGET \/posts?id=1&id=2\nGET \/comments?author.name=typicode\n\nPaginate\nUse _page and optionally _limit to paginate returned data.\nIn the Link header you'll get first, prev, next and last links.\nGET \/posts?_page=7\nGET \/posts?_page=7&_limit=20\n\n10 items are returned by default\nSort\nAdd _sort and _order (ascending order by default)\nGET \/posts?_sort=views&_order=asc\nGET \/posts\/1\/comments?_sort=votes&_order=asc\n\nFor multiple fields, use the following format:\nGET \/posts?_sort=user,views&_order=desc,asc\n\nSlice\nAdd _start and _end or _limit (an X-Total-Count header is included in the response)\nGET \/posts?_start=20&_end=30\nGET \/posts\/1\/comments?_start=20&_end=30\nGET \/posts\/1\/comments?_start=20&_limit=10\n\nWorks exactly as Array.slice (i.e. _start is inclusive and _end exclusive)\nOperators\nAdd _gte or _lte for getting a range\nGET \/posts?views_gte=10&views_lte=20\n\nAdd _ne to exclude a value\nGET \/posts?id_ne=1\n\nAdd _like to filter (RegExp supported)\nGET \/posts?title_like=server\n\nFull-text search\nAdd q\nGET \/posts?q=internet\n\nRelationships\nTo include children resources, add _embed\nGET \/posts?_embed=comments\nGET \/posts\/1?_embed=comments\n\nTo include parent resource, add _expand\nGET \/comments?_expand=post\nGET \/comments\/1?_expand=post\n\nTo get or create nested resources (by default one level, add custom routes for more)\nGET  \/posts\/1\/comments\nPOST \/posts\/1\/comments\n\nDatabase\nGET \/db\n\nHomepage\nReturns default index file or serves .\/public directory\nGET \/\n\nExtras\nStatic file server\nYou can use JSON Server to serve your HTML, JS and CSS, simply create a .\/public directory\nor use --static to set a different static files directory.\nmkdir public\necho 'hello world' > public\/index.html\njson-server db.json\njson-server db.json --static .\/some-other-dir\nAlternative port\nYou can start JSON Server on other ports with the --port flag:\n$ json-server --watch db.json --port 3004\nAccess from anywhere\nYou can access your fake API from anywhere using CORS and JSONP.\nRemote schema\nYou can load remote schemas.\n$ json-server http:\/\/example.com\/file.json\n$ json-server http:\/\/jsonplaceholder.typicode.com\/db\nGenerate random data\nUsing JS instead of a JSON file, you can create data programmatically.\n\/\/ index.js\nmodule.exports = () => {\n  const data = { users: [] }\n  \/\/ Create 1000 users\n  for (let i = 0; i < 1000; i++) {\n    data.users.push({ id: i, name: `user${i}` })\n  }\n  return data\n}\n$ json-server index.js\nTip use modules like Faker, Casual, Chance or JSON Schema Faker.\nHTTPS\nThere are many ways to set up SSL in development. One simple way is to use hotel.\nAdd custom routes\nCreate a routes.json file. Pay attention to start every route with \/.\n{\n  \"\/api\/*\": \"\/$1\",\n  \"\/:resource\/:id\/show\": \"\/:resource\/:id\",\n  \"\/posts\/:category\": \"\/posts?category=:category\",\n  \"\/articles\\\\?id=:id\": \"\/posts\/:id\"\n}\nStart JSON Server with --routes option.\njson-server db.json --routes routes.json\nNow you can access resources using additional routes.\n\/api\/posts # \u2192 \/posts\n\/api\/posts\/1  # \u2192 \/posts\/1\n\/posts\/1\/show # \u2192 \/posts\/1\n\/posts\/javascript # \u2192 \/posts?category=javascript\n\/articles?id=1 # \u2192 \/posts\/1\nAdd middlewares\nYou can add your middlewares from the CLI using --middlewares option:\n\/\/ hello.js\nmodule.exports = (req, res, next) => {\n  res.header('X-Hello', 'World')\n  next()\n}\njson-server db.json --middlewares .\/hello.js\njson-server db.json --middlewares .\/first.js .\/second.js\nCLI usage\njson-server [options] <source>\n\nOptions:\n  --config, -c       Path to config file           [default: \"json-server.json\"]\n  --port, -p         Set port                                    [default: 3000]\n  --host, -H         Set host                             [default: \"localhost\"]\n  --watch, -w        Watch file(s)                                     [boolean]\n  --routes, -r       Path to routes file\n  --middlewares, -m  Paths to middleware files                           [array]\n  --static, -s       Set static files directory\n  --read-only, --ro  Allow only GET requests                           [boolean]\n  --no-cors, --nc    Disable Cross-Origin Resource Sharing             [boolean]\n  --no-gzip, --ng    Disable GZIP Content-Encoding                     [boolean]\n  --snapshots, -S    Set snapshots directory                      [default: \".\"]\n  --delay, -d        Add delay to responses (ms)\n  --id, -i           Set database id property (e.g. _id)         [default: \"id\"]\n  --foreignKeySuffix, --fks  Set foreign key suffix, (e.g. _id as in post_id)\n                                                                 [default: \"Id\"]\n  --quiet, -q        Suppress log messages from output                 [boolean]\n  --help, -h         Show help                                         [boolean]\n  --version, -v      Show version number                               [boolean]\n\nExamples:\n  json-server db.json\n  json-server file.js\n  json-server http:\/\/example.com\/db.json\n\nhttps:\/\/github.com\/typicode\/json-server\n\nYou can also set options in a json-server.json configuration file.\n{\n  \"port\": 3000\n}\nModule\nIf you need to add authentication, validation, or any behavior, you can use the project as a module in combination with other Express middlewares.\nSimple example\n$ npm install json-server --save-dev\n\/\/ server.js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n$ node server.js\nThe path you provide to the jsonServer.router function  is relative to the directory from where you launch your node process. If you run the above code from another directory, it\u2019s better to use an absolute path:\nconst path = require('path')\nconst router = jsonServer.router(path.join(__dirname, 'db.json'))\nFor an in-memory database, simply pass an object to jsonServer.router().\nPlease note also that jsonServer.router() can be used in existing Express projects.\nCustom routes example\nLet's say you want a route that echoes query parameters and another one that set a timestamp on every resource created.\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\n\/\/ Set default middlewares (logger, static, cors and no-cache)\nserver.use(middlewares)\n\n\/\/ Add custom routes before JSON Server router\nserver.get('\/echo', (req, res) => {\n  res.jsonp(req.query)\n})\n\n\/\/ To handle POST, PUT and PATCH you need to use a body-parser\n\/\/ You can use the one used by JSON Server\nserver.use(jsonServer.bodyParser)\nserver.use((req, res, next) => {\n  if (req.method === 'POST') {\n    req.body.createdAt = Date.now()\n  }\n  \/\/ Continue to JSON Server router\n  next()\n})\n\n\/\/ Use default router\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nAccess control example\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use((req, res, next) => {\n if (isAuthorized(req)) { \/\/ add your authorization logic here\n   next() \/\/ continue to JSON Server router\n } else {\n   res.sendStatus(401)\n }\n})\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nCustom output example\nTo modify responses, overwrite router.render method:\n\/\/ In this example, returned resources will be wrapped in a body property\nrouter.render = (req, res) => {\n  res.jsonp({\n    body: res.locals.data\n  })\n}\nYou can set your own status code for the response:\n\/\/ In this example we simulate a server side error response\nrouter.render = (req, res) => {\n  res.status(500).jsonp({\n    error: \"error message here\"\n  })\n}\nRewriter example\nTo add rewrite rules, use jsonServer.rewriter():\n\/\/ Add this before server.use(router)\nserver.use(jsonServer.rewriter({\n  '\/api\/*': '\/$1',\n  '\/blog\/:resource\/:id\/show': '\/:resource\/:id'\n}))\nMounting JSON Server on another endpoint example\nAlternatively, you can also mount the router on \/api.\nserver.use('\/api', router)\nAPI\njsonServer.create()\nReturns an Express server.\njsonServer.defaults([options])\nReturns middlewares used by JSON Server.\n\noptions\n\nstatic path to static files\nlogger enable logger middleware (default: true)\nbodyParser enable body-parser middleware (default: true)\nnoCors disable CORS (default: false)\nreadOnly accept only GET requests (default: false)\n\n\n\njsonServer.router([path|object])\nReturns JSON Server router.\nDeployment\nYou can deploy JSON Server. For example, JSONPlaceholder is an online fake API powered by JSON Server and running on Heroku.\nLinks\nVideo\n\nCreating Demo APIs with json-server on egghead.io\n\nArticles\n\nNode Module Of The Week - json-server\nng-admin: Add an AngularJS admin GUI to any RESTful API\nFast prototyping using Restangular and Json-server\nCreate a Mock REST API in Seconds for Prototyping your Frontend\nNo API? No Problem! Rapid Development via Mock APIs\nZero Code REST With json-server\n\nThird-party tools\n\nGrunt JSON Server\nDocker JSON Server\nJSON Server GUI\nJSON file generator\nJSON Server extension\n\nLicense\nMIT\nSupporters \u2728\n","26":"Awesome-Selfhosted\n \nSelf-hosting is the practice of locally hosting and managing applications instead of renting from SaaSS providers.\nThis is a list of Free Software network services and web applications which can be hosted locally. Non-Free software is listed on the Non-Free page.\nSee Contributing.\n\n\nList of Software\n\nAnalytics\nArchiving and Digital Preservation (DP)\nAutomation\nBlogging Platforms\nBookmarks and Link Sharing\nCalendaring and Contacts Management\nCommunication systems\n\nCustom communication systems\nEmail\n\nComplete solutions\nMail Transfer Agents\nMail Delivery Agents\nMailing lists and newsletters\nWebmail clients\n\n\nIRC\nSIP\/IPBX\nSocial Networks and Forums\nXMPP\n\nXMPP Servers\nXMPP Web Clients\n\n\n\n\nConference Management\nContent Management Systems (CMS)\n\nE-commerce\n\n\nDNS\nDocument Management\nE-books and Integrated Library Systems (ILS)\nFederated Identity\/Authentication\nFeed Readers\nFile Sharing and Synchronization\n\nDistributed filesystems\nFile transfer\/synchronization\nPeer-to-peer filesharing\nObject storage\/file servers\nSingle-click\/drag-n-drop upload\nWeb based file managers\n\n\nGames\nGateways and terminal sharing\nGroupware\nHuman Resources Management (HRM)\nInternet of Things (IoT)\nKnowledge Management Tools\nLearning and Courses\nMaps and Global Positioning System (GPS)\nMedia Streaming\n\nMultimedia Streaming\nAudio Streaming\nVideo Streaming\n\n\nMisc\/Other\nMoney, Budgeting and Management\nMonitoring\nNote-taking and Editors\nOffice Suites\nPassword Managers\nPastebins\nPersonal Dashboards\nPhoto and Video Galleries\nPolls and Events\n\nBooking and Scheduling\n\n\nProxy\nRead it Later Lists\nResource Planning\n\nEnterprise Resource Planning\n\n\nSearch Engines\nSoftware Development\n\nProject Management\nBug Trackers\nIDE\/Tools\nContinuous Integration\nUX testing\nFaaS\/Serverless\nAPI Management\nDocumentation Generators\nLocalization\n\n\nStatic site generators\nTask management\/To-do lists\nTicketing\nURL Shorteners\nVPN\nWeb servers\nWikis\n\n\nSelf-hosting Solutions\nList of Licenses\nExternal links\nContributing\nLicense\n\n\nAnalytics\n^        back to top        ^\nFor personal analytics\/dashboards, see Personal Dashboards\nFor everything else, see awesome-analytics\nArchiving and Digital Preservation (DP)\n^        back to top        ^\nSome Content Management System solutions also feature archiving and digital preservation.\n\nAccess to Memory (AtoM) - Web-based, open source application for standards-based archival description and access in a multilingual, multi-repository environment. (Demo, Source Code) AGPL-3.0-only PHP\nArchivematica - Mature digital preservation system designed to maintain standards-based, long-term access to collections of digital objects. (Demo, Source Code) AGPL-3.0-only Python\nArchiveBox - Self-hosted \"wayback machine\" that creates HTML & screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources. (Source Code) MIT Python\nArchivesSpace - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. (Demo, Source Code) ECL-2.0 Ruby\nCollective Access: Providence - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. (Source Code) GPL-3.0-only PHP\nCKAN - CKAN is a tool for making open data websites. (Source Code) AGPL-3.0 Python\n\nAutomation\n^        back to top        ^\nSee also Internet of Things (IoT)\n\nAccelerated Text - Automatically generate multiple natural language descriptions of your data varying in wording and structure. Apache-2.0 Java\nActiveWorkflow - An intelligent process and workflow automation platform based on software agents. MIT Ruby\nAlltube - Web interface for youtube-dl, a program to download videos and audio from more than 100 websites. (Source Code) GPL-3.0 PHP\nAmIUnique - Learn how identifiable you are on the Internet (browser fingerprinting tool). (Source Code) MIT Java\nBeehive - Flexible event and agent system, which allows you to create your own agents that perform automated tasks triggered by events and filters. AGPL-3.0 Go\nbetanin - Music organization man-in-the-middle of your torrent client and music player. Based on beets.io, similar to Sonarr and Radarr. GPL-3.0 Python\nCouchPotato - CouchPotato is an automatic Video Library Manager for Movies. Automatic torrent\/nzb searching, downloading, and processing at the qualities you want. (Source Code) GPL-3.0 Python\nEpisodes \u26a0 - Self Hosted TV show Episode tracker and recommender built using django, bootstrap4. MIT Python\nfeed2toot - Feed2toot parses a RSS feed, extracts the last entries and sends them to Mastodon. (Source Code) GPL-3.0 Python\nfeedmixer - FeedMixer is a WSGI (Python3) micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed(Returns Atom, RSS, or JSON). (Demo) WTFPL Python\nGekko - Gekko is a Bitcoin TA trading and backtesting bot which support multiple exchanges and cryptocurrencies. (Source Code) MIT Nodejs\nHeadphones - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent, Deluge and Blackhole. GPL-3.0 Python\nHealthchecks - Django app which listens for pings and sends alerts when pings are late. (Source Code) BSD-3-Clause Python\nhomebank-converter - Web app to convert an export bank file to compatible Homebank csv. (Demo) AGPL-3.0 HTML5\nHRConvert2 - Drag-and-drop file conversion server with session based authentication, automatic temporary file maintenance, and logging capability. GPL-3.0 PHP\nHuginn - Allows you to build agents that monitor and act on your behalf. MIT Ruby\nKibitzr - Lightweight personal web assistant with powerful integrations. (Source Code) MIT Python\nLazyLibrarian \u26a0 - LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. GPL-3.0 Python\nLeon - Open-source personal assistant who can live on your server. (Demo, Source Code) MIT Node.js\nLidarr - Lidarr is a music collection manager for Usenet and BitTorrent users. (Source Code) GPL-3.0 C#\nMedusa - Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. GPL-3.0 Python\nMeTube - Web GUI for youtube-dl, with playlist support. Allows downloading videos from dozens of websites. AGPL-3.0 Python\/Nodejs\/Docker\nn8n - Free node based Workflow Automation Tool. Easily automate tasks across different services. (Source Code) Apache-2.0 Nodejs\nnefarious - Web application that automates downloading Movies and TV Shows. GPL-3.0 Python\npyLoad - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. (Source Code) GPL-3.0 Python\nRadarr - Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent, \u00e0 la Couchpotato. (Source Code) GPL-3.0 C#\nStackStorm - StackStorm (aka \"IFTTT for Ops\") is event-driven automation for auto-remediation, security responses, troubleshooting, deployments, and more. Includes rules engine, workflow, 160 integration packs with 6000+ actions and ChatOps. (Source Code) Apache-2.0 Python\nSickRage - SickRage is an automatic Video Library Manager for TV Shows. Automatic torrent\/nzb searching, downloading, and processing at the qualities you want. (Source Code) GPL-3.0 Python\nSonarr - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. (Source Code) GPL-3.0 C#\n\u00b5Task - \u00b5Task is an automation engine that models and executes business processes declared in yaml. BSD-3-Clause Go\nTriggerHappy - Open source clone of IFTTT, a bridge between your internet services. (Source Code) BSD-3-Clause Python\nWebUI-aria2 - Interface to interact with the aria2 downloader. Very simple to use, just download and open index.html in any web browser. (Demo) MIT HTML5\nYoutubeDL-Material - Material Design inspired YouTube downloader, based on youtube-dl. Supports playlists, quality select, search, dark mode and much more, all with a clean and modern design. MIT Nodejs\nZenbot 3 - Zenbot is a lightweight, extendable, artificially intelligent trading bot for Bitcoin, Ether, Litecoin, and more. MIT Node.js\nZeroQueue - A low-code queue management system that lets you run scheduled jobs for anything. GPL-3.0 Node.js\n\nBlogging Platforms\n^        back to top        ^\nSee also Static Site Generators, Content Management Systems and WeblogMatrix\n\nAntville - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. (Source Code) Apache-2.0 Javascript\nBlog - Facebook-styled blog. Free, extremely lightweight, single-user and easy to install. (Demo) GPL-3.0 PHP\nBlogotext - Free blog-engine written in PHP and using SQLite. This offers you both an unmatched simplicity during installation and great performances. (Source Code) MIT PHP\nBludit \u26a0 - Simple application to build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. (Demo, Source Code) MIT PHP\nCadmus - Cadmus is an extremely lightweight, flat-file blogging platform powered by Markdown. MIT PHP\nCanvas - A Laravel publishing platform. (Source Code) MIT PHP\nChyrp Lite - Extra-awesome, extra-lightweight blog engine. (Source Code) BSD-3-Clause PHP\nDante Stories - Self hosted Medium platform built with Ruby on Rails. (Source Code) MIT Ruby\nDotclear - Take control over your blog. (Source Code) GPL-2.0 PHP\nFormtools - Powerful, flexible, free and open source PHP\/MySQL script to manage your forms and data. (Source Code) GPL-2.0 PHP\nGhost - Just a blogging platform. (Source Code) MIT Nodejs\nHexo - Fast, simple and powerful blog framework, powered by Node.js. (Source Code) MIT Nodejs\nHotglue - Freehand CMS which allows to construct websites directly in a web-browser. It uses flat files for storage and provides an intuitive GUI. (Demo, Source Code) GPL-3.0 PHP\nhtmly - Databaseless Blogging Platform (Flat-File Blog). (Demo, Source Code) GPL-2.0 PHP\nKnown - Single website for all your content. (Source Code) Apache-2.0 PHP\nPlume - Federated blogging engine, based on ActivityPub. (Source Code) AGPL-3.0 Rust\nPluXml - XML-based blog\/CMS platform. (Source Code) GPL-1.0 PHP\nPostleaf - Open source blogging platform with inline editing, handlebar templates, and a beautiful user interface. (Source Code) MIT Nodejs\n\nBookmarks and Link Sharing\n^        back to top        ^\n\ndyu\/bookmarks - Single-threaded\/process bookmark app powered by leveldb and uWebSockets. Supports importing from Delicious and Chrome. (Demo) Apache-2.0 Java\nEspial - An open-source, web-based bookmarking server. AGPL-3.0 Haskell\nFirefox Account Server - This is the monorepo for Firefox Accounts (formerly separated into Auth and Content). (Source Code) MPL-2.0 Nodejs, Java\n\nFirefox Sync Server - Sync Firefox bookmarks, passwords, history, tabs, preferences. MPL-2.0 Python\n\n\nGeekmarks - Personal bookmarking service focused on speed and organization using hierarchical tags. (Source Code) BSD-2-Clause Go\ngolinks - Web application that allows you to create smart bookmarks, commands and aliases by pointing your web browser's default search engine at a running instance. Similar to bunny1 or yubnub. (Demo) MIT Go\nlinkding - Minimal bookmark management with a fast and clean UI. Simple installation through Docker and can run on your Raspberry Pi. (Demo) MIT Docker\/Python\/Nodejs\nLobsters - Run your own link aggregation site. (Source Code) BSD-3-Clause Ruby\nNo Fuss Bookmarks - Very simple software and service to store bookmarks especially designed for hackers (that don't need fancy interfaces, but nice API). (Source Code) GPL-3.0 Python\nPinry - The tiling image board system for people who want to save, tag, and share images, videos, and webpages. (Source Code) BSD-2-Clause Python\nReminiscence - Self-Hosted Bookmark And Archive Manager. AGPL-3.0 Python\nShaarli - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. (Demo) Zlib PHP\nShiori - Simple bookmark manager built with Go. MIT Go\nunmark - Open source to do app for links. MIT PHP\nubookmark - LDAP enabled bookmarking service. (Demo, Source Code) GPL-2.0 Python\nxBrowserSync - Open source tool for syncing browser data between browsers and devices. (Source Code) MIT Nodejs\n\nCalendaring and Contacts Management\n^        back to top        ^\nSome Groupware solutions also feature calendar\/address book editing and synchronization.\nSee https:\/\/en.wikipedia.org\/wiki\/Comparison_of_CalDAV_and_CardDAV_implementations\nCalDAV or CardDAV servers\n\nBa\u00efkal - Lightweight CalDAV and CardDAV server based on sabre\/dav. (Source Code) GPL-3.0 PHP\nCalendarServer - Apple, Inc.'s standards-compliant server implementing the CalDAV and CardDAV protocols shipped with macOS Server. (Source Code) Apache-2.0 Python\ncalypso - Python-based CalDAV and CardDAV server, forked from Radicale. (Source Code) GPL-3.0 Python\nDAViCal - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. (Source Code) GPL-2.0 PHP\nDavis - A simple, dockerizable and fully translatable admin interface for sabre\/dav based on Symfony 5 and Bootstrap 4, largely inspired by Ba\u00efkal. MIT PHP\nDecSync CC - Serverless contacts, calendar synchronization using your own file syncing method i.e Syncthing, Nextcloud etc. (Source Code) GPL-3.0 Kotlin\nEteSync Server - End-to-end encrypted and journaled personal information server supporting calendar and contact data, offering its own clients. (Source Code) AGPL-3.0 Python\/Django\nRadicale - Simple calendar and contact server with extremely low administrative overhead. (Source Code) GPL-3.0 Python\nSabreDAV - Open source CardDAV, CalDAV, and WebDAV framework and server. (Source Code) MIT PHP\nXandikos - Open source CardDAV and CalDAV server with minimal administrative overhead, backed by a Git repository. (Source Code) GPL-3.0 Python\n\nCalDAV or CardDAV web-based clients\n\nAgenDAV - Multilanguage CalDAV web client with a rich AJAX interface and shared calendars support. (Source Code) GPL-3.0 PHP\nInfCloud - Open source CalDAV\/CardDAV web client implementation. (Demo, Source Code) AGPL-3.0 Javascript\nEteSync Web - EteSync's official Web-based client (i.e., their Web app). (Demo, Source Code) AGPL-3.0 Javascript\n\nCommunication systems\n^        back to top        ^\nCustom communication systems\n\nCentrifugo - Language-agnostic real-time messaging (Websocket or SockJS) server. (Demo) MIT Go\nCherry - Tiny webchat server. GPL-2.0 Go\nDarkwire.io - End-to-end encrypted instant web chat. (Source Code) MIT Nodejs\nFreenet - Anonymously share files, browse and publish \"freesites\" (web sites accessible only through Freenet) and chat on forums. (Source Code) GPL-2.0 Java\nFriends - P2P chat powered by the web. (Source Code) MIT Nodejs\nGNUnet - Free software framework for decentralized, peer-to-peer networking. (Source Code) GPL-3.0 C\nGotify - Self-hosted notification server with Android and CLI clients, similar to PushBullet. (Source Code, Clients) MIT Go\nHawkpost - HawkPost is a web app that lets you create unique links that you can share with a person that desires to send you important information but doesn't know how to encrypt it. The message is encrypted in their browser and sent to your email address. (Source Code) MIT Python\nJami - Free and universal communication platform which preserves the user's privacy and freedoms (formerly GNU Ring). (Source Code) GPL-3.0 C++\nJitsi Meet - Jitsi Meet is an OpenSource (MIT) WebRTC Javascript application that uses Jitsi Videobridge to provide high quality, scalable video conferences. (Source Code) MIT Javascript\nJitsi Video Bridge - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. (Source Code) Apache-2.0 Java\nKChat - PHP Based Live Chat Application. Apache-2.0 PHP\nLeapChat - Ephemeral, encrypted, in-browser chat rooms. AGPL-3.0 JavaScript\nLets-Chat - Self hosted chat suite written in Node. (Source Code) MIT Nodejs\nLibreNews - Decentralized and secure breaking news notification system. (Source Code) GPL-3.0 Python\nLive Helper Chat - Live Support chat for your website. (Source Code) Apache-2.0 PHP\nMattermost - Open-source, on-prem Slack-alternative. It can be integrated with Gitlab. (Source Code) AGPL-3.0\/Apache-2.0 Go\nMiAOU - Multi-room persistent chat server. (Source Code) MIT Nodejs\nMibew - Mibew Messenger is an open-source live support application written in PHP and MySQL. It enables one-on-one chat assistance in real-time directly from your website. (Demo, Source Code) Apache-2.0 PHP\nMumble - Low-latency, high quality voice\/text chat software. (Source Code, Clients) BSD-3-Clause C++\nNode-Chat - Not-so-basic open-source chat with admin features. MIT Nodejs\nOTS - One-Time-Secret sharing platform with a symmetric 256bit AES encryption in the browser. (Source Code) Apache-2.0 Go\nPapercups - An open source live customer chat web app written in Elixir. (Demo, Source Code) MIT Elixir\nPushBits - Self-hosted notification server for relaying push notifications via Matrix, similar to PushBullet and Gotify. ISC Go\nRallly - Rallly is a free collaborative scheduling service. (Source Code) CC-BY-SA-4.0 Nodejs\nRetroShare - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. (Source Code) GPL-2.0 \u0421++\nRocket.Chat - Teamchat solution similar to Gitter.im or Slack. (Source Code) MIT Nodejs\nShhh - Keep secrets out of emails or chat logs, share them using secure links with passphrase and expiration dates. MIT Python\nSpectrum 2 - Spectrum 2 is an open source instant messaging transport.  It allows users to chat together even when they are using different IM networks. (Source Code) GPL-3.0 C++\nSpreed - WebRTC audio\/video calls, conferencing server, and web client. (Source Code) AGPL-3.0 Go\nSynapse - Server for Matrix, an open standard for decentralized persistent communication. (Source Code) Apache-2.0 Python\n\nMatrix Console Web - Web client meant to be a showcase of Matrix capabilities, and reference implementation of the Matrix standard. (Source Code) Apache-2.0 Javascript\nElement - Fully-featured Matrix client for Web, iOS & Android. (Source Code) Apache-2.0 Javascript\n\n\nSyndie - Syndie is a libre system for operating distributed forums. CC0-1.0 Java\nTextBelt \u26a0 - Outgoing SMS API that uses carrier-specific gateways to deliver your text messages for free, and without ads. MIT Javascript\nTox - Distributed, secure messenger with audio and video chat capabilities. (Source Code) GPL-3.0 C\nTuber - Peer-to-peer video chat that works. (Source Code) MIT Javascript\nWBO -  A web Whiteboard to collaborate in real-time on schemas, drawings, and notes. (Demo) AGPL-3.0 Nodejs\/Docker\nZeroNet \u26a0 - Open, free, and uncensorable websites, using Bitcoin cryptography and BitTorrent network. (Source Code) GPL-2.0 Python\nZulip - Zulip is a powerful, open source group chat application. (Source Code) Apache-2.0\/Other Python\n\nEmail\n^        back to top        ^\nComplete solutions\nSimple deployment of a mail server, e.g. for inexperienced or impatient admins.\n\nAnonAddy - Open source email forwarding service for creating aliases. (Source Code) MIT PHP\ndocker-mailserver - Fullstack but simple mail server (smtp, imap, antispam, antivirus, etc.). Only configuration files, no SQL database. Keep it simple and versioned. Easy to deploy and upgrade. MIT Docker\nExcision Mail - Fullstack, security focused mailserver based on OpenSMTPD for OpenBSD using ansible. ISC Shell\/Ansible\nInboxen - Inboxen is a service that provides you with an infinite number of unique inboxes. (Source Code) GPL-3.0 Python\nhomebox - Suite of Ansible scripts to deploy a fully functional mail server on Debian. Unobtrusive and automatic as much as possible, focusing on stability and security. GPL-3.0 Shell\niRedMail - Full-featured mail server solution based on Postfix and Dovecot. (Source Code) GPL-3.0 Shell\nMailcow - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. (Source Code) GPL-2.0 Docker\/PHP\nMailu - Mailu is a simple yet full-featured mail server as a set of Docker images. (Demo, Source Code) MIT Docker\/Python\nMail-in-a-Box - Turns any Ubuntu server into a fully functional mail server with one command. (Source Code) CC0-1.0 Shell\nModoboa - Modoboa is a mail hosting and management platform including a modern and simplified Web User Interface. (Source Code) MIT Python\nPtorx - \ud83d\udce9\ud83d\udee1 Email privacy. Anonymously send and receive with alias forwarding. (Source Code) GPL-3.0 Node.js\nQmailtoaster - Stable, full-featured, easy-to-install mail server based on qmail. (Source Code) Multiple Linux\nSimpleLogin - Open source email alias solution to protect your email address. Comes with browser extensions and mobile apps. (Source Code) MIT Docker\/Python\nSimple NixOS Mailserver - Complete mailserver solution leveraging the Nix Ecosystem. GPL-3.0 Nix\nwildduck - Scalable no-SPOF IMAP\/POP3 mail server. (Source Code) EUPL-1.2 Node.js\n\nMail Transfer Agents\nMTAs \/ SMTP servers\n\nchasquid - SMTP (email) server with a focus on simplicity, security, and ease of operation. (Source Code) Apache-2.0 Go\nCourier MTA - Fast, scalable, enterprise mail\/groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. (Source Code) GPL-3.0 C\nExim - Message transfer agent (MTA) developed at the University of Cambridge. (Source Code) GPL-3.0 C\nHaraka - High-performance, pluginable SMTP server written in Javascript. (Source Code) MIT Javascript\nMailCatcher - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. (Source Code) MIT Ruby\nMaildrop - Disposable email SMTP server, also useful for development. MIT Scala\nMailHog - Small Golang executable which runs an SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. MIT Go\nOpenSMTPD - Secure SMTP server implementation from the OpenBSD project. (Source Code) ISC C\nPostfix - Fast, easy to administer, and secure Sendmail replacement. IPL-1.0 C\nQmail - Secure Sendmail replacement. (Source Code) CC0-1.0 C\nSendmail - Message transfer agent (MTA). Sendmail C\nSlimta - Mail Transfer Library built on Python. (Source Code) MIT Python\n\nMail Delivery Agents\nMDAs - IMAP\/POP3 software\n\nCyrus IMAP\/POP3 - Intended to be run on sealed servers, where normal users are not permitted to log in. (Source Code) BSD-3-Clause-Attribution C\nDovecot - IMAP and POP3 server written primarily with security in mind. (Source Code) MIT\/LGPL-2.1 C\nPiler - feature-rich open source email archiving solution. (Source Code) GPL-3.0 C\n\nMailing lists and Newsletters\nMailing lists servers and mass mailing software - one message to many recipients.\n\nDada Mail - Web-based list management system that can be used for announcement lists and\/or discussion lists. (Source Code) GPL-2.0 Perl\nListmonk - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. (Source Code) AGPL-3.0 Go\nMail For Good \u26a0 - Open source email campaign management tool for nonprofits. BSD-3-Clause Javascript\nMailman - The Gnu mailing list server. GPL-3.0 Python\nMailtrain - self hosted newsletter application built on Node.js (v5+) and MySQL (v5.5+ or MariaDB). (Source Code) GPL-3.0 Nodejs\nMailyHerald - Self-hosted Mailchimp alternative that you can easily integrate with your site. Helps you send and manage your application mailings. It supports email marketing and conducting the daily stream of notifications you send to your users. (Source Code) LGPL-3.0 Ruby\nMautic - Mautic is marketing automation software (email, social and more). (Source Code) GPL-3.0 PHP\nHyperKitty - Open source Django application to provide a web interface to access GNU Mailman v3 archives. (Demo, Source Code) GPL-3.0 Python\nphpList - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. (Source Code) AGPL-3.0 PHP\nPostal - Fully featured open source mail delivery platform for incoming and outgoing e-mail. MIT Ruby\nPostorius - Web user interface to access GNU Mailman. (Source Code) GPL-3.0 Python\nSchleuder - GPG-enabled mailing list manager with resending-capabilities. (Source Code) GPL-3.0 Ruby\nSympa - Mailing list manager. GPL-2.0 Perl\n\nWebmail clients\n\nAfterlogic WebMail Lite - Fast and easy-to-use webmail front-end for your existing IMAP mail server, Plesk or cPanel. (Demo, Source Code) AGPL-3.0 PHP\nCypht - Feed reader for your email accounts. (Source Code) GPL-2.0 PHP\nIMP - HORDE application that provides webmail access to IMAP and POP3 accounts. (Demo, Source Code) GPL-2.0 PHP\nIsotope Mail - Microservice based webmail client built with ReactJS and Spring. (Source Code) Apache-2.0 Docker\/Java\nMailCare - Open source disposable email address service. (Source Code) MIT PHP\nMailpile - Webmail client with search, filtering, encryption features and more. (Source Code) AGPL-3.0 Python\nRainLoop - Simple, modern and fast webmail with IMAP\/SMTP Support and multi accounting. (Demo, Source Code). AGPL-3.0 PHP\nRoundcube - Browser-based IMAP client with an application-like user interface. (Source Code) GPL-3.0 PHP\nSquirrelMail - Another browser-based IMAP client. (Source Code) GPL-2.0 PHP\n\nIRC\n^        back to top        ^\nIRC communication software\n\nConvos - Always online web IRC client. (Demo, Source Code) Artistic-2.0 Perl\nInspIRCd - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. (Source Code) GFDL-1.2-only C++\nDispatch - Self-hosted web IRC client written in Go. (Demo) MIT Go\nKiwi IRC - Responsive web IRC client with theming support. (Demo, Source Code) Apache-2.0 Nodejs\nngircd - Free, portable and lightweight Internet Relay Chat server for small or private networks. (Source Code) GPL-2.0 C\nOragono - Modern IRCv3 server written in Go, combining the features of an ircd, a services framework, and a bouncer. (Source Code) MIT Go\nThe Lounge - Self-hosted web IRC client. (Demo, Source Code) MIT Nodejs\nQuassel IRC - distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. (Source Code) GPL-2.0 C++\nRobust IRC - RobustIRC is IRC without netsplits. Distributed IRC server, based on RobustSession protocol. (Source Code) BSD-3-Clause Go\nTiny Tiny IRC - An open source AJAX-powered chat platform with support for IRC (Source Code). GPL-3.0 PHP\/Java\nWeechat - Fast, light and extensible chat client. GPL-3.0 C\n\nGlowing Bear - A web frontend for WeeChat. (Demo) GPL-3.0 JavaScript\n\n\nZNC - Advanced IRC bouncer. (Source Code) Apache-2.0 C++\n\nSIP\n^        back to top        ^\nSIP\/IPBX telephony software\n\nAsterisk - Easy to use but advanced IP PBX system, VoIP gateway and conference server. GPL-2.0 C\nASTPP - is an Open Source VoIP Billing Solution for Freeswitch. It supports prepaid and postpaid billing with call rating and credit control. It also provides many other features. (Source Code) AGPL-3.0 PHP\nFreepbx - Web-based open source GUI that controls and manages Asterisk. (Source Code) GPL-2.0 PHP\nFreeSWITCH - Scalable open source cross-platform telephony platform. (Source Code) MPL-2.0 C\nFusionPBX - Open source project that provides a customizable and flexible web interface to the very powerful and highly scalable multi-platform voice switch called FreeSWITCH. (Source Code) MPL-1.1 PHP\nHomer - Troubleshooting and monitoring VoIP calls. (Source Code) AGPL-3.0 Angular\/C\nKamailio - Modular SIP server (registrar\/proxy\/router\/etc). (Source Code) GPL-2.0 C\nKazoo - KAZOO is an open-source, highly scalable software platform designed to provide carrier-grade VoIP switch functions and features. (Source Code) MPL-1.1 Erlang\nOstel - Secure SIP telephony setup with ZRTP encryption. GPL-3.0 Ruby\nRoutr - A lightweight sip proxy, location server, and registrar for a reliable and scalable SIP infrastructure. (Demo, Source Code) MIT JavaScript\nSipXcom - Open source unified communications system. (Source Code) AGPL-3.0 Java\nSIP3 - VoIP troubleshooting and monitoring platform. (Demo, Source Code) Apache-2.0 Kotlin\nWazo - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. (Source Code) GPL-3.0 Python\n\nSocial Networks and Forums\n^        back to top        ^\n\nAbilian SBE - Open Source Collaboration and Social Networking framework and platform. LGPL-2.1 Python\nAnahita - Open Source Social Networking Framework and Platform. (Source Code) GPL-3.0 PHP\nbbPress - bbPress is forum software with a twist from the creators of WordPress. Easily setup discussion forums inside your WordPress.org powered site. (Source Code) GPL-2.0 PHP\nBootcamp - Enterprise social network. (Source Code) MIT Python\nBuddycloud - Tools, libraries, services and a community to build user-to-user, group and social messaging into your app. Saves time. Scales up. Supports you. (Source Code) Apache-2.0 Java\nBuddyPress - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. (Source Code) GPL-2.0 PHP\ncartulary - RSS reader, readability tool, article archiver, microblogger, social graph manager and reading list manager. CDDL-1.0 PHP\nCommento - Commento is a discussion platform that you can embed on your blog, news articles, and any place where you want your readers to add comments. MIT GO\nCoral - A better commenting experience from Vox Media. (Source Code) Apache-2.0 Nodejs\ndiaspora* - Distributed social networking server. (Demo, Source Code) AGPL-3.0 Ruby\nDiscourse - Advanced forum \/ community solution based on Ruby and JS. (Demo, Source Code) GPL-2.0 Ruby\ndyu\/comments - Real-time, markdown-enabled comment engine powered by leveldb. (Demo) Apache-2.0 Java\nEpochTalk - Next Generation Forum Software. MIT Nodejs\nElgg - Powerful open source social networking engine. (Source Code) GPL-2.0 PHP\nFlarum - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. (Source Code) MIT PHP\nflaskbb - FlaskBB is forum software written in Python using the microframework Flask. You can easily create new topics, posts and send other users private messages. It also includes basic administration and moderation tools. (Source Code) BSD-3-Clause Python\nFluxBB - Fast, light, user-friendly forum software for your website. (Source Code) GPL-2.0 PHP\nFriendica - Social Communication Server. (Source Code) AGPL-3.0 PHP\nGlosa - Open source commentary system easy to integrate with static pages. You can import from Disqus. GPL-3.0 Java\nGNU social - Social communication software for both public and private communications. (Source Code) AGPL-3.0 PHP\nGosora - Gosora is an ultra-fast and secure forum software written in Go that balances usability with functionality. (Source Code) GPL-3.0 Go\nHubzilla - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications\/social platform. (Source Code) MIT PHP\nHumHub - Flexible kit for private social networks. (Source Code) AGPL-3.0 PHP\nIsso - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. (Source Code) MIT Python\nLemmy - A link aggregator \/ reddit clone for the fediverse. Reddit alternative built in Rust. (Source Code) AGPL-3.0 Rust\nLoomio - Loomio is a collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. (Source Code) AGPL-3.0 Ruby\nMastodon - Federated microblogging server, an alternative to GNU social. (Source Code) AGPL-3.0 Ruby\nMisago - Misago is fully featured modern forum application that is fast, scalable and responsive. (Source Code) GPL-2.0 Python\nMisskey - Decentralized app-like microblogging server\/SNS for the Fediverse, using the ActivityPub protocol like GNU social and Mastodon. (Source Code) AGPL-3.0 Nodejs\nMovim - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. (Source Code) AGPL-3.0 PHP\nMyBB - Free, extensible forum software package. (Source Code) LGPL-3.0 PHP\nNodeBB - Node.js based forum software built for the modern web. (Source Code) GPL-3.0 Nodejs\nOrange Forum - Orange Forum is an easy to deploy forum that has minimal dependencies and uses very little javascript. (Source Code) BSD-3-Clause Go\nOSSN - Open Source Social Network (OSSN) is a social networking software written in PHP. It allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. (Source Code) GPL-2.0 PHP\nPatchwork - Decentralized messaging and sharing app built on top of Secure Scuttlebutt (SSB). AGPL-3.0-only NodeJS\nphpBB - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. (Source Code) GPL-2.0 PHP\nPixelFed - Pixelfed is an open-source, federated platform alternate to Instagram. (Source Code) AGPL-3.0 PHP\\HTML\\Vue\nPleroma - Federated microblogging server, Mastodon, GNU social, & ActivityPub compatible. (Source Code) AGPL-3.0 Elixir\nPPnet - Create and host your own social network. MIT Javascript\nPump.io - Stream server that does most of what people really want from a social network. (Source Code) Apache-2.0 Nodejs\nremark42 - A lightweight and simple comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments. (Demo, Source Code) MIT Go\nSatellity - Yet another open source forum written in Golang, React and PostgreSQL. (Source Code) MIT Go\nScoold - Stack Overflow in a JAR. An enterprise-ready Q&A platform with full-text search, SAML, LDAP integration and social login support. (Demo, Source Code) Apache-2.0 Java\nSimple Machines Forum - Free, professional grade software package that allows you to set up your own online community within minutes. (Source Code) BSD-3-Clause PHP\nSocialhome - Federated and decentralized profile builder and social network engine. (Demo, Source Code) AGPL-3.0 Python\nTalkyard - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack\/StackOverflow\/Discourse\/Reddit\/Disqus hybrid). (Demo, Source Code) AGPL-3.0 Scala\nTokumei - Anonymous microblogging platform. (Source Code) ISC rc\nThredded - Forums, feature-rich and simple. MIT Ruby\ntwister - Fully decentralized P2P microblogging platform leveraging the free software implementations of Bitcoin and BitTorrent protocols. (Source Code) MIT C++\ntwtxt.net - a Self-Hosted, Twitter\u2122-like Decentralised micro-logging platform. No ads, no tracking, your content, your data. (Source Code) MIT Go\n\nrss2twtxt - An RSS\/Atom feed aggregator command-line tool and web service that consumes RSS\/Atom and produces twtxt.net feeds for consumption by twtxt clients. (Demo) MIT Go\n\n\nVanilla Forums - Simple and flexible forum software. (Source Code) GPL-2.0 PHP\nZusam - Free and open-source way to self-host private forums for groups of friends or family. (Demo, Source Code) AGPL-3.0 PHP\n\nXMPP\n^        back to top        ^\nExtensible Messaging and Presence Protocol software\nXMPP Servers\n\nejabberd - XMPP instant messaging server. (Source Code) GPL-2.0 Erlang\nKontalk - Kontalk is an Open Source Messenger, similar to WhatsApp (app for android only currently), including end-to-end encryption, server is based on Tigase XMPP Server. (Source Code) GPL-3.0 Java\nMetronome IM - Fork of Prosody IM. (Source Code) MIT Lua\nMongooseIM - Mobile messaging platform with a focus on performance and scalability. (Source Code) GPL-2.0 Erlang\nOpenfire - Real time collaboration (RTC) server. (Source Code) Apache-2.0 Java\nProsody IM - Feature-rich and easy to configure XMPP server. (Source Code) MIT Lua\nTigase - XMPP server implementation in Java. GPL-3.0 Java\n\nXMPP Web Clients\n\nCandy - Multi user XMPP client written in Javascript. (Source Code) MIT Javascript\nConverse.js - Free and open-source XMPP chat client in your browser. (Source Code) MPL-2.0 Javascript\nJSXC - Real-time XMPP web chat application with video calls, file transfer and encrypted communication. There are also versions for Nextcloud\/Owncloud and SOGo. (Source Code) MIT Javascript\nSalut \u00e0 Toi - Multipurpose, multi frontend, libre and decentralized communication tool. (Source Code) AGPL-3.0 Python\n\nLibervia - Web frontend from Salut \u00e0 Toi. (Source Code) AGPL-3.0 Python\n\n\n\nConference Management\n^        back to top        ^\n\nBigBlueButton - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. (Demo, Source Code) LGPL-3.0 Java\nConference Organizing Distribution (COD) - Create conference and event websites built on top of Drupal. (Source Code) GPL-1.0 PHP\nfrab - web-based conference planning and management system. It helps to collect submissions, to manage talks and speakers and to create a schedule. (Source Code) MIT Ruby\nindico - A feature-rich event management system, made @ CERN, the place where the Web was born. (Demo, Source Code) MIT Python\nOpen Conference Systems (OCS) - is a free Web publishing tool that will create a complete Web presence for your scholarly conference. (Demo, Source Code) GPL-1.0 PHP\nOpenCFP - OpenCFP is a PHP-based conference talk submission system. MIT PHP\nOpenConferenceWare - An open source web application for supporting conference-like events. This customizable, general-purpose platform provides proposals, sessions, schedules, tracks, user profiles. (Source Code) MIT Ruby\nosem - Event management tailored to free Software conferences. (Demo, Source Code) MIT Ruby\npretalx - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. (Source Code) Apache-2.0 Python\n\nContent Management Systems (CMS)\n^        back to top        ^\nCMS are a practical way to setup a website with many features. CMS often come with third party plugins, themes and functionality that is easy to add and customize to your needs. See also Blogging Platforms and Static Site Generators\n\nAlfresco Community Edition - The open source Enterprise Content Management software that handles any type of content, allowing users to easily share and collaborate on content. (Source Code) LGPL-3.0 Java\nApostrophe - Node.js CMS with a focus on extensible in-context editing tools. (Demo, Source Code) MIT Nodejs\nb2evolution CMS - The most integrated CMS ever: b2evolution includes everything you need to build websites for publishing, sharing and interacting with your community. (Demo, Source Code) GPL-2.0 PHP\nBackdrop CMS - Comprehensive CMS for small to medium sized businesses and non-profits. (Source Code) GPL-2.0 PHP\nBigTree CMS - Straightforward, well documented, and capable written with PHP and MySQL. (Source Code) LGPL-2.1 PHP\nBolt CMS - Open source Content Management Tool, which strives to be as simple and straightforward as possible. (Demo, Source Code) MIT PHP\nCMS Made Simple - Open source content management system, faster and easier management of website contents, scalable for small businesses to large corporations. (Source Code) GPL-1.0 PHP\nCockpit - Simple Content Platform to manage any structured content. (Source Code) MIT PHP\nConcrete 5 CMS - Open source content management system. (Source Code) MIT PHP\nContao - Contao is a powerful open source CMS that allows you to create professional websites and scalable web applications. (Source Code) LGPL-3.0 PHP\nCouchCMS - Simple Open-Source CMS for designers. (Source Code) CPAL-1.0 PHP\nDirectus - Directus is a powerful and intuitive headless CMS for managing SQL databases with custom architectures. Built around a robust and extensible API, this decoupled content management framework is perfect for websites, apps, or multi-client projects. (Source Code) GPL-3.0 PHP\nDrupal - Advanced open source content management platform. (Source Code) GPL-2.0 PHP\neLabFTW - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators\u2026. (Demo, Source Code) AGPL-3.0 PHP\nExpressa - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. MIT Nodejs\nGetSimple CMS - The Simplest Content Management System. Ever. (Source Code) GPL-3.0 PHP\nJoomla! - Advanced Content Management System (CMS). (Source Code) GPL-2.0 PHP\nKeystoneJS - CMS and Web Application Platform. (Demo, Source Code) MIT Nodejs\nMODX - MODX is an advanced content management and publishing platform. The current version is called 'Revolution'. (Source Code) GPL-2.0 PHP\nNeos - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. (Source Code) GPL-3.0 PHP\nNoosfero - Noosfero is a web platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. AGPL-3.0 Ruby\noctober - Free, open-source, self-hosted CMS platform. (Source Code) MIT PHP\nOmeka - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. (Demo, Source Code) GPL-3.0 PHP\nPagekit - New modern CMS to create and share. (Source Code) MIT PHP\nPico - Stupidly simple, blazing fast, flat file CMS. (Source Code) MIT PHP\nPimcore - Multi-Channel Experience and Engagement Management Platform. (Source Code) GPL-3.0-or-later PHP\nPlone - Powerful open-source CMS system. (Source Code) ZPL-2.0 Python\nProcessWire - ProcessWire is an open source content management system (CMS) and web application framework aimed at the needs of designers, developers and their clients. (Source Code) MPL-2.0 PHP\nPropertyWebBuilder - Ultimate Ruby on Rails engine for creating real estate websites. (Demo, Source Code) MIT Ruby\nPublify - Simple but full featured web publishing software. (Source Code) MIT Ruby\nREDAXO - Simple, flexible and useful content management system (documentation only available in German). (Source Code) MIT PHP\nRedaxscript - Ultra lightweight CMS for MySQL, SQLite and PostgreSQL. (Demo, Source Code) GPL-3.0 PHP\nRoadiz -  Modern CMS based on a node system which can handle many types of services. (Source Code) MIT PHP\nSilverStripe - Easy to use CMS with powerful MVC framework underlying. (Demo, Source Code) BSD-3-Clause PHP\nSPIP - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. (Source Code) GPL-2.0 PHP\nSquidex - Headless CMS, based on MongoDB, CQRS and Event Sourcing. (Demo, Source Code) MIT .NET\nStrapi - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. (Source Code) MIT Nodejs\nSubrion - Subrion is a free open source content management system that allows you to build websites for any purpose. Yes, from blog to corporate mega portal. (Demo, Source Code) GPL-3.0 PHP\nTextpattern - Flexible, elegant and easy-to-use CMS. (Demo, Source Code) GPL-2.0 PHP\nTypemill - Author-friendly flat-file-cms with a visual markdown editor based on vue.js. (Source Code) MIT PHP\nTYPO3 - Powerful and advanced CMS with a large community. (Source Code) GPL-2.0 PHP\nUmbraco - The friendly CMS. Free and open source with an amazing community. (Source Code) MIT .NET\nWagtail - Django content management system focused on flexibility and user experience. (Source Code) BSD-3-Clause Python\nWonderCMS - WonderCMS is the smallest flat file CMS since 2008. (Demo, Source Code) MIT PHP\nWordPress - World's most-used blogging and CMS engine. (Source Code) GPL-2.0 PHP\nWriteFreely - Writing software for starting a minimalist, federated blog \u2014 or an entire community. (Source Code) AGPL-3.0 Go\n\nRecipe management\n\nOpenEats - Recipe management site that allows users to create, store, share and rate recipes, create grocery lists, and more. (Demo) MIT Python\nRecipes - Recipes is a Django application to manage, tag and search recipes using either built-in models or external storage providers hosting PDF's, Images or other files. MIT Python\n\nE-commerce\n\nAttendize - Ticket selling and event management platform. (Source Code) AAL PHP\nBagisto - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. (Demo, Source Code) MIT PHP\nCoreShop - CoreShop is a e-commerce plugin for Pimcore. (Source Code) GPL-3.0 PHP\nDrupal Commerce - Drupal Commerce is a popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. (Source Code) GPL-2.0 PHP\nMagento - Leading provider of open omnichannel innovation. (Demo, Source Code) OSL-3.0 PHP\nMicroweber - Drag and Drop CMS and online shop. (Demo, Source Code) Apache-2.0 PHP\nOpenBazaar - Decentralized marketplace using cryptocurrency. (Source Code) MIT Go\nOpenCart - Free open source shopping cart solution. (Source Code) GPL-3.0 PHP\nOpen Classifieds - Free open-source, self-hosted CMS for classifieds sites. (Source Code) GPL-3.0 PHP\nOpen Source POS - Open Source Point of Sale is a web based point of sale system. (Source Code) MIT PHP\nOXID eShop - OXID eShop is a flexible open source e-commerce software with a wide range of functionalities. (Demo, Source Code) GPL-3.0 PHP\nOpen Food Network - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. (Source Code) AGPL-3.0 Ruby\nPrestaShop - PrestaShop offers a free, open-source and fully scalable e-commerce solution. (Demo, Source Code) OSL-3.0 PHP\nPretix - Django based ticket sales platform for events. (Source Code) Apache-2.0 Python\nReaction Commerce - Customizable, real-time reactive, JavaScript commerce platform. (Source Code) GPL-3.0 Nodejs\nSaleor - Django based open-sourced e-commerce storefront. (Demo, Source Code) BSD-3-Clause Python\nSharetribe - An open source platform to create your own peer-to-peer marketplace, also available with SaaS model. (Source Code) MIT Ruby\nShuup - Django powered fully customizable open source e-commerce framework for small and large sites. (Source Code) AGPL-3.0 Python\nShopware Community Edition - PHP based open source e-commerce software made in Germany. (Demo, Source Code) MIT PHP\nSpree Commerce - Spree is a complete, modular & API-driven open source e-commerce solution for Ruby on Rails. (Demo, Source Code) BSD-3-Clause Ruby\nSylius - Symfony2 powered open source full-stack platform for eCommerce. (Demo, Source Code) MIT PHP\nThelia - Thelia is an open source and flexible e-commerce solution. (Demo, Source Code) LGPL-3.0 PHP\nWooCommerce - WordPress based e-commerce solution. (Source Code) GPL-3.0 PHP\n\nDNS\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#dns\n\nCoreDNS - Plugin driven DNS Server with support for proxying to Google's DNS-over-HTTPS. (Source Code) Apache-2.0 Go\nMaza ad blocking - Local ad blocker. Like Pi-hole but local and using your operating system. (Source Code) Apache-2.0 Bash\nnsupdate.info - nsupdate.info is a dynamic DNS service. (Demo, Source Code) BSD-3-Clause Python\nSPF Toolbox - Application to look up DNS records such as SPF, MX, Whois, and more. (Source Code) MIT PHP\n\nDocument Management\n^        back to top        ^\n\nCaseBox - Manage all your organization's information in one system. (Source Code) AGPL-3.0 PHP\/Java\nDOCAT - Host your docs. Simple. Versioned. Fancy. MIT Python\/docker\nDocspell - Auto-tagging document organizer and archive. (Source Code) GPL-3.0 Scala\/Java\nEdPaper - PDF organizer with users management. MIT PHP\nEveryDocs - A simple Document Management System for private use with basic functionality to organize your documents digitally. GPL-3.0 Ruby\nMayan EDMS - Free Open Source Electronic Document Management System. An electronic vault for your documents with preview generation, OCR, and automatic categorization among other features. (Source Code) Apache-2.0 Python\nPapermerge - Open Source Document Management System focused on scanned documents (electronic archives). Features file browsing in similar way to dropbox\/google drive. OCR, full text search, text overlay\/selection. (Source Code) Apache-2.0 Python\nPaperless - Scan, index, and archive all of your paper documents. GPL-3.0 Python\nTeedy - (Ex SismicsDocs) Lightweight document management system packed with all the features you can expect from big expensive solutions. (Source Code) GPL-2.0 Java\n\nE-books and Integrated Library Systems (ILS)\n^        back to top        ^\nSome Content Management System and Archiving and Digital Preservation solutions also overlap with library and institutional repository software.\nPersonal e-book management software.\n\nCalibre - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. (Demo, Source Code) GPL-3.0 Python\n\nBicBucStriim - Provides web-based access to your Calibre Library's e-book collection. (Source Code) MIT PHP\nCalibre Web - Web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. GPL-3.0 Python\nCOPS - Lightweight e-book server alternative to Calibre content server or Calibre2OPDS. (Demo, Source Code) GPL-2.0 PHP\nThe Epube - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. (Source Code) GPL-3.0 PHP\n\n\nKomga - Media server for comics\/mangas\/BDs with API and OPDS support, a modern web interface for exploring your libraries, as well as a web reader. (Source Code) MIT Java\/Docker\nMango - Manga server and web reader with a built-in MangaDex downloader. MIT Crystal\n\nEnterprise-class library management software.\n\nEvergreen - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. (Source Code) GPL-2.0 PL\/pgSQL\nKoha - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. (Demo, Source Code) GPL-3.0 Perl\nRERO ILS - Large-scale ILS that can be run as a service with consortial features, intended primarily for library networks. Includes most standard modules (circulation, acquisitions, cataloging,...) and a web-based public and professional interface. (Demo, Source Code) AGPL-3.0 Python\/Other\n\nInstitutional repository and digital library software.\n\nDSpace - Turnkey repository application providing durable access to digital resources. (Source Code) BSD-3-Clause Java\nEPrints - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. (Demo, Source Code) GPL-3.0 Perl\nFedora Commons Repository - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. (Source Code) Apache-2.0 Java\nIslandora - Drupal module for browsing and managing Fedora-based digital repositories. (Source Code) GPL-3.0 PHP\nSamvera Hyrax - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. (Source Code) Apache-2.0 Ruby\n\nFederated Identity\/Authentication\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#identity-management\nFeed Readers\n^        back to top        ^\n\nCommaFeed - Google Reader inspired self-hosted RSS reader. (Source Code) Apache-2.0 Java\nFeedbin - Simple, fast and nice looking RSS reader. (Source Code) MIT Ruby\nFeedHQ - FeedHQ is a web-based feed reader. (Source Code) BSD-3-Clause Python\nFreshRSS - Self-hostable RSS feed aggregator. (Demo, Source Code, Clients) AGPL-3.0 PHP\nJARR - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). (Demo, Source Code) AGPL-3.0 Python\nKriss Feed - Simple and smart (or stupid) feed reader. (Demo, Source Code) CC0-1.0 PHP\nLeed - Leed (for Light Feed) is a Free and minimalist RSS aggregator. (Source Code) AGPL-3.0 PHP\nLeselys - Your very elegant RSS reader. AGPL-3.0 Python\nLite-Reader - Read your feeds on your own machine with a simple and lite application. (Demo) BSD-3-Clause PHP\nMoonmoon - simple feed aggregator (planet like): it only aggregates feeds and spits them out in one single page. (Source Code) BSD-3-Clause PHP\nMiniflux - Miniflux 2 is a minimalist and open source news reader, written in Go and PostgreSQL. (Source Code) Apache-2.0 Go\nNewsBlur - NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument. (Source Code) MIT Python\nnewsdash - A news dashboard inspired by iGoogle and Netvibes. AGPL-3.0 NodeJS\nNewspipe - Newspipe is a web news reader. (Demo) AGPL-3.0 Python\nreader - A Python feed reader web app and library (so you can use it to build your own), with only standard library and pure-Python dependencies. BSD-3-Clause Python\nReader-Self - Self-hosted rss reader (php \/ mysql or sqlite) - Google Reader alternative. (Source Code) GPL-3.0 PHP\nRSS Monster - RSS Monster is an easy to use web-based RSS aggregator and reader compatible with the Fever API, created as an alternative for Google Reader. MIT PHP\nSelfoss - New multipurpose rss reader, live stream, mashup, aggregation web application. (Source Code) AGPL-3.0 PHP\nSismics Reader - Free and open source feeds reader, including all major Google Reader features. (Demo, Source Code) GPL-2.0 Java\nStringer - Work-in-progress self-hosted, anti-social RSS reader. MIT Ruby\nTemboz - Two-column feed reader emphasizing filtering capabilities to manage information overload. MIT Python\nTiny Tiny RSS - Open source web-based news feed (RSS\/Atom) reader and aggregator. (Demo, Source Code) GPL-3.0 PHP\n\ngritttt-rss - More features for Tiny Tiny RSS. (Source Code) BSD-2-Clause Python\nttrss-mobile - Mobile webapp for Tiny Tiny RSS. AGPL-3.0 Javascript\nttrss-reader - Light and responsive client for TTRSS. GPL-2.0 Javascript\n\n\nWinds \u26a0 - Open source and beautiful RSS reader built using React\/Redux\/Sails\/Node and Stream. It showcases personalized feeds powered by the Stream API. (Demo, Source Code) BSD-3-Clause Nodejs\n\nRSS\/Atom automation\n\nFeedpushr - Powerful RSS aggregator, able to transform and send articles to many outputs. Single binary, extensible with plugins. GPL-3.0 Go\nFull-Text RSS - Extract article content from news sites and blogs and convert RSS feeds that contain only extracts of stories to full-text feeds. Developed by FiveFilters.org. (Source Code) GPL-3.0 PHP\nPolitePol - Online tool for creation of RSS feeds for any web page. (Demo) MIT Python\nRSS Fulltext Proxy - Mirrors RSS feeds to return the full content of the items, extracted from the website. MIT NodeJS\nRSS Merger - PHP script which will take multiple RSS \/ Atom feeds as input and merge them into a single RSS feed. GPL-2.0 PHP\nRSS-Bridge - rss-bridge is a PHP project capable of generating ATOM feeds for websites which don't have one. Unlicense PHP\nRSS2EMail - Fetches RSS\/Atom-feeds and pushes new Content to any email-receiver, supports OPML. GPL-2.0 Python\nScreaming Liquid Tiger - Simple script to automatically generate valid RSS and Atom feeds from a list of media files in the same folder. MIT PHP\n\nFile Sharing and Synchronization\n^        back to top        ^\nSome Groupware solutions also feature file sharing and synchronization.\nDistributed filesystems\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#distributed-filesystems\nFile transfer\/synchronization\n\nGit Annex - File synchronization between computers, servers, external drives. (Source Code) GPL-3.0 Haskell\nKinto - Kinto is a minimalist JSON storage service with synchronisation and sharing abilities. (Source Code) Apache-2.0 Python\nmyDrive - Fully featured online storage solution, upload\/download files, photo\/video viewer, and more, all through the web client. (Demo) GPL-3.0 Node.js\nNextcloud - Access and share your files, calendars, contacts, mail and more from any device, on your terms. (Demo, Source Code) AGPL-3.0 PHP\nOpenSSH\/SFTP - Secure File Transfer Program. (Source Code) BSD-2-Clause C\nownCloud - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. (Source Code, Clients) AGPL-3.0 PHP\nPydio - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. (Source Code) AGPL-3.0 PHP\nSamba - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB\/CIFS protocol. (Source Code) GPL-3.0 C\nSeafile - File hosting and sharing solution primary for teams and organizations. (Source Code) GPL-2.0\/GPL-3.0\/AGPL-3.0\/Apache-2.0 C\nSparkleShare - Self hosted, instant, secure file sync. (Source Code) GPL-3.0 C#\nSyncany - Secure file sync software for arbitrary storage backends, an open-source cloud storage and filesharing application. Securely synchronize your files to any kind of storage. GPL-3.0 Java\nSyncthing - Syncthing is an open source peer-to-peer file synchronisation tool. (Source Code) MPL-2.0 Go\nUnison - Unison is a file-synchronization tool for OSX, Unix, and Windows. GPL-3.0 OCaml\nZ-Push - Implementation of Microsoft\u2019s ActiveSync protocol. (Source Code) AGPL-3.0 PHP\n\nPeer-to-peer filesharing\n\nbittorrent-tracker - Simple, robust, BitTorrent tracker (client and server) implementation. (Source Code) MIT Nodejs\ncloud-torrent - Torrent Web Client with HTTP retrievable or streamable downloaded files. AGPL-3.0 Go\nDat Project - Powerful decentralized file sharing applications built from a large ecosystem of modules. (Source Code) MIT Nodejs\nFilePizza - Peer-to-peer file transfers in your browser. (Source Code) BSD-3-Clause Nodejs\nSend - A file sharing experiment which allows you to send encrypted files to other users. (Clients) MPL-2.0 Nodejs\ninstant.io - Streaming file transfer over WebTorrent. (Demo) MIT Nodejs\nMagnetico - Magnetico is the first autonomous (self-hosted) BitTorrent DHT search engine suite that is designed for end-users. AGPL-3.0 Python\nMagnetissimo - Search engine that indexes all popular torrent sites. MIT Elixir\nOpentracker - Open and free bittorrent tracker. It aims for minimal resource usage and is intended to run at your wlan router. (Source Code) Beerware C\npeerflix-server - Downloads torrent files and provides a direct link download or a direct link stream. MIT Nodejs\nqBittorrent - Free cross-platform bittorrent client with a feature rich Web UI for remote access. (Source Code) GPL-2.0 C++\nrartracker - Complete private bittorrent tracker. WTFPL PHP\nTorrents.csv - A self-hostable torrent search engine. GPL-3.0 Rust\nTransmission - Fast, easy, Free Bittorrent client. (Source Code) GPL-3.0 C\n\nObject storage\/file servers\n\nMinio - Minio is an open source object storage server compatible with Amazon S3 APIs. (Source Code) Apache-2.0 Go\nZenko CloudServer - Zenko CloudServer, an open-source Node.js implementation of a server handling the Amazon S3 protocol. (Source Code) Apache-2.0 Nodejs\n\nSingle-click\/drag-n-drop upload\n\nBoZoN - Minimalist Drag and drop file sharing app. AGPL-3.0 PHP\nCoquelicot - Coquelicot is a \u201cone-click\u201d file sharing web application with a focus on protecting users\u2019 privacy. (Source Code) AGPL-3.0 Ruby\nelixire - Simple yet advanced screenshot uploading and link shortening service. (Source Code, Clients) AGPL-3.0 Python\nfibridge - Stream huge files out of your browser without having to upload. MIT Rust\nFileShelter - FileShelter is a self-hosted software that allows you to easily share files over the Internet. (Demo) GPL-3.0 C++\nFiles Sharing - Open Source and self-hosted files sharing application based on unique and temporary links. GPL-3.0 PHP\ngoploader - Easy file sharing with server-side encryption, curl\/httpie\/wget compliant. (Source Code) MIT Go\nimgpush - imgpush is a self-hosted file upload service that can easily be integrated into other webapps. MIT Python\nipfs.pics - ipfs.pics is a distributed image hosting website. AGPL-3.0 PHP\nJirafeau - Jirafeau is a web site permitting to upload a file in a simple way and give an unique link to it. (Demo) AGPL-3.0 PHP\nlinx-server - Simple file sharing and pastebin with API, auto-expiry, deletion keys, and web seed support. (Demo) GPL-3.0 Go\nlufi - Let's Upload that FIle, client-side encrypted. (Demo, Source Code) AGPL-3.0 Perl\nlutim - Let's Upload That Image. AGPL-3.0 Perl\nOnionShare - Securely and anonymously share a file of any size. GPL-2.0 Python\nPictShare - PictShare is a multi lingual, open source image hosting service with a simple resizing and upload API. (Source Code) Apache-2.0 PHP\nPlik - Plik is a scalable and friendly temporary file upload system. (Demo) MIT Go\nPomf - Simple file uploading and sharing, source for the now shut down site Pomf.se. MIT PHP\nProjectSend - Upload files and assign them to specific clients you create. Give access to those files to your clients. (Source Code) GPL-2.0 PHP\nPsiTransfer - Simple open source self-hosted file sharing solution with robust up-\/download-resume and password protection. BSD-2-Clause Nodejs\nShare - Simple yet advanced uploader - upload files, images and text with moderation tools for admins. Can be used for friends and family or just for you. Integration with ShareX and more. MIT Nodejs\nSharry - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. GPL-3.0 Scala\/Java\nUguu - Stores files and deletes after X amount of time. (Source Code) MIT PHP\nUp1 - Client-side Encrypted Image Host. MIT Nodejs\nuPste - Private file hosting application with an emphasis on serving technology communities. (Source Code) AGPL-3.0 PHP\nXBackBone - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). AGPL-3.0 PHP\nYouTransfer - YouTransfer is a simple but elegant self-hosted file transfer and sharing solution. (Demo, Source Code) Apache-2.0 Nodejs\n\nCommand-line file upload\n\nBeauties - Minimalist file sharing written in Go, to be used primarily from Unix shell (e.g. with curl). Can be built as a Debian package for easy install. MIT Go\ntransfer.sh - Easy file sharing from the command line. (Source Code) MIT Go\n\nWeb based file managers\n\nApaxy - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. (Source Code) Unlicense HTML\nDirectoryLister - Simple PHP based directory lister that lists a directory and all it's sub-directories and allows you to navigate there within. (Source Code) MIT PHP\nEncode Explorer - Encode Explorer is a single page file browser, it is simple and functional. (Demo, Source Code) MIT PHP\nexplorer - Highly-configurable directory listing made with nodejs. (Source Code) MIT Nodejs\nFilestash - A web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive . (Demo, Source Code) AGPL-3.0 Go\ngoBrowser - Simple http file browser. GPL-3.0 Go\nGossa - Gossa is a light and simple webserver for your files. MIT Go\nh5ai - Modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. (Demo, Source Code) MIT PHP\nIFM - Single script file manager. MIT PHP\nResourceSpace - ResourceSpace open source digital asset management software is the simple, fast, and free way to organise your digital assets. (Demo, Source Code) Other PHP\ns3server - Simple HTTP interface to index and browse files in a public S3 or Google Cloud Storage bucket. MIT Go\nSurfer - Simple static file server with webui to manage files. MIT Nodejs\nTagSpaces - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. (Demo, Source Code) AGPL-3.0 Javascript\n\nGames\n^        back to top        ^\nGames, game servers and control panels.\n\nA Dark Room - Minimalist text adventure game for your browser. (Demo) MPL-2.0 HTML5\nAgar.IO Clone - Agar.io clone written with Socket.IO and HTML5 canvas. MIT Nodejs\nbattlecraft - Fully distributed multiplayer browser game. Apache-2.0 Erlang\nelevatorsaga - The elevator programming game. (Source Code) MIT Javascript\nHextris - Fast paced HTML5 puzzle game inspired by Tetris. (Demo) GPL-3.0 HTML5\nLegend of the Green Dragon - Legend of the Green Dragon is a text-based RPG originally developed by Eric Stevens and JT Traub as a remake of and homage to the classic BBS Door game, Legend of the Red Dragon, by Seth Able Robinson. (Demo) AGPL-3.0 PHP\nLila - The forever free, adless and open source chess server powering lichess.org, with official iOS and Android client apps. (Source Code) AGPL-3.0 Scala\nMindustry - Factorio-like tower defense game. Build production chains to gather more resources, and build complex facilities. (Source Code) GPL-3.0 Java\nMinetest - An open source voxel game engine. Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. (Source Code) LGPL-2.1\/CC-BY-SA-3.0\/Other C++\nNet64+ \u26a0 - Net64 aka SM64O allows playing Super Mario 64 in an online multiplayer mode. Net64+ is the official continuation of the program and features an integrated server list. (Source Code, Clients) MIT Nodejs\nnode-virtual-gamepads - Turn your smartphone into a game controller, keyboard, or touchpad for a remote Linux OS machine. MIT Nodejs\/CoffeScript\nPosio - Geography multiplayer game. MIT Python\npiqueserver - Server for openspades, the first-person shooter in a destructible voxel world. (Clients) GPL-3.0 Python\/C++\nQuakeJS - QuakeJS is a port of ioquake3 to JavaScript that can be played in a browser. MIT Nodejs\nQuizmaster - A web-app for conducting a quiz, including a page for players to enter their answers. Apache-2.0 Scala\nRconCli - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. MIT Go\nSourceBans++ - Admin, ban, and communication management system for games running on the Source engine. (Source Code) CC-BY-SA-4.0 PHP\nTeeworlds - Open source 2D retro multiplayer shooter. (Source Code) BSD-3-Clause\/Other C++\nTournamentMango - TournamentMango is an open source tournament bracket and user management system. You can build an archive of players and keep track of all their scores over time as well as their regular characters, games, and aliases. MIT Javascript\n\nGateways and terminal sharing\n^        back to top        ^\n\nasciinema - Web app for hosting asciicasts. (Demo) Apache-2.0 Elixir\/Docker\nGateOne - Gate One is an HTML5 web-based terminal emulator and SSH client. (Source Code) AGPL-3.0 Python\nGuacamole - Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. (Source Code) Apache-2.0 Java\/C\nNeko - A self hosted virtual browser (rabb.it clone) that runs in Docker. Apache-2.0 Docker\/Go\noneye - Cloud software to access your data from everywhere with any browser. (Demo, Source Code) AGPL-3.0 PHP\nOS.js - Desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction. (Demo, Source Code) BSD-2-Clause Nodejs\nSshwifty - Sshwifty is a SSH and Telnet connector made for the Web. AGPL-3.0 Go\/Docker\ntmate - Instant terminal sharing. (Source Code) ISC C\n\nGroupware\n^        back to top        ^\n\nBlueMind - Groupware with email, calendar, addressbooks, exchange active sync, exchange \"mapi\" protocol support. (Source Code) AGPL-3.0 Java\nCitadel - Groupware including email, calendar\/scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. (Source Code) GPL-3.0 C\nCorteza - CRM including a unified workspace, enterprise messaging and a low code environment for rapidly and securely delivering records-based management solutions. (Demo, Source Code) Apache-2.0 Go\nCozy Cloud - Personal cloud where you can manage and sync your contact, files and calendars, and manage your budget with an app store full of community contributions. (Source Code) GPL-3.0 Nodejs\negroupware - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. (Source Code) GPL-2.0 PHP\nEspoCRM - CRM with a frontend designed as a single page application, and a REST API. (Demo, Source Code) GPL-3.0 PHP\nHorde - The Horde Project is about creating high quality Open Source applications and libraries, based on PHP and the Horde Framework. (Demo, Source Code) GPL-2.0 PHP\nHRCloud2 - Full-featured home hosted Cloud Drive, Personal Assistant, App Launcher, File Converter, Streamer, Share Tool and more. GPL-3.0 PHP\nKolab - Kolab community is a unified communication and collaboration system. (Source Code) GPL-2.0\/LGPL-2.1\/GPL-3.0 C++\/Python\/PHP\nKopano - Groupware suite including e-mail, calendars, tasks, todos and notes. Featuring a modern WebApp, DeskApp and mobile access over Z-Push\/ActiveSync. (Demo, Source Code) AGPL-3.0 C\/Python\/PHP\nOpenmeetings - Openmeetings provides video conferencing, instant messaging, white board, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. (Source Code) Apache-2.0 Java\nSOGo - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. (Demo, Source Code) LGPL-2.1 Objective-C\nSuiteCRM - The award-winning, enterprise-class open source CRM. (Source Code) AGPL-3.0 PHP\nTine 2.0 - Contacts, Calendar, Tasks, WebDAV, ActiveSync, VOIP, Mail-Client, CRM, Sales, Projects, Timetracker. (Demo, Source Code) AGPL-3.0\/Other PHP\nZimbra Collaboration - Email, calendar, collaboration server with Web interface and lots of integrations. (Source Code) GPL-2.0\/CPAL-1.0 Java\n\nHuman Resources Management (HRM)\n^        back to top        ^\n\nadmidio - Admidio is a free open source user management system for websites of organizations and groups. The system has a flexible role model so that it\u2019s possible to reflect the structure and permissions of your organization. (Demo, Source Code) GPL-2.0 PHP\nIceHrm - IceHrm employee management system allows companies to centralize confidential employee information. (Demo, Source Code) Apache-2.0 PHP\nOrangeHRM - OrangeHRM is a comprehensive HRM system that captures all the essential functionalities required for any enterprise. (Source Code) GPL-2.0 PHP\nSentrifugo - Sentrifugo is a HRM system that can be easily configured to meet your organizational needs. (Source Code) GPL-3.0 PHP\nTimeOff.Management - Simple yet powerful absence management software for small and medium size business. (Demo, Source Code) MIT Nodejs\n\nInternet Of Things (IoT)\n^        back to top        ^\n\nDeviceHive - Open Source IoT Platform with a wide range of integration options. (Demo, Source Code) Apache-2.0 Java\nDomoticz - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors\/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. (Source Code, Clients) GPL-3.0 C\/C++\nFHEM - FHEM is used to automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP\/IP directly. (Source Code) GPL-3.0 Perl\nGladys - Gladys is an open-source home assistant which runs on your Raspberry Pi. (Source Code) MIT Nodejs\nHome Assistant - Open-source home automation platform. (Demo, Source Code) MIT Python\nMozilla Gateway - Mozilla WebThings is Mozilla\u2019s open source implementation of the Web of Things, including the WebThings Gateway and the WebThings framework. (Source Code) MPL-2.0 NodeJS\nNode RED - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. (Source Code) Apache-2.0 Nodejs\nopenHAB - Vendor and technology agnostic open source software for home automation. (Demo, Source Code) EPL-2.0 Java\nThingsboard - Open-source IoT Platform - Device management, data collection, processing and visualization. (Demo, Source Code) Apache-2.0 Java\nThingspeak - Open source \u201cInternet of Things\u201d application and API to store and retrieve data from things using HTTP. (Demo, Source Code) GPL-3.0 Ruby\n\nKnowledge Management Tools\n^        back to top        ^\n\nMindmaps - Open source, offline capable, mind mapping application. (Demo) AGPL-3.0 HTML5\nMy Mind - Web application for creating and managing mind maps. (Demo) MIT Javascript\nWeaviate - A cloud-native, realtime vector search engine integrating scalable machine learning models (GraphQL and RESTful API's). (Demo) BSD-3-Clause Go\n\nLearning and Courses\n^        back to top        ^\n\nCanvas LMS - Canvas is the trusted, open-source learning management system (LMS) that is revolutionizing the way we educate. (Demo, Source Code) AGPL-3.0 Ruby\nChamilo LMS - Chamilo LMS allows you to create a virtual campus for the provision of online or semi-online training. (Source Code) GPL-3.0 PHP\nedX - The Open edX platform is open-source code that powers edX.org. (Source Code) AGPL-3.0 Python\nILIAS - ILIAS is the Learning Management System that can cope with anything you throw at it. (Demo, Source Code) GPL-3.0 PHP\nMahara - Open Source fully featured web application to build students electronic portfolio. (Source Code) GPL-3.0 PHP\nMoodle - Moodle is a learning and courses platform with one of the largest open source communities worldwide. (Demo, Source Code) GPL-3.0 PHP\nOpen eClass - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. (Demo, Source Code) GPL-2.0 PHP\nOpenOLAT - OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. (Demo, Source Code) Apache-2.0 Java\nRELATE - RELATE is a web-based courseware package, includes features such as: flexible rules, statistics, multi-course support, class calendar. (Source Code) MIT Python\nRosarioSIS - RosarioSIS, free Student Information System for school management. (Demo, Source Code) GPL-2.0 PHP\nSakai - The Sakai project provides a flexible and feature-rich environment for teaching, learning, research and other collaboration. (Demo, Source Code) ECL-2.0 Java\n\nMaps and Global Positioning System (GPS)\n^        back to top        ^\nSee also awesome-gis.\n\nGeo2tz - Get the timezone from geo coordinates (lat, lon). MIT Go\/Docker\nGraphHopper - Fast routing library and server using OpenStreetMap. (Source Code) Apache-2.0 Java\nHauk - Easy to setup location sharing platform that lets you temporarily share your location with anyone in real-time. (Demo) Apache-2.0 PHP\nMapBBCodeShare - Tool for sharing custom OSM maps. Support for annotated markers, polygons, lines, multi-format import\/export, multiple layers, shortlinks. (Demo) WTFPL\/Other PHP\nOpen Source Routing Machine (OSRM) - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and NodeJS wrapper. (Demo, Source Code) BSD-2-Clause C++\nNominatim - Server application for reverse geocoding (address -> coordinates) on OpenStreetMap data. (Source Code) GPL-2.0 C\nOpenGTS - Entry-level fleet tracking system. Supports variety of tracking devices and protocols. Comes with rich web-interface and reporting features. (Demo, Source Code) Apache-2.0 Java\nOpenStreetMap - Collaborative project to create a free editable map of the world. (Source Code, Clients) GPL-2.0 Ruby\nOpenTripPlanner - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. (Source Code) LGPL-3.0 Java\/JavaScript\nOrion - Powerful OwnTracks API-compliant location data visualization frontend for the web. (Demo) MIT Python\/Nodejs\nOwnTracks Recorder \u26a0 - Store and access data published by OwnTracks location tracking apps. GPL-2.0 C\/Lua\nTileServer GL - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. (Source Code) BSD-2-Clause Nodejs\nTileServer PHP - Serve map tiles from any PHP hosting. BSD-2-Clause PHP\nTraccar - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. (Demo, Source Code) Apache-2.0 Java\n\u03bclogger - Collect geolocation from users in real-time and display their GPS tracks on a website. (Demo) GPL-3.0 PHP\nuMap - Create maps with OpenStreetMap layers in a minute and embed them in your site. (Source Code) WTFPL Python\n\nMedia Streaming\n^        back to top        ^\nSee also https:\/\/en.wikipedia.org\/wiki\/List_of_streaming_media_systems, https:\/\/en.wikipedia.org\/wiki\/Comparison_of_streaming_media_systems\nMultimedia Streaming\n\nDarwin Streaming Server - High performance server for streaming QuickTime and MPEG-4 media over RTP and RTSP protocols. Originated as Apple\u2019s QTSS. (Source Code) APSL-2.0 C++\nGerbera - Gerbera is an UPnP Media Server. It allows you to stream your digital media throughout your home network and listen to\/watch it on a variety of UPnP compatible devices. (Source Code) GPL-2.0 C++\nhomehost \u26a0 - Self-hosted React + Redux app that streams your media collection (music, movies, books, podcasts, comics etc). MIT Nodejs\nIcecast 2 - streaming audio\/video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. (Source Code, Clients) GPL-2.0 C\nJellyfin - Media server for audio, video, books, comics, and photos with a sleek interface and robust transcoding capabilities. Almost all modern platforms have clients, including Roku, Android TV, iOS, Xbox, and Kodi. (Demo, Source Code) GPL-2.0 C#\nKaraoke Forever - Host awesome karaoke parties where everyone can easily find and queue songs from their phone's web browser. The player is also browser-based with support for MP3+G, MP4 and WebGL visualizations. (Source Code) ISC Nodejs\nLBRY - Is a secure, open, and community-run digital marketplace that aims to replace Youtube and Amazon. (Demo, Source Code, Clients) MIT PHP\nMistServer - Streaming media server that works well in any streaming environment. (Source Code) AGPL-3.0 C++\nNymphCast - NymphCast is a Chromecast alternative which turns your choice of Linux-capable hardware into an audio and video source for a television or powered speakers. (Source Code) BSD-3-Clause C++\nReadyMedia - Simple media server software, with the aim of being fully compliant with DLNA\/UPnP-AV clients. Formerly known as MiniDLNA. (Source Code) GPL-2.0 C\nRygel - Rygel is a UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. (Source Code) GPL-3.0 C\n\u00fcWave \u26a0 - \u00fcWave is a self-hosted collaborative listening platform. Users take turns playing media\u2014songs, talks, gameplay videos, or anything else\u2014from a variety of media sources like YouTube and SoundCloud. (Demo, Source Code) MIT Nodejs\n\nAudio Streaming\n\nAmpache - Web based audio\/video streaming application. (Demo, Source Code) AGPL-3.0 PHP\nAirsonic - Open-source web-based media streamer and jukebox. A fork of Subsonic's last open-source release, before it switched licenses. (Source Code, Clients) GPL-3.0 Java\nAzuraCast - A modern and accessible self-hosted web radio management suite. (Source Code) Apache-2.0 PHP\nAudioserve - Simple personal server to serve audio files from directories (audiobooks, music, podcasts...). Focused on simplicity and supports sync of play position between clients. MIT Rust\nBeets - Music library manager and MusicBrainz tagger (command-line and Web interface). (Source Code) MIT Python\nBlack Candy - Music streaming server built with Rails and Stimulus. MIT Ruby\nCompactd - Remote music player that supports adding content. MIT Nodejs\nFriendsRadio \u26a0 - Share music with your friends from Youtube and Soundcloud. (Demo) MIT Nodejs\nFunkwhale - Modern, web-based, convivial, multi-user and free music server. (Demo, Source Code) BSD-3-Clause Python\/Django\nGNU FM - Running music community websites, alternative to last.fm. (Source Code) AGPL-3.0 PHP\ngonic - Lightweight music streaming server. Subsonic compatible. GPL-3.0 Go\nGroove Basin - Music player server with a web-based user interface inspired by Amarok 1.4. MIT Nodejs\nkoel - Personal music streaming server that works. (Source Code) MIT PHP\nKooZic - Music server with powerful playlist features and Subsonic compatibility. (Demo, Source Code) LGPL-3.0\/MIT Python\nLibreTime - Simple, open source platform that lets you broadcast streaming radio on the web (fork of Airtime). (Source Code) AGPL-3.0 PHP\nLMS - Access your self-hosted music using a web interface. (Demo) GPL-3.0 C++\nmoOde Audio - Audiophile-quality music playback for the wonderful Raspberry Pi family of single board computers. (Source Code) GPL-3.0 PHP\nMopidy - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. (Source Code) Apache-2.0 Python\n\nMoped - Responsive HTML5 + Javascript client for the Mopidy music server. MIT HTML5\nMopidy MusicBox - Web Client for Mopidy Music Server. Apache-2.0 HTML5\nMopidy-Party - Mopidy web extension designed for party! Let your guests manage the sound. Apache-2.0 Python\n\n\nmpd - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. (Source Code, Clients) GPL-2.0 C++\n\nympd - Standalone MPD Web GUI written in C, utilizing Websockets and Bootstrap\/JS. (Source Code) GPL-2.0 C\n\n\nmStream - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. (Source Code) GPL-2.0 Nodejs\nmusikcube - Streaming audio server with Linux\/macOS\/Windows\/Android clients. (Source Code) BSD-3-Clause C++\nNavidrome Music Streamer - Modern Music Server and Streamer, compatible with Subsonic\/Airsonic. (Demo, Source Code, Clients) GPL-3.0 Go\/JavaScript\nPolaris - Music browsing and streaming application optimized for large music collections, ease of use and high performance. MIT Rust\nSnapcast - Synchronous multiroom audio server. GPL-3.0 C++\nSonerezh - Self-hosted, web-based application for stream your music, everywhere. (Demo, Source Code) GPL-3.0 PHP\nStretto - Music player with Youtube\/Soundcloud import and iTunes\/Spotify discovery. (Demo, Clients) MIT Nodejs\nVolumio - A free and open source linux distribution, designed and fine-tuned exclusively for music playback. (Source Code) GPL-3.0 NodeJS\n\nVideo Streaming\n\nBluecherry - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. (Source Code) GPL-2.0 PHP\ncrtmpserver - High performance RTMP\/RTSP streaming server. GPL-3.0 C++\nCyTube - CyTube is a web application providing media synchronization, chat, and more for an arbitrary number of channels. (Demo) MIT Nodejs\nHellowlol HTPC Manager fork - Fully responsive interface to manage all your favorite media on your HTPC. MIT Python\nInvidious - \u26a0 Invidious is an alternative front-end to YouTube. (Demo) AGPL-3.0 Crystal\nMyflix - Self-hosted, super lightweight Netflix alternative. MIT Shell\nOddworks - Oddworks is an open source video distribution platform built to destroy the barriers to streaming television with SDKs for Roku, Apple iOS\/tvOS, Google Android, and Amazon FireTV. MIT Nodejs\nOpen Streaming Platform - Self-Hosted alternative to Twitch and Youtube Live for live and on-demand video streaming. (Source Code) MIT Python\nPeerTube - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. (Source Code) AGPL-3.0 Nodejs\nRapidbay - Self-hosted torrent videostreaming service\/torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast\/AppleTV\/Smart TV. MIT Python\/Docker\nRestreamer - Restreamer allows you to do h.264 real-time video streaming on your website without a streaming provider. (Source Code) Apache-2.0 Nodejs\/Docker\nRadium - Synced stream and video playback with VOD capabilities utilizing HLS. Developed for movie nights but has many use cases. (Demo) MIT Nodejs\/Docker\nShinobiCE - Open Source CCTV software written in Node with both IP and local camera support. AGPL-3.0\/GPL-3.0 Nodejs\nStreama - Self hosted streaming media server. MIT Java\nSyncTube - Lightweight and very simple to setup CyTube alternative to watch videos with friends and chat. (Demo) MIT Nodejs\/Haxe\nTube - a Youtube-like (without censorship and features you don't need!) Video Sharing App written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and RSS feed. (Demo, Source Code) MIT Go\nVideoLAN Client (VLC) - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. (Source Code) Multiple C\nZoneminder - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. (Source Code) GPL-2.0 PHP\n\nMisc\/Other\n^        back to top        ^\n\n2FAuth - A web app to manage your Two-Factor Authentication (2FA) accounts and generate their security codes. (Demo) AGPL-3.0 PHP\n411 - Alert Management Web Application. MIT PHP\nAlertHub \u26a0 - AlertHub is a simple tool to get alerted from GitHub releases. MIT Nodejs\nAnchr - Anchr is a toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. (Source Code) GPL-3.0 Nodejs\nAnuko - Anuko provides simple time and project tracking on a selfhosted basis. (Demo, Source Code) Other PHP\nasciiflow - Flow Diagram Drawing Tool. (Source Code) GPL-3.0 Java\/JavaScript\nblynk - Platform with iOS and Android apps to control Arduino, ESP8266, Raspberry Pi and similar microcontroller boards over the Internet. (Source Code) AGPL-3.0 Java\nCachet - An open source status page system for everyone. (Demo, Source Code) BSD-3-Clause PHP\nCapRover - Build your own PaaS in a few minutes. (Demo, Source Code) Apache-2.0 Docker\/Nodejs\ncState - Static status page for hyperfast Hugo. Clean design, minimal JS, super light HTML\/CSS, high customization, optional admin panel, read-only API, IE8+. Best used with Netlify, Docker. (Demo) MIT Go\nCUPS - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. (Source Code) GPL-2.0 C\nCyberChef - Perform all manner of \"cyber\" operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. (Demo) Apache-2.0 JavaScript\nDigital-Currency - Create your own Self-Hosted Digital Currency. (Demo) GPL-3.0 Nodejs\nDomainMOD - Application to manage your domains and other internet assets in a central location. DomainMOD includes a Data Warehouse framework that allows you to import your WHM\/cPanel web server data so that you can view, export, and report on your data. (Demo, Source Code) GPL-3.0 PHP\nFlox \u26a0 - Self hosted movie, TV series and anime watch list with a 3-point rating system. Uses The Movie Database backend for information. (Demo) MIT PHP\nformspree \u26a0 - Just send your form to our URL and we'll forward it to your email. No PHP, Javascript or sign up required. (Demo, Source Code) AGPL-3.0 Python\nGeneWeb - GeneWeb is an open source genealogy software written in OCaml. It comes with a Web interface and can be used off-line or as a Web service. (Demo, Source Code) GPL-2.0 OCAML\ngraph-vl - Identity document verification using Machine Learning and GraphQL. MIT Python\nHow Secure Is My Password - Rather than just saying a password is \"weak\" or \"strong\", How Secure is My Password? lets your users know how long it would take someone to crack their password. (Demo) MIT Javascript\ngoogle-webfonts-helper \u26a0 - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. (Demo) MIT Nodejs\nytdl-webserver - Docker-ready webserver for downloading youtube videos. MIT Nodejs\nJournal - Simple journaling with encrypted entries and sharing capabilities. MIT Ruby\nKimai - Simple time and project tracking. (Demo, Source Code) GPL-3.0 PHP\nKing Phisher - King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. BSD-3-Clause Python\nMailyGo - MailyGo is a small tool written in Go that allows to send HTML forms, for example from static websites without a dynamic backend, via email. MIT Go\nMindsDB - MindsDB is an open source self hosted AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries. GPL-3.0 Python\nMonica - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. (Source Code) AGPL-3.0 PHP\nMusical Artifacts - Helping to catalog, preserve and free the artifacts you need to produce music. (Source Code) MIT Ruby\nnnmm - Super tiny pastebin\/url minifier \"microservice\". Beerware PHP\nNotica - Lets you send browser notifications from your terminal to your desktop or phone. No installation or registration is required. (Source Code) MIT Nodejs\nOmbi - A content request system for Plex\/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. (Source Code) GPL-2.0 C#\noTranscribe - Free web app to take the pain out of transcribing recorded interviews. (Source Code) MIT JavaScript\nPassCheck - A web application featuring some handy password tools, including a password generator, strength checker and HaveIBeenPwned breach checker. (Source Code) MIT JavaScript\nReactive Resume - A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. (Demo, Source Code) MIT Docker\/Nodejs\nReleaseBell - Send release notifications for starred Github repos. (Source Code) MIT Nodejs\nrevealjs - Framework for easily creating beautiful presentations using HTML. (Demo, Source Code) MIT JavaScript\nRevive Adserver - World's most popular free, open source ad serving system. Formerly known as OpenX Adserver and phpAdsNew. (Source Code) GPL-2.0-or-later PHP\nSANE Network Scanning - Allow remote clients to access image acquisition devices (scanners) available on the local host. (Source Code) GPL-2.0 C\nTeslaMate - A powerful data logger for Tesla vehicles. MIT Elixir\nTrello Burndown \u26a0 - Easy to use SCRUM burndown chart for Trello boards. MIT Go\/Docker\nViMbAdmin - Provides a web based virtual mailbox administration system to allow mail administrators to easily manage domains, mailboxes and aliases. (Demo, Source Code) GPL-3.0 PHP\nWeb fonts repository - Simple webfont hosting. Google Fonts alternative for your own fonts. MIT PHP\nwebtrees - Webtrees is the web's leading on-line collaborative genealogy application. (Demo, Source Code) GPL-3.0 PHP\n\nMoney, Budgeting and Management\n^        back to top        ^\nSee also https:\/\/github.com\/n1trux\/awesome-sysadmin#it-asset-management\n\nAkaunting - Akaunting is a free, online and open source accounting software designed for small businesses and freelancers. (Source Code) GPL-3.0 PHP\nBTCPay Server - A self-hosted Bitcoin and other cryptocurrencies payment processor. (Demo, Source Code) MIT C#\nBoodle - Simple accounting single-page application in Clojure and ClojureScript. EPL-1.0 Java\nBudget App - Budget App is an open source personal budgeting application. Apache-2.0 Java\nDot Ledger - Web-based personal finance management tool. (Demo, Source Code) Apache-2.0 Ruby\nEconomizzer - An easy and secure system for you to manage your personal money and achieve your goals, and can be accessed by computer, tablet or smartphone. (Demo, Source Code) MIT PHP\nExMoney - Self-hosted personal finance app. ISC Elixir\nFirefly III - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. (Demo, Source Code) AGPL-3.0 PHP\nFamily Accounting Tool - Web-based finance management tool for partners with partially shared expenses. Apache-2.0 Scala\nFava - Fava is the web frontend of Beancount, a text based double-entry accounting system. (Demo, Source Code) MIT Python\nGalette - Galette is a membership management web application towards non profit organizations. (Source Code) GPL-3.0 PHP\nGRR - Assets management and booking for small\/medium companies. (Source Code) GPL-2.0 PHP\nHospital Run - Hospital Run is offline enabled hospital management software. (Demo, Source Code) GPL-3.0 Nodejs\nInventaire - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. (Source Code) AGPL-3.0 Nodejs\nInvoice Ninja - Powerful tool to invoice clients online. (Demo, Source Code) AAL PHP\nInvoicePlane - Manage quotes, invoices, payments and customers for your small business. MIT PHP\nIHateMoney - Manage your shared expenses, easily. (Demo, Source Code) BSD-3-Clause Python\nKresus - Open source personal finance manager. (Demo, Source Code) MIT Nodejs\nOnTrack - A simple app to track spend and set goals. MIT Ruby\/React\nPartKeepr - PartKeepr is an electronic part inventory management software. It helps you to keep track of your available parts and assist you with re-ordering parts. (Demo, Source Code) GPL-3.0 PHP\nSilverStrike - Personal finance management made easy. (Demo, Source Code) MIT Python\/Django\nStockazNG - Asset Management System. MIT Python\n\nMonitoring\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#monitoring and https:\/\/github.com\/n1trux\/awesome-sysadmin#metric--metric-collection\nNote-taking and Editors\n^        back to top        ^\nSee also Wikis\n\nBulletNotes - Workflowy \/ Dynalist clone with Kanban (Trello) and Calendar functionality. Organize everything. (Source Code) MIT Nodejs\nBoostnote - The note-taking app for programmers that focuses on markdown, snippets, and customizability. (Source Code) GPL-3.0 JavaScript\nCodiMD - Realtime collaborative markdown notes on all platforms, formerly HackMD CE. (Source Code) AGPL-3.0 Node.js\nDailyNotes - App for taking notes and tracking tasks on a daily basis in Markdown. MIT Python\ndillinger - The last Markdown editor, ever. (Source Code) MIT Nodejs\nDnote - A simple command line notebook with multi-device sync and web interface. (Source Code) AGPL-3.0 Go\nDocPHT - With DocPHT you can take notes and quickly document anything and without the use of any database. (Demo, Source Code) MIT PHP\ndraw.io - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. (Source Code) Apache-2.0 JavaScript\nJoplin - Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. (Source Code) MIT Nodejs\nLeanote - Leanote, Not Just A Notepad! Open source cloud notepad. (Demo, Source Code) GPL-2.0 Go\nMarkdown Edit - Online markdown editor\/viewer. (Source Code) MIT HTML5\nMeemo - Personal notes stream with Markdown support. (Source Code) MIT Nodejs\nminimalist-web-notepad - Minimalist notepad.cc clone. (Demo) Apache-2.0 PHP\nMiniNote - Simple Markdown note-taking app with persistence. MIT Nodejs\nOpenNote - OpenNote was built to be an open web-based alternative to Microsoft OneNote (T) and EverNote. (Demo) MIT HTML5\nOverleaf - Web-based collaborative LaTeX editor. (Source Code) AGPL-3.0 Ruby\nPaperwork - OpenSource note-taking and archiving alternative to Evernote, Microsoft OneNote and Google Keep. (Source Code) MIT PHP\nPlainpad - A modern note taking application for the cloud, utilizing the best features of progressive web apps technology. (Demo, Source Code) GPL-3.0 PHP\nsavepad - Minimalist notepad based on notepad.cc. MIT PHP\nStandard Notes - Simple and private notes app. Protect your privacy while getting more done. That's Standard Notes. (Demo, Source Code) GPL-3.0 Ruby\nturndown - HTML to Markdown converter written in JavaScript. (Source Code) MIT Javascript\nTrilium Notes - Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. AGPL-3.0 Nodejs\nTurtl - Totally private personal database and note taking app. (Source Code) GPL-3.0 CommonLisp\nWreeto - Wreeto is an open source note-taking, knowledge management and wiki system built on top of Ruby on Rails framework. (Source Code) AGPL-3.0 Ruby\nWriting - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. (Source Code) MIT Javascript\n\nOffice Suites\n^        back to top        ^\n\n Collabora Online Development Edition - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. (Source Code) MPL-2.0 C++\nCryptPad - CryptPad is the zero knowledge realtime collaborative editor (rich-text, files, source-code, ...). (Source Code) AGPL-3.0 Nodejs\nEtherCalc - Web spreadsheet. (Source Code) CPAL-1.0\/Other Nodejs\nEtherpad - Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time. (Demo, Source Code) Apache-2.0 Nodejs\nInfinoted - Server for Gobby, a multi-platform collaborative text editor. (Source Code) MIT C++\nONLYOFFICE - Office suite that enables you to manage documents, projects, team and customer relations in one place. (Source Code) AGPL-3.0 Nodejs\nPHPOffice - PHPOffice contains libraries which permits to write and read files from most office suites. LGPL-3.0 PHP\nWebODF - Tools and libraries to view and edit Open Document Format (ODF) files. (Source Code) AGPL-3.0 HTML5\n\nPassword Managers\n^        back to top        ^\n\nBitwarden \u26a0 - Password manager with webapp, browser extension, and mobile app. (Source Code) AGPL-3.0 C#\nbitwarden_rs - Lightweight Bitwarden server API implementation written in Rust. GPL-3.0 Rust\nkeeweb - This webapp is a browser and desktop password manager compatible with KeePass databases. (Source Code) MIT HTML5\nPadloc - A modern, open source password manager for individuals and teams. (Source Code) GPL-3.0 Nodejs\nPassbolt - Password manager dedicated for managing passwords in a collaborative way on any Web server, using a MySQL database backend. (Source Code) AGPL-3.0 PHP\nPassIt - Simple password manage with sharing features by group and user, but no administration interface. (Demo, Source Code) AGPL-3.0 Python\nPassWall - Open source password manager. AGPL-3.0 Go\nPsono - A promising password managers fully featured for teams. (Demo, Source Code) Apache-2.0 Python\nShaark - All in one platform for your links, stories, passwords and albums. Built with Laravel and Vue.js. MIT PHP\nsysPass - Multiuser password management system. (Demo, Source Code) GPL-3.0 PHP\nTeampass - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared\/team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. (Source Code) GPL-3.0 PHP\n\nPastebins\n^        back to top        ^\n\n0bin - Client side encrypted pastebin. WTFPL Python\nbepasty - A pastebin for all kinds of files. (Source Code) BSD-2-Clause Python\nbin - a paste bin. WTFPL\/0BSD Rust\ncryptonote - Simple open source web application that lets users encrypt and share messages that can only be read once. (Source Code) MIT Ruby\nEdPaste - Self-hosted pastebin written in Laravel (PHP Framework). MIT PHP\nfiche - Command line pastebin, all you need is netcat. (Demo) MIT C\nfilite - A simple, light and standalone pastebin, URL shortener and file-sharing service. (Demo) MIT Rust\nFugacious - Open source short-term secure messaging (OSSSM). (Source Code) CC0-1.0 Ruby\nHastebin - Open source pastebin written in Node.js (This is a fork with extended maintenance). (Demo, Source Code) MIT Node.js\nmojopaste - Perl based pastebin. (Demo, Source Code) Artistic-2.0 Perl\nNoteHub - Free and Hassle-free Pastebin for Markdown Pages. Simple, clean, password provided, generated-short link. MIT Nodejs\nPaste - Paste is forked from the original source pastebin.com used before it was bought. (Source Code) GPL-3.0 PHP\npastebin - Simple pastebin service with convenient api and CLI. (Demo) MIT Go\npastebin - Simple, fast, feature-rich, standalone pastebin service. MIT Rust\npb - Lightweight pastebin (and url shortener) built using flask. GPL-3.0 Python\nPrivateBin - PrivateBin is a minimalist, opensource online pastebin\/discussion board where the server has zero knowledge of hosted data. (Demo, Source Code) Zlib PHP\nPurritoBin - Ultra fast, minimalistic, encrypted command line paste-bin, where the server has no knowledge of the paste data. ISC C++\nSharpPaste - Cross-platform C# pastebin with client-side AES-256 encryption that just works. MIT C#\/NancyFX\nSnibox - Code snippets manager with attractive tag-oriented interface. (Demo, Source Code) MIT Ruby\nsnipt - Long-term memory for coders. Share and store code snippets. MIT Python\nSocksBin - Simple and fast terminal based pastebin, with optional code highlighting. No specific client required, all you need is netcat. Demo. GPL-3.0 Python\nStikked - Advanced and beautiful pastebin. (Demo) GPL-3.0 PHP\nSup3rS3cretMes5age - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. MIT Go\nPasty - Pasty is a fast and lightweight code pasting server. (Demo) MIT Go\n\nPersonal Dashboards\n^        back to top        ^\nSee also Monitoring\n\nBaby Buddy - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. (Demo) BSD-2-Clause Python\nDashMachine - Another web application bookmark dashboard, with fun features. GPL-3.0 Python\nHabitica - Habit tracker app which treats your goals like a Role Playing Game. Previously called HabitRPG. (Source Code) GPL-3.0\/CC-BY-NC-SA-3.0\/CC-BY-SA-3.0 Nodejs\nHeimdall - Heimdall is an elegant solution to organise all your web applications. (Source Code) MIT PHP\nHiccup - A beautiful static homepage to get to your links and services quickly. It has built-in search, editing, PWA support and localstorage caching to easily organize your start page. (Source Code) MIT HTML5\nHomepage - Simple, standalone, self-hosted PHP page that is your window to your server and the web. MIT PHP\nHomer - A dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. Apache-2.0 HTML5\nOrganizr - Organizr aims to be your one stop shop for your Servers Frontend. GPL-3.0 PHP\nPersonal management system - Central point for managing personal data (billings, payments, job holidays, notes etc.). (Demo) MIT PHP\nsimple-dash - A simple, fully responsive Dashboard to forward to the services of your choice. (Demo) MIT Javascript\nTipboard - In-house, tasty, local dashboarding system. (Source Code) Apache-2.0 Python\nwger - Web-based personal workout, fitness and weight logger\/tracker. It can also be used as a simple gym management utility and offers a full REST API as well. (Demo, Source Code) AGPL-3.0 Python\n\nPhoto and Video Galleries\n^        back to top        ^\n\nChevereto Free - Powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. (Source Code) AGPL-3.0 PHP\nCoppermine - Multilingual photo gallery that integrates with various bulletin boards. Includes upload approval and password protected albums. (Demo, Source Code) GPL-3.0 PHP\nCumulusClips - Your own video sharing website with CumulusClips video sharing script. You can build a YouTube clone where users can upload, rate, comment on videos, and much more. (Demo) GPL-2.0 PHP\nFussel - Fussel is a static photo gallery generator. Easily generate a reactive gallery and host the optimized static folder of assets. MIT Python\nGallery CSS - Gallery.css is all CSS. Think: Simple, maintainable and understandable galleries without the use of Javascript. (Source Code) MIT CSS\nLychee - Open source grid and album based photo-management-system. (Source Code) MIT PHP\nMediagoblin - Free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. (Source Code) AGPL-3.0 Python\nOwnPhotos - Self hosted wannabe Google Photos clone, with a slight focus on cool graphs. MIT Python\nPhotato - Self-hosted photo gallery, accessible through a responsive WebUI. Directly uses and indexes a specific folder in the filesystem. AGPL-3.0 Java\nPhotofloat - Web 2.0 Photo Gallery Done Right via Static JSON and Dynamic Javascript. (Demo) GPL-2.0 Python\nPhotoLight - The easiest photo gallery there is. GPL-3.0 PHP\nPhotonix - A new web-based photo management application with object recognition, location awareness, color analysis and other ML algorithms. (Demo, Source Code) AGPL-3.0 Python\nPhotoPrism - Personal photo management powered by Go and Google TensorFlow.  Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. (Source Code) MIT Go\nPhoto Stream - Minimalist self-hosted photo stream. (Demo) MIT Ruby\nPhotoview - A simple and user-friendly Photo Gallery for personal servers. It is made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high resolution photos. (Demo) GPL-3.0 Go\nPiGallery 2 - A directory-first photo gallery website, with a rich UI, optimised for running on low resource servers. (Demo, Source Code) MIT Docker\/Nodejs\nPiwigo - Photo gallery software for the web, built by an active community of users and developers. (Demo, Source Code) GPL-2.0 PHP\nPlumi - Create your own sophisticated video-sharing site. (Source Code) GPL-2.0 Python\nQuru Image Server - High performance dynamically resizing image server offering directory based access control cropping, rotation, color management and other tools. (Demo, Source Code) AGPL-3.0 Python\nsigal - Yet another simple static gallery generator. MIT Python\nUberGallery - UberGallery is an easy to use, simple to manage, web photo gallery. UberGallery does not require a database and supports JPEG, GIF and PNG file types. Simply upload your images and UberGallery will automatically generate thumbnails and output HTML. (Source Code) MIT PHP\nZenphoto - Open-source gallery and CMS project. (Source Code) GPL-2.0 PHP\n\nPolls and Events\n^        back to top        ^\n\nCalagator - Event aggregator. (Source Code) MIT Ruby\nClerk - Simple event logger to keep track of periodic events, habits, etc. as they occur. GPL-3.0 PHP\ndudle - Online scheduling application. (Demo, Source Code) AGPL-3.0 Ruby\nFeedka \u26a0 - Open-source web application that can serve as a platform to get authentic, kindful, and constructive feedback from your friends, family, and co-workers. (Demo) AGPL-3.0 Ruby\nFider - Open source alternative to UserVoice for customer feedback. (Demo, Source Code) MIT Go\nFramadate - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. (Demo, Source Code) CECILL-B PHP\nhitobito - A web application to manage complex group hierarchies with members, events and a lot more. (Demo, Source Code) AGPL-3.0 Ruby\nJD Esurvey - Open source enterprise survey web application. (Source Code) AGPL-3.0 Java\nKy\u00e9l\u00e0 - Participation polls for group events. (Demo, Source Code) AGPL-3.0 PHP\nLimeSurvey - Feature-rich Open Source web based polling software. Supports extensive survey logic. (Demo, Source Code) GPL-2.0 PHP\nMeetable - Event aggregator. (Demo, Source Code) MIT PHP\nMobilizon - A federated tool that helps you find, create and organise events and groups. (Demo, Source Code) GPL-3.0 Elixir\nOpen Event Server - Enables organizers to manage events from concerts to conferences and meet-ups. GPL-3.0 Python\nPHPBack - The open source feedback system. (Demo, Source Code) GPL-3.0 PHP\n\nBooking and Scheduling\n\nAlf.io - The open source ticket reservation system. (Demo, Source Code) GPL-3.0 Java\nBooked - A web-based calendar and resource scheduling system that allows administered management of reservations on any number of resources. (Demo, Source Code) GPL-3.0 PHP\nEasy!Appointments - A highly customizable web application that allows your customers to book appointments with you via the web. (Demo, Source Code) GPL-3.0 PHP\n\nProxy\n^        back to top        ^\n\nhttp2-serverpush-proxy - Reverse proxy that helps to automatically utilize HTTP\/2.0's server push mechanism for static websites. Available as middleware and standalone application. MIT Nodejs\nimgproxy - Fast and secure standalone server for resizing and converting remote images. It works great when you need to resize multiple images on the fly without preparing a ton of cached resized images or re-doing it every time the design changes. MIT Go\/Docker\ninlets - Expose your local endpoints to the Internet - with a Kubernetes integration, Docker image and CLI available. MIT Go\/Docker\niodine - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. (Source Code) ISC C\nmicroproxy - lightweight non-caching HTTP\/HTTPS proxy server. MIT Go\nNginx Proxy Manager - Nginx Proxy Manager is an easy way to accomplish reverse proxying hosts with SSL termination. (Source Code) MIT Nodejs\/Docker\nPHP-Proxy - Web proxy script built specifically to be fast, easy to modify and to support video sites such as YouTube. (Demo, Source Code) MIT PHP\nPomerium - An identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. (Source Code) Apache-2.0 Go\nPound - Light-weight reverse proxy and load balancer for HTTP\/HTTPS. GPL-2.0 C\nPrivoxy - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. GPL-2.0 C\nRedbird - A modern reverse proxy for node that includes cluster, HTTP2, LetsEncrypt, and Docker support. BSD-2-Clause Javascript\nsish - Open source serveo\/ngrok alternative providing HTTP(S)\/WS(S)\/TCP tunnels to localhost using only SSH. MIT Go\nsocks5-proxy-server - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. Apache-2.0 NodeJS\nSOCKS5Engine - Lightweight & resource-efficient SOCKS5 proxy server, optimized for high-load. AGPL-3.0 Go\nSquid - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. (Source Code) GPL-2.0 C\nSwiperproxy - Lightning-fast, open source web proxy that is easy for you to run and customize. (Source Code) MIT Python\nTinyproxy - Light-weight HTTP\/HTTPS proxy daemon. (Source Code) GPL-2.0 C\nTraefik - Tr\u00e6f\u026ak is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos\/Marathon, \u2026) to manage its configuration automatically and dynamically. (Source Code) MIT Go\n\nRead it Later Lists\n^        back to top        ^\n\nNunux Keeper - Your personal content curation service. (Source Code) GPL-3.0 Nodejs\nReadflow - Lightweight news reader with modern interface and features: full-text search, automatic categorization, archiving, offline support, notifications... (Source Code) MIT Go\nWallabag - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. (Demo, Source Code) MIT PHP\n\nResource Planning\n^        back to top        ^\n\nfarmOS - Web-based farm record keeping application. (Source Code) GPL-2.0 PHP\ngrocy - ERP beyond your fridge - grocy is a web-based self-hosted groceries & household management solution for your home. (Demo, Source Code) MIT PHP\nTania - Tania is a free and open source farming management system for everyone. You can manage your areas, reservoirs, farm tasks, inventories, and the crop growing progress. Apache-2.0 Go\n\nEnterprise Resource Planning\n\nDolibarr - Dolibarr ERP CRM is a modern software package to manage your company or foundation activity (contacts, suppliers, invoices, orders, stocks, agenda, accounting, ...). (Demo, Source Code) GPL-3.0-or-later PHP\nERPNext - Free open source ERP system. (Demo, Source Code) GPL-3.0 Python\nLedgerSMB - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. (Demo, Source Code) GPL-2.0 Perl\nOdoo - Free open source ERP system. (Demo, Source Code) LGPL-3.0 Python\nOFBiz - FOSS enterprise resource planning system with a suite of business applications flexible enough to be used across any industry. (Source Code) Apache-2.0 Java\nOSPOS - Open Source Point of Sale is a web based point of sale system. (Demo, Source Code) MIT PHP\nTryton - Free open source business solution. (Demo, Source Code) GPL-3.0 Python\n\nSearch Engines\n^        back to top        ^\n\nAmbar - Document Search Engine (OCR, Store & Search). (Demo, Source Code) MIT Nodejs\/Python\nGigablast - open source search engine. (Source Code) Apache-2.0 C++\nMeiliSearch - Ultra relevant, instant and typo-tolerant full-text search API. (Source Code) MIT Rust\nSearx - Privacy-respecting, hackable metasearch engine. (Demo, Source Code) AGPL-3.0 Python\nsist2 - Lightning-fast file system indexer and search tool. (Demo) GPL-3.0 C\nTypesense - Blazing fast, typo-tolerant open source search engine optimized for developer happiness and ease of use. (Source Code) GPL-3.0 C++\nYacy - Peer based, decentralized search engine server. (Demo, Source Code) GPL-2.0 Java\n\nSoftware Development\n^        back to top        ^\nProject Management\nSee also Ticketing, Task management\/To-do lists, awesome-sysadmin\/Code Review\n\nBonobo Git Server - Set up your own self hosted git server on IIS for Windows. Manage users and have full control over your repositories with a nice user friendly graphical interface. (Source Code) MIT C#\nFossil - Distributed version control system featuring wiki and bug tracker. BSD-2-Clause-FreeBSD C\nGoodwork - Self hosted project management and collaboration tool powered by Laravel & VueJS. (Demo, Source Code) MIT PHP\nGitblit - Pure Java stack for managing, viewing, and serving Git repositories. (Source Code) Apache-2.0 Java\ngitbucket - Easily installable GitHub clone powered by Scala. (Source Code) Apache-2.0 Scala\/Java\nGitea - Community managed fork of Gogs, lightweight code hosting solution. (Demo, Source Code) MIT Go\nGitLab - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. (Demo, Source Code) MIT Ruby\nGitlist - Web-based git repository browser - GitList allows you to browse repositories using your favorite browser, viewing files under different revisions, commit history and diffs. (Source Code) BSD-3-Clause PHP\nGitolite - Gitolite allows you to setup git hosting on a central server, with fine-grained access control and many more powerful features. (Source Code) GPL-2.0 Perl\nGitPrep - Portable Github clone. (Demo, Source Code) Artistic-2.0 Perl\nGit WebUI - Standalone web based user interface for git repositories. Apache-2.0 Python\nGogs - Painless self-hosted Git Service written in Go. (Demo, Source Code) MIT Go\nKallithea - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. (Source Code) GPL-3.0 Python\nKlaus - Simple, easy-to-set-up Git web viewer that Just Works. ISC Python\nLavagna - Lavagna is an open-source issue\/project management tool designed for small teams. Lightweight, pure Java, easy to install, easy to use. (Source Code) GPL-3.0 Java\nLazylead \u26a0 - Eliminate the annoying work within ticketing systems (Jira, GitHub, Trello). Allows to automate daily actions like tickets fields verification, email notifications by JQL\/GQL, meeting requests to your (or teammates) calendar. (Source Code) MIT Ruby\nLeantime - Leantime is a lean project management system for small teams and startups helping to manage projects from ideation through delivery. (Source Code) GPL-2.0 PHP\nMicrogit - Git hosting service made in Crystal and Lucky. MIT Crystal\nOctobox \u26a0 - Take back control of your GitHub Notifications. (Source Code) AGPL-3.0 Ruby\nOpenProject - OpenProject is a web-based project management system. (Source Code) GPL-3.0 Ruby\nPagure - A lightweight, powerful, and flexible git-centric forge with features laying the foundation for federated and decentralized development. (Demo) GPL-2.0 Python\nPhabricator - Collection of web applications that help build better software. (Demo, Source Code) Apache-2.0 PHP\nPhproject - High performance full-featured project management system. (Demo, Source Code) GPL-3.0 PHP\nProjeQtOr - A complete, mature, multi-user project management system with extensive functionality for all phases of a project. (Demo, Source Code) AGPL-3.0 PHP\nRe:Backlogs - Project management and collaboration tool powered by Ruby on Rails & VueJS. (Demo) MIT Ruby\nRedmine - Redmine is a flexible project management web application. (Demo, Source Code) GPL-2.0 Ruby\nRhodeCode - RhodeCode is an open source platform for software development teams. It unifies and simplifies repository management for Git, Subversion, and Mercurial. (Demo, Source Code) AGPL-3.0 Python\nSCM Manager - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. (Source Code) BSD-3-Clause Java\nTaiga - Agile Project Management Tool based on the Kanban and Scrum methods. (Source Code) AGPL-3.0 Python\nTitra - Time-tracking solution for freelancers and small teams. (Demo, Source Code) GPL-3.0 JavaScript\nTrac - Trac is an enhanced wiki and issue tracking system for software development projects. BSD-3-Clause Python\nTuleap - Tuleap is a libre suite to plan, track, code and collaborate on software projects. (Source Code) GPL-2.0 PHP\nUVDesk - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. (Demo, Source Code) MIT PHP\nZenTao - An agile(scrum) project management system\/tool. (Demo, Source Code) ZPL-1.2 PHP\n\nBug Trackers\nSee Ticketing\nIDE\/Tools\n\nAtheos - Web-based IDE framework with a small footprint and minimal requirements, continued from Codiad. (Source Code) MIT PHP\nBabelfish - Self-hosted server for source code parsing. It can parse any file, in any supported language, extract an Abstract Syntax Tree from it, and convert it to a Universal Abstract Syntax Tree which can enable further analysis and transformation. GPL-3.0 Go\nCode-Server - Visual Studio Code in the browser, hosted on a remote server. (Source Code) MIT Nodejs\/Docker\nEclipse Che - Open source workspace server and cloud IDE. (Source Code) EPL-1.0 Docker\/Java\nGitpod - Online IDE for GitHub and GitLab. (Demo, Source Code) EPL-2.0 Go\/Docker\nHakatime - WakaTime server implementation with analytics dashboard. Unlicense Haskell\nHttPlaceholder - Quickly mock away any webservice using HttPlaceholder. HttPlaceholder lets you specify what the request should look like and what response needs to be returned. MIT C#\nICEcoder - ICEcoder is a web IDE \/ browser based code editor, which allows you to develop websites directly within the web browser. (Demo, Source Code) MIT PHP\nJS Bin - Open source collaborative web development debugging tool. (Source Code) MIT Nodejs\nJudge0 API - Open source API to compile and run source code. (Source Code) GPL-3.0 Ruby\nJupyterLab - Web-based environment for interactive and reproducible computing. (Demo, Source Code) BSD-3-Clause Python\/Docker\nKoding - The simplest way to manage your entire Dev Infrastructure. (Source Code) Apache-2.0 Nodejs\nML Workspace - All-in-one web-based IDE for machine learning and data science. Apache-2.0 Docker\nRegexr - RegExr is a HTML\/JS based tool for creating, testing, and learning about Regular Expressions. (Source Code) MIT Nodejs\nRequestBin - Inspect HTTP requests. Debug webhooks. MIT python\nRStudio Server - Web browser based IDE for R. (Source Code) AGPL-3.0 Java\/C++\nsourcegraph - Sourcegraph is a fast, open-source, fully-featured code search and navigation engine written in Go. (Source Code) Apache-2.0 Go\nWakapi - Tracking tool for coding statistics, compatible with WakaTime. GPL-3.0 Go\n\nContinuous Integration\nSee awesome-sysadmin\/Continuous Integration & Continuous Deployment\nUX testing\n\nUier - Codeless or low-code User Experience test editing and management using Selenium to perform testing or UI automation. Uier tends to be a free self hostable alternative to Applitools, Endtest, Ghost Inspector, Usetrace, Screenster and many others. Apache-2.0 Nodejs\nSelenoid - Lightweight Selenium hub implementation launching browsers within Docker containers. (Source Code) Apache-2.0 Go\n\nFaaS\/Serverless\nServerless computing on Wikipedia\n\nAppwrite - End to end backend server for web, native, and mobile developers \ud83d\ude80. (Source Code) BSD-3-Clause PHP\nfx - fx is a tool to help you do Function as a Service with painless on your own servers. MIT Go\nIronFunctions - The serverless microservices platform by iron.io. Apache-2.0 Go\nLocalStack - LocalStack is a fully functional local AWS cloud stack. This includes Lambda for serverless computation. (Source Code) Apache-2.0 Python\/Other\nOpenFaaS - Serverless Functions Made Simple for Docker & Kubernetes. (Source Code) MIT Go\nTrusted-CGI - Lightweight self-hosted lambda\/applications\/cgi\/serverless-functions platform. MIT Go\n\nAPI Management\n\nDreamFactory - Turns any SQL\/NoSQL\/Structured data into Restful API. (Source Code) Apache-2.0 PHP\nFusio - Open-source API management platform which helps to build and manage REST APIs. (Demo, Source Code) AGPL-3.0 PHP\nHapttic - Simple HTTP server that forwards all requests to a shell script to handle webhooks you receive. Apache-2.0 Go\nHasura - Fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events. (Source Code) Apache-2.0 Haskell\nHoppscotch - A free, fast and beautiful API request builder. (Source Code) MIT Nodejs\/Vue\/Nuxt\nKong - The World\u2019s Most Popular Open Source Microservice API Gateway and Platform. (Source Code) Apache-2.0 Lua\nKrakenD - Open source High-Performance API Gateway. (Source Code) Apache-2.0 Go\nPara - Flexible and modular backend framework\/server for object persistence, API development and authentication. (Source Code) Apache-2.0 Java\nPizzly - Open-source API Integrations Manager that provides everything a developer needs to interact with OAuth based APIs. MIT Nodejs\nTyk - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. (Source Code) MPL-2.0 Go\n\nDocumentation Generators\nSee also Static site generators\n\nDocstore - Static document hosting without any server-side processing, does not require you to recompile every time you change an article. Clone the repository and add articles in the text\/ directory to get started. (Source Code) BSD-3-Clause Javascript\nFlatdoc - Small Javascript file that fetches Markdown files and renders them as full pages. MIT Javascript\nmarkdown-tree - Serve a hierarchy \/ tree directory of markdown files. Use intended for small sites built in markdown. MIT Ruby\nRead the Docs - Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. (Demo, Source Code) MIT Python\n\nLocalization\n\nAccent - Open-source, self-hosted, developer-oriented translation tool. (Source Code) BSD-3-Clause Elixir\nPootle - Online translation and localization tool. (Source Code) GPL-3.0 Python\nTraduora - Translation management platform for teams. (Source Code) AGPL-3.0 Docker\/Nodejs\nWeblate - Web-based translation tool with tight version control integration. (Demo, Source Code) GPL-3.0 Python\nZanata - Web-based translation platform for translators, content creators and developers to manage localisation projects. (Source Code) GPL-2.0 Java\n\nStatic site generators\n^        back to top        ^\nSee https:\/\/staticsitegenerators.net and https:\/\/www.staticgen.com\nTask management\/To-do lists\n^        back to top        ^\nSee also Project Management and Ticketing.\n\nKanbana - Create boards to track users and projects from flat markdown files. Forked from Crepido. MIT Nodejs\nKanboard - Simple and open source visual task board. (Source Code) MIT PHP\nmyTinyTodo - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite\/MySQL. GTD compliant. (Demo, Source Code) GPL-2.0 PHP\nNullboard - Single-page minimalist kanban board; compact, highly readable and quick to use. (Demo) BSD-2-Clause Javascript\nPHP Task\/Todo list - Simple task\/todo list that uses a JSON text file for the tasks. MIT PHP\nPlanka - Open source Trello alternative. (Demo, Source Code) MIT Nodejs\nRestyaboard - Open source Trello-like kanban board. (Demo, Source Code) OSL-3.0 PHP\nTask Keeper - List editor for power users, backed by a self-hosted server. Apache-2.0 Scala\nTaskBoard - Kanban-inspired app for keeping track of things that need to get done. (Demo, Source Code) MIT PHP\nTaskfreak - Simple but efficient web based task manager written in PHP. GPL-3.0 PHP\nTasks - Simple tasks and notes manager written in PHP, jQuery and Bootstrap using a custom flat file database. MPL-2.0 PHP\nTasks - Kanban based to-do list manager written in Go. MIT Go\nTaskwarrior - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. (Source Code) MIT C++\nTinyissue - Simple Issue Tracking for Teams. MIT PHP\ntodo - Simple todo list manager. (Demo) MIT Go\ntodoMini - Mobile friendly zero-feature TODO list web app. Unix philosophy. (Demo, Source Code) GPL-3.0 PHP\/Java\nTracks - Web-based application to help you implement David Allen\u2019s Getting Things Done\u2122 methodology. (Source Code) GPL-2.0 Ruby\nVikunja - The to-do app to organize your life. (Demo, Source Code) GPL-3.0 Go\nVolition - Opinionated open-source task management. MIT Ruby\nWekan - Open-source Trello-like kanban. (Source Code) MIT Nodejs\n\nTicketing\n^        back to top        ^\nSee also Task management\/To-do lists and Project Management\n\nBugzilla - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. MPL-2.0 Perl\nBumpy Booby - Simple, responsive and highly customizable PHP bug tracking system. (Source Code) MIT PHP\nDiamanteDesk - DiamanteDesk is FREE Open Source easy-to-use help-desk solution. (Demo, Source Code) OSL-3.0 PHP\ndjango-todo - django-todo is a pluggable, multi-user, multi-group, multi-list todo and ticketing system - a reusable app designed to be dropped into any existing Django project. (Source Code) BSD-3-Clause Python\/Django\nErxes - Marketing, sales, and customer service platform designed to help businesses attract more engaged customers. (Demo, Source Code) GPL-3.0 Javascript\nFlyspray - Uncomplicated, web-based bug tracking system. (Source Code) GPL-2.0 PHP\nFreeScout - Open source clone of Help Scout: email-based customer support application, help desk and shared mailbox. AGPL-3.0 PHP\nHelpy - Helpy is a modern, open source helpdesk customer support application. Features include knowledgebase, community discussions and support tickets integrated with email. (Demo, Source Code) MIT Ruby\nHuBoard \u26a0 - Instant project management for your GitHub issues (Connects directly GitHub API). MIT Ruby\nMantisBT - Self hosted bug tracker, fits best for software development. (Demo, Source Code) GPL-2.0 PHP\nOpenSupports - Multi language ticket system with FAQ, role management, metrics and canned response features. (Demo, Source Code) GPL-3.0 PHP\nosTicket - Manage, organize and archive all your support requests and responses in one place. (Source Code) GPL-2.0 PHP\nOTRS - Trouble ticket system for assigning tickets to incoming queries and tracking further communications. (Source Code) AGPL-3.0 Perl\nRequest Tracker - An enterprise-grade issue tracking system. (Source Code) GPL-2.0 Perl\nSentry On-Premise - A powerful error tracking platform with wide language support and a robust API. (Source Code) BSD-3-Clause Python\/Django\nSIT - SCM-agnostic, file-based, offline-first, immutable issue tracker. (Source Code) MIT Apache-2.0 Rust\nTheBugGenie - friendly project management and issue tracking tool, with extensive user rights system. (Source Code) MPL-2.0 PHP\nZammad - Easy to use but powerful open-source support and ticketing system. (Source Code) AGPL-3.0 Ruby\n\nURL Shorteners\nBefore hosting one, please see shortcomings of URL shorteners.\n^        back to top        ^\n\ngShort - Privacy-friendly self-hosted URL shortener. (Demo) GPL-3.0 Go\nKutt - A modern URL shortener with support for custom domains. (Source Code) MIT Nodejs\nLink-shortener-bot \u26a0 - URL shortener using a Telegram Bot. (Demo) MIT Ruby\nliteshort - User-friendly, actually lightweight, and configurable URL shortener. (Demo) MIT Python\nLstu - Let's SHorten That Url - Lightweight URL shortener. WTFPL Perl\nPolr - Modern, minimalist, modular, and lightweight URL shortener. (Source Code) GPL-2.0 PHP\nreduc.io - URL shortener service written in Scala, using Akka-Http and Redis. MIT Scala\nReducePy - URL shortener service using Tornado and Redis runs on Docker and Kubernetes. MIT Python\nschort - No login, no javascript, just short links. (Demo) CC0-1.0 Python\nShlink - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. (Source Code, Clients) MIT PHP\nshorturl - Simple URL shortener with very tiny URLs. (Demo) MIT Go\nSimple-URL-Shortener - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. (Demo) MIT PHP\nSimply Shorten - A simple URL shortener that just shortens links. MIT Java\nurl-shortener \u26a0 - Shitty url shortener, emoji and AI powered. MIT Nodejs\nURL-Shortener - Make your long links short and only uses lowercase, so you can write and spell them faster. (Demo) GPL-3.0 PHP\nYOURLS - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. (Source Code) MIT PHP\n\nVPN\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#vpn\nWeb servers\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#web\nWikis\n^        back to top        ^\nSee also Documentation Generators, Wikimatrix, Wiki Engines on WikiIndex, List of wiki software on wikipedia, Comparison of wiki software on wikipedia.\n\nBookStack - BookStack is a simple, self-hosted, easy-to-use platform for organizing and storing information. It allows for documentation to be stored in a book like fashion. (Demo, Source Code) MIT PHP\nCowyo - Cowyo is a feature-rich wiki for minimalists. (Demo) MIT Go\ndjango-wiki - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. (Demo) GPL-3.0 Python\nDocumize - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL\/Percona. (Source Code) AGPL-3.0 Go\nDokuwiki - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain files, therefore no database is required. (Source Code) GPL-2.0 PHP\nGitit - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki's web interface. GPL-2.0 Haskell\nGollum - Simple, Git-powered wiki with a sweet API and local frontend. MIT Ruby\njingo - Git based wiki engine written for node.js, with a decent design, a search capability and good typography. MIT Nodejs\nMediawiki - MediaWiki is a free and open-source wiki software package written in PHP. It serves as the platform for Wikipedia and the other Wikimedia projects, used by hundreds of millions of people each month. (Demo, Source Code) GPL-2.0 PHP\nMoinMoin - Advanced, easy to use and extensible WikiEngine with a large community of users. (Source Code) GPL-2.0 Python\nOutline \u26a0 - An open, extensible, wiki for your team built using React and Node.js. (Source Code) BSD-3-Clause Nodejs\nPepperminty Wiki - Complete markdown-powered wiki contained in a single PHP file. (Demo) MPL-2.0 PHP\nPineDocs - Simple, fast, customizable and lightweight site for browsing files. GPL-3.0 PHP\nPmWiki - Wiki-based system for collaborative creation and maintenance of websites. GPL-3.0 PHP\nRaneto - Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase. MIT Nodejs\nTiddlyWiki - Reusable non-linear personal web notebook. (Source Code) BSD-3-Clause Nodejs\nTiki - Wiki CMS Groupware with the most built-in features. (Demo, Source Code) LGPL-2.1 PHP\nTWiki - TWiki is a Perl-based structured wiki application, typically used to run a collaboration platform, knowledge or document management system, a knowledge base, or team portal. (Demo, Source Code) GPL-1.0 Perl\nwiki - Simple Markdown based wiki engine. (Demo) MIT Go\nWiki.js - Modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown. (Demo) AGPL-3.0 Nodejs\nWiKiss - Wiki, simple to use and install. (Source Code) GPL-2.0 PHP\nXWiki - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. (Demo, Source Code) LGPL-2.1 Java\nZim - Graphical text editor used to maintain a collection of wiki pages. Each page can contain links to other pages, simple formatting and images. (Source Code) GPL-2.0 Python\n\nSelf-hosting Solutions\n^        back to top        ^\n\n1Backend - Self-host web apps, microservices and lambdas on your server. Advanced features enable service reuse and composition. AGPL-3.0 Go\nAnsible-NAS - Build a full-featured home server with this playbook and an Ubuntu box. MIT YAML\/Docker\nCharjaBox - Highly configurable Ansible based Homeserver setup using Docker. GPL-3.0 YAML\/Ansible\/Docker\nCloud Computer - A computer in the cloud that deploys with one click and makes applications accessible through a web browser. (Source Code) MIT Docker\nDietPi - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. (Source Code) GPL-2.0 Shell\nDockSTARTer - DockSTARTer helps you get started with home server apps running in Docker. (Source Code) MIT Shell\nDPlatform - Deploy self-hosted apps easily: simple, bloat-free, independent installation. (Source Code) MIT Shell\nFLAP - Low maintenance framework to manage self-hosted services. (Source Code) AGPL-3.0 Docker\/Shell\nFreedomBone - Home server configuration based on Debian. (Source Code) AGPL-3.0 Shell\nFreedomBox - Community project to develop, design and promote personal servers running free software for private, personal, communications. GPL-3.0 Python\/Other\nFreeNAS - Network-attached storage (NAS) software based on FreeBSD and the OpenZFS file system. Support for SMB, AFP, NFS, iSCSI, SSH, rsync and FTP\/TFTP protocols. Advanced features include full-disk encryption and plug-ins. (Source Code) BSD-3-Clause Python\/Other\nHomelabOS - Your very own offline-first privacy-centric open-source data-center. Deploy over 100 services with a few commands. (Source Code) MIT Docker\nNextCloudPi - Nextcloud preinstalled and preconfigured, with a text and web management interface and all the tools needed to self host private data. With installation images for Raspberry Pi, Odroid, Rock64, Docker, and a curl installer for Armbian\/Debian. (Source Code) GPL-2.0-or-later Bash\/PHP\nOpenMediaVault - OpenMediaVault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB\/CIFS, DAAP media server, RSync, BitTorrent client and many more. (Source Code) GPL-3.0 PHP\nPiratebox - DIY anonymous offline file-sharing and communications system built with free software and inexpensive off-the-shelf hardware. GPL-3.0 Python\/Other\nSandstorm - Personal server for running self-hosted apps easily and securely. (Demo, Source Code) Apache-2.0 C++\/Other\nsovereign - Set of Ansible playbooks to build and maintain your own private cloud: email, calendar, contacts, file sync, IRC bouncer, VPN, and more. GPL-3.0 YAML\/Other\nSyncloud - Your own online file storage, social network or email server. (Source Code) GPL-3.0 Python\/Other\nUBOS - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. GPL-3.0 Perl\/Other\nWikiSuite - The most comprehensive and integrated Free \/ Libre \/ Open Source enterprise software suite. (Source Code) Multiple ClearOS\nYunoHost - Server operating system aiming to make self-hosting accessible to everyone. (Demo, Source Code) AGPL-3.0 Python\/Other\n\n\nList of Licenses\n^        back to top        ^\n\n\u26a0  - Depends on a proprietary service outside the user's control\n0BSD - BSD Zero-Clause Licence\nAAL - Attribution Assurance License\nAGPL-3.0 - GNU Affero General Public License 3.0\nAGPL-3.0-only - GNU Affero General Public License 3.0 only\nApache-2.0 - Apache, Version 2.0\nAPSL-2.0 - Apple Public Source License, Version 2.0\nArtistic-2.0 - Artistic License Version 2.0\nBeerware - Beerware License\nBSD-2-Clause - BSD 2-clause \"Simplified\"\nBSD-2-Clause-FreeBSD - BSD 2-Clause FreeBSD License\nBSD-3-Clause - BSD 3-Clause \"New\" or \"Revised\"\nBSD-3-Clause-Attribution - BSD with attribution\nCC-BY-NC-SA-3.0 - Creative Commons Attribution-NonCommercial-ShareAlike 3.0 International License\nCC-BY-SA-3.0 - Creative Commons Attribution-ShareAlike 3.0 International License\nCC-BY-SA-4.0 - Creative Commons Attribution-ShareAlike 4.0 International License\nCC0-1.0 - Public Domain\nCDDL-1.0 - Common Development and Distribution License\nCECILL-B - CEA CNRS INRIA Logiciel Libre\nCPAL-1.0 - Common Public Attribution License Version 1.0\nDPL - Devblocks Public License 1.0\nECL-2.0 - Educational Community License, Version 2.0 \nEPL-1.0 - Eclipse Public License, Version 1.0\nEPL-2.0 - Eclipse Public License, Version 2.0\nEUPL-1.2 - European Union Public License 1.2\nGFDL-1.1-only - GNU Free Documentation License v1.1\nGFDL-1.1-or-later - GNU Free Documentation License v1.1\nGFDL-1.2-only - GNU Free Documentation License v1.2\nGFDL-1.2-or-later - GNU Free Documentation License v1.2\nGFDL-1.3-only - GNU Free Documentation License v1.3\nGFDL-1.3-or-later - GNU Free Documentation License v1.3\nGPL-1.0 - GNU General Public License\nGPL-2.0 - GNU General Public License 2.0\nGPL-2.0-or-later - GNU General Public License v2.0 or later\nGPL-3.0-only - GNU General Public License v3.0 only\nGPL-3.0-or-later - GNU General Public License v3.0 or later\nGPL-3.0 - GNU General Public License 3.0\nIPL-1.0 - IBM Public License\nISC - Internet Systems Consortium License\nLGPL-2.1 - Lesser General Public License 2.1\nLGPL-3.0 - Lesser General Public License 3.0\nMIT - MIT License\nMPL-1.1 - Mozilla Public License Version 1.1\nMPL-2.0 - Mozilla Public License\nMultiple - Various different licenses, for different components of the project's software.\nOSL-3.0 - Open Software License 3.0\nOther - Non-standard license, usually unique to the project itself.\nSendmail - Sendmail License\nSSPL-1.0 - Server Side Public License\nUnlicense - The Unlicense\nWTFPL - Do What the Fuck You Want to Public License\nZlib - Zlib\/libpng License\nZPL-1.2 - Zope Public License 1.2\nZPL-2.0 - Zope Public License 2.0\n\n\nExternal links\n^        back to top        ^\n\nAwesome Big Data - Curated list of awesome big data frameworks, resources and other awesomeness.\nAwesome Public Datasets - List of high quality, topic-centric public data sources.\nAwesome Sysadmin - Curated list of amazingly awesome open source sysadmin resources.\nLists of software aimed at privacy and decentralization in some form: PRISM Break, privacytools.io, Alternative Internet, Libre Projects\nDynamic Domain Name services: Afraid.org, Pagekite\nCommunities\/forums: \/r\/selfhosted, IndieWeb\nMirrors: GitHub.com, Gitlab.com\n\n\nContributing\nContributing guidelines can be found in .github\/CONTRIBUTING.md.\nAuthors\nThe list of authors can be found in AUTHORS.md.\nLicense\nThis list is under the Creative Commons Attribution-ShareAlike 3.0 Unported License.\n","27":"\n\nStay on the bleeding edge \u2014 join our Gitter room! \ud83c\udf89\n  \n\n\n\n\nSee how the exact same Medium.com clone (called Conduit) is built using any of our supported frontends and  backends. Yes, you can mix and match them, because they all adhere to the same API spec \ud83d\ude2e\ud83d\ude0e\nWhile most \"todo\" demos provide an excellent cursory glance at a framework's capabilities, they typically don't convey the knowledge & perspective required to actually build real applications with it.\nRealWorld solves this by allowing you to choose any frontend (React, Angular 2, & more) and any backend (Node, Django, & more) and see how they power a real world, beautifully designed fullstack app called \"Conduit\".\nRead the full blog post announcing RealWorld on Medium.\nFrontends\n\nSorted by popularity on Sun Sep 06 2020\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nReact \/ Redux   \nAngular   \nVue   \n\n\nElm   \nReact \/ MobX   \nSvelte \/ Sapper   \n\n\nPureScript + Halogen   \nClojureScript + re-frame   \nAngularJS   \n\n\nAngular + ngrx + nx   \nAurelia   \nRust + Yew + WebAssembly   \n\n\nEmber.js   \nAppRun   \nNext.js   \n\n\nVanilla JS Web Components   \nClojureScript + Keechma   \nStencil.js   \n\n\nHyperapp 1   \nDojo 2   \nEmber Octane   \n\n\nSan   \nRiot.js v4   \nneo.mjs   \n\n\nImba   \nCrizmas MVC   \nBridge.Spaf   \n\n\nRiot.js v3   \nRiot.js + Universal + Effector   \n\n\n\n\nWork In Progress:\nImplement GraphQL + Apollo\/Relay for the Node + React codebases |\n\ud83d\udda5 \ud83d\udd27  ClojureScript |\n\ud83d\udda5 \ud83d\udd27 Mithril |\nAngular 4+ \/ MobX |\nAngularJS 1.2  |\nVanilla Backbone.js |\nRactive |\nQuasar framework |\nBlazor |\nReasonReact (ReasonML) |\n$mol |\nSurplus wip |\nSlim.js |\nNuxt.js |\nTypescript + Web Components\nBackends\n\nSorted by popularity on Sun Sep 06 2020\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nNode \/ Express   \nGo + Gin   \nASP.NET Core   \n\n\nNestJS + TypeORM\/Prisma   \nDjango   \nLaravel   \n\n\nElixir + Phoenix   \nFlask   \nSpring   \n\n\nRails   \nSlim   \nRust \/ Rocket   \n\n\nKotlin \/ Spring   \nRust   \nGo Clean Architecture   \n\n\nGo \/ Echo   \nKoa \/ Knex   \nClojure \/ Polylith   \n\n\nServerless AWS Lambda DynamoDB   \nHaskell \/ Yesod   \nScala & Play Framework   \n\n\nGCP Cloud Functions + Datastore   \nCakePHP   \nFunctional ASP.NET Core   \n\n\nMoleculer   \nKotlin + Javalin + Exposed   \nF#   \n\n\nHapi.js   \nKotlin + http4k   \nJava Quarkus   \n\n\nNode \/ hapi pal   \nExpress w\/ Bookshelf.js   \nKotlin + Ktor   \n\n\nCrystal (Onyx)   \nRuby & Colmena   \nAkka HTTP   \n\n\nFeathers   \nQEWD.js   \nAWS Lambda Go + DynamoDB   \n\n\nEclipse Vert.x   \nSpincast   \n\n\n\n\nWork In Progress:\nImplement GraphQL + Apollo\/Relay for the Node + React codebases |\n\ud83d\uddc4\ud83d\udd27  Go + net\/http |\n\ud83d\uddc4\ud83d\udd27 Node + GraphQL |\n\ud83d\uddc4\ud83d\udd27 Clojure |\n\ud83d\uddc4\ud83d\udd27 Falcon and GAE |\n\ud83d\uddc4\ud83d\udd27 Nim |\n\ud83d\uddc4\ud83d\udd27 Symfony |\n\ud83d\uddc4\ud83d\udd27 Haskell \/ Servant |\n\ud83d\uddc4\ud83d\udd27 Phalcon |\n\ud83d\uddc4\ud83d\udd27 Dropwizard |\n\ud83d\uddc4\ud83d\udd27 Go + Gorilla mux |\n\ud83d\uddc4\ud83d\udd27 Loopback 3.0 |\n\ud83d\uddc4 \ud83d\udd27 Crystal + Kemal |\n\ud83d\uddc4 \ud83d\udd27 Erlang + Cowboy |\n\ud83d\uddc4 \ud83d\udd27 Nancy |\n\ud83d\uddc4\ud83d\udd27 Sanic |\nHaskell \/ Scotty |\nTypescript + node + express |\ntypescript + node.js(koa) |\nVanilla PHP |\nVert.x (Java) |\nLumen + MongoDB  |\nGo + net\/http Package  |\nSwift Vapor |\nEgg.js |\nServerless python (AWS Lambda) |\nServerless Typescript + Mongodb (implementation done) |\nAzure Functions + CosmosDb |\nServerless+Typescript with AWS as the provider (Lambda, SSM, DynamoDB) |\nVertx + Reactive + MongoDB |\nFullstack Golang (tgram) |\nZend Framework |\nRust \/ Rocket \/ Diesel \/ Mysql - Backend Application |\nGolang + Revel |\nMasonite |\nTurbolinks |\nActix |\nLucky |\nSymfony 4 with API Platform |\nScala + Finch |\nHolochain\nMobile\n\nSorted by popularity on Sun Sep 06 2020\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nNativeScript (Angular)   \n\n\n\n\n\nWork In Progress:\n\ud83d\udcf1\ud83d\udd27 React Native |\n\ud83d\udcf1\ud83d\udd27 Jasonette |\n\ud83d\udcf1\ud83d\udd27 Swift |\n\ud83d\udcf1\ud83d\udd27 C# on Xamarin |\n\ud83d\udcf1 \ud83d\udd27 Kotlin\/Android |\n\ud83d\udcf1\ud83d\udd27 Onymos |\nQuasar framework |\nSwift Perfect |\nFlutter\nFullstack\nSince these implementations are responsible for the entire stack, they obviously cannot be mixed and matched but they still adhere to the same functionality & UX specs.\nWork In Progress: Meteor | Ruby Hyperloop | Firebase\nCreate a new stack\n\nKnow any of these frameworks (or one that isn't listed)?Create a new framework implementation >>>\nOr you can view upcoming stacks (WIPs)\nNote: All stacks that are a WIP are experimental and incomplete.\nDon't expect everything to work perfectly out of the box!\n\nHow do I get up & running?\nSimply follow the instructions in the README of whatever frontend and\/or backend repo's you want to get up and running.\nCan you teach me how to build each stack from scratch?\nYup! We've built step-by-step tutorials for all of our stacks that teach you how to go from git init all the way to the production ready application. Start learning now >>>\n\nCommunity created resources\nForks, tutorials, workshops, and other resources based on the RealWorld project:\n\nReact+Redux \/ Node testing workshop by Kent C. Dodds\n\nExample repo showing the React+Redux and Node stacks working together w\/ TDD\nLive recording of his workshop is available on YouTube\n\n\nRealWorld React\/NodeJS E2E Tests by Anish Karandikar\n\nA repo showing how to wire React frontend with NodeJS backend for a RealWorld fullstack\nIncludes E2E integration tests that use Chrome Puppeteer and Mocha and work with CI systems like Travis CI and CircleCI\nAlso demonstrates usage of Greenkeeper for automatic dependency updates and Snyk for vulnerability monitoring\n\n\nPerformance comparisons:\n\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2019\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2018\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2017\n\n\n\n\nLearn more\n\n\"Introducing RealWorld \ud83d\ude4c\" by Eric Simons\nEvery tutorial is built against the same API spec to ensure modularity of every frontend & backend\nEvery frontend utilizes the same hand crafted Bootstrap 4 theme for identical UI\/UX\nThere is a hosted version of the backend API available for public usage, no API keys required\nInterested in creating a new RealWorld stack? View our starter guide & spec\n\n\nWho made this?\nRealWorld would not be possible without the open source community continuously helping push the project forward. In addition, we have a core project team composed of:\nAnish Karandikar - Core Maintainer\n\nMathWorker, ex-Google, ex-Computational Fluid Dynamicist, forever lover of tech & humanities \u2764\ufe0f\nCameron Chapman - Core Maintainer\n\nCameron Chapman is a Software Engineer at FanThreeSixty. He's an open source enthusiast and is helping to teach a local web development boot camp at Kansas University.\nEric Simons - Founder\/Maintainer\n\nEric is a Software Engineer, UI Designer, and author of many technical books & tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nAlbert Pai - Founder\/Maintainer\n\nAlbert is a Software Engineer, DevOps ninja, and author of many technical books & tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nThinkster - Funding\/Support\n\nThinkster creates high quality resources that help Javascript developers succeed. The RealWorld project wouldn't exist without their funding, so please consider investing in a Pro subscription to help support us!\nJames Brewer - Admin\n\nJames is a Software Engineer at Square and a contributor to the Django project. He created & maintains the RW Django codebase and continually provides guidance for the RealWorld project itself.\nSandeesh S. - Admin\n\nFull stack developer, Laravel enthusiast, Digital marketing specialist and an avid gamer.\nSpecial thanks to...\nRealWorld wouldn't be possible without the help of the open source community reviewing codebases, creating new app implementations, and many other tasks that help push this project forward. We especially appreciate the OSS leaders who have helped contribute to RealWorld:\n\nDan Abramov (creator of Redux) for  helping spark the initial idea, getting the Redux community involved, as well as graciously taking the time to provide feedback on the Redux codebase\nMax Lynch (creator of Ionic) for taking the time to provide guidance in the early days of this project\nAddy Osmani (creator of TodoMVC) for helping spark the initial idea and his amazing work with TodoMVC\nTodoMVC (team & contributors) for their exemplary & successful work; their project & org has been an invaluable analogy for us as we've built out RealWorld\nJames Brewer (docs contributor to Django) for countless brainstorming sessions, helping name this project, and creating the Django codebase + tutorial\n\nLicense\nAll of the codebases are MIT licensed unless otherwise specified.\n\n\n","28":" Markdown Here\nVisit the website.\nGet it for Chrome.\nGet it for Firefox.\nGet it for Safari.\nGet it for Thunderbird and Postbox.\nGet it for Opera.\nDiscuss it and ask questions in the Google Group.\nMarkdown Here is a Google Chrome, Firefox, Safari, Opera, and Thunderbird extension that lets you write email\u2020 in Markdown\u2021 and render them before sending. It also supports syntax highlighting (just specify the language in a fenced code block).\nWriting email with code in it is pretty tedious. Writing Markdown with code in it is easy. I found myself writing email in Markdown in the Github in-browser editor, then copying the preview into email. This is a pretty absurd workflow, so I decided create a tool to write and render Markdown right in the email.\nTo discover what can be done with Markdown in Markdown Here, check out the Markdown Here Cheatsheet and the other wiki pages.\n\u2020: And Google Groups posts, and Blogger posts, and Evernote notes, and Wordpress posts! See more.\n\u2021: And TeX mathematical formulae!\n\nTable of Contents\nInstallation Instructions\nUsage Instructions\nTroubleshooting\nCompatibility\nNotes and Miscellaneous\nBuilding the Extension Bundles\nNext Steps, Credits, Feedback, License\nInstallation Instructions\nChrome\nChrome Web Store\nGo to the Chrome Web Store page for Markdown Here and install normally.\nAfter installing, make sure to reload your webmail or restart Chrome!\nManual\/Development\n\nClone this repo.\nIn Chrome, open the Extensions settings. (Wrench button, Tools, Extensions.)\nOn the Extensions settings page, click the \"Developer Mode\" checkbox.\nClick the now-visible \"Load unpacked extension\u2026\" button. Navigate to the directory where you cloned the repo, then the src directory under that.\nThe Markdown Here extension should now be visible in your extensions list.\nReload your webmail page (and maybe application) before trying to convert an email.\n\nFirefox and Thunderbird\nMozilla Add-ons site\nGo to the Firefox Add-ons page for Markdown Here and install normally.\nOr go to the \"Tools > Add-ons\" menu and then search for \"Markdown Here\".\nAfter installing, make sure to restart Firefox\/Thunderbird!\nNote: It takes up to a month for Mozilla to approve changes to the Firefox\/Thunderbird extension, so updates (features, fixes) will lag behind what is shown here. You can manually choose to install the newest version before it's reviewed from the list of versions: https:\/\/addons.mozilla.org\/en-US\/firefox\/addon\/markdown-here\/versions\/\nManual\/Development\n\nClone this repo.\nFollow the instructions in the MDN \"Setting up an extension development environment\" article.\n\nSafari\nDownload the extension directly. When it has finished downloading, double click it to install.\nPreferences\nTo get to the Markdown Here preferences, open the Safari preferences and then go to the \"Extensions\" tab. Then click the \"Click me to show Markdown Here options\" box.\nOpera\nNote that Markdown Here only works with Opera versions 16 and higher (i.e., the ones that are based on Chromium).\nGo to the Opera Add-ons store page for Markdown Here and install normally.\nAfter installing, make sure to reload your webmail or restart Chrome!\nUsage Instructions\nInstall it, and then\u2026\n\n\nIn Chrome\/Safari\/Opera, make sure you reload your web mail page before trying to use Markdown Here.\n\n\nIn Chrome\/Firefox\/Safari\/Opera, log into your Gmail, Hotmail, or Yahoo account and start a new email. In Thunderbird, start a new message.\n\n\nMake sure you're using the rich editor.\n\nIn Gmail, click the \"Rich formatting\" link, if it's visible.\nIn Thunderbird, make sure \"Compose messages in HTML format\" is enabled in your \"Account Settings\", \"Composition & Addressing\" pane.\n\n\n\nCompose an email in Markdown. For example:\n**Hello** `world`.\n\n```javascript\nalert('Hello syntax highlighting.');\n```\n\n\n\nRight-click in the compose box and choose the \"Markdown Toggle\" item from the context menu. Or click the button that appears in your address bar. Or use the hotkey (CTRL+ALT+M by default).\n\n\nYou should see your email rendered correctly from Markdown into rich HTML.\n\n\nSend your awesome email to everyone you know. It will appear to them the same way it looks to you.\n\n\nRevert to Markdown\nAfter rendering your Markdown to pretty HTML, you can still get back to your original Markdown. Just right-click anywhere in the newly rendered Markdown and click \"Markdown Toggle\" -- your email compose body will change back to the Markdown you had written.\nNote that any changes you make to the pretty HTML will be lost when you revert to Markdown.\nIn Gmail, you can also use the browser's Undo command (CTRL+Z \/ CMD+Z, or from the Edit menu). Be warned that you might also lose the last few characters you entered.\nReplies\nIn Gmail, Thunderbird, and Google Groups, you can use \"Markdown Toggle\" normally: just write your reply (top, bottom, inline, wherever) and then convert. The original email that you're replying to will be left alone. (Technically: Existing blockquote blocks will be left intact.)\nIn Hotmail and Yahoo (which don't put the original in a blockquote), and optionally in Gmail, Thunderbird, and Google Groups, you can ensure that only the part of the reply that you wrote gets converted by selecting what you want to convert and then clicking \"Markdown Toggle\" -- see the next section.\nSelection\/Piecemeal Conversion\nSometimes you don't want to convert the entire email; sometimes your email isn't entirely Markdown. To convert only part of the email, select the text (with your mouse or keyboard), right-click on it, and click the \"Markdown Toggle\" menu item. Your selection is magically rendered into pretty HTML.\nTo revert back to Markdown, just put your cursor anywhere in the block of converted text, right click, and click the \"Markdown Toggle\" menu item again. Now it's magically back to the original Markdown.\n\nThings to know about converting\/reverting a selection\n\n\nIf you select only part of a block of text, only that text will be converted. The converted block will be wrapped in a paragraph element, so the original line will be broken up. You probably don't want to ever do this.\n\n\nYou can select and revert multiple converted blocks at the same time. One upshot of this is that you can select your entire email, click \"Markdown Toggle\", and all portions of it that you had converted will be reverted.\n\n\nIf you don't have anything selected when you click \"Markdown Toggle\", Markdown Here will check if there are converted blocks anywhere in the message and revert them. If there no converted blocks are found, it will convert the entire email.\n\n\nOptions\nThe Markdown Here Options page can be accessed via the Chrome, Firefox, Safari, or Thunderbird extensions list. The available options include:\n\nStyling modifications for the rendered Markdown.\nSyntax highlighting theme selection and modification.\nTeX math formulae processing enabling and customization.\nWhat the hotkey should be.\n\nFor Chrome and Firefox, any changes made in the Markdown Here Options are automatically synchronized between your other installations of that browser (if you have the sync feature enabled in the browser).\n\nTroubleshooting\nSee the Troubleshooting wiki page.\nCompatibility\nSee the Compatibility wiki page.\nNotes and Miscellaneous\n\n\nMarkdown Here uses Github Flavored Markdown, with the limitation that GFM special links are not supported (issue #11); nor will they be, as MDH is not Github-specific.\n\n\nAvailable languages for syntax highlighting (and the way they should be written in the fenced code block) can be seen on the highlight.js demo page.\n\n\nImages embedded inline in your Markdown will be retained when you \"Markdown Toggle\". Gmail allows you to put images inline in your email -- this can be much easier than referencing an external image.\n\n\nEmail signatures are automatically excluded from conversion. Specifically, anything after the semi-standard '-- ' (note the trailing space) is left alone.\n\nNote that Hotmail and Yahoo do not automatically add the '-- ' to signatures, so you have to add it yourself.\n\n\n\nThe \"Markdown Toggle\" menu item shows up for more element types than it can correctly render. This is intended to help people realize that they're not using a rich editor. Otherwise they just don't see the menu item and don't know why.\n\n\nStyling:\n\nThe use of browser-specific styles (-moz-, -webkit-) should be avoided. If used, they may not render correctly for people reading the email in a different browser from the one where the email was sent.\nThe use of state-dependent styles (like a:hover) don't work because they don't match at the time the styles are made explicit. (In email, styles must be explicitly applied to all elements -- stylesheets get stripped.)\n\n\n\nFor more tweaky features, visit the Tips and Tricks section.\n\n\nBuilding the Extension Bundles\ncd utils\nnode build.js\n\nChrome and Opera extension\nCreate a file with a .zip extension containing these files and directories:\nmanifest.json\ncommon\/\nchrome\/\n\nFirefox\/Thunderbird extension\nCreate a file with a .xpi extension containing these files and directories:\nchrome.manifest\ninstall.rdf\ncommon\/\nfirefox\/\n\nSafari extension\nThe browser-specific code is located in the markdown-here-safari project.\nUse the Safari Extension Builder.\nNext Steps\nSee the issues list and the Notes Wiki. All ideas, bugs, plans, complaints, and dreams will end up in one of those two places.\nFeel free to create a feature request issue if what you want isn't already there. If you'd prefer a less formal approach to floating an idea, post to the \"markdown-here\" Google Group.\nIt also takes a fair bit of work to stay up-to-date with the latest changes in all the applications and web sites where Markdown Here works.\nCredits\nMarkdown Here was coded on the shoulders of giants.\n\nMarkdown-to-HTML: chjj \/ marked\nSyntax highlighting: isagalaev \/ highlight.js\nHTML-to-text: mtrimpe \/ jsHtmlToText\n\nFeedback\nAll bugs, feature requests, pull requests, feedback, etc., are welcome. Create an issue. Or post to the \"markdown-here\" Google Group.\nLicense\nCode\nMIT License: http:\/\/adampritchard.mit-license.org\/ or see the LICENSE file.\nLogo\nCopyright 2015, Austin Anderson. Licensed to Markdown Here under the MDH contributor license agreement.\nOther images\nCreative Commons Attribution 3.0 Unported (CC BY 3.0) License\n\n\n","29":"\nSemantic UI\n\n\nSemantic is a UI framework designed for theming.\nKey Features\n\n50+ UI elements\n3000 + CSS variables\n3 Levels of variable inheritance (similar to SublimeText)\nBuilt with EM values for responsive design\nFlexbox friendly\n\nSemantic allows developers to build beautiful websites fast, with concise HTML, intuitive javascript, and simplified debugging, helping make front-end development a delightful experience. Semantic is responsively designed allowing your website to scale on multiple devices. Semantic is production ready and partnered with frameworks such as React, Angular, Meteor, and Ember, which means you can integrate it with any of these frameworks to organize your UI layer alongside your application logic.\n2.4.0 Release (Sep 17th, 2018)\nSemantic UI 2.4 is now available. Read up on what's new in the docs.\nMigration info from 1.x can be found in the 2.0 release notes\nUser Support\nPlease help us keep the issue tracker organized. For technical questions that do not include a specific JSFiddle test case (bug reports), or feature request please use StackOverflow to find a solution.\nVisit our contributing guide for more on what should be posted to GitHub Issues.\nInstall\nRecommended Install\nnpm install semantic-ui  # Use themes, import build\/watch tasks into your own gulpfile.\nSemantic UI includes an interactive installer to help setup your project.\n\nFor more details on setup visit our getting started guide.\nTo learn more about theming please read our theming guide\n\nAdditional Versions\n\n\n\nEnvironment\nInstall Script\nRepo\n\n\n\n\nCSS Only\nnpm install semantic-ui-css\nCSS Repo\n\n\nLESS Only\nnpm install semantic-ui-less\nLESS Repo\n\n\nLESS plugin\nnpm install less-plugin-semantic-ui\nLESS Plugin Repo\n\n\nEmberJS\nember install:addon semantic-ui-ember\nEmber Repo\n\n\nMeteor - LESS\nmeteor add semantic:ui\nMeteor Repo\n\n\nMeteor - CSS\nmeteor add semantic:ui-css\nCSS Repo\n\n\nBower\nbower install semantic-ui\n\n\n\n\nCheck out our integration wiki for more options.\nBrowser Support\n\nLast 2 Versions FF, Chrome, Safari Mac\nIE 11+\nAndroid 4.4+, Chrome for Android 44+\niOS Safari 7+\nMicrosoft Edge 12+\n\nAlthough some components will work in IE9, grids and other flexbox components are not supported by IE9 and may not appear correctly.\nCommunity\nGetting Help\nPlease do not post usage questions to GitHub Issues. For these types of questions use our [Gitter chatroom] or StackOverflow.\nSubmitting Bugs and Enhancements\nGitHub Issues is for suggesting enhancements and reporting bugs. Before submiting a bug make sure you do the following:\n\nCheck out our contributing guide for info on our release cycle.\nFork this boilerplate JSFiddle to create a test case for your bug. If a bug is apparent in the docs, that's ok as a test case, just make it clear exactly how to reproduce the issue. Only bugs that include a test case can be triaged.\n\nPull Requests\nWhen adding pull requests, be sure to merge into the next branch. If you need to demonstrate a fix in next release, you can use this JSFiddle\nInternational\n\nChinese A Chinese mirror site is available at http:\/\/www.semantic-ui.cn.\nRight-to-Left (RTL) An RTL version can be created using our build tools by selecting rtl from the install script.\nTranslation To help translate see the Wiki Guide for translations.\n\nResources\n\n\n\nResource\nDescription\n\n\n\n\nBugs & Feature Requests\nAll bug submission require a link to a test case, and a set of steps to reproduce the issue. You can make a test case by forking this JSFiddle, then submit your bug report on GitHub Issues\n\n\nLive Chat\nJoin our Gitter.im Room\n\n\nNewsletter Updates\nSign up for updates at semantic-ui.com\n\n\nAdditional Resources\nSubmit a question on StackOverflow or ask our Google Group\n\n\n\nPlaces to Help\n\n\n\nProject\nHow To Help\nNext Step\n\n\n\n\nLocalization\nHelp us translate Semantic UI into your language\nJoin our Translation Community\n\n\nSCSS\nSASS needs PR to support variables inside @import\nAdd Pull Request for #739\n\n\nAngular\nHelp develop angular bindings\nReach Out on GitHub Issues\n\n\nGuides & Tutorials\nHelp write guides and tutorials\nJoin the discussion\n\n\n\nReaching Out\nIf you'd like to start a conversation about Semantic feel free to e-mail me at jack@semantic-ui.com\n\n\n","30":"\n\n\n\n\n\n  Gatsby v2\n\n\n\u269b\ufe0f \ud83d\udcc4 \ud83d\ude80\n\n\n  Fast in every way that matters\n\n\n  Gatsby is a free and open source framework based on React that helps developers build blazing fast websites and apps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuickstart\n \u00b7 \nTutorial\n \u00b7 \nPlugins\n \u00b7 \nStarters\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \n  Support: Twitter\n & \nDiscord\n\nGatsby is a modern web framework for blazing fast websites.\n\n\nGo Beyond Static Websites. Get all the benefits of static websites with none of the\nlimitations. Gatsby sites are fully functional React apps so you can create high-quality,\ndynamic web apps, from blogs to e-commerce sites to user dashboards.\n\n\nUse a Modern Stack for Every Site. No matter where the data comes from, Gatsby sites are\nbuilt using React and GraphQL. Build a uniform workflow for you and your team, regardless of\nwhether the data is coming from the same backend.\n\n\nLoad Data From Anywhere. Gatsby pulls in data from any data source, whether it\u2019s Markdown\nfiles, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins\nto load your data, then develop using Gatsby\u2019s uniform GraphQL interface.\n\n\nPerformance Is Baked In. Ace your performance audits by default. Gatsby automates code\nsplitting, image optimization, inlining critical styles, lazy-loading, prefetching resources,\nand more to ensure your site is fast \u2014 no manual tuning required.\n\n\nHost at Scale for Pennies. Gatsby sites don\u2019t require servers so you can host your entire\nsite on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be\nhosted entirely free on services like GitHub Pages and Netlify.\n\n\nLearn how to use Gatsby for your next project.\nWhat\u2019s In This Document\n\nGet Up and Running in 5 Minutes\nLearning Gatsby\nMigration Guides\nHow to Contribute\nLicense\nThanks to Our Contributors and Sponsors\n\n\ud83d\ude80 Get Up and Running in 5 Minutes\nYou can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:\n\n\nInstall the Gatsby CLI.\nnpm install -g gatsby-cli\n\n\n\nCreate a Gatsby site from a Gatsby starter.\nGet your Gatsby blog set up in a single command:\n# create a new Gatsby site using the default starter\ngatsby new my-blazing-fast-site\n\n\nStart the site in develop mode.\nNext, move into your new site\u2019s directory and start it up:\ncd my-blazing-fast-site\/\ngatsby develop\n\n\nOpen the source code and start editing!\nYour site is now running at http:\/\/localhost:8000. Open the my-blazing-fast-site directory in your code editor of choice and edit src\/pages\/index.js. Save your changes, and the browser will update in real time!\n\n\nAt this point, you\u2019ve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our plugins and the official tutorial.\n\ud83c\udf93 Learning Gatsby\nFull documentation for Gatsby lives on the website.\n\n\nFor most developers, we recommend starting with our in-depth tutorial for creating a site with Gatsby. It starts with zero assumptions about your level of ability and walks through every step of the process.\n\n\nTo dive straight into code samples head to our documentation. In particular, check out the \u201cGuides\u201d, \u201cAPI Reference\u201d, and \u201cAdvanced Tutorials\u201d sections in the sidebar.\n\n\nWe welcome suggestions for improving our docs. See the \u201chow to contribute\u201d documentation for more details.\nStart Learning Gatsby: Follow the Tutorial \u00b7 Read the Docs\n\ud83d\udcbc Migration Guides\nAlready have a Gatsby site? These handy guides will help you add the improvements of Gatsby v2 to your site without starting from scratch!\n\nMigrate a Gatsby site from v1 to v2\nStill on v0? Start here: Migrate a Gatsby site from v0 to v1\n\n\u2757 Code of Conduct\nGatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our Code of Conduct. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. \ud83d\udcaa\ud83d\udc9c\n\ud83e\udd1d How to Contribute\nWhether you're helping us fix bugs, improve the docs, or spread the word, we'd love to have you as part of the Gatsby community! \ud83d\udcaa\ud83d\udc9c\nCheck out our Contributing Guide for ideas on contributing and setup steps for getting our repositories up and running on your local machine.\nA note on how this repository is organized\nThis repository is a monorepo managed using Lerna. This means there are multiple packages managed in this codebase, even though we publish them to NPM as separate packages.\nContributing to Gatsby v1\nWe are currently only accepting bug fixes for Gatsby v1. No new features will be accepted.\n\ud83d\udcdd License\nLicensed under the MIT License.\n\ud83d\udc9c Thanks\nThanks to our many contributors and to Netlify for hosting Gatsby and our example sites.\n","31":"HTML5 Boilerplate\n\n\n\n\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\nThis project is the product of over 10 years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\nHomepage: https:\/\/html5boilerplate.com\/\nSource: https:\/\/github.com\/h5bp\/html5-boilerplate\nTwitter: @h5bp\n\nQuick start\nChoose one of the following options:\n\n\nDownload the latest stable release from\nhtml5boilerplate.com. This zip file is a\nsnapshot of the dist folder. On Windows, Mac and from the file manager on\nLinux unzipping this folder will output to a folder named something like\nhtml5-boilerplate_v7.3.0. From the command line will need to create a\nfolder and unzip the contents into that folder.\nmkdir html5-boilerplate\nunzip html5-boilerplate*.zip -d html5-boilerplate\n\n\nClone the git repo \u2014 git clone https:\/\/github.com\/h5bp\/html5-boilerplate.git - and checkout the\ntagged release\nyou'd like to use. The dist folder represents the latest version of the\nproject for end users.\n\n\nInstall with npm: npm install html5-boilerplate\nor yarn: yarn add html5-boilerplate. The resulting\nnode_modules\/html5-boilerplate\/dist folder represents the latest version of\nthe project for end users. Depending on what you want to use and how you want\nto use it, you may have to copy and paste the contents of that folder into\nyour project directory.\n\n\nUsing our new create-html5-boilerplate\nproject, instantly fetch the latest npm published package (or any version\navailable on npm) with npx, npm init or yarn create without having to\ninstall any dependencies. Running the following npx command installs the\nlatest version into a folder called new-site\nnpx create-html5-boilerplate new-site\ncd new-site\nnpm install\nnpm start\n\n\n\nFeatures\n\nA finely-tuned starter template. Reap the benefits of 10 years of analysis,\nresearch and experimentation by over 200 contributors.\nDesigned with progressive enhancement in mind.\nIncludes:\n\nNormalize.css\nfor CSS normalizations and common bug fixes\nA custom build of Modernizr for feature\ndetection\nApache Server Configs\nthat improve the web site's performance and security\n\n\nPlaceholder Open Graph elements and attributes.\nAn example package.json file with Parcel commands\nbuilt in to jumpstart application development\nPlaceholder CSS Media Queries.\nUseful CSS helper classes.\nDefault print styles, performance optimized.\nAn optimized version of the Google Universal Analytics snippet.\nProtection against any stray console statements causing JavaScript\nerrors in older browsers.\n\"Delete-key friendly.\" Easy to strip out parts you don't need.\nExtensive documentation.\n\nBrowser support\n\nChrome (latest 2)\nEdge (latest 2)\nFirefox (latest 2)\nInternet Explorer 11\nOpera (latest 2)\nSafari (latest 2)\n\nThis doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.\nIf you need legacy browser support you can use HTML5 Boilerplate v6 (IE9\/IE10)\nor HTML5 Boilerplate v5\n(IE 8). They are no longer actively developed.\nDocumentation\nTake a look at the documentation table of contents. This\ndocumentation is bundled with the project which makes it available for offline\nreading and provides a useful starting point for any documentation you want to\nwrite about your project.\nContributing\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is\nwelcome to contribute, however, if you decide to get\ninvolved, please take a moment to review the guidelines:\n\nBug reports\nFeature requests\nPull requests\n\nLicense\nThe code is available under the MIT license.\n","32":"lodash\nSite |\nDocs |\nFP Guide |\nContributing |\nWiki |\nCode of Conduct |\nTwitter |\nChat\nThe Lodash library exported as a UMD module.\nGenerated using lodash-cli:\n$ npm run build\n$ lodash -o .\/dist\/lodash.js\n$ lodash core -o .\/dist\/lodash.core.js\nDownload\n\nCore build (~4 kB gzipped)\nFull build (~24 kB gzipped)\nCDN copies \n\nLodash is released under the MIT license & supports modern environments.\nReview the build differences & pick one that\u2019s right for you.\nInstallation\nIn a browser:\n<script src=\"lodash.js\"><\/script>\nUsing npm:\n$ npm i -g npm\n$ npm i lodash\nNote: add --save if you are using npm < 5.0.0\nIn Node.js:\n\/\/ Load the full build.\nvar _ = require('lodash');\n\/\/ Load the core build.\nvar _ = require('lodash\/core');\n\/\/ Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash\/fp');\n\n\/\/ Load method categories.\nvar array = require('lodash\/array');\nvar object = require('lodash\/fp\/object');\n\n\/\/ Cherry-pick methods for smaller browserify\/rollup\/webpack bundles.\nvar at = require('lodash\/at');\nvar curryN = require('lodash\/fp\/curryN');\nLooking for Lodash modules written in ES6 or smaller bundle sizes? Check out lodash-es.\nWhy Lodash?\nLodash makes JavaScript easier by taking the hassle out of working with arrays,\nnumbers, objects, strings, etc. Lodash\u2019s modular methods are great for:\n\nIterating arrays, objects, & strings\nManipulating & testing values\nCreating composite functions\n\nModule Formats\nLodash is available in a variety of builds & module formats.\n\nlodash & per method packages\nlodash-es, babel-plugin-lodash, & lodash-webpack-plugin\nlodash\/fp\nlodash-amd\n\n","33":"Tech Interview Handbook\n\n\n\n\n\n\n\n\n\n\nCredits: Illustration by @leftaligned\n\n\nRead on the website\n\n\n\n\n  Black Lives Matter. Support the Equal Justice Initiative\n\n\nWhat is this?\nCarefully curated content to help you ace your next technical interview, with a focus on algorithms. System design questions are in-progress. Besides the usual algorithm questions, other awesome stuff includes:\n\nHow to prepare for coding interviews\nInterview Cheatsheet - Straight-to-the-point Do's and Don'ts\nAlgorithm tips and the best practice questions categorized by topic\n\"Front-end Job Interview Questions\" answers\nInterview formats of the top tech companies\nBehavioral questions asked by the top tech companies\nGood questions to ask your interviewers at the end of the interviews\nHelpful resume tips to get your resume noticed and the Do's and Don'ts\n\nHelp from you in contributing content would be very much appreciated!\nWhy do I want this?\nThis repository has practical content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.\nWho is this for?\nAnybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.\n\n\n\ud83d\udcb0 Looking for a job? Sign up for free with Triplebyte to efficiently interview with top tech companies! \ud83d\udcb0\n\n\nHow is this repository different?\nThere are many awesome books like Cracking the Coding Interview and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.\nAlso, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. \ud83d\ude0e\nLooking for Front End content?\nFront end-related content have been extracted out into a separate repository - Front End Interview Handbook.\nContents\nA Docusaurus website has been created to provide a better reading experience. Check out the website here!\nRelated\nIf you are interested in how data structures are implemented, check out Lago, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.\nContributing\nThere are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.\nOnline one-click setup for contributing\nYou can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:\n\nclone the tech-interview-handbook repo.\ninstall the dependencies.\nrun yarn start.\n\nSo that you can start straight away.\n\nContributors\nThis project exists thanks to all the people who contributed. [Contribute]. \nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\n\nSponsors\nSupport this project by becoming a sponsor. Your logo\/profile picture will show up here with a link to your website. [Become a sponsor]\n         \nMaintainers\n\nYangshun Tay\nLouie Tan\n\nDisclaimer\nI am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)\n","34":"GitHub R\u00e9sum\u00e9\nA service that creates a r\u00e9sum\u00e9 based on your GitHub repos\/activity.\nGitHub R\u00e9sum\u00e9 is opt-in. To make your resume visible, just star this project. To view your r\u00e9sum\u00e9, go to https:\/\/resume.github.io\/?yourusername or follow the instructions on the home page.\nGreat for all the tech-savy bosses who want to have a quick view of person's git\/github activity, before the interview.\nDevelopment\nTo run the app in development mode:\n$ rackup config.ru\n\n(You must have Ruby and the rack gem installed.)\n","35":"Moment.js\n\n\n\n\n\n\n\nA JavaScript date library for parsing, validating, manipulating, and formatting dates.\nProject Status\nMoment.js is a legacy project, now in maintenance mode.  In most cases, you should choose a different library.\nFor more details and recommendations, please see Project Status in the docs.\nThank you.\nResources\n\nDocumentation\nChangelog\nStack Overflow\n\nLicense\nMoment.js is freely distributable under the terms of the MIT license.\n\n","36":"\n\n\nMeteor is an ultra-simple environment for building modern web\napplications.\nWith Meteor you write apps:\n\nin modern JavaScript\nthat send data over the wire, rather than HTML\nusing your choice of popular open-source libraries\n\nTry a getting started tutorial:\n\nReact - new\nBlaze\nAngular\nVue\nSvelte\n\nNext, read the guide and the documentation.\nQuick Start\nOn Windows, the installer can be found at https:\/\/www.meteor.com\/install.\nOn Linux\/macOS, use this line:\ncurl https:\/\/install.meteor.com\/ | sh\nCreate a project:\nmeteor create try-meteor\nRun it:\ncd try-meteor\nmeteor\nDeveloper Resources\nBuilding an application with Meteor?\n\nDeploy on Galaxy hosting: https:\/\/www.meteor.com\/hosting\nAnnouncement list: sign up at https:\/\/www.meteor.com\/\nDiscussion forums: https:\/\/forums.meteor.com\/\nJoin the Meteor community Slack by clicking this invite link.\n\nInterested in helping or contributing to Meteor?  These resources will help:\n\nCore development guide\nContribution guidelines\nFeature requests\nIssue tracker\n\nUninstalling Meteor\nAside from a short launcher shell script, Meteor installs itself inside your\nhome directory. To uninstall Meteor, run:\nrm -rf ~\/.meteor\/\nsudo rm \/usr\/local\/bin\/meteor\nOn Windows, just run the uninstaller from your Control Panel.\n","37":"\n\n\n\n\n\n  React Router\n\n\n  Declarative routing for React\n\n\n\n\n\n\nDocs\nView the docs here\nMigrating from 2.x\/3.x?\n3.x docs\n2.x docs\nPackages\nThis repository is a monorepo that we manage using Lerna. That means that we actually publish several packages to npm from the same codebase, including:\n\n\n\nPackage\nVersion\nDocs\nDescription\n\n\n\n\nreact-router\n\n \nThe core of React Router\n\n\nreact-router-dom\n\n \nDOM bindings for React Router\n\n\nreact-router-native\n\n \nReact Native bindings for React Router\n\n\nreact-router-config\n\n\nStatic route config helpers\n\n\n\n\nRedux users: The react-router-redux package is now deprecated. See Redux Integration for a better approach.\n\nChanges\nDetailed release notes for a given version can be found on our releases page.\nFor change notes prior to version 4, please see the CHANGES.md file.\nFunding\nYou may provide financial support for this project by donating via Open Collective, attending one of our workshops, or purchasing one of our online courses. Thank you for your support!\nAbout\nreact-router is developed and maintained by React Training and many amazing contributors. If you're interested in learning more about what React can do for your company, please get in touch!\n","38":"clean-code-javascript\nTable of Contents\n\nIntroduction\nVariables\nFunctions\nObjects and Data Structures\nClasses\nSOLID\nTesting\nConcurrency\nError Handling\nFormatting\nComments\nTranslation\n\nIntroduction\n\nSoftware engineering principles, from Robert C. Martin's book\nClean Code,\nadapted for JavaScript. This is not a style guide. It's a guide to producing\nreadable, reusable, and refactorable software in JavaScript.\nNot every principle herein has to be strictly followed, and even fewer will be\nuniversally agreed upon. These are guidelines and nothing more, but they are\nones codified over many years of collective experience by the authors of\nClean Code.\nOur craft of software engineering is just a bit over 50 years old, and we are\nstill learning a lot. When software architecture is as old as architecture\nitself, maybe then we will have harder rules to follow. For now, let these\nguidelines serve as a touchstone by which to assess the quality of the\nJavaScript code that you and your team produce.\nOne more thing: knowing these won't immediately make you a better software\ndeveloper, and working with them for many years doesn't mean you won't make\nmistakes. Every piece of code starts as a first draft, like wet clay getting\nshaped into its final form. Finally, we chisel away the imperfections when\nwe review it with our peers. Don't beat yourself up for first drafts that need\nimprovement. Beat up the code instead!\nVariables\nUse meaningful and pronounceable variable names\nBad:\nconst yyyymmdstr = moment().format(\"YYYY\/MM\/DD\");\nGood:\nconst currentDate = moment().format(\"YYYY\/MM\/DD\");\n\u2b06 back to top\nUse the same vocabulary for the same type of variable\nBad:\ngetUserInfo();\ngetClientData();\ngetCustomerRecord();\nGood:\ngetUser();\n\u2b06 back to top\nUse searchable names\nWe will read more code than we will ever write. It's important that the code we\ndo write is readable and searchable. By not naming variables that end up\nbeing meaningful for understanding our program, we hurt our readers.\nMake your names searchable. Tools like\nbuddy.js and\nESLint\ncan help identify unnamed constants.\nBad:\n\/\/ What the heck is 86400000 for?\nsetTimeout(blastOff, 86400000);\nGood:\n\/\/ Declare them as capitalized named constants.\nconst MILLISECONDS_IN_A_DAY = 60 * 60 * 24 * 1000; \/\/86400000;\n\nsetTimeout(blastOff, MILLISECONDS_IN_A_DAY);\n\u2b06 back to top\nUse explanatory variables\nBad:\nconst address = \"One Infinite Loop, Cupertino 95014\";\nconst cityZipCodeRegex = \/^[^,\\\\]+[,\\\\\\s]+(.+?)\\s*(\\d{5})?$\/;\nsaveCityZipCode(\n  address.match(cityZipCodeRegex)[1],\n  address.match(cityZipCodeRegex)[2]\n);\nGood:\nconst address = \"One Infinite Loop, Cupertino 95014\";\nconst cityZipCodeRegex = \/^[^,\\\\]+[,\\\\\\s]+(.+?)\\s*(\\d{5})?$\/;\nconst [_, city, zipCode] = address.match(cityZipCodeRegex) || [];\nsaveCityZipCode(city, zipCode);\n\u2b06 back to top\nAvoid Mental Mapping\nExplicit is better than implicit.\nBad:\nconst locations = [\"Austin\", \"New York\", \"San Francisco\"];\nlocations.forEach(l => {\n  doStuff();\n  doSomeOtherStuff();\n  \/\/ ...\n  \/\/ ...\n  \/\/ ...\n  \/\/ Wait, what is `l` for again?\n  dispatch(l);\n});\nGood:\nconst locations = [\"Austin\", \"New York\", \"San Francisco\"];\nlocations.forEach(location => {\n  doStuff();\n  doSomeOtherStuff();\n  \/\/ ...\n  \/\/ ...\n  \/\/ ...\n  dispatch(location);\n});\n\u2b06 back to top\nDon't add unneeded context\nIf your class\/object name tells you something, don't repeat that in your\nvariable name.\nBad:\nconst Car = {\n  carMake: \"Honda\",\n  carModel: \"Accord\",\n  carColor: \"Blue\"\n};\n\nfunction paintCar(car) {\n  car.carColor = \"Red\";\n}\nGood:\nconst Car = {\n  make: \"Honda\",\n  model: \"Accord\",\n  color: \"Blue\"\n};\n\nfunction paintCar(car) {\n  car.color = \"Red\";\n}\n\u2b06 back to top\nUse default arguments instead of short circuiting or conditionals\nDefault arguments are often cleaner than short circuiting. Be aware that if you\nuse them, your function will only provide default values for undefined\narguments. Other \"falsy\" values such as '', \"\", false, null, 0, and\nNaN, will not be replaced by a default value.\nBad:\nfunction createMicrobrewery(name) {\n  const breweryName = name || \"Hipster Brew Co.\";\n  \/\/ ...\n}\nGood:\nfunction createMicrobrewery(name = \"Hipster Brew Co.\") {\n  \/\/ ...\n}\n\u2b06 back to top\nFunctions\nFunction arguments (2 or fewer ideally)\nLimiting the amount of function parameters is incredibly important because it\nmakes testing your function easier. Having more than three leads to a\ncombinatorial explosion where you have to test tons of different cases with\neach separate argument.\nOne or two arguments is the ideal case, and three should be avoided if possible.\nAnything more than that should be consolidated. Usually, if you have\nmore than two arguments then your function is trying to do too much. In cases\nwhere it's not, most of the time a higher-level object will suffice as an\nargument.\nSince JavaScript allows you to make objects on the fly, without a lot of class\nboilerplate, you can use an object if you are finding yourself needing a\nlot of arguments.\nTo make it obvious what properties the function expects, you can use the ES2015\/ES6\ndestructuring syntax. This has a few advantages:\n\nWhen someone looks at the function signature, it's immediately clear what\nproperties are being used.\nIt can be used to simulate named parameters.\nDestructuring also clones the specified primitive values of the argument\nobject passed into the function. This can help prevent side effects. Note:\nobjects and arrays that are destructured from the argument object are NOT\ncloned.\nLinters can warn you about unused properties, which would be impossible\nwithout destructuring.\n\nBad:\nfunction createMenu(title, body, buttonText, cancellable) {\n  \/\/ ...\n}\n\ncreateMenu(\"Foo\", \"Bar\", \"Baz\", true);\nGood:\nfunction createMenu({ title, body, buttonText, cancellable }) {\n  \/\/ ...\n}\n\ncreateMenu({\n  title: \"Foo\",\n  body: \"Bar\",\n  buttonText: \"Baz\",\n  cancellable: true\n});\n\u2b06 back to top\nFunctions should do one thing\nThis is by far the most important rule in software engineering. When functions\ndo more than one thing, they are harder to compose, test, and reason about.\nWhen you can isolate a function to just one action, it can be refactored\neasily and your code will read much cleaner. If you take nothing else away from\nthis guide other than this, you'll be ahead of many developers.\nBad:\nfunction emailClients(clients) {\n  clients.forEach(client => {\n    const clientRecord = database.lookup(client);\n    if (clientRecord.isActive()) {\n      email(client);\n    }\n  });\n}\nGood:\nfunction emailActiveClients(clients) {\n  clients.filter(isActiveClient).forEach(email);\n}\n\nfunction isActiveClient(client) {\n  const clientRecord = database.lookup(client);\n  return clientRecord.isActive();\n}\n\u2b06 back to top\nFunction names should say what they do\nBad:\nfunction addToDate(date, month) {\n  \/\/ ...\n}\n\nconst date = new Date();\n\n\/\/ It's hard to tell from the function name what is added\naddToDate(date, 1);\nGood:\nfunction addMonthToDate(month, date) {\n  \/\/ ...\n}\n\nconst date = new Date();\naddMonthToDate(1, date);\n\u2b06 back to top\nFunctions should only be one level of abstraction\nWhen you have more than one level of abstraction your function is usually\ndoing too much. Splitting up functions leads to reusability and easier\ntesting.\nBad:\nfunction parseBetterJSAlternative(code) {\n  const REGEXES = [\n    \/\/ ...\n  ];\n\n  const statements = code.split(\" \");\n  const tokens = [];\n  REGEXES.forEach(REGEX => {\n    statements.forEach(statement => {\n      \/\/ ...\n    });\n  });\n\n  const ast = [];\n  tokens.forEach(token => {\n    \/\/ lex...\n  });\n\n  ast.forEach(node => {\n    \/\/ parse...\n  });\n}\nGood:\nfunction parseBetterJSAlternative(code) {\n  const tokens = tokenize(code);\n  const syntaxTree = parse(tokens);\n  syntaxTree.forEach(node => {\n    \/\/ parse...\n  });\n}\n\nfunction tokenize(code) {\n  const REGEXES = [\n    \/\/ ...\n  ];\n\n  const statements = code.split(\" \");\n  const tokens = [];\n  REGEXES.forEach(REGEX => {\n    statements.forEach(statement => {\n      tokens.push(\/* ... *\/);\n    });\n  });\n\n  return tokens;\n}\n\nfunction parse(tokens) {\n  const syntaxTree = [];\n  tokens.forEach(token => {\n    syntaxTree.push(\/* ... *\/);\n  });\n\n  return syntaxTree;\n}\n\u2b06 back to top\nRemove duplicate code\nDo your absolute best to avoid duplicate code. Duplicate code is bad because it\nmeans that there's more than one place to alter something if you need to change\nsome logic.\nImagine if you run a restaurant and you keep track of your inventory: all your\ntomatoes, onions, garlic, spices, etc. If you have multiple lists that\nyou keep this on, then all have to be updated when you serve a dish with\ntomatoes in them. If you only have one list, there's only one place to update!\nOftentimes you have duplicate code because you have two or more slightly\ndifferent things, that share a lot in common, but their differences force you\nto have two or more separate functions that do much of the same things. Removing\nduplicate code means creating an abstraction that can handle this set of\ndifferent things with just one function\/module\/class.\nGetting the abstraction right is critical, that's why you should follow the\nSOLID principles laid out in the Classes section. Bad abstractions can be\nworse than duplicate code, so be careful! Having said this, if you can make\na good abstraction, do it! Don't repeat yourself, otherwise you'll find yourself\nupdating multiple places anytime you want to change one thing.\nBad:\nfunction showDeveloperList(developers) {\n  developers.forEach(developer => {\n    const expectedSalary = developer.calculateExpectedSalary();\n    const experience = developer.getExperience();\n    const githubLink = developer.getGithubLink();\n    const data = {\n      expectedSalary,\n      experience,\n      githubLink\n    };\n\n    render(data);\n  });\n}\n\nfunction showManagerList(managers) {\n  managers.forEach(manager => {\n    const expectedSalary = manager.calculateExpectedSalary();\n    const experience = manager.getExperience();\n    const portfolio = manager.getMBAProjects();\n    const data = {\n      expectedSalary,\n      experience,\n      portfolio\n    };\n\n    render(data);\n  });\n}\nGood:\nfunction showEmployeeList(employees) {\n  employees.forEach(employee => {\n    const expectedSalary = employee.calculateExpectedSalary();\n    const experience = employee.getExperience();\n\n    const data = {\n      expectedSalary,\n      experience\n    };\n\n    switch (employee.type) {\n      case \"manager\":\n        data.portfolio = employee.getMBAProjects();\n        break;\n      case \"developer\":\n        data.githubLink = employee.getGithubLink();\n        break;\n    }\n\n    render(data);\n  });\n}\n\u2b06 back to top\nSet default objects with Object.assign\nBad:\nconst menuConfig = {\n  title: null,\n  body: \"Bar\",\n  buttonText: null,\n  cancellable: true\n};\n\nfunction createMenu(config) {\n  config.title = config.title || \"Foo\";\n  config.body = config.body || \"Bar\";\n  config.buttonText = config.buttonText || \"Baz\";\n  config.cancellable =\n    config.cancellable !== undefined ? config.cancellable : true;\n}\n\ncreateMenu(menuConfig);\nGood:\nconst menuConfig = {\n  title: \"Order\",\n  \/\/ User did not include 'body' key\n  buttonText: \"Send\",\n  cancellable: true\n};\n\nfunction createMenu(config) {\n  let finalConfig = Object.assign(\n    {\n      title: \"Foo\",\n      body: \"Bar\",\n      buttonText: \"Baz\",\n      cancellable: true\n    },\n    config\n  );\n  return finalConfig\n  \/\/ config now equals: {title: \"Order\", body: \"Bar\", buttonText: \"Send\", cancellable: true}\n  \/\/ ...\n}\n\ncreateMenu(menuConfig);\n\u2b06 back to top\nDon't use flags as function parameters\nFlags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.\nBad:\nfunction createFile(name, temp) {\n  if (temp) {\n    fs.create(`.\/temp\/${name}`);\n  } else {\n    fs.create(name);\n  }\n}\nGood:\nfunction createFile(name) {\n  fs.create(name);\n}\n\nfunction createTempFile(name) {\n  createFile(`.\/temp\/${name}`);\n}\n\u2b06 back to top\nAvoid Side Effects (part 1)\nA function produces a side effect if it does anything other than take a value in\nand return another value or values. A side effect could be writing to a file,\nmodifying some global variable, or accidentally wiring all your money to a\nstranger.\nNow, you do need to have side effects in a program on occasion. Like the previous\nexample, you might need to write to a file. What you want to do is to\ncentralize where you are doing this. Don't have several functions and classes\nthat write to a particular file. Have one service that does it. One and only one.\nThe main point is to avoid common pitfalls like sharing state between objects\nwithout any structure, using mutable data types that can be written to by anything,\nand not centralizing where your side effects occur. If you can do this, you will\nbe happier than the vast majority of other programmers.\nBad:\n\/\/ Global variable referenced by following function.\n\/\/ If we had another function that used this name, now it'd be an array and it could break it.\nlet name = \"Ryan McDermott\";\n\nfunction splitIntoFirstAndLastName() {\n  name = name.split(\" \");\n}\n\nsplitIntoFirstAndLastName();\n\nconsole.log(name); \/\/ ['Ryan', 'McDermott'];\nGood:\nfunction splitIntoFirstAndLastName(name) {\n  return name.split(\" \");\n}\n\nconst name = \"Ryan McDermott\";\nconst newName = splitIntoFirstAndLastName(name);\n\nconsole.log(name); \/\/ 'Ryan McDermott';\nconsole.log(newName); \/\/ ['Ryan', 'McDermott'];\n\u2b06 back to top\nAvoid Side Effects (part 2)\nIn JavaScript, some values are unchangeable (immutable) and some are changeable\n(mutable). Objects and arrays are two kinds of mutable values so it's important\nto handle them carefully when they're passed as parameters to a function. A\nJavaScript function can change an object's properties or alter the contents of\nan array which could easily cause bugs elsewhere.\nSuppose there's a function that accepts an array parameter representing a\nshopping cart. If the function makes a change in that shopping cart array -\nby adding an item to purchase, for example - then any other function that\nuses that same cart array will be affected by this addition. That may be\ngreat, however it could also be bad. Let's imagine a bad situation:\nThe user clicks the \"Purchase\" button which calls a purchase function that\nspawns a network request and sends the cart array to the server. Because\nof a bad network connection, the purchase function has to keep retrying the\nrequest. Now, what if in the meantime the user accidentally clicks an \"Add to Cart\"\nbutton on an item they don't actually want before the network request begins?\nIf that happens and the network request begins, then that purchase function\nwill send the accidentally added item because the cart array was modified.\nA great solution would be for the addItemToCart function to always clone the\ncart, edit it, and return the clone. This would ensure that functions that are still\nusing the old shopping cart wouldn't be affected by the changes.\nTwo caveats to mention to this approach:\n\n\nThere might be cases where you actually want to modify the input object,\nbut when you adopt this programming practice you will find that those cases\nare pretty rare. Most things can be refactored to have no side effects!\n\n\nCloning big objects can be very expensive in terms of performance. Luckily,\nthis isn't a big issue in practice because there are\ngreat libraries that allow\nthis kind of programming approach to be fast and not as memory intensive as\nit would be for you to manually clone objects and arrays.\n\n\nBad:\nconst addItemToCart = (cart, item) => {\n  cart.push({ item, date: Date.now() });\n};\nGood:\nconst addItemToCart = (cart, item) => {\n  return [...cart, { item, date: Date.now() }];\n};\n\u2b06 back to top\nDon't write to global functions\nPolluting globals is a bad practice in JavaScript because you could clash with another\nlibrary and the user of your API would be none-the-wiser until they get an\nexception in production. Let's think about an example: what if you wanted to\nextend JavaScript's native Array method to have a diff method that could\nshow the difference between two arrays? You could write your new function\nto the Array.prototype, but it could clash with another library that tried\nto do the same thing. What if that other library was just using diff to find\nthe difference between the first and last elements of an array? This is why it\nwould be much better to just use ES2015\/ES6 classes and simply extend the Array global.\nBad:\nArray.prototype.diff = function diff(comparisonArray) {\n  const hash = new Set(comparisonArray);\n  return this.filter(elem => !hash.has(elem));\n};\nGood:\nclass SuperArray extends Array {\n  diff(comparisonArray) {\n    const hash = new Set(comparisonArray);\n    return this.filter(elem => !hash.has(elem));\n  }\n}\n\u2b06 back to top\nFavor functional programming over imperative programming\nJavaScript isn't a functional language in the way that Haskell is, but it has\na functional flavor to it. Functional languages can be cleaner and easier to test.\nFavor this style of programming when you can.\nBad:\nconst programmerOutput = [\n  {\n    name: \"Uncle Bobby\",\n    linesOfCode: 500\n  },\n  {\n    name: \"Suzie Q\",\n    linesOfCode: 1500\n  },\n  {\n    name: \"Jimmy Gosling\",\n    linesOfCode: 150\n  },\n  {\n    name: \"Gracie Hopper\",\n    linesOfCode: 1000\n  }\n];\n\nlet totalOutput = 0;\n\nfor (let i = 0; i < programmerOutput.length; i++) {\n  totalOutput += programmerOutput[i].linesOfCode;\n}\nGood:\nconst programmerOutput = [\n  {\n    name: \"Uncle Bobby\",\n    linesOfCode: 500\n  },\n  {\n    name: \"Suzie Q\",\n    linesOfCode: 1500\n  },\n  {\n    name: \"Jimmy Gosling\",\n    linesOfCode: 150\n  },\n  {\n    name: \"Gracie Hopper\",\n    linesOfCode: 1000\n  }\n];\n\nconst totalOutput = programmerOutput.reduce(\n  (totalLines, output) => totalLines + output.linesOfCode,\n  0\n);\n\u2b06 back to top\nEncapsulate conditionals\nBad:\nif (fsm.state === \"fetching\" && isEmpty(listNode)) {\n  \/\/ ...\n}\nGood:\nfunction shouldShowSpinner(fsm, listNode) {\n  return fsm.state === \"fetching\" && isEmpty(listNode);\n}\n\nif (shouldShowSpinner(fsmInstance, listNodeInstance)) {\n  \/\/ ...\n}\n\u2b06 back to top\nAvoid negative conditionals\nBad:\nfunction isDOMNodeNotPresent(node) {\n  \/\/ ...\n}\n\nif (!isDOMNodeNotPresent(node)) {\n  \/\/ ...\n}\nGood:\nfunction isDOMNodePresent(node) {\n  \/\/ ...\n}\n\nif (isDOMNodePresent(node)) {\n  \/\/ ...\n}\n\u2b06 back to top\nAvoid conditionals\nThis seems like an impossible task. Upon first hearing this, most people say,\n\"how am I supposed to do anything without an if statement?\" The answer is that\nyou can use polymorphism to achieve the same task in many cases. The second\nquestion is usually, \"well that's great but why would I want to do that?\" The\nanswer is a previous clean code concept we learned: a function should only do\none thing. When you have classes and functions that have if statements, you\nare telling your user that your function does more than one thing. Remember,\njust do one thing.\nBad:\nclass Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    switch (this.type) {\n      case \"777\":\n        return this.getMaxAltitude() - this.getPassengerCount();\n      case \"Air Force One\":\n        return this.getMaxAltitude();\n      case \"Cessna\":\n        return this.getMaxAltitude() - this.getFuelExpenditure();\n    }\n  }\n}\nGood:\nclass Airplane {\n  \/\/ ...\n}\n\nclass Boeing777 extends Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    return this.getMaxAltitude() - this.getPassengerCount();\n  }\n}\n\nclass AirForceOne extends Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    return this.getMaxAltitude();\n  }\n}\n\nclass Cessna extends Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    return this.getMaxAltitude() - this.getFuelExpenditure();\n  }\n}\n\u2b06 back to top\nAvoid type-checking (part 1)\nJavaScript is untyped, which means your functions can take any type of argument.\nSometimes you are bitten by this freedom and it becomes tempting to do\ntype-checking in your functions. There are many ways to avoid having to do this.\nThe first thing to consider is consistent APIs.\nBad:\nfunction travelToTexas(vehicle) {\n  if (vehicle instanceof Bicycle) {\n    vehicle.pedal(this.currentLocation, new Location(\"texas\"));\n  } else if (vehicle instanceof Car) {\n    vehicle.drive(this.currentLocation, new Location(\"texas\"));\n  }\n}\nGood:\nfunction travelToTexas(vehicle) {\n  vehicle.move(this.currentLocation, new Location(\"texas\"));\n}\n\u2b06 back to top\nAvoid type-checking (part 2)\nIf you are working with basic primitive values like strings and integers,\nand you can't use polymorphism but you still feel the need to type-check,\nyou should consider using TypeScript. It is an excellent alternative to normal\nJavaScript, as it provides you with static typing on top of standard JavaScript\nsyntax. The problem with manually type-checking normal JavaScript is that\ndoing it well requires so much extra verbiage that the faux \"type-safety\" you get\ndoesn't make up for the lost readability. Keep your JavaScript clean, write\ngood tests, and have good code reviews. Otherwise, do all of that but with\nTypeScript (which, like I said, is a great alternative!).\nBad:\nfunction combine(val1, val2) {\n  if (\n    (typeof val1 === \"number\" && typeof val2 === \"number\") ||\n    (typeof val1 === \"string\" && typeof val2 === \"string\")\n  ) {\n    return val1 + val2;\n  }\n\n  throw new Error(\"Must be of type String or Number\");\n}\nGood:\nfunction combine(val1, val2) {\n  return val1 + val2;\n}\n\u2b06 back to top\nDon't over-optimize\nModern browsers do a lot of optimization under-the-hood at runtime. A lot of\ntimes, if you are optimizing then you are just wasting your time. There are good\nresources\nfor seeing where optimization is lacking. Target those in the meantime, until\nthey are fixed if they can be.\nBad:\n\/\/ On old browsers, each iteration with uncached `list.length` would be costly\n\/\/ because of `list.length` recomputation. In modern browsers, this is optimized.\nfor (let i = 0, len = list.length; i < len; i++) {\n  \/\/ ...\n}\nGood:\nfor (let i = 0; i < list.length; i++) {\n  \/\/ ...\n}\n\u2b06 back to top\nRemove dead code\nDead code is just as bad as duplicate code. There's no reason to keep it in\nyour codebase. If it's not being called, get rid of it! It will still be safe\nin your version history if you still need it.\nBad:\nfunction oldRequestModule(url) {\n  \/\/ ...\n}\n\nfunction newRequestModule(url) {\n  \/\/ ...\n}\n\nconst req = newRequestModule;\ninventoryTracker(\"apples\", req, \"www.inventory-awesome.io\");\nGood:\nfunction newRequestModule(url) {\n  \/\/ ...\n}\n\nconst req = newRequestModule;\ninventoryTracker(\"apples\", req, \"www.inventory-awesome.io\");\n\u2b06 back to top\nObjects and Data Structures\nUse getters and setters\nUsing getters and setters to access data on objects could be better than simply\nlooking for a property on an object. \"Why?\" you might ask. Well, here's an\nunorganized list of reasons why:\n\nWhen you want to do more beyond getting an object property, you don't have\nto look up and change every accessor in your codebase.\nMakes adding validation simple when doing a set.\nEncapsulates the internal representation.\nEasy to add logging and error handling when getting and setting.\nYou can lazy load your object's properties, let's say getting it from a\nserver.\n\nBad:\nfunction makeBankAccount() {\n  \/\/ ...\n\n  return {\n    balance: 0\n    \/\/ ...\n  };\n}\n\nconst account = makeBankAccount();\naccount.balance = 100;\nGood:\nfunction makeBankAccount() {\n  \/\/ this one is private\n  let balance = 0;\n\n  \/\/ a \"getter\", made public via the returned object below\n  function getBalance() {\n    return balance;\n  }\n\n  \/\/ a \"setter\", made public via the returned object below\n  function setBalance(amount) {\n    \/\/ ... validate before updating the balance\n    balance = amount;\n  }\n\n  return {\n    \/\/ ...\n    getBalance,\n    setBalance\n  };\n}\n\nconst account = makeBankAccount();\naccount.setBalance(100);\n\u2b06 back to top\nMake objects have private members\nThis can be accomplished through closures (for ES5 and below).\nBad:\nconst Employee = function(name) {\n  this.name = name;\n};\n\nEmployee.prototype.getName = function getName() {\n  return this.name;\n};\n\nconst employee = new Employee(\"John Doe\");\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: John Doe\ndelete employee.name;\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: undefined\nGood:\nfunction makeEmployee(name) {\n  return {\n    getName() {\n      return name;\n    }\n  };\n}\n\nconst employee = makeEmployee(\"John Doe\");\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: John Doe\ndelete employee.name;\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: John Doe\n\u2b06 back to top\nClasses\nPrefer ES2015\/ES6 classes over ES5 plain functions\nIt's very difficult to get readable class inheritance, construction, and method\ndefinitions for classical ES5 classes. If you need inheritance (and be aware\nthat you might not), then prefer ES2015\/ES6 classes. However, prefer small functions over\nclasses until you find yourself needing larger and more complex objects.\nBad:\nconst Animal = function(age) {\n  if (!(this instanceof Animal)) {\n    throw new Error(\"Instantiate Animal with `new`\");\n  }\n\n  this.age = age;\n};\n\nAnimal.prototype.move = function move() {};\n\nconst Mammal = function(age, furColor) {\n  if (!(this instanceof Mammal)) {\n    throw new Error(\"Instantiate Mammal with `new`\");\n  }\n\n  Animal.call(this, age);\n  this.furColor = furColor;\n};\n\nMammal.prototype = Object.create(Animal.prototype);\nMammal.prototype.constructor = Mammal;\nMammal.prototype.liveBirth = function liveBirth() {};\n\nconst Human = function(age, furColor, languageSpoken) {\n  if (!(this instanceof Human)) {\n    throw new Error(\"Instantiate Human with `new`\");\n  }\n\n  Mammal.call(this, age, furColor);\n  this.languageSpoken = languageSpoken;\n};\n\nHuman.prototype = Object.create(Mammal.prototype);\nHuman.prototype.constructor = Human;\nHuman.prototype.speak = function speak() {};\nGood:\nclass Animal {\n  constructor(age) {\n    this.age = age;\n  }\n\n  move() {\n    \/* ... *\/\n  }\n}\n\nclass Mammal extends Animal {\n  constructor(age, furColor) {\n    super(age);\n    this.furColor = furColor;\n  }\n\n  liveBirth() {\n    \/* ... *\/\n  }\n}\n\nclass Human extends Mammal {\n  constructor(age, furColor, languageSpoken) {\n    super(age, furColor);\n    this.languageSpoken = languageSpoken;\n  }\n\n  speak() {\n    \/* ... *\/\n  }\n}\n\u2b06 back to top\nUse method chaining\nThis pattern is very useful in JavaScript and you see it in many libraries such\nas jQuery and Lodash. It allows your code to be expressive, and less verbose.\nFor that reason, I say, use method chaining and take a look at how clean your code\nwill be. In your class functions, simply return this at the end of every function,\nand you can chain further class methods onto it.\nBad:\nclass Car {\n  constructor(make, model, color) {\n    this.make = make;\n    this.model = model;\n    this.color = color;\n  }\n\n  setMake(make) {\n    this.make = make;\n  }\n\n  setModel(model) {\n    this.model = model;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  save() {\n    console.log(this.make, this.model, this.color);\n  }\n}\n\nconst car = new Car(\"Ford\", \"F-150\", \"red\");\ncar.setColor(\"pink\");\ncar.save();\nGood:\nclass Car {\n  constructor(make, model, color) {\n    this.make = make;\n    this.model = model;\n    this.color = color;\n  }\n\n  setMake(make) {\n    this.make = make;\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n\n  setModel(model) {\n    this.model = model;\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n\n  setColor(color) {\n    this.color = color;\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n\n  save() {\n    console.log(this.make, this.model, this.color);\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n}\n\nconst car = new Car(\"Ford\", \"F-150\", \"red\").setColor(\"pink\").save();\n\u2b06 back to top\nPrefer composition over inheritance\nAs stated famously in Design Patterns by the Gang of Four,\nyou should prefer composition over inheritance where you can. There are lots of\ngood reasons to use inheritance and lots of good reasons to use composition.\nThe main point for this maxim is that if your mind instinctively goes for\ninheritance, try to think if composition could model your problem better. In some\ncases it can.\nYou might be wondering then, \"when should I use inheritance?\" It\ndepends on your problem at hand, but this is a decent list of when inheritance\nmakes more sense than composition:\n\nYour inheritance represents an \"is-a\" relationship and not a \"has-a\"\nrelationship (Human->Animal vs. User->UserDetails).\nYou can reuse code from the base classes (Humans can move like all animals).\nYou want to make global changes to derived classes by changing a base class.\n(Change the caloric expenditure of all animals when they move).\n\nBad:\nclass Employee {\n  constructor(name, email) {\n    this.name = name;\n    this.email = email;\n  }\n\n  \/\/ ...\n}\n\n\/\/ Bad because Employees \"have\" tax data. EmployeeTaxData is not a type of Employee\nclass EmployeeTaxData extends Employee {\n  constructor(ssn, salary) {\n    super();\n    this.ssn = ssn;\n    this.salary = salary;\n  }\n\n  \/\/ ...\n}\nGood:\nclass EmployeeTaxData {\n  constructor(ssn, salary) {\n    this.ssn = ssn;\n    this.salary = salary;\n  }\n\n  \/\/ ...\n}\n\nclass Employee {\n  constructor(name, email) {\n    this.name = name;\n    this.email = email;\n  }\n\n  setTaxData(ssn, salary) {\n    this.taxData = new EmployeeTaxData(ssn, salary);\n  }\n  \/\/ ...\n}\n\u2b06 back to top\nSOLID\nSingle Responsibility Principle (SRP)\nAs stated in Clean Code, \"There should never be more than one reason for a class\nto change\". It's tempting to jam-pack a class with a lot of functionality, like\nwhen you can only take one suitcase on your flight. The issue with this is\nthat your class won't be conceptually cohesive and it will give it many reasons\nto change. Minimizing the amount of times you need to change a class is important.\nIt's important because if too much functionality is in one class and you modify\na piece of it, it can be difficult to understand how that will affect other\ndependent modules in your codebase.\nBad:\nclass UserSettings {\n  constructor(user) {\n    this.user = user;\n  }\n\n  changeSettings(settings) {\n    if (this.verifyCredentials()) {\n      \/\/ ...\n    }\n  }\n\n  verifyCredentials() {\n    \/\/ ...\n  }\n}\nGood:\nclass UserAuth {\n  constructor(user) {\n    this.user = user;\n  }\n\n  verifyCredentials() {\n    \/\/ ...\n  }\n}\n\nclass UserSettings {\n  constructor(user) {\n    this.user = user;\n    this.auth = new UserAuth(user);\n  }\n\n  changeSettings(settings) {\n    if (this.auth.verifyCredentials()) {\n      \/\/ ...\n    }\n  }\n}\n\u2b06 back to top\nOpen\/Closed Principle (OCP)\nAs stated by Bertrand Meyer, \"software entities (classes, modules, functions,\netc.) should be open for extension, but closed for modification.\" What does that\nmean though? This principle basically states that you should allow users to\nadd new functionalities without changing existing code.\nBad:\nclass AjaxAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"ajaxAdapter\";\n  }\n}\n\nclass NodeAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"nodeAdapter\";\n  }\n}\n\nclass HttpRequester {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  fetch(url) {\n    if (this.adapter.name === \"ajaxAdapter\") {\n      return makeAjaxCall(url).then(response => {\n        \/\/ transform response and return\n      });\n    } else if (this.adapter.name === \"nodeAdapter\") {\n      return makeHttpCall(url).then(response => {\n        \/\/ transform response and return\n      });\n    }\n  }\n}\n\nfunction makeAjaxCall(url) {\n  \/\/ request and return promise\n}\n\nfunction makeHttpCall(url) {\n  \/\/ request and return promise\n}\nGood:\nclass AjaxAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"ajaxAdapter\";\n  }\n\n  request(url) {\n    \/\/ request and return promise\n  }\n}\n\nclass NodeAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"nodeAdapter\";\n  }\n\n  request(url) {\n    \/\/ request and return promise\n  }\n}\n\nclass HttpRequester {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  fetch(url) {\n    return this.adapter.request(url).then(response => {\n      \/\/ transform response and return\n    });\n  }\n}\n\u2b06 back to top\nLiskov Substitution Principle (LSP)\nThis is a scary term for a very simple concept. It's formally defined as \"If S\nis a subtype of T, then objects of type T may be replaced with objects of type S\n(i.e., objects of type S may substitute objects of type T) without altering any\nof the desirable properties of that program (correctness, task performed,\netc.).\" That's an even scarier definition.\nThe best explanation for this is if you have a parent class and a child class,\nthen the base class and child class can be used interchangeably without getting\nincorrect results. This might still be confusing, so let's take a look at the\nclassic Square-Rectangle example. Mathematically, a square is a rectangle, but\nif you model it using the \"is-a\" relationship via inheritance, you quickly\nget into trouble.\nBad:\nclass Rectangle {\n  constructor() {\n    this.width = 0;\n    this.height = 0;\n  }\n\n  setColor(color) {\n    \/\/ ...\n  }\n\n  render(area) {\n    \/\/ ...\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n\nclass Square extends Rectangle {\n  setWidth(width) {\n    this.width = width;\n    this.height = width;\n  }\n\n  setHeight(height) {\n    this.width = height;\n    this.height = height;\n  }\n}\n\nfunction renderLargeRectangles(rectangles) {\n  rectangles.forEach(rectangle => {\n    rectangle.setWidth(4);\n    rectangle.setHeight(5);\n    const area = rectangle.getArea(); \/\/ BAD: Returns 25 for Square. Should be 20.\n    rectangle.render(area);\n  });\n}\n\nconst rectangles = [new Rectangle(), new Rectangle(), new Square()];\nrenderLargeRectangles(rectangles);\nGood:\nclass Shape {\n  setColor(color) {\n    \/\/ ...\n  }\n\n  render(area) {\n    \/\/ ...\n  }\n}\n\nclass Rectangle extends Shape {\n  constructor(width, height) {\n    super();\n    this.width = width;\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n\nclass Square extends Shape {\n  constructor(length) {\n    super();\n    this.length = length;\n  }\n\n  getArea() {\n    return this.length * this.length;\n  }\n}\n\nfunction renderLargeShapes(shapes) {\n  shapes.forEach(shape => {\n    const area = shape.getArea();\n    shape.render(area);\n  });\n}\n\nconst shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];\nrenderLargeShapes(shapes);\n\u2b06 back to top\nInterface Segregation Principle (ISP)\nJavaScript doesn't have interfaces so this principle doesn't apply as strictly\nas others. However, it's important and relevant even with JavaScript's lack of\ntype system.\nISP states that \"Clients should not be forced to depend upon interfaces that\nthey do not use.\" Interfaces are implicit contracts in JavaScript because of\nduck typing.\nA good example to look at that demonstrates this principle in JavaScript is for\nclasses that require large settings objects. Not requiring clients to setup\nhuge amounts of options is beneficial, because most of the time they won't need\nall of the settings. Making them optional helps prevent having a\n\"fat interface\".\nBad:\nclass DOMTraverser {\n  constructor(settings) {\n    this.settings = settings;\n    this.setup();\n  }\n\n  setup() {\n    this.rootNode = this.settings.rootNode;\n    this.settings.animationModule.setup();\n  }\n\n  traverse() {\n    \/\/ ...\n  }\n}\n\nconst $ = new DOMTraverser({\n  rootNode: document.getElementsByTagName(\"body\"),\n  animationModule() {} \/\/ Most of the time, we won't need to animate when traversing.\n  \/\/ ...\n});\nGood:\nclass DOMTraverser {\n  constructor(settings) {\n    this.settings = settings;\n    this.options = settings.options;\n    this.setup();\n  }\n\n  setup() {\n    this.rootNode = this.settings.rootNode;\n    this.setupOptions();\n  }\n\n  setupOptions() {\n    if (this.options.animationModule) {\n      \/\/ ...\n    }\n  }\n\n  traverse() {\n    \/\/ ...\n  }\n}\n\nconst $ = new DOMTraverser({\n  rootNode: document.getElementsByTagName(\"body\"),\n  options: {\n    animationModule() {}\n  }\n});\n\u2b06 back to top\nDependency Inversion Principle (DIP)\nThis principle states two essential things:\n\nHigh-level modules should not depend on low-level modules. Both should\ndepend on abstractions.\nAbstractions should not depend upon details. Details should depend on\nabstractions.\n\nThis can be hard to understand at first, but if you've worked with AngularJS,\nyou've seen an implementation of this principle in the form of Dependency\nInjection (DI). While they are not identical concepts, DIP keeps high-level\nmodules from knowing the details of its low-level modules and setting them up.\nIt can accomplish this through DI. A huge benefit of this is that it reduces\nthe coupling between modules. Coupling is a very bad development pattern because\nit makes your code hard to refactor.\nAs stated previously, JavaScript doesn't have interfaces so the abstractions\nthat are depended upon are implicit contracts. That is to say, the methods\nand properties that an object\/class exposes to another object\/class. In the\nexample below, the implicit contract is that any Request module for an\nInventoryTracker will have a requestItems method.\nBad:\nclass InventoryRequester {\n  constructor() {\n    this.REQ_METHODS = [\"HTTP\"];\n  }\n\n  requestItem(item) {\n    \/\/ ...\n  }\n}\n\nclass InventoryTracker {\n  constructor(items) {\n    this.items = items;\n\n    \/\/ BAD: We have created a dependency on a specific request implementation.\n    \/\/ We should just have requestItems depend on a request method: `request`\n    this.requester = new InventoryRequester();\n  }\n\n  requestItems() {\n    this.items.forEach(item => {\n      this.requester.requestItem(item);\n    });\n  }\n}\n\nconst inventoryTracker = new InventoryTracker([\"apples\", \"bananas\"]);\ninventoryTracker.requestItems();\nGood:\nclass InventoryTracker {\n  constructor(items, requester) {\n    this.items = items;\n    this.requester = requester;\n  }\n\n  requestItems() {\n    this.items.forEach(item => {\n      this.requester.requestItem(item);\n    });\n  }\n}\n\nclass InventoryRequesterV1 {\n  constructor() {\n    this.REQ_METHODS = [\"HTTP\"];\n  }\n\n  requestItem(item) {\n    \/\/ ...\n  }\n}\n\nclass InventoryRequesterV2 {\n  constructor() {\n    this.REQ_METHODS = [\"WS\"];\n  }\n\n  requestItem(item) {\n    \/\/ ...\n  }\n}\n\n\/\/ By constructing our dependencies externally and injecting them, we can easily\n\/\/ substitute our request module for a fancy new one that uses WebSockets.\nconst inventoryTracker = new InventoryTracker(\n  [\"apples\", \"bananas\"],\n  new InventoryRequesterV2()\n);\ninventoryTracker.requestItems();\n\u2b06 back to top\nTesting\nTesting is more important than shipping. If you have no tests or an\ninadequate amount, then every time you ship code you won't be sure that you\ndidn't break anything. Deciding on what constitutes an adequate amount is up\nto your team, but having 100% coverage (all statements and branches) is how\nyou achieve very high confidence and developer peace of mind. This means that\nin addition to having a great testing framework, you also need to use a\ngood coverage tool.\nThere's no excuse to not write tests. There are plenty of good JS test frameworks, so find one that your team prefers.\nWhen you find one that works for your team, then aim to always write tests\nfor every new feature\/module you introduce. If your preferred method is\nTest Driven Development (TDD), that is great, but the main point is to just\nmake sure you are reaching your coverage goals before launching any feature,\nor refactoring an existing one.\nSingle concept per test\nBad:\nimport assert from \"assert\";\n\ndescribe(\"MomentJS\", () => {\n  it(\"handles date boundaries\", () => {\n    let date;\n\n    date = new MomentJS(\"1\/1\/2015\");\n    date.addDays(30);\n    assert.equal(\"1\/31\/2015\", date);\n\n    date = new MomentJS(\"2\/1\/2016\");\n    date.addDays(28);\n    assert.equal(\"02\/29\/2016\", date);\n\n    date = new MomentJS(\"2\/1\/2015\");\n    date.addDays(28);\n    assert.equal(\"03\/01\/2015\", date);\n  });\n});\nGood:\nimport assert from \"assert\";\n\ndescribe(\"MomentJS\", () => {\n  it(\"handles 30-day months\", () => {\n    const date = new MomentJS(\"1\/1\/2015\");\n    date.addDays(30);\n    assert.equal(\"1\/31\/2015\", date);\n  });\n\n  it(\"handles leap year\", () => {\n    const date = new MomentJS(\"2\/1\/2016\");\n    date.addDays(28);\n    assert.equal(\"02\/29\/2016\", date);\n  });\n\n  it(\"handles non-leap year\", () => {\n    const date = new MomentJS(\"2\/1\/2015\");\n    date.addDays(28);\n    assert.equal(\"03\/01\/2015\", date);\n  });\n});\n\u2b06 back to top\nConcurrency\nUse Promises, not callbacks\nCallbacks aren't clean, and they cause excessive amounts of nesting. With ES2015\/ES6,\nPromises are a built-in global type. Use them!\nBad:\nimport { get } from \"request\";\nimport { writeFile } from \"fs\";\n\nget(\n  \"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\",\n  (requestErr, response, body) => {\n    if (requestErr) {\n      console.error(requestErr);\n    } else {\n      writeFile(\"article.html\", body, writeErr => {\n        if (writeErr) {\n          console.error(writeErr);\n        } else {\n          console.log(\"File written\");\n        }\n      });\n    }\n  }\n);\nGood:\nimport { get } from \"request-promise\";\nimport { writeFile } from \"fs-extra\";\n\nget(\"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\")\n  .then(body => {\n    return writeFile(\"article.html\", body);\n  })\n  .then(() => {\n    console.log(\"File written\");\n  })\n  .catch(err => {\n    console.error(err);\n  });\n\u2b06 back to top\nAsync\/Await are even cleaner than Promises\nPromises are a very clean alternative to callbacks, but ES2017\/ES8 brings async and await\nwhich offer an even cleaner solution. All you need is a function that is prefixed\nin an async keyword, and then you can write your logic imperatively without\na then chain of functions. Use this if you can take advantage of ES2017\/ES8 features\ntoday!\nBad:\nimport { get } from \"request-promise\";\nimport { writeFile } from \"fs-extra\";\n\nget(\"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\")\n  .then(body => {\n    return writeFile(\"article.html\", body);\n  })\n  .then(() => {\n    console.log(\"File written\");\n  })\n  .catch(err => {\n    console.error(err);\n  });\nGood:\nimport { get } from \"request-promise\";\nimport { writeFile } from \"fs-extra\";\n\nasync function getCleanCodeArticle() {\n  try {\n    const body = await get(\n      \"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\"\n    );\n    await writeFile(\"article.html\", body);\n    console.log(\"File written\");\n  } catch (err) {\n    console.error(err);\n  }\n}\n\ngetCleanCodeArticle()\n\u2b06 back to top\nError Handling\nThrown errors are a good thing! They mean the runtime has successfully\nidentified when something in your program has gone wrong and it's letting\nyou know by stopping function execution on the current stack, killing the\nprocess (in Node), and notifying you in the console with a stack trace.\nDon't ignore caught errors\nDoing nothing with a caught error doesn't give you the ability to ever fix\nor react to said error. Logging the error to the console (console.log)\nisn't much better as often times it can get lost in a sea of things printed\nto the console. If you wrap any bit of code in a try\/catch it means you\nthink an error may occur there and therefore you should have a plan,\nor create a code path, for when it occurs.\nBad:\ntry {\n  functionThatMightThrow();\n} catch (error) {\n  console.log(error);\n}\nGood:\ntry {\n  functionThatMightThrow();\n} catch (error) {\n  \/\/ One option (more noisy than console.log):\n  console.error(error);\n  \/\/ Another option:\n  notifyUserOfError(error);\n  \/\/ Another option:\n  reportErrorToService(error);\n  \/\/ OR do all three!\n}\nDon't ignore rejected promises\nFor the same reason you shouldn't ignore caught errors\nfrom try\/catch.\nBad:\ngetdata()\n  .then(data => {\n    functionThatMightThrow(data);\n  })\n  .catch(error => {\n    console.log(error);\n  });\nGood:\ngetdata()\n  .then(data => {\n    functionThatMightThrow(data);\n  })\n  .catch(error => {\n    \/\/ One option (more noisy than console.log):\n    console.error(error);\n    \/\/ Another option:\n    notifyUserOfError(error);\n    \/\/ Another option:\n    reportErrorToService(error);\n    \/\/ OR do all three!\n  });\n\u2b06 back to top\nFormatting\nFormatting is subjective. Like many rules herein, there is no hard and fast\nrule that you must follow. The main point is DO NOT ARGUE over formatting.\nThere are tons of tools to automate this.\nUse one! It's a waste of time and money for engineers to argue over formatting.\nFor things that don't fall under the purview of automatic formatting\n(indentation, tabs vs. spaces, double vs. single quotes, etc.) look here\nfor some guidance.\nUse consistent capitalization\nJavaScript is untyped, so capitalization tells you a lot about your variables,\nfunctions, etc. These rules are subjective, so your team can choose whatever\nthey want. The point is, no matter what you all choose, just be consistent.\nBad:\nconst DAYS_IN_WEEK = 7;\nconst daysInMonth = 30;\n\nconst songs = [\"Back In Black\", \"Stairway to Heaven\", \"Hey Jude\"];\nconst Artists = [\"ACDC\", \"Led Zeppelin\", \"The Beatles\"];\n\nfunction eraseDatabase() {}\nfunction restore_database() {}\n\nclass animal {}\nclass Alpaca {}\nGood:\nconst DAYS_IN_WEEK = 7;\nconst DAYS_IN_MONTH = 30;\n\nconst SONGS = [\"Back In Black\", \"Stairway to Heaven\", \"Hey Jude\"];\nconst ARTISTS = [\"ACDC\", \"Led Zeppelin\", \"The Beatles\"];\n\nfunction eraseDatabase() {}\nfunction restoreDatabase() {}\n\nclass Animal {}\nclass Alpaca {}\n\u2b06 back to top\nFunction callers and callees should be close\nIf a function calls another, keep those functions vertically close in the source\nfile. Ideally, keep the caller right above the callee. We tend to read code from\ntop-to-bottom, like a newspaper. Because of this, make your code read that way.\nBad:\nclass PerformanceReview {\n  constructor(employee) {\n    this.employee = employee;\n  }\n\n  lookupPeers() {\n    return db.lookup(this.employee, \"peers\");\n  }\n\n  lookupManager() {\n    return db.lookup(this.employee, \"manager\");\n  }\n\n  getPeerReviews() {\n    const peers = this.lookupPeers();\n    \/\/ ...\n  }\n\n  perfReview() {\n    this.getPeerReviews();\n    this.getManagerReview();\n    this.getSelfReview();\n  }\n\n  getManagerReview() {\n    const manager = this.lookupManager();\n  }\n\n  getSelfReview() {\n    \/\/ ...\n  }\n}\n\nconst review = new PerformanceReview(employee);\nreview.perfReview();\nGood:\nclass PerformanceReview {\n  constructor(employee) {\n    this.employee = employee;\n  }\n\n  perfReview() {\n    this.getPeerReviews();\n    this.getManagerReview();\n    this.getSelfReview();\n  }\n\n  getPeerReviews() {\n    const peers = this.lookupPeers();\n    \/\/ ...\n  }\n\n  lookupPeers() {\n    return db.lookup(this.employee, \"peers\");\n  }\n\n  getManagerReview() {\n    const manager = this.lookupManager();\n  }\n\n  lookupManager() {\n    return db.lookup(this.employee, \"manager\");\n  }\n\n  getSelfReview() {\n    \/\/ ...\n  }\n}\n\nconst review = new PerformanceReview(employee);\nreview.perfReview();\n\u2b06 back to top\nComments\nOnly comment things that have business logic complexity.\nComments are an apology, not a requirement. Good code mostly documents itself.\nBad:\nfunction hashIt(data) {\n  \/\/ The hash\n  let hash = 0;\n\n  \/\/ Length of string\n  const length = data.length;\n\n  \/\/ Loop through every character in data\n  for (let i = 0; i < length; i++) {\n    \/\/ Get character code.\n    const char = data.charCodeAt(i);\n    \/\/ Make the hash\n    hash = (hash << 5) - hash + char;\n    \/\/ Convert to 32-bit integer\n    hash &= hash;\n  }\n}\nGood:\nfunction hashIt(data) {\n  let hash = 0;\n  const length = data.length;\n\n  for (let i = 0; i < length; i++) {\n    const char = data.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n\n    \/\/ Convert to 32-bit integer\n    hash &= hash;\n  }\n}\n\u2b06 back to top\nDon't leave commented out code in your codebase\nVersion control exists for a reason. Leave old code in your history.\nBad:\ndoStuff();\n\/\/ doOtherStuff();\n\/\/ doSomeMoreStuff();\n\/\/ doSoMuchStuff();\nGood:\ndoStuff();\n\u2b06 back to top\nDon't have journal comments\nRemember, use version control! There's no need for dead code, commented code,\nand especially journal comments. Use git log to get history!\nBad:\n\/**\n * 2016-12-20: Removed monads, didn't understand them (RM)\n * 2016-10-01: Improved using special monads (JP)\n * 2016-02-03: Removed type-checking (LI)\n * 2015-03-14: Added combine with type-checking (JR)\n *\/\nfunction combine(a, b) {\n  return a + b;\n}\nGood:\nfunction combine(a, b) {\n  return a + b;\n}\n\u2b06 back to top\nAvoid positional markers\nThey usually just add noise. Let the functions and variable names along with the\nproper indentation and formatting give the visual structure to your code.\nBad:\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ Scope Model Instantiation\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scope.model = {\n  menu: \"foo\",\n  nav: \"bar\"\n};\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ Action setup\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nconst actions = function() {\n  \/\/ ...\n};\nGood:\n$scope.model = {\n  menu: \"foo\",\n  nav: \"bar\"\n};\n\nconst actions = function() {\n  \/\/ ...\n};\n\u2b06 back to top\nTranslation\nThis is also available in other languages:\n\n Armenian: hanumanum\/clean-code-javascript\/\n Bangla(\u09ac\u09be\u0982\u09b2\u09be): InsomniacSabbir\/clean-code-javascript\/\n Brazilian Portuguese: fesnt\/clean-code-javascript\n Simplified Chinese:\n\nalivebao\/clean-code-js\nbeginor\/clean-code-javascript\n\n\n Traditional Chinese: AllJointTW\/clean-code-javascript\n French: GavBaros\/clean-code-javascript-fr\n German: marcbruederlin\/clean-code-javascript\n Indonesia: andirkh\/clean-code-javascript\/\n Italian: frappacchio\/clean-code-javascript\/\n Japanese: mitsuruog\/clean-code-javascript\/\n Korean: qkraudghgh\/clean-code-javascript-ko\n Polish: greg-dev\/clean-code-javascript-pl\n Russian:\n\nBoryaMogila\/clean-code-javascript-ru\/\nmaksugr\/clean-code-javascript\n\n\n Spanish: tureey\/clean-code-javascript\n Spanish: andersontr15\/clean-code-javascript\n Turkish: bsonmez\/clean-code-javascript\n Ukrainian: mindfr1k\/clean-code-javascript-ua\n Vietnamese: hienvd\/clean-code-javascript\/\n\n\u2b06 back to top\n","39":"\u7981\u6b62\u8f6c\u8f7d\uff0c\u7981\u6b62\u8f6c\u8f7d\uff0c\u7981\u6b62\u8f6c\u8f7d\uff01\nGitHub\u4e0a\u975e\u6700\u65b0\u5185\u5bb9\uff0c\u6700\u65b0\u5185\u5bb9\u8bf7\u671f\u5f85\u65b0\u4e66\u3002\n\n\u5b66\u4e60\u4ea4\u6d41\u7fa4\n\n\n    \u5b66\u4e60\u4ea4\u6d41\u7fa4\n\n\u7406\u89e3CNN\u3001CNN\u53ef\u89c6\u5316  CNN-Visualization\nhttps:\/\/github.com\/scutan90\/CNN-Visualization\n\u6df1\u5ea6\u5b66\u4e60\u4e73\u817a\u764c\u8bc6\u522b\u4e0e\u8bca\u65ad\nhttps:\/\/github.com\/scutan90\/Breast-imaging-Deeplearning\n\u82f1\u6587\u7248\u672c\nEnglish version\n1. \u7248\u6743\u58f0\u660e\n\u8bf7\u5c0a\u91cd\u4f5c\u8005\u7684\u77e5\u8bc6\u4ea7\u6743\uff0c\u7248\u6743\u6240\u6709\uff0c\u7ffb\u7248\u5fc5\u7a76\u3002   \u672a\u7ecf\u8bb8\u53ef\uff0c\u4e25\u7981\u8f6c\u53d1\u5185\u5bb9\uff01\n\u8bf7\u5927\u5bb6\u4e00\u8d77\u7ef4\u62a4\u81ea\u5df1\u7684\u52b3\u52a8\u6210\u679c\uff0c\u8fdb\u884c\u76d1\u7763\u3002  \u672a\u7ecf\u8bb8\u53ef\uff0c \u4e25\u7981\u8f6c\u53d1\u5185\u5bb9\uff01 \u3000\u3000\u3000\n2018.6.27 TanJiyong\n2. \u6982\u8ff0\n\u672c\u9879\u76ee\u662f\u5927\u5bb6\u5bf9AI\u7684\u76f8\u5173\u77e5\u8bc6\u8fdb\u884c\u6574\u5408\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u4ee5\u4fbf\u5f62\u6210 \u5185\u5bb9\u5145\u5b9e\uff0c\u8986\u76d6\u5168\u9762\u7684\u6587\u96c6\u3002\n3. \u52a0\u5165\u4ee5\u53ca\u6587\u6863\u89c4\u8303\n1\u3001\u5bfb\u6c42\u6709\u613f\u610f\u7ee7\u7eed\u5b8c\u5584\u7684\u670b\u53cb\u3001\u7f16\u8f91\u3001\u5199\u624b\uff1b\u5982\u6709\u610f\u5408\u4f5c\uff0c\u5b8c\u5584\u51fa\u4e66\uff08\u6210\u4e3a\u5171\u540c\u4f5c\u8005\uff09\u3002\n2\u3001\u6240\u6709\u63d0\u4ea4\u5185\u5bb9\u7684\u8d21\u732e\u8005\uff0c\u5c06\u4f1a\u5728\u6587\u4e2d\u4f53\u73b0\u8d21\u732e\u8005\u4e2a\u4eba\u4fe1\u606f\uff08\u4f8b\uff1a\u5927\u4f6c-\u897f\u6e56\u5927\u5b66\uff09\n3\u3001\u4e3a\u4e86\u8ba9\u5185\u5bb9\u66f4\u5145\u5b9e\u5b8c\u5584\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u6b22\u8fceFork\u8be5\u9879\u76ee\u5e76\u53c2\u4e0e\u7f16\u5199\u3002\u8bf7\u5728\u4fee\u6539MD\u6587\u4ef6\u7684\u540c\u65f6\uff08\u6216\u76f4\u63a5\u7559\u8a00\uff09\u5907\u6ce8\u81ea\u5df1\u7684\u59d3\u540d\uff0d\u5355\u4f4d\uff08\u5927\u4f6c\uff0d\u65af\u5766\u798f\u5927\u5b66\uff09\uff0c\u4e00\u7ecf\u91c7\u7eb3\uff0c\u4f1a\u5728\u539f\u6587\u4e2d\u663e\u793a\u8d21\u732e\u8005\u7684\u4fe1\u606f\uff0c\u8c22\u8c22\uff01\n4\u3001\u63a8\u8350\u4f7f\u7528typora-Markdown\u9605\u8bfb\u5668\uff1ahttps:\/\/typora.io\/\n\u8bbe\u7f6e\uff1a\n\u6587\u4ef6->\u504f\u597d\u8bbe\u7f6e\n\nMarkdown\u6269\u5c55\u8bed\u6cd5\n\n\u5185\u8054\u516c\u5f0f\n\u4e0b\u6807\n\u4e0a\u6807\n\u9ad8\u4eae\n\u56fe\u8868\n\n\n\n\u90fd\u6253\u52fe\n\n\u6570\u5b66\u516c\u5f0f\n\n\u81ea\u52a8\u6dfb\u52a0\u5e8f\u53f7\n\n\n\n\u90fd\u6253\u52fe\n\u4f8b\u5b50\uff1a\n### 3.3.2 \u5982\u4f55\u5bfb\u627e\u8d85\u53c2\u6570\u7684\u6700\u4f18\u503c\uff1f\uff08\u8d21\u732e\u8005\uff1a\u5927\u4f6c\uff0d\u65af\u5766\u798f\u5927\u5b66\uff09\n\n\u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u603b\u6709\u4e00\u4e9b\u96be\u641e\u7684\u8d85\u53c2\u6570\u3002\u4f8b\u5982\u6743\u91cd\u8870\u51cf\u5927\u5c0f\uff0c\u9ad8\u65af\u6838\u5bbd\u5ea6\u7b49\u7b49\u3002\u7b97\u6cd5\u4e0d\u4f1a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff0c\u800c\u662f\u9700\u8981\u4f60\u53bb\u8bbe\u7f6e\u5b83\u4eec\u7684\u503c\u3002\u8bbe\u7f6e\u7684\u503c\u5bf9\u7ed3\u679c\u4ea7\u751f\u8f83\u5927\u5f71\u54cd\u3002\u5e38\u89c1\u8bbe\u7f6e\u8d85\u53c2\u6570\u7684\u505a\u6cd5\u6709\uff1a\n\n1. \u731c\u6d4b\u548c\u68c0\u67e5\uff1a\u6839\u636e\u7ecf\u9a8c\u6216\u76f4\u89c9\uff0c\u9009\u62e9\u53c2\u6570\uff0c\u4e00\u76f4\u8fed\u4ee3\u3002\n2. \u7f51\u683c\u641c\u7d22\uff1a\u8ba9\u8ba1\u7b97\u673a\u5c1d\u8bd5\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u5747\u5300\u5206\u5e03\u7684\u4e00\u7ec4\u503c\u3002\n3. \u968f\u673a\u641c\u7d22\uff1a\u8ba9\u8ba1\u7b97\u673a\u968f\u673a\u6311\u9009\u4e00\u7ec4\u503c\u3002\n4. \u8d1d\u53f6\u65af\u4f18\u5316\uff1a\u4f7f\u7528\u8d1d\u53f6\u65af\u4f18\u5316\u8d85\u53c2\u6570\uff0c\u4f1a\u9047\u5230\u8d1d\u53f6\u65af\u4f18\u5316\u7b97\u6cd5\u672c\u8eab\u5c31\u9700\u8981\u5f88\u591a\u7684\u53c2\u6570\u7684\u56f0\u96be\u3002\n5. \u5728\u826f\u597d\u521d\u59cb\u731c\u6d4b\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\u5c40\u90e8\u4f18\u5316\uff1a\u8fd9\u5c31\u662f MITIE \u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528 BOBYQA \u7b97\u6cd5\uff0c\u5e76\u6709\u4e00\u4e2a\u7cbe\u5fc3\u9009\u62e9\u7684\u8d77\u59cb\u70b9\u3002\u7531\u4e8e BOBYQA \u53ea\u5bfb\u627e\u6700\u8fd1\u7684\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u6210\u529f\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u662f\u5426\u6709\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\u3002\u5728 MITIE \u7684\u60c5\u4e0b,\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u666e\u904d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u901a\u5e38\u4f60\u4e0d\u4f1a\u77e5\u9053\u597d\u7684\u8d77\u70b9\u5728\u54ea\u91cc\u3002\u4ece\u597d\u7684\u65b9\u9762\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9002\u5408\u5bfb\u627e\u5c40\u90e8\u6700\u4f18\u89e3\u3002\u7a0d\u540e\u6211\u4f1a\u518d\u8ba8\u8bba\u8fd9\u4e00\u70b9\u3002\n6. \u6700\u65b0\u63d0\u51fa\u7684 LIPO \u7684\u5168\u5c40\u4f18\u5316\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff0c\u800c\u4e14\u7ecf\u9a8c\u8bc1\u6bd4\u968f\u673a\u641c\u7d22\u65b9\u6cd5\u597d\u3002\n4. \u8d21\u732e\u4e0e\u9879\u76ee\u6982\u89c8\n\u5df2\u63d0\u4ea4MD\u7248\u672c\u7ae0\u8282\uff1a\u8bf7\u67e5\u770bMarkDown\n5. \u66f4\u591a\n\n\n\u5bfb\u6c42\u6709\u613f\u610f\u7ee7\u7eed\u5b8c\u5584\u7684\u670b\u53cb\u3001\u7f16\u8f91\u3001\u5199\u624b; \u5982\u6709\u610f\u5408\u4f5c\uff0c\u5b8c\u5584\u51fa\u4e66\uff08\u6210\u4e3a\u5171\u540c\u4f5c\u8005\uff09\u3002\n\u6240\u6709\u63d0\u4ea4\u5185\u5bb9\u7684\u8d21\u732e\u8005\uff0c\u5c06\u4f1a\u5728\u6587\u4e2d\u4f53\u73b0\u8d21\u732e\u8005\u4e2a\u4eba\u4fe1\u606f\uff08\u5927\u4f6c-\u897f\u6e56\u5927\u5b66\uff09\u3002\n\n\n\u8054\u7cfb\u65b9\u5f0f\uff1a\u8bf7\u8054\u7cfbscutjy2015@163.com\u3000(\u552f\u4e00\u5b98\u65b9\u90ae\u7bb1)\uff1b\u3000\u5fae\u4fe1Tan\uff1a\n(\u8fdb\u7fa4\u5148\u5728MD\u7248\u672c\u589e\u52a0\u3001\u6539\u5584\u3001\u63d0\u4ea4\u5185\u5bb9\u540e\uff0c\u66f4\u6613\u8fdb\u7fa4\uff0c\u4eab\u53d7\u5206\u4eab\u77e5\u8bc6\u5e2e\u52a9\u4ed6\u4eba\u3002)\n\n\n\nMarkdown\u9605\u8bfb\u5668\u63a8\u8350\uff1ahttps:\/\/typora.io\/ \u514d\u8d39\u4e14\u5bf9\u4e8e\u6570\u5b66\u516c\u5f0f\u663e\u793a\u652f\u6301\u7684\u6bd4\u8f83\u597d\u3002\n\n\n\u6ce8\u610f\uff0c\u73b0\u51fa\u73b0\u4e0d\u6cd5\u5206\u5b50\u5192\u5145\u53d1\u8d77\u4eba\uff0c\u8bf7\u5e7f\u5927\u4f19\u4f34\u513f\u77e5\u6089\uff01\n\n\n\u63a5\u4e0b\u6765\uff0c\u5c06\u63d0\u4f9bMD\u7248\u672c\uff0c\u5927\u5bb6\u4e00\u8d77\u7f16\u8f91\u5b8c\u5584\uff0c\u656c\u8bf7\u671f\u5f85\uff01\u5e0c\u671b\u8e0a\u8dc3\u63d0\u5efa\u8bae\uff0c\u8865\u5145\u4fee\u6539\u5185\u5bb9\uff01\n\n\n6. \u53cb\u60c5\u94fe\u63a5\nFlyAI-AI\u7ade\u8d5b\u5e73\u53f0\n7. \u76ee\u5f55\n\u7b2c\u4e00\u7ae0 \u6570\u5b66\u57fa\u7840\t1\n1.1 \u6807\u91cf\u3001\u5411\u91cf\u3001\u5f20\u91cf\u4e4b\u95f4\u7684\u8054\u7cfb\t1\n1.2 \u5f20\u91cf\u4e0e\u77e9\u9635\u7684\u533a\u522b\uff1f\t1\n1.3 \u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58\u7ed3\u679c\t1\n1.4 \u5411\u91cf\u548c\u77e9\u9635\u7684\u8303\u6570\u5f52\u7eb3\t1\n1.5 \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u77e9\u9635\u4e3a\u6b63\u5b9a\uff1f\t2\n1.6 \u5bfc\u6570\u504f\u5bfc\u8ba1\u7b97\t3\n1.7 \u5bfc\u6570\u548c\u504f\u5bfc\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t3\n1.8 \u7279\u5f81\u503c\u5206\u89e3\u4e0e\u7279\u5f81\u5411\u91cf\t3\n1.9 \u5947\u5f02\u503c\u4e0e\u7279\u5f81\u503c\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\t4\n1.10 \u673a\u5668\u5b66\u4e60\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u6982\u7387\uff1f\t4\n1.11 \u53d8\u91cf\u4e0e\u968f\u673a\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t4\n1.12 \u5e38\u89c1\u6982\u7387\u5206\u5e03\uff1f\t5\n1.13 \u4e3e\u4f8b\u7406\u89e3\u6761\u4ef6\u6982\u7387\t9\n1.14 \u8054\u5408\u6982\u7387\u4e0e\u8fb9\u7f18\u6982\u7387\u8054\u7cfb\u533a\u522b\uff1f\t10\n1.15 \u6761\u4ef6\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\t10\n1.16 \u72ec\u7acb\u6027\u548c\u6761\u4ef6\u72ec\u7acb\u6027\t11\n1.17 \u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u603b\u7ed3\t11\n\u7b2c\u4e8c\u7ae0 \u673a\u5668\u5b66\u4e60\u57fa\u7840\t14\n2.1 \u5404\u79cd\u5e38\u89c1\u7b97\u6cd5\u56fe\u793a\t14\n2.2 \u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u3001\u5f31\u76d1\u7763\u5b66\u4e60\uff1f\t15\n2.3 \u76d1\u7763\u5b66\u4e60\u6709\u54ea\u4e9b\u6b65\u9aa4\t16\n2.4 \u591a\u5b9e\u4f8b\u5b66\u4e60\uff1f\t17\n2.5 \u5206\u7c7b\u7f51\u7edc\u548c\u56de\u5f52\u7684\u533a\u522b\uff1f\t17\n2.6 \u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff1f\t17\n2.7 \u5e38\u7528\u5206\u7c7b\u7b97\u6cd5\u7684\u4f18\u7f3a\u70b9\uff1f\t18\n2.8 \u6b63\u786e\u7387\u80fd\u5f88\u597d\u7684\u8bc4\u4f30\u5206\u7c7b\u7b97\u6cd5\u5417\uff1f\t20\n2.9 \u5206\u7c7b\u7b97\u6cd5\u7684\u8bc4\u4f30\u65b9\u6cd5\uff1f\t20\n2.10 \u4ec0\u4e48\u6837\u7684\u5206\u7c7b\u5668\u662f\u6700\u597d\u7684\uff1f\t22\n2.11 \u5927\u6570\u636e\u4e0e\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\t22\n2.12 \u7406\u89e3\u5c40\u90e8\u6700\u4f18\u4e0e\u5168\u5c40\u6700\u4f18\t23\n2.13 \u7406\u89e3\u903b\u8f91\u56de\u5f52\t24\n2.14 \u903b\u8f91\u56de\u5f52\u4e0e\u6734\u7d20\u8d1d\u53f6\u65af\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t24\n2.15 \u4e3a\u4ec0\u4e48\u9700\u8981\u4ee3\u4ef7\u51fd\u6570\uff1f\t25\n2.16 \u4ee3\u4ef7\u51fd\u6570\u4f5c\u7528\u539f\u7406\u00a0\t25\n2.17 \u4e3a\u4ec0\u4e48\u4ee3\u4ef7\u51fd\u6570\u8981\u975e\u8d1f\uff1f\t26\n2.18 \u5e38\u89c1\u4ee3\u4ef7\u51fd\u6570\uff1f\t26\n2.19 \u4e3a\u4ec0\u4e48\u7528\u4ea4\u53c9\u71b5\u4ee3\u66ff\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\t28\n2.20 \u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f\t28\n2.21 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\t28\n2.22 \u903b\u8f91\u56de\u5f52\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5bf9\u6570\u635f\u5931\u51fd\u6570\uff1f\t30\n0.00 \u5bf9\u6570\u635f\u5931\u51fd\u6570\u662f\u5982\u4f55\u5ea6\u91cf\u635f\u5931\u7684\uff1f\t31\n2.23 \u673a\u5668\u5b66\u4e60\u4e2d\u4e3a\u4ec0\u4e48\u9700\u8981\u68af\u5ea6\u4e0b\u964d\uff1f\t32\n2.24 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7f3a\u70b9\uff1f\t32\n2.25 \u68af\u5ea6\u4e0b\u964d\u6cd5\u76f4\u89c2\u7406\u89e3\uff1f\t32\n2.23 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u63cf\u8ff0\uff1f\t33\n2.24 \u5982\u4f55\u5bf9\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fdb\u884c\u8c03\u4f18\uff1f\t35\n2.25 \u968f\u673a\u68af\u5ea6\u548c\u6279\u91cf\u68af\u5ea6\u533a\u522b\uff1f\t35\n2.26 \u5404\u79cd\u68af\u5ea6\u4e0b\u964d\u6cd5\u6027\u80fd\u6bd4\u8f83\t37\n2.27 \u8ba1\u7b97\u56fe\u7684\u5bfc\u6570\u8ba1\u7b97\u56fe\u89e3\uff1f\t37\n2.28 \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09\u601d\u60f3\u603b\u7ed3\t39\n2.29 \u56fe\u89e3LDA\u6838\u5fc3\u601d\u60f3\t39\n2.30 \u4e8c\u7c7bLDA\u7b97\u6cd5\u539f\u7406\uff1f\t40\n2.30 LDA\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3\uff1f\t41\n2.31 LDA\u548cPCA\u533a\u522b\uff1f\t41\n2.32 LDA\u4f18\u7f3a\u70b9\uff1f\t41\n2.33 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u601d\u60f3\u603b\u7ed3\t42\n2.34 \u56fe\u89e3PCA\u6838\u5fc3\u601d\u60f3\t42\n2.35 PCA\u7b97\u6cd5\u63a8\u7406\t43\n2.36 PCA\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3\t44\n2.37 PCA\u7b97\u6cd5\u4e3b\u8981\u4f18\u7f3a\u70b9\t45\n2.38 \u964d\u7ef4\u7684\u5fc5\u8981\u6027\u53ca\u76ee\u7684\t45\n2.39 KPCA\u4e0ePCA\u7684\u533a\u522b\uff1f\t46\n2.40 \u6a21\u578b\u8bc4\u4f30\t47\n2.40.1\u6a21\u578b\u8bc4\u4f30\u5e38\u7528\u65b9\u6cd5\uff1f\t47\n2.40.2 \u7ecf\u9a8c\u8bef\u5dee\u4e0e\u6cdb\u5316\u8bef\u5dee\t47\n2.40.3 \u56fe\u89e3\u6b20\u62df\u5408\u3001\u8fc7\u62df\u5408\t48\n2.40.4 \u5982\u4f55\u89e3\u51b3\u8fc7\u62df\u5408\u4e0e\u6b20\u62df\u5408\uff1f\t49\n2.40.5 \u4ea4\u53c9\u9a8c\u8bc1\u7684\u4e3b\u8981\u4f5c\u7528\uff1f\t50\n2.40.6 k\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff1f\t50\n2.40.7 \u6df7\u6dc6\u77e9\u9635\t50\n2.40.8 \u9519\u8bef\u7387\u53ca\u7cbe\u5ea6\t51\n2.40.9 \u67e5\u51c6\u7387\u4e0e\u67e5\u5168\u7387\t51\n2.40.10 ROC\u4e0eAUC\t52\n2.40.11 \u5982\u4f55\u753bROC\u66f2\u7ebf\uff1f\t53\n2.40.12 \u5982\u4f55\u8ba1\u7b97TPR\uff0cFPR\uff1f\t54\n2.40.13 \u5982\u4f55\u8ba1\u7b97Auc\uff1f\t56\n2.40.14 \u4e3a\u4ec0\u4e48\u4f7f\u7528Roc\u548cAuc\u8bc4\u4ef7\u5206\u7c7b\u5668\uff1f\t56\n2.40.15 \u76f4\u89c2\u7406\u89e3AUC\t56\n2.40.16 \u4ee3\u4ef7\u654f\u611f\u9519\u8bef\u7387\u4e0e\u4ee3\u4ef7\u66f2\u7ebf\t57\n2.40.17 \u6a21\u578b\u6709\u54ea\u4e9b\u6bd4\u8f83\u68c0\u9a8c\u65b9\u6cd5\t59\n2.40.18 \u504f\u5dee\u4e0e\u65b9\u5dee\t59\n2.40.19 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6807\u51c6\u5dee\uff1f\t60\n2.40.20 \u70b9\u4f30\u8ba1\u601d\u60f3\t61\n2.40.21 \u70b9\u4f30\u8ba1\u4f18\u826f\u6027\u539f\u5219\uff1f\t61\n2.40.22 \u70b9\u4f30\u8ba1\u3001\u533a\u95f4\u4f30\u8ba1\u3001\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u4e4b\u95f4\u7684\u8054\u7cfb\uff1f\t62\n2.40.23 \u7c7b\u522b\u4e0d\u5e73\u8861\u4ea7\u751f\u539f\u56e0\uff1f\t62\n2.40.24 \u5e38\u89c1\u7684\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\t62\n2.41 \u51b3\u7b56\u6811\t64\n2.41.1 \u51b3\u7b56\u6811\u7684\u57fa\u672c\u539f\u7406\t64\n2.41.2 \u51b3\u7b56\u6811\u7684\u4e09\u8981\u7d20\uff1f\t64\n2.41.3 \u51b3\u7b56\u6811\u5b66\u4e60\u57fa\u672c\u7b97\u6cd5\t65\n2.41.4 \u51b3\u7b56\u6811\u7b97\u6cd5\u4f18\u7f3a\u70b9\t65\n2.40.5 \u71b5\u7684\u6982\u5ff5\u4ee5\u53ca\u7406\u89e3\t66\n2.40.6 \u4fe1\u606f\u589e\u76ca\u7684\u7406\u89e3\t66\n2.40.7 \u526a\u679d\u5904\u7406\u7684\u4f5c\u7528\u53ca\u7b56\u7565\uff1f\t67\n2.41 \u652f\u6301\u5411\u91cf\u673a\t67\n2.41.1 \u4ec0\u4e48\u662f\u652f\u6301\u5411\u91cf\u673a\t67\n2.25.2 \u652f\u6301\u5411\u91cf\u673a\u89e3\u51b3\u7684\u95ee\u9898\uff1f\t68\n2.25.2 \u6838\u51fd\u6570\u4f5c\u7528\uff1f\t69\n2.25.3 \u5bf9\u5076\u95ee\u9898\t69\n2.25.4 \u7406\u89e3\u652f\u6301\u5411\u91cf\u56de\u5f52\t69\n2.25.5 \u7406\u89e3SVM\uff08\u6838\u51fd\u6570\uff09\t69\n2.25.6 \u5e38\u89c1\u7684\u6838\u51fd\u6570\u6709\u54ea\u4e9b\uff1f\t69\n2.25.6 \u8f6f\u95f4\u9694\u4e0e\u6b63\u5219\u5316\t73\n2.25.7 SVM\u4e3b\u8981\u7279\u70b9\u53ca\u7f3a\u70b9\uff1f\t73\n2.26 \u8d1d\u53f6\u65af\t74\n2.26.1 \u56fe\u89e3\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\t74\n2.26.2 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u548c\u4e00\u822c\u7684\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t76\n2.26.4 \u6734\u7d20\u4e0e\u534a\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\t76\n2.26.5 \u8d1d\u53f6\u65af\u7f51\u4e09\u79cd\u5178\u578b\u7ed3\u6784\t76\n2.26.6 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u9519\u8bef\u7387\t76\n2.26.7 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u6700\u4f18\u9519\u8bef\u7387\t76\n2.27 EM\u7b97\u6cd5\u89e3\u51b3\u95ee\u9898\u53ca\u5b9e\u73b0\u6d41\u7a0b\t76\n2.28 \u4e3a\u4ec0\u4e48\u4f1a\u4ea7\u751f\u7ef4\u6570\u707e\u96be\uff1f\t78\n2.29 \u600e\u6837\u907f\u514d\u7ef4\u6570\u707e\u96be\t82\n2.30 \u805a\u7c7b\u548c\u964d\u7ef4\u6709\u4ec0\u4e48\u533a\u522b\u4e0e\u8054\u7cfb\uff1f\t82\n2.31 GBDT\u548c\u968f\u673a\u68ee\u6797\u7684\u533a\u522b\t83\n2.32 \u56db\u79cd\u805a\u7c7b\u65b9\u6cd5\u4e4b\u6bd4\u8f83\t84\n\u7b2c\u4e09\u7ae0 \u6df1\u5ea6\u5b66\u4e60\u57fa\u7840\t88\n3.1 \u57fa\u672c\u6982\u5ff5\t88\n3.1.1 \u795e\u7ecf\u7f51\u7edc\u7ec4\u6210\uff1f\t88\n3.1.2 \u795e\u7ecf\u7f51\u7edc\u6709\u54ea\u4e9b\u5e38\u7528\u6a21\u578b\u7ed3\u6784\uff1f\t90\n3.1.3 \u5982\u4f55\u9009\u62e9\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u5e73\u53f0\uff1f\t92\n3.1.4 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5c42\u8868\u793a\t92\n3.1.5 \u4e3a\u4ec0\u4e48\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u96be\u4ee5\u8bad\u7ec3\uff1f\t93\n3.1.6 \u6df1\u5ea6\u5b66\u4e60\u548c\u673a\u5668\u5b66\u4e60\u6709\u4ec0\u4e48\u4e0d\u540c\t94\n3.2 \u7f51\u7edc\u64cd\u4f5c\u4e0e\u8ba1\u7b97\t95\n3.2.1 \u524d\u5411\u4f20\u64ad\u4e0e\u53cd\u5411\u4f20\u64ad\uff1f\t95\n3.2.2 \u5982\u4f55\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff1f\t97\n3.2.3 \u5982\u4f55\u8ba1\u7b97\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\u503c\uff1f\t98\n3.2.4 \u5982\u4f55\u8ba1\u7b97Pooling\u5c42\u8f93\u51fa\u503c\u8f93\u51fa\u503c\uff1f\t101\n3.2.5 \u5b9e\u4f8b\u7406\u89e3\u53cd\u5411\u4f20\u64ad\t102\n3.3 \u8d85\u53c2\u6570\t105\n3.3.1 \u4ec0\u4e48\u662f\u8d85\u53c2\u6570\uff1f\t105\n3.3.2 \u5982\u4f55\u5bfb\u627e\u8d85\u53c2\u6570\u7684\u6700\u4f18\u503c\uff1f\t105\n3.3.3 \u8d85\u53c2\u6570\u641c\u7d22\u4e00\u822c\u8fc7\u7a0b\uff1f\t106\n3.4 \u6fc0\u6d3b\u51fd\u6570\t106\n3.4.1 \u4e3a\u4ec0\u4e48\u9700\u8981\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t106\n3.4.2 \u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u53ca\u56fe\u50cf\t107\n3.4.3 \u5e38\u89c1\u6fc0\u6d3b\u51fd\u6570\u7684\u5bfc\u6570\u8ba1\u7b97\uff1f\t109\n3.4.4 \u6fc0\u6d3b\u51fd\u6570\u6709\u54ea\u4e9b\u6027\u8d28\uff1f\t110\n3.4.5 \u5982\u4f55\u9009\u62e9\u6fc0\u6d3b\u51fd\u6570\uff1f\t110\n3.4.6 \u4f7f\u7528ReLu\u6fc0\u6d3b\u51fd\u6570\u7684\u4f18\u70b9\uff1f\t111\n3.4.7 \u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u7528\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t111\n3.4.8 \u600e\u6837\u7406\u89e3Relu\uff08<0\u65f6\uff09\u662f\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t 111\n3.4.9 Softmax\u51fd\u6570\u5982\u4f55\u5e94\u7528\u4e8e\u591a\u5206\u7c7b\uff1f\t112\n3.5 Batch_Size\t113\n3.5.1 \u4e3a\u4ec0\u4e48\u9700\u8981Batch_Size\uff1f\t113\n3.5.2 Batch_Size\u503c\u7684\u9009\u62e9\t114\n3.5.3 \u5728\u5408\u7406\u8303\u56f4\u5185\uff0c\u589e\u5927 Batch_Size \u6709\u4f55\u597d\u5904\uff1f\t114\n3.5.4 \u76f2\u76ee\u589e\u5927 Batch_Size \u6709\u4f55\u574f\u5904\uff1f\t114\n3.5.5 \u8c03\u8282 Batch_Size \u5bf9\u8bad\u7ec3\u6548\u679c\u5f71\u54cd\u5230\u5e95\u5982\u4f55\uff1f\t114\n3.6 \u5f52\u4e00\u5316\t115\n3.6.1 \u5f52\u4e00\u5316\u542b\u4e49\uff1f\t115\n3.6.2 \u4e3a\u4ec0\u4e48\u8981\u5f52\u4e00\u5316\t115\n3.6.3 \u4e3a\u4ec0\u4e48\u5f52\u4e00\u5316\u80fd\u63d0\u9ad8\u6c42\u89e3\u6700\u4f18\u89e3\u901f\u5ea6\uff1f\t115\n3.6.4 3D\u56fe\u89e3\u672a\u5f52\u4e00\u5316\t116\n3.6.5 \u5f52\u4e00\u5316\u6709\u54ea\u4e9b\u7c7b\u578b\uff1f\t117\n3.6.6 \u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\u4f5c\u7528\t117\n3.6.7 \u7406\u89e3\u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\u516c\u5f0f\t117\n3.6.8 \u4ec0\u4e48\u662f\u6279\u5f52\u4e00\u5316\uff08Batch Normalization\uff09\t118\n3.6.9 \u6279\u5f52\u4e00\u5316\uff08BN\uff09\u7b97\u6cd5\u7684\u4f18\u70b9\t119\n3.6.10 \u6279\u5f52\u4e00\u5316\uff08BN\uff09\u7b97\u6cd5\u6d41\u7a0b\t119\n3.6.11 \u6279\u5f52\u4e00\u5316\u548c\u7fa4\u7ec4\u5f52\u4e00\u5316\t120\n3.6.12 Weight Normalization\u548cBatch Normalization\t120\n3.7 \u9884\u8bad\u7ec3\u4e0e\u5fae\u8c03(fine tuning)\t121\n3.7.1 \u4e3a\u4ec0\u4e48\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u53ef\u4ee5\u5e2e\u52a9\u6df1\u5ea6\u5b66\u4e60\uff1f\t121\n3.7.2 \u4ec0\u4e48\u662f\u6a21\u578b\u5fae\u8c03fine tuning\t121\n3.7.3 \u5fae\u8c03\u65f6\u5019\u7f51\u7edc\u53c2\u6570\u662f\u5426\u66f4\u65b0\uff1f\t122\n3.7.4 fine-tuning\u6a21\u578b\u7684\u4e09\u79cd\u72b6\u6001\t122\n3.8 \u6743\u91cd\u504f\u5dee\u521d\u59cb\u5316\t122\n3.8.1 \u5168\u90fd\u521d\u59cb\u5316\u4e3a0\t122\n3.8.2 \u5168\u90fd\u521d\u59cb\u5316\u4e3a\u540c\u6837\u7684\u503c\t123\n3.8.3 \u521d\u59cb\u5316\u4e3a\u5c0f\u7684\u968f\u673a\u6570\t124\n3.8.4 \u75281\/sqrt(n)\u6821\u51c6\u65b9\u5dee\t125\n3.8.5 \u7a00\u758f\u521d\u59cb\u5316(Sparse Initialazation)\t125\n3.8.6 \u521d\u59cb\u5316\u504f\u5dee\t125\n3.9 Softmax\t126\n3.9.1 Softmax\u5b9a\u4e49\u53ca\u4f5c\u7528\t126\n3.9.2 Softmax\u63a8\u5bfc\t126\n3.10 \u7406\u89e3One Hot Encodeing\u539f\u7406\u53ca\u4f5c\u7528\uff1f\t126\n3.11 \u5e38\u7528\u7684\u4f18\u5316\u5668\u6709\u54ea\u4e9b\t127\n3.12 Dropout \u7cfb\u5217\u95ee\u9898\t128\n3.12.1 dropout\u7387\u7684\u9009\u62e9\t128\n3.27 Padding \u7cfb\u5217\u95ee\u9898\t128\n\u7b2c\u56db\u7ae0 \u7ecf\u5178\u7f51\u7edc\t129\n4.1 LetNet5\t129\n4.1.1 \u6a21\u578b\u7ed3\u6784\t129\n4.1.2 \u6a21\u578b\u7ed3\u6784\t129\n4.1.3 \u6a21\u578b\u7279\u6027\t131\n4.2 AlexNet\t131\n4.2.1 \u6a21\u578b\u7ed3\u6784\t131\n4.2.2 \u6a21\u578b\u89e3\u8bfb\t131\n4.2.3 \u6a21\u578b\u7279\u6027\t135\n4.3 \u53ef\u89c6\u5316ZFNet-\u89e3\u5377\u79ef\t135\n4.3.1 \u57fa\u672c\u7684\u601d\u60f3\u53ca\u5176\u8fc7\u7a0b\t135\n4.3.2 \u5377\u79ef\u4e0e\u89e3\u5377\u79ef\t136\n4.3.3 \u5377\u79ef\u53ef\u89c6\u5316\t137\n4.3.4 ZFNe\u548cAlexNet\u6bd4\u8f83\t139\n4.4 VGG\t140\n4.1.1 \u6a21\u578b\u7ed3\u6784\t140\n4.1.2 \u6a21\u578b\u7279\u70b9\t140\n4.5 Network in Network\t141\n4.5.1 \u6a21\u578b\u7ed3\u6784\t141\n4.5.2 \u6a21\u578b\u521b\u65b0\u70b9\t141\n4.6 GoogleNet\t143\n4.6.1 \u6a21\u578b\u7ed3\u6784\t143\n4.6.2 Inception \u7ed3\u6784\t145\n4.6.3 \u6a21\u578b\u5c42\u6b21\u5173\u7cfb\t146\n4.7 Inception \u7cfb\u5217\t148\n4.7.1 Inception v1\t148\n4.7.2 Inception v2\t150\n4.7.3 Inception v3\t153\n4.7.4 Inception V4\t155\n4.7.5 Inception-ResNet-v2\t157\n4.8 ResNet\u53ca\u5176\u53d8\u4f53\t158\n4.8.1 \u91cd\u65b0\u5ba1\u89c6ResNet\t159\n4.8.2 \u6b8b\u5dee\u5757\t160\n4.8.3 ResNet\u67b6\u6784\t162\n4.8.4 \u6b8b\u5dee\u5757\u7684\u53d8\u4f53\t162\n4.8.5 ResNeXt\t162\n4.8.6 Densely Connected CNN\t164\n4.8.7 ResNet\u4f5c\u4e3a\u5c0f\u578b\u7f51\u7edc\u7684\u7ec4\u5408\t165\n4.8.8 ResNet\u4e2d\u8def\u5f84\u7684\u7279\u70b9\t166\n4.9 \u4e3a\u4ec0\u4e48\u73b0\u5728\u7684CNN\u6a21\u578b\u90fd\u662f\u5728GoogleNet\u3001VGGNet\u6216\u8005AlexNet\u4e0a\u8c03\u6574\u7684\uff1f\t167\n\u7b2c\u4e94\u7ae0 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN)\t170\n5.1 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ec4\u6210\u5c42\t170\n5.2 \u5377\u79ef\u5982\u4f55\u68c0\u6d4b\u8fb9\u7f18\u4fe1\u606f\uff1f\t171\n5.2 \u5377\u79ef\u7684\u51e0\u4e2a\u57fa\u672c\u5b9a\u4e49\uff1f\t174\n5.2.1 \u5377\u79ef\u6838\u5927\u5c0f\t174\n5.2.2 \u5377\u79ef\u6838\u7684\u6b65\u957f\t174\n5.2.3 \u8fb9\u7f18\u586b\u5145\t174\n5.2.4 \u8f93\u5165\u548c\u8f93\u51fa\u901a\u9053\t174\n5.3 \u5377\u79ef\u7f51\u7edc\u7c7b\u578b\u5206\u7c7b\uff1f\t174\n5.3.1 \u666e\u901a\u5377\u79ef\t174\n5.3.2 \u6269\u5f20\u5377\u79ef\t175\n5.3.3 \u8f6c\u7f6e\u5377\u79ef\t176\n5.3.4 \u53ef\u5206\u79bb\u5377\u79ef\t177\n5.3 \u56fe\u89e312\u79cd\u4e0d\u540c\u7c7b\u578b\u76842D\u5377\u79ef\uff1f\t178\n5.4 2D\u5377\u79ef\u4e0e3D\u5377\u79ef\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t181\n5.4.1 2D \u5377\u79ef\t181\n5.4.2 3D\u5377\u79ef\t182\n5.5 \u6709\u54ea\u4e9b\u6c60\u5316\u65b9\u6cd5\uff1f\t183\n5.5.1 \u4e00\u822c\u6c60\u5316\uff08General Pooling\uff09\t183\n5.5.2 \u91cd\u53e0\u6c60\u5316\uff08OverlappingPooling\uff09\t184\n5.5.3 \u7a7a\u91d1\u5b57\u5854\u6c60\u5316\uff08Spatial Pyramid Pooling\uff09\t184\n5.6 1x1\u5377\u79ef\u4f5c\u7528\uff1f\t186\n5.7 \u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u00a0\t187\n5.8 \u5377\u79ef\u6838\u4e00\u5b9a\u8d8a\u5927\u8d8a\u597d\uff1f\t189\n5.9 \u6bcf\u5c42\u5377\u79ef\u53ea\u80fd\u7528\u4e00\u79cd\u5c3a\u5bf8\u7684\u5377\u79ef\u6838\uff1f\t189\n5.10 \u600e\u6837\u624d\u80fd\u51cf\u5c11\u5377\u79ef\u5c42\u53c2\u6570\u91cf\uff1f\t190\n5.11\u5377\u79ef\u64cd\u4f5c\u65f6\u5fc5\u987b\u540c\u65f6\u8003\u8651\u901a\u9053\u548c\u533a\u57df\u5417\uff1f\t191\n5.12 \u91c7\u7528\u5bbd\u5377\u79ef\u7684\u597d\u5904\u6709\u4ec0\u4e48\uff1f\u00a0\t192\n5.12.1 \u7a84\u5377\u79ef\u548c\u5bbd\u5377\u79ef\t192\n5.12.2 \u4e3a\u4ec0\u4e48\u91c7\u7528\u5bbd\u5377\u79ef\uff1f\t192\n5.13 \u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6df1\u5ea6\u4e0e\u54ea\u4e2a\u90e8\u4ef6\u7684\u4e2a\u6570\u76f8\u540c\uff1f\u00a0\t192\n5.14 \u5982\u4f55\u5f97\u5230\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6df1\u5ea6\uff1f\t193\n5.15 \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u653e\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u90a3\u4e2a\u64cd\u4f5c\u4e4b\u540e\uff1f\u00a0\t194\n5.16 \u5982\u4f55\u7406\u89e3\u6700\u5927\u6c60\u5316\u5c42\u6709\u51e0\u5206\u7f29\u5c0f\uff1f\t194\n5.17 \u7406\u89e3\u56fe\u50cf\u5377\u79ef\u4e0e\u53cd\u5377\u79ef\t194\n5.17.1 \u56fe\u50cf\u5377\u79ef\t194\n5.17.2 \u56fe\u50cf\u53cd\u5377\u79ef\t196\n5.18 \u4e0d\u540c\u5377\u79ef\u540e\u56fe\u50cf\u5927\u5c0f\u8ba1\u7b97\uff1f\t198\n5.18.1 \u7c7b\u578b\u5212\u5206\t198\n5.18.2 \u8ba1\u7b97\u516c\u5f0f\t199\n5.19 \u6b65\u957f\u3001\u586b\u5145\u5927\u5c0f\u4e0e\u8f93\u5165\u8f93\u51fa\u5173\u7cfb\u603b\u7ed3\uff1f\t199\n5.19.1 \u6ca1\u67090\u586b\u5145\uff0c\u5355\u4f4d\u6b65\u957f\t200\n5.19.2 \u96f6\u586b\u5145\uff0c\u5355\u4f4d\u6b65\u957f\t200\n5.19.3 \u4e0d\u586b\u5145\uff0c\u975e\u5355\u4f4d\u6b65\u957f\t202\n5.19.4 \u96f6\u586b\u5145\uff0c\u975e\u5355\u4f4d\u6b65\u957f\t202\n5.20 \u7406\u89e3\u53cd\u5377\u79ef\u548c\u68cb\u76d8\u6548\u5e94\t204\n5.20.1 \u4e3a\u4ec0\u4e48\u51fa\u73b0\u68cb\u76d8\u73b0\u8c61\uff1f\t204\n5.20.2 \u6709\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u68cb\u76d8\u6548\u5e94\uff1f\t205\n5.21 CNN\u4e3b\u8981\u7684\u8ba1\u7b97\u74f6\u9888\uff1f\t207\n5.22 CNN\u7684\u53c2\u6570\u7ecf\u9a8c\u8bbe\u7f6e\t207\n5.23 \u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u7684\u65b9\u6cd5\u603b\u7ed3\t208\n5.23.1 \u4e3b\u8981\u65b9\u6cd5\t208\n5.23.2 \u5b9e\u9a8c\u8bc1\u660e\t208\n5.24 CNN\u5728CV\u4e0eNLP\u9886\u57df\u8fd0\u7528\u7684\u8054\u7cfb\u4e0e\u533a\u522b\uff1f\t213\n5.24.1 \u8054\u7cfb\t213\n5.24.2 \u533a\u522b\t213\n5.25 CNN\u51f8\u663e\u5171\u6027\u7684\u624b\u6bb5\uff1f\t213\n5.25.1 \u5c40\u90e8\u8fde\u63a5\t213\n5.25.2 \u6743\u503c\u5171\u4eab\t214\n5.25.3 \u6c60\u5316\u64cd\u4f5c\t215\n5.26 \u5168\u5377\u79ef\u4e0eLocal-Conv\u7684\u5f02\u540c\u70b9\t215\n5.27 \u4e3e\u4f8b\u7406\u89e3Local-Conv\u7684\u4f5c\u7528\t215\n5.28 \u7b80\u8ff0\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u5316\u53f2\t216\n\u7b2c\u516d\u7ae0 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc(RNN)\t218\n6.1 RNNs\u548cFNNs\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t218\n6.2 RNNs\u5178\u578b\u7279\u70b9\uff1f\t218\n6.3 RNNs\u80fd\u5e72\u4ec0\u4e48\uff1f\t219\n6.4 RNNs\u5728NLP\u4e2d\u5178\u578b\u5e94\u7528\uff1f\t220\n6.5 RNNs\u8bad\u7ec3\u548c\u4f20\u7edfANN\u8bad\u7ec3\u5f02\u540c\u70b9\uff1f\t220\n6.6 \u5e38\u89c1\u7684RNNs\u6269\u5c55\u548c\u6539\u8fdb\u6a21\u578b\t221\n6.6.1 Simple RNNs(SRNs)\t221\n6.6.2 Bidirectional RNNs\t221\n6.6.3 Deep(Bidirectional) RNNs\t222\n6.6.4 Echo State Networks\uff08ESNs\uff09\t222\n6.6.5 Gated Recurrent Unit Recurrent Neural Networks\t224\n6.6.6 LSTM Netwoorks\t224\n6.6.7 Clockwork RNNs(CW-RNNs)\t225\n\u7b2c\u4e03\u7ae0 \u76ee\u6807\u68c0\u6d4b\t228\n7.1 \u57fa\u4e8e\u5019\u9009\u533a\u57df\u7684\u76ee\u6807\u68c0\u6d4b\u5668\t228\n7.1.1 \u6ed1\u52a8\u7a97\u53e3\u68c0\u6d4b\u5668\t228\n7.1.2 \u9009\u62e9\u6027\u641c\u7d22\t229\n7.1.3 R-CNN\t230\n7.1.4 \u8fb9\u754c\u6846\u56de\u5f52\u5668\t230\n7.1.5 Fast R-CNN\t231\n7.1.6 ROI \u6c60\u5316\t233\n7.1.7 Faster R-CNN\t233\n7.1.8 \u5019\u9009\u533a\u57df\u7f51\u7edc\t234\n7.1.9 R-CNN \u65b9\u6cd5\u7684\u6027\u80fd\t236\n7.2 \u57fa\u4e8e\u533a\u57df\u7684\u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08R-FCN\uff09\t237\n7.3 \u5355\u6b21\u76ee\u6807\u68c0\u6d4b\u5668\t240\n7.3.1\u5355\u6b21\u68c0\u6d4b\u5668\t241\n7.3.2 \u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u9884\u6d4b\t241\n7.3.3 SSD\t243\n7.4 YOLO\u7cfb\u5217\t244\n7.4.1 YOLOv1\u4ecb\u7ecd\t244\n7.4.2 YOLOv1\u6a21\u578b\u4f18\u7f3a\u70b9\uff1f\t252\n7.4.3 YOLOv2\t253\n7.4.4 YOLOv2\u6539\u8fdb\u7b56\u7565\t254\n7.4.5 YOLOv2\u7684\u8bad\u7ec3\t261\n7.4.6 YOLO9000\t261\n7.4.7 YOLOv3\t263\n7.4.8 YOLOv3\u6539\u8fdb\t264\n\u7b2c\u516b\u7ae0 \u56fe\u50cf\u5206\u5272\t269\n8.1 \u4f20\u7edf\u7684\u57fa\u4e8eCNN\u7684\u5206\u5272\u65b9\u6cd5\u7f3a\u70b9\uff1f\t269\n8.1 FCN\t269\n8.1.1 FCN\u6539\u53d8\u4e86\u4ec0\u4e48?\t269\n8.1.2 FCN\u7f51\u7edc\u7ed3\u6784\uff1f\t270\n8.1.3 \u5168\u5377\u79ef\u7f51\u7edc\u4e3e\u4f8b\uff1f\t271\n8.1.4 \u4e3a\u4ec0\u4e48CNN\u5bf9\u50cf\u7d20\u7ea7\u522b\u7684\u5206\u7c7b\u5f88\u96be\uff1f\t271\n8.1.5 \u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u5982\u4f55\u76f8\u4e92\u8f6c\u5316\uff1f\t272\n8.1.6 FCN\u7684\u8f93\u5165\u56fe\u7247\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u662f\u4efb\u610f\u5927\u5c0f\uff1f\t272\n8.1.7 \u628a\u5168\u8fde\u63a5\u5c42\u7684\u6743\u91cdW\u91cd\u5851\u6210\u5377\u79ef\u5c42\u7684\u6ee4\u6ce2\u5668\u6709\u4ec0\u4e48\u597d\u5904\uff1f\t273\n8.1.8 \u53cd\u5377\u79ef\u5c42\u7406\u89e3\t275\n8.1.9 \u8df3\u7ea7(skip)\u7ed3\u6784\t276\n8.1.10 \u6a21\u578b\u8bad\u7ec3\t277\n8.1.11 FCN\u7f3a\u70b9\t280\n8.2 U-Net\t280\n8.3 SegNet\t282\n8.4 \u7a7a\u6d1e\u5377\u79ef(Dilated Convolutions)\t283\n8.4 RefineNet\t285\n8.5 PSPNet\t286\n8.6 DeepLab\u7cfb\u5217\t288\n8.6.1 DeepLabv1\t288\n8.6.2 DeepLabv2\t289\n8.6.3 DeepLabv3\t289\n8.6.4 DeepLabv3+\t290\n8.7 Mask-R-CNN\t293\n8.7.1 Mask-RCNN \u7684\u7f51\u7edc\u7ed3\u6784\u793a\u610f\u56fe\t293\n8.7.2 RCNN\u884c\u4eba\u68c0\u6d4b\u6846\u67b6\t293\n8.7.3 Mask-RCNN \u6280\u672f\u8981\u70b9\t294\n8.8 CNN\u5728\u57fa\u4e8e\u5f31\u76d1\u7763\u5b66\u4e60\u7684\u56fe\u50cf\u5206\u5272\u4e2d\u7684\u5e94\u7528\t295\n8.8.1 Scribble\u6807\u8bb0\t295\n8.8.2 \u56fe\u50cf\u7ea7\u522b\u6807\u8bb0\t297\n8.8.3 DeepLab+bounding box+image-level labels\t298\n8.8.4 \u7edf\u4e00\u7684\u6846\u67b6\t299\n\u7b2c\u4e5d\u7ae0 \u5f3a\u5316\u5b66\u4e60\t301\n9.1 \u5f3a\u5316\u5b66\u4e60\u7684\u4e3b\u8981\u7279\u70b9\uff1f\t301\n9.2 \u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u5b9e\u4f8b\t302\n9.3 \u5f3a\u5316\u5b66\u4e60\u548c\u76d1\u7763\u5f0f\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\u7684\u533a\u522b\t303\n9.4 \u5f3a\u5316\u5b66\u4e60\u4e3b\u8981\u6709\u54ea\u4e9b\u7b97\u6cd5\uff1f\t305\n9.5 \u6df1\u5ea6\u8fc1\u79fb\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t305\n9.6 \u5206\u5c42\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t306\n9.7 \u6df1\u5ea6\u8bb0\u5fc6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t306\n9.8 \u591a\u667a\u80fd\u4f53\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t307\n9.9 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5c0f\u7ed3\t307\n\u7b2c\u5341\u7ae0 \u8fc1\u79fb\u5b66\u4e60\t309\n10.1 \u4ec0\u4e48\u662f\u8fc1\u79fb\u5b66\u4e60\uff1f\t309\n10.2 \u4ec0\u4e48\u662f\u591a\u4efb\u52a1\u5b66\u4e60\uff1f\t309\n10.3 \u591a\u4efb\u52a1\u5b66\u4e60\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\t309\n10.4 \u4ec0\u4e48\u662f\u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\uff1f\t311\n10.5 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u4e3e\u4f8b\uff1f\t311\n10.6 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u6709\u4ec0\u4e48\u6311\u6218\uff1f\t311\n10.7 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u4f18\u7f3a\u70b9\uff1f\t312\n\u7b2c\u5341\u4e09\u7ae0 \u4f18\u5316\u7b97\u6cd5\t314\n13.1 CPU\u548cGPU \u7684\u533a\u522b\uff1f\t314\n13.2 \u5982\u4f55\u89e3\u51b3\u8bad\u7ec3\u6837\u672c\u5c11\u7684\u95ee\u9898\t315\n13.3 \u4ec0\u4e48\u6837\u7684\u6837\u672c\u96c6\u4e0d\u9002\u5408\u7528\u6df1\u5ea6\u5b66\u4e60?\t315\n13.4 \u6709\u6ca1\u6709\u53ef\u80fd\u627e\u5230\u6bd4\u5df2\u77e5\u7b97\u6cd5\u66f4\u597d\u7684\u7b97\u6cd5?\t316\n13.5 \u4f55\u4e3a\u5171\u7ebf\u6027, \u8ddf\u8fc7\u62df\u5408\u6709\u5565\u5173\u8054?\t316\n13.6 \u5e7f\u4e49\u7ebf\u6027\u6a21\u578b\u662f\u600e\u88ab\u5e94\u7528\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d?\t316\n13.7 \u9020\u6210\u68af\u5ea6\u6d88\u5931\u7684\u539f\u56e0?\t317\n13.8 \u6743\u503c\u521d\u59cb\u5316\u65b9\u6cd5\u6709\u54ea\u4e9b\t317\n13.9 \u542f\u53d1\u5f0f\u4f18\u5316\u7b97\u6cd5\u4e2d\uff0c\u5982\u4f55\u907f\u514d\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\uff1f\t318\n13.10 \u51f8\u4f18\u5316\u4e2d\u5982\u4f55\u6539\u8fdbGD\u65b9\u6cd5\u4ee5\u9632\u6b62\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\t319\n13.11 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\uff1f\t319\n13.14 \u5982\u4f55\u8fdb\u884c\u7279\u5f81\u9009\u62e9\uff08feature selection\uff09\uff1f\t321\n13.14.1 \u5982\u4f55\u8003\u8651\u7279\u5f81\u9009\u62e9\t321\n13.14.2 \u7279\u5f81\u9009\u62e9\u65b9\u6cd5\u5206\u7c7b\t321\n13.14.3 \u7279\u5f81\u9009\u62e9\u76ee\u7684\t322\n13.15 \u68af\u5ea6\u6d88\u5931\/\u68af\u5ea6\u7206\u70b8\u539f\u56e0\uff0c\u4ee5\u53ca\u89e3\u51b3\u65b9\u6cd5\t322\n13.15.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u68af\u5ea6\u66f4\u65b0\u89c4\u5219\uff1f\t322\n13.15.2 \u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\u539f\u56e0\uff1f\t323\n13.15.3 \u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\u7684\u89e3\u51b3\u65b9\u6848\t324\n13.16 \u6df1\u5ea6\u5b66\u4e60\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e8c\u9636\u4f18\u5316\t325\n13.17 \u600e\u6837\u4f18\u5316\u4f60\u7684\u6df1\u5ea6\u5b66\u4e60\u7cfb\u7edf\uff1f\t326\n13.18\u4e3a\u4ec0\u4e48\u8981\u8bbe\u7f6e\u5355\u4e00\u6570\u5b57\u8bc4\u4f30\u6307\u6807\uff1f\t326\n13.19\u6ee1\u8db3\u548c\u4f18\u5316\u6307\u6807\uff08Satisficing and optimizing metrics\uff09\t327\n13.20 \u600e\u6837\u5212\u5206\u8bad\u7ec3\/\u5f00\u53d1\/\u6d4b\u8bd5\u96c6\t328\n13.21\u5982\u4f55\u5212\u5206\u5f00\u53d1\/\u6d4b\u8bd5\u96c6\u5927\u5c0f\t329\n13.22\u4ec0\u4e48\u65f6\u5019\u8be5\u6539\u53d8\u5f00\u53d1\/\u6d4b\u8bd5\u96c6\u548c\u6307\u6807\uff1f\t329\n13.23 \u8bbe\u7f6e\u8bc4\u4f30\u6307\u6807\u7684\u610f\u4e49\uff1f\t330\n13.24 \u4ec0\u4e48\u662f\u53ef\u907f\u514d\u504f\u5dee\uff1f\t331\n13.25 \u4ec0\u4e48\u662fTOP5\u9519\u8bef\u7387\uff1f\t331\n13.26 \u4ec0\u4e48\u662f\u4eba\u7c7b\u6c34\u5e73\u9519\u8bef\u7387\uff1f\t332\n13.27 \u53ef\u907f\u514d\u504f\u5dee\u3001\u51e0\u5927\u9519\u8bef\u7387\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\t332\n13.28 \u600e\u6837\u9009\u53d6\u53ef\u907f\u514d\u504f\u5dee\u53ca\u8d1d\u53f6\u65af\u9519\u8bef\u7387\uff1f\t332\n13.29 \u600e\u6837\u51cf\u5c11\u65b9\u5dee\uff1f\t333\n13.30 \u8d1d\u53f6\u65af\u9519\u8bef\u7387\u7684\u6700\u4f73\u4f30\u8ba1\t333\n13.31 \u4e3e\u673a\u5668\u5b66\u4e60\u8d85\u8fc7\u5355\u4e2a\u4eba\u7c7b\u8868\u73b0\u51e0\u4e2a\u4f8b\u5b50\uff1f\t334\n13.32 \u5982\u4f55\u6539\u5584\u4f60\u7684\u6a21\u578b\uff1f\t334\n13.33 \u7406\u89e3\u8bef\u5dee\u5206\u6790\t335\n13.34 \u4e3a\u4ec0\u4e48\u503c\u5f97\u82b1\u65f6\u95f4\u67e5\u770b\u9519\u8bef\u6807\u8bb0\u6570\u636e\uff1f\t336\n13.35 \u5feb\u901f\u642d\u5efa\u521d\u59cb\u7cfb\u7edf\u7684\u610f\u4e49\uff1f\t336\n13.36 \u4e3a\u4ec0\u4e48\u8981\u5728\u4e0d\u540c\u7684\u5212\u5206\u4e0a\u8bad\u7ec3\u53ca\u6d4b\u8bd5\uff1f\t337\n13.37 \u5982\u4f55\u89e3\u51b3\u6570\u636e\u4e0d\u5339\u914d\u95ee\u9898\uff1f\t338\n13.38 \u68af\u5ea6\u68c0\u9a8c\u6ce8\u610f\u4e8b\u9879\uff1f\t340\n13.39 \u4ec0\u4e48\u662f\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.40 \u4ec0\u4e48\u662f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.41 \u4ec0\u4e48\u662f\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.42 \u600e\u4e48\u914d\u7f6emini-batch\u68af\u5ea6\u4e0b\u964d\t342\n13.43 \u5c40\u90e8\u6700\u4f18\u7684\u95ee\u9898\t343\n13.44 \u63d0\u5347\u7b97\u6cd5\u6027\u80fd\u601d\u8def\t346\n\u7b2c\u5341\u56db\u7ae0 \u8d85\u53c2\u6570\u8c03\u6574\t358\n14.1 \u8c03\u8bd5\u5904\u7406\t358\n14.2 \u6709\u54ea\u4e9b\u8d85\u53c2\u6570\t359\n14.3 \u5982\u4f55\u9009\u62e9\u8c03\u8bd5\u503c?\t359\n14.4 \u4e3a\u8d85\u53c2\u6570\u9009\u62e9\u5408\u9002\u7684\u8303\u56f4\t359\n14.5 \u5982\u4f55\u641c\u7d22\u8d85\u53c2\u6570\uff1f\t359\n\u7b2c\u5341\u4e94\u7ae0 \u5f02\u6784\u8ba1\u7b97\uff0c GPU\u548c\u6846\u67b6\u9009\u578b\u6307\u5357 361\n15.1 \u4ec0\u4e48\u662f\u5f02\u6784\u8ba1\u7b97\uff1f\t361\n15.2 \u4ec0\u4e48\u662fGPGPU\uff1f\t361\n15.3 GPU\u67b6\u6784\u7b80\u4ecb\t361\n15.3.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528GPU\uff1f\n15.3.2 CUDA \u6838\u5fc3\u662f\u4ec0\u4e48\uff1f\n15.3.3 \u65b0\u56fe\u7075\u67b6\u6784\u91cc\u7684tensor core\u5bf9\u6df1\u5ea6\u5b66\u4e60\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n15.3.4 GPU\u5185\u5b58\u67b6\u6784\u548c\u5e94\u7528\u6027\u80fd\u7684\u8054\u7cfb\uff1f\n15.4 CUDA \u6846\u67b6\n15.4.1 \u505aCUDA\u7f16\u7a0b\u96be\u4e0d\u96be\uff1f\n15.4.2 cuDNN\n15.5 GPU\u786c\u4ef6\u73af\u5883\u914d\u7f6e\u63a8\u8350\n15.5.1 GPU\u4e3b\u8981\u6027\u80fd\u6307\u6807\n15.5.2 \u8d2d\u4e70\u5efa\u8bae\n15.6 \u8f6f\u4ef6\u73af\u5883\u642d\u5efa\n15.6.1 \u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\uff1f\n15.6.2 \u672c\u673a\u5b89\u88c5\u8fd8\u662f\u4f7f\u7528docker\uff1f\n15.6.3 GPU\u9a71\u52a8\u95ee\u9898\n15.7 \u6846\u67b6\u9009\u62e9\n15.7.1 \u4e3b\u6d41\u6846\u67b6\u6bd4\u8f83\n15.7.2 \u6846\u67b6\u8be6\u7ec6\u4fe1\u606f\n15.7.3 \u54ea\u4e9b\u6846\u67b6\u5bf9\u4e8e\u90e8\u7f72\u73af\u5883\u53cb\u597d\uff1f\n15.7.4 \u79fb\u52a8\u5e73\u53f0\u7684\u6846\u67b6\u5982\u4f55\u9009\u62e9\uff1f\n15.8 \u5176\u4ed6\n15.8.1 \u591aGPU\u73af\u5883\u7684\u914d\u7f6e\n15.8.2 \u662f\u4e0d\u662f\u53ef\u4ee5\u5206\u5e03\u5f0f\u8bad\u7ec3\uff1f\n15.8.3 \u53ef\u4ee5\u5728SPARK\u73af\u5883\u91cc\u8bad\u7ec3\u6216\u8005\u90e8\u7f72\u6a21\u578b\u5417\uff1f\n15.8.4 \u600e\u4e48\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\uff1f\n15.8.5 TPU\u548cGPU\u7684\u533a\u522b\uff1f\n15.8.6 \u672a\u6765\u91cf\u5b50\u8ba1\u7b97\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7b49AI\u6280\u672f\u7684\u5f71\u54cd\uff1f\n\u53c2\u8003\u6587\u732e\t366\nhey you look like a cool developer.\nTranslate it in english.\n","40":"English | \u7b80\u4f53\u4e2d\u6587\nHacker Scripts\nBased on a true\nstory:\n\nxxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.\n\n\nxxx: So we're sitting here, looking through his, uhm, \"legacy\"\n\n\nxxx: You're gonna love this\n\n\nxxx: smack-my-bitch-up.sh - sends a text message \"late at work\" to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.\n\n\nxxx: kumar-asshole.sh - scans the inbox for emails from \"Kumar\" (a DBA at our clients). Looks for keywords like \"help\", \"trouble\", \"sorry\" etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply \"no worries mate, be careful next time\".\n\n\nxxx: hangover.sh - another cron-job that is set to specific dates. Sends automated emails like \"not feeling well\/gonna work from home\" etc. Adds a random \"reason\" from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.\n\n\nxxx: (and the oscar goes to) fucking-coffee.sh - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like sys brew. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.\n\n\nxxx: holy sh*t I'm keeping those\n\nOriginal: http:\/\/bash.im\/quote\/436725 (in Russian)\nPull requests with other implementations (Python, Perl, Shell, etc) are welcome.\nUsage\nYou need these environment variables:\n# used in `smack-my-bitch-up` and `hangover` scripts\nTWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nTWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n\n# used in `kumar_asshole` script\nGMAIL_USERNAME=admin@example.org\nGMAIL_PASSWORD=password\nFor Ruby scripts you need to install gems:\ngem install dotenv twilio-ruby gmail\nCron jobs\n# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.\n20 21 * * 1-5 \/path\/to\/scripts\/smack-my-bitch-up.sh >> \/path\/to\/smack-my-bitch-up.log 2>&1\n\n# Runs `hangover.sh` monday to friday at 8:45 am.\n45 8 * * 1-5 \/path\/to\/scripts\/hangover.sh >> \/path\/to\/hangover.log 2>&1\n\n# Runs `kumar-asshole.sh` every 10 minutes.\n*\/10 * * * * \/path\/to\/scripts\/kumar-asshole.sh\n\n# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.\n0 9-18 * * 1-5 \/path\/to\/scripts\/fucking-coffee.sh\n\nCode is released under WTFPL.\n","41":"Awesome Mac\n  \n\n \n\uf8ff Now we have become very big, Different from the original idea.\nCollect premium software in various categories. Feel free to star and fork.\nAny comments, suggestions? Let us know!. We love PRs :) Please take a look at the Contributing guidelines before opening one. Follow the awesome list.\nExplanation\nEnglish | \u4e2d\u6587\n means open source, click to open open source repo;\n means free to use, or free personal license;\n means App store hyperlink;\n means hyperlink to a corresponding Awesome list for the item;\nAwesome Mac App for macOS. Installers for the latest stable build for Mac can be downloaded here.\n\nContents\n\nAwesome Mac\nContents\nReading and Writing Tools\n\nText Editors\nOffice\nMarkdown Tools\nNote-taking\nJournaling\nEbooks\nRSS\nOthers\n\n\nDeveloper Tools\n\nIDEs\nDeveloper Utilities\nRegular Expression Editors\nAPI Development and Analysis\nNetwork Analysis\nCommand Line Tools\nFrameworks For Hybrid Applications\nVersion Control\nVirtualization\nDatabases\n\n\nDesign and Product\n\nDesign Tools\nPrototyping and Mind-Mapping Tools\nScreencapturing Software\nOther Tools\n\n\nCommunication\n\nCollaboration and Team Tools\nEmail Clients\nFile Sharing\n\n\nData Recovery Tools\nAudio and Video Tools\nDownload Management Tools\nCloud Storage\nInput Methods\nBrowsers\nTranslation Tools\nEncryption\nSecurity Tools\nProxy and VPN Tools\nUtilities\n\nClipboard Tools\nMenu Bar Tools\nFile Organization Tools\nGeneral Tools\nTo-Do Lists\nProductivity\nWindow Management\nPassword Management\nFinder Tools\nQuality of Life Improvements\nSystem Related Tools\n\n\nGaming Software\nRemote Login Software\nSocial Networking\nQuickLook Plugins\nThird Party App Markets\n\nPackage Managers\n\n\nMac App Download Sites\n\nGenuine Sites\nPirated software download site blacklist\n\n\nPodcasts\nContributors\nBackers\nSponsors\nLicense\n\nReading and Writing Tools\nApplications to edit text, I suggest the open-source editors\nText Editors\n\nAtom - Hackable text editor for the 21st century made by GitHub. Atom Plugins.   \nBear Writer - Beautiful, flexible writing app for crafting notes and prose. \nBootstrap Studio - A powerful desktop app for creating responsive websites using the Bootstrap framework.\nBrackets - A modern, open source text editor that understands web design.  \nChocolat - Native text editor.\nCoda2 - Fast, clean and powerful text editor.\nCotEditor - Lightweight plain-text editor for macOS.  \nEmacs - A popular text editor used mainly on Unix-based systems by programmers, scientists, engineers, students, and system administrators.   \nLightTable - The next generation code editor.  \nmicro - Modern and intuitive terminal-based text editor.  \nNova - Modern, extensible text editor, by the makers of Coda.\nONI - IDE powered by Neovim.  \nSublime Text - Sophisticated text editor for code, markup and prose. You'll love the slick user interface, extraordinary features and amazing performance, Sublime Text Plugins. \nTextMate - Editor that brings Apple's approach to operating systems into the world of text editors.  \nVim - Highly configurable text editor built to make creating and changing any kind of text very efficient, Vim Plugins.   \nVimr - Refined Vim Experience for OS X.  \n\nOffice\n\nLibreOffice - LibreOffice is free and open-source software office software. Software is tested and used daily by a large and devoted user community.  \nOpenOffice - Compatible with other major office suites, Apache OpenOffice is free to download, use and distribute.  \nWPS - Is a cross-platform office software suite. \nPages Documents that stand apart.  \nKeynote Build stunning presentations.  \nNumbers Create impressive spreadsheets.  \nMicrosoft Office Unmistakably Office, designed for Mac. \nSoftMaker Office A complete office suite that aims for full compatibility with Microsoft Office documents\n\nMarkdown Tools\n\n\n\n\nEME - Open-source Markdown editor with an interface like Chrome. \niA Writer - Writing app with an emphasis on simplicity and design.\nLightPaper - Simple, beautiful, yet powerful text editor for your Mac.\nMacDown - Open-source Markdown editor for OS X.   \nMarked 2 - This is the Markdown preview with an elegant and powerful set of tools for all writers.\nMarkText - Next generation markdown editor, running on platforms of MacOS Windows and Linux.  \nMarp - Markdown presentation writer with cross-platform support.  \nMarxico - Delicate Markdown editor for Evernote. Reliable storage and sync.\nMWeb - Pro Markdown writing, and static blog generator App.\nTextNut - Rich-format editor featuring Markdown export and Markdown syntax hints. \nTypora - Truly minimal Markdown editor featuring seamless live preview. \nUlysses - The Ultimate Writing App for Mac, iPad and iPhone.\n\nNote-taking\n\nAgenda - Date-focused note taking app for both planning and documenting your projects. \nBoostnote - Note-taking app made for programmers. \nDnote - A simple command line notebook with multi-device sync and a web interface.  \nEvernote - Infamous note-taking app, available on many platforms. \nFSNotes - File System Notes is a modern notes manager, native on macOS and iOS.  \nGooba - Writing app and task manager with a simple and interactive design.\nInkdrop - Notebook app for Markdown lovers built on top of Electron.\nJoplin - Cross platform open-source notepad with markdown support and todo list manager with synchronisation capabilities.  \nMarginNote - In-depth PDF and EPUB reading, learning, managing and note taking app.\nNotable - The markdown-based note-taking app that doesn't suck.\nNotebook Note-taking app. \nNotes - Clean, simple note-taking app.  \nNotion -Notion is the all-in-one workspace. From notes, tasks, wikis, to database, Notion is all you need. Works great for teams and individuals.\nObsidian - Obsidian is a powerful knowledge base that works on top of a local folder of plain text Markdown files.\nOneNote - Note-taking app by Microsoft. \nQOwnNotes - Open-source notepad with markdown support and todo list manager.  \nQuiver - The Programmer's Notebook, lets you easily mix text, code, Markdown and LaTeX within one note, edit code with an awesome code editor and live preview Markdown and LaTeX.\nAliYuQue - Cloud note-taking knowledge management, collaboration platform, Markdown based writing, support embedded flow chart, brain diagram, timing sequence, code rendering, Sketch board creation, personal knowledge sharing, etc. Compared to youdao cloud note and evernote similar products, which include all of its functions, support knowledge sharing and more powerful creation, collaboration and editor, it comes from alibaba ant financial.\n\nJournaling\n\nDay One - Excellent journaling app using text, photos, video, audio, location data, and more. \nJourney - Journaling app with many features and with apps for every platform available. \n\nEbooks\n\nCalibre - Free and open-source e-book computer software application suite which runs on multiple platforms, allows users to manage e-book collections as well as create, edit, and read e-books.  \nClearview - Tabbed style e-book reader for PDF, EPUB (DRM free), CHM, and MOBI.\niChm - Ebook reader for CHM (Microsoft Compiled HTML help) files.  \nKindle App - Amazon official reading app of kindle.\nKlib - New way to manage highlights for Kindle and iBooks.  \nScribus - Professional layout and publishing software supporting EPS and SVG import\/export, and PDF support.   \nSigil - Multi-platform EPUB ebook Editor.  \n\nRSS\n\nLeaf - Amazing news reader dedicated to help you enjoy your daily news and easily manage your subscriptions.\nNetNewsWire - It\u2019s a free and open source feed reader for macOS.  \nReadKit - Mac read-later client supporting all major providers: Instapaper, Pocket and Readability. Even more, ReadKit is a full-featured RSS reader as well.\nReeder 4 - News reader for Feedbin, Feedly, Feed Wrangler and so on. \nVienna - RSS\/Atom reader for Mac OS X.  \nFeedy - An elegant and lightweight RSS client and news reader for your Mac. \n\nOthers\n\nbindPDF - Combine multiple PDF files into a single PDF file using a friendly UI.  \nCHM Reader - Read Compiled HTML (.chm) documents on your Mac. \nChmox - Read CHM documents on your Mac. \nPDF Expert - Read, annotate and edit PDFs, change text and images.\nPDF Reader Pro - You Can view, create, sign, convert and compress any PDF documents. \nSkim - PDF reader and note-taker for OS X.  \nSkyFonts - The simplest way to try, install, and manage fonts.\nSpillo - Powerful, beautiful and amazingly fast Pinboard client for OS X.\nTad - Application for viewing and analyzing tabular data such as CSV files.  \ntexpad - Great LaTeX editor for Mac with auto-update PDF and autocomplete LaTeX commands.\n\nDeveloper Tools\nIDEs\n\nAndroid Studio - The official IDE for Android, based on Intellij IDEA.   \nDeco IDE - The best IDE for building React Native apps.  \nEclipse - Popular open-source IDE, mainly for Java but with plugin support for a wide array of languages and platforms.  \nEspresso - The web editor for Mac is back. For people who make delightful, innovative and fast websites.\nJetBrains Toolbox App - Manage installed JetBrains tools, download new ones and open recent projects. \n\nAppCode - Smart IDE for iOS\/macOS development\nCLion - Powerful C and C++ IDE. (Free for Students)\nDataGrip - Cross-Plaform IDE for Databases and SQL. FREE for Students, check here for more info.\nGoLand - Provides ergonomic environment for Go development.\nIntelliJ IDEA - Powerful IDE for JVM languages. (Free for Students)\nPyCharm - Powerful Python IDE, which has professional version and community version.\nRider - Cross-Platform C# IDE. It is an alternative to Visual Studio by Microsoft with the additional benefit of getting Resharper features that are not available on Visual Studio for Mac.\nWebStorm - The smartest JavaScript IDE by JetBrains. FREE for Students, check here for more info.\n\n\nHaskell for Mac - A Modern Development Environment for Haskell. \nNetBeans IDE - Free and open-source IDE, mainly used for Java development, but supports many other languages and frameworks.  \nVisual Studio Community for Mac - Fully-featured IDE Free for students, open-source and individual developers. \nVisual Studio Code - Microsoft's free & open-source editor, TypeScript friendly, VSCode Plugins.   \nXamarin Studio - Free cross platform C# IDE. Xamarin Studio supports iOS, Android and .Net development   \nXcode - Essential IDE for iOS\/macOS development. \nSpyder - Powerful scientific environment written in Python, for Python.\n\nDeveloper Utilities\n\nBetterRename - The most powerful and complete Mac file renaming application on the market. \nBeyond Compare - Compare files and folders using simple, powerful commands that focus on the differences you are interested in and ignore those you are not. \nBidbar - Manage bash commands from the menu bar and run them with keyboard shortcuts.\nCacher - Cloud-based, team-enabled code snippet manager with Gist sync, VSCode\/Atom\/Sublime packages and Mac\/Windows\/Linux\/Web clients.\ncanSnippet - Powerful snippet management tool that works across the whole operating system, always accessible via simple keyboard shortcut.\nCodeKit - Web development tool which can automatically compile Less, Sass, CoffeeScript, TypeScript, Jade and JavaScript, auto-refresh browsers and much more.\nConduktor - Kafka desktop client.  \nDash - Awesome API documentation browser and code snippet manager.\nDiffMerge - Application to visually compare and merge files. \nEnvPane - OS X preference pane for environment variables.  \nFinderGo - Open terminal quickly from Finder.  \nFinicky - Application that allows you to set up rules that decide which browser is opened for every link that would open the default browser.  \nGas Mask - Simple hosts file manager for Mac OS X.  \nGemini - Intelligent duplicate file finder.\nHex Fiend - Fast and clever open source hex editor.   \nHosts.prefpane - System preference pane to manage your hosts file.  \niHosts - The only \/etc\/hosts editor on Mac App Store.  \nIntegrity - Free website link checker for Mac. \nKaleidoscope - Powerful compare tool for text, images and folders. Works perfectly with git, svn or other version control tools.\nKoala - GUI application for Less, Sass, Compass and CoffeeScript compilation.  \nLoca Studio - Analyze, review, and edit app translations. Supports Xcode Localization Catalog (xcloc) and XLIFF 1.2 file formats. \nMacSystemColors - Mac app that shows all system colors in light and dark mode for Cocoa developers.  \nMJML - Framework that utilizes a semantic syntax and a rich standard components library, which allow users to easily create responsive emails.  \nPaintCode - PaintCode is a unique vector drawing app that generates Objective-C or Swift code in real time, acting as a bridge between developers and graphic designers.\nPPRows - Application to calculate how many lines of code you write.  \nPushMate PushMate is a MacOS app that solves common push notification problems by ensuring your push payloads are correct.\nSCM Breeze - Set of shell scripts (for bash and zsh) that enhance your interaction with git.  \nSecureCRT - Terminal emulation which supports SSH, Telnet or other protocols.\nSite Sucker - SiteSucker is a Macintosh application that automatically downloads websites from the Internet. \nSnippetsLab - Easy-to-use code snippets manager.\nSolarized - Clean and beautiful color theme. Works well with iTerm, JetBrains products, Vim etc.\nStarUML - Powerful UML app.\nSwiftify - Objective-C to Swift code converter and Xcode & Finder extensions.\nSwitchHosts - Free and open-source app for hosts management & switching.  \nSYM - GUI Application to symbolicate iOS crash log.  \nTeXstudio - Integrated writing environment for creating LaTeX documents.  \nTimelane - Visually profile your asynchronous code.  \nTouch Bar Simulator - Use the Touch Bar on any Mac.  \nVisual Paradigm - All-in-one UML, SysML, BPMN Modeling Platform for Agile, EA TOGAF ADM Process Management.\nWoodpecker - View iOS app's Sandbox files, UserDefaults, Keychain items on a Mac. \nWWDC - The Mac OS unofficial WWDC app.  \nzeplin - Collaboration tool for work between designers and developers. \nNib Unlocker - .nib to .xib converter \n\nRegular Expression Editors\n\nPatterns - Regular expression editor.\nRegex - Regular expression testing tool with an emphasis on simplicity.\nRegExRX - Development tool for regular expressions.\n\nAPI Development and Analysis\n\nCocoa Rest Client - Free, open-source, native Apple OS X app for testing HTTP\/REST endpoints.  \nInsomnia - The most intuitive cross-platform REST API Client.  \nPaw - Advanced HTTP client.\nPostman - Powerful GUI platform to make your API development faster & easier, from building API requests through testing, documentation and sharing.\nKatalon Studio - Simplify API, Web, Mobile Automation Tests Free. Robust. Cross-platform. Automation testers from 160 countries with YouTube channels, GitHub repositories.\n\nNetwork Analysis\n\nCharles - HTTP proxy \/ HTTP monitor \/ Reverse Proxy that enables a developer to view all of the HTTP and SSL \/ HTTPS traffic between their machine and the Internet.\nJames - Open-source proxy tool for checking and mapping requests with http as well as https.  \nLittle Snitch - Network monitor with a world map for visualizing network connections.\nmitmproxy - Interactive intercepting HTTP proxy for penetration testers and software developers.  \nProxie - HTTP debugging proxy. \nProxyman - Modern and intuitive HTTP debugging proxy for macOS. \nWireshark - The world\u2019s foremost and widely-used network protocol analyzer.  \n\nCommand Line Tools\n\n\n\n\nack - A tool like grep, optimized for programmers. \nalacritty - A cross-platform, GPU-accelerated terminal emulator.  \narchey-osx - An archey script for OS X.  \nasciinema - Easily record terminal sessions and replay them in a terminal as well as in a web browser.  \nautojump - Replace cd with an intelligent autojump to easily navigate directories from the command line.  \nbash-it - Shameless ripoff of oh-my-zsh for bash.  \nbat - A cat(1) clone with syntax highlighting and Git integration.  \nccat - The colorizing cat which works similar to cat but displays content with syntax highlighting.  \ncmus - Small, fast and powerful console music player for Unix-like operating systems.  \ncool-retro-term - Good looking terminal emulator which mimics the old cathode display.  \ndark-mode - Control dark mode from the command-line.  \neureka - CLI tool to input and store your ideas without leaving the terminal.  \nFish Shell - Smart and user-friendly terminal, which is similar with zsh. \nfselect - Find files with SQL-like queries. \nGithub CLI - gh is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.  \nGlances - Glances is a cross-platform curses-based system monitoring tool.  \nGo2Shell - Go2Shell opens a terminal window to the current directory in Finder.  \nhtop - htop is an interactive text-mode process viewer for Unix systems. It aims to be a better 'top'.  \nhttpie - Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  \nhyper - A terminal built on web technologies.  \niTerm2 - iTerm2 is an amazing terminal emulator for OS X.  \nitunes-remote - Software for controlling iTunes via the terminal.  \njob - JOB, make your short-term command as a long-term job.  \nkitty - A cross-platform, fast, feature full, GPU based terminal emulator.  \nlnav - A log file navigator.  \nm-cli - Swiss Army Knife for macOS.  \nMac-CLI - The ultimate tool to manage your Mac. Automatize the usage of your OS X system.  \nMagic Wormhole - Get Things From One Computer To Another, Safely.  \nmas - Simple command line interface for the Mac App Store.  \nMiller - Like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON.  \nmycli - CLI for MySQL that can do auto-completion and syntax highlighting.  \nndm - Manage npm straight from the couch.  \nnushell - nushell is a modern, GitHub-era shell written in Rust.  \npgcli - Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting.  \nRebound - Instantly browse Stack Overflow results in your terminal when you get a compiler error.  \nSerial - Full-featured serial terminal for the Mac.\nshallow-backup - Easily create text documentation of installed applications, dotfiles, and more.  \nsilver searcher (ag) - A code searching tool similar to ack, with a focus on speed.  \nspaceship - A Zsh prompt for Astronauts.  \nTaskbook - Tasks, boards & notes for the command-line habitat.  \nTerminus - Free terminal tool, built with TypeScript, heavily inspired by Hyper.  \nTermius - Free terminal tool,comparable to xshell on windows platform. \nTextQL - Execute SQL against structured text like CSV or TSV.  \ntmux - \"Terminal multiplexer\", it enables a number of terminals (or windows) to be accessed and controlled from a single terminal. tmux is intended to be a simple, modern, BSD-licensed alternative to programs such as GNU screen. \ntmuxinator - Manage complex tmux sessions easily. \ntrash - Move files and directories to the trash. \nVisiData - Terminal spreadsheet multitool for discovering and arranging data.  \nxonsh - Python-powered, cross-platform, Unix-gazing shell language and command prompt.  \nZsh - Zsh is a shell designed for interactive use, although it is also a powerful scripting language.   \nxxh - Bring your favorite shell wherever you go through the SSH.  \n\nFrameworks For Hybrid Applications\n\nAppJS - Lightweight JavaScript UI library for creating mobile webapps that behave like native apps.  \ncreate-dmg - Create a good-looking DMG for your macOS app in seconds.  \nElectrino - Desktop runtime for apps built on web technologies, using the system's own web browser engine.  \nElectron - Build cross platform desktop application with JavaScript, HTML and CSS.  \nionic - Build amazing native and progressive web apps with Angular and open web technologies. One app running on everything.  \nMacGap - Provides a lightweight JavaScript API for OS X integration, such as displaying native notifications or writing data to a file.  \nnw.js - Build desktop application with HTML and JavaScript. It lets you call all Node.js modules directly from DOM and enables a new way of writing applications with all Web technologies.  \nQt - Cross-platform application framework.\nReact Native for Ubuntu - Build Ubuntu desktop apps using React Native.  \nReact Native macOS - Build OS X desktop apps using React Native and Cocoa.  \nreact-desktop - React UI Components for macOS Sierra.  \nReactXP - Microsoft official production, support platform Web, iOS, Android and Windows UWP is still an ongoing work.  \n\nVersion Control\n\nCornerstone - Powerful version control with a gorgeous interface.\nFork - Fast and friendly Git client for Mac. \nGit Cola - Powerful, Fast, Lightweight and Friendly Git GUI. For those caffeine adicting users. \nGitbar - Open-source\uff0cdisplay Github contribution statistics on your menu bar.  \nGitFinder - Fast and lightweight Git client for Mac with Finder integration. \nGitfox - Commit faster, improve your code quality with superior diffs - and look good doing it. \nGitHub Desktop - The official GitHub GUI.  \nGitKraken - The most popular Git GUI for Windows, Mac and Linux.\nGitX-dev -  Fork of Pieter's nice git GUI for OS X. Includes branch\/tag sidebar and various fixes.  \nHub - Command-line wrapper for Git that makes you better at GitHub.  \nOhMyStar Beautiful and efficient way to manage, explore and share your Github Stars.  \nSmartGit - Git client with support.\nSourceTree - Free Git & Mercurial client for Windows or Mac. \nSublime Merge -  Git client, from the makers of Sublime Text.\nTower2 - The most powerful Git client for Mac and Windows.\nVersions - Mac Subversion (SVN) Client.\nGitUp - A simple & powerful Git client\u3002 \n\nVirtualization\n\nDocker - Powerful, performs operating-system-level virtualization.   \nParallels - Powerful, easy-to-use VM. No free upgrade for each new Mac OS.\nVagrant - Tool for building and distributing development environments.   \nVeertu - The lightest VM on Mac. Responsive, sandboxed & native way to run VM on your Mac. \nVirtual Box - Powerful x86 and AMD64\/Intel64 virtualization product. \nVMware Fusion - Powerful, commercial VM developed by VMware.\n\nDatabases\n\nApache Directory Studio - LDAP browser and Active Directory client.  \nAzure Data Studio - Cross-platform database tool for using on Microsoft family on-premises and cloud data platforms such as MSSQL Server \nBase 2 - Application for creating, designing, editing and browsing SQLite 3 database files.\nBdash - Modern SQL client application, supports MySQL, PostgreSQL (Redshift) and  BigQuery.  \nChrome MySQL Admin - Powerful Chrome app to manage your MySQL.  \nCore Data Editor - Core Data Editor lets you easily view, edit and analyze applications\u2018 data.  \nDB Browser for SQLite - Official home of the DB Browser for SQLite.  \nDBeaver - Universal SQL Client.\nElectroCRUD - Modern MySQL CRUD application.  \nFastoNoSQL - Cross-platform GUI client for Redis, Memcached, SSDB, LevelDB, RocksDB, UnQLite, LMDB, ForestDB, Pika and Dynomite key-value databases.  \nFastoRedis - Cross-platform professional GUI management tool for Redis.  \nJackDB - Secure, collaborative environment for your queries and data-driven insights.  \nKeylord - Desktop GUI client for Redis, Bolt, LevelDB and Memcached key-value databases.\nMDB Explorer - MDB tool to open, read, export your MDB files to other formats and databases.\nMedis - GUI Manager for Redis. \nMingo - Easy to use MongoDB GUI with mind-blowing features.\nMongo Management Studio - Simple MongoDB GUI.\nmongoDB.app - The easiest way to get started with mongoDB on the Mac.  \nMongoDB - MongoDB is a document database with the scalability and flexibility that you want with the querying and indexing that you need.   \nMySQL Workbench - The official MySQL GUI.\nNavicat Data Modeler - Powerful and cost-effective database design tool which helps you build high-quality conceptual, logical and physical data models. \nneo4j - The leading graph database!  \npgModeler -  is an open source data modeling tool designed for PostgreSQL.  \nPostgres.app - The easiest way to get started with PostgreSQL on the Mac.  \nPostico - Modern PostgreSQL client for Mac.\nPSequel - PostgreSQL GUI tool for Mac OS X. \nRedisClient - Redis client application on mac, windows and linux.  \nRedisDesktopManager - Cross-platform GUI management tool for Redis.  \nSequel Pro - MySQL database management for Mac OS X.  \nSQLight - SQLite database manager tool. \nSQLPro Studio - Simple, powerful database manager for macOS.\nTableau Public - Free data-visualization software. \nTablePlus - Supports: PostgreSQL, MySQL, RedShift, MariaDB... High-end security ensured.  \n\nDesign and Product\nDesign Tools\n\nAcorn - Great Mac OS X picture and photo editor, built for humans.\nAffinity Designer - Professional graphic design software for Mac.\nAffinity Photo - Professional image editing software for Mac.\nAlchemy - Experimental, open-source drawing application with an emphasis on creating conceptual art. \nAmadine - A vector drawing app that has everything a graphic designer needs wrapped in an uncluttered and intuitive interface.\nArt Text 3 - This is graphic design software specifically tuned for lettering, typography, text mockups and various artistic text effects.\nBlender - Free and open 3D creation software.  \nColorpicker - Colorpicker is a complete open-source colors manipulation tool with picking!  \nFigma - The collaborative interface design tool, for vector graphics and UI prototyping. \nFontForge - Free, open-source font editor.  \nGIMP - The GNU Image Manipulation Program. \nGravit Designer - Full featured free vector design app right at your fingertips.  \ninklet - Turn your Mac trackpad into drawing board.\nInkscape - Professional vector graphics editor. \nKrita - Open-source digital painting software for concept artists, digital painters, and illustrators.  \nmacSVG - Designing HTML5 SVG art and animation.  \nMagicaVoxel - Free, lightweight 8-bit voxel editor and interactive path tracing renderer.\nMakeHuman - Powerful and free 3D human modeler. \nMonodraw - Powerful ASCII art editor designed for the Mac. \nNik Collection - Nik Collection by DxO.\nPaintbrush - Bitmap image editor.  \nPencil2D - A easy, intuitive tool to make 2D hand-drawn animations.  \nPixel Perfect - Tool to overlay design images over implementation and make it pixel perfect.  \nPixelmator - Full-featured image editor for Mac.\nPrinciple -  Application for designing animated and interactive user interfaces.\nScreenToLayers- Easily export your screen into a layered PSD file.   \nSculptris - 3D sculpting software. \nSketch - Professional digital design for mac.\n\nSketch Cache Cleaner - Deletes hidden Sketch history files that can take a lot of space on your hard drive and that you would probably never use.  \nMeasure Plugin - Make it a fun to create spec for developers and teammates.  \nSketch Toolbox Plugin Manager - Simple plugin manager for Sketch.  \nUser Flows Plugin -  Generating flow diagrams from Artboards.  \n\n\nSketchBook - Drawing software for concept design, comic art, and digital sketching. \nSparkle - Pro visual web design.\nTayasui Sketches - Professional drawing software.\nVectr - Free graphics editor used to create vector graphics easily and intuitively. \n\nPrototyping and Mind-Mapping Tools\n\nAdobe XD (Experience Design) - First all-in-one cross-platform tool for designing and prototyping websites and mobile apps.\nAxure RP 8 - Prototypes, specifications and diagrams in one tool.\nBalsamiq Mockups - Wire-framing tool that helps you work faster and smarter.\nFlinto - Quickly create interactive prototypes of mobile, desktop, or web apps.\nFramer - Tool for interactive prototyping.\nJustinmind - Prototyping platform for web and mobile apps.\nKite - Powerful animation and prototyping application for Mac & iOS.\nLighten - The best way to clarify thinking, boost productivity, brainstorm, and visualize concepts.\nLoremify - Great Lorem ipsum generator.\nMarvel - Simple design, prototyping and collaboration.\nMindNode - Mind-mapping software with an emphasis on simplicity and ease-of-use.\nMockFlow - Online prototyping suite for web-design and usability testing.\nMockplus - Prototype faster, smarter and easier.\nOmniGraffle - Diagramming and graphic design for Mac, iPhone, and iPad.\nOrigami Studio -  Tool for designing modern interfaces, built and used by designers at Facebook.\npencil - Free, open-source tool for making diagrams and GUI prototyping.  \nProtoPie - Create the most advanced prototypes as easy as Pie.\nScapple - Practical mind-mapping software with free whiteboard-like layout.\nSimpleMind - The world leader in cross platform Mind Mapping tools.\nWriteMapper - Get from idea to final draft in no time.\nXMind - The most popular mind-mapping tool on the planet.\nSimple Diagrams - A desktop app for creating hand-drawn-like, fast, clear sketches of problems, processes, workflows, ideas and more!\nyGraph Editor - High quality diagrams made easy.\n\nScreencapturing Software\n\nCleanShot - Discover a superior way to capture your Mac's screen.\nCloudApp - Work at the speed of sight. \nGifox - Gif Recording and Sharing. \nKap - Open-source screen-recorder built with web technology.  \nKeyCastr - KeyCastr, an open-source keystroke visualizer.  \nKyapchar - Simple screen and microphone audio recorder for Mac.  \nLicecap - Record your screen and export to GIF. You can change the recording area anytime during recording.  \nLightshot - The fastest way to take a customizable screenshot. \nMonosnap - Make screenshots. Draw on it. Shoot video and share your files. It's fast, easy and free.  \nScreenShot PSD - Capture the screen as a layered PSD for easy editing.  \nSkitch - Screen capture application with a powerful annotation capabilities. \nSnip - Application for sharing captured images on QQ Mail. \nSnipaste -  Simple but powerful snipping tool. \nTeampaper Snap - Let your screenshots speak up.  \nXnip - Handy Screenshot App.  \nDropbox - Dropbox app offers easy screenshot capturing and sharing \n\nOther Tools\n\nAPNGb - PNG image assembler\/disassembler app.  \nAssetizr - Resizing images and optimising them for web and mobile applications.   \nCouleurs - Simple app for grabbing and tweaking the colors you see on your screen. \nExifCleaner - Remove exif metadata from images and videos with drag and drop.  \nFrank DeLoupe - Color-picking tool, supports Retina.\nHEIC Converter - Convert HEIC images to JPEG or PNG.  \nIconset - Free, cross-platform and fast SVG icon organizer and manager for Mac and Windows.\nIconjar - Icon management tool to organize or search your icons.\nIconKit - App icon generator. \nImage2icon - Create and personalize icons from your pictures. \nImageAlpha - Compress images with PNG format and remove transparency.  \nImageOptim - Compress images and remove EXIF information.  \niPic - Easily upload images with Markdown supported.  \nJPEGmini - Reduce image size by up to 80%, without compromising quality.  \nMark Man - Measure & Spec Fast.\nNucleo - Icon manager. Import, export, customize and convert icon libraries.\nPreset Brewery - Tool to convert Lightroom presets to Adobe Camera Raw.\nResize Master - Batch resize and watermark your images fast and easy.  \nRightFont - Preview, sync, install and manage fonts on Mac, Dropbox or Google Drive.\nSip - The best way to collect, organize & share your colors.\nSnagit - Simple, Powerful Screen Capture Software and Screen Recorder.\nSpectrum - Easily and intuitively creating beautiful color schemes. \nsvgus - Organize, clean and transform your SVGs. \nTinyPNG4Mac - Open-source tool to compress images.  \nTropy - Research Photo Management.  \nPicGo - Support for common cdn image hosting tool.  \nPreset Brewery - Tool to convert Lightroom presets to Adobe Camera Raw.\nAssetizr - Resizing images and optimising them for web and mobile applications.   \nAppIconBuilder - Export icons for multi-platform\nuPic - macOS native app, powerful terse image hosting client.  \n\nCommunication\nCollaboration and Team Tools\n\nAdium - Free instant messaging application for Mac OS X. Connect to AIM, MSN, SMPP, Yahoo and more. \nCaprine - Third-party privacy-focused Facebook Messenger app.  \nDingTalk - Free, powerful and professional office tool used by over 5 million enterprises and organizations globally. \nDiscord - All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.\nFranz - Electron based, multi-protocol wrapper for web-based chat. One application, 23 messenger services. \nGitter - Instant messaging and chat room system for developers as well as GitHub users. Developer friendly with Markdown syntax support.\nKeybase - Secure groups, files, and chat for everyone!  \nKrisp - An AI-powered noise cancelling app that mutes background noise during calls.\nLimeChat - Open-source IRC client for Mac OS X.  \nMessenger For Mac - Third-party Facebook messenger for Mac.  \nMuzzle - A simple mac app to silence embarrassing notifications while screensharing.\nRambox - Messaging and emailing app that combines common web applications into one.  \nElement - Create, share communicate. Chat and call securely.  \nSignal Desktop - Fast, simple, secure. Privacy that fits in your pocket. \nSkype - Cross-platform application that provides video chat and voice call services. Users can exchange images, text, video and any other digital documents.\nShift - De-clutter your desktop workspace and streamline your accounts, apps, and workflows.\nSlack - Awesome tool for team collaboration and communication. \nStack - Open, organize and use multiple web apps on a single screen. Stack your apps by categories or projects.\nTeambition - Team collaboration tool, including many features like task plan, schedule, file sharing, instant discussion and everything you need when collaborating with other team members. \nTelegram - Messaging app with a focus on speed and security.\nTextual - Internet Relay Chat (IRC) client. \nWeChat - Official WeChat app for Mac.  \nWeeChat - The extensible command-line chat client. \nWhatsApp Desktop - Available in the Mac App Store, Whatsapp for Desktop. \n\nEmail Clients\n\nAirmail - Fast email client. For both Mac OS and iOS.\nFoxmail - Fast email client. \nMailTags - Use tags to organize email and schedule.\nN1 - Extensible, open-source mail app, free for developers and $7\/month for Pro. \nNylas Mail - Extensible desktop mail app built on the modern web.   \nPolymail - Simple, beautiful and powerful email client. \nPostbox - Powerful, simple and beautiful email client, need to pay for a license.\nSpark - Fast email client. For both Mac OS and iOS.\nThunderBird - Software that makes email easier. \nEdison Mail - A customisable, simple, and beautiful email client. \n\nFile Sharing\n\nCyberduck - Free FTP, SFTP, WebDAV, S3, Backblaze B2, Azure and OpenStack Swift browser. \nFlow - Award-winning, beautiful, fast, and reliable FTP + SFTP client.\nTransmit - Highly flexible and intuitive FTP client, supports SFTP, S3 and iDisk\/WebDAV.\n\nData Recovery Tools\n\nData Rescue - Comprehensive and professional data recovery tool for most cases.\nDiskWarrior - The world\u2019s most advanced repair and recovery tool for Mac.\nR-Studio for Mac - Powerful tool for recovering data on disks, even if their partitions are formatted, damaged or deleted.\nSuperDuper! - Painless fully bootable disk backups.\n\nAudio and Video Tools\n\nAdapter -  Free audio, video and image conversion software. \nAegisub - Free, cross-platform open source tool for creating and modifying subtitles. Aegisub makes it quick and easy to time subtitles to audio, and features many powerful tools for styling them, including a built-in real-time video preview.  \nAudio Profile Manager - Allows you to pin input\/output devices for each particular combination of connected devices. May suppress HDMI displays from being chosen. \nArdour - Cross-platform audio software for multi-track recording and editing. \nAudacity - Free, open-source, cross-platform audio software for multi-track recording and editing.  \nAudio Hijack - Record any application's audio, including VoIP calls from Skype, web streams from Safari, and much more.\nCarol - A minimal and beautiful lyrics app for macOS.  \nCog - Free, open-source audio player.  \nDaVinci Resolve  - Free, cross-platform video editing, color grading, video effects and audio editing software.\nElmedia Player - This media player is a super versatile app for any file format you probably may think of: FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V are all supported as well as many others.\nGifski - Convert videos to high-quality GIFs.   \nHandBrake - Tool for converting video from nearly any format to a selection of modern, widely supported codecs. \nHydrogen - Professional yet simple and intuitive pattern-based drum programming for GNU\/Linux. \niFFmpeg - Comprehensive Media Tool for macOS. Making High Quality Video Encoding Accessible for Everyone.\nIINA - The modern video player for macOS. Based on mpv, the powerful media player project.  \nKodi - Award-winning free and open-source (GPL) software media center for playing videos, music, pictures, games, and more.  \nLMMS Formerly \"Linux MultiMedia Studio\", LMMS is a powerful Digital Audio Workstation designed like FL Studio (formerly Fruity Loops).  \nLosslessCut - Cross platform tool for quick and lossless video and audio trimming using ffmpeg.  \nLyricsX - Lyrics for iTunes, Spotify and Vox.   \nMetadatics - Advanced Audio Metadata Editor. \nMixxx - The most advanced free DJ software.  \nMovie Catcher - Movie movie and online viewing offline download software, with Baidu cloud to make offline download and online playback. \nmpv - Free, open-source, and cross-platform media player.  \nMuseScore - Free, open-source music notation software.  \nNatron - Open-source compositing software. Node-graph based. Similar in functionality to Adobe After Effects and Nuke by The Foundry. \nPerian - (No longer under active development) Let QuickTime play all the common formats of free plug-ins. \nPlayback - Experimental video player.  \nPopcorn Time - Watch torrent movies instantly, This Popcorn Time service will never be taken down. Download and enjoy. \nScreenFlow - Screencasting and video editing software.\nShotcut - Free open-source video editor.  \nSoda Player - Player that can play seed, magnetic links, online video, automatic captions, links and local video files. \nSonora -  Minimal, beautifully designed music player.  \nSpotMenu - Spotify and iTunes in your menu bar.  \nStremio - Movies, TV shows, series, live television or web channels like YouTube and Twitch.tv - you can find all this on Stremio. \nStringed 2 - Music practice software designed to help users learn how to play their favorite songs.\nSynfig Studio - Synfig Studio is free, open-source 2D animation software.  \nVLC - Free, open-source, cross-platform multimedia player as well as framework that plays most multimedia files, DVDs, Audio CDs, VCDs and various streaming protocols.  \nVOX Player - High-definition audio player for Mac and iPhone. Music just sounds better! \nXLD - Tool to decode, convert and play various 'lossless' audio files.  \nMusicPlus - Search, play & download music for free. \nRecordia - Record audio directly from the menu bar or with a global keyboard shortcut. \n\nDownload Management Tools\n\naria2 - Lightweight multi-protocol & multi-source command-line download utility.  \nDownie - Video downloader for macOS with support for YouTube and other 1200 sites.\nDeluge - Deluge is a lightweight, Free Software, cross-platform BitTorrent client.  \nFOLX - Free download manager for Mac OS X with a true Mac-style interface. \nFree Download Manager - Powerful, modern download accelerator and organizer for Windows and Mac. (FREE) \nJDownloader - Free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be.  \nMotrix - Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, Baidu Net Disk, etc.  \nqBittorrent - A project aims to provide an open-source software alternative to \u00b5Torrent.  \nShuttle - Easy Download Manager for any links.\nTransmission - Fast, easy, free BitTorrent Client.  \nYou-Get - Tiny command-line utility to download media contents (videos, audios, images) from the web.  \nyoutube-dl - Command-line program to download videos from YouTube.com and other video sites  \n\nCloud Storage\nI recommend using online storage with Mac clients\n\nArq - Cloud storage backup client that supports AWS, GCP, DropBox, and more.\nCarbonite - Carbonite can protect your Mac from all of the most common forms of data loss.\nDropbox - File hosting service that offers cloud storage and file synchronization with collaborative edit features. \nMega - Free cloud service, offers 50GB free storage. \nNextCloud - Actively maintained fork of ownCloud, faster and completely open-source \nownCloud - Cloud storage.\nSeafile - Reliable and High Speed File Sync and Share.\n\nInput Methods\n\nKawa - Better input source switcher for OS X.  \nRocket - Makes typing emoji faster and easier using Slack-style shortcuts. \nTouch Emoji - emoji picker for MacBook Pro Touch Bar. \nType2Phone - Use Your Mac as Keyboard for iPhone, iPad & Apple TV. \n\nBrowsers\n\nBrave - Web browser with an emphasis on privacy and speed.  \nChrome - Chrome, developed by Google \nChromium - Open-source, free web browser project by Google, to provide the source code for Google Chrome.  \nMicrosoft Edge \u2014 Microsoft Edge, based on Chromium, but built by MS \nFirefox - Meet Firefox Quantum. Fast, free, open-source web browser developed by the Mozilla Foundation.  \nSafari - Native browser for Macs.  \nTorBrowser - Anonymity Online. Protect your privacy. Defend against network surveillance and traffic analysis.  \nVivaldi - The browser that puts you in control.  \n\nTranslation Tools\n(Or you could just use the Mac OS built-in dictionary)\n\nGrammarly - Refine your english\niTranslate - Translate entire website instantly with its built-in browser or with iTranslate Safari extension into over 40 languages. \nLudwig - Linguistic search engine that helps you to write better in English.\nMate Translate - Translate in Safari and any app on macOS between 103 languages.\n\nEncryption\n\nDeadbolt - The easiest file encryption tool you'll ever use. macOS-compatible, and open-source so you can trust it.  \n\nSecurity Tools\n\nBlockBlock - Me: \"Please alert me whenever anything is persistently installed.\" BlockBlock: \"You got it\"\nDylib Hijack Scanner - Simple utility that will scan your computer for applications that are either susceptible to dylib hijacking or have been hijacked.\nKextViewer - View all modules on that are loaded in the OS kernel.\nKnockKnock - See what's persistently installed on your Mac.\nLinkLiar -  Link-Layer MAC spoofing GUI for macOS.  \nLockDown - Open-source tool for El Capitan that audits and remediates security configuration settings.  \nLuLu - is the free macOS firewall that aims to block unauthorized (outgoing) network traffic.  \nMalwareBytes - Malwarebytes crushes the growing threat of Mac malware, so you are protected and your machine keeps running silky smooth. Cybersecurity smart enough for the Mac. \nOverSight - Monitor mic and webcam, alerting you when the internal mic is activated, or whenever a process accesses the webcam.\nRansomWhere? - Generic Ransomware Detection.\nstronghold - Easily configure MacOS security settings from the terminal.  \nTaskExplorer - Explore all processes running on your Mac with TaskExplorer.\nWhat's Your Sign? - Adds menu item to Finder.app to display the cryptographic signing information for any file.\n\nProxy and VPN Tools\n\nAlgo - Personal IPSEC VPN in the cloud. \ntigerVPN - VPN Client for Mac. \nLantern - Free application that delivers fast, reliable and secure access to the open internet.  \nShadowsocksX-NG - Next generation of ShadowsocksX.  \nShadowsocksX - Secure socks5 proxy, designed to protect your internet traffic.  \nShimo - VPN Client for Mac.\nSpechtLite - Rule-based proxy app for macOS.   \nSurge - Web developer tool and proxy utility for iOS 9. \ntinc - Secure mesh VPN software.  \nTunnelbear - Really simple VPN to browse the web privately & securely. Unblock websites around the world with applications for Mac, PC, iOS, Android & Chrome.\nTunnelblick - Free, open-source graphic user interface for OpenVPN on OS X. \nV2rayU - Macos client based on v2ray.  \nWindscribe - Gives 10gb per month free on the spot and gives limited(on free) location control. Connection also takes very less time.\nClashX - A rule based proxy For Mac base on Clash. \n\nUtilities\nClipboard Tools\n\nClipMenu - Clipboard manager for Mac OS X.  \nClipy - Clipy is a Clipboard extension app for macOS. Based on ClipMenu.  \nCopyQ - Clipboard Manager with Advanced Features.  \niPaste - Lightweight and efficient clipboard tool.  \nPaste - Smart clipboard history & snippets manager. \nPasteBot - Powerful clipboard manager. \nFlycut - Clean and simple clipboard manager for developers.  \nMaccy - Lightweight clipboard manager for macOS.  \n\nMenu Bar Tools\n\nAnvil - Anvil is a beautiful menubar app for managing local websites. Serve up static sites and Rack apps with simple URLs and zero configuration. \nBartender - Organize or hide menu bar icons on your Mac.\nBeardedSpice - Allows you to control web based media players (SoundCloud, YouTube, etc) and some native apps with the media keys on Mac keyboards.   \nBitBar - Place the output from any script or program right in your Mac OS X menu bar.  \nDato - A better menu bar clock with calendar, events, and time zones. \nDozer - Hide MacOS menubar items.  \nEye Timer - Take Breaks to prevent Eye Strain timer for Mac. \nHidden - A ultra-light MacOS utility that helps hide menu bar icons.  \niGlance - macOS System Monitor for the Status Bar.  \nItsycal - Tiny calendar for your Mac's menu bar.  \nMeetingBar - Menu bar app for your calendar meetings   \nStreaker - GitHub contribution streak tracking menubar app.  \nVanilla - Hide menu bar icons on your Mac. \nJiffy - Discover and share the best GIFs on GIPHY.  \n\nFile Organization Tools\n\nBetterZip 3 - Archive tool supports ZIP, TAR, TGZ, TBZ, TXZ (new), 7-ZIP, RAR. \neZip - An easy to use, feature-rich archiver for macOS. Supports popular formats such as RAR, ZIP, 7Z, BZ2, GZ etc. Works great with Mojave dark-mode and QuickLook. \nHazel - Automated file organization for your Mac. Responsibly and beautifully designed.\nKeka - file archiver for macOS. Compression: 7Z, ZIP, TAR, GZIP, BZIP2, XZ LZIP, DMG, ISO. Extraction: 7Z, ZIP, RAR, TAR, GZIP, BZIP2, XZ, LZIP, DMG, ISO, LZMA, EXE, CAB, WIM, PAX, JAR, APK, APPX, CPGZ, CPIO.   \nmuCommander - Lightweight file manager with a dual-pane interface.  \nPDF Archiver - Nice tool for tagging and archiving tasks.  \nThe Unarchiver - Unarchive many different kinds of archive files.  \n\nGeneral Tools\n\nAirServer - Most advanced screen mirroring software receiver for Mac, PC and Xbox One.\nControlPlane - Manages configuration profiles for your Mac. Determines where you are or what you are doing based on a number of available evidence sources and then automatically reconfigures your Mac based on your preferences.  \nDNS Heaven - Unifies macOS DNS so applications using glibc can resolve DNS with the native stack. Mainly for use with VPNs.  \nHTTrack - Useful tool for downloading a whole website and offline browsing. \nLungo - Prevent your Mac from going to sleep. \nMac Cache Cleaner - Cache cleaner for Mac  \nMacAssistant - Google Assistant for macOS  \nManta - Flexible invoicing desktop app with beautiful & customizable templates.  \nMemo - Simple and elegant app. Unlock memos even more quickly using Touch ID.  \nNumi - Beautiful calculator app for Mac. \nPlash - Make any website your desktop wallpaper.   \nSlowQuitApps - An OS X app that adds a global delay of 1 second to the Cmd-Q shortcut.  \nTorimori Sweeper - MacOS app that lets you declutter your Downloads, one file at a time. \nUltra TabSaver - The Open Source Tab Manager for Safari  \n\nTo-Do Lists\n\n2Do - Nice todo app.\nDay-O 2 - Menu bar clock replacement with built-in calendar. \nFantastical - The calendar app you won't be able to live without.\nFocus - Beautiful pomodoro-based time manager. \nMicrosoft To-Do - Microsoft's successor to Wunderlist.  \nNozbe - Powerful GTD app for individuals and teams, with support for every Apple device (Mac, iPhone, iPad, Watch). \nOmniFocus - Nice GTD app, made by OmniGroups.\nTaskade - Real-time collaborative editor for teams.\nTaskPaper - Plain text to-do lists.\nThings - Delightful and easy to use task manager. (Award-winning App)\nTodoist - Cross-platform todo list app.  \nTomato 2 - Beautiful and simple Pomodoro timer.  \nTickTick - Simple and effective to-do list and task manager that helps you organize all aspects of life.  \n\nProductivity\n\n1440 Minutes Left Today - Keep a track of how many minutes you have left until the day is over, right in your menu bar.  \nAlfred - Award-winning app which boosts efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac. \nBetterTouchTool - Great, feature-packed app that allows you to configure many gestures for your Magic Mouse, Macbook Trackpad, Magic Trackpad and also Mouse Gestures for normal mice. \nChoosy - UI, URL API and a browser extension set for managing rules where and how to open links.\nHammerspoon - Tool for powerful OSX automation with the Lua scripting engine.  \nHapticKey - A simple utility application for MacBook with Touch Bar that triggers a haptic feedback when tapping Touch Bar.  \nHazeOver App that dims your background app windows so you can focus more on your main task! \nHungrymark - Useful app to bookmark your files, folders, and webs, quick access your bookmarks through menu bar  \niCMD - Fuzzy menubar search and vim\/easymotion emulation which works globally for every native MacOS app.\nKarabiner - Powerful and stable keyboard customizer for OS X.  \nKeyboard Maestro - Automate routine actions based on triggers from keyboard, menu, location, added devices, and more.\nKeytty - App to keep your hands on the keyboard. Move, click, scroll, drag and more with a few strokes.\nLazy - Keyboard-driven commands to manage your surroundings directly from your mac.\nMos - Simple tool can offer the smooth scrolling and reverse the mouse scrolling direction on your Mac.  \nMouseless - Master all of the magic keystrokes for your favorite apps & tools.\nOmniPlan - The best way to visualize, maintain, and simplify your projects. Project Management made easy.\nQbserve - Time tracking automation: freelance project tracking, timesheets, invoicing & real-time productivity feedback.\nRescueTime - Personal analytics service that shows you how you spend your time and provides tools to help you be more productive.\nSensibleSideButtons \u2013 Use the side buttons on your mouse to move forward and backward in many apps, like in Windows. \nnnScreenshots - a super easy way to keep a visual record of your productivity to make it easier to fill out timesheets or just to help you review the day. Built in timesheet editor.\nskhd - Simple hotkey daemon for macOS.  \nStrategr \u2013 No-fuss time management app. Stategr helps you maximize your productivity, giving you the quickest and most effective way to time-box your day.  \nTime Out - Easy break reminders, with micro-break and flexible customization if you want it.  \nTiming - Automatic time and productivity tracking for Mac. Helps you stay on track with your work and ensures no billable hours get lost if you are billing hourly.\nTrello - A collaboration tool that organizes your projects into Kanban boards.\nUkelele - Unicode Keyboard Layout Editor.\nxScope - Powerful set of tools that are ideal for measuring, inspecting & testing on-screen graphics and layouts.\nZ - Powerful way to navigate easily by typing only a string of directory name in terminal instead of typing exact location of director.\nPomodoro Cycle - Pomodoro tracker\n\nWindow Management\n\nAltTab - Open source window switcher with window previews. \nAmethyst - Tiling window manager.  \ncontexts - Provides more power than the native Mac Dock. Especially when you have multiple screens, it can help you switch more quickly.\nDivvy - Window management at its finest with its amazing Divvy Grid system.\nHummingbird - Easily move and resize windows without mouse clicks, from anywhere within a window.\nMagnet - Window manager that keeps your workspace organized. \nMoom - Allows you to easily move and zoom windows, or to another display\u2014using either the mouse or the keyboard.\nRectangle - Window management app based on Spectacle, written in Swift.  \nShiftIt - Managing window size and position in OSX.  \nSizeUp - Powerful, keyboard-centric window management.\nSlate - Window management application similar to Divvy and SizeUp (except better and free!). (Needs config file)  \nTotal Spaces - Provides window management much like ubuntu. Creates hotkeys for workspaces which allows you to easily move around.\nyabai - Tiling window manager for macOS. A rewrite of chunkwm, it provides a more seamless integration with the operating system.  \n\nPassword Management\n\n1Password - Cross-platform password management tool.\nAuthy - Two-factor authentication token manager that backs up and syncs across your devices. \nBitwarden - Open source password management tool for Mac OS, iOS and browsers.  \nButtercup - The Password Manager You Deserve \nDashlane - Cloud-based password manager with award-winning design. \nEnpass - Cross-platform password management tool with cloud integration. \nKeeweb - Free, cross-platform password manager compatible with KeePass.  \nLastPass - Password management tool for Mac OS and browser.\nMacPass - Open-source KeePass Mac OS client.  \nSafeInCloud - Cross Platform password management, low cost app! \n\nFinder Tools\n\nfman - The first dual-pane file manager to integrate features from Sublime Text.\nForkLift - The most advanced dual pane file manager and file transfer client for macOS.\nPath Finder - File management app.\nQSpace - A clean and efficient Multi-view File Manager. \nTotalFinder - Chrome-styled Finder substitute.\nXtraFinder - Adds tabs and cut to Mac Finder. \n\nQuality of Life Improvements\n\nCheatSheet -  Hold the \u2318-Key to get a list of all active shortcuts of the current application. It's as simple as that. \nf.lux - Makes the color of your computer's display adapt to the time of day. \nGrayscale Mode - An open source macOS app that lets you quickly toggle grayscale filter right from your menu bar or using a keyboard shortcut (\u2325\u2318G).  \nKeyCastr - Open-source keystroke visualizer.   \nNightOwl - Automatically switch between macOS Mojave's light and dark themes by time of day or with a menu bar or keyboard shortcut. \nOne Switch - Mac menu bar app that adds various switches to the Mac's menu bar.\nShifty - A macOS menu bar app that gives you more control over Night Shift. \nSnap - Launch an app in a snap. Ridiculously easy shortcut management.  \nShareful - Supercharge the system share menu with copy, save, and open actions.  \n\nSystem Related Tools\n\nAmphetamine - Override your energy saver settings and keep your Mac awake.  \nAppCleaner - Small application which allows you to thoroughly uninstall unwanted apps. \nBackground Music - Automatically pause your music, set individual apps' volumes and record system audio. \nCleaner for Xcode - Helps make your Xcode faster by removing unwanted and deprecated files.  \ncoconutBattery - Shows live information about the battery in your Mac. Includes: manufacture date, capacity, cycle count, battery status, temperature, discharging power.\nCoolant - Menubar app that lets you know when an app is consuming 100% CPU or more than a gigabyte of memory (or any arbitrary limits you choose).\nDaisyDisk - Gives a great overview of disk usage. Can also make more disk-space available by cleaning up your disk.\nFruitJuice - Will let you know how long to stay unplugged each day to keep your battery healthy. \ngfxCardStatus - Unobtrusive menu bar app for OS X that allows MacBook Pro users to see which apps are affecting their battery life by using the more power-hungry graphics. \nGray - Pick between the light appearance and the dark appearance on a per-app basis with the click of a button.  \nHandShaker -  Mac on the management of Android mobile phone content. \nHTML5 Player - HTML 5 video player. Keep your Mac from \"burning\".\niStat Menus - Advanced Mac system monitor on the menubar.\niStats - Command-line tool that allows you to easily grab the CPU temperature, fan speeds and battery information on OSX.  \nJuice - Make your battery information a bit more interesting.  \nKeepingYouAwake - Alternative to Caffeine with better support for dark mode in Mac. \nMonity - System monitoring widget for OS X.\nMounty - Tiny tool to re-mount write-protected NTFS volumes under Mac OS X 10.9+ in read-write mode. \nNitroShare - Cross-platform network file transfer utility.  \nNoti - Receive Android notifications on your Mac (with Pushbullet).  \nOmniDiskSweeper - Shows you the files on your drive, ordered by size. It can be used to find and remove unused files.  \nOnyX - Multifunction utility to verify disks and files, run cleaning and system maintenance tasks, configure hidden options and more. \nParagon NTFS - Read\/write access to NTFS in macOS Sierra.\nPorting Kit - Install Windows\u00ae Games inside your Mac. \nSensei - Sensei is a multi-tool for Mac performance, with features spanning across both hardware and software.\nSSH Tunnel - Application for managing SSH connections.\nTG Pro - Temperature monitoring, fan control & hardware diagnostics to help keep your Mac cool and healthy.\nTuxera NTFS - Full read-write compatibility with NTFS-formatted drives on a Mac.\nOverkill - Stop iTunes from opening when you connect your iPhone.\n\nGaming Software\n\nOpenEmu - A great video game console emulator, supports many different emulators in a single application. (e.g. Sony PSP, GameBoy, NDS and so on)  \nPPSSPP - A awesome PSP emulator for any OS you can dream of!  \n\nRemote Login Software\n\nAnyDesk - Provides Remote access across multiple machines.\nRealVNC - The original and best software for remote access across desktop and mobile.\nTeamViewer - Proprietary computer software package for remote control, desktop sharing, online meetings, web conferencing and file transfer between computers. \n\nSocial Networking\n\nChirper - A simple and tiny menu bar app for Buffer\/Twitter that helps you tweet your thoughts without opening anything.\nFlume - A beautiful Instagram experience for your Mac. The free version is good enough if you only want to do the browsing instead of posting.\n\nQuickLook Plugins\n\n\n\n\nquick-look-plugins - List of useful Quick Look plugins for developers\n\nThird Party App Markets\nIf you come across websites offering pirated software or cracks, please post HERE. We love apps, but only authentic ones. :)\n\nSetapp - The best apps for Mac in one suite.\n\nPackage Managers\nHere are some of the major software download sites, there are a number of OSX Mac software sites\n\nCakebrew - GUI client for Homebrew. Install, check or remove apps, no command-line needed.  \nHomebrew Cask - Command line installation manager which extends Homebrew and brings its elegance, simplicity, and speed to Mac OS applications and large binaries alike.  \nHomebrew - The missing package manager for macOS.  \nMacPorts - Open-source community initiative to design an easy-to-use system for compiling, installing, and upgrading either command-line, X11 or Aqua based open-source software on the Mac OS X operating system.  \nMacUpdate Desktop - Simplifies finding, buying and installing apps for your Mac.\n\nMac App Download Sites\nHere are some of the major software download sites, there are a number of OSX Mac software sites\nGenuine Sites\n\nalternativeTo - Also a very nice community. If you are looking for some alternative apps FOR Windows or another platform, check this site.\nSlant - I personally recommend this. This is a platform where you can compare apps side-by-side, you might get an idea by seeing other users recommendations. Please contribute if you find an application from this list!\nAlso, Quora, Reddit, you know the drill.\nApp Shopper\uff1ahttp:\/\/appshopper.com\/\nMacUpdate\uff1ahttps:\/\/www.macupdate.com\/\nOther sites like MacStories, LifeHacker, ProductHunt are great resources.\n\nPirated software download site blacklist\nRefuse piracy from me. Software vendors can go to these places rights.\n\nAppKed\uff1ahttp:\/\/www.macbed.com\nSoftasm\uff1ahttps:\/\/softasm.com\/\n\nPodcasts\n\nMac Power Users - Learn about getting the most from your Apple technology with focused topics and workflow guests.  \n\n\u2b06 back to top\nContributors\nThis project exists thanks to all the people who contribute.\n\nBackers\nThank you to all our backers! \ud83d\ude4f Become a backer\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. Become a sponsor\n\nLicense\n\nThis work is licensed under a Creative Commons Attribution 4.0 International License.\n","42":"\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is Svelte?\nSvelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.\nLearn more at the Svelte website, or stop by the Discord chatroom.\nSupporting Svelte\nSvelte is an MIT-licensed open source project with its ongoing development made possible entirely by the support of awesome volunteers. If you'd like to support their efforts, please consider:\n\nBecoming a backer on Open Collective.\n\nFunds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly.\nDevelopment\nPull requests are encouraged and always welcome. Pick an issue and help us out!\nTo install and work on Svelte locally:\ngit clone https:\/\/github.com\/sveltejs\/svelte.git\ncd svelte\nnpm install\n\nDo not use Yarn to install the dependencies, as the specific package versions in package-lock.json are used to build and test Svelte.\n\nTo build the compiler, and all the other modules included in the package:\nnpm run build\nTo watch for changes and continually rebuild the package (this is useful if you're using npm link to test out changes in a project locally):\nnpm run dev\nThe compiler is written in TypeScript, but don't let that put you off \u2014 it's basically just JavaScript with type annotations. You'll pick it up in no time. If you're using an editor other than Visual Studio Code you may need to install a plugin in order to get syntax highlighting and code hints etc.\nRunning Tests\nnpm run test\nTo filter tests, use -g (aka --grep). For example, to only run tests involving transitions:\nnpm run test -- -g transition\nsvelte.dev\nThe source code for https:\/\/svelte.dev, including all the documentation, lives in the site directory. The site is built with Sapper.\nIs svelte.dev down?\nProbably not, but it's possible. If you can't seem to access any .dev sites, check out this SuperUser question and answer.\nLicense\nMIT\n","43":"\n\n\n\n\n\n  Fast, reliable, and secure dependency management.\n\n\n\n\n\n\n\n\n\nFast: Yarn caches every package it has downloaded, so it never needs to download the same package again. It also does almost everything concurrently to maximize resource utilization. This means even faster installs.\nReliable: Using a detailed but concise lockfile format and a deterministic algorithm for install operations, Yarn is able to guarantee that any installation that works on one system will work exactly the same on another system.\nSecure: Yarn uses checksums to verify the integrity of every installed package before its code is executed.\nFeatures\n\nOffline Mode. If you've installed a package before,\u00a0then\u00a0you can install it again without\u00a0an\u00a0internet connection.\nDeterministic. The same dependencies will be installed in the same exact way on any machine, regardless of\u00a0installation\u00a0order.\nNetwork Performance. Yarn efficiently queues\u00a0requests and\u00a0avoids request waterfalls in order to maximize network utilization.\nNetwork Resilience. A single request that fails will not cause the entire installation to fail. Requests are automatically retried upon failure.\nFlat Mode. Yarn resolves mismatched versions of dependencies to a single version to avoid creating duplicates.\nMore emojis. \ud83d\udc08\n\nInstalling Yarn\nRead the Installation Guide on our website for detailed instructions on how to install Yarn.\nUsing Yarn\nRead the Usage Guide on our website for detailed instructions on how to use Yarn.\nContributing to Yarn\nContributions are always welcome, no matter how large or small. Substantial feature requests should be proposed as an RFC. Before contributing, please read the code of conduct.\nSee Contributing.\nPrior art\nYarn wouldn't exist if it wasn't for excellent prior art. Yarn has been inspired by the following projects:\n\nBundler\nCargo\nnpm\n\nCredits\nThanks to Sam Holmes for donating the npm package name!\n","44":"\nOpinionated Code Formatter\n\n\n    JavaScript\n    \u00b7 TypeScript\n    \u00b7 Flow\n    \u00b7 JSX\n    \u00b7 JSON\n  \n\n\n    CSS\n    \u00b7 SCSS\n    \u00b7 Less\n  \n\n\n    HTML\n    \u00b7 Vue\n    \u00b7 Angular\n  \n\n\n    GraphQL\n    \u00b7 Markdown\n    \u00b7 YAML\n  \n\n\n\n      Your favorite language?\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\nPrettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.\nInput\nfoo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());\nOutput\nfoo(\n  reallyLongArg(),\n  omgSoManyParameters(),\n  IShouldRefactorThis(),\n  isThereSeriouslyAnotherOne()\n);\nPrettier can be run in your editor on-save, in a pre-commit hook, or in CI environments to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!\n\nDocumentation\nInstall \u00b7\nOptions \u00b7\nCLI \u00b7\nAPI\nPlayground\n\nBadge\nShow the world you're using Prettier \u2192 \n[![code style: prettier](https:\/\/img.shields.io\/badge\/code_style-prettier-ff69b4.svg?style=flat-square)](https:\/\/github.com\/prettier\/prettier)\nContributing\nSee CONTRIBUTING.md.\n","45":"\n\n\n\n\nMaterializeCSS\n\n  Materialize, a CSS Framework based on material design.\n  \n-- Browse the docs --\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nQuickstart\nDocumentation\nSupported Browsers\nChangelog\nTesting\nContributing\nCopyright and license\n\nQuickstart:\nRead the getting started guide for more information on how to use materialize.\n\nDownload the latest release of materialize directly from GitHub. (Beta)\nClone the repo: git clone https:\/\/github.com\/Dogfalo\/materialize.git (Beta: git clone -b v1-dev https:\/\/github.com\/Dogfalo\/materialize.git)\nInclude the files via cdnjs. More here. (Beta)\nInstall with npm: npm install materialize-css (Beta: npm install materialize-css@next)\nInstall with Bower: bower install materialize (DEPRECATED)\nInstall with Atmosphere: meteor add materialize:materialize (Beta: meteor add materialize:materialize@=1.0.0-beta)\n\nDocumentation\nThe documentation can be found at http:\/\/materializecss.com. To run the documentation locally on your machine, you need Node.js installed on your computer.\nRunning documentation locally\nRun these commands to set up the documentation:\ngit clone https:\/\/github.com\/Dogfalo\/materialize\ncd materialize\nnpm install\nThen run grunt monitor to compile the documentation. When it finishes, open a new browser window and navigate to localhost:8000. We use BrowserSync to display the documentation.\nDocumentation for previous releases\nPrevious releases and their documentation are available for download.\nSupported Browsers:\nMaterialize is compatible with:\n\nChrome 35+\nFirefox 31+\nSafari 9+\nOpera\nEdge\nIE 11+\n\nChangelog\nFor changelogs, check out the Releases section of materialize or the CHANGELOG.md.\nTesting\nWe use Jasmine as our testing framework and we're trying to write a robust test suite for our components. If you want to help, here's a starting guide on how to write tests in Jasmine.\nContributing\nCheck out the CONTRIBUTING document in the root of the repository to learn how you can contribute. You can also browse the help-wanted tag in our issue tracker to find things to do.\nCopyright and license\nCode Copyright 2018 Materialize. Code released under the MIT license.\n","46":"\ud83d\udc4b\ud83c\udffe Please consider donating to these organizations to help fund an education in technology, entrepreneurship and leadership for POC. #BLM\n\nHidden Genius Project\nBlack Girls Who Code\nCode2040\n\n\n\n\n\n\n\n\n\n\n\nEnglish |\n  \u7b80\u4f53\u4e2d\u6587\n\nWebsite \u2022 Docs \u2022 Newsletter \u2022 Swag \u2022 Gitter \u2022 Forum \u2022 Meetups \u2022 Twitter \u2022 We're Hiring \u2022 Try Pro\nThe Serverless Framework \u2013 Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.\nThe Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It's also completely extensible via plugins.\nServerless is an MIT open-source project, actively maintained by a full-time, venture-backed team.\nWatch the video overview here.\nIn 2020, the Serverless Framework began introducing advanced functionality for specific serverless use-cases, known as Serverless Framework Components. Check out the Components featured below, and more here.\n\n\n\n\n\n\n\n\n\n\nContents\n\n\nQuick Start\nExamples\nServices\nFeatures\nPlugins\nContributing\nCommunity\nConsultants\nLicensing\nPrevious Version 0.5.x\n\nQuick Start\nWatch the video guide here or follow the steps below to create and deploy your first serverless microservice in minutes.\n\nInstall via npm:\n\nnpm install -g serverless\n\n\nSet-up your Provider Credentials. Watch the video on setting up credentials\n\n\nCreate a Service:\n\n\nYou can create a new service or install existing services.\n# Create a new Serverless Service\/Project\nserverless create --template aws-nodejs --path my-service\n# Change into the newly created directory\ncd my-service\n\nDeploy a Service:\n\nUse this when you have made changes to your Functions, Events or Resources in serverless.yml or you simply want to deploy all changes within your Service at the same time.\nserverless deploy -v\n\nDeploy the Function:\n\nUse this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.\nserverless deploy function -f hello\n\nInvoke the Function on AWS:\n\nInvokes an AWS Lambda Function on AWS and returns logs.\nserverless invoke -f hello -l\n\nInvoke the Function on your machine:\n\nInvokes an AWS Lambda Function on your local machine and returns logs.\nserverless invoke local -f hello -l\n\nFetch the Function Logs:\n\nOpen up a separate tab in your console and stream all logs for a specific Function using this command.\nserverless logs -f hello -t\n\nRemove the Service:\n\nRemoves all Functions, Events and Resources from your AWS account.\nserverless remove\nHow to Install a Service:\nThis is a convenience method to install a pre-made Serverless Service locally by downloading the Github repo and unzipping it. Services are listed below.\nserverless install -u https:\/\/github.com\/your-url-to-the-serverless-service\nCheck out the Serverless Framework Guide for more information.\nServices (V1.0)\nThe following are services you can instantly install and use by running serverless install --url <service-github-url>\n\nserverless-examples\nCRUD - CRUD service, Scala Port\nCRUD with FaunaDB - CRUD service using FaunaDB\nCRUD with S3 - CRUD service using S3\nCRUD with Flask and SQLAlchemy - Python CRUD API service with Flask, SQLAlchemy and Swagger\nGraphQL Boilerplate - GraphQL application Boilerplate service\nAuthentication - Authentication boilerplate service\nMailer - Service for sending emails\nKinesis streams - Service to showcase Kinesis stream support\nDynamoDB streams - Service to showcase DynamoDB stream support\nLandingpage backend - Landingpage backend service to store E-Mail addresses\nFacebook Messenger Chatbot - Chatbot for the Facebook Messenger platform\nLambda chaining - Service which chains Lambdas through SNS\nSecured API - Service which exposes an API key accessible API\nAuthorizer - Service that uses API Gateway custom authorizers\nThumbnails - Service that takes an image url and returns a 100x100 thumbnail\nBoilerplate - Opinionated boilerplate\nES6 + Jest - ES6 + Jest Boilerplate\nPHP - Call a PHP function from your lambda\nRuby - Call a Ruby function from your lambda\nSlack App - Slack App Boilerplate with OAuth and Bot actions\nSwift - Full-featured project template to develop Lambda functions in Swift\nCloudwatch Alerts on Slack - Get AWS Cloudwatch alerts notifications on Slack\n\nNote: the serverless install command will only work on V1.0 or later.\nFeatures\n\nSupports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, & F#\nManages the lifecycle of your serverless architecture (build, deploy, update, delete).\nSafely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).\nFunctions can be grouped (\"serverless services\") for easy management of code, resources & processes, across large projects & teams.\nMinimal configuration and scaffolding.\nBuilt-in support for multiple stages.\nOptimized for CI\/CD workflows.\nLoaded with automation, optimization and best practices.\n100% Extensible: Extend or modify the Framework and its operations via Plugins.\nAn ecosystem of serverless services and plugins.\nA passionate and welcoming community!\n\nContributing\nWe love our contributors! Please read our Contributing Document to learn how you can start working on the Framework yourself.\nCheck out our help wanted or good first issue labels to find issues we want to move forward on with your help.\nCommunity\n\nEmail Updates\nServerless Forum\nGitter Chatroom\nServerless Meetups\nStackoverflow\nFacebook\nTwitter\nContact Us\n\nConsultants\nWe recommend the following professional services organizations who are experts in serverless development:\n\nServerless Guru\nAntstack\nTheodo - full stack teams passionate about Serverless that also run the Serverless Transformation Newsletter & Blog.\nnull - maintains Bref to create serverless PHP applications\nNordcloud - they created several plugins, sponsor Serverless Days Helsinki and regularly host Serverless Finland Meetups.\nAPI talent - who also run Serverless-Auckland Meetup\nEPX Labs - runs Serverless NYC Meetup\nSeraro - Who also runs Atlanta Serverless Meetup (https:\/\/www.meetup.com\/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT) and Delhi Serverless Meetup (https:\/\/www.meetup.com\/Delhi-NCR-Serverless-Architecture-Meetup\/)\nsuperluminar - runs serverlessdays Hamburg and Serverless Meetup Hamburg\nJetBridge - cloud-native and serverless application development services.\n\nIf you'd like to be featured here, please contact us.\n\nLicensing\nServerless is licensed under the MIT License.\nAll files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.\nPrevious Serverless Version 0.5.x\nYou can find projects and plugins relating to version 0.5 here. Note that these are not compatible with v1.0 but we are working diligently on updating them. Guide on building v1.0 plugins.\nYou can read the v0.5.x documentation at readme.io.\n","47":"LeetCode\n\n\n\n\n\n\n\n\n\n\n\n\u7b80\u4f53\u4e2d\u6587 | English\n\n\u53ea\u6709\u719f\u7ec3\u638c\u63e1\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff0c\u624d\u80fd\u5bf9\u590d\u6742\u95ee\u9898\u8fce\u5203\u6709\u4f59\u3002\n\ud83d\udcd8\u7535\u5b50\u4e66\n\u8fd9\u662f\u6211\u5c06\u6211\u7684\u6240\u6709\u516c\u5f00\u7684\u7b97\u6cd5\u8d44\u6599\u6574\u7406\u7684\u4e00\u4e2a\u7535\u5b50\u4e66\uff0c\u5168\u90e8\u9898\u76ee\u4fe1\u606f\u4e2d\u6587\u5316\uff0c\u4ee5\u524d\u4f1a\u6709\u4e00\u4e9b\u82f1\u6587\u63cf\u8ff0\uff0c\u611f\u8c22 @CYL \u7684\u4e2d\u6587\u6574\u7406\u3002\n\u9650\u65f6\u514d\u8d39\u4e0b\u8f7d\uff01\u540e\u671f\u968f\u65f6\u53ef\u80fd\u6536\u8d39\n\n\u6709\u4e9b\u52a8\u56fe\uff0c\u5728\u505a\u6210\u7535\u5b50\u4e66\uff08\u6bd4\u5982 pdf\uff09\u7684\u65f6\u5019\u81ea\u7136\u5c31\u53d8\u6ca1\u4e86\uff0c\u5982\u679c\u9700\u8981\u770b\u52a8\u56fe\u7684\uff0c \u53ef\u4ee5\u53bb\u6211\u7684\u516c\u4f17\u53f7\u300a\u529b\u6263\u52a0\u52a0\u300b\u6216\u8005\u6211\u7684 leetcode \u9898\u89e3\u4ed3\u5e93\u770b\u3002\n\nepub \u8fd8\u662f\u6709\u52a8\u56fe\u7684\n\n\u7531\u4e8e\u662f\u7535\u5b50\u4e66\uff0c\u56e0\u6b64\u9605\u8bfb\u4f53\u9a8c\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c \u4f46\u662f\u76f8\u5e94\u5730\u5c31\u4e0d\u80fd\u83b7\u5f97\u53ca\u65f6\u7684\u66f4\u65b0\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u6536\u85cf\u4e00\u4e0b\u6211\u7684\u540c\u6b65\u7535\u5b50\u4e66\u7684\u7f51\u7ad9 \u897f\u6cd5\u7684\u5237\u9898\u79d8\u7c4d - \u5728\u7ebf\u7248\u3002\u540e\u671f\u53ef\u80fd\u5c06\u6bcf\u65e5\u4e00\u9898\uff0c 91 \u5929\u5b66\u7b97\u6cd5\u5176\u4ed6\u7ae0\u8282\u7684\u8bb2\u4e49\u7b49\u4e5f\u6574\u7406\u8fdb\u6765\u3002\n\u7535\u5b50\u4e66\u6709\u66f4\u65b0\u6211\u4e5f\u4f1a\u5728\u516c\u4f17\u53f7\u300a\u529b\u6263\u52a0\u52a0\u300b\u8fdb\u884c\u901a\u77e5\uff0c \u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5173\u6ce8\u4e00\u4e0b\u3002\n\u4e2a\u4eba\u4e0d\u5efa\u8bae\u4f7f\u7528 html \u548c epub\uff0c\u5efa\u8bae\u5927\u5bb6\u4ece\u5728\u7ebf\u7248\uff0cpdf \u548c mobi \u9009\u62e9\u9002\u5408\u81ea\u5df1\u7684\u683c\u5f0f\u4e0b\u8f7d\u5373\u53ef\u3002html, pdf\uff0cmobi \u548c epub \u683c\u5f0f\uff0c\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\u300a\u529b\u6263\u52a0\u52a0\u300b\u56de\u590d\u7535\u5b50\u4e66\u5373\u53ef\u3002\n\ud83d\udcf0 \u00a0\u8ba2\u9605\n\u5927\u5bb6\u53ef\u4ee5\u7528 Github \u63d0\u4f9b\u7684 RSS \u6765\u8ba2\u9605\u6211\u7684\u4ed3\u5e93\u66f4\u65b0\u3002\n\ud83e\udd45 \u00a0\u975e\u79d1\u5b66\u4eba\u58eb\u770b\u8fc7\u6765\n\u5982\u679c\u662f\u56fd\u5185\u7684\u975e\u79d1\u5b66\u7528\u6237\uff0c\u53ef\u80fd\u90e8\u5206\u56fe\u7247\u4f1a\u52a0\u8f7d\u4e0d\u51fa\u6765\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 https:\/\/lucifer.ren\/leetcode \uff0c\u6574\u7ad9\u505a\u4e86\u9759\u6001\u5316\uff0c\u901f\u5ea6\u8d3c\u5feb\uff01\u4f46\u662f\u9605\u8bfb\u4f53\u9a8c\u53ef\u80fd\u4e00\u822c\u3002\n\u53e6\u5916\u9700\u8981\u79d1\u5b66\u7684\uff0c\u6211\u63a8\u8350\u4e00\u4e2a\u5de5\u5177\uff0c \u7528\u6237\u4f53\u9a8c\u771f\u7684\u662f\u597d\uff0c\u7528\u8d77\u6765\u8d85\u7b80\u5355\uff0c \u63d0\u4f9b\u4e00\u7ad9\u5f0f\u5de5\u5177\uff0c\u5305\u62ec\u7f51\u7edc\u68c0\u6d4b\u5de5\u5177\uff0c\u6d4f\u89c8\u5668\u63d2\u4ef6\u7b49\uff0c\u652f\u6301\u591a\u79cd\u5ba2\u6237\u7aef\uff08\u8fd8\u6709\u6211\u6700\u559c\u6b22\u7684 Switch \u52a0\u901f\u5668\uff09\uff0c\u4ef7\u683c\u4e5f\u4e0d\u8d35\uff0c\u57fa\u7840\u5957\u9910\u6298\u7b97\u5230\u6708\u5927\u7ea6 11.2 \u5757\/\u6708\u3002\u5730\u5740\uff1ahttps:\/\/glados.space\/landing\/M9OHH-Q88JQ-DX72D-R04RN\n\u2757\u600e\u4e48\u5237 LeetCode\uff1f\n\n\u6211\u662f\u5982\u4f55\u5237 LeetCode \u7684\n\u7b97\u6cd5\u5c0f\u767d\u5982\u4f55\u9ad8\u6548\u3001\u5feb\u901f\u5237 leetcode\uff1f\n\u5237\u9898\u6548\u7387\u4f4e\uff1f\u6216\u8bb8\u4f60\u5c31\u5dee\u8fd9\u4e48\u4e00\u4e2a\u63d2\u4ef6\n\u529b\u6263\u5237\u9898\u63d2\u4ef6\n\n\ud83d\udcc6\u300a91 \u5929\u5b66\u7b97\u6cd5\u300b\u9650\u65f6\u6d3b\u52a8\n\n\u7b2c\u4e00\u671f\u8bb2\u4e49-\u4e8c\u5206\u6cd5\n\u7b2c\u4e00\u671f\u8bb2\u4e49-\u53cc\u6307\u9488\n\u7b2c\u4e8c\u671f\u6b63\u5728\u706b\u70ed\u8fdb\u884c\u4e2d\n\n\u4ed3\u5e93\u4ecb\u7ecd\nleetcode \u9898\u89e3\uff0c\u8bb0\u5f55\u81ea\u5df1\u7684 leetcode \u89e3\u9898\u4e4b\u8def\u3002\n\u672c\u4ed3\u5e93\u76ee\u524d\u5206\u4e3a\u4e94\u4e2a\u90e8\u5206\uff1a\n\n\n\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f leetcode \u7ecf\u5178\u9898\u76ee\u7684\u89e3\u6790\uff0c\u5305\u62ec\u601d\u8def\uff0c\u5173\u952e\u70b9\u548c\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\n\u7b2c\u4e8c\u90e8\u5206\u662f\u5bf9\u4e8e\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7684\u603b\u7ed3\n\n\n\u7b2c\u4e09\u90e8\u5206\u662f anki \u5361\u7247\uff0c \u5c06 leetcode \u9898\u76ee\u6309\u7167\u4e00\u5b9a\u7684\u65b9\u5f0f\u8bb0\u5f55\u5728 anki \u4e2d\uff0c\u65b9\u4fbf\u5927\u5bb6\u8bb0\u5fc6\u3002\n\n\n\u7b2c\u56db\u90e8\u5206\u662f\u6bcf\u65e5\u4e00\u9898\uff0c\u6bcf\u65e5\u4e00\u9898\u662f\u5728\u4ea4\u6d41\u7fa4\uff08\u5305\u62ec\u5fae\u4fe1\u548c qq\uff09\u91cc\u8fdb\u884c\u7684\u4e00\u79cd\u6d3b\u52a8\uff0c\u5927\u5bb6\u4e00\u8d77 \u89e3\u4e00\u9053\u9898\uff0c\u8fd9\u6837\u8ba8\u8bba\u95ee\u9898\u66f4\u52a0\u96c6\u4e2d\uff0c\u4f1a\u5f97\u5230\u66f4\u591a\u7684\u53cd\u9988\u3002\u800c\u4e14 \u8fd9\u4e9b\u9898\u76ee\u53ef\u4ee5\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u65e5\u540e\u4f1a\u8fdb\u884c\u7b5b\u9009\u6dfb\u52a0\u5230\u4ed3\u5e93\u7684\u9898\u89e3\u6a21\u5757\u3002\n\n\n\u7b2c\u4e94\u90e8\u5206\u662f\u8ba1\u5212\uff0c \u8fd9\u91cc\u4f1a\u8bb0\u5f55\u5c06\u6765\u8981\u52a0\u5165\u5230\u4ee5\u4e0a\u4e09\u4e2a\u90e8\u5206\u5185\u5bb9\n\n\n\ud83c\udf56\u4ed3\u5e93\u98df\u7528\u6307\u5357\n\n\u5bf9\u4e8e\u6700\u8fd1\u6dfb\u52a0\u7684\u90e8\u5206\uff0c \u540e\u9762\u4f1a\u6709 \ud83c\udd95 \u6807\u6ce8\n\u5bf9\u4e8e\u6700\u8fd1\u66f4\u65b0\u7684\u90e8\u5206\uff0c \u540e\u9762\u4f1a\u6709 \ud83d\udd8a \u6807\u6ce8\n\u8fd9\u91cc\u6709\u4e00\u5f20\u4e92\u8054\u7f51\u516c\u53f8\u9762\u8bd5\u4e2d\u7ecf\u5e38\u8003\u5bdf\u7684\u95ee\u9898\u7c7b\u578b\u603b\u7ed3\u7684\u601d\u7ef4\u5bfc\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u56fe\u7247\u4e2d\u7684\u4fe1\u606f\u5206\u6790\u4e00\u4e0b\u3002\n\n\n\uff08\u56fe\u7247\u6765\u81ea leetcode)\n\u5176\u4e2d\u7b97\u6cd5\uff0c\u4e3b\u8981\u662f\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n\u57fa\u7840\u6280\u5de7\uff1a\u5206\u6cbb\u3001\u4e8c\u5206\u3001\u8d2a\u5fc3\n\u6392\u5e8f\u7b97\u6cd5\uff1a\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u8ba1\u6570\u6392\u5e8f\n\u641c\u7d22\u7b97\u6cd5\uff1a\u56de\u6eaf\u3001\u9012\u5f52\u3001\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7b49\n\u56fe\u8bba\uff1a\u6700\u77ed\u8def\u5f84\u3001\u6700\u5c0f\u751f\u6210\u6811\n\u52a8\u6001\u89c4\u5212\uff1a\u80cc\u5305\u95ee\u9898\u3001\u6700\u957f\u5b50\u5e8f\u5217\n\n\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\n\n\u6570\u7ec4\u4e0e\u94fe\u8868\uff1a\u5355 \/ \u53cc\u5411\u94fe\u8868\n\u6808\u4e0e\u961f\u5217\n\u54c8\u5e0c\u8868\n\u5806\uff1a\u6700\u5927\u5806 \uff0f \u6700\u5c0f\u5806\n\u6811\u4e0e\u56fe\uff1a\u6700\u8fd1\u516c\u5171\u7956\u5148\u3001\u5e76\u67e5\u96c6\n\u5b57\u7b26\u4e32\uff1a\u524d\u7f00\u6811\uff08\u5b57\u5178\u6811\uff09 \uff0f \u540e\u7f00\u6811\n\n\ud83d\udeaa \u00a0\u4f20\u9001\u95e8\nleetcode \u7ecf\u5178\u9898\u76ee\u7684\u89e3\u6790\uff08200 \u591a\u9053\uff09\n\n\u8fd9\u91cc\u4ec5\u5217\u4e3e\u5177\u6709\u4ee3\u8868\u6027\u9898\u76ee\uff0c\u5e76\u4e0d\u662f\u5168\u90e8\u9898\u76ee\n\n\u76ee\u524d\u66f4\u65b0\u4e86 200 \u591a\u9053\u9898\u89e3\uff0c\u52a0\u4e0a\u4e13\u9898\u6d89\u53ca\u7684\u9898\u76ee\uff0c\u5dee\u4e0d\u591a\u6709 300 \u9053\u3002\n\n\u9ad8\u9891\u8003\u9898\uff08\u7b80\u5355 72 \u9898\uff09\n\u9ad8\u9891\u8003\u9898\uff08\u4e2d\u7b49 114 \u9898\uff09\n\u9ad8\u9891\u8003\u9898\uff08\u56f0\u96be 30 \u9898\uff09\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7684\u603b\u7ed3(21 \u7bc7)\n\n\u6570\u636e\u7ed3\u6784\u603b\u89c8\n\u94fe\u8868\u4e13\u9898 \ud83c\udd95\n\n\n\u4e8c\u53c9\u6811\u7684\u904d\u5386\n\u52a8\u6001\u89c4\u5212\n\u56de\u6eaf\n\u54c8\u592b\u66fc\u7f16\u7801\u548c\u6e38\u7a0b\u7f16\u7801\n\u5e03\u9686\u8fc7\u6ee4\u5668\ud83d\udd8a\n\u5b57\u7b26\u4e32\u95ee\u9898\n\u524d\u7f00\u6811\ud83d\udd8a\n\u300a\u65e5\u7a0b\u5b89\u6392\u300b\u4e13\u9898\n\u300a\u6784\u9020\u4e8c\u53c9\u6811\u300b\u4e13\u9898\n\u300a\u8d2a\u5a6a\u7b56\u7565\u300b\u4e13\u9898\n\u6df1\u5ea6\u4f18\u5148\u904d\u5386\n\u6ed1\u52a8\u7a97\u53e3\uff08\u601d\u8def + \u6a21\u677f\uff09\n\u4f4d\u8fd0\u7b97\n\u8bbe\u8ba1\u9898\n\u5c0f\u5c9b\u95ee\u9898\ud83d\udd8a\n\u6700\u5927\u516c\u7ea6\u6570\n\u5e76\u67e5\u96c6\n\u5e73\u8861\u4e8c\u53c9\u6811\u4e13\u9898\n\u5355\u8c03\u6808 \ud83c\udd95\n\n\u7cbe\u9009\u9898\u89e3\uff089 \u7bc7\uff09\n\n\u5b57\u5178\u5e8f\u5217\u5220\u9664\n\u4e00\u6b21\u641e\u5b9a\u524d\u7f00\u548c\n\u5b57\u8282\u8df3\u52a8\u7684\u7b97\u6cd5\u9762\u8bd5\u9898\u662f\u4ec0\u4e48\u96be\u5ea6\uff1f\n\u5b57\u8282\u8df3\u52a8\u7684\u7b97\u6cd5\u9762\u8bd5\u9898\u662f\u4ec0\u4e48\u96be\u5ea6\uff1f\uff08\u7b2c\u4e8c\u5f39\uff09\n\u300a\u6211\u662f\u4f60\u7684\u5988\u5988\u5440\u300b - \u7b2c\u4e00\u671f\n\u4e00\u6587\u5e26\u4f60\u770b\u61c2\u4e8c\u53c9\u6811\u7684\u5e8f\u5217\u5316\n\u7a7f\u4e0a\u8863\u670d\u6211\u5c31\u4e0d\u8ba4\u8bc6\u4f60\u4e86\uff1f\u6765\u804a\u804a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\u4f60\u7684\u8863\u670d\u6211\u6252\u4e86 - \u300a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u300b\n\u4e00\u6587\u770b\u61c2\u300a\u6700\u5927\u5b50\u5e8f\u5217\u548c\u95ee\u9898\u300b\n\n\ud83d\udd31 \u00a0anki \u5361\u7247\nAnki \u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4e00\u90e8\u5206\u662f\u5173\u952e\u70b9\u5230\u9898\u76ee\u7684\u6620\u5c04\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u9898\u76ee\u5230\u601d\u8def\uff0c\u5173\u952e\u70b9\uff0c\u4ee3\u7801\u7684\u6620\u5c04\u3002\n\u5168\u90e8\u5361\u7247\u90fd\u5728 anki-card\n\u4f7f\u7528\u65b9\u6cd5\uff1a\nanki - \u6587\u4ef6 - \u5bfc\u5165 - \u4e0b\u62c9\u683c\u5f0f\u9009\u62e9\u201c\u6253\u5305\u7684 anki \u96c6\u5408\u201d\uff0c\u7136\u540e\u9009\u4e2d\u4f60\u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\uff0c\u786e\u5b9a\u5373\u53ef\u3002\n\u66f4\u591a\u5173\u4e8e anki \u4f7f\u7528\u65b9\u6cd5\u7684\u8bf7\u67e5\u770b anki \u5b98\u7f51\n\u76ee\u524d\u5df2\u66f4\u65b0\u5361\u7247\u4e00\u89c8\uff08\u4ec5\u5217\u4e3e\u6b63\u9762\uff09\uff1a\n\n\u4e8c\u5206\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\n\u5982\u4f55\u7528\u6808\u7684\u7279\u70b9\u6765\u7b80\u5316\u64cd\u4f5c\uff0c \u6d89\u53ca\u5230\u7684\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u53cc\u6307\u9488\u95ee\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u56de\u6eaf\u6cd5\u89e3\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u6570\u8bba\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\n\u4f4d\u8fd0\u7b97\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\n\n\n\u5df2\u52a0\u5165\u7684\u9898\u76ee\u6709\uff1a#2 #3 #11\n\n\ud83d\udc1d \u00a0\u6bcf\u65e5\u4e00\u9898\n\u6bcf\u65e5\u4e00\u9898\u662f\u5728\u4ea4\u6d41\u7fa4\uff08\u5305\u62ec\u5fae\u4fe1\u548c qq\uff09\u91cc\u901a\u8fc7 issues \u6765\u8fdb\u884c\u7684\u4e00\u79cd\u6d3b\u52a8\uff0c\u5927\u5bb6\u4e00\u8d77 \u89e3\u4e00\u9053\u9898\uff0c\u8fd9\u6837\u8ba8\u8bba\u95ee\u9898\u66f4\u52a0\u96c6\u4e2d\uff0c\u4f1a\u5f97\u5230\u66f4\u591a\u7684\u53cd\u9988\u3002\u800c\u4e14 \u8fd9\u4e9b\u9898\u76ee\u53ef\u4ee5\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u65e5\u540e\u4f1a\u8fdb\u884c\u7b5b\u9009\u6dfb\u52a0\u5230\u4ed3\u5e93\u7684\u9898\u89e3\u6a21\u5757\u3002\n\n\u6bcf\u65e5\u4e00\u9898\u6c47\u603b\n\n\n\u6bcf\u65e5\u4e00\u9898\u8ba4\u9886\u533a\n\n\u2611\ufe0f \u00a0\u8ba1\u5212\n\n\nLeetCode \u6362\u76ae\u9898\u76ee\u96c6\u9526\n\n\n\u52a8\u6001\u89c4\u5212\u5b8c\u5584\u3002\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\uff0c\u7f16\u8f91\u8ddd\u79bb\u7b49\u201c\u5b57\u7b26\u4e32\u201d\u9898\u76ee\uff0c \u6254\u9e21\u86cb\u95ee\u9898\u3002 \u89e3\u9898\u6a21\u677f\uff0c\u6eda\u52a8\u6570\u7ec4\u3002\n\n\n\u5806\u53ef\u4ee5\u89e3\u51b3\u7684\u9898\u76ee\u3002 \u624b\u5199\u5806\n\n\n\u6811\n\n\nBFS & DFS\n\n\n\ud83d\udcc8\u5927\u4e8b\u4ef6\n\n\n2019-07-10 \uff1a\u7eaa\u5ff5\u9879\u76ee Star \u7a81\u7834 1W \u7684\u4e00\u4e2a\u77ed\u6587\uff0c \u8bb0\u5f55\u4e86\u9879\u76ee\u7684\"\u5174\u8d77\"\u4e4b\u8def\uff0c\u5927\u5bb6\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u4e00\u4e0b\uff0c\u5982\u679c\u5bf9\u8fd9\u4e2a\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u70b9\u51fb\u4e00\u4e0b Star\uff0c \u9879\u76ee\u4f1a\u6301\u7eed\u66f4\u65b0\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u652f\u6301\u3002\n\n\n2019-10-08: \u7eaa\u5ff5 LeetCode \u9879\u76ee Star \u7a81\u7834 2W\uff0c\u5e76\u4e14 Github \u641c\u7d22\u201cLeetCode\u201d\uff0c\u6392\u540d\u7b2c\u4e00\u3002\n\n\n2020-04-12: \u9879\u76ee\u7a81\u7834\u4e09\u4e07 Star\u3002\n\n\n2020-04-14: \u5b98\u7f51\u529b\u6263\u52a0\u52a0\u4e0a\u7ebf\u5566 \ud83d\udc90\ud83d\udc90\ud83d\udc90\ud83d\udc90\ud83d\udc90\uff0c\u6709\u4e13\u9898\u8bb2\u89e3\uff0c\u6bcf\u65e5\u4e00\u9898\uff0c\u4e0b\u8f7d\u533a\u548c\u89c6\u9891\u9898\u89e3\uff0c\u540e\u7eed\u4f1a\u589e\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u8fd8\u4e0d\u8d76\u7d27\u6536\u85cf\u8d77\u6765\uff1f\u5730\u5740\uff1ahttp:\/\/leetcode-solution.cn\/\n\n\n\n\ud83d\udc81\u5173\u4e8e\u6211\n\u64c5\u957f\u524d\u7aef\u5de5\u7a0b\u5316\uff0c\u524d\u7aef\u6027\u80fd\u4f18\u5316\uff0c\u524d\u7aef\u6807\u51c6\u5316\u7b49\uff0c\u505a\u8fc7 .net\uff0c \u641e\u8fc7 Java\uff0c\u73b0\u5728\u662f\u4e00\u540d\u524d\u7aef\u5de5\u7a0b\u5e08\uff0c\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff1ahttps:\/\/lucifer.ren\/blog\/\n\u6211\u7ecf\u5e38\u4f1a\u5728\u5f00\u6e90\u793e\u533a\u8fdb\u884c\u4e00\u4e9b\u8f93\u51fa\u548c\u5206\u4eab\uff0c\u6bd4\u8f83\u53d7\u6b22\u8fce\u7684\u6709 \u5b87\u5b99\u6700\u5f3a\u7684\u524d\u7aef\u9762\u8bd5\u6307\u5357\n\u548c \u6211\u7684\u7b2c\u4e00\u672c\u5c0f\u4e66\u3002\u76ee\u524d\u672c\u4eba\u6b63\u5728\u5199\u4e00\u672c\u5173\u4e8e\u300aleetcode \u9898\u89e3\u300b\u7684\u5b9e\u4f53\u4e66\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u90ae\u7bb1\u6216\u8005\u5fae\u4fe1\u8054\u7cfb\u6211\uff0c\u6211\u4f1a\u5728\u51fa\u7248\u7684\u7b2c\u4e00\u65f6\u95f4\u901a\u77e5\u4f60\uff0c\u5e76\u7ed9\u51fa\u9996\u53d1\u4f18\u60e0\u4ef7\u3002\u6709\u9700\u8981\u53ef\u4ee5\u76f4\u63a5\u7fa4\u91cc\u8054\u7cfb\u6211\uff0c\u6216\u8005\u53d1\u9001\u5230\u6211\u7684\u4e2a\u4eba\u90ae\u7bb1 [azl397985856@gmail.com]\u3002 \u65b0\u4e66\u8be6\u60c5\u6233\u8fd9\u91cc\uff1a\u300a\u6216\u8bb8\u662f\u4e00\u672c\u53ef\u4ee5\u5f7b\u5e95\u6539\u53d8\u4f60\u5237 LeetCode \u6548\u7387\u7684\u9898\u89e3\u4e66\u300b\n\u70b9\u5173\u6ce8\uff0c\u4e0d\u8ff7\u8def\u3002\u5982\u679c\u518d\u7ed9 \u2795 \u4e2a\u661f\u6807\u5c31\u66f4\u68d2\u5566\uff01\n\n\u5173\u6ce8\u52a0\u52a0\uff0c\u661f\u6807\u52a0\u52a0\uff5e\n\n\n\ud83d\udc9d \u8d21\u732e\n\n\u5982\u679c\u6709\u60f3\u6cd5\u548c\u521b\u610f\uff0c\u8bf7\u63d0 issue \u6216\u8005\u8fdb\u7fa4\u63d0\n\u5982\u679c\u60f3\u8d21\u732e\u589e\u52a0\u9898\u89e3\u6216\u8005\u7ffb\u8bd1\uff0c \u53ef\u4ee5\u53c2\u8003 \u8d21\u732e\u6307\u5357\n\n\u5173\u4e8e\u5982\u4f55\u63d0\u4ea4\u9898\u89e3\uff0c\u6211\u5199\u4e86\u4e00\u4efd \u6307\u5357\n\n\n\u5982\u679c\u9700\u8981\u4fee\u6539\u9879\u76ee\u4e2d\u56fe\u7247\uff0c\u8fd9\u91cc \u5b58\u653e\u4e86\u9879\u76ee\u4e2d\u7ed8\u5236\u56fe\u7684\u6e90\u4ee3\u7801\uff0c \u5927\u5bb6\u53ef\u4ee5\u7528 draw.io \u6253\u5f00\u8fdb\u884c\u7f16\u8f91\u3002\n\n\ud83d\udc8c\u9e23\u8c22\n\u611f\u8c22\u4e3a\u8fd9\u4e2a\u9879\u76ee\u4f5c\u51fa\u8d21\u732e\u7684\u6240\u6709 \u5c0f\u4f19\u4f34\n\ud83d\udcb0 \u00a0\u8d5e\u52a9\n\u5fae\u4fe1\n\n\u652f\u4ed8\u5b9d\n\n\u6350\u8d60\n\u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u7684\u6350\u8d60\u5217\u8868\nLicense\nCC BY-NC-ND 4.0\n","48":"\n\n\n\n\n\n  The compiler for writing next generation JavaScript.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupporting Babel\n\n\n\n\n\nBabel (pronounced \"babble\")  is a community-driven project used by many companies and projects, and is maintained by a group of volunteers. If you'd like to help support the future of the project, please consider:\n\nGiving developer time on the project. (Message us on Twitter or Slack for guidance!)\nGiving funds by becoming a sponsor on Open Collective or Patreon!\n\nSponsors\nOur top sponsors are shown below! [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\nBabel is a tool that helps you write code in the latest version of JavaScript. When your supported environments don't support certain features natively, Babel will help you compile those features down to a supported version.\nIn\n\/\/ ES2020 nullish coalescing\nfunction greet(input) {\n  return input ?? \"Hello world\";\n}\nOut\nfunction greet(input) {\n  return input != null ? input : \"Hello world\";\n}\nTry it out at our REPL.\nFAQ\nWho maintains Babel?\nMostly a handful of volunteers, funded by you! Please check out our team page!\nIs there a Babel song?\nI'm so glad you asked: Hallelujah \u2014\u2014 In Praise of Babel by @angus-c, audio version by @swyx. Tweet us your recordings!\nLooking for support?\nFor questions and support please join our Slack Community (you can sign up here for an invite), ask a question on Stack Overflow, or ping us on Twitter.\nWhere are the docs?\nCheck out our website: babeljs.io, and report issues\/features at babel\/website.\nWant to report a bug or request a feature?\nPlease read through our CONTRIBUTING.md and fill out the issue template at babel\/issues!\nWant to contribute to Babel?\nCheck out:\n\nOur #development Slack channel and say hi! (sign-up)\nIssues with the good first issue and help wanted label. We suggest also looking at the closed ones to get a sense of the kinds of issues you can tackle.\n\nSome resources:\n\nOur CONTRIBUTING.md to get started with setting up the repo.\nOur discussions\/notes\/roadmap: babel\/notes\nOur progress on TC39 proposals: babel\/proposals\nOur blog which contains release posts and explanations: \/blog\nOur videos page with talks about open source and Babel: \/videos\nOur podcast\n\nHow is the repo structured?\nThe Babel repo is managed as a monorepo that is composed of many npm packages.\nLicense\nMIT\n","49":"node-webkit is renamed NW.js\n\nOfficial site: https:\/\/nwjs.io\nIntroduction\nNW.js is an app runtime based on Chromium and node.js. You can\nwrite native apps in HTML and JavaScript with NW.js. It also lets you\ncall Node.js modules directly from the DOM and enables a new way of writing\nnative applications with all Web technologies.\nIt was created in the Intel Open Source Technology Center.\nBuilding a Cross-platform Desktop App with NW.js\nCreating Desktop Applications With node-webkit\nWebApp to DesktopApp with node-webkit (slides)\nEssay on the history and internals of the project\nFeatures\n\nApps written in modern HTML5, CSS3, JS and WebGL.\nComplete support for Node.js APIs and all its third party modules.\nGood performance: Node and WebKit run in the same thread: Function calls are made straightforward; objects are in the same heap and can just reference each other.\nEasy to package and distribute apps.\nAvailable on Linux, Mac OS X and Windows.\n\nDownloads\n\n\nv0.50.0: (Nov 19, 2020, based off of Node.js v15.0.1, Chromium 87.0.4280.66) : release notes\nNOTE You might want the SDK build. Please read the release notes.\n\n\nLinux: 32bit \/ 64bit\n\n\nWindows: 32bit \/ 64bit\n\n\nMac 10.10+: 64bit\n\n\nUse Legacy build for Win XP and early OSX.\n\n\nlatest nightly build from git tip: https:\/\/dl.nwjs.io\/live-build\/\n\n\nPrevious versions; See the mapping file for the version info in previous releases.\n\n\nDemos and real apps\nYou may also be interested in our demos repository and the List of apps and companies using nw.js.\nQuick Start\nCreate index.html:\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello World!<\/title>\n  <\/head>\n  <body>\n    <h1>Hello World!<\/h1>\n    We are using node.js <script>document.write(process.version)<\/script>.\n  <\/body>\n<\/html>\nCreate package.json:\n{\n  \"name\": \"nw-demo\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index.html\"\n}\nRun:\n$ \/path\/to\/nw .  (suppose the current directory contains 'package.json')\nNote: on Windows, you can drag the folder containing package.json to nw.exe to open it.\nNote: on OSX, the executable binary is in a hidden directory within the .app file. To run node-webkit on OSX, type:\n\/path\/to\/nwjs.app\/Contents\/MacOS\/nwjs . (suppose the current directory contains 'package.json')\nDocuments\nOfficial documentation: http:\/\/docs.nwjs.io\/\nFor more information on how to write\/package\/run apps, see:\n\nHow to run apps\nHow to package and distribute your apps\nHow to use Node.js modules in node-webkit\n\nAnd our Wiki for much more.\nCommunity\nWe use the google group as\nour mailing list (use English only). Subscribe via nwjs-general+subscribe@googlegroups.com.\nNOTE: Links to the old google group (e.g. https:\/\/groups.google.com\/forum\/#!msg\/node-webkit\/doRWZ07LgWQ\/4fheV8FF8zsJ) that are no longer working can be fixed by replacing node-webkit with nwjs-general (e.g https:\/\/groups.google.com\/forum\/#!msg\/nwjs-general\/doRWZ07LgWQ\/4fheV8FF8zsJ).\nIssues are being tracked here on GitHub.\nThe source code for NW.js and the daily development spans across multiple repositories in this organization. This repository is for the purpose of issue tracking, landing page and part of the source code.\nVerifying Binaries\nStarting from 0.32.0 the stable and nightly download directories contain a SHASUMS256.txt\nfile that lists the SHA checksums for each file available for download, as well as the\nchecksums for the files inside the download package.\nThe SHASUMS256.txt can be downloaded using curl.\n$ curl -O https:\/\/dl.nwjs.io\/vx.y.z\/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep nwjs-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nThe stable releases (but not Nightlies) also have the GPG detached\nsignature of SHASUMS256.txt available as SHASUMS256.txt.asc. You can use gpg\nto verify that SHASUMS256.txt has not been tampered with.\nTo verify SHASUMS256.txt has not been altered, you will first need to import\nthe GPG key of NW.js maintainer to create releases.\nUse this command to import the key:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys 78680FA9E21BB40A\n(Key fingerprint is 1E8B EE8D 5B0C 4CBC D6D1  9E26 7868 0FA9 E21B B40A)\n\nNext, download the SHASUMS256.txt.asc for the release:\n$ curl -O https:\/\/dl.nwjs.io\/vx.y.z\/SHASUMS256.txt.asc\nAfter downloading the appropriate SHASUMS256.txt and SHASUMS256.txt.asc files,\nyou can then use gpg --verify SHASUMS256.txt.asc SHASUMS256.txt to verify\nthat the file has been signed by an authorized member of the NW.js team.\nOnce verified, use the SHASUMS256.txt file to get the checksum for\nthe binary verification command above.\nLicense\nNW.js's code in this repo uses the MIT license, see our LICENSE file. To redistribute the binary, see How to package and distribute your apps\n","50":"\n\n\n  anime.js\n\nJavaScript animation engine | animejs.com\n\n\n\n\n\nAnime.js (\/\u02c8\u00e6n.\u0259.me\u026a\/) is a lightweight JavaScript animation library with a simple, yet powerful API.\n  It works with CSS properties, SVG, DOM attributes and JavaScript Objects.\n\n\nGetting started\u00a0|\u00a0Documentation\u00a0|\u00a0Demos and examples\u00a0|\u00a0Browser support\n\nGetting started\nDownload\nVia npm\n$ npm install animejs --save\nor manual download.\nUsage\nES6 modules\nimport anime from 'animejs\/lib\/anime.es.js';\nCommonJS\nconst anime = require('animejs');\nFile include\nLink anime.min.js in your HTML :\n<script src=\"anime.min.js\"><\/script>\nHello world\nanime({\n  targets: 'div',\n  translateX: 250,\n  rotate: '1turn',\n  backgroundColor: '#FFF',\n  duration: 800\n});\nDocumentation\n\nTargets\nProperties\nProperty parameters\nAnimation parameters\nValues\nKeyframes\nStaggering\nTimeline\nControls\nCallbacks and promises\nSVG Animations\nEasing functions\nHelpers\n\nDemos and examples\n\nCodePen demos and examples\njuliangarnier.com\nanimejs.com\nMoving letters by @tobiasahlin\nGradient topography animation by @crnacura\nOrganic shape animations by @crnacura\nPieces slider by @lmgonzalves\nStaggering animations\nEasings animations\nSphere animation\nLayered animations\nanime.js logo animation\n\nBrowser support\n\n\n\nChrome\nSafari\nIE \/ Edge\nFirefox\nOpera\n\n\n\n\n24+\n8+\n11+\n32+\n15+\n\n\n\n\nWebsite | Documentation | Demos and examples | MIT License | \u00a9 2019 Julian Garnier.\n","51":"\n\n\n\n\n \n\n\n\n\n\n\n\nFeatures\n\n\ud83d\ude80 Blazing fast bundle times - multicore compilation, and a filesystem cache for fast rebuilds even after a restart.\n\ud83d\udce6 Out of the box support for JS, CSS, HTML, file assets, and more - no plugins to install.\n\ud83d\udc20 Automatically transforms modules using Babel, PostCSS, and PostHTML when needed - even node_modules.\n\u2702\ufe0f Zero configuration code splitting using dynamic import() statements.\n\ud83d\udd25 Built in support for hot module replacement\n\ud83d\udea8 Friendly error logging experience - syntax highlighted code frames help pinpoint the problem.\n\n\nBelow is the design document that was created before work on the implementation of Parcel 2 started and some sections are outdated. The actual (somewhat complete) documentation for Parcel 2 is available here: https:\/\/v2.parceljs.org\/.\n\nGetting Started\nBefore we get started, you'll need to install Node and Yarn (or npm) and create\na package.json for your project if you haven't already.\nyarn init\nThen with Yarn you can install parcel into your app:\nyarn add --dev parcel@next\nFrom there you just need to point Parcel at some of your entry files. Like if\nyou're building a website, an index.html file:\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" \/>\n    <title>My First Parcel App<\/title>\n  <\/head>\n  <body>\n    <h1>Hello, World!<\/h1>\n  <\/body>\n<\/html>\nNow if you just run:\nyarn parcel index.html\nYou should get a URL that looks something like: http:\/\/localhost:1234\/.\nNext you can start adding dependencies by specifying them in your code (however\nyour language specifies other assets). So for HTML we could create a\nstyles.css file next to our index.html file and include it with a <link>\ntag.\nh1 {\n  color: hotpink;\n  font-family: cursive;\n}\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" \/>\n    <title>My First Parcel App<\/title>\n    <link rel=\"stylesheet\" href=\".\/styles.css\" \/>\n  <\/head>\n  <body>\n    <h1>Hello, World!<\/h1>\n  <\/body>\n<\/html>\nIf we want parcel to update our changes in the browser without refreshing the page,\nwe need to add at least a dummy javascript file e.g. app.js next to our index.html.\nThis file allows parcel to inject all the necessary code to show your changes.\nThis file will later contain your javascript application.\nconsole.log(\"Hello World\");\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" \/>\n    <title>My First Parcel App<\/title>\n    <link rel=\"stylesheet\" href=\".\/styles.css\" \/>\n    <script src=\".\/app.js\"><\/script>\n  <\/head>\n  <body>\n    <h1>Hello, World!<\/h1>\n  <\/body>\n<\/html>\nDocumentation\n\nIntroduction\nParcel CLI\n\nCLI Args & Flags\n\nparcel serve\nparcel watch\nparcel build\n[...entries]\n--target [name]\n--open, -o [browser]\n--host <host>\n--port <port>, -p\n--https\n\n--cert <path>\n--key <path>\n\n\n--dist-dir <dir>\n--cache-dir <dir>, --no-cache\n--hot, --no-hot\n\n--hot-host <hostname>\n--hot-port <port>\n\n\n--[no-]source-maps\n--autoinstall [npm\/yarn], --no-autoinstall\n--log-level <level>\n--version, -v, -V\n--help, -h\n\n\n\n\nParcel Config\n\nConfiguring external tools\nConfiguring Parcel\npackage.json\n\npackage.json#name\npackage.json#version\npackage.json#main\npackage.json#module\npackage.json#browser\npackage.json#source\npackage.json#browserslist\npackage.json#engines\npackage.json#targets\npackage.json#alias\n\n\n.parcelrc\n\nGlob maps in .parcelrc\n.parcelrc#extends\n.parcelrc#resolvers\n.parcelrc#transformers\n.parcelrc#bundler\n.parcelrc#namers\n.parcelrc#runtimes\n.parcelrc#packagers\n.parcelrc#optimizers\n.parcelrc#reporters\n.parcelrc#validators\n\n\n\n\nParcel Architecture\n\nPhases of Parcel\nAsset Graph\nBundles\nSources\nTargets\n\nTarget Configuration\n\n\nEnvironments\nCaching\n\n\nAsset Resolution\n\nLocal Paths\nPackage Paths\nURLs\nTilde Paths\nAliases\n\n\nPlugins\n\nResolvers\nTransformers\nBundlers\nNamers\nRuntimes\nPackagers\nOptimizers\nReporters\nValidators\n\n\nCreating Plugins\n\nNaming\nVersioning\nEngines\n\n\nPlugin APIs\n\nResolvers\nTransformers\nBundler\nNamers\nRuntimes\nPackagers\nOptimizers\nReporters\nValidators\n\n\n\nIntroduction\nParcel is a compiler for all your code, regardless of the language or toolchain.\nParcel takes all of your files and dependencies, transforms them, and merges\nthem together into a smaller set of output files that can be used to run your\ncode.\nParcel supports many different languages and file types out of the box, from\nweb technologies like HTML, CSS, and JavaScript, to lower level languages like\nRust, and anything that compiles to WebAssembly (WASM), to assets like images,\nfonts, videos, and more.\nParcel makes your code portable. You can build your code for different\nenvironments, for the web for your server, or for an app. You can even build\nmultiple targets at once and have them live update as you make changes.\nParcel is fast and predictable. It compiles all of your files in isolation in\nparallel inside workers, caching all of them as it goes along. Caches are\nstable across machines and are only affected by the files and configs within\nyour project (unless you want to pass specific environment variables).\nParcel CLI\nThe Parcel CLI is built into the main parcel package. While you can install\nit globally and run it, it is much better to install it locally into your\nproject as a dev dependency.\nyarn add --dev parcel@next\nYou should also add some \"scripts\" to your package.json to run it easier.\n{\n  \"name\": \"my-project\",\n  \"scripts\": {\n    \"build\": \"parcel build index.html\",\n    \"start\": \"parcel serve index.html\"\n  },\n  \"devDependencies\": {\n    \"parcel\": \"latest\"\n  }\n}\nNow you can run yarn build to bundle your project for production and\nyarn start to dev on your project.\nCLI Args & Flags\nUsage:\n$ parcel [command] [...entries] [...flags]\nparcel serve\nServe assets on a local server.\nparcel watch\nWatch and rebuild code on file changes.\nparcel build\nBuild code once, in production mode.\n[...entries]\nEntry files to start bundling, these will be preserved as entry points in the\noutput. Defaults to package.json#source, falling back to src\/index.* or\nindex.*. See #Sources.\n--target [name]\nSpecifies a specific target to build. If unspecified, Parcel builds all\ntargets specified in package.json. See #Targets.\n--open, -o [browser]\nOpen your local server in a browser. You can optionally pass the name of the\nbrowser you want to open, otherwise it will use your default browser.\n--host <host>\nConfigure the host to serve assets on. The default is to listen on all interfaces.\n--port <port>, -p\nConfigure the port to serve assets on. Alternatively you can use the $PORT\nenvironment variable.\n--https\nThis will generate a local certificate (which will be untrusted by your\nbrowser, you'll need to approve it) and serve your assets over https:\/\/\n--cert <path>\nSpecify the filepath to your SSL certificate when using --https.\n--key <path>\nSpecify the filepath to your SSL key when using --https.\n--dist-dir <dir>\nConfigure the directory where compiled assets are output. Default is .\/dist.\n--cache-dir <dir>, --no-cache\nConfigure the cache directory with --cache <dir> or disable it altogether\nwith --no-cache.\n--hot, --no-hot\nTurn hot reloading on or off.\n--hot-host <hostname>\nConfigure the hot reloading hostname.\n--hot-port <port>\nConfigure the hot reloading port.\n--[no-]source-maps\nTurn source maps on or off. Source maps are turned on by default.\n--autoinstall [npm\/yarn], --no-autoinstall\nWhen enabled, whenever Parcel discovers a dependency that isn't installed it\nwill attempt to install it with either npm or Yarn (defaults to npm unless a\nyarn.lock exists).\n--log-level <level>\nSet the log level, either either \"none\", \"error\", \"warn\", \"info\", or \"verbose\".\nThe default is \"info\".\n--version, -v, -V\nReturn the current version of Parcel.\n--help, -h\nGet help with the CLI.\nParcel Config\nParcel has always and will always work out of the box for many projects with\nzero configuration. It should always be extremely simple to get started. But if\nyou do want more control, we give you the tools to do so.\nConfiguring external tools\nA huge part of what Parcel does is run other tools over your code. Instead of\npulling all that configuration into Parcel, we make use of their own\nconfiguration systems. So if you're using Babel, you should just use .babelrc\nfiles to configure it.\nWhen we do need to introduce config, we create tool specific config files in\norder to do so.\nConfiguring Parcel\nWhen you do need to configure Parcel, it will be in one of 3 places.\n\nIf you need to configure the CLI, it will be a CLI flag\nIf you need to configure your package, it will be in the package.json\nIf you need to configure something with your files or the Parcel asset\npipeline, it will be in .parcelrc\n\npackage.json\n[todo]\n{\n  \"name\": \"foo\",\n  \"main\": \"dist\/main\/index.js\",\n  \"module\": \"dist\/module\/index.js\",\n  \"browser\": \"dist\/browser\/index.js\",\n  \"browserslist\": [\"> 1%\", \"not dead\"],\n  \"engines\": {\n    \"node\": \">=4.x\"\n  },\n  \"source\": \"src\/index.js\",\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\"\n      }\n    },\n    \"module\": {\n      \"engines\": {\n        \"node\": \">=8.x\"\n      }\n    },\n    \"browser\": {\n      \"engines\": {\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  },\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\"\n  }\n}\npackage.json#name\n(Required) The name of the package is always required in order to be\nconsidered a valid package.json.\n{\n  \"name\": \"my-package\"\n}\npackage.json#version\n(Required) All packages inside node_modules must have a package.json#version.\n{\n  \"version\": \"1.0.0\"\n}\npackage.json#main\nThis is the \"main\" target's entry point for the package, by default in library mode (doesn't bundle dependencies).\n{\n  \"main\": \"dist\/main\/index.js\"\n}\nSee Targets\npackage.json#module\nThis is the \"module\" target's entry point for the package, by default in library mode (doesn't bundle dependencies).\n{\n  \"module\": \"dist\/module\/index.js\"\n}\nSee Targets\npackage.json#browser\nThis is the \"browser\" target's entry point for the package, by default in library mode (doesn't bundle dependencies).\n{\n  \"browser\": \"dist\/browser\/index.js\"\n}\nSee Targets\npackage.json#source\nSpecify the entry points for your source code which gets mapped to your\ntargets.\n{\n  \"source\": \"src\/index.js\",\n  \"source\": [\"src\/index.js\", \"src\/index.html\"]\n}\nSee Sources\npackage.json#browserslist\nAs specified by Browserslist, this field is for specifying which transformers\nshould be applied to browser bundles.\n{\n  \"browserslist\": [\"> 0.2%\", \"not dead\"]\n}\nSee Environments\npackage.json#engines\nSpecify what versions of what engines you want to support.\n{\n  \"engines\": {\n    \"node\": \">=4.x\",\n    \"electron\": \">=2.x\"\n  }\n}\nSee Environments\npackage.json#targets\nConfiguration for individual targets.\n{\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\",\n        \"electron\": \">=2.x\"\n      },\n    },\n    \"browser\": {\n      \"engines\": {\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  }\n}\nSee Targets\npackage.json#alias\nAliases asset names\/paths to other assets.\n{\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\"\n  }\n}\nSee Aliases\n.parcelrc\nYour .parcelrc file will likely contain just a few fields (if you have one at\nall), but here's an example of a .parcelrc file that contains every field:\n{\n  \"extends\": [\"@parcel\/config-default\"],\n  \"resolvers\": [\"@parcel\/resolver-default\"],\n  \"transformers\": {\n    \"*.vue\": [\"@parcel\/transformer-vue\"],\n    \"*.scss\": [\"@parcel\/transformer-sass\"],\n    \"*.js\": [\"@parcel\/transformer-babel\"],\n    \"*.css\": [\"@parcel\/transformer-postcss\"],\n    \"*.html\": [\"@parcel\/transformer-posthtml\"]\n  },\n  \"bundler\": \"@parcel\/bundler-default\",\n  \"namers\": [\"@parcel\/namer-default\"],\n  \"runtimes\": {\n    \"browser\": [\"@parcel\/runtime-js\", \"@parcel\/runtime-browser-hmr\"],\n    \"node\": [\"@parcel\/runtime-js\"]\n  },\n  \"packagers\": {\n    \"*.js\": \"@parcel\/packager-js\",\n    \"*.css\": \"@parcel\/packager-css\",\n    \"*.html\": \"@parcel\/packager-html\",\n    \"*.wasm\": \"@parcel\/packager-wasm\",\n    \"*.raw\": \"@parcel\/packager-raw\"\n  },\n  \"optimizers\": {\n    \"*.js\": [\"@parcel\/optimizer-uglify\"],\n    \"*.css\": [\"@parcel\/optimizer-cssnano\"],\n    \"*.html\": [\"@parcel\/optimizer-htmlnano\"],\n    \"*.{png,jpg,jpeg,svg,...}\": [\"@parcel\/optimizer-imagemin\"]\n  },\n  \"reporters\": [\"@parcel\/reporter-cli\"]\n}\nGlob maps in .parcelrc\nMany config properties like transformers or packagers use objects as maps of\nglobs to package names. While objects in JSON are technically unordered, Parcel\ndoes use the order to give globs priority when a file name is being tested\nagainst them.\n{\n  \"transformers\": {\n    \"icons\/*.svg\": [\"highest-priority\"],\n    \"*.svg\": [\"lowest-priority\"]\n  }\n}\nHere if we are trying to find a transform for the file icons\/home.svg, we'll\nwork our way down the globs until we find a match, which would be\nicons\/*.svg, we never reach *.svg.\n.parcelrc#extends\nextends can either be a string or an array of strings that specify base\nconfigs to extend. That base configuration can be the path to another\n.parcelrc file or the name of a Parcel config package.\n{\n  \"extends\": \"@parcel\/config-default\",\n  \"extends\": \"..\/.parcelrc\",\n  \"extends\": [\"@parcel\/config-default\", \"@company\/parcel-config\"]\n}\nWhen extending a config, Parcel does a shallow merge of the two configs.\n.parcelrc#resolvers\nresolvers is an array of strings that specifies the name of a Parcel resolver\npackage.\n{\n  \"resolvers\": [\"@parcel\/resolver-default\"]\n}\nSee Resolvers\n.parcelrc#transformers\ntransformers is an object map of globs to arrays of Parcel transform packages.\n{\n  \"transformers\": {\n    \"*.js\": [\"@parcel\/transformer-babel\"]\n  }\n}\nSee Transformers\n.parcelrc#bundler\nbundler is a string that specifies the name of a Parcel bundler package.\n{\n  \"bundler\": \"@parcel\/bundler-default\"\n}\nSee Bundlers\n.parcelrc#namers\nnamers is an array of Parcel namer packages.\n{\n  \"namers\": [\"@parcel\/namer-default\"]\n}\nSee Namers\n.parcelrc#runtimes\nruntimes is an object map of environments to arrays of Parcel runtime packages.\n{\n  \"runtimes\": {\n    \"browser\": [\"@parcel\/runtime-js\", \"@parcel\/runtime-browser-hmr\"],\n    \"node\": [\"@parcel\/runtime-js\"]\n  }\n}\nSee Runtimes\n.parcelrc#packagers\npackagers is an object map of globs to Parcel packager packages.\n{\n  \"packagers\": {\n    \"*.js\": [\"@parcel\/packager-js\"]\n  }\n}\nSee Packagers\n.parcelrc#optimizers\noptimizers is an object map of globs to arrays of Parcel optimizer packages.\n{\n  \"optimizers\": {\n    \"*.js\": [\"@parcel\/optimizer-uglify\"]\n  }\n}\nSee Optimizers\n.parcelrc#reporters\nreporters is an array of Parcel reporter packages.\n{\n  \"reporters\": [\"@parcel\/reporter-detailed\"]\n}\nSee Reporters.\n.parcelrc#validators\nvalidators is an object map of globs to arrays of Parcel validator packages.\n  \"validators\": {\n    \"*.ts\": [\"@parcel\/validator-typescript\"]\n  }\n}\nSee Validators.\nParcel Architecture\nEven if you aren't doing anything that complex, if you are going to use Parcel\na lot it makes sense to take some time and understand how it works.\nPhases of Parcel\nAt a high level Parcel runs through several phases:\n\nResolving\nTransforming\nBundling\nPackaging\nOptimizing\n(Validating)\n\nThe resolving and transforming phases work together in parallel to\nbuild a graph of all your assets.\nThis asset graph gets translated into bundles in the bundling phase.\nThen the packaging phase takes the assets in the calculated bundles and\nmerges them together into files each containing an entire bundle.\nFinally, in the optimizing phase, Parcel takes these bundles files and runs\nthem through optimizing transforms.\nAsset Graph\nDuring the resolving and transforming phases, Parcel discovers all the assets\nin your app or program. Every asset can have its own dependencies on other\nassets which Parcel will pull in.\nThe data structure that represents all of these assets and their dependencies\non one another is known as \"The Asset Graph\".\n\n\n\nAsset Name\nDependencies\n\n\n\n\nindex.html\napp.css, app.js\n\n\napp.css\nN\/A\n\n\napp.js\nnavbar.js\n\n\nnavbar.js\netc.\n\n\n\nBundles\nOnce Parcel has built the entire Asset Graph, it begins turning it into\n\"bundles\". These bundles are groupings of assets that get placed together in a\nsingle file.\nBundles will (generally) contain only assets in the same language:\n\n\n\nBundle Name\nAssets\n\n\n\n\nindex.html\nindex.html\n\n\napp.css\napp.css\n\n\napp.js\napp.js, navbar.js, etc.\n\n\n\nSome assets are considered \"entry\" points into your app, and will stay as\nseparate bundles. For example, if your index.html file links to an\nabout.html file, they won't be merged together.\n\n\n\nBundle Name\nAssets\nEntry URL\n\n\n\n\nindex.html\nindex.html\n\/\n\n\nabout.html\nabout.html\n\/about\n\n\n\nSources\n\"Sources\" are the files that contain the source code to your app before being\ncompiled by Parcel.\nParcel discovers these sources by following their dependencies on one another\nstarting at your \"entries\".\nThese entries will be one of:\n\n$ parcel <...entries>\n~\/package.json#source\n.\/src\/index.*\n.\/index.*\n\nFrom there, everything those assets depend on will be considered a \"source\" in\nParcel.\nTargets\nWhen Parcel runs, it can build your asset graph in multiple different ways\nsimultaneously. These are called \"targets\".\nFor example, you could have a \"modern\" target that targets newer browsers\nand a \"legacy\" target for older browsers.\nSources get mapped to targets,\nTarget Configuration\nIn the most explicit form, targets are configured via the\npackage.json#targets field.\n{\n  \"app\": \"dist\/browser\/index.js\",\n  \"appModern\": \"dist\/browserModern\/index.js\",\n  \"targets\": {\n    \"app\": { \/* target env *\/ },\n    \"appModern\": { \/* target env *\/ }\n  }\n}\nEach target has a name which corresponds to a top-level package.json field\nsuch as package.json#main or package.json#browser which specify the primary\nentry point for that target.\nInside each of those targets contains the target's environment configuration:\n\n\n\nOption\nPossible values\nDescription\n\n\n\n\ncontext\n'node' | 'browser' | 'web-worker' | 'electron-main' | 'electron-renderer'\nWhere the bundle should run\n\n\nincludeNodeModules\nboolean | [String]\nWhether to bundle all\/none\/some node_module dependency\n\n\noutputFormat\n'global' | 'esmodule' | 'commonjs'\nWhich type of imports\/exports should be emitted\n\n\npublicUrl\nstring\nThe public url of the bundle at runtime\n\n\nisLibrary\nboolean\nLibrary as in 'npm library'\n\n\nsourceMap\nboolean | {inlineSources?: boolean, sourceRoot?: string, inline?: boolean}\nEnable\/disable sourcemap and set options\n\n\nengines\nEngines\nSame as package.json#engines\n\n\n\nHowever, a lot of the normal configuration you might want will already have\ndefaults provided for you:\ntargets = {\n  main: {\n    engines: {\n      node: value(\"package.json#engines.node\"),\n      browsers: unless exists(\"package.json#browser\") then value(\"package.json#browserlist\")\n    },\n    isLibrary: true\n  },\n  module: {\n    engines: {\n      node: value(\"package.json#engines.node\"),\n      browsers: unless exists(\"package.json#browser\") then value(\"package.json#browserlist\")\n    },\n    isLibrary: true\n  },\n  browser: {\n    engines: {\n      browsers: value(\"package.json#browserslist\")\n    },\n    isLibrary: true\n  },\n  ...value(\"package.json#targets\"),\n}\nEnvironments\nEnvironments tell Parcel how to transform and bundle each asset. They tell\nParcel if an asset is going to be run in a browser or in NodeJS\/Electron.\nThey also tell Parcel's transform plugins how they should run. They tell\nBabel or\nAutoprefixer what browsers\nyour asset is targetting.\nYou can configure environments through your targets.\n{\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\",\n        \"electron\": \">=2.x\",\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  }\n}\nWhen one asset depends on another, the environment is inherited from its\nparent. But how you depend on the asset can change some properties of that\nenvironment.\nFor example:\nnavigator.serviceWorker.register('.\/service-worker.js');\nlet childEnvironment = {...parentEnvironment, browserContext: 'service-worker'};\nCaching\nParcel will create a \/.parcel-cache directory. It will be filled with\ndirectories with two letters, which are the start of a hash which is finished\nby the names of the JSON files inside.\n\/.parcel-cache\n  \/00\/\n    213debd8ddd45819b79a3a974ed487.json\n    40ae9b581afc53841307a4b3c2463d.json\n    63a9dd58fc1e8f8bb819759ea9793c.json\n    ...\n  \/01\/\n  \/..\/\n  \/zy\/\n  \/zz\/\n\nIt follows this weird structure in order to avoid too many files being created\nin a single directory, which degrades file system performance.\nAsset Resolution\nParcel follows the Node module resolution algorithm with a few additions.\nLocal Paths\n.\/path\/to\/file\n.\/path\/to\/file.js\n\nThese follow the Node module resolution algorithm.\nPackage Paths\npreact\nlodash\/cloneDeep\n@sindresorhus\/is\n\nThese follow the Node module resolution algorithm.\nURLs\nhttps:\/\/unpkg.com\/preact@8.2.9\/dist\/preact.min.js\n\nParcel by default will ignore URL dependencies, other resolver plugins may\nchoose to do something with them.\nTilde Paths\n~\/src\/file.js\n\nOnly when used outside of node_modules directories, the ~ is replaced by an\nabsolute path to the closest package root:\n\/path\/to\/app #(\/package.json)\nTo form a path that looks like:\n\/path\/to\/app\/src\/file.js\n\nThen it follows the Node module resolution algorithm.\nAliases\nAliases come in two forms:\n\nPackage Aliases: react -> preact\nFile\/Directory Aliases: utils -> .\/src\/utils\n\n{\n  \"name\": \"my-project\",\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\",\n    \"utils\": \".\/src\/utils\",\n    \"components\": \".\/src\/components\"\n  }\n}\nThere are a couple of rules:\n\nAliases will only be respected when specified outside of node_modules.\nAliases specified outside of node_modules will affect assets inside of node_modules.\nAliases cannot build off of other aliases.\nOnly one alias will be applied at a time.\nAliases must be valid npm package names.\n\nPlugins\nResolvers\nWhen one asset depends on another through an asset specifier, the resolver is\nresponsible for determining what asset is being requested.\nSee Asset Resolution for more details.\n{\n  \"resolvers\": [\"@parcel\/resolver-v1\"]\n}\nOfficial Resolvers:\n\n@parcel\/resolver-v1\n\nTransformers\ntransformers transform single assets as they are discovered and added to the\nasset graph. They mostly call out to different compilers and preprocessors.\n{\n  \"transformers\": {\n    \"*.js\": [\"@parcel\/transformer-babel\"]\n  }\n}\nOfficial Transformers:\n\n@parcel\/transformer-babel\n@parcel\/transformer-coffeescript\n@parcel\/transformer-glsl\n@parcel\/transformer-graphql\n@parcel\/transformer-json\n@parcel\/transformer-json5\n@parcel\/transformer-less\n@parcel\/transformer-posthtml\n@parcel\/transformer-postcss\n@parcel\/transformer-pug\n@parcel\/transformer-raw\n@parcel\/transformer-reason\n@parcel\/transformer-rust\n@parcel\/transformer-stylus\n@parcel\/transformer-toml\n@parcel\/transformer-typescript\n@parcel\/transformer-vue\n@parcel\/transformer-wasm\n@parcel\/transformer-webmanifest\n@parcel\/transformer-yaml\n...\n\nBundlers\nBundlers accept the entire asset graph and turn it into sets of bundles.\n{\n  \"bundler\": \"@parcel\/bundler-default\"\n}\nOfficial Bundlers:\n\n@parcel\/bundler-default\n\nNamers\nNamers accept a bundle and return a filename for that bundle.\n{\n  \"namers\": [\"@parcel\/namer-default\"]\n}\nOfficial Namers:\n\n@parcel\/namer-default\n\nRuntimes\nRuntimes get called after the bundler phase and generate an asset which gets\nincluded in the final bundle.\n{\n  \"runtimes\": {\n    \"browser\": [\"@parcel\/runtime-js\", \"@parcel\/runtime-browser-hmr\"],\n    \"node\": [\"@parcel\/runtime-js\"]\n  }\n}\nOfficial Runtimes:\n\n@parcel\/runtime-js\n@parcel\/runtime-hmr\n\nPackagers\nPackagers determine how to merge different asset types into a single bundle.\n{\n  \"packagers\": {\n    \"*.css\": \"@parcel\/packager-css\"\n  }\n}\nOfficial Packagers:\n\n@parcel\/packager-html\n@parcel\/packager-js\n@parcel\/packager-css\n@parcel\/packager-wasm\n@parcel\/packager-raw\n\nOptimizers\nOptimizers are similar to transformers, but they accept a bundle instead\nof a single asset.\n{\n  \"optimizers\": {\n    \"*.js\": [\"@parcel\/optimizer-terser\"],\n    \"*.css\": [\"@parcel\/optimizer-csso\"]\n  }\n}\nOfficial Optimizers:\n\n@parcel\/packager-terser\n@parcel\/packager-csso\n[todo]\n\nReporters\nReporters receive events as they happen and can either use the Parcel logger to\noutput to stdout\/stderr or they can return assets to be generated on the file\nsystem.\n{\n  \"reporters\": [\"@parcel\/reporter-cli\", \"@parcel\/reporter-dev-server\"]\n}\nOfficial Reporters:\n\n@parcel\/reporter-cli\n@parcel\/reporter-dev-server\n[todo]\n\nValidators\nValidators emit errors for source code after a build is completed.\nFor example, type checking and linting.\n{\n  \"validators\": {\n    \"*.ts\": [\"@parcel\/validator-typescript\"]\n  }\n}\nOfficial Validators:\n\n@parcel\/validator-typescript\n@parcel\/validator-eslint\n[todo]\n\nCreating Plugins\nNaming\nAll plugins must follow a naming system:\n\n\n\n\nOfficial package\nCommunity packages\nPrivate company\/scoped team packages\n\n\n\n\nConfigs\n@parcel\/config-{name}\nparcel-config-{name}\n@scope\/parcel-config[-{name}]\n\n\nResolvers\n@parcel\/resolver-{name}\nparcel-resolver-{name}\n@scope\/parcel-resolver[-{name}]\n\n\nTransformers\n@parcel\/transformer-{name}\nparcel-transformer-{name}\n@scope\/parcel-transformer[-{name}]\n\n\nBundlers\n@parcel\/bundler-{name}\nparcel-bundler-{name}\n@scope\/parcel-bundler[-{name}]\n\n\nNamers\n@parcel\/namer-{name}\nparcel-namer-{name}\n@scope\/parcel-namer[-{name}]\n\n\nRuntimes\n@parcel\/runtime-{name}\nparcel-runtime-{name}\n@scope\/parcel-runtime[-{name}]\n\n\nPackagers\n@parcel\/packager-{name}\nparcel-packager-{name}\n@scope\/parcel-packager[-{name}]\n\n\nOptimizers\n@parcel\/optimizer-{name}\nparcel-optimizer-{name}\n@scope\/parcel-optimizer[-{name}]\n\n\nReporters\n@parcel\/reporter-{name}\nparcel-reporter-{name}\n@scope\/parcel-reporter[-{name}]\n\n\nValidators\n@parcel\/validator-{name}\nparcel-validator-{name}\n@scope\/parcel-validator[-{name}]\n\n\n\nThe {name} must be descriptive and directly related to the purpose of the\npackage. Someone should be able to have an idea of what the package does simply\nby reading the name in a .parcelrc or package.json#devDependencies.\nparcel-transformer-posthtml\nparcel-packager-wasm\nparcel-reporter-graph-visualizer\n\nIf your plugin adds support for a specific tool, please use the name of the\ntool.\nparcel-transformer-es6 (bad)\nparcel-transformer-babel (good)\n\nIf your plugin is a reimplementation of something that exists, try naming it\nsomething that explains why it is a separate:\nparcel-transformer-better-typescript (bad)\nparcel-transformer-typescript-server (good)\n\nWe ask that community members work together and when forks happen to try and\nresolve them. If someone made a better version of your plugin, please consider\ngiving the better package name over, have them make a major version bump, and\nredirect people to the new tool.\nVersioning\nYou must follow semantic versioning (to the best of your ability). No, it's not\nthe perfect system, but it's the best one we have and people do depend on it.\nIf plugin authors intentionally don't follow semantic versioning, Parcel may\nstart warning users that they should be locking down the version number for\nyour plugin.\n\nWarning: The plugin \"parcel-transform-typescript\" does not follow semantic\nversioning. You should lock the version range down so your code does not\nbreak when they make changes. Please upvote this issue to encourage them to\nfollow semver: https:\/\/github.com\/user\/parcel-transform-typescript\/issues\/43\n\nEngines\nYou must specify a package.json#engines.parcel field with the version range\nof Parcel that your plugin supports:\n{\n  \"name\": \"parcel-transform-imagemin\",\n  \"engines\": {\n    \"parcel\": \"2.x\"\n  }\n}\nIf you do not specify this field, Parcel will output a warning:\nWarning: The plugin \"parcel-transform-typescript\" needs to specify a `package.json#engines.parcel` field with the supported Parcel version range.\n\nIf you do specify the parcel engine field and the user is using an incompatible\nversion of Parcel, they will see an error:\nError: The plugin \"parcel-transform-typescript\" is not compatible with the\ncurrent version of Parcel. Requires \"2.x\" but the current version is \"3.1.4\"\n\nParcel uses node-semver to match version ranges.\nPlugin APIs\nThere are several different types of plugins. They all look very similar, but\nare kept separate so we can have strict contracts one what each one is allowed\nto do.\nThere are some rules that should be followed across every type of plugin:\n\nStateless \u2014 Avoid any kind of state, it will likely be the source of bugs\nfor your users. For example, the same transform may exist in multiple\nseparate workers which are not allowed to communicate with one another, state\nwill not work as expected.\nPure \u2014 Given the same input, a plugin must produce the same output, and\nyou must not have any observable side effects, or implicit dependencies.\nOtherwise Parcel's caching will break and your users will be sad. You should\nnever have to tell users to delete their caches.\n\nThe plugin APIs all follow a common shape:\nimport {NameOfPluginType} from '@parcel\/plugin';\n\nexport default new NameOfPluginType({\n  async methodName(opts: JSONObject): Promise<JSONObject> {\n    return result;\n  }\n});\nThey are made up of modules with well-known named exports of async functions\nthat:\n\nAccept a strictly validated JSON-serializable opts object.\nReturn a strictly validated JSON-serializable vals object.\n\nIf something you need is not being passed through opts, please come talk to\nthe Parcel team about it. Avoid trying to get information yourself from other\nsources, especially from the file system.\nResolvers\nResolvers get called with an asset request (consisting of a source file path\nand the specifier of what is being requested) which it then attempts to\nresolve. If the resolver isn't sure how to handle a request, it can also return\nnull and pass it to the next resolver in the chain.\nimport {Resolver} from '@parcel\/plugin';\n\nexport default new Resolver({\n  async resolve({dependency}) {\n    \/\/ ...\n    return {filePath} || null;\n  }\n});\nTransformers\nTransformers transform single assets as they are discovered and added to the\nasset graph. They mostly call out to different compilers and preprocessors.\nimport {Transform} from '@parcel\/plugin';\n\nexport default new Transform({\n  async parse({asset}) {\n    \/\/ ...\n    return ast;\n  },\n\n  async transform({asset}) {\n    \/\/ ...\n    return [assets];\n  },\n\n  async generate({asset}) {\n    \/\/ ...\n    return {code, map};\n  }\n});\nBundler\nBundlers accept the entire asset graph and modify it to add bundle nodes that group the assets\ninto output bundles.\nimport {Bundler} from '@parcel\/plugin';\n\nexport default new Bundler({\n  async bundle({graph}) {\n    \/\/ ...\n  },\n\n  async optimize({graph}) {\n    \/\/ ...\n  }\n});\nNamers\nNamers accept a bundle and output a filename for that bundle.\nimport {Namer} from '@parcel\/plugin';\n\nexport default new Namer({\n  async name({bundle, bundleGraph}) {\n    \/\/ ...\n    return name;\n  }\n});\nRuntimes\nRuntimes accept a bundle and return assets to be inserted into that bundle.\nimport {Runtime} from '@parcel\/runtime';\n\nexport default new Runtime({\n  async apply({bundle, bundleGraph}) {\n    \/\/ ...\n    return assets;\n  }\n});\nPackagers\nPackagers determine how to merge different asset types into a single bundle.\nimport {Packager} from '@parcel\/plugin';\n\nexport default new Packager({\n  async package({bundle}) {\n    \/\/ ...\n    return {contents, map};\n  },\n});\nOptimizers\nOptimizers are similar to transformers, but they accept a bundle instead\nof a single asset.\nimport {Optimizer} from '@parcel\/plugin';\n\nexport default new Optimizer({\n  async optimize({bundle, contents, map}) {\n    \/\/ ...\n    return {contents, map};\n  }\n});\nReporters\nReporters receive events as they happen and can output to stdout\/stderr,\nor perform other actions.\nimport {Reporter} from '@parcel\/plugin';\n\nexport default new Reporter({\n  async report({ event: { type, ... } }) {\n    \/\/ ...\n  }\n});\nValidators\nValidators receive an asset, and can throw errors if that asset is invalid\nin some way, e.g. type errors or linting errors.\nimport {Validator} from '@parcel\/plugin';\n\nexport default new Validator({\n  async validate({asset}) {\n    \/\/ ...\n    throw error;\n  }\n});\nSome validators (such as @parcel\/validator-typescript) may wish to maintain a project-wide cache for efficiency. For these cases, it is appropriate to use a different interface where parcel hands all changed files to the validator at the same time:\nimport {Validator} from '@parcel\/plugin';\n\nexport default new Validator({\n  async validateAll({assets}) {\n    \/\/ ...\n    throw error;\n  }\n});\nIf your plugin implements validateAll, Parcel will make sure to always invoke this method on the same thread (so that your cache state is accessible).\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md file for details\n","52":"Introduction\n\n\n\nAdminLTE is a fully responsive administration template. Based on Bootstrap 4.4 framework and also the JS\/jQuery plugin.\nHighly customizable and easy to use. Fits many screen resolutions from small mobile devices to large desktops.\nPreview on AdminLTE.io\nLooking for Premium Templates?\nAdminLTE.io just opened a new premium templates page. Hand picked to ensure the best quality and the most affordable\nprices. Visit https:\/\/adminlte.io\/premium for more information.\n\nAdminLTE has been carefully coded with clear comments in all of its JS, SCSS and HTML files.\nSCSS has been used to increase code customizability.\nInstallation\nThere are multiple ways to install AdminLTE.\nDownload:\nDownload from GitHub releases.\nUsing The Command Line:\nImportant Note: To install it via npm\/Yarn, you need at least Node.js 10 or higher.\n\n\nVia npm\nnpm install admin-lte@^3.0 --save\n\n\nVia Yarn\nyarn add admin-lte@^3.0\n\n\nVia Composer\ncomposer require \"almasaeed2010\/adminlte=~3.0\"\n\n\nVia Git\nClone to your machine\ngit clone https:\/\/github.com\/ColorlibHQ\/AdminLTE.git\n\n\nDocumentation\nVisit the online documentation for the most\nupdated guide. Information will be added on a weekly basis.\nBrowser Support\n\nIE 10+\nFirefox (latest)\nChrome (latest)\nSafari (latest)\nOpera (latest)\nMicrosoft Edge (latest)\n\nContributions\nContributions are always welcome and recommended! Here is how:\n\n\nFork the repository (here is the guide).\n\n\nClone to your machine\ngit clone https:\/\/github.com\/YOUR_USERNAME\/AdminLTE.git\n\n\nCreate a new branch\n\n\nMake your changes\n\n\nCreate a pull request\n\n\nCompile dist files\nTo compile the dist files you need Node.js\/npm, clone\/download the repo then:\n\nnpm install (install npm deps)\nOptional: npm run dev (developer mode, autocompile with browsersync support for live demo)\nnpm run production (compile css\/js files)\n\nContribution Requirements:\n\nWhen you contribute, you agree to give a non-exclusive license to AdminLTE.io to use that contribution in any context as we (AdminLTE.io) see appropriate.\nIf you use content provided by another party, it must be appropriately licensed using an open source license.\nContributions are only accepted through GitHub pull requests.\nFinally, contributed code must work in all supported browsers (see above for browser support).\n\nLicense\nAdminLTE is an open source project by AdminLTE.io that is licensed under MIT.\nAdminLTE.io reserves the right to change the license of future releases.\nLatest Release\n\nAdminLTE 3\n\nLegacy Releases\n\nAdminLTE 2\nAdminLTE 1\n\nChangelog\nVisit the releases page to view the changelog\nImage Credits\n\nPixeden\nGraphicsfuel\nPickaface\nUnsplash\nUifaces\n\n","53":"impress.js\n\nIt's a presentation framework based on the power of CSS3 transforms and\ntransitions in modern browsers and inspired by the idea behind prezi.com.\nWARNING\nimpress.js may not help you if you have nothing interesting to say ;)\nHOW TO USE IT\nChecking out and initializing the git repository\ngit clone --recursive https:\/\/github.com\/impress\/impress.js.git\ncd impress.js\n\nNote: For a minimal checkout, omit the --recursive option. This will leave out extra plugins.\nStable releases\nNew features and fixes are continuously merged into the master branch, which is what the above command will check out. For the latest stable release, see the Github Releases page.\nDocumentation\nReference documentation of core impress.js features and API you can find it in DOCUMENTATION.md.\nThe HTML source code of the official impress.js demo serves as a good example usage and contains comments explaining various features of impress.js. For more information about styling you can look into CSS code which shows how classes provided by impress.js can be used. Last but not least JavaScript code of impress.js has some useful comments if you are interested in how everything works. Feel free to explore!\nOfficial demo\nimpress.js demo by @bartaz\nExamples and demos\nThe Classic Slides demo is targeted towards beginners, or can be used as a template for presentations that look like the traditional PowerPoint slide deck. Over time, it also grew into the example presentation that uses most of the features and addons available.\nMore examples and demos can be found on Examples and demos wiki page.\nFeel free to add your own example presentations (or websites) there.\nOther tutorials and learning resources\nIf you want to learn even more there is a list of tutorials and other learning resources\non the wiki, too.\nThere is also a book available about Building impressive presentations with impress.js by Rakhitha Nimesh Ratnayake.\nYou may want to check out the sibling project Impressionist: a 3D GUI editor that can help you in creating impress.js presentations.\nMailing list\nYou're welcome to ask impress.js related questions on the impressionist-presentations mailing list.\nREPOSITORY STRUCTURE\n\nindex.html: This is the official impress.js demo, showcasing all of the features of the original impress.js, as well as some new plugins as we add them.\n\nAs already mentioned, this file is well commented and acts as the official tutorial.\n\n\nexamples\/: Contains several demos showcasing additional features available.\n\nClassic Slides is a simple demo that you can use as template if you want to create very simple, rectangular, PowerPoint-like presentations.\n\n\nsrc\/: The main file is src\/impress.js. Additional functionality is implemented as plugins in src\/plugins\/.\n\nSee src\/plugins\/README.md for information about the plugin API and how to write plugins.\n\n\ntest\/: Contains QUnit and Syn libraries that we use for writing tests, as well as some test coverage for core functionality. (Yes, more tests are much welcome.) Tests for plugins are in the directory of each plugin.\njs\/: Contains js\/impress.js, which contains a concatenation of the core src\/impress.js and all the plugins. Traditionally this is the file that you'll link to in a browser. In fact both the demo and test files do exactly that.\ncss\/: Contains a CSS file used by the demo. This file is not required for using impress.js in your own presentations. Impress.js creates the CSS it needs dynamically.\nextras\/ contains plugins that for various reasons aren't enabled by default. You have to explicitly add them with their own script element to use them.\nbuild.js: Simple build file that creates js\/impress.js. It also creates a minified version impress.min.js, but that one is not included in the github repository.\npackage.json: An NPM package specification. This was mainly added so you can easily install buildify and run node build.js. Other than the build process, which is really just doing roughly cat src\/impress.js src\/plugins\/*\/*.js > js\/impress.js, and testing, impress.js itself doesn't depend on Node or any NPM modules.\n\nWANT TO CONTRIBUTE?\nFor developers, once you've made changes to the code, you should run these commands for testing:\nnpm install\nnpm run all\n\nNote that running firefox qunit_test_runner.html is usually more informative than running karma with npm run test. They both run the same tests.\nMore info about the src\/ directory can be found in src\/plugins\/README.md.\nRequirements\n\n>= node 7.6\nnpm\n\nABOUT THE NAME\nimpress.js name is courtesy of @skuzniak.\nIt's an (un)fortunate coincidence that a Open\/LibreOffice presentation tool is called Impress ;)\nReference API\nSee the Reference API\nBROWSER SUPPORT\nThe design goal for impress.js has been to showcase awesome CSS3 features as found in modern browser versions. We also use some new DOM functionality, and specifically do not use jQuery or any other JavaScript libraries, nor our own functions, to support older browsers. In general, recent versions of Firefox and Chrome are known to work well. Reportedly IE now works too.\nThe typical use case for impress.js is to create presentations that you present from your own laptop, with a browser version you know works well. Some people also use impress.js successfully to embed animations or presentations in a web page, however, be aware that in this some of your visitors may not see the presentation correctly, or at all.\nIn particular, impress.js makes use of the following JS and CSS features:\n\nDataSet API\nClassList API\nCSS 3D Transforms\nCSS Transitions\n\nCOPYRIGHT AND LICENSE\nCopyright 2011-2016 Bartek Szopka\nCopyright 2015-2017 Henrik Ingo\nReleased under the MIT License\n","54":"\n\n\n\n\n\nGhost.org |\n    Features |\n    Showcase |\n    Forum |\n    Docs |\n    Contributing |\n    Twitter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLove open source? We're hiring Node.js Engineers to work on Ghost full-time\n\u00a0\n\n\nThe easiest way to get a production instance deployed is with our official Ghost(Pro) managed service. It takes about 2 minutes to launch a new site with worldwide CDN, backups, security and maintenance all done for you.\nFor most people this ends up being the best value option cause of how much time it saves \u2014 and 100% of revenue goes to the Ghost Foundation; funding the maintenance and further development of the project itself. So you\u2019ll be supporting open source software and getting a great service!\nIf you prefer to run on your own infrastructure, we also offer official 1-off installs and managed support and maintenance plans via Ghost(Valet) - which can save a substantial amount of developer time and resources.\n\u00a0\nQuickstart Install\nIf you want to run your own instance of Ghost, in most cases the best way is to use our CLI tool\nnpm install ghost-cli -g\n\n\u00a0\nThen, if installing locally add the local flag to get up and running in under a minute - Local install docs\nghost install local\n\n\u00a0\nor on a server run the full install, including automatic SSL setup using LetsEncrypt - Production install docs\nghost install\n\n\u00a0\nCheck out our official documentation for more information about our recommended hosting stack & properly upgrading Ghost, plus everything you need to develop your own Ghost themes or work with our API.\nContributors & Advanced Developers\nFor anyone wishing to contribute to Ghost or to hack\/customise core files we recommend following our full development setup guides: Contributor Guide | Developer Setup | Admin Client Dev Guide\n\u00a0\nGhost Sponsors\nWe'd like to extend big thanks to our sponsors and partners who make Ghost possible. If you're interested in sponsoring Ghost and supporting the project, please check out our profile on GitHub Sponsors \u2764\ufe0f\nDigitalOcean | Cloudflare\n\u00a0\nGetting Help\nYou can find answers to a huge variety of questions, along with a large community of helpful developers over on the Ghost forum - replies are generally very quick. Ghost(Pro) customers also have access to 24\/7 email support.\nTo stay up to date with all the latest news and product updates, make sure you subscribe to our blog \u2014 or you can always follow us on Twitter, if you prefer your updates bite-sized and facetious. \ud83c\udfb7\ud83d\udc22\n\u00a0\nCopyright & License\nCopyright (c) 2013-2020 Ghost Foundation - Released under the MIT license. Ghost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our trademark policy for info on acceptable usage.\n","55":"\n\n\n\n\n  33 Concepts Every JavaScript Developer Should Know\n  \n\n\nIntroduction\nThis repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it here.\n\ud83d\ude80 Considered by GitHub as one of the top open source projects of 2018!\nCommunity\nFeel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.\nAll the translations for this repo will be listed below:\n\nAlbanian \u2014 Eldrin Ereqi\nArabic \u2014 Amr Elsekilly\nChinese \u2014 Re Tian\nPortuguese-BR \u2014 Tiago Boeing\nKorean \u2014 Suin Lee\nSpanish \u2014 Adonis Mendoza\nTurkish \u2014 \u0130lker Demir\nRussian \u2014 Mihail Gumennii\nTi\u1ebfng Vi\u1ec7t \u2014 Nguy\u1ec5n Tr\u1ea7n Chung\nPolish \u2014 Dawid Lipinski\nPersian \u2014 Majid Alavizadeh\nIndonesian \u2014 Rijdzuan Sampoerna\nFrench \u2014 Robin M\u00e9tral\nHindi \u2014 Vikas Chauhan\nGreek \u2014 Dimitris Zarachanis\nJapanese \u2014 oimo23\nGerman \u2014 burhannn\nUkrainian \u2014 Andrew Savetchuk\nSinhala \u2014 Udaya Shamendra\nItalian - Gianluca Fiore\n\n\nTable of Contents\n\nCall Stack\nPrimitive Types\nValue Types and Reference Types\nImplicit, Explicit, Nominal, Structuring and Duck Typing\n== vs === vs typeof\nFunction Scope, Block Scope and Lexical Scope\nExpression vs Statement\nIIFE, Modules and Namespaces\nMessage Queue and Event Loop\nsetTimeout, setInterval and requestAnimationFrame\nJavaScript Engines\nBitwise Operators, Type Arrays and Array Buffers\nDOM and Layout Trees\nFactories and Classes\nthis, call, apply and bind\nnew, Constructor, instanceof and Instances\nPrototype Inheritance and Prototype Chain\nObject.create and Object.assign\nmap, reduce, filter\nPure Functions, Side Effects and State Mutation\nClosures\nHigh Order Functions\nRecursion\nCollections and Generators\nPromises\nasync\/await\nData Structures\nExpensive Operation and Big O Notation\nAlgorithms\nInheritance, Polymorphism and Code Reuse\nDesign Patterns\nPartial Applications, Currying, Compose and Pipe\nClean Code\n\n\n1. Call Stack\nArticles\n\n\ud83d\udcdc Understanding Javascript Call Stack, Event Loops \u2014 Gaurav Pandvia\n\ud83d\udcdc Understanding the JavaScript Call Stack \u2014 Charles Freeborn\n\ud83d\udcdc Javascript: What Is The Execution Context? What Is The Call Stack? \u2014 Valentino Gagliardi\n\ud83d\udcdc What is the JS Event Loop and Call Stack? \u2014 Jess Telford\n\ud83d\udcdc Call Stack \u2014 MDN\n\ud83d\udcdc Understanding Execution Context and Execution Stack in Javascript \u2014 Sukhjinder Arora\n\ud83d\udcdc How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack \u2014 Alexander Zlatkov\n\ud83d\udcdc The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript \u2014 Tyler McGinnis\n\ud83d\udcdc How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack \u2014 Bipin Rajbhar\n\nVideos\n\n\ud83c\udfa5 Javascript: the Call Stack explained \u2014 Coding Blocks India\n\ud83c\udfa5 The JS Call Stack Explained In 9 Minutes \u2014 Colt Steele\n\ud83c\udfa5 JavaScript Execution Stack \u2014 Codecademy\n\ud83c\udfa5 What is the Call Stack? \u2014 Eric Traub\n\ud83c\udfa5 The Call Stack \u2014 Kevin Drumm\n\ud83c\udfa5 Understanding JavaScript Execution \u2014 Codesmith\n\ud83c\udfa5 The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript \u2014 Tyler McGinnis\n\ud83c\udfa5 What the heck is the event loop anyway? \u2014 Philip Roberts\n\ud83c\udfa5 La PILA DE EJECUCI\u00d3N (Call Stack) de JavaScript \u2014 La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n2. Primitive Types\nArticles\n\n\ud83d\udcdc How numbers are encoded in JavaScript \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc What You Need to Know About JavaScript Number Type \u2014 Max Wizard K\n\ud83d\udcdc What Every JavaScript Developer Should Know About Floating Point Numbers \u2014 Chewxy\n\ud83d\udcdc The Secret Life of JavaScript Primitives \u2014 Angus Croll\n\ud83d\udcdc Primitive Types \u2014 Flow\n\ud83d\udcdc (Not) Everything in JavaScript is an Object \u2014 Daniel Li\n\ud83d\udcdc JavaScript data types and data structures \u2014 MDN\n\ud83d\udcdc Diving Deeper in JavaScripts Objects \u2014 Arfat Salman\n\ud83d\udcdc The differences between Object.freeze() vs Const in JavaScript \u2014 Bolaji Ayodeji\n\nVideos\n\n\ud83c\udfa5 JavaScript Reference vs Primitive Types \u2014 Academind\n\ud83c\udfa5 JavaScript Primitive Types \u2014 Simon Sez IT\n\ud83c\udfa5 Value Types and Reference Types in JavaScript \u2014 Programming with Mosh\n\ud83c\udfa5 JavaScript Primitive Data Types \u2014 Avelx\n\ud83c\udfa5 Everything you never wanted to know about JavaScript numbers \u2014 Bartek Szopka\n\ud83c\udfa5 What are variables in Javascript? \u2014 JS For Everyone\n\ud83c\udfa5 TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n3. Value Types and Reference Types\nArticles\n\n\ud83d\udcdc Explaining Value vs. Reference in Javascript \u2014 Arnav Aggarwal\n\ud83d\udcdc Understand Value and Reference Types in JavaScript \u2014 Zsolt Nagy\n\ud83d\udcdc Primitive Types & Reference Types in JavaScript \u2014 Bran van der Meer\n\ud83d\udcdc Value Types, Reference Types and Scope in JavaScript \u2014 Ben Aston\n\ud83d\udcdc Back to roots: JavaScript Value vs Reference \u2014 Miro Koczka\n\ud83d\udcdc Grasp \u201cBy Value\u201d and \u201cBy Reference\u201d in JavaScript \u2014 L\u00e9na Faure\n\ud83d\udcdc JavaScript Reference and Copy Variables \u2014 V\u00edtor Capretz\n\ud83d\udcdc JavaScript Primitive vs Reference Values\n\ud83d\udcdc JavaScript by Reference vs. by Value \u2014 nrabinowitz\n\ud83d\udcdc JavaScript Interview Prep: Primitive vs. Reference Types \u2014 Mike Cronin\n\nVideos\n\n\ud83c\udfa5 Javascript Pass by Value vs Pass by Reference \u2014 techsith\n\ud83c\udfa5 JavaScript Value vs Reference Types \u2014 Programming with Mosh\n\ud83c\udfa5 VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n4. Implicit, Explicit, Nominal, Structuring and Duck Typing\nArticles\n\n\ud83d\udcdc What you need to know about Javascript's Implicit Coercion \u2014 Promise Tochi\n\ud83d\udcdc JavaScript Type Coercion Explained \u2014 Alexey Samoshkin\n\ud83d\udcdc Javascript Coercion Explained \u2014 Ben Garrison\n\ud83d\udcdc What exactly is Type Coercion in Javascript? - Stack Overflow\n\ud83d\udcdc You Don't Know JS: Types & Grammar, 1st Edition [Book] \u2014 Kyle Simpson\n\ud83d\udcdc Type Coercion in JavaScript, and why everyone gets it wrong.\n\nVideos\n\n\ud83c\udfa5 == ? === ??? ...#@^% - Shirmung Bielefeld\n\ud83c\udfa5 Coercion in Javascript - Hitesh Choudhary\n\ud83c\udfa5 JavaScript Questions: What is Coercion? - Steven Hancock\n\ud83c\udfa5 Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse\n\ud83c\udfa5 EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n5. == vs === vs typeof\nArticles\n\n\ud83d\udcdc JavaScript Double Equals vs. Triple Equals \u2014 Brandon Morelli\n\ud83d\udcdc Should I use === or == equality comparison operator in JavaScript? \u2014 Panu Pitkamaki\n\ud83d\udcdc == vs === JavaScript: Double Equals and Coercion \u2014 AJ Meyghani\n\ud83d\udcdc Why Use the Triple-Equals Operator in JavaScript? \u2014 Louis Lazaris\n\ud83d\udcdc What is the difference between == and === in JavaScript? \u2014 Craig Buckler\n\ud83d\udcdc Why javascript's typeof always return \"object\"? \u2014 Stack Overflow\n\ud83d\udcdc Checking Types in Javascript \u2014 Toby Ho\n\ud83d\udcdc How to better check data types in JavaScript \u2014 Webbjocke\n\ud83d\udcdc Checking for the Absence of a Value in JavaScript \u2014 Tomer Aberbach\n\nVideos\n\n\ud83c\udfa5 JavaScript - The typeof operator \u2014 Java Brains\n\ud83c\udfa5 Javascript typeof operator \u2014 DevDelight\n\n\u2b06 Back to Top\n\n6. Function Scope, Block Scope and Lexical Scope\nArticles\n\n\ud83d\udcdc You Don't Know JS Yet: Scope & Closures, 2nd Edition [Book] \u2014 Kyle Simpson\n\ud83d\udcdc JavaScript Functions\u200a\u2014\u200aUnderstanding The Basics \u2014 Brandon Morelli\n\ud83d\udcdc The battle between Function Scope and Block Scope \u2014 Marius Herring\n\ud83d\udcdc Emulating Block Scope in JavaScript \u2014 Josh Clanton\n\ud83d\udcdc The Difference Between Function and Block Scope in JavaScript \u2014 Joseph Cardillo\n\ud83d\udcdc Function Scopes and Block Scopes in JavaScript \u2014 Samer Buna\n\ud83d\udcdc Understanding Scope and Context in JavaScript | Ryan Morr\n\ud83d\udcdc JavaScript Scope and Closures \u2014 Zell Liew\n\ud83d\udcdc Understanding Scope in JavaScript \u2014 Wissam Abirached\n\ud83d\udcdc Speaking JavaScript - Variables: Scopes, Environments, and Closures \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc Understanding Scope in JavaScript \u2015 Hammad Ahmed\n\ud83d\udcdc When to use a function declaration vs. a function expression \u2015 Amber Wilkie\n\ud83d\udcdc A JavaScript Fundamentals Cheat Sheet: Scope, Context, and \u201cthis\u201d \u2015 Alexandra Fren\n\nVideos\n\n\ud83c\udfa5 What Makes Javascript Weird ... and Awesome pt. 4 \u2014 LearnCode.academy\n\ud83c\udfa5 Variable Scope in JavaScript \u2014 Kirupa Chinnathambi\n\ud83c\udfa5 JavaScript Block Scope and Function Scope \u2014 mmtuts\n\ud83c\udfa5 What the Heck is Lexical Scope? \u2014 NWCalvank\n\n\u2b06 Back to Top\n\n7. Expression vs Statement\nArticles\n\n\ud83d\udcdc All you need to know about Javascript's Expressions, Statements and Expression Statements \u2014 Promise Tochi\n\ud83d\udcdc Function Expressions vs Function Declarations \u2014 Paul Wilkins\n\ud83d\udcdc JavaScript Function \u2014 Declaration vs Expression \u2014 Ravi Roshan\n\ud83d\udcdc Function Declarations vs. Function Expressions \u2014 Mandeep Singh\n\ud83d\udcdc Function Declarations vs. Function Expressions \u2014 Anguls Croll\n\nVideos\n\n\ud83c\udfa5 Expressions vs. Statements in JavaScript \u2014 Hexlet\n\ud83c\udfa5 JavaScript - Expression vs. Statement \u2014 WebTunings\n\ud83c\udfa5 Function Statements and Function Expressions \u2014 Codeacademy\n\n\u2b06 Back to Top\n\n8. IIFE, Modules and Namespaces\nArticles\n\n\ud83d\udcdc Mastering Immediately-Invoked Function Expressions \u2015 Chandra Gundamaraju\n\ud83d\udcdc Do ES6 Modules make the case of IIFEs obsolete?\n\ud83d\udcdc A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers \u2015 Jurgen Van de Moere\n\ud83d\udcdc Modules \u2015 Exploring JS\n\ud83d\udcdc ES modules: A cartoon deep-dive \u2014 Lin Clark\n\ud83d\udcdc Understanding ES6 Modules \u2014 Craig Buckler\n\ud83d\udcdc An overview of ES6 Modules in JavaScript \u2014 Brent Graham\n\ud83d\udcdc ES6 Modules in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc ES6 modules, Node.js and the Michael Jackson Solution \u2014 Alberto Gimeno\n\ud83d\udcdc JavaScript Modules: A Beginner\u2019s Guide \u2014 Preethi Kasireddy\n\ud83d\udcdc Using JavaScript modules on the web\n\ud83d\udcdc JavaScript Modules: From IIFEs to CommonJS to ES6 Modules \u2014 Tyler McGinnis\n\ud83d\udcdc IIFE: Immediately Invoked Function Expressions \u2014 Parwinder\n\nVideos\n\n\ud83c\udfa5 Immediately Invoked Function Expression - Beau teaches JavaScript \u2014 freeCodeCamp\n\ud83c\udfa5 Understanding JavaScript IIFE\n\ud83c\udfa5 JavaScript Modules: ES6 Import and Export \u2014 Kyle Robinson\n\ud83c\udfa5 ES6 - Modules \u2014 Ryan Christiani\n\ud83c\udfa5 ES6 Modules in the Real World \u2014 Sam Thorogood\n\ud83c\udfa5 ES6 Modules \u2014 TempleCoding\n\n\u2b06 Back to Top\n\n9. Message Queue and Event Loop\nArticles\n\n\ud83d\udcdc JavaScript Event Loop Explained \u2014 Anoop Raveendran\n\ud83d\udcdc The JavaScript Event Loop: Explained \u2014 Erin Sweson-Healey\n\ud83d\udcdc What is the Event Loop in Javascript \u2014 WP Tutor.io\n\ud83d\udcdc Understanding JS: The Event Loop \u2014 Alexander Kondov\n\ud83d\udcdc Understanding the JavaScript Event Loop \u2014 Ashish Gupta\n\ud83d\udcdc Event Loop in Javascript \u2014 Manjula Dube\n\ud83d\udcdc The JavaScript Event Loop \u2014 Flavio Copes\n\ud83d\udcdc How JavaScript works: Event loop \u2014 Alexander Zlatkov\n\ud83d\udcdc Tasks, microtasks, queues and schedules \u2014 Jake Archibald\n\ud83d\udcdc Visualising the JavaScript Event Loop with a Pizza Restaurant analogy \u2014 Priyansh Jain\n\ud83d\udcdc JavaScript Visualized: Event Loop \u2014 Lydia Hallie\n\nVideos\n\n\ud83c\udfa5 What the heck is the event loop anyway? | JSConf EU \u2014 Philip Roberts\n\ud83c\udfa5 JavaScript Event Loop \u2014 ComScience Simplified\n\ud83c\udfa5 I'm stuck in an Event Loop \u2014 Philip Roberts\n\ud83c\udfa5 In The Loop - Jake Archibald | JSConf.Asia 2018\n\ud83c\udfa5 Desmitificando el Event Loop (Spanish)\n\n\u2b06 Back to Top\n\n10. setTimeout, setInterval and requestAnimationFrame\nArticles\n\n\ud83d\udcdc setTimeout and setInterval \u2014 JavaScript.Info\n\ud83d\udcdc Why not to use setInterval \u2014 Akanksha Sharma\n\ud83d\udcdc setTimeout VS setInterval \u2014 Develoger\n\ud83d\udcdc Using requestAnimationFrame \u2014 Chris Coyier\n\ud83d\udcdc Understanding JavaScript's requestAnimationFrame() \u2014 JavaScript Kit\n\ud83d\udcdc Handling time intervals in JavaScript - Amit Merchant\n\nVideos\n\n\ud83c\udfa5 Javascript: How setTimeout and setInterval works \u2014 Coding Blocks India\n\ud83c\udfa5 setTimeout and setInterval in JavaScript \u2014 techsith\n\ud83c\udfa5 JavaScript Timers \u2014 Steve Griffith\n\ud83c\udfa5 JavaScript setTimeOut and setInterval Explained \u2014 Theodore Anderson\n\n\u2b06 Back to Top\n\n11. JavaScript Engines\nArticles\n\n\ud83d\udcdc JavaScript Engines \u2014 Jen Looper\n\ud83d\udcdc Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code \u2014 DroidHead\n\ud83d\udcdc Understanding V8\u2019s Bytecode \u2014 Franziska Hinkelmann\n\ud83d\udcdc A Brief History of Google\u2019s V8 Javascript Engine \u2014 Clair Smith\n\ud83d\udcdc JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp\n\ud83d\udcdc JavaScript engine fundamentals: Shapes and Inline Caches\n\ud83d\udcdc JavaScript engine fundamentals: optimizing prototypes\n\ud83d\udcdc How V8 optimizes array operations\n\nVideos\n\n\ud83c\udfa5 JavaScript Engines: The Good Parts\u2122 \u2014 Mathias Bynens & Benedikt Meurer\n\n\u2b06 Back to Top\n\n12. Bitwise Operators, Type Arrays and Array Buffers\nArticles\n\n\ud83d\udcdc Programming with JS: Bitwise Operations \u2014 Alexander Kondov\n\ud83d\udcdc Using JavaScript\u2019s Bitwise Operators in Real Life \u2014 ian m\n\ud83d\udcdc JavaScript Bitwise Operators \u2014 w3resource\n\ud83d\udcdc Bitwise Operators in Javascript \u2014 Joe Cha\n\ud83d\udcdc A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript \u2014 Paul Brown\n\ud83d\udcdc How can I understand Bitwise operation in JavaScript?\n\nVideos\n\n\ud83c\udfa5 JavaScript Bitwise Operators \u2014 Programming with Mosh\n\n\u2b06 Back to Top\n\n13. DOM and Layout Trees\nArticles\n\n\ud83d\udcdc How To Understand and Modify the DOM in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc What\u2019s the Document Object Model, and why you should know how to use it \u2014 Leonardo Maldonado\n\ud83d\udcdc JavaScript DOM Tutorial with Example \u2014 Guru99\n\ud83d\udcdc What is the DOM? \u2014 Chris Coyier\n\ud83d\udcdc Traversing the DOM with JavaScript \u2014 Zell Liew\n\ud83d\udcdc Eloquent JavaScript [Book] \u2014 The Document Object Model\n\ud83d\udcdc DOM Tree\n\ud83d\udcdc How to traverse the DOM in Javascript \u2014 Vojislav Gruji\u0107\n\ud83d\udcdc Render Tree Construction \u2014 Ilya Grigorik\n\ud83d\udcdc What exactly is the DOM?\n\ud83d\udcdc A Vanilla JS Guide On Mastering the DOM \u2014 Brian Pak\n\nVideos\n\n\ud83c\udfa5 JavaScript DOM \u2014 The Net Ninja\n\ud83c\udfa5 JavaScript DOM Crash Course \u2014 Traversy Media\n\n\u2b06 Back to Top\n\n14. Factories and Classes\nArticles\n\n\ud83d\udcdc How To Use Classes in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc Javascript Classes \u2014 Under The Hood \u2014 Majid\n\ud83d\udcdc ES6 Classes \u2014 Nathaniel Foster\n\ud83d\udcdc Better JavaScript with ES6, Pt. II: A Deep Dive into Classes \u2015 Peleke Sengstacke\n\ud83d\udcdc Understand the Factory Design Pattern in Plain JavaScript \u2014 Aditya Agarwal\n\ud83d\udcdc Factory Functions in JavaScript \u2014 Josh Miller\n\ud83d\udcdc The Factory Pattern in JS ES6 \u2014 SnstsDev\n\ud83d\udcdc Class vs Factory function: exploring the way forward \u2014 Cristi Salcescu\n\ud83d\udcdc How ES6 classes really work and how to build your own \u2014 Robert Grosse\n\ud83d\udcdc Understanding super in JavaScript\n\ud83d\udcdc An Easy Guide To Understanding Classes In JavaScript\n\nVideos\n\n\ud83c\udfa5 JavaScript Factory Functions \u2014 Programming with Mosh\n\ud83c\udfa5 Factory Functions in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Javascript Tutorial Function Factories \u2014 Crypto Chan\n\n\u2b06 Back to Top\n\n15. this, call, apply and bind\nArticles\n\n\ud83d\udcdc Grokking call(), apply() and bind() methods in JavaScript \u2014 Aniket Kudale\n\ud83d\udcdc How-to: call() , apply() and bind() in JavaScript \u2014 Niladri Sekhar Dutta\n\ud83d\udcdc JavaScript\u2019s Apply, Call, and Bind Methods are Essential for JavaScript Professionals \u2014 Richard Bovell\n\ud83d\udcdc WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript \u2014 Tyler McGinnis\n\ud83d\udcdc Javascript: call(), apply() and bind() \u2014 Omer Goldberg\n\ud83d\udcdc The difference between call \/ apply \/ bind \u2014 Ivan Sifrim\n\ud83d\udcdc What the hack is call, apply, bind in JavaScript \u2014 Ritik\n\ud83d\udcdc Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() \u2014 Michelle Gienow\n\ud83d\udcdc JavaScript\u2019s apply, call, and bind explained by hosting a cookout \u2014 Kevin Kononenko\n\ud83d\udcdc How AND When to use bind, call, and apply in Javascript \u2014 Eigen X\n\ud83d\udcdc JavaScript .bind() vs .apply() and .call() \u2014 Hack Sparrow\n\ud83d\udcdc call() \u2014 MDN\n\ud83d\udcdc bind() \u2014 MDN\n\ud83d\udcdc apply() \u2014 MDN\n\ud83d\udcdc What is 'this' in JavaScript? \u2014 Daniel Li\n\ud83d\udcdc Let me explain to you what is this. (Javascript) \u2014 Jason Yu\n\ud83d\udcdc Understanding the \u201cthis\u201d Keyword in JavaScript \u2014 Pavan\n\ud83d\udcdc How to understand the keyword this and context in JavaScript \u2014 Lukas Gisder-Dub\u00e9\n\ud83d\udcdc What the heck is this in Javascript? \u2014 Hridayesh Sharma\n\ud83d\udcdc This and Bind In Javascript \u2014 Brian Barbour\n\ud83d\udcdc 3 Techniques for Maintaining Your Sanity Using \"This\" in JavaScript \u2014 Carl\n\ud83d\udcdc Mastering the JavaScript \"this\" Keyword \u2014 Aakash Srivastav\n\ud83d\udcdc This binding in JavaScript \u2013 4. New binding \u2014 Spyros Argalias\n\ud83d\udcdc A quick intro to 'this' in JavaScript \u2014 Natalie Smith\n\ud83d\udcdc Explaining JavaScript 'this' to my cat \u2014 Andrey K\n\ud83d\udcdc A conversation with the 'this' keyword in Javascript \u2014 Karen Efereyan\n\ud83d\udcdc What are call(), apply() and bind() in JavaScript \u2014 Amitav Mishra\n\nVideos\n\n\ud83c\udfa5 JavaScript call, apply and bind \u2014 techsith\n\ud83c\udfa5 JavaScript Practical Applications of Call, Apply and Bind functions\u2014 techsith\n\ud83c\udfa5 JavaScript (call, bind, apply) \u2014 curious aatma\n\ud83c\udfa5 Understanding Functions and 'this' In The World of ES2017 \u2014 Bryan Hughes\n\ud83c\udfa5 bind and this - Object Creation in JavaScript - FunFunFunction\n\ud83c\udfa5 JS Function Methods call(), apply(), and bind() \u2014 Steve Griffith\n\n\u2b06 Back to Top\n\n16. new, Constructor, instanceof and Instances\nArticles\n\n\ud83d\udcdc JavaScript For Beginners: the \u2018new\u2019 operator \u2014 Brandon Morelli\n\ud83d\udcdc Let\u2019s demystify JavaScript\u2019s \u2018new\u2019 keyword \u2014 Cynthia Lee\n\ud83d\udcdc Constructor, operator \"new\" \u2014 JavaScript.Info\n\ud83d\udcdc Understanding JavaScript Constructors \u2014 Faraz Kelhini\n\ud83d\udcdc Use Constructor Functions \u2014 Openclassrooms\n\ud83d\udcdc Beyond typeof and instanceof: simplifying dynamic type checks \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc What Is the Instanceof Operator in JavaScript \u2014 appendTo\n\ud83d\udcdc Function and Object, instances of each other \u2014 Kiro Risk\n\n\u2b06 Back to Top\n\n17. Prototype Inheritance and Prototype Chain\nArticles\n\n\ud83d\udcdc Javascript : Prototype vs Class \u2014 Valentin PARSY\n\ud83d\udcdc JavaScript engine fundamentals: optimizing prototypes \u2014 Mathias Bynens\n\ud83d\udcdc JavaScript Prototype \u2014 NC Patro\n\ud83d\udcdc Prototype in Javascript \u2014 Sandeep Ranjan\n\ud83d\udcdc Prototypes in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Prototype in JavaScript: it\u2019s quirky, but here\u2019s how it works \u2014 Pranav Jindal\n\ud83d\udcdc Inheritance and the prototype chain \u2014 MDN\n\ud83d\udcdc Understanding JavaScript: Prototype and Inheritance \u2014 Alexander Kondov\n\ud83d\udcdc Understanding Classes (ES5) and Prototypal Inheritance in JavaScript \u2014 Hridayesh Sharma\n\ud83d\udcdc prototype, proto and Prototypal inheritance in JavaScript \u2014 Varun Dey\n\ud83d\udcdc Prototypal Inheritance \u2014 JavaScript.Info\n\ud83d\udcdc How To Work with Prototypes and Inheritance in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc Master JavaScript Prototypes & Inheritance \u2014 Arnav Aggarwal\n\ud83d\udcdc You Don't Know JS: this & Object Prototypes, 1st Edition [Book] \u2014 Kyle Simpson\n\ud83d\udcdc JavaScript\u2019s Prototypal Inheritance Explained Using CSS \u2014 Nash Vail\n\ud83d\udcdc Prototypal Inheritance in JavaScript \u2014 Jannis Redmann\n\ud83d\udcdc Classical and Prototypical Inheritance in JavaScript \u2014 Danny Cornelisse\n\ud83d\udcdc Demystifying ES6 Classes And Prototypal Inheritance \u2015 Neo Ighodaro\n\ud83d\udcdc Intro To Prototypal Inheritance \u2014 Dharani Jayakanthan\n\ud83d\udcdc Classes in JavaScript - Explained \u2014 Daniel Li\n\ud83d\udcdc Let\u2019s Build Prototypal Inheritance in JS \u2014 var-che\n\ud83d\udcdc Objects, Prototypes and Classes in JavaScript \u2014 Atta\n\ud83d\udcdc JavaScript Prototypal Inheritance and Object Creation \u2014 Nick Shoup\n\ud83d\udcdc The magical world of JavaScript prototypes \u2014 Bel\u00e9n\n\ud83d\udcdc Understanding Prototypal Inheritance In JavaScript \u2014 Lawrence Eagles\n\ud83d\udcdc Objects and Prototypes in JavaScript \u2014 Irena Popova\n\nVideos\n\n\ud83c\udfa5 Javascript Prototype Inheritance \u2014 Avelx\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained pt. I \u2014 techsith\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained pt. II \u2014 techsith\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained \u2014 Kyle Robinson\n\ud83c\udfa5 Advanced Javascript - Prototypal Inheritance In 1 Minute\n\ud83c\udfa5 An Overview Of Classical Javascript Classes and Prototypal Inheritance \u2014 Pentacode\n\ud83c\udfa5 Object Oriented JavaScript - Prototype \u2014 The Net Ninja\n\ud83c\udfa5 Prototype in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 JavaScript Using Prototypes \u2014 O'Reilly\n\ud83c\udfa5 A Beginner's Guide to Javascript's Prototype \u2014 Tyler Mcginnis\n\ud83c\udfa5 Prototypes in Javascript - p5.js Tutorial \u2014 The Coding Train\n\n\u2b06 Back to Top\n\n18. Object.create and Object.assign\nArticles\n\n\ud83d\udcdc Object.create() \u2014 MDN\n\ud83d\udcdc Object.create in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Object.create(): the New Way to Create Objects in JavaScript \u2014 Rob Gravelle\n\ud83d\udcdc Basic Inheritance with Object.create \u2014 Joshua Clanton\n\ud83d\udcdc Object.create() In JavaScript \u2014 GeeksforGeeks\n\ud83d\udcdc Understanding the difference between Object.create() and the new operator \u2014 Jonathan Voxland\n\ud83d\udcdc JavaScript Object Creation: Patterns and Best Practices \u2014 Jeff Mott\n\ud83d\udcdc Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty\n\ud83d\udcdc Copying Objects in JavaScript \u2015 Orinami Olatunji\n\ud83d\udcdc Object.assign() \u2014 MDN\n\ud83d\udcdc JavaScript: Object.assign() \u2014 Thiago S. Adriano\n\ud83d\udcdc How to deep clone a JavaScript Object \u2014 Flavio Copes\n\ud83d\udcdc Object Assignment vs. Primitive Assignment in JavaScript for Beginners \u2014 Nick Scialli\n\ud83d\udcdc Object.create(): When and Why to Use \u2014 VZing\n\nVideos\n\n\ud83c\udfa5 Object.assign() explained \u2014 Aaron Writes Code\n\ud83c\udfa5 Object.assign() Method \u2014 techsith\n\n\u2b06 Back to Top\n\n19. map, reduce, filter\nArticles\n\n\ud83d\udcdc JavaScript Functional Programming \u2014 map, filter and reduce \u2014 Bojan Gvozderac\n\ud83d\udcdc Learn map, filter and reduce in Javascript \u2014 Jo\u00e3o Miguel Cunha\n\ud83d\udcdc JavaScript\u2019s Map, Reduce, and Filter \u2014 Dan Martensen\n\ud83d\udcdc How to Use Map, Filter, & Reduce in JavaScript \u2014 Peleke Sengstacke\n\ud83d\udcdc JavaScript \u2014 Learn to Chain Map, Filter, and Reduce \u2014 Brandon Morelli\n\ud83d\udcdc Javascript data structure with map, reduce, filter and ES6 \u2014 Deepak Gupta\n\ud83d\udcdc Understanding map, filter and reduce in Javascript \u2014 Luuk Gruijs\n\ud83d\udcdc Functional Programming in JS: map, filter, reduce (Pt. 5) \u2014 Omer Goldberg\n\ud83d\udcdc JavaScript: Map, Filter, Reduce \u2014 William S. Vincent\n\ud83d\udcdc Arrow Functions: Fat and Concise Syntax in JavaScript \u2014 Kyle Pennell\n\ud83d\udcdc JavaScript: Arrow Functions for Beginners \u2014 Brandon Morelli\n\ud83d\udcdc When (and why) you should use ES6 arrow functions \u2014 and when you shouldn\u2019t \u2014 Cynthia Lee\n\ud83d\udcdc JavaScript \u2014 Learn & Understand Arrow Functions \u2014 Brandon Morelli\n\ud83d\udcdc (JavaScript )=> Arrow functions \u2014 sigu\n\ud83d\udcdc Javascript.reduce() \u2014 Paul Anderson\n\ud83d\udcdc Why you should replace forEach with map and filter in JavaScript \u2014 Roope Hakulinen\n\ud83d\udcdc Simplify your JavaScript \u2013 Use .map(), .reduce(), and .filter() \u2014 Etienne Talbot\n\ud83d\udcdc JavaScript\u2019s Reduce Method Explained By Going On a Diet \u2014 Kevin Kononenko\n\ud83d\udcdc Difference between map, filter and reduce in JavaScript \u2014 Amirata Khodaparast\n\ud83d\udcdc Map\u21c4Filter\u21c4Reduce\u21bb \u2014 ashay mandwarya\n\ud83d\udcdc Finding Your Way With .map() \u2014 Brandon Wozniewicz\n\ud83d\udcdc How to write your own map, filter and reduce functions in JavaScript \u2014 Hemand Nair\n\ud83d\udcdc How to Manipulate Arrays in JavaScript \u2014 Bolaji Ayodeji\n\ud83d\udcdc How to simplify your codebase with map(), reduce(), and filter() in JavaScript \u2014 Alex Permyakov\n\ud83d\udcdc .map(), .filter(), and .reduce() \u2014 Andy Pickle\n\ud83d\udcdc Map\/Filter\/Reduce Crash Course \u2014 Chris Achard\n\ud83d\udcdc Map, Filter and Reduce \u2013 Animated \u2014 JavaScript Teacher\n\ud83d\udcdc Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard \u2014 Mauro Bono\n\ud83d\udcdc How to Use JavaScript\u2019s .map, .filter, and .reduce \u2014 Avery Duffin\n\ud83d\udcdc Javascript performance test - for vs for each vs (map, reduce, filter, find) \u2014 Deepak Gupta\n\ud83d\udcdc Using .map(), .filter() and .reduce() properly \u2014 Sasanka Kudagoda\n\ud83d\udcdc Mastering the JavaScript Reduce method \u2702\ufe0f \u2014 sanderdebr\n\nVideos\n\n\ud83c\udfa5 Map, Filter and Reduce \u2014 Lydia Hallie\n\ud83c\udfa5 Functional JavaScript: Map, forEach, Reduce, Filter \u2014 Theodore Anderson\n\ud83c\udfa5 JavaScript Array superpowers: Map, Filter, Reduce (part I) \u2014 Michael Rosata\n\ud83c\udfa5 JavaScript Array superpowers: Map, Filter, Reduce (part 2) \u2014 Michael Rosata\n\ud83c\udfa5 JavaScript Higher Order Functions - Filter, Map, Sort & Reduce \u2014 Epicop\n\ud83c\udfa5 [Array Methods 2\/3] .filter + .map + .reduce \u2014 CodeWithNick\n\ud83c\udfa5 Arrow functions in JavaScript - What, Why and How \u2014 Fun Fun Function\n\ud83c\udfa5 Learning Functional Programming with JavaScript \u2014 Anjana Vakil - JSUnconf\n\ud83c\udfa5 Map - Parte 2 JavaScript - Fun Fun Function\n\ud83c\udfa5 Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function\n\ud83c\udfa5 Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function\n\ud83c\udfa5 reduce Array Method | JavaScript Tutorial - Florin Pop\n\ud83c\udfa5 map Array Method | JavaScript Tutorial - Florin Pop\n\n\u2b06 Back to Top\n\n20. Pure Functions, Side Effects and State Mutation\nArticles\n\n\ud83d\udcdc Javascript and Functional Programming \u2014 Pure Functions \u2014 Omer Goldberg\n\ud83d\udcdc Master the JavaScript Interview: What is a Pure Function? \u2014 Eric Elliott\n\ud83d\udcdc JavaScript: What Are Pure Functions And Why Use Them? \u2014 James Jeffery\n\ud83d\udcdc Pure functions in JavaScript \u2014 @nicoespeon\n\ud83d\udcdc Functional Programming: Pure Functions \u2014 Arne Brasseur\n\ud83d\udcdc Pure Functions In Javascript \u2014 Krunal\n\ud83d\udcdc Making your JavaScript Pure \u2014 Jack Franklin\n\ud83d\udcdc To mutate, or not to mutate, in JavaScript\n\ud83d\udcdc Arrays, Objects and Mutations \u2014 Federico Kn\u00fcssel\n\ud83d\udcdc The State of Immutability \u2014 Maciej Sikora\n\ud83d\udcdc How to deal with dirty side effects in your pure functional JavaScript \u2014 James Sinclair\n\ud83d\udcdc Preventing Side Effects in JavaScript \u2014 David Walsh\n\ud83d\udcdc Wielding Pure Functions in JavaScript and Function Composition \u2014 Peleke Sengstacke\n\n\ud83d\udcdc JavaScript: Pure Functions \u2014 William S. Vincent\n\ud83d\udcdc Functional programming paradigms in modern JavaScript: Pure functions \u2014 Alexander Kondov\n\ud83d\udcdc Understanding Javascript Mutation and Pure Functions \u2014 Chidume Nnamdi\n\ud83d\udcdc Functional-ish JavaScript \u2014 Daniel Brain\n\nVideos\n\n\ud83c\udfa5 Pure Functions \u2014 Hexlet\n\ud83c\udfa5 Pure Functions - Functional Programming in JavaScript \u2014 Paul McBride\n\ud83c\udfa5 JavaScript Pure Functions \u2014 Seth Alexander\n\ud83c\udfa5 JavaScript Pure vs Impure Functions Explained \u2014 Theodore Anderson\n\ud83c\udfa5 Pure Functions - Programa\u00e7\u00e3o Funcional: Parte 1 - Fun Fun Function\n\n\u2b06 Back to Top\n\n21. Closures\nArticles\n\n\ud83d\udcdc Closures \u2014 MDN\n\ud83d\udcdc I never understood JavaScript closures \u2014 Olivier De Meulder\n\ud83d\udcdc Closure \u2014 JavaScript.Info\n\ud83d\udcdc Understand JavaScript Closures With Ease \u2014 Richard Bovell\n\ud83d\udcdc Understanding JavaScript Closures \u2014 Codesmith\n\ud83d\udcdc Understand Closures in JavaScript \u2014 Brandon Morelli\n\ud83d\udcdc A simple guide to help you understand closures in JavaScript \u2014 Prashant Ram\n\ud83d\udcdc Understanding JavaScript Closures: A Practical Approach \u2014 Paul Upendo\n\ud83d\udcdc Understanding JavaScript: Closures \u2014 Alexander Kondov\n\ud83d\udcdc How to use JavaScript closures with confidence \u2014 L\u00e9na Faure\n\ud83d\udcdc JavaScript closures by example \u2014 tyler\n\ud83d\udcdc JavaScript\u200a\u2014\u200aClosures and Scope \u2014 Alex Aitken\n\ud83d\udcdc Discover the power of closures in JavaScript\u200a\u2014\u200aCristi Salcescu\n\ud83d\udcdc Simplified JavaScript: Getting Started with Closures\u200a\u2014\u200aCode Like A Girl\n\ud83d\udcdc The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript\u200a\u2014\u200aTyler McGinnis\n\ud83d\udcdc Getting Closure\u200a\u2014\u200aRealLifeJS\n\ud83d\udcdc Closure, Currying and IIFE in JavaScript\u200a\u2014\u200aRitik\n\ud83d\udcdc Understanding Closures in JavaScript\u200a\u2014\u200aSukhjinder Arora\n\ud83d\udcdc A basic guide to Closures in JavaScript\u200a\u2014\u200aParathan Thiyagalingam\n\ud83d\udcdc Closures: Using Memoization\u200a\u2014\u200aBrian Barbour\n\ud83d\udcdc A Brief Introduction to Closures and Lexical Scoping in JavaScript\u200a\u2014\u200aAshutosh K Singh\n\n\ud83d\udcdc Demystify Closures\u200a\u2014\u200astereobooster\n\ud83d\udcdc Scopes and Closures - JavaScript Concepts\u200a\u2014\u200aAgney Menon\n\ud83d\udcdc Understanding Closures in JavaScript\u200a\u2014\u200aMatt Popovich\n\ud83d\udcdc whatthefuck.is \u00b7 A Closure - Dan Abramov\n\ud83d\udcdc Closures in JavaScript can... - Brandon LeBoeuf\n\nVideos\n\n\ud83c\udfa5 JavaScript The Hard Parts: Closure, Scope & Execution Context - Codesmith\n\ud83c\udfa5 Javascript Closure \u2014 techsith\n\ud83c\udfa5 Closures \u2014 Fun Fun Function\n\ud83c\udfa5 Closures in JavaScript \u2014 techsith\n\ud83c\udfa5 JavaScript Closures 101: What is a closure? \u2014 JavaScript Tutorials\n\ud83c\udfa5 Closures \u2014 freeCodeCamp\n\ud83c\udfa5 JavaScript Closures \u2014 CodeWorkr\n\n\u2b06 Back to Top\n\n22. High Order Functions\nArticles\n\n\ud83d\udcdc Higher-Order Functions \u2014 Eloquent JavaScript [Book]\n\ud83d\udcdc Higher-Order Functions in JavaScript \u2014 M. David Green\n\ud83d\udcdc Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code \u2014 Guido Schmitz\n\ud83d\udcdc First-class and Higher Order Functions: Effective Functional JavaScript \u2014 Hugo Di Francesco\n\ud83d\udcdc Higher Order Functions in JavaScript \u2014 John Hannah\n\ud83d\udcdc Higher-order Functions \u2014 Richard Bovell\n\ud83d\udcdc Higher Order Functions in JavaScript \u2014 Zsolt Nagy\n\ud83d\udcdc Fun With Higher Order Functions In JavaScript \u2014 Derick\n\ud83d\udcdc Just a reminder on how to use high order functions \u2014 Pedro Filho\n\ud83d\udcdc Understanding Higher-Order Functions in JavaScript \u2014 Sukhjinder Arora\n\ud83d\udcdc What is a Higher-Order Function? \u2014 Nick Scialli\n\ud83d\udcdc Higher Order Functions - A pragmatic approach \u2014 emmanuel ikwuoma\n\nVideos\n\n\ud83c\udfa5 JavaScript Higher Order Functions & Arrays \u2014 Traversy Media\n\ud83c\udfa5 Higher Order Functions \u2014 Fun Fun Function\n\ud83c\udfa5 Higher Order Functions in Javascript \u2014 Raja Yogan\n\ud83c\udfa5 Higher Order Iterators in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Higher Order Functions in JavaScript \u2014 The Coding Train\n\ud83c\udfa5 Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith\n\ud83c\udfa5 Part 2: Understanding Why We Need Higher Order Functions - Codesmith\n\n\u2b06 Back to Top\n\n23. Recursion\nArticles\n\n\ud83d\udcdc Recursion in JavaScript \u2014 Kevin Ennis\n\ud83d\udcdc Understanding Recursion in JavaScript \u2014 Zak Frisch\n\ud83d\udcdc Learn and Understand Recursion in JavaScript \u2014 Brandon Morelli\n\ud83d\udcdc Recursion in Functional JavaScript \u2014 M. David Green\n\ud83d\udcdc Programming with JS: Recursion \u2014 Alexander Kondov\n\ud83d\udcdc Anonymous Recursion in JavaScript \u2014 simo\n\ud83d\udcdc Recursion, iteration and tail calls in JS \u2014 loverajoel\n\ud83d\udcdc Understanding Recursion in JavaScript with Confidence \u2014 Jay\n\ud83d\udcdc Intro to Recursion \u2014 Brad Newman\n\ud83d\udcdc Accio Recursion!: Your New Favorite JavaScript Spell \u2014 Leanne Cabey\n\ud83d\udcdc Recursion Explained (with Examples) \u2014 Christina\n\nVideos\n\n\ud83c\udfa5 Recursion In JavaScript \u2014 techsith\n\ud83c\udfa5 Recursion \u2014 Fun Fun Function\n\ud83c\udfa5 Recursion and Recursive Functions \u2014 Hexlet\n\ud83c\udfa5 Recursion: Recursion() \u2014 JS Monthly \u2014 Lucas da Costa\n\ud83c\udfa5 Recursive Function in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 What on Earth is Recursion? \u2014 Computerphile\n\ud83c\udfa5 Javascript Tutorial 34: Introduction To Recursion \u2014 codedamn\n\ud83c\udfa5 Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 \u2014 Anjana Vakil\n\n\u2b06 Back to Top\n\n24. Collections and Generators\nArticles\n\n\ud83d\udcdc ES6 In Depth: Collections \u2014 Jason Orendorff\n\ud83d\udcdc ES6 Collections: Using Map, Set, WeakMap, WeakSet \u2014 Kyle Pennell\n\ud83d\udcdc ES6 WeakMaps, Sets, and WeakSets in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Introduction to Sets in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Introduction to Maps in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Map, Set, WeakMap and WeakSet \u2014 JavaScript.Info\n\ud83d\udcdc Maps in ES6 - A Quick Guide \u2014 Ben Mildren\n\ud83d\udcdc ES6 \u2014 Set vs Array \u2014 What and when? \u2014 Maya Shavin\n\ud83d\udcdc ES6 \u2014 Map vs Object \u2014 What and when? \u2014 Maya Shavin\n\ud83d\udcdc ES6: Working with Sets in JavaScript \u2014 Dead Code Rising\n\ud83d\udcdc Array vs Set vs Map vs Object \u2014 Real-time use cases in Javascript (ES6\/ES7) \u2014 Rajesh Babu\n\ud83d\udcdc How to create an array of unique values in JavaScript using Sets \u2014 Claire Parker-Jones\n\ud83d\udcdc What You Should Know About ES6 Maps \u2014 Just Chris\n\ud83d\udcdc ES6 Maps in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Generator \u2014 MDN web docs\n\ud83d\udcdc What are JavaScript Generators and how to use them \u2014 Vladislav Stepanov\n\ud83d\udcdc Understanding JavaScript Generators With Examples  \u2014 Arfat Salman\n\ud83d\udcdc The Basics of ES6 Generators \u2014 Kyle Simpson\n\ud83d\udcdc Here's everything you'd want to know about ES2015+ generators \u2014 Lucas Chen\n\ud83d\udcdc An Introduction to JavaScript Generators \u2014 Alice Kallaugher\n\nVideos\n\n\ud83c\udfa5 JavaScript ES6 \/ ES2015 Set, Map, WeakSet and WeakMap \u2014 Traversy Media\n\ud83c\udfa5 The Differences between ES6 Maps and Sets \u2014 Steve Griffith\n\ud83c\udfa5 Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators \u2014 LearnCode.academy\n\n\u2b06 Back to Top\n\n25. Promises\nArticles\n\n\ud83d\udcdc Promise \u2014 MDN\n\ud83d\udcdc JavaScript Promises for Dummies \u2015 Jecelyn Yeen\n\ud83d\udcdc Understanding promises in JavaScript \u2014 Gokul N K\n\ud83d\udcdc Master the JavaScript Interview: What is a Promise? \u2014 Eric Elliott\n\ud83d\udcdc An Overview of JavaScript Promises \u2014 Sandeep Panda\n\ud83d\udcdc How to use Promises in JavaScript \u2014 Prashant Ram\n\ud83d\udcdc Implementing Promises In JavaScript \u2014 Maciej Cieslar\n\ud83d\udcdc JavaScript: Promises explained with simple real life analogies \u2014 Shruti Kapoor\n\ud83d\udcdc Promises for Asynchronous Programming \u2014 Exploring JS\n\ud83d\udcdc JavaScript Promises Explained By Gambling At A Casino \u2014 Kevin Kononenko\n\ud83d\udcdc ES6 Promises: Patterns and Anti-Patterns \u2014 Bobby Brennan\n\ud83d\udcdc A Simple Guide to ES6 Promises \u2014 Brandon Morelli\n\ud83d\udcdc The ES6 Promises \u2014 Manoj Singh Negi\n\ud83d\udcdc ES6 Promises in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Playing with Javascript Promises: A Comprehensive Approach \u2014 Rajesh Babu\n\ud83d\udcdc How to Write a JavaScript Promise \u2014 Brandon Wozniewicz\n\ud83d\udcdc A Coding Writer\u2019s Guide: An Introduction To ES6 Promises \u2014 Andrew Ly\n\ud83d\udcdc Asynchronous JavaScript | Callbacks | Closures | Promises \u2014 Full Stack Geek\n\ud83d\udcdc Understanding Promises in JavaScript \u2014 Chris Noring\n\ud83d\udcdc Converting callbacks to promises \u2014 Zell Liew\n\ud83d\udcdc JavaScript Promises: Zero To Hero Plus Cheat Sheet \u2014 Joshua Saunders\n\ud83d\udcdc Promises - JavaScript concepts \u2014 Agney Menon\n\ud83d\udcdc Javascript Promise 101 \u2014 Igor Irianto\n\ud83d\udcdc Simplify JavaScript Promises \u2014 Sunny Singh\n\ud83d\udcdc The Lowdown on Promises \u2014 Aphinya Dechalert\n\ud83d\udcdc JavaScript Visualized: Promises & Async\/Await \u2014 Lydia Hallie\n\ud83d\udcdc Promises in JavaScript \u2014 Peter Klingelhofer\n\ud83d\udcdc Best Practices for ES6 Promises \u2014 Basti Ortiz\n\nVideos\n\n\ud83c\udfa5 Let's Learn ES6 - Promises \u2014 Ryan Christiani\n\ud83c\udfa5 JavaScript ES6 \/ ES2015 Promises \u2014 Traversy Media\n\ud83c\udfa5 Promises \u2014 Fun Fun Function\n\ud83c\udfa5 Error Handling Promises in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Promises Part 1 - Topics of JavaScript\/ES6 \u2014 The Coding Train\n\n\u2b06 Back to Top\n\n26. async\/await\nArticles\n\n\ud83d\udcdc async\/await \u2014 JavaScript.Info\n\ud83d\udcdc Understanding async\/await in Javascript \u2014 Gokul N K\n\ud83d\udcdc Asynchronous Programming \u2014 Eloquent JavaScript\n\ud83d\udcdc Exploring Async\/Await Functions in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Asynchronous Javascript using async\/await \u2014 Joy Warugu\n\ud83d\udcdc Modern Asynchronous JavaScript with async\/await \u2014 Flavio Copes\n\ud83d\udcdc Asynchronous JavaScript: From Callback Hell to Async and Await \u2014 Demir Selmanovic\n\ud83d\udcdc Javascript \u2014 ES8 Introducing async\/await Functions \u2014 Ben Garrison\n\ud83d\udcdc How to escape async\/await hell \u2014 Aditya Agarwal\n\ud83d\udcdc Understanding JavaScript\u2019s async await \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc JavaScript Async\/Await: Serial, Parallel and Complex Flow \u2014 TechBrij\n\ud83d\udcdc Asynchronous Programming \u2014 Exploring JS\n\ud83d\udcdc From JavaScript Promises to Async\/Await: why bother? \u2014 Chris Nwamba\n\ud83d\udcdc Flow Control in Modern JS: Callbacks to Promises to Async\/Await \u2014 Craig Buckler\n\ud83d\udcdc JavaScript: Promises and Why Async\/Await Wins the Battle \u2014 Nick Parsons\n\ud83d\udcdc How To Master Async\/Await With This Real World Example \u2014 Adrian Hajdin\n\ud83d\udcdc How to improve your asynchronous Javascript code with async and await \u2014 Indrek Lasn\n\ud83d\udcdc Making Fetches Easy With Async Await \u2014 Mickey Sheridan\n\ud83d\udcdc 7 Reasons Why JavaScript Async\/Await Is Better Than Plain Promises \u2014 Mostafa Gaafar\n\ud83d\udcdc Asynchronous Operations in JavaScript \u2014 Jscrambler\n\ud83d\udcdc Async\/await: A slight design flaw. \u2014 Joey\n\ud83d\udcdc JavaScript: Promises or async-await \u2014 Gokul N K\n\ud83d\udcdc Async \/ Await: From Zero to Hero \u2014 Zhi Yuan\n\ud83d\udcdc JavaScript Visualized: Promises & Async\/Await \u2014 Lydia Hallie\n\nVideos\n\n\ud83c\udfa5 Async + Await \u2014 Wes Bos\n\ud83c\udfa5 Asynchrony: Under the Hood \u2014 Shelley Vohr\n\ud83c\udfa5 async\/await in JavaScript - What, Why and How \u2014 Fun Fun Function\n\ud83c\udfa5 async\/await Part 1 - Topics of JavaScript\/ES8 \u2014 The Coding Train\n\ud83c\udfa5 async\/await Part 2 - Topics of JavaScript\/ES8 \u2014 The Coding Train\n\ud83c\udfa5 Complete Guide to JS Async & Await ES2017\/ES8 \u2014 Colt Steele\n\n\u2b06 Back to Top\n\n27. Data Structures\nArticles\n\n\ud83d\udcdc Data Structures in JavaScript \u2014 Thon Ly\n\ud83d\udcdc Algorithms and Data Structures in JavaScript \u2014 Oleksii Trekhleb\n\ud83d\udcdc Data Structures: Objects and Arrays \u2015 Chris Nwamba\n\ud83d\udcdc Data structures in JavaScript \u2014 Benoit Vallon\n\ud83d\udcdc Playing with Data Structures in Javascript \u2014 Anish K.\n\ud83d\udcdc The Little Guide of Queue in JavaScript \u2014 Germ\u00e1n Cutraro\n\ud83d\udcdc All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'\n\ud83d\udcdc Collection of classic computer science paradigms in JavaScript\n\ud83d\udcdc All the things you didn't know you wanted to know about data structures\n\ud83d\udcdc JavaScript Data Structures: 40 Part Series \u2014 miku86\n\ud83d\udcdc Data Structures: Understanding Graphs \u2014 Rachel Hawa\n\ud83d\udcdc Data Structures Two Ways: Linked List (Pt 1) \u2014 Freddie Duffield\n\ud83d\udcdc Data Structures Two Ways: Linked List (Pt 2) \u2014 Freddie Duffield\n\ud83d\udcdc Graph Data Structures Explained in JavaScript \u2014 Adrian Mejia\n\nVideos\n\n\ud83c\udfa5 Algorithms in JavaScript \u2014 Seth Koch\n\ud83c\udfa5 Algorithms In Javascript | Ace Your Interview \u2014 Eduonix Learning Solutions\n\ud83c\udfa5 Data Structures and Algorithms in JavaScript \u2014 freeCodeCamp\n\ud83c\udfa5 Learning JavaScript Data Structures and Algorithms: Sorting \u2014 Packt Video\n\n\u2b06 Back to Top\n\n28. Expensive Operation and Big O Notation\nArticles\n\n\ud83d\udcdc Big O Notation in Javascript \u2014 C\u00e9sar Ant\u00f3n Dorantes\n\ud83d\udcdc Time Complexity\/Big O Notation \u2014 Tim Roberts\n\ud83d\udcdc Big O in JavaScript \u2014 Gabriela Medina\n\ud83d\udcdc Big O Search Algorithms in JavaScript \u2014 Bradley Braithwaite\n\ud83d\udcdc Time Complexity Analysis in JavaScript \u2014 Jennifer Bland\n\ud83d\udcdc Algorithms in plain English: time complexity and Big-O Notation \u2014 Michael Olorunnisola\n\ud83d\udcdc An Introduction to Big O Notation \u2014 Joseph Trettevik\n\nVideos\n\n\ud83c\udfa5 JavaScript: Intro to Big O Notation and Function Runtime \u2014 Eric Traub\n\ud83c\udfa5 Essential Big O for JavaScript Developers \u2014 Dave Smith\n\ud83c\udfa5 Big O Notation - Time Complexity Analysis \u2014 WebTunings\n\n\u2b06 Back to Top\n\n29. Algorithms\nArticles\n\n\ud83d\udcdc Data Structures and Algorithms using ES6\n\ud83d\udcdc Algorithms and data structures implemented in JavaScript with explanations and links to further readings\n\ud83d\udcdc JS: Interview Algorithm\n\ud83d\udcdc Algorithms in JavaScript \u2014 Thon Ly\n\ud83d\udcdc JavaScript Objects, Square Brackets and Algorithms \u2014 Dmitri Grabov\n\ud83d\udcdc Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript\n\ud83d\udcdc Data Structures and Algorithms library in JavaScript\n\ud83d\udcdc Collection of computer science algorithms and data structures written in JavaScript\n\ud83d\udcdc Algorithms and Data Structures in JavaScript \u2014 Oleksii Trekhleb\n\n\u2b06 Back to Top\n\n30. Inheritance, Polymorphism and Code Reuse\nArticles\n\n\ud83d\udcdc Class inheritance, super \u2014 JavaScript.Info\n\ud83d\udcdc Inheritance in JavaScript \u2014 MDN\n\ud83d\udcdc Inheritance in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Simple Inheritance with JavaScript \u2014 David Catuhe\n\ud83d\udcdc JavaScript \u2014 Inheritance, delegation patterns and Object linking \u2014 NC Patro\n\ud83d\udcdc Object Oriented JavaScript: Polymorphism with examples \u2014 Knoldus Blogs\n\ud83d\udcdc Program Like Proteus \u2014 A beginner\u2019s guide to polymorphism in Javascript \u2014 Sam Galson\n\ud83d\udcdc Object-oriented JavaScript: A Deep Dive into ES6 Classes \u2014 Jeff Mott\n\nVideos\n\n\ud83c\udfa5 Inheritance in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 JavaScript ES6 Classes and Inheritance \u2014 Traversy Media\n\ud83c\udfa5 Polymorphism in JavaScript \u2014 kudvenkat\n\n\u2b06 Back to Top\n\n31. Design Patterns\nArticles\n\n\ud83d\udcdc 4 JavaScript Design Patterns You Should Know \u2014 Devan Patel\n\ud83d\udcdc JavaScript Design Patterns \u2013 Beginner's Guide to Mobile Web Development \u2014 Soumyajit Pathak\n\ud83d\udcdc JavaScript Design Patterns \u2014 Akash Pal\n\ud83d\udcdc Javascript Design Patterns: What They Are & How To Use Them \u2014 Patrick Simpson\n\ud83d\udcdc JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora\n\ud83d\udcdc All the 23 (GoF) design patterns implemented in Javascript \u2014 Felipe Beline\n\ud83d\udcdc The Power of the Module Pattern in JavaScript \u2014 jsmanifest\n\ud83d\udcdc Learning JavaScript Design Patterns \u2014 Addy Osmani \n\ud83d\udcdc Design Patterns for Developers using JavaScript pt. I \u2014 Oliver Mensah\n\ud83d\udcdc Design Patterns for Developers using JavaScript pt. II \u2014 Oliver Mensah\n\ud83d\udcdc Design patterns in modern JavaScript development\n\ud83d\udcdc Understanding Design Patterns: Iterator using Dev.to and Medium social networks! \u2014 Carlos Caballero\n\ud83d\udcdc JavaScript Design Patterns - Factory Pattern \u2014 KristijanFi\u0161trek\n\ud83d\udcdc JavaScript Design Pattern \u2014 Module Pattern - Factory Pattern \u2014 Moon\n\ud83d\udcdc Design Patterns: Null Object - Carlos Caballero\n\ud83d\udcdc Strategy Pattern - Francesco Ciulla\n\ud83d\udcdc Adapter Pattern - Francesco Ciulla\n\ud83d\udcdc The Power of Composite Pattern in JavaScript - jsmanifest\n\ud83d\udcdc In Defense of Defensive Programming - Adam Nathaniel Davis\n\nVideos\n\n\ud83c\udfa5 JavaScript Design Patterns \u2014 Udacity\n\ud83c\udfa5 JavaScript Patterns for 2017 \u2014 Scott Allen\n\n\u2b06 Back to Top\n\n32. Partial Applications, Currying, Compose and Pipe\nArticles\n\n\ud83d\udcdc Use function composition in JavaScript \u2014 R\u00e9mi\n\ud83d\udcdc Currying in JavaScript ES6 \u2014 Adam Bene\n\ud83d\udcdc Composition and Currying Elegance in JavaScript \u2014 Pragyan Das\n\ud83d\udcdc Functional JavaScript: Function Composition For Every Day Use \u2014 Joel Thoms\n\ud83d\udcdc Functional Composition: compose() and pipe() \u2014 Anton Paras\n\ud83d\udcdc Why The Hipsters Compose Everything: Functional Composing In JavaScript \u2014 A. Sharif\n\ud83d\udcdc A Gentle Introduction to Functional JavaScript pt III: Functions for making functions \u2014 James Sinclair\n\ud83d\udcdc Curry And Compose (why you should be using something like ramda in your code) \u2014 jsanchesleao\n\ud83d\udcdc Function Composition in JavaScript with Pipe \u2014 Andy Van Slaars\n\ud83d\udcdc Practical Functional JavaScript with Ramda \u2014 Andrew D'Amelio, Yuri Takhteyev\n\ud83d\udcdc The beauty in Partial Application, Currying, and Function Composition \u2014 Joel Thoms\n\ud83d\udcdc Curry or Partial Application? \u2014 Eric Elliott\n\ud83d\udcdc Partial Application in JavaScript \u2014 Ben Alman\n\ud83d\udcdc Partial Application of Functions \u2014 Functional Reactive Ninja\n\ud83d\udcdc Currying vs Partial Application \u2014 Deepak Gupta\n\ud83d\udcdc Partial Application in ECMAScript 2015 \u2014 Ragan Wald\n\ud83d\udcdc Functional Composition in Javascript \u2014 Joe Cortopassi\n\ud83d\udcdc So You Want to be a Functional Programmer pt. I \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. II \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. III \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. IV \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. V \u2014 Charles Scalfani\n\ud83d\udcdc Functional-Light JavaScript Chapter 3: Managing Function Inputs \u2014 Kyle Simpson\n\ud83d\udcdc An introduction to the basic principles of Functional Programming \u2014 TK\n\ud83d\udcdc Concepts of Functional Programming in Javascript \u2014 TK\n\ud83d\udcdc An Introduction to Functional Programming Style in JavaScript \u2014 JavaScript Teacher\n\ud83d\udcdc A practical guide to writing more functional JavaScript \u2014 Nadeesha Cabral\n\ud83d\udcdc A simple explanation of functional pipe in JavaScript \u2014 Ben Lesh\n\nVideos\n\n\ud83c\udfa5 Compose vs Pipe: Functional Programming in JavaScript \u2014 Chyld Studios\n\ud83c\udfa5 JavaScript Functional Programing: Compose \u2014 Theodore Anderson\n\ud83c\udfa5 Function Composition - Functional JavaScript \u2014 NWCalvank\n\ud83c\udfa5 JavaScript Function Composition Explained \u2014 Theodore Anderson\n\ud83c\udfa5 Let's code with function composition \u2014 Fun Fun Function\n\ud83c\udfa5 Partial Application vs. Currying \u2014 NWCalvank\n\ud83c\udfa5 JavaScript Partial Application \u2014 Theodore Anderson\n\n\u2b06 Back to Top\n\n33. Clean Code\nArticles\n\n\ud83d\udcdc Clean Code concepts adapted for JavaScript \u2014 Ryan McDermott\n\ud83d\udcdc JavaScript Clean Coding Best Practices \u2014 Andr\u00e1s T\u00f3th\n\ud83d\udcdc Function parameters in JavaScript Clean Code \u2014 Kevin Peters\n\ud83d\udcdc Keeping your code clean \u2014 Samuel James\n\ud83d\udcdc Best Practices for Using Modern JavaScript Syntax \u2014 M. David Green\n\ud83d\udcdc best practices for cross node\/web development - Jimmy W\u00e4rting\n\ud83d\udcdc Writing Clean Code - Dylan Paulus\n\ud83d\udcdc Writing Clean Code and The Practice of Programming - Nityesh Agarwal\n\ud83d\udcdc Clean code, dirty code, human code - Daniel Irvine\n\ud83d\udcdc Practical Ways to Write Better JavaScript - Ryland G\n\nVideos\n\n\ud83c\udfa5 JavaScript Pro Tips - Code This, NOT That\n\ud83c\udfa5 Clean Code: Functions(Part 1) - Beau teaches\n\n\u2b06 Back to Top\n","56":"\n\n\n\n\n\n\nP(rocess) M(anager) 2\nRuntime Edition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\nStarting an application in production mode is as easy as:\n$ pm2 start app.js\nPM2 is constantly assailed by more than 1800 tests.\nOfficial website: https:\/\/pm2.keymetrics.io\/\nWorks on Linux (stable) & macOS (stable) & Windows (stable). All Node.js versions are supported starting Node.js 8.X.\nInstalling PM2\nWith NPM:\n$ npm install pm2 -g\nOr if you don't have Node.js installed:\nwget -qO- https:\/\/getpm2.com\/install.sh | bash\nStart an application\nYou can start any application (Node.js, Python, Ruby, binaries in $PATH...) like that:\n$ pm2 start app.js\nYour app is now daemonized, monitored and kept alive forever.\nManaging Applications\nOnce applications are started you can manage them easily:\n\nTo list all running applications:\n$ pm2 list\nManaging apps is straightforward:\n$ pm2 stop     <app_name|namespace|id|'all'|json_conf>\n$ pm2 restart  <app_name|namespace|id|'all'|json_conf>\n$ pm2 delete   <app_name|namespace|id|'all'|json_conf>\nTo have more details on a specific application:\n$ pm2 describe <id|app_name>\nTo monitor logs, custom metrics, application information:\n$ pm2 monit\nMore about Process Management\nCluster Mode: Node.js Load Balancing & Zero Downtime Reload\nThe Cluster mode is a special mode when starting a Node.js application, it starts multiple processes and load-balance HTTP\/TCP\/UDP queries between them. This increase overall performance (by a factor of x10 on 16 cores machines) and reliability (faster socket re-balancing in case of unhandled errors).\nStarting a Node.js application in cluster mode that will leverage all CPUs available:\n$ pm2 start api.js -i <processes>\n<processes> can be 'max', -1 (all cpu minus 1) or a specified number of instances to start.\nZero Downtime Reload\nHot Reload allows to update an application without any downtime:\n$ pm2 reload all\nSeamlessly supported by all major Node.js frameworks and any Node.js applications without any code change:\n\nMore informations about how PM2 make clustering easy\nContainer Support\nWith the drop-in replacement command for node, called pm2-runtime, run your Node.js application in a hardened production environment.\nUsing it is seamless:\nRUN npm install pm2 -g\nCMD [ \"pm2-runtime\", \"npm\", \"--\", \"start\" ]\n\nRead More about the dedicated integration\nTerminal Based Monitoring\n\nMonitor all processes launched straight from the command line:\n$ pm2 monit\nLog Management\nTo consult logs just type the command:\n$ pm2 logs\nStandard, Raw, JSON and formated output are available.\nExamples:\n$ pm2 logs APP-NAME       # Display APP-NAME logs\n$ pm2 logs --json         # JSON output\n$ pm2 logs --format       # Formated output\n\n$ pm2 flush               # Flush all logs\n$ pm2 reloadLogs          # Reload all logs\nMore about log management\nStartup Scripts Generation\nPM2 can generates and configure a Startup Script to keep PM2 and your processes alive at every server restart.\nInit Systems Supported: systemd, upstart, launchd, rc.d\n# Generate Startup Script\n$ pm2 startup\n\n# Freeze your process list across server restart\n$ pm2 save\n\n# Remove Startup Script\n$ pm2 unstartup\nMore about Startup Scripts Generation\nPM2 Modules\nPM2 embeds a simple and powerful module system. Installing a module is straightforward:\n$ pm2 install <module_name>\nHere are some PM2 compatible modules (standalone Node.js applications managed by PM2):\npm2-logrotate automatically rotate logs and limit logs size\npm2-server-monit monitor the current server with more than 20+ metrics and 8 actions\nUpdating PM2\n# Install latest PM2 version\n$ npm install pm2@latest -g\n# Save process list, exit old PM2 & restore all processes\n$ pm2 update\nPM2 updates are seamless\nPM2+ Monitoring\nIf you manage your apps with PM2, PM2+ makes it easy to monitor and manage apps across servers.\n\nFeel free to try it:\nDiscover the monitoring dashboard for PM2\nThanks in advance and we hope that you like PM2!\nCHANGELOG\nCHANGELOG\nContributors\nContributors\nLicense\nPM2 is made available under the terms of the GNU Affero General Public License 3.0 (AGPL 3.0).\nFor other licenses contact us.\n","57":"PDF.js \nPDF.js is a Portable Document Format (PDF) viewer that is built with HTML5.\nPDF.js is community-driven and supported by Mozilla. Our goal is to\ncreate a general-purpose, web standards-based platform for parsing and\nrendering PDFs.\nContributing\nPDF.js is an open source project and always looking for more contributors. To\nget involved, visit:\n\nIssue Reporting Guide\nCode Contribution Guide\nFrequently Asked Questions\nGood Beginner Bugs\nProjects\n\nFeel free to stop by our Matrix room for questions or guidance.\nGetting Started\nOnline demo\nPlease note that the \"Modern browsers\" version assumes native support for\nfeatures such as e.g. async\/await, and ReadableStream.\n\n\nModern browsers: https:\/\/mozilla.github.io\/pdf.js\/web\/viewer.html\n\n\nOlder browsers: https:\/\/mozilla.github.io\/pdf.js\/es5\/web\/viewer.html\n\n\nBrowser Extensions\nFirefox\nPDF.js is built into version 19+ of Firefox.\nChrome\n\nThe official extension for Chrome can be installed from the Chrome Web Store.\nThis extension is maintained by @Rob--W.\nBuild Your Own - Get the code as explained below and issue gulp chromium. Then open\nChrome, go to Tools > Extension and load the (unpackaged) extension from the\ndirectory build\/chromium.\n\nGetting the Code\nTo get a local copy of the current code, clone it using git:\n$ git clone https:\/\/github.com\/mozilla\/pdf.js.git\n$ cd pdf.js\n\nNext, install Node.js via the official package or via\nnvm. You need to install the gulp package\nglobally (see also gulp's getting started):\n$ npm install -g gulp-cli\n\nIf everything worked out, install all dependencies for PDF.js:\n$ npm install\n\nFinally, you need to start a local web server as some browsers do not allow opening\nPDF files using a file:\/\/ URL. Run:\n$ gulp server\n\nand then you can open:\n\nhttp:\/\/localhost:8888\/web\/viewer.html\n\nPlease keep in mind that this requires an ES6 compatible browser; refer to Building PDF.js for usage with older browsers.\nIt is also possible to view all test PDF files on the right side by opening:\n\nhttp:\/\/localhost:8888\/test\/pdfs\/?frame\n\nBuilding PDF.js\nIn order to bundle all src\/ files into two production scripts and build the generic\nviewer, run:\n$ gulp generic\n\nThis will generate pdf.js and pdf.worker.js in the build\/generic\/build\/ directory.\nBoth scripts are needed but only pdf.js needs to be included since pdf.worker.js will\nbe loaded by pdf.js. The PDF.js files are large and should be minified for production.\nUsing PDF.js in a web application\nTo use PDF.js in a web application you can choose to use a pre-built version of the library\nor to build it from source. We supply pre-built versions for usage with NPM and Bower under\nthe pdfjs-dist name. For more information and examples please refer to the\nwiki page on this subject.\nIncluding via a CDN\nPDF.js is hosted on several free CDNs:\n\nhttps:\/\/www.jsdelivr.com\/package\/npm\/pdfjs-dist\nhttps:\/\/cdnjs.com\/libraries\/pdf.js\nhttps:\/\/unpkg.com\/pdfjs-dist\/\n\nLearning\nYou can play with the PDF.js API directly from your browser using the live demos below:\n\nInteractive examples\n\nMore examples can be found in the examples folder. Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via gulp dist-install command.\nFor an introduction to the PDF.js code, check out the presentation by our\ncontributor Julian Viereck:\n\nhttps:\/\/www.youtube.com\/watch?v=Iv15UY-4Fg8\n\nMore learning resources can be found at:\n\nhttps:\/\/github.com\/mozilla\/pdf.js\/wiki\/Additional-Learning-Resources\n\nThe API documentation can be found at:\n\nhttps:\/\/mozilla.github.io\/pdf.js\/api\/\n\nQuestions\nCheck out our FAQs and get answers to common questions:\n\nhttps:\/\/github.com\/mozilla\/pdf.js\/wiki\/Frequently-Asked-Questions\n\nTalk to us on Matrix:\n\nhttps:\/\/chat.mozilla.org\/#\/room\/#pdfjs:mozilla.org\n\nFile an issue:\n\nhttps:\/\/github.com\/mozilla\/pdf.js\/issues\/new\n\nFollow us on twitter: @pdfjs\n\nhttps:\/\/twitter.com\/pdfjs\n\n","58":"mermaid     \n\n\ud83c\udfc6 Mermaid was nominated and won the JS Open Source Awards (2019) in the category \"The most exciting use of technology\"!!!\nThanks to all involved, people committing pull requests, people answering questions and special thanks to Tyler Long who is helping me maintain the project \ud83d\ude4f\nAbout\nMermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams.  The main purpose of Mermaid is to help documentation catch up with development.\n\nDoc-Rot is a Catch-22 that Mermaid helps to solve.\n\nDiagramming and documentation costs precious developer time and gets outdated quickly.\nBut not having diagrams or docs ruins productivity and hurts organizational learning. \nMermaid addresses this problem by cutting the time, effort and tooling that is required to create modifiable diagrams and charts, for smarter and more reusable content.\nThe text definitions for Mermaid diagrams allows for it to be updated easily, it can also be made part of production scripts (and other pieces of code).\nSo less time needs be spent on documenting, as a separate and laborious task. \nEven non-programmers can create diagrams through the Mermaid Live Editor.\nTutorials has video tutorials.\nUse Mermaid with your favorite applications, check out the list of Integrations and Usages of Mermaid.\nFor a more detailed introduction to Mermaid and some of its more basic uses, look to the Beginner's Guide and Usage.\n\ud83c\udf10 CDN | \ud83d\udcd6 Documentation | \ud83d\ude4c Contribution | \ud83d\udcdc Changelog\nExamples\nThe following are some examples of the diagrams, charts and graphs that can be made using Mermaid and the Markdown-inspired text specific to it. Click here jump into the text syntax.\n\n\nFlow\n    [docs - live editor]\n\n\ngraph TD\nA[Hard] -->|Text| B(Round)\nB --> C{Decision}\nC -->|One| D[Result 1]\nC -->|Two| E[Result 2]\n    \n\n\n\n\n\nSequence\n    [docs - live editor]\n\n\nsequenceDiagram\nAlice->>John: Hello John, how are you?\nloop Healthcheck\n    John->>John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn-->>Alice: Great!\nJohn->>Bob: How about you?\nBob-->>John: Jolly good!\n    \n\n\n\n\n\nGantt\n    [docs - live editor]\n\n\ngantt\nsection Section\nCompleted :done,    des1, 2014-01-06,2014-01-08\nActive        :active,  des2, 2014-01-07, 3d\nParallel 1   :         des3, after des1, 1d\nParallel 2   :         des4, after des1, 1d\nParallel 3   :         des5, after des3, 1d\nParallel 4   :         des6, after des4, 1d\n    \n\n\n\n\n\nClass\n    [docs - live editor]\n\n\nclassDiagram\nClass01 <|-- AveryLongClass : Cool\n<<interface>> Class01\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nclass Class10 {\n  <<service>>\n  int id\n  size()\n}\n\n\n\n\n\n\nState\n    [docs - live editor]\n\n\nstateDiagram-v2\n[*] --> Still\nStill --> [*]\nStill --> Moving\nMoving --> Still\nMoving --> Crash\nCrash --> [*]\n\n\n\n\n\n\nPie\n    [docs - live editor]\n\n\npie\n\"Dogs\" : 386\n\"Cats\" : 85\n\"Rats\" : 15\n\n\n\n\n\n\nGit\n    [experimental - live editor]\n\n\nComing soon!\n\n\nUser Journey\n    [docs - live editor]\n\n\n\n  journey\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 3: Me\n\n\n\n\n\n\nRelated projects\n\nCommand Line Interface\nLive Editor\nHTTP Server\n\nContributors   \nMermaid is a growing community and is always accepting new contributors. There's a lot of different ways to help out and we're always looking for extra hands! Look at this issue if you want to know where to start helping out.\nDetailed information about how to contribute can be found in the contribution guide\nAppreciation\nA quick note from Knut Sveidqvist:\n\nMany thanks to the d3 and dagre-d3 projects for providing the graphical layout and drawing libraries!\nThanks also to the js-sequence-diagram project for usage of the grammar for the sequence diagrams. Thanks to Jessica Peter for inspiration and starting point for gantt rendering.\nThank you to Tyler Long who has been a collaborator since April 2017.\nThank you to the ever-growing list of contributors that brought the project this far!\n\n\nMermaid was created by Knut Sveidqvist for easier documentation.\n","59":"Algorithm Visualizer\n\nAlgorithm Visualizer is an interactive online platform that visualizes algorithms from code.\n\n\n\nLearning an algorithm gets much easier with visualizing it. Don't get what we mean? Check it out:\nalgorithm-visualizer.org\nContributing\nWe have multiple repositories under the hood that comprise the website. Take a look at the contributing guidelines in the repository you want to contribute to.\n\n\nalgorithm-visualizer is a web app written in React. It contains UI components and interprets commands into visualizations. Check out the contributing guidelines.\n\n\nserver serves the web app and provides APIs that it needs on the fly. (e.g., GitHub sign in, compiling\/running code, etc.)\n\n\nalgorithms contains visualizations of algorithms shown on the side menu of the website.\n\n\ntracers.* are visualization libraries written in each supported language. They extract visualizing commands from code.\n\n\n","60":"English | \u7b80\u4f53\u4e2d\u6587 | \u65e5\u672c\u8a9e | Portugu\u00eas Brasileiro | \ud55c\uad6d\uc5b4 | Espa\u00f1ol (Espa\u00f1a) | \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n\nFast 2kB alternative to Moment.js with the same modern API\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API. If you use Moment.js, you already know how to use Day.js.\n\ndayjs().startOf('month').add(1, 'day').set('year', 2018).format('YYYY-MM-DD HH:mm:ss');\n\n\ud83d\udd52 Familiar Moment.js API & patterns\n\ud83d\udcaa Immutable\n\ud83d\udd25 Chainable\n\ud83c\udf10 I18n support\n\ud83d\udce6 2kb mini library\n\ud83d\udc6b All browsers supported\n\n\nGetting Started\nDocumentation\nYou can find for more details, API, and other docs on day.js.org website.\nInstallation\nnpm install dayjs --save\n\ud83d\udcdaInstallation Guide\nAPI\nIt's easy to use Day.js APIs to parse, validate, manipulate, and display dates and times.\ndayjs('2018-08-08') \/\/ parse\n\ndayjs().format('{YYYY} MM-DDTHH:mm:ss SSS [Z] A') \/\/ display\n\ndayjs().set('month', 3).month() \/\/ get & set\n\ndayjs().add(1, 'year') \/\/ manipulate\n\ndayjs().isBefore(dayjs()) \/\/ query\n\ud83d\udcdaAPI Reference\nI18n\nDay.js has great support for internationalization.\nBut none of them will be included in your build unless you use it.\nimport 'dayjs\/locale\/es' \/\/ load on demand\n\ndayjs.locale('es') \/\/ use Spanish locale globally\n\ndayjs('2018-05-05').locale('zh-cn').format() \/\/ use Chinese Simplified locale in a specific instance\n\ud83d\udcdaInternationalization\nPlugin\nA plugin is an independent module that can be added to Day.js to extend functionality or add new features.\nimport advancedFormat from 'dayjs\/plugin\/advancedFormat' \/\/ load on demand\n\ndayjs.extend(advancedFormat) \/\/ use plugin\n\ndayjs().format('Q Do k kk X x') \/\/ more available formats\n\ud83d\udcdaPlugin List\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\nContributors\nThis project exists thanks to all the people who contribute.\nPlease give us a \ud83d\udc96 star \ud83d\udc96 to support us. Thank you.\nAnd thank you to all our backers! \ud83d\ude4f\n\n\n\n\n\nLicense\nDay.js is licensed under a MIT License.\n","61":"Welcome to Brackets! \nBrackets is a modern open-source code editor for HTML, CSS\nand JavaScript that's built in HTML, CSS and JavaScript.\nWhat makes Brackets different from other web code editors?\n\nTools shouldn't get in your way. Instead of cluttering up your coding\nenvironment with lots of panels and icons, the Quick Edit UI in Brackets puts\ncontext-specific code and tools inline.\nBrackets is in sync with your browser. With Live Preview, Brackets\nworks directly with your browser to push code edits instantly and jump\nback and forth between your real source code and the browser view.\nDo it yourself. Because Brackets is open source, and built with HTML, CSS\nand JavaScript, you can help build the best code editor for the web.\n\nBrackets may have reached version 1, but we're not stopping there. We have many feature ideas on our\ntrello board that we're anxious to add and other\ninnovative web development workflows that we're planning to build into Brackets.\nSo take Brackets out for a spin and let us know how we can make it your favorite editor.\nYou can see some\nscreenshots of Brackets\non the wiki, intro videos on YouTube, and news on the Brackets blog.\nHow to install and run Brackets\nDownload\nInstallers for the latest stable build for Mac, Windows and Linux (Debian\/Ubuntu) can be downloaded here.\nUsage\nBy default, Brackets opens a folder containing some simple \"Getting Started\" content.\nYou can choose a different folder to edit using File > Open Folder.\nMost of Brackets should be pretty self-explanatory, but for information on how\nto use its unique features, like Quick Edit and Live Preview, please read\nHow to Use Brackets.\nAlso, see the release notes\nfor a list of new features and known issues in each build.\nIn addition to the core features built into Brackets, there is a large and growing\ncommunity of developers building extensions that add all sorts of useful functionality.\nSee the Brackets Extension Registry\nfor a list of available extensions. For installation instructions,\nsee the extensions wiki page.\nNeed help?\nHaving problems starting Brackets the first time, or not sure how to use Brackets?  Please\nreview Troubleshooting, which helps\nyou to fix common problems and find extra help if needed.\nHelping Brackets\nI found a bug!\nIf you found a repeatable bug, and troubleshooting\ntips didn't help, then be sure to search existing issues first.\nInclude steps to consistently reproduce the problem, actual vs. expected results, screenshots, and your OS and\nBrackets version number. Disable all extensions to verify the issue is a core Brackets bug.\nRead more guidelines for filing good bugs.\nI have a new suggestion, but don't know how to program!\nFor feature requests please first check our Trello board to\nsee if it's already there; you can upvote it if so. If not, feel free to file it as an issue as above; we'll\nmove it to the feature backlog for you.\nI want to help with the code!\nAwesome! There are lots of ways you can help. First read\nCONTRIBUTING.md,\nthen learn how to pull the repo and hack on Brackets.\nThe text editor inside Brackets is based on\nCodeMirror\u2014thanks to Marijn for\ntaking our pull requests, implementing feature requests and fixing bugs! See\nNotes on CodeMirror\nfor info on how we're using CodeMirror.\nAlthough Brackets is built in HTML\/CSS\/JS, it currently runs as a desktop\napplication in a thin native shell, so that it can access your local files.\n(If you just try to open the index.html file in a browser, it won't work yet.)\nThe native shell for Brackets lives in a separate repo,\nadobe\/brackets-shell.\nI want to keep track of how Brackets is doing!\nNot sure you needed the exclamation point there, but we like your enthusiasm.\nWhat's Brackets working on next?\n\nIn our feature backlog, the columns to the right\n(starting from \"Development\") list the features that we're currently working on.\n\"Ready\" shows what we'll be working on next.\nWatch our GitHub activity stream.\nWatch our Waffle Kanban board: Work items in  are next. The entire development process is outlined in the Developer Guide.\n\nContact info\n\nE-mail: admin@brackets.io\nSlack: Brackets on Slack (You can join by sending a mail to admin@brackets.io with the subject line slack registration request specifying the email addresses you would like to register).\nDevelopers mailing list: http:\/\/groups.google.com\/group\/brackets-dev\nTwitter: @brackets\nBlog: http:\/\/blog.brackets.io\/\nIRC: #brackets on freenode\n\n\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\n","62":"\n\n\n\nThe streaming build system\n\n        \nWhat is gulp?\n\nAutomation - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\nPlatform-agnostic - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\nStrong Ecosystem - Use npm modules to do anything you want + over 3000 curated plugins for streaming file transformations.\nSimple - By providing only a minimal API surface, gulp is easy to learn and simple to use.\n\nWhat's new in 4.0?!\n\nThe task system was rewritten from the ground-up, allowing task composition using series() and parallel() methods.\nThe watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system.\nFirst-class support was added for incremental builds using lastRun().\nA symlink() method was exposed to create symlinks instead of copying files.\nBuilt-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!\nTask registration of exported functions - using node or ES exports - is now recommended.\nCustom registries were designed, allowing for shared tasks or augmented functionality.\nStream implementations were improved, allowing for better conditional and phased builds.\n\ngulp for enterprise\nAvailable as part of the Tidelift Subscription\nThe maintainers of gulp and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.\nInstallation\nFollow our Quick Start guide.\nRoadmap\nFind out about all our work-in-progress and outstanding issues at https:\/\/github.com\/orgs\/gulpjs\/projects.\nDocumentation\nCheck out the Getting Started guide and API docs on our website!\nExcuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.\nSample gulpfile.js\nThis file will give you a taste of what gulp does.\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar cleanCSS = require('gulp-clean-css');\nvar del = require('del');\n\nvar paths = {\n  styles: {\n    src: 'src\/styles\/**\/*.less',\n    dest: 'assets\/styles\/'\n  },\n  scripts: {\n    src: 'src\/scripts\/**\/*.js',\n    dest: 'assets\/scripts\/'\n  }\n};\n\n\/* Not all tasks need to use streams, a gulpfile is just another node program\n * and you can use all packages available on npm, but it must return either a\n * Promise, a Stream or take a callback and call it\n *\/\nfunction clean() {\n  \/\/ You can use multiple globbing patterns as you would with `gulp.src`,\n  \/\/ for example if you are using del 2.0 or above, return its promise\n  return del([ 'assets' ]);\n}\n\n\/*\n * Define our tasks using plain functions\n *\/\nfunction styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    \/\/ pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\n\/*\n * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel`\n *\/\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n\/*\n * You can use CommonJS `exports` module notation to declare tasks\n *\/\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\n\/*\n * Define default task that can be called by just running `gulp` from cli\n *\/\nexports.default = build;\nUse latest JavaScript version in your gulpfile\nMost new versions of node support most features that Babel provides, except the import\/export syntax. When only that syntax is desired, rename to gulpfile.esm.js, install the esm module, and skip the Babel portion below.\nNode already supports a lot of ES2015+ features, but to avoid compatibility problems we suggest to install Babel and rename your gulpfile.js to gulpfile.babel.js.\nnpm install --save-dev @babel\/register @babel\/core @babel\/preset-env\nThen create a .babelrc file with the preset configuration.\n{\n  \"presets\": [ \"@babel\/preset-env\" ]\n}\nAnd here's the same sample from above written in ES2015+.\nimport gulp from 'gulp';\nimport less from 'gulp-less';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nconst paths = {\n  styles: {\n    src: 'src\/styles\/**\/*.less',\n    dest: 'assets\/styles\/'\n  },\n  scripts: {\n    src: 'src\/scripts\/**\/*.js',\n    dest: 'assets\/scripts\/'\n  }\n};\n\n\/*\n * For small tasks you can export arrow functions\n *\/\nexport const clean = () => del([ 'assets' ]);\n\n\/*\n * You can also declare named functions and export them as tasks\n *\/\nexport function styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    \/\/ pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nexport function scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n \/*\n  * You could even use `export as` to rename exported tasks\n  *\/\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\nexport { watchFiles as watch };\n\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\n\/*\n * Export a default task\n *\/\nexport default build;\nIncremental Builds\nYou can filter out unchanged files between runs of a task using\nthe gulp.src function's since option and gulp.lastRun:\nconst paths = {\n  ...\n  images: {\n    src: 'src\/images\/**\/*.{jpg,jpeg,png}',\n    dest: 'build\/img\/'\n  }\n}\n\nfunction images() {\n  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\n    .pipe(imagemin())\n    .pipe(gulp.dest(paths.images.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.images.src, images);\n}\nTask run times are saved in memory and are lost when gulp exits. It will only\nsave time during the watch task when running the images task\nfor a second time.\nWant to contribute?\nAnyone can help make this project better - check out our Contributing guide!\nBackers\nSupport us with a monthly donation and help us continue our activities.\n\nSponsors\nBecome a sponsor to get your logo on our README on Github.\n\n","63":"\nHexo\n\nA fast, simple & powerful blog framework, powered by Node.js.\n\nWebsite |\nDocumentation |\nInstallation Guide |\nContribution Guide |\nCode of Conduct |\nAPI |\nTwitter\n\n\n\n\n\n\n\n\n\n\nFeatures\n\nBlazing fast generating\nSupport for GitHub Flavored Markdown and most Octopress plugins\nOne-command deploy to GitHub Pages, Heroku, etc.\nPowerful API for limitless extensibility\nHundreds of themes & plugins\n\nQuick Start\nInstall Hexo\n$ npm install hexo-cli -g\nSetup your blog\n$ hexo init blog\n$ cd blog\nStart the server\n$ hexo server\nCreate a new post\n$ hexo new \"Hello Hexo\"\nGenerate static files\n$ hexo generate\nMore Information\n\nRead the documentation\nVisit the Awesome Hexo list\nFind solutions in troubleshooting\nJoin discussion on Google Group, Discord, Gitter or Telegram\nSee the plugin list and the theme list on wiki\nFollow @hexojs for latest news\n\nContributing\nWe welcome you to join the development of Hexo. Please see contributing document. \ud83e\udd17\nAlso, we welcome PR or issue to official-plugins.\nContributors\n\nBackers\n\nSponsors\n\nLicense\n\n","64":"\n\n\n\n\n\n\nVisual primitives for the component age. Use the best bits of ES6 and CSS to style your apps without stress \ud83d\udc85\n\n\n\n  \n\n\n\n\n\nLooking for v5?\nThe master branch is under development of the upcoming v6 major version of styled-components. For changes targeting v5, please point your PRs at the legacy-v5 branch.\n\nUtilising tagged template literals (a recent addition to JavaScript) and the power of CSS, styled-components allows you to write actual CSS code to style your components. It also removes the mapping between components and styles \u2013 using components as a low-level styling construct could not be easier!\nconst Button = styled.button`\n  color: grey;\n`;\nAlternatively, you may use style objects. This allows for easy porting of CSS from inline styles, while still supporting the more advanced styled-components capabilities like component selectors and media queries.\nconst Button = styled.button({\n  color: 'grey',\n});\nEquivalent to:\nconst Button = styled.button`\n  color: grey;\n`;\nstyled-components is compatible with both React (for web) and React Native \u2013 meaning it's the perfect choice even for truly universal apps! See the documentation about React Native for more information.\nSupported by Front End Center. Thank you for making this possible!\nUpgrading from v4\n\nnpm install styled-components@^5.0.0 react@^16.8 react-dom@^16.8 react-is@^16.8\n??\nProfit!\n\n\nIf you use jest-styled-components, make sure you update that too.\n\nDocs\nSee the documentation at styled-components.com\/docs for more information about using styled-components!\nQuicklinks to some of the most-visited pages:\n\nGetting started\nAPI Reference\nTheming\nServer-side rendering\nTagged Template Literals explained\n\nExample\nimport React from 'react';\n\nimport styled from 'styled-components';\n\n\/\/ Create a <Title> react component that renders an <h1> which is\n\/\/ centered, palevioletred and sized at 1.5em\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n\/\/ Create a <Wrapper> react component that renders a <section> with\n\/\/ some padding and a papayawhip background\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n\n\/\/ Use them like any other React component \u2013 except they're styled!\n<Wrapper>\n  <Title>Hello World, this is my first styled component!<\/Title>\n<\/Wrapper>\nThis is what you'll see in your browser:\n\n\n\n\n\nBabel Macro\nIf you're using tooling that has babel-plugin-macros set up, you can switch to the styled-components\/macro import path instead to gain the effects of the babel plugin without further setup.\nimport styled from 'styled-components\/macro';\n\n\/\/ A static className will be generated for Title (important for SSR)\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\nIf you wish to provide configuration options to the babel plugin similar to how you would in a .babelrc, see this guide. The config name is \"styledComponents\".\nBuilt with styled-components\nA lot of hard work goes into community libraries, projects, and guides. A lot of them make it easier to get started or help you with your next project! There\u2019s also a whole lot of interesting apps and sites that people have built using styled-components.\nMake sure to head over to awesome-styled-components to see them all! And please contribute and add your own work to the list so others can find it.\nContributing\nIf you want to contribute to styled-components please see our contributing and community guidelines, they'll help you get set up locally and explain the whole process.\nPlease also note that all repositories under the styled-components organization follow our Code of Conduct, make sure to review and follow it.\nBadge\nLet everyone know you're using styled-components \u2192 \n[![style: styled-components](https:\/\/img.shields.io\/badge\/style-%F0%9F%92%85%20styled--components-orange.svg?colorB=daa357&colorA=db748e)](https:\/\/github.com\/styled-components\/styled-components)\nContributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nLicense\nLicensed under the MIT License, Copyright \u00a9 2016-present Glen Maddern and Maximilian Stoiber.\nSee LICENSE for more information.\nAcknowledgements\nThis project builds on a long line of earlier work by clever folks all around the world. We'd like to thank Charlie Somerville, Nik Graf, Sunil Pai, Michael Chan, Andrey Popp, Jed Watson & Andrey Sitnik who contributed ideas, code or inspiration.\nSpecial thanks to @okonet for the fantastic logo.\n","65":"\n\n\n\n \u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuild your next Vue.js application with confidence using Nuxt.js: a framework making web development simple and powerful.\n\nLinks\n\n\ud83d\udcd8 Documentation: https:\/\/nuxtjs.org\n\ud83d\udc65 Community: cmty.app\/nuxt\n\ud83c\udfac Video: 1 minute demo\n\ud83d\udc26 Twitter: @nuxt_js\n\ud83d\udcac Chat: Discord\n\ud83c\udf1f AwesomeNuxt\n\ud83d\udc49 Play with Nuxt.js online\n\nFeatures\n\nAutomatic transpilation and bundling (with webpack and babel)\nHot code reloading\nServer-side rendering OR Single Page App OR Static Generated, you choose \ud83d\udd25\nStatic file serving. .\/static\/ is mapped to \/\nConfigurable with a nuxt.config.js file\nCustom layouts with the layouts\/ directory\nMiddleware\nCode splitting for every pages\/\nLoading just the critical CSS (page-level)\n\nLearn more at https:\/\/nuxtjs.org.\nGetting started\n$ npx create-nuxt-app <project-name>\nIt's as simple as that!\nLearn more at https:\/\/nuxtjs.org\/guide\/installation\nExamples\nPlease take a look at https:\/\/nuxtjs.org\/examples or directly in https:\/\/github.com\/nuxt\/nuxt.js\/tree\/dev\/examples.\nProduction deployment\nTo deploy, instead of running nuxt, you probably want to build ahead of time. Therefore, building and starting are separate commands:\nnuxt build\nnuxt start\nLearn more at https:\/\/nuxtjs.org\/guide\/commands#production-deployment\nConsulting from the Nuxt team\nGet help with that tough bug or make sure your Nuxt app is ready to deploy. For $250 an hour, get technical support, advice, code reviews, and development from the Nuxt core team: Hire Nuxt on Otechie\nProfessional support with TideLift\nProfessionally supported Nuxt.js is now available!\nTidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools.\nGet supported Nuxt with the Tidelift Subscription.\nSupporting Nuxt.js\nNuxt.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers.\nFunds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events.\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\nPlatinum Sponsors\n\nGold Sponsors\n\nSilver Sponsors\n\nBronze Sponsors\n\nNuxters\n\nCore team\nS\u00e9bastien Chopin\ud83d\udcdd \ud83d\udc1b \ud83d\udcbb \ud83c\udfa8 \ud83d\udcd6 \ud83d\udcac \ud83d\udc40 \ud83d\udce2Alexandre Chopin\ud83c\udfa8 \ud83d\udcd6 \ud83d\udccb \ud83d\udce6 \ud83d\udcac \ud83d\udce2Pooya Parsa\ud83d\udc1b \ud83d\udcbb \ud83d\udd0c \ud83d\udcac \ud83d\udc40 \ud83d\udd27Clark Du\ud83d\udc1b \ud83d\udcbb \ud83d\udca1 \ud83d\udc40 \u26a0\ufe0f \ud83d\udd27Alexander Lichter\ud83d\udcac \ud83d\udc1b \ud83d\udcbb \ud83d\udca1 \ud83d\udc40 \u26a0\ufe0fJonas Galvez\ud83d\udcac \ud83d\udc1b \ud83d\udcbb \ud83d\udca1 \ud83d\udc40 \u26a0\ufe0fDmitry Molotkov\ud83d\udcac \ud83d\udc1b \ud83d\udcbb \ud83e\udd14 \ud83d\udc40Kevin Marrec\ud83d\udcbb \ud83e\udd14 \ud83d\udce6 \ud83d\udc40Pim\ud83d\udc1b \ud83d\udcbb\nContributors\nThank you to all our contributors!\n\nContributing\n\nPlease refer to our Contribution Guide\nCross-browser testing\nThanks to BrowserStack!\n\nAutomated testing\nThanks to SauceLabs for supporting Open Source <3\n\nSecurity\nIf you discover a security vulnerability regarding Nuxt.js, please send an e-mail to the team via security@nuxtjs.org! All security vulnerabilities will be promptly addressed.\nLicense\nMIT\n","66":"\nHackathon Starter\n   \nLive Demo: https:\/\/hackathon-starter.walcony.com\nJump to What's new?\nA boilerplate for Node.js web applications.\nIf you have attended any hackathons in the past, then you know how much time it takes to\nget a project started: decide on what to build, pick a programming language, pick a web framework,\npick a CSS framework. A while later, you might have an initial project up on GitHub and only then\ncan other team members start contributing. Or how about doing something as simple as Sign in with Facebook\nauthentication? You can spend hours on it if you are not familiar with how OAuth 2.0 works.\nWhen I started this project, my primary focus was on simplicity and ease of use.\nI also tried to make it as generic and reusable as possible to cover most use cases of hackathon web apps,\nwithout being too specific. In the worst case, you can use this as a learning guide for your projects,\nif for example you are only interested in Sign in with Google authentication and nothing else.\nTestimonials\n\n\u201cNice! That README alone is already gold!\u201d\n\u2014 Adrian Le Bas\n\n\n\u201cAwesome. Simply awesome.\u201d\n\u2014 Steven Rueter\n\n\n\u201cI'm using it for a year now and many projects, it's an awesome boilerplate and the project is well maintained!\u201d\n\u2014 Kevin Granger\n\n\n\u201cSmall world with Sahat's project. We were using his hackathon starter for our hackathon this past weekend and got some prizes. Really handy repo!\u201d\n\u2014 Interview candidate for one of the companies I used to work with.\n\nModern Theme\n\nFlatly Bootstrap Theme\n\nAPI Examples\n\nTable of Contents\n\nFeatures\nPrerequisites\nGetting Started\nObtaining API Keys\nProject Structure\nList of Packages\nUseful Tools and Resources\nRecommended Design Resources\nRecommended Node.js Libraries\nRecommended Client-side Libraries\nPro Tips\nFAQ\nHow It Works\nCheatsheets\n\nES6\nJavaScript Date\nMongoose Cheatsheet\n\n\nDeployment\nDocker\nProduction\nChangelog\nContributing\nLicense\n\nFeatures\n\nLocal Authentication using Email and Password\nOAuth 1.0a Authentication via Twitter\nOAuth 2.0 Authentication via Facebook, Google, GitHub, LinkedIn, Instagram\nFlash notifications\nMVC Project Structure\nNode.js clusters support\nSass stylesheets (auto-compiled via middleware)\nBootstrap 4 + Extra Themes\nContact Form (powered by Mailgun, Sendgrid or Mandrill)\nAccount Management\nGravatar\nProfile Details\nChange Password\nForgot Password\nReset Password\nLink multiple OAuth strategies to one account\nDelete Account\nCSRF protection\nAPI Examples: Facebook, Foursquare, Last.fm, Tumblr, Twitter, Stripe, LinkedIn and more.\n\nPrerequisites\n\nMongoDB\nNode.js 10+\nCommand Line Tools\n\u00a0Mac OS X: Xcode (or OS X 10.9+: xcode-select --install)\n\u00a0Windows: Visual Studio OR Visual Studio Code + Windows Subsystem for Linux - Ubuntu\n\u00a0Ubuntu \/ \u00a0Linux Mint: sudo apt-get install build-essential\n\u00a0Fedora: sudo dnf groupinstall \"Development Tools\"\n\u00a0OpenSUSE: sudo zypper install --type pattern devel_basis\n\nNote: If you are new to Node or Express, you may find\nNode.js & Express From Scratch series\nhelpful for learning the basics of Node and Express. Alternatively,\nhere is another great tutorial for complete beginners - Getting Started With Node.js, Express, MongoDB.\nGetting Started\nThe easiest way to get started is to clone the repository:\n# Get the latest snapshot\ngit clone https:\/\/github.com\/sahat\/hackathon-starter.git myproject\n\n# Change directory\ncd myproject\n\n# Install NPM dependencies\nnpm install\n\n# Then simply start your app\nnode app.js\nWarning: If you want to use some API that need https to work (for example Pinterest or facebook),\nyou will need to download ngrok.\nYou must start ngrok after starting the project.\n# start ngrok to intercept the data exchanged on port 8080\n.\/ngrok http 8080\nNext, you must use the https URL defined by ngrok, for example, https:\/\/hackaton.ngrok.io\nNote: I highly recommend installing Nodemon.\nIt watches for any changes in your  node.js app and automatically restarts the\nserver. Once installed, instead of node app.js use nodemon app.js. It will\nsave you a lot of time in the long run, because you won't need to manually\nrestart the server each time you make a small change in code. To install, run\nsudo npm install -g nodemon.\nObtaining API Keys\nTo use any of the included APIs or OAuth authentication methods, you will need\nto obtain appropriate credentials: Client ID, Client Secret, API Key, or\nUsername & Password. You will need to go through each provider to generate new\ncredentials.\n\n\nVisit Google reCAPTCHA Admin Console\nEnter your application's name as the Label\nChose reCAPTCHA v2, \"I'm not a robot\" Checkbox\nEnter localhost as the domain.  You can have other domains added in addition to localhost\nAccept the terms and submit the form\nCopy the Site Key and the Secret key into .env.  These keys will be accessible under Settings, reCAPTCHA keys drop down if you need them again later.\n\n\n\n\nVisit Google Cloud Console\nClick on the Create Project button\nEnter Project Name, then click on Create button\nThen click on APIs & auth in the sidebar and select API tab\nClick on Google+ API under Social APIs, then click Enable API\nClick on Google Drive API under G Suite, then click Enable API\nClick on Google Sheets API under G Suite, then click Enable API\nNext, under APIs & auth in the sidebar click on Credentials tab\nClick on Create new Client ID button\nSelect Web Application and click on Configure Consent Screen\nFill out the required fields then click on Save\nIn the Create Client ID modal dialog:\nApplication Type: Web Application\nAuthorized Javascript origins: http:\/\/localhost:8080\nAuthorized redirect URI: http:\/\/localhost:8080\/auth\/google\/callback\nClick on Create Client ID button\nCopy and paste Client ID and Client secret keys into .env\n\nNote: When you ready to deploy to production don't forget to\nadd your new URL to Authorized Javascript origins and Authorized redirect URI,\ne.g. http:\/\/my-awesome-app.herokuapp.com and\nhttp:\/\/my-awesome-app.herokuapp.com\/auth\/google\/callback respectively.\nThe same goes for other providers.\n\n\n\nVisit Snap Kit Developer Portal\nClick on the + button to create an app\nEnter a name for your app\nEnable the scopes that you will want to use in your app\nClick on the Continue button\nFind the Kits section and make sure that Login Kit is enabled\nFind the Redirect URLs section, click the + Add button, and enter http:\/\/localhost:8080\/auth\/snapchat\/callback\nFind the Development Environment section. Click the Generate button next to the Confidential OAuth2 Client heading within it.\nCopy and paste the generated Private Key and OAuth2 Client ID keys into .env\nNote: OAuth2 Client ID is SNAPCHAT_ID, Private Key is SNAPCHAT_SECRET in .env\nTo prepare the app for submission, fill out the rest of the required fields: Category, Description, Privacy Policy Url, and App Icon\n\nNote: For production use, don't forget to:\n\ngenerate a Confidential OAuth2 Client in the Production Environment and use the production Private Key and OAuth2 Client ID\nadd the production URL to Redirect URLs section, e.g. http:\/\/my-awesome-app.herokuapp.com\/auth\/snapchat\/callback\nsubmit the app for review and wait for approval\n\n\n\n\nVisit Facebook Developers\nClick My Apps, then select *Add a New App from the dropdown menu\nEnter a new name for your app\nClick on the Create App ID button\nFind the Facebook Login Product and click on Facebook Login\nInstead of going through their Quickstart, click on Settings for your app in the top left corner\nCopy and paste App ID and App Secret keys into .env\nNote: App ID is FACEBOOK_ID, App Secret is FACEBOOK_SECRET in .env\nEnter localhost under App Domains\nChoose a Category that best describes your app\nClick on + Add Platform and select Website\nEnter http:\/\/localhost:8080 under Site URL\nClick on the Settings tab in the left nav under Facebook Login\nEnter http:\/\/localhost:8080\/auth\/facebook\/callback under Valid OAuth redirect URIs\n\nNote: After a successful sign in with Facebook, a user will be redirected back to the home page with appended hash #_=_ in the URL. It is not a bug. See this Stack Overflow discussion for ways to handle it.\n\n\n\nGo to Account Settings\nSelect Developer settings from the sidebar\nThen click on OAuth Apps and then on Register new application\nEnter Application Name and Homepage URL\nFor Authorization Callback URL: http:\/\/localhost:8080\/auth\/github\/callback\nClick Register application\nNow copy and paste Client ID and Client Secret keys into .env file\n\n\n\n\nSign in at https:\/\/apps.twitter.com\nClick Create a new application\nEnter your application name, website and description\nFor Callback URL: http:\/\/127.0.0.1:8080\/auth\/twitter\/callback\nGo to Settings tab\nUnder Application Type select Read and Write access\nCheck the box Allow this application to be used to Sign in with Twitter\nClick Update this Twitter's applications settings\nCopy and paste Consumer Key and Consumer Secret keys into .env file\n\n\n\n\nSign in at LinkedIn Developer Network\nFrom the account name dropdown menu select API Keys\nIt may ask you to sign in once again\nClick + Add New Application button\nFill out all the required fields\nOAuth 2.0 Redirect URLs: http:\/\/localhost:8080\/auth\/linkedin\/callback\nJavaScript API Domains: http:\/\/localhost:8080\nFor Default Application Permissions make sure at least the following is checked:\nr_basicprofile\nFinish by clicking Add Application button\nCopy and paste API Key and Secret Key keys into .env file\nAPI Key is your clientID\nSecret Key is your clientSecret\n\n\n\n\nSign up or log into your dashboard\nClick on your profile and click on Account Settings\nThen click on API Keys\nCopy the Secret Key. and add this into .env file\n\n\n\n\nVisit PayPal Developer\nLog in to your PayPal account\nClick Applications > Create App in the navigation bar\nEnter Application Name, then click Create app\nCopy and paste Client ID and Secret keys into .env file\nApp ID is client_id, App Secret is client_secret\nChange host to api.paypal.com if you want to test against production and use the live credentials\n\n\n\n\nGo to Foursquare for Developers\nClick on My Apps in the top menu\nClick the Create A New App button\nEnter App Name, Welcome page url,\nFor Redirect URI: http:\/\/localhost:8080\/auth\/foursquare\/callback\nClick Save Changes\nCopy and paste Client ID and Client Secret keys into .env file\n\n\n\n\nGo to http:\/\/www.tumblr.com\/oauth\/apps\nOnce signed in, click +Register application\nFill in all the details\nFor Default Callback URL: http:\/\/localhost:8080\/auth\/tumblr\/callback\nClick \u2714Register\nCopy and paste OAuth consumer key and OAuth consumer secret keys into .env file\n\n\n\n\nGo to http:\/\/steamcommunity.com\/dev\/apikey\nSign in with your existing Steam account\nEnter your Domain Name, then and click Register\nCopy and paste Key into .env file\n\n\n\n\nVisit the Twitch developer dashboard\nIf prompted, authorize the dashboard to access your twitch account\nIn the Console, click on Register Your Application\nEnter the name of your application\nUse OAuth Redirect URLs enter http:\/\/localhost:8080\/auth\/twitch\/callback\nSet Category to Website Integration and press the Create button\nAfter the applicaiton has been created, click on the Manage button\nCopy and paste Client ID into .env\nIf there is no Client Secret displayed, click on New Secret button and then copy and paste the Client secret into .env\n\n\n\n\nGo to https:\/\/sendgrid.com\/user\/signup\nSign up and confirm your account via the activation email\nThen enter your SendGrid Username and Password into .env file\n\n\n\n\nGo to http:\/\/www.mailgun.com\nSign up and add your Domain Name\nFrom the domain overview, copy and paste the default SMTP Login and Password into .env file\n\n\n\n\nGo to https:\/\/developer.here.com\nSign up and create a Freemium project\nCreate JAVASCRIPT\/REST credentials. Copy and paste the APP_ID and APP into .env file.\nNote that these credentials are available on the client side, and you need to create a domain whitelist for your app credentials when you are publicly launching the app.\n\n\n\n\nGo to https:\/\/www.twilio.com\/try-twilio\nSign up for an account.\nOnce logged into the dashboard, expand the link 'show api credentials'\nCopy your Account Sid and Auth Token\n\n\n\n\nGo to https:\/\/developer.intuit.com\/app\/developer\/qbo\/docs\/get-started\nUse the Sign Up option in the upper right corner of the screen (nav bar) to get a free developer account and a sandbox company.\nCreate a new app by going to your Dashboard using the My Apps option in the top nav bar or by going to https:\/\/developer.intuit.com\/app\/developer\/myapps\nIn your App, under Development, Keys & OAuth (right nav), find the Client ID and Client Secret for your .env file\n\nProject Structure\n\n\n\nName\nDescription\n\n\n\n\nconfig\/passport.js\nPassport Local and OAuth strategies, plus login middleware.\n\n\ncontrollers\/api.js\nController for \/api route and all api examples.\n\n\ncontrollers\/contact.js\nController for contact form.\n\n\ncontrollers\/home.js\nController for home page (index).\n\n\ncontrollers\/user.js\nController for user account management.\n\n\nmodels\/User.js\nMongoose schema and model for User.\n\n\npublic\/\nStatic assets (fonts, css, js, img).\n\n\npublic\/js\/application.js\nSpecify client-side JavaScript dependencies.\n\n\npublic\/js\/main.js\nPlace your client-side JavaScript here.\n\n\npublic\/css\/main.scss\nMain stylesheet for your app.\n\n\npublic\/css\/themes\/default.scss\nSome Bootstrap overrides to make it look prettier.\n\n\nviews\/account\/\nTemplates for login, password reset, signup, profile.\n\n\nviews\/api\/\nTemplates for API Examples.\n\n\nviews\/partials\/flash.pug\nError, info and success flash notifications.\n\n\nviews\/partials\/header.pug\nNavbar partial template.\n\n\nviews\/partials\/footer.pug\nFooter partial template.\n\n\nviews\/layout.pug\nBase template.\n\n\nviews\/home.pug\nHome page template.\n\n\n.dockerignore\nFolder and files ignored by docker usage.\n\n\n.env.example\nYour API keys, tokens, passwords and database URI.\n\n\n.eslintrc\nRules for eslint linter.\n\n\n.gitignore\nFolder and files ignored by git.\n\n\n.travis.yml\nConfiguration files for continuous integration.\n\n\napp.js\nThe main application file.\n\n\ndocker-compose.yml\nDocker compose configuration file.\n\n\nDockerfile\nDocker configuration file.\n\n\npackage.json\nNPM dependencies.\n\n\npackage-lock.json\nContains exact versions of NPM dependencies in package.json.\n\n\n\nNote: There is no preference how you name or structure your views.\nYou could place all your templates in a top-level views directory without\nhaving a nested folder structure, if that makes things easier for you.\nJust don't forget to update extends ..\/layout  and corresponding\nres.render() paths in controllers.\nList of Packages\n\n\n\nPackage\nDescription\n\n\n\n\n@octokit\/rest\nGitHub API library.\n\n\nbcrypt\nLibrary for hashing and salting user passwords.\n\n\nbody-parser\nNode.js body parsing middleware.\n\n\nchai\nBDD\/TDD assertion library.\n\n\nchalk\nTerminal string styling done right.\n\n\ncheerio\nScrape web pages using jQuery-style syntax.\n\n\ncompression\nNode.js compression middleware.\n\n\nconnect-mongo\nMongoDB session store for Express.\n\n\ndotenv\nLoads environment variables from .env file.\n\n\nerrorhandler\nDevelopment-only error handler middleware.\n\n\neslint\nLinter JavaScript.\n\n\neslint-config-airbnb-base\nConfiguration eslint by airbnb.\n\n\neslint-plugin-chai-friendly\nMakes eslint friendly towards Chai.js 'expect' and 'should' statements.\n\n\neslint-plugin-import\nESLint plugin with rules that help validate proper imports.\n\n\nexpress\nNode.js web framework.\n\n\nexpress-flash\nProvides flash messages for Express.\n\n\nexpress-session\nSimple session middleware for Express.\n\n\nexpress-status-monitor\nReports real-time server metrics for Express.\n\n\ninstagram-node\nInstagram API library.\n\n\nlastfm\nLast.fm API library.\n\n\nlob\nLob API library.\n\n\nlodash\nA utility library for working with arrays, numbers, objects, strings.\n\n\nlusca\nCSRF middleware.\n\n\nmailchecker\nVerifies that an email address is valid and not a disposable address.\n\n\nmocha\nTest framework.\n\n\nmoment\nParse, validate, compute dates and times.\n\n\nmongoose\nMongoDB ODM.\n\n\nmorgan\nHTTP request logger middleware for node.js.\n\n\nmulter\nNode.js middleware for handling multipart\/form-data.\n\n\nnode-foursquare\nFoursquare API library.\n\n\nnode-sass\nNode.js bindings to libsass.\n\n\nnode-sass-middleware\nSass middleware compiler.\n\n\nnyc\nCoverage test.\n\n\nnodemailer\nNode.js library for sending emails.\n\n\nnode-quickbooks\nQuickbooks API library.\n\n\npassport\nSimple and elegant authentication library for node.js.\n\n\npassport-facebook\nSign-in with Facebook plugin.\n\n\npassport-github\nSign-in with GitHub plugin.\n\n\npassport-google-oauth\nSign-in with Google plugin.\n\n\npassport-instagram\nSign-in with Instagram plugin.\n\n\npassport-linkedin-oauth2\nSign-in with LinkedIn plugin.\n\n\npassport-local\nSign-in with Username and Password plugin.\n\n\npassport-openid\nSign-in with OpenId plugin.\n\n\npassport-oauth\nAllows you to set up your own OAuth 1.0a and OAuth 2.0 strategies.\n\n\npassport-oauth2-refresh\nA library to refresh OAuth 2.0 access tokens using refresh tokens.\n\n\npassport-snapchat\nSign-in with Snapchat plugin.\n\n\npassport-twitter\nSign-in with Twitter plugin.\n\n\npassport-twitch-new\nSign-in with Twitch plugin.\n\n\npaypal-rest-sdk\nPayPal APIs library.\n\n\npug\nTemplate engine for Express.\n\n\nsinon\nTest spies, stubs and mocks for JavaScript.\n\n\nstripe\nOffical Stripe API library.\n\n\nsupertest\nHTTP assertion library.\n\n\ntumblr.js\nTumblr API library.\n\n\ntwilio\nTwilio API library.\n\n\ntwitter-lite\nTwitter API library.\n\n\nvalidator\nA library of string validators and sanitizers.\n\n\n\nUseful Tools and Resources\n\nJavaScripting - The Database of JavaScript Libraries\nJS Recipes - JavaScript tutorials for backend and frontend development.\nHTML to Pug converter - HTML to PUG is a free online converter helping you to convert HTML files to pug syntax in real-time.\nJavascriptOO - A directory of JavaScript libraries with examples, CDN links, statistics, and videos.\nFavicon Generator - Generate favicons for PC, Android, iOS, Windows 8.\n\nRecommended Design Resources\n\nCode Guide - Standards for developing flexible, durable, and sustainable HTML and CSS.\nBootsnipp - Code snippets for Bootstrap.\nBootstrap Zero - Free Bootstrap templates themes.\nGoogle Bootstrap - Google-styled theme for Bootstrap.\nFont Awesome Icons - It's already part of the Hackathon Starter, so use this page as a reference.\nColors - A nicer color palette for the web.\nCreative Button Styles - awesome button styles.\nCreative Link Effects - Beautiful link effects in CSS.\nMedium Scroll Effect - Fade in\/out header background image as you scroll.\nGeoPattern - SVG background pattern generator.\nTrianglify - SVG low-poly background pattern generator.\n\nRecommended Node.js Libraries\n\nNodemon - Automatically restart Node.js server on code changes.\ngeoip-lite - Geolocation coordinates from IP address.\nFilesize.js - Pretty file sizes, e.g. filesize(265318); \/\/ \"265.32 kB\".\nNumeral.js - Library for formatting and manipulating numbers.\nNode Inspector - Node.js debugger based on Chrome Developer Tools.\nnode-taglib - Library for reading the meta-data of several popular audio formats.\nsharp - Node.js module for resizing JPEG, PNG, WebP and TIFF images.\n\nRecommended Client-side Libraries\n\nFramework7 - Full Featured HTML Framework For Building iOS7 Apps.\nInstantClick - Makes your pages load instantly by pre-loading them on mouse hover.\nNProgress.js - Slim progress bars like on YouTube and Medium.\nHover - Awesome CSS3 animations on mouse hover.\nMagnific Popup - Responsive jQuery Lightbox Plugin.\njQuery Raty - Star Rating Plugin.\nHeadroom.js - Hide your header until you need it.\nX-editable - Edit form elements inline.\nOffline.js - Detect when user's internet connection goes offline.\nAlertify.js - Sweet looking alerts and browser dialogs.\nselectize.js - Styleable select elements and input tags.\ndrop.js -  Powerful Javascript and CSS library for creating dropdowns and other floating displays.\nscrollReveal.js - Declarative on-scroll reveal animations.\n\nPro Tips\n\nUse async.parallel() when you need to run multiple\nasynchronous tasks, and then render a page, but only when all tasks are completed. For example, you might want to scrape three different websites for some data and render the results in a template after all three websites have been scraped.\nNeed to find a specific object inside an Array? Use _.find\nfunction from Lodash. For example, this is how you would retrieve a\nTwitter token from database: var token = _.find(req.user.tokens, { kind: 'twitter' });,\nwhere 1st parameter is an array, and a 2nd parameter is an object to search for.\n\nFAQ\nWhy do I get 403 Error: Forbidden when submitting a form?\nYou need to add the following hidden input element to your form. This has been\nadded in the pull request #40\nas part of the CSRF protection.\ninput(type='hidden', name='_csrf', value=_csrf)\n\nNote: It is now possible to whitelist certain URLs. In other words you can\nspecify a list of routes that should bypass CSRF verification check.\nNote 2: To whitelist dynamic URLs use regular expression tests inside the\nCSRF middleware to see if req.originalUrl matches your desired pattern.\nI am getting MongoDB Connection Error, how do I fix it?\nThat's a custom error message defined in app.js to indicate that there was a\nproblem connecting to MongoDB:\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log('%s MongoDB connection error. Please make sure MongoDB is running.', chalk.red('\u2717'));\n  process.exit();\n});\nYou need to have a MongoDB server running before launching app.js. You can\ndownload MongoDB here, or install it via a package manager.\n\nWindows users, read Install MongoDB on Windows.\nTip: If you are always connected to the internet, you could just use\nMongoDB Atlas or Compose instead\nof downloading and installing MongoDB locally. You will only need to update database credentials\nin .env file.\nI get an error when I deploy my app, why?\nChances are you haven't changed the Database URI in .env. If MONGODB is\nset to localhost, it will only work on your machine as long as MongoDB is\nrunning. When you deploy to Heroku, OpenShift or some other provider, you will not have MongoDB\nrunning on localhost. You need to create an account with MongoDB Atlas\nor Compose, then create a free tier database.\nSee Deployment for more information on how to setup an account\nand a new database step-by-step with MongoDB Atlas.\nWhy Pug (Jade) instead of Handlebars?\nWhen I first started this project I didn't have any experience with Handlebars. Since then I have worked on Ember.js apps and got myself familiar with the Handlebars syntax. While it is true Handlebars is easier, because it looks like good old HTML, I have no regrets picking Jade over Handlebars. First off, it's the default template engine in Express, so someone who has built Express apps in the past already knows it. Secondly, I find extends and block to be indispensable, which as far as I know, Handlebars does not have out of the box. And lastly, subjectively speaking, Jade looks much cleaner and shorter than Handlebars, or any non-HAML style for that matter.\nWhy do you have all routes defined in app.js?\nFor the sake of simplicity. While there might be a better approach,\nsuch as passing app context to each controller as outlined in this\nblog,\nI find such style to be confusing for beginners.\nIt took me a long time to grasp the concept of exports and module.exports,\nlet alone having a global app reference in other files.\nThat to me is backward thinking.\nThe app.js is the \"heart of the app\", it should be the one referencing\nmodels, routes, controllers, etc.\nWhen working solo on small projects, I prefer to have everything inside app.js as is the case with this\nREST API server.\nHow do I switch SendGrid for another email delivery service, like Mailgun or SparkPost?\nInside the nodemailer.createTransport method arguments, change the service from 'Sendgrid' to some other email service. Also, be sure to update both username and password below that. See the list of all supported services by Nodemailer.\nHow It Works (mini guides)\nThis section is intended for giving you a detailed explanation of\nhow a particular functionality works. Maybe you are just curious about\nhow it works, or perhaps you are lost and confused while reading the code,\nI hope it provides some guidance to you.\nCustom HTML and CSS Design 101\nHTML5 UP has many beautiful templates that you can download for free.\nWhen you download the ZIP file, it will come with index.html, images, css and js folders. So, how do you\nintegrate it with Hackathon Starter? Hackathon Starter uses Bootstrap CSS framework, but these templates do not.\nTrying to use both CSS files at the same time will likely result in undesired effects.\nNote: Using the custom templates approach, you should understand that you cannot reuse any of the views I have created: layout, home page, api browser, login, signup, account management, contact. Those views were built using Bootstrap grid and styles. You will have to manually update the grid using a different syntax provided in the template. Having said that, you can mix and match if you want to do so: Use Bootstrap for main app interface, and a custom template for a landing page.\nLet's start from the beginning. For this example I will use Escape Velocity template:\n\nNote: For the sake of simplicity I will only consider index.html, and skip left-sidebar.html,\nno-sidebar.html, right-sidebar.html.\nMove all JavaScript files from html5up-escape-velocity\/js to public\/js. Then move all CSS files from html5up-escape-velocity\/css to public\/css. And finally, move all images from html5up-escape-velocity\/images to public\/images. You could move it to the existing img folder, but that would require manually changing every img reference. Grab the contents of index.html and paste it into HTML To Pug.\nNote: Do not forget to update all the CSS and JS paths accordingly.\nCreate a new file escape-velocity.pug and paste the Pug markup in views folder.\nWhenever you see the code res.render('account\/login') - that means it will search for views\/account\/login.pug file.\nLet's see how it looks. Create a new controller escapeVelocity inside controllers\/home.js:\nexports.escapeVelocity = (req, res) => {\n  res.render('escape-velocity', {\n    title: 'Landing Page'\n  });\n};\nAnd then create a route in app.js. I placed it right after the index controller:\napp.get('\/escape-velocity', homeController.escapeVelocity);\nRestart the server (if you are not using nodemon); then you should see the new template at http:\/\/localhost:8080\/escape-velocity.\nI will stop right here, but if you would like to use this template as more than just a single page, take a look at how these Pug templates work: layout.pug - base template, index.pug - home page, partials\/header.pug - Bootstrap navbar, partials\/footer.pug - sticky footer. You will have to manually break it apart into smaller pieces. Figure out which part of the template you want to keep the same on all pages - that's your new layout.pug.\nThen, each page that changes, be it index.pug, about.pug, contact.pug\nwill be embedded in your new layout.pug via block content. Use existing templates as a reference.\nThis is a rather lengthy process, and templates you get from elsewhere might have yet another grid system. That's why I chose Bootstrap for the Hackathon Starter.\nMany people are already familiar with Bootstrap, plus it's easy to get started with it if you have never used Bootstrap.\nYou can also buy many beautifully designed Bootstrap themes at Themeforest, and use them as a drop-in replacement for Hackathon Starter. However, if you would like to go with a completely custom HTML\/CSS design, this should help you to get started!\n\nHow do flash messages work in this project?\nFlash messages allow you to display a message at the end of the request and access\nit on next request and only next request. For instance, on a failed login attempt, you would\ndisplay an alert with some error message, but as soon as you refresh that page or visit a different\npage and come back to the login page, that error message will be gone. It is only displayed once.\nThis project uses express-flash module for flash messages. And that\nmodule is built on top of connect-flash, which is what I used in\nthis project initially. With express-flash you don't have to\nexplicitly send a flash message to every view inside res.render().\nAll flash messages are available in your views via messages object by default,\nthanks to express-flash.\nFlash messages have a two-step process. You use req.flash('errors', { msg: 'Error messages goes here' }\nto create a flash message in your controllers, and then display them in your views:\nif messages.errors\n  .alert.alert-danger.fade.in\n    for error in messages.errors\n      div= error.msg\nIn the first step, 'errors' is the name of a flash message, which should match the\nname of the property on messages object in your views. You place alert messages\ninside if message.errors because you don't want to show them flash messages are present.\nThe reason why you pass an error like { msg: 'Error message goes here' } instead\nof just a string - 'Error message goes here', is for the sake of consistency.\nTo clarify that, express-validator module which is used for validating and sanitizing user's input,\nreturns all errors as an array of objects, where each object has a msg property with a message why an error has occurred. Here is a more general example of what express-validator returns when there are errors present:\n[\n  { param: \"name\", msg: \"Name is required\", value: \"<received input>\" },\n  { param: \"email\", msg: \"A valid email is required\", value: \"<received input>\" }\n]\nTo keep consistent with that style, you should pass all flash messages\nas { msg: 'My flash message' } instead of a string. Otherwise, you will see an alert box\nwithout an error message. That is because in partials\/flash.pug template it will try to output\nerror.msg (i.e. \"My flash message\".msg), in other words, it will try to call a msg method on a String object,\nwhich will return undefined. Everything I just mentioned about errors, also applies\nto \"info\" and \"success\" flash messages, and you could even create a new one yourself, such as:\nData Usage Controller (Example)\nreq.flash('warning', { msg: 'You have exceeded 90% of your data usage' });\n\nUser Account Page (Example)\nif messages.warning\n  .alert.alert-warning.fade.in\n    for warning in messages.warning\n      div= warning.msg\npartials\/flash.pug is a partial template that contains how flash messages\nare formatted. Previously, flash\nmessages were scattered throughout each view that used flash messages\n(contact, login, signup, profile), but now, thankfully it uses a DRY approach.\nThe flash messages partial template is included in the layout.pug, along with footer and navigation.\nbody\n    include partials\/header\n\n    .container\n      include partials\/flash\n      block content\n\n    include partials\/footer\nIf you have any further questions about flash messages,\nplease feel free to open an issue, and I will update this mini-guide accordingly,\nor send a pull request if you would like to include something that I missed.\n\nHow do I create a new page?\nA more correct way to say this would be \"How do I create a new route?\" The main file app.js contains all the routes.\nEach route has a callback function associated with it. Sometimes you will see three or more arguments for a route. In a case like that, the first argument is still a URL string, while middle arguments\nare what's called middleware. Think of middleware as a door. If this door prevents you from\ncontinuing forward, you won't get to your callback function. One such example is a route that requires authentication.\napp.get('\/account', passportConfig.isAuthenticated, userController.getAccount);\nIt always goes from left to right. A user visits \/account page. Then isAuthenticated middleware checks if you are authenticated:\nexports.isAuthenticated = (req, res, next) => {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n  res.redirect('\/login');\n};\nIf you are authenticated, you let this visitor pass through your \"door\" by calling return next();. It then proceeds to the\nnext middleware until it reaches the last argument, which is a callback function that typically renders a template on GET requests or redirects on POST requests. In this case, if you are authenticated, you will be redirected to the Account Management page; otherwise, you will be redirected to the Login page.\nexports.getAccount = (req, res) => {\n  res.render('account\/profile', {\n    title: 'Account Management'\n  });\n};\nExpress.js has app.get, app.post, app.put, app.delete, but for the most part, you will only use the first two HTTP verbs, unless you are building a RESTful API.\nIf you just want to display a page, then use GET, if you are submitting a form, sending a file then use POST.\nHere is a typical workflow for adding new routes to your application. Let's say we are building a page that lists all books from the database.\nStep 1. Start by defining a route.\napp.get('\/books', bookController.getBooks);\n\nNote: As of Express 4.x you can define your routes like so:\napp.route('\/books')\n  .get(bookController.getBooks)\n  .post(bookController.createBooks)\n  .put(bookController.updateBooks)\n  .delete(bookController.deleteBooks)\nAnd here is how a route would look if it required an authentication and an authorization middleware:\napp.route('\/api\/twitter')\n  .all(passportConfig.isAuthenticated)\n  .all(passportConfig.isAuthorized)\n  .get(apiController.getTwitter)\n  .post(apiController.postTwitter)\nUse whichever style that makes sense to you. Either one is acceptable. I think that chaining HTTP verbs on app.route is a very clean and elegant approach, but on the other hand, I can no longer see all my routes at a glance when you have one route per line.\nStep 2. Create a new schema and a model Book.js inside the models directory.\nconst mongoose = require('mongoose');\n\nconst bookSchema = new mongoose.Schema({\n  name: String\n});\n\nconst Book = mongoose.model('Book', bookSchema);\nmodule.exports = Book;\nStep 3. Create a new controller file called book.js inside the controllers directory.\n\/**\n * GET \/books\n * List all books.\n *\/\nconst Book = require('..\/models\/Book.js');\n\nexports.getBooks = (req, res) => {\n  Book.find((err, docs) => {\n    res.render('books', { books: docs });\n  });\n};\nStep 4. Import that controller in app.js.\nconst bookController = require('.\/controllers\/book');\nStep 5. Create books.pug template.\nextends layout\n\nblock content\n  .page-header\n    h3 All Books\n\n  ul\n    for book in books\n      li= book.name\nThat's it! I will say that you could have combined Step 1, 2, 3 as following:\napp.get('\/books',(req, res) => {\n  Book.find((err, docs) => {\n    res.render('books', { books: docs });\n  });\n});\nSure, it's simpler, but as soon as you pass 1000 lines of code in app.js it becomes a little challenging to navigate the file.\nI mean, the whole point of this boilerplate project was to separate concerns, so you could\nwork with your teammates without running into MERGE CONFLICTS. Imagine you have four developers\nworking on a single app.js, I promise you it won't be fun resolving merge conflicts all the time.\nIf you are the only developer, then it's okay. But as I said, once it gets up to a certain LoC size, it becomes difficult to maintain everything in a single file.\nThat's all there is to it. Express.js is super simple to use.\nMost of the time you will be dealing with other APIs to do the real work:\nMongoose for querying database, socket.io for sending and receiving messages over websockets,\nsending emails via Nodemailer, form validation using express-validator library,\nparsing websites using Cheerio, etc.\n\nHow do I use Socket.io with Hackathon Starter?\nDan Stroot submitted an excellent pull request that adds a real-time dashboard with socket.io.\nAnd as  much as I'd like to add it to the project, I think it violates one of the main\nprinciples of the Hackathon Starter:\n\nWhen I started this project, my primary focus was on simplicity and ease of use.\nI also tried to make it as generic and reusable as possible to cover most use cases of\nhackathon web apps, without being too specific.\n\nWhen I need to use socket.io, I really need it, but most of the time - I don't. But more importantly, websockets support is still experimental on most hosting providers. As of October 2013,\nHeroku supports websockets, but not until you opt-in by running this command:\nheroku labs:enable websockets -a myapp\nAnd what if you are deploying to OpenShift? They do support websockets, but it is currently in a\npreview state. So, for OpenShift you would need to change the socket.io connect URI to the following:\nconst socket = io.connect('http:\/\/yoursite-namespace.rhcloud.com:8000');\nWait, why is it on port 8000? Who knows, and if I didn't run across this blog post\nI wouldn't even know I had to use port 8000.\nI am really glad that Heroku and OpenShift at least\nhave a websockets support, because many other PaaS providers still do not support it.\nDue to the aforementioned issues with websockets, I cannot include socket.io as part of the Hackathon Starter. For now...\nIf you need to use socket.io in your app, please continue reading.\nFirst, you need to install socket.io:\nnpm install socket.io\nReplace const app = express(); with the following code:\nconst app = express();\nconst server = require('http').Server(app);\nconst io = require('socket.io')(server);\nI like to have the following code organization in app.js (from top to bottom): module dependencies,\nimport controllers, import configs, connect to database, express configuration, routes,\nstart the server, socket.io stuff. That way I always know where to look for things.\nAdd the following code at the end of app.js:\nio.on('connection', (socket) => {\n  socket.emit('greet', { hello: 'Hey there browser!' });\n  socket.on('respond', (data) => {\n    console.log(data);\n  });\n  socket.on('disconnect', () => {\n    console.log('Socket disconnected');\n  });\n});\nOne last thing left to change:\napp.listen(app.get('port'), () => {\nto\nserver.listen(app.get('port'), () => {\nAt this point, we are done with the back-end.\nYou now have a choice - to include your JavaScript code in Pug templates or have all your client-side\nJavaScript in a separate file - in main.js. I admit, when I first started with Node.js and JavaScript in general,\nI placed all JavaScript code inside templates because I have access to template variables passed in from Express\nright then and there. It's the easiest thing you can do, but also the least efficient and harder to maintain. Since then I\nalmost never include inline JavaScript inside templates anymore.\nBut it's also understandable if you want to take the easier road.\nMost of the time you don't even care about performance during hackathons, you just\nwant to \"get shit done\" before the time runs out.\nWell, either way, use whichever approach makes more sense to you. At the end of the day,\nit's what you build that matters, not how you build it.\nIf you want to stick all your JavaScript inside templates, then in layout.pug -\nyour main template file, add this to head block.\nscript(src='\/socket.io\/socket.io.js')\nscript.\n    let socket = io.connect(window.location.href);\n    socket.on('greet', function (data) {\n      console.log(data);\n      socket.emit('respond', { message: 'Hey there, server!' });\n    });\nNote: Notice the path of the socket.io.js, you don't actually\nhave to have socket.io.js file anywhere in your project; it will be generated\nautomatically at runtime.\nIf you want to have JavaScript code separate from templates, move that inline\nscript code into main.js, inside the $(document).ready() function:\n$(document).ready(function() {\n\n  \/\/ Place JavaScript code here...\n  let socket = io.connect(window.location.href);\n  socket.on('greet', function (data) {\n    console.log(data);\n    socket.emit('respond', { message: 'Hey there, server!' });\n  });\n\n});\nAnd we are done!\nCheatsheets\n ES6 Cheatsheet\nDeclarations\nDeclares a read-only named constant.\nconst name = 'yourName';\nDeclares a block scope local variable.\nlet index = 0;\nTemplate Strings\nUsing the `${}` syntax, strings can embed expressions.\nconst name = 'Oggy';\nconst age = 3;\n\nconsole.log(`My cat is named ${name} and is ${age} years old.`);\nModules\nTo import functions, objects or primitives exported from an external module. These are the most common types of importing.\nconst name = require('module-name');\nconst { foo, bar } = require('module-name');\nTo export functions, objects or primitives from a given file or module.\nmodule.exports = { myFunction };\nmodule.exports.name = 'yourName';\nmodule.exports = myFunctionOrClass;\nSpread Operator\nThe spread operator allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected.\nmyFunction(...iterableObject);\n<ChildComponent {...this.props} \/>\nPromises\nA Promise is used in asynchronous computations to represent an operation that hasn't completed yet, but is expected in the future.\nvar p = new Promise(function(resolve, reject) { });\nThe catch() method returns a Promise and deals with rejected cases only.\np.catch(function(reason) { \/* handle rejection *\/ });\nThe then() method returns a Promise. It takes two arguments: callback for the success & failure cases.\np.then(function(value) { \/* handle fulfillment *\/ }, function(reason) { \/* handle rejection *\/ });\nThe Promise.all(iterable) method returns a promise that resolves when all of the promises in the iterable argument have resolved or rejects with the reason of the first passed promise that rejects.\nPromise.all([p1, p2, p3]).then(function(values) { console.log(values) });\nArrow Functions\nArrow function expression. Shorter syntax & lexically binds the this value. Arrow functions are anonymous.\nsingleParam => { statements }\n() => { statements }\n(param1, param2) => expression\nconst arr = [1, 2, 3, 4, 5];\nconst squares = arr.map(x => x * x);\nClasses\nThe class declaration creates a new class using prototype-based inheritance.\nclass Person {\n  constructor(name, age, gender) {\n    this.name   = name;\n    this.age    = age;\n    this.gender = gender;\n  }\n\n  incrementAge() {\n    this.age++;\n  }\n}\n\ud83c\udf81 Credits: DuckDuckGo and @DrkSephy.\n\ud83d\udd1d back to top\n JavaScript Date Cheatsheet\nUnix Timestamp (seconds)\nMath.floor(Date.now() \/ 1000);\nmoment().unix();\n\nAdd 30 minutes to a Date object\nvar now = new Date();\nnow.setMinutes(now.getMinutes() + 30);\nmoment().add(30, 'minutes');\n\nDate Formatting\n\/\/ DD-MM-YYYY\nvar now = new Date();\n\nvar DD = now.getDate();\nvar MM = now.getMonth() + 1;\nvar YYYY = now.getFullYear();\n\nif (DD < 10) {\n  DD = '0' + DD;\n}\n\nif (MM < 10) {\n  MM = '0' + MM;\n}\n\nconsole.log(MM + '-' + DD + '-' + YYYY); \/\/ 03-30-2016\nconsole.log(moment(new Date(), 'MM-DD-YYYY'));\n\n\/\/ hh:mm (12 hour time with am\/pm)\nvar now = new Date();\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\nvar amPm = hours >= 12 ? 'pm' : 'am';\n\nhours = hours % 12;\nhours = hours ? hours : 12;\nminutes = minutes < 10 ? '0' + minutes : minutes;\n\nconsole.log(hours + ':' + minutes + ' ' + amPm); \/\/ 1:43 am\nconsole.log(moment(new Date(), 'hh:mm A'));\n\nNext week Date object\nvar today = new Date();\nvar nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\nmoment().add(7, 'days');\n\nYesterday Date object\nvar today = new Date();\nvar yesterday = date.setDate(date.getDate() - 1);\nmoment().add(-1, 'days');\n\n\ud83d\udd1d back to top\nMongoose Cheatsheet\nFind all users:\nUser.find((err, users) => {\n  console.log(users);\n});\nFind a user by email:\nlet userEmail = 'example@gmail.com';\nUser.findOne({ email: userEmail }, (err, user) => {\n  console.log(user);\n});\nFind 5 most recent user accounts:\nUser\n  .find()\n  .sort({ _id: -1 })\n  .limit(5)\n  .exec((err, users) => {\n    console.log(users);\n  });\nGet the total count of a field from all documents:\nLet's suppose that each user has a votes field and you would like to count\nthe total number of votes in your database across all users. One very\ninefficient way would be to loop through each document and manually accumulate\nthe count. Or you could use MongoDB Aggregation Framework instead:\nUser.aggregate({ $group: { _id: null, total: { $sum: '$votes' } } }, (err, votesCount)  => {\n  console.log(votesCount.total);\n});\n\ud83d\udd1d back to top\nDocker\nYou will need docker and docker-compose installed to build the application.\n\n\nDocker installation\n\n\nCommon problems setting up docker\n\n\nAfter installing docker, start the application with the following commands :\n# To build the project for the first time or when you add dependencies\ndocker-compose build web\n\n# To start the application (or to restart after making changes to the source code)\ndocker-compose up web\n\n\nTo view the app, find your docker IP address + port 8080 ( this will typically be http:\/\/localhost:8080\/ ).  To use a port other than 8080, you would need to modify the port in app.js, Dockerfile, and docker-compose.yml.\nDeployment\nOnce you are ready to deploy your app, you will need to create an account with a cloud platform to host it. These are not the only choices, but they are my top picks. From my experience, the easiest way to get started is with Heroku. It will automatically restart your Node.js process when it crashes, has zero-downtime deployments and supports custom domains on free accounts. Additionally, you can\ncreate an account with MongoDB Atlas and then pick one of the 4 providers below.\nAgain, there are plenty of other choices, and you are not limited to just the ones\nlisted below.\nDeployment to Heroku\n\n\nDownload and install Heroku Toolbelt\nIn a terminal, run heroku login and enter your Heroku credentials\nFrom your app directory run heroku create\nUse the command heroku config:set KEY=val to set the different environment variables (KEY=val) for your application (i.e.  heroku config:set BASE_URL=[heroku App Name].herokuapp.com or heroku config:set MONGODB_URI=mongodb:\/\/dbuser:<password>@cluster0-shard-00-00-sdf32.mongodb.net:27017,cluster0-shard-00-01-sdf32.mongodb.net:27017\/<dbname>?ssl=true&retryWrites=true&w=majority (see Hosted MongoDB Atlas below), etc.)  Make sure to set the environment variables for SENDGRID_USER, SENDGRID_PASSWORD, and any other API that you are using as well.\nLastly, do git push heroku master.\n\nPlease note that you may also use the Herko Dashboard to set or modify the configurations for your application.\n\nHosted MongoDB Atlas\n\n\nGo to https:\/\/www.mongodb.com\/cloud\/atlas\nClick the green Get started free button\nFill in your information then hit Get started free\nYou will be redirected to Create New Cluster page.\nSelect a Cloud Provider and Region (such as AWS and a free tier region)\nSelect cluster Tier to Free Shared Clusters\nGive Cluster a name (default: Cluster0)\nClick on green \u26a1Create Cluster button\nNow, to access your database you need to create a DB user. To create a new MongoDB user, from the Clusters view, select the Security tab\nUnder the MongoDB Users tab, click on +Add New User\nFill in a username and password and give it either Atlas Admin User Privilege\nNext, you will need to create an IP address whitelist and obtain the connection URI.  In the Clusters view, under the cluster details (i.e. SANDBOX - Cluster0), click on the CONNECT button.\nUnder section (1) Check the IP Whitelist, click on ALLOW ACCESS FROM ANYWHERE. The form will add a field with 0.0.0.0\/0.  Click SAVE to save the 0.0.0.0\/0 whitelist.\nUnder section (2) Choose a connection method, click on Connect Your Application\nIn the new screen, select Node.js as Driver and version 2.2.12 or later. WARNING: Do not pick 3.0 or later since connect-mongo can't handle mongodb+srv:\/\/ connection strings.\nFinally, copy the URI connection string and replace the URI in MONGODB_URI of .env.example with this URI string.  Make sure to replace the  with the db User password that you created under the Security tab.\nNote that after some of the steps in the Atlas UI, you may see a banner stating We are deploying your changes.  You will need to wait for the deployment to finish before using the DB in your application.\n\nNote: As an alternative to MongoDB Atlas, there is also Compose.\n\nOpenShift\n\n**NOTE** *These instructions might be out of date due to changes in OpenShift. Heroku is currently a good free alternative.  If you the new process, please feel free to help us update this page*\n\nFirst, install this Ruby gem: sudo gem install rhc \ud83d\udc8e\nRun rhc login and enter your OpenShift credentials\nFrom your app directory run rhc app create MyApp nodejs-0.10\nNote: MyApp is the name of your app (no spaces)\nOnce that is done, you will be provided with URL, SSH and Git Remote links\nVisit provided URL, and you should see the Welcome to your Node.js application on OpenShift page\nCopy and paste Git Remote into git remote add openshift YOUR_GIT_REMOTE\nBefore you push your app, you need to do a few modifications to your code\n\nAdd these two lines to app.js, just place them anywhere before app.listen():\nvar IP_ADDRESS = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\nvar PORT = process.env.OPENSHIFT_NODEJS_PORT || 8080;\nThen change app.listen() to:\napp.listen(PORT, IP_ADDRESS,() => {\n  console.log(`Express server listening on port ${PORT} in ${app.settings.env} mode`);\n});\nAdd this to package.json, after name and version. This is necessary because, by default, OpenShift looks for server.js file. And by specifying supervisor app.js it will automatically restart the server when node.js process crashes.\n\"main\": \"app.js\",\n\"scripts\": {\n  \"start\": \"supervisor app.js\"\n},\n\nFinally, you can now push your code to OpenShift by running git push -f openshift master\nNote: The first time you run this command, you have to pass -f (force) flag because OpenShift creates a dummy server with the welcome page when you create a new Node.js app. Passing -f flag will override everything with your Hackathon Starter project repository. Do not run git pull as it will create unnecessary merge conflicts.\nAnd you are done!\n\n\nAzure\n\n**NOTE** *Beyond the initial 12 month trial of Azure, the platform does not seem to offer a free tier for hosting NodeJS apps.  If you are looking for a free tier service to host your app, Heroku might be a better choice at this point*\n\nLogin to Windows Azure Management Portal\nClick the + NEW button on the bottom left of the portal\nClick COMPUTE, then WEB APP, then QUICK CREATE\nEnter a name for URL and select the datacenter REGION for your web site\nClick on CREATE WEB APP button\nOnce the web site status changes to Running, click on the name of the web site to access the Dashboard\nAt the bottom right of the Quickstart page, select Set up a deployment from source control\nSelect Local Git repository from the list, and then click the arrow\nTo enable Git publishing, Azure will ask you to create a user name and password\nOnce the Git repository is ready, you will be presented with a GIT URL\nInside your Hackathon Starter directory, run git remote add azure [Azure Git URL]\nTo push your changes run git push azure master\nNote: You will be prompted for the password you created earlier\nOn Deployments tab of your Windows Azure Web App, you will see the deployment history\n\n\nIBM Bluemix Cloud Platform\nNOTE At this point it appears that Bluemix's free tier to host NodeJS apps is limited to 30 days.  If you are looking for a free tier service to host your app, Heroku might be a better choice at this point\n\n\nCreate a Bluemix Account\nSign up for Bluemix, or use an existing account.\n\n\nDownload and install the Cloud Foundry CLI to push your applications to Bluemix.\n\n\nCreate a manifest.yml file in the root of your application.\n\n\napplications:\n- name:      <your-app-name>\n  host:      <your-app-host>\n  memory:    128M\n  services:\n  - myMongo-db-name\n\nThe host you use will determinate your application URL initially, e.g. <host>.mybluemix.net.\nThe service name 'myMongo-db-name' is a declaration of your MongoDB service.  If you are using other services like Watson for example, then you would declare them the same way.\n\nConnect and login to Bluemix via the Cloud-foundry CLI\n\n$ cf login -a https:\/\/api.ng.bluemix.net\n\n\nCreate a MongoDB service\n\n$ cf create-service mongodb 100 [your-service-name]\n\nNote: this is a free and experiment verion of MongoDB instance.\nUse the MongoDB by Compose instance for production applications:\n$ cf create-service compose-for-mongodb Standard [your-service-name]'\n\n\n\nPush the application\n$ cf push\n\n$ cf env <your-app-name >\n(To view the *environment variables* created for your application)\n\n\n\n\nDone, now go to the staging domain (<host>.mybluemix.net) and see your app running.\nCloud Foundry Commands\nMore Bluemix samples\nSimple ToDo app in a programming language of your choice\nIBM Watson\nBe sure to check out the full list of Watson services to forwarder enhance your application functionality with a little effort. Watson services are easy to get going; it is simply a RESTful API call. Here is an example of a Watson Toner Analyzer to understand the emotional context of a piece of text that you send to Watson.\nWatson catalog of services\n Conversation -     Quickly build and deploy chatbots and virtual agents across a variety of channels, including mobile devices, messaging platforms, and even robots.\n Discovery - Unlock hidden value in data to find answers, monitor trends and surface patterns with the world\u2019s most advanced cloud-native insight engine.\n Language Translator - Translate text from one language to another.\n Natural Language Classifier - Interpret and classify natural language with confidence.\n Natural Language Understanding - Analyze text to extract meta-data from content such as concepts, entities, keywords and more.\n Personality Insights - Predict personality characteristics, needs and values through written text.\n Speech to Text - Convert audio and voice into written text for quick understanding of content.\n Text to Speech - Convert written text into natural sounding audio in a variety of languages and voices.\n Tone Analyzer - Understand emotions, social tendencies and perceived writing style.\n Visual Recognition - Tag, classify and search visual content using machine learning.\nClick here for live demos of each Watson service.\n\nGoogle Cloud Platform\n\n\n\nDownload and install Node.js\n\n\nSelect or create a Google Cloud Platform Console project\n\n\nEnable billing for your project (there's a $300 free trial)\n\n\nInstall and initialize the Google Cloud SDK\n\n\nCreate an app.yaml file at the root of your hackathon-starter folder with the following contents:\nruntime: nodejs\nenv: flex\nmanual_scaling:\n  instances: 1\n\n\nMake sure you've set MONGODB_URI in .env.example\n\n\nRun the following command to deploy the hackathon-starter app:\ngcloud app deploy\n\n\nMonitor your deployed app in the Cloud Console\n\n\nView the logs for your app in the Cloud Console\n\n\nProduction\nIf you are starting with this boilerplate to build an application for prod deployment, or if after your hackathon you would like to get your project hardened for production use, see prod-checklist.md.\nChangelog\nYou can find the changelog for the project in: CHANGELOG.md\nContributing\nIf something is unclear, confusing, or needs to be refactored, please let me know.\nPull requests are always welcome, but due to the opinionated nature of this\nproject, I cannot accept every pull request. Please open an issue before\nsubmitting a pull request. This project uses\nAirbnb JavaScript Style Guide with a\nfew minor exceptions. If you are submitting a pull request that involves\nPug templates, please make sure you are using spaces, not tabs.\nLicense\nThe MIT License (MIT)\nCopyright (c) 2014-2020 Sahat Yalkabov\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","67":"fullPage.js\n\n\n\nEnglish |\n  Espa\u00f1ol |\n  Fran\u00e7ais |\n  P\u0443\u0441\u0441\u043a\u0438\u0439 |\n  \u4e2d\u6587 |\n  \ud55c\uad6d\uc5b4\n\n\n\tAvailable for Vue, React and Angular.\n\n\n\n\n\n\n\u00a0\u00a0 |\u00a0\u00a0 7Kb gziped \u00a0\u00a0|\u00a0\u00a0 Created by @imac2\n\nDemo online | Codepen\nWordpress plugin for Gutenberg and WordPress pluging fo Elementor\nWordpress theme\nfullpage.js Extensions\nFrequently Answered Questions\n\n\nA simple and easy to use library that creates fullscreen scrolling websites (also known as single page websites or onepage sites) and adds landscape sliders inside the sections of the site.\n\nIntroduction\nCompatibility\nLicense\nUsage\n\nCreating links to sections or slides\nCreating smaller or bigger sections\nState classes added by fullpage.js\nLazy loading\nAuto play\/pause embedded media\nUse extensions\n\n\nOptions\nMethods\nCallbacks\nReporting issues\nContributing to fullpage.js\nChangelog\nBuild tasks\nResources\nWho is using fullpage.js\nDonations\nSponsors\n\nIntroduction\nSuggestion are more than welcome, not only for feature requests but also for coding style improvements.\nLet's make this a great library to make people's lives easier!\nCompatibility\nfullPage.js is fully functional on all modern browsers, as well as some old ones such as Internet Explorer 9, Opera 12, etc.\nIt works with browsers with CSS3 support and with the ones which don't have it, making it ideal for old browsers compatibility.\nIt also provides touch support for mobile phones, tablets and touch screen computers.\nSpecial thanks to Browserstack for supporting fullpage.js.\nLicense\nCommercial license\nIf you want to use fullPage to develop non open sourced sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. Which means, you won't have to change your whole application source code to an open source license. [Purchase a Fullpage Commercial License]\nOpen source license\nIf you are creating an open source application under a license compatible with the GNU GPL license v3, you may use fullPage under the terms of the GPLv3.\nThe credit comments in the JavaScript and CSS files should be kept intact (even after combination or minification)\nRead more about fullPage's license.\nUsage\nAs you can see in the example files, you will need to include:\n\nThe JavaScript file fullpage.js (or its minified version fullpage.min.js)\nThe css file fullpage.css\n\nOptionally, when using css3:false, you can add the easings file in case you want to use other easing effects apart from the one included in the library (easeInOutCubic).\nInstall using bower or npm\nOptionally, you can install fullPage.js with bower or npm if you prefer:\nTerminal:\n\/\/ With bower\nbower install fullpage.js\n\n\/\/ With npm\nnpm install fullpage.js\nIncluding files:\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"fullpage.css\" \/>\n\n<!-- This following line is optional. Only necessary if you use the option css3:false and you want to use other easing effects rather than \"easeInOutCubic\". -->\n<script src=\"vendors\/easings.min.js\"><\/script>\n\n\n<!-- This following line is only necessary in the case of using the option `scrollOverflow:true` -->\n<script type=\"text\/javascript\" src=\"vendors\/scrolloverflow.min.js\"><\/script>\n\n<script type=\"text\/javascript\" src=\"fullpage.js\"><\/script>\nUsing Webpack, Browserify or Require.js? Check how to use fullPage.js with module loaders.\nOptional use of CDN\nIf you prefer to use a CDN to load the needed files, fullPage.js is in CDNJS:\nhttps:\/\/cdnjs.com\/libraries\/fullPage.js\nRequired HTML structure\nStart your HTML document with the compulsory HTML DOCTYPE declaration on the 1st line of your HTML code. You might have troubles with sections heights otherwise. The examples provided use HTML 5 doctype <!DOCTYPE html>.\nEach section will be defined with an element containing the section class.\nThe active section by default will be the first section, which is taken as the home page.\nSections should be placed inside a wrapper (<div id=\"fullpage\"> in this case). The wrapper can not be the body element.\n<div id=\"fullpage\">\n\t<div class=\"section\">Some section<\/div>\n\t<div class=\"section\">Some section<\/div>\n\t<div class=\"section\">Some section<\/div>\n\t<div class=\"section\">Some section<\/div>\n<\/div>\nIf you want to define a different starting point rather than the first section or the first slide of a section, just add the class active to the section and slide you want to load first.\n<div class=\"section active\">Some section<\/div>\nIn order to create a landscape slider within a section, each slide will be defined by default with an element containing the slide class:\n<div class=\"section\">\n\t<div class=\"slide\"> Slide 1 <\/div>\n\t<div class=\"slide\"> Slide 2 <\/div>\n\t<div class=\"slide\"> Slide 3 <\/div>\n\t<div class=\"slide\"> Slide 4 <\/div>\n<\/div>\nYou can see a fully working example of the HTML structure in the simple.html file.\nInitialization\nInitialization with Vanilla Javascript\nAll you need to do is call fullPage.js before the closing <\/body> tag.\nnew fullpage('#fullpage', {\n\t\/\/options here\n\tautoScrolling:true,\n\tscrollHorizontally: true\n});\n\n\/\/methods\nfullpage_api.setAllowScrolling(false);\nInitialization with jQuery\nYou can use fullpage.js as a jQuery plugin if you want to!\n$(document).ready(function() {\n\t$('#fullpage').fullpage({\n\t\t\/\/options here\n\t\tautoScrolling:true,\n\t\tscrollHorizontally: true\n\t});\n\n\t\/\/methods\n\t$.fn.fullpage.setAllowScrolling(false);\n});\nFunctions and methods can still be called in the jQuery way, as in fullPage.js v2.X.\nVanilla JS example with all options\nA more complex initialization with all options set could look like this:\nvar myFullpage = new fullpage('#fullpage', {\n\t\/\/Navigation\n\tmenu: '#menu',\n\tlockAnchors: false,\n\tanchors:['firstPage', 'secondPage'],\n\tnavigation: false,\n\tnavigationPosition: 'right',\n\tnavigationTooltips: ['firstSlide', 'secondSlide'],\n\tshowActiveTooltip: false,\n\tslidesNavigation: false,\n\tslidesNavPosition: 'bottom',\n\n\t\/\/Scrolling\n\tcss3: true,\n\tscrollingSpeed: 700,\n\tautoScrolling: true,\n\tfitToSection: true,\n\tfitToSectionDelay: 1000,\n\tscrollBar: false,\n\teasing: 'easeInOutCubic',\n\teasingcss3: 'ease',\n\tloopBottom: false,\n\tloopTop: false,\n\tloopHorizontal: true,\n\tcontinuousVertical: false,\n\tcontinuousHorizontal: false,\n\tscrollHorizontally: false,\n\tinterlockedSlides: false,\n\tdragAndMove: false,\n\toffsetSections: false,\n\tresetSliders: false,\n\tfadingEffect: false,\n\tnormalScrollElements: '#element1, .element2',\n\tscrollOverflow: false,\n\tscrollOverflowReset: false,\n\tscrollOverflowOptions: null,\n\ttouchSensitivity: 15,\n\tbigSectionsDestination: null,\n\n\t\/\/Accessibility\n\tkeyboardScrolling: true,\n\tanimateAnchor: true,\n\trecordHistory: true,\n\n\t\/\/Design\n\tcontrolArrows: true,\n\tverticalCentered: true,\n\tsectionsColor : ['#ccc', '#fff'],\n\tpaddingTop: '3em',\n\tpaddingBottom: '10px',\n\tfixedElements: '#header, .footer',\n\tresponsiveWidth: 0,\n\tresponsiveHeight: 0,\n\tresponsiveSlides: false,\n\tparallax: false,\n\tparallaxOptions: {type: 'reveal', percentage: 62, property: 'translate'},\n\tcards: false,\n\tcardsOptions: {perspective: 100, fadeContent: true, fadeBackground: true},\n\n\t\/\/Custom selectors\n\tsectionSelector: '.section',\n\tslideSelector: '.slide',\n\n\tlazyLoading: true,\n\n\t\/\/events\n\tonLeave: function(origin, destination, direction){},\n\tafterLoad: function(origin, destination, direction){},\n\tafterRender: function(){},\n\tafterResize: function(width, height){},\n\tafterReBuild: function(){},\n\tafterResponsive: function(isResponsive){},\n\tafterSlideLoad: function(section, origin, destination, direction){},\n\tonSlideLeave: function(section, origin, destination, direction){}\n});\nCreating links to sections or slides\nIf you are using fullPage.js with anchor links for the sections (using the anchors option or the attribute data-anchor in each section), then you will be able to use anchor links also to navigate directly to a certain slide inside a section.\nThis would be an example of a link with an anchor: http:\/\/alvarotrigo.com\/fullPage\/#secondPage\/2 (which is the URL you will see once you access to that section\/slide manually)\nNotice the last part of the URL ends in #secondPage\/2.\nHaving the following initialization:\nnew fullpage('#fullpage', {\n\tanchors:['firstPage', 'secondPage', 'thirdPage']\n});\nThe anchor at the end of the URL #secondPage\/2 defines the section and slide of destination respectively. In the previous URL, the section of destination will be the one defined with the anchor secondPage and the slide will be the 2nd slide, as we are using the index 2 for it. (the fist slide of a section has index 0, as technically it is a section).\nWe could have used a custom anchor for the slide instead of its index if we would have used the attribute data-anchor on the HTML markup like so:\n<div class=\"section\">\n\t<div class=\"slide\" data-anchor=\"slide1\"> Slide 1 <\/div>\n\t<div class=\"slide\" data-anchor=\"slide2\"> Slide 2 <\/div>\n\t<div class=\"slide\" data-anchor=\"slide3\"> Slide 3 <\/div>\n\t<div class=\"slide\" data-anchor=\"slide4\"> Slide 4 <\/div>\n<\/div>\nIn this last case, the URL we would use would be #secondPage\/slide3, which is the equivalent to our previous #secondPage\/2.\nNote that section anchors can also be defined in the same way, by using the data-anchor attribute, if no anchors array is provided.\nBe careful! data-anchor tags can not have the same value as any ID element on the site (or NAME element for IE).\nCreating smaller or bigger sections\nDemo fullPage.js provides a way to remove the full height restriction from its sections and slides. It is possible to create sections which height is smaller or bigger than the viewport. This is ideal for footers.\nIt is important to realise that it doesn't make sense to have all of your sections using this feature. If there is more than one section in the initial load of the site, fullPage.js won't scroll at all to see the next one as it will be already in the viewport.\nTo create smaller sections just use the class fp-auto-height in the section you want to apply it. It will then take the height defined by your section\/slide content.\n<div class=\"section\">Whole viewport<\/div>\n<div class=\"section fp-auto-height\">Auto height<\/div>\nResponsive auto height sections\nDemo A responsive auto height can be applied by using the class fp-auto-height-responsive. This way sections will be fullscreen until the responsive mode gets fired. Then they'll take the size required by their content, which could be bigger or smaller than the viewport.\nState classes added by fullpage.js\nFullpage.js adds multiple classes in different elements to keep a record of the status of the site:\n\nactive is added the current visible section and slide.\nactive is added to the current menu element (if using the menu option).\nA class of the form fp-viewing-SECTION-SLIDE is added to the body element of the site. (eg: fp-viewing-secondPage-0) The SECTION and SLIDE parts will be the anchors (or indexes if no anchor is provided) of the current section and slide.\nfp-responsive is added to the body element when the entering in the responsive mode\nfp-enabled is added to the html element when fullpage.js is enabled. (and removed when destroyed).\nfp-destroyed is added to the fullpage.js container when fullPage.js is destroyed.\n\nLazy Loading\nDemo fullPage.js provides a way to lazy load images, videos and audio elements so they won't slow down the loading of your site or unnecessarily waste data transfer.\nWhen using lazy loading, all these elements will only get loaded when entering in the viewport.\nTo enable lazy loading all you need to do is change your src attribute to data-src as shown below:\n<img data-src=\"image.png\">\n<video>\n\t<source data-src=\"video.webm\" type=\"video\/webm\" \/>\n\t<source data-src=\"video.mp4\" type=\"video\/mp4\" \/>\n<\/video>\nIf you already use another lazy load solution which uses data-src as well, you can disable the fullPage.js lazy loading by setting the option lazyLoading: false.\nAuto play\/pause embedded media\nDemo Note: the autoplay feature might not work on some mobile devices depending on the OS and browser (i.e. Safari on iOS version < 10.0).\nPlay on section\/slide load:\nUsing the attribute autoplay for videos or audio, or the param autoplay=1 for youtube iframes will result in the media element playing on page load.\nIn order to play it on section\/slide load use instead the attribute data-autoplay. For example:\n<audio data-autoplay>\n\t<source src=\"http:\/\/metakoncept.hr\/horse.ogg\" type=\"audio\/ogg\">\n<\/audio>\nPause on leave\nEmbedded HTML5 <video> \/ <audio>  and Youtube iframes are automatically paused when you navigate away from a section or slide. This can be disabled by using the attribute data-keepplaying. For example:\n<audio data-keepplaying>\n\t<source src=\"http:\/\/metakoncept.hr\/horse.ogg\" type=\"audio\/ogg\">\n<\/audio>\nUse extensions\nfullpage.js provides a set of extensions you can use to enhance its default features. All of them are listed as fullpage.js options.\nExtensions requires you to use the minified file fullpage.extensions.min.js that is inside the dist folder instead of the usual fullPage.js file (fullpage.js or fullpage.min.js).\nOnce you acquire the extension file, you will need to add it before fullPage. For example, if I want to use the Continuous Horizontal extension, I would have include the extension file and then the extensions version of the fullPage file.\n<script type=\"text\/javascript\" src=\"fullpage.continuousHorizontal.min.js\"><\/script>\n<script type=\"text\/javascript\" src=\"fullpage\/fullpage.extensions.min.js\"><\/script>\nAn activation key and a license key will be required for each extension. See more details about it here.\nThen you will be able to use and configure them as explained in options.\nOptions\n\nlicenseKey: (default null). This option is compulsory. If you use fullPage in a non open source project, then you should use the license key provided on the purchase of the fullPage Commercial License. If your project is open source and it is compatible with the GPLv3 license you can request a license key. Please read more about licenses here and on the website. For example:\n\nnew fullpage({\n    licenseKey: 'YOUR_KEY_HERE'\n});\n\n\nv2compatible: (default false). Determines whether to make it 100% compatible with any code written for version 2, ignoring new features or api changes of version 3. State classes, callbacks signature etc. will work exactly in the same way as it did on verion 2. Note that this option will be removed at some point in the future..\n\n\ncontrolArrows: (default true) Determines whether to use control arrows for the slides to move right or left.\n\n\nverticalCentered: (default true) Vertically centering of the content within sections. When set to true, your content will be wrapped by the library. Consider using delegation or load your other scripts in the afterRender callback.\n\n\nscrollingSpeed: (default 700) Speed in milliseconds for the scrolling transitions.\n\n\nsectionsColor: (default none) Define the CSS background-color property for each section.\nExample:\n\n\nnew fullpage('#fullpage', {\n\tsectionsColor: ['#f2f2f2', '#4BBFC3', '#7BAABE', 'whitesmoke', '#000'],\n});\n\n\nanchors: (default []) Defines the anchor links (#example) to be shown on the URL for each section. Anchors value should be unique. The position of the anchors in the array will define to which sections the anchor is applied. (second position for second section and so on). Using anchors forward and backward navigation will also be possible through the browser. This option also allows users to bookmark a specific section or slide. Be careful! anchors can not have the same value as any ID element on the site (or NAME element for IE).\nNow anchors can be defined directly in the HTML structure by using the attribute data-anchor as explained here.\n\n\nlockAnchors: (default false) Determines whether anchors in the URL will have any effect at all in the library. You can still using anchors internally for your own functions and callbacks, but they won't have any effect in the scrolling of the site. Useful if you want to combine fullPage.js with other plugins using anchor in the URL.\n\n\nImportant It is helpful to understand that the values in the anchors option array correlate directly to the element with the class of .section by it's position in the markup.\n\n\neasing: (default easeInOutCubic) Defines the transition effect to use for the vertical and horizontal scrolling.\nIt requires the file vendors\/easings.min.js or jQuery UI for using some of its transitions. Other libraries could be used instead.\n\n\neasingcss3: (default ease) Defines the transition effect to use in case of using css3:true. You can use the pre-defined ones (such as linear, ease-out...) or create your own ones using the cubic-bezier function. You might want to use Matthew Lein CSS Easing Animation Tool for it.\n\n\nloopTop: (default false) Defines whether scrolling up in the first section should scroll to the last one or not.\n\n\nloopBottom: (default false) Defines whether scrolling down in the last section should scroll to the first one or not.\n\n\nloopHorizontal: (default true) Defines whether horizontal sliders will loop after reaching the last or previous slide or not.\n\n\ncss3: (default true). Defines whether to use JavaScript or CSS3 transforms to scroll within sections and slides. Useful to speed up the movement in tablet and mobile devices with browsers supporting CSS3. If this option is set to true and the browser doesn't support CSS3, a fallback will be used instead.\n\n\nautoScrolling: (default true) Defines whether to use the \"automatic\" scrolling or the \"normal\" one. It also has affects the way the sections fit in the browser\/device window in tablets and mobile phones.\n\n\nfitToSection: (default true) Determines whether or not to fit sections to the viewport or not. When set to true the current active section will always fill the whole viewport. Otherwise the user will be free to stop in the middle of a section.\n\n\nfitToSectionDelay: (default 1000). If fitToSection is set to true, this delays\nthe fitting by the configured milliseconds.\n\n\nscrollBar: (default false) Determines whether to use scroll bar for the vertical sections on site or not. In case of using scroll bar, the autoScrolling functionality will still work as expected. The user will also be free to scroll the site with the scroll bar and fullPage.js will fit the section in the screen when scrolling finishes.\n\n\npaddingTop: (default 0) Defines the top padding for each section with a numerical value and its measure (paddingTop: '10px', paddingTop: '10em'...) Useful in case of using a fixed header.\n\n\npaddingBottom: (default 0) Defines the bottom padding for each section with a numerical value and its measure (paddingBottom: '10px', paddingBottom: '10em'...). Useful in case of using a fixed footer.\n\n\nfixedElements: (default null) Defines which elements will be taken off the scrolling structure of the plugin which is necessary when using the css3 option to keep them fixed. It requires a string with the Javascript selectors for those elements. (For example: fixedElements: '#element1, .element2')\n\n\nnormalScrollElements: (default null) Demo If you want to avoid the auto scroll when scrolling over some elements, this is the option you need to use. (useful for maps, scrolling divs etc.) It requires a string with the Javascript selectors for those elements. (For example: normalScrollElements: '#element1, .element2'). This option should not be applied to any section\/slide element itself.\n\n\nbigSectionsDestination: (default null) Demo Defines how to scroll to a section which height is bigger than the viewport and when not using scrollOverflow:true. (Read how to create smaller or bigger sections). By default fullPage.js scrolls to the top if you come from a section above the destination one and to the bottom if you come from a section below the destination one. Possible values are top, bottom, null.\n\n\nkeyboardScrolling: (default true) Defines if the content can be navigated using the keyboard.\n\n\ntouchSensitivity: (default 5) Defines a percentage of the browsers window width\/height, and how far a swipe must measure for navigating to the next section \/ slide\n\n\ncontinuousVertical: (default false) Defines whether scrolling down in the last section or should scroll down to the first one and if scrolling up in the first section should scroll up to the last one. Not compatible with loopTop, loopBottom or any scroll bar present in the site (scrollBar:true or autoScrolling:false).\n\n\ncontinuousHorizontal: (default false) Extension of fullpage.js. Defines whether sliding right in the last slide should slide right to the first one or not, and if scrolling left in the first slide should slide left to the last one or not. Not compatible with loopHorizontal. Requires fullpage.js >= 3.0.1.\n\n\nscrollHorizontally: (default false) Extension of fullpage.js. Defines whether to slide horizontally within sliders by using the mouse wheel or trackpad. It can only be used when using: autoScrolling:true. Ideal for story telling. Requires fullpage.js >= 3.0.1.\n\n\ninterlockedSlides: (default false) Extension of fullpage.js. Determines whether moving one horizontal slider will force the sliding of sliders in other section in the same direction. Possible values are true, false or an array with the interlocked sections. For example [1,3,5] starting by 1. Requires fullpage.js >= 3.0.1.\n\n\ndragAndMove: (default false) Extension of fullpage.js. Enables or disables the dragging and flicking of sections and slides by using mouse or fingers. Requires fullpage.js >= 3.0.1. Possible values are:\n\ntrue: enables the feature.\nfalse: disables the feature.\nvertical: enables the feature only vertically.\nhorizontal: enables the feature only horizontally.\nfingersonly: enables the feature for touch devices only.\nmouseonly: enables the feature for desktop devices only (mouse and trackpad).\n\n\n\noffsetSections: (default false)Extension of fullpage.js. Provides a way to use non full screen sections based on percentage. Ideal to show visitors there's more content in the site by showing part of the next or previous section. Requires fullPage.js >= 3.0.1.\nTo define the percentage of each section the attribute data-percentage must be used. The centering of the section in the viewport can be determined by using a boolean value in the attribute data-centered (default to true if not specified). For example:\n\n\n    <div class=\"section\" data-percentage=\"80\" data-centered=\"true\">\n\n\nresetSliders: (default false). Extension of fullpage.js. Defines whether or not to reset every slider after leaving its section. Requires fullpage.js >= 3.0.1.\n\n\nfadingEffect: (default false). Extension of fullpage.js. Defines whether to use a fading effect or not instead of the default scrolling one. Possible values are true, false, sections, slides. It can therefore be applied just vertically or horizontally, or to both at the time. It can only be used when using: autoScrolling:true. Requires fullpage.js >= 3.0.1.\n\n\nanimateAnchor: (default true) Defines whether the load of the site when given an anchor (#) will scroll with animation to its destination or will directly load on the given section.\n\n\nrecordHistory: (default true) Defines whether to push the state of the site to the browser's history. When set to true each section\/slide of the site will act as a new page and the back and forward buttons of the browser will scroll the sections\/slides to reach the previous or next state of the site. When set to false, the URL will keep changing but will have no effect on the browser's history. This option is automatically turned off when using autoScrolling:false.\n\n\nmenu: (default false) A selector can be used to specify the menu to link with the sections. This way the scrolling of the sections will activate the corresponding element in the menu using the class active.\nThis won't generate a menu but will just add the active class to the element in the given menu with the corresponding anchor links.\nIn order to link the elements of the menu with the sections, an HTML 5 data-tag (data-menuanchor) will be needed to use with the same anchor links as used within the sections. Example:\n\n\n<ul id=\"myMenu\">\n\t<li data-menuanchor=\"firstPage\" class=\"active\"><a href=\"#firstPage\">First section<\/a><\/li>\n\t<li data-menuanchor=\"secondPage\"><a href=\"#secondPage\">Second section<\/a><\/li>\n\t<li data-menuanchor=\"thirdPage\"><a href=\"#thirdPage\">Third section<\/a><\/li>\n\t<li data-menuanchor=\"fourthPage\"><a href=\"#fourthPage\">Fourth section<\/a><\/li>\n<\/ul>\nnew fullpage('#fullpage', {\n\tanchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n\tmenu: '#myMenu'\n});\nNote: the menu element should be placed outside the fullpage wrapper in order to avoid problem when using css3:true. Otherwise it will be appended to the body by the plugin itself.\n\n\nnavigation: (default false) If set to true, it will show a navigation bar made up of small circles.\n\n\nnavigationPosition: (default none) It can be set to left or right and defines which position the navigation bar will be shown (if using one).\n\n\nnavigationTooltips: (default []) Defines the tooltips to show for the navigation circles in case they are being used. Example: navigationTooltips: ['firstSlide', 'secondSlide']. You can also define them by using the attribute data-tooltip in each section if you prefer.\n\n\nshowActiveTooltip: (default false) Shows a persistent tooltip for the actively viewed section in the vertical navigation.\n\n\nslidesNavigation: (default false) If set to true it will show a navigation bar made up of small circles for each landscape slider on the site.\n\n\nslidesNavPosition: (default bottom) Defines the position for the landscape navigation bar for sliders. Admits top and bottom as values. You may want to modify the CSS styles to determine the distance from the top or bottom as well as any other style such as color.\n\n\nscrollOverflow: (default false) defines whether or not to create a scroll for the section\/slide in case its content is bigger than the height of it. When set to true, your content will be wrapped by the plugin. Consider using delegation or load your other scripts in the afterRender callback.\nIn case of setting it to true, it requires the vendor library scrolloverflow.min.js. This file has to be loaded before the fullPage.js plugin, but after jQuery ( in case of using it).\nFor example:\n\n\n<script type=\"text\/javascript\" src=\"vendors\/scrolloverflow.min.js\"><\/script>\n<script type=\"text\/javascript\" src=\"fullpage.js\"><\/script>\nIn order to prevent fullpage.js from creating the scrollbar in certain sections or slides use the class fp-noscroll. For example: <div class=\"section fp-noscroll\">\nYou can also prevent scrolloverflow from getting applied on responsive mode when using fp-auto-height-responsive in the section element.\n\n\nscrollOverflowReset: (default false) Extension of fullpage.js. When set to true it scrolls up the content of the section\/slide with scroll bar when leaving to another vertical section. This way the section\/slide will always show the start of its content even when scrolling from a section under it.\n\n\nscrollOverflowOptions: when using scrollOverflow:true fullpage.js will make use of a forked and modified version of iScroll.js library. You can customize the scrolling behaviour by providing fullpage.js with the iScroll.js options you want to use. Check its documentation for more info.\n\n\nsectionSelector: (default .section) Defines the Javascript selector used for the plugin sections. It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.\n\n\nslideSelector: (default .slide)  Defines the Javascript selector used for the plugin slides.  It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.\n\n\nresponsiveWidth: (default 0)  A normal scroll (autoScrolling:false) will be used under the defined width in pixels. A class fp-responsive is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser's width is less than 900 the plugin will scroll like a normal site.\n\n\nresponsiveHeight: (default 0)  A normal scroll (autoScrolling:false) will be used under the defined height in pixels. A class fp-responsive is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser's height is less than 900 the plugin will scroll like a normal site.\n\n\nresponsiveSlides: (default false) Extension of fullpage.js. When set to true slides will be turned into vertical sections when responsive mode is fired. (by using the responsiveWidth or responsiveHeight options detailed above). Requires fullpage.js >= 3.0.1.\n\n\nparallax: (default false) Extension of fullpage.js. Defines whether or not to use the parallax backgrounds effects on sections \/ slides. Read more about how to apply the parallax option.\n\n\nparallaxOptions: (default: { type: 'reveal', percentage: 62, property: 'translate'}). Allows to configure the parameters for the parallax backgrounds effect when using the option parallax:true. Read more about how to apply the parallax option.\n\n\ncards: (default false) Extension of fullpage.js. Defines whether or not to use the cards effect on sections\/slides. Read more about how to apply the cards option.\n\n\ncardsOptions: (default: { perspective: 100, fadeContent: true, fadeBackground: true}). Allows you to configure the parameters for the cards effect when using the option cards:true. Read more about how to apply the cards option.\n\n\nlazyLoading: (default true) Lazy loading is active by default which means it will lazy load any media element containing the attribute data-src as detailed in the Lazy Loading docs . If you want to use any other lazy loading library you can disable this fullpage.js feature.\n\n\nMethods\nYou can see them in action here\ngetActiveSection()\nDemo Gets an Object (type Section) containing the active section and its properties.\nfullpage_api.getActiveSection();\ngetActiveSlide()\nDemo Gets an Object (type Slide) containing the active slide and its properties.\nfullpage_api.getActiveSlide();\nmoveSectionUp()\nDemo Scrolls one section up:\nfullpage_api.moveSectionUp();\n\nmoveSectionDown()\nDemo Scrolls one section down:\nfullpage_api.moveSectionDown();\n\nmoveTo(section, slide)\nDemo Scrolls the page to the given section and slide. The first section will have the index 1 whilst the first slide, the visible one by default, will have index 0.\n\/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide *\/\nfullpage_api.moveTo('firstSlide', 2);\n\/\/Scrolling to the 3rd section (with index 3) in the site\nfullpage_api.moveTo(3, 0);\n\n\/\/Which is the same as\nfullpage_api.moveTo(3);\n\nsilentMoveTo(section, slide)\nDemo\nExactly the same as moveTo but in this case it performs the scroll without animation. A direct jump to the destination.\n\/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide *\/\nfullpage_api.silentMoveTo('firstSlide', 2);\n\nmoveSlideRight()\nDemo\nScrolls the horizontal slider of the current section to the next slide:\nfullpage_api.moveSlideRight();\n\nmoveSlideLeft()\nDemo\nScrolls the horizontal slider of the current section to the previous slide:\nfullpage_api.moveSlideLeft();\n\nsetAutoScrolling(boolean)\nDemo Sets the scrolling configuration in real time.\nDefines the way the page scrolling behaves. If it is set to true, it will use the \"automatic\" scrolling, otherwise, it will use the \"manual\" or \"normal\" scrolling of the site.\nfullpage_api.setAutoScrolling(false);\n\nsetFitToSection(boolean)\nDemo\nSets the value for the option fitToSection determining whether to fit the section in the screen or not.\nfullpage_api.setFitToSection(false);\n\nfitToSection()\nDemo\nScrolls to the nearest active section fitting it in the viewport.\nfullpage_api.fitToSection();\n\nsetLockAnchors(boolean)\nDemo\nSets the value for the option lockAnchors determining whether anchors will have any effect in the URL or not.\nfullpage_api.setLockAnchors(false);\n\nsetAllowScrolling(boolean, [directions])\nDemo Adds or remove the possibility of scrolling through sections\/slides by using the mouse wheel\/trackpad or touch gestures (which is active by default). Note this won't disable the keyboard scrolling. You\nwould need to use setKeyboardScrolling for it.\n\ndirections: (optional parameter) Admitted values: all, up, down, left, right or a combination of them separated by commas like down, right. It defines the direction for which the scrolling will be enabled or disabled.\n\n\/\/disabling scrolling\nfullpage_api.setAllowScrolling(false);\n\n\/\/disabling scrolling down\nfullpage_api.setAllowScrolling(false, 'down');\n\n\/\/disabling scrolling down and right\nfullpage_api.setAllowScrolling(false, 'down, right');\n\nsetKeyboardScrolling(boolean, [directions])\nDemo Adds or remove the possibility of scrolling through sections by using the keyboard (which is active by default).\n\ndirections: (optional parameter) Admitted values: all, up, down, left, right or a combination of them separated by commas like down, right. It defines the direction for which the scrolling will be enabled or disabled.\n\n\/\/disabling all keyboard scrolling\nfullpage_api.setKeyboardScrolling(false);\n\n\/\/disabling keyboard scrolling down\nfullpage_api.setKeyboardScrolling(false, 'down');\n\n\/\/disabling keyboard scrolling down and right\nfullpage_api.setKeyboardScrolling(false, 'down, right');\n\nsetRecordHistory(boolean)\nDemo Defines whether to record the history for each hash change in the URL.\nfullpage_api.setRecordHistory(false);\n\nsetScrollingSpeed(milliseconds)\nDemo Defines the scrolling speed in milliseconds.\nfullpage_api.setScrollingSpeed(700);\n\ndestroy(type)\nDemo Destroys the plugin events and optionally its HTML markup and styles.\nIdeal to use when using AJAX to load content.\n\ntype: (optional parameter) can be empty or all. If all is passed, the HTML markup and styles used by fullpage.js will be removed. This way the original HTML markup, the one used before any plugin modification is made, will be maintained.\n\n\/\/destroying all Javascript events created by fullPage.js (scrolls, hashchange in the URL...)\nfullpage_api.destroy();\n\n\/\/destroying all Javascript events and any modification done by fullPage.js over your original HTML markup.\nfullpage_api.destroy('all');\n\nreBuild()\nUpdates the DOM structure to fit the new window size or its contents.\nIdeal to use in combination with AJAX calls or external changes in the DOM structure of the site, specially when using scrollOverflow:true.\nfullpage_api.reBuild();\n\nsetResponsive(boolean)\nDemo Sets the responsive mode of the page. When set to true the autoScrolling will be turned off and the result will be exactly the same one as when the responsiveWidth or responsiveHeight options  get fired.\nfullpage_api.setResponsive(true);\n\nresponsiveSlides.toSections()\nExtension of fullpage.js. Requires fullpage.js >= 3.0.1.\nTurns horizontal slides into vertical sections.\nfullpage_api.responsiveSlides.toSections();\n\nresponsiveSlides.toSlides()\nExtension of fullpage.js. Requires fullpage.js >= 3.0.1.\nTurns back the original slides (now converted into vertical sections) into horizontal slides again.\nfullpage_api.responsiveSlides.toSlides();\nCallbacks\nDemo You can see them in action here.\nSome callbacks, such as onLeave will contain Object type of parameters containing the following properties:\n\nanchor: (String) item's anchor.\nindex: (Number) item's index.\nitem: (DOM element) item element.\nisFirst: (Boolean) determines if the item is the first child.\nisLast: (Boolean) determines if the item is the last child.\n\nafterLoad (origin, destination, direction)\nCallback fired once the sections have been loaded, after the scrolling has ended.\nParameters:\n\norigin: (Object) section of origin.\ndestination: (Object) destination section.\ndirection: (String) it will take the values up or down depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tanchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n\n\tafterLoad: function(origin, destination, direction){\n\t\tvar loadedSection = this;\n\n\t\t\/\/using index\n\t\tif(origin.index == 2){\n\t\t\talert(\"Section 3 ended loading\");\n\t\t}\n\n\t\t\/\/using anchorLink\n\t\tif(origin.anchor == 'secondSlide'){\n\t\t\talert(\"Section 2 ended loading\");\n\t\t}\n\t}\n});\n\nonLeave (origin, destination, direction)\nThis callback is fired once the user leaves a section, in the transition to the new section.\nReturning false will cancel the move before it takes place.\nParameters:\n\norigin:  (Object) section of origin.\ndestination: (Object) destination section.\ndirection: (String) it will take the values up or down depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tonLeave: function(origin, destination, direction){\n\t\tvar leavingSection = this;\n\n\t\t\/\/after leaving section 2\n\t\tif(origin.index == 1 && direction =='down'){\n\t\t\talert(\"Going to section 3!\");\n\t\t}\n\n\t\telse if(origin.index == 1 && direction == 'up'){\n\t\t\talert(\"Going to section 1!\");\n\t\t}\n\t}\n});\nCancelling the scroll before it takes place\nYou can cancel the scroll by returning false on the onLeave callback:\nnew fullpage('#fullpage', {\n\tonLeave: function(origin, destination, direction){\n\t\t\/\/it won't scroll if the destination is the 3rd section\n\t\tif(destination.index == 2){\n\t\t\treturn false;\n\t\t}\n\t}\n});\n\nafterRender()\nThis callback is fired just after the structure of the page is generated. This is the callback you want to use to initialize other plugins or fire any code which requires the document to be ready (as this plugin modifies the DOM to create the resulting structure). See FAQs for more info.\nExample:\nnew fullpage('#fullpage', {\n\tafterRender: function(){\n\t\tvar pluginContainer = this;\n\t\talert(\"The resulting DOM structure is ready\");\n\t}\n});\n\nafterResize(width, height)\nThis callback is fired after resizing the browser's window. Just after the sections are resized.\nParameters:\n\nwidth:  (Number) window's width.\nheight: (Number) window's height.\n\nExample:\nnew fullpage('#fullpage', {\n\tafterResize: function(width, height){\n\t\tvar fullpageContainer = this;\n\t\talert(\"The sections have finished resizing\");\n\t}\n});\n\nafterReBuild()\nThis callback is fired after manually re-building fullpage.js by calling fullpage_api.reBuild().\nExample:\nnew fullpage('#fullpage', {\n\tafterReBuild: function(){\n\t\tconsole.log(\"fullPage.js has manually being re-builded\");\n\t}\n});\n\nafterResponsive(isResponsive)\nThis callback is fired after fullpage.js changes from normal to responsive mode or from responsive mode to normal mode.\nParameters:\n\nisResponsive: (Boolean) determines if it enters into responsive mode (true) or goes back to normal mode (false).\n\nExample:\nnew fullpage('#fullpage', {\n\tafterResponsive: function(isResponsive){\n\t\talert(\"Is responsive: \" + isResponsive);\n\t}\n});\n\nafterSlideLoad (section, origin, destination, direction)\nCallback fired once the slide of a section have been loaded, after the scrolling has ended.\nParameters:\n\nsection: (Object) active vertical section.\norigin: (Object) horizontal slide of origin.\ndestination: (Object) destination horizontal slide.\ndirection: (String) right or left depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tanchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n\n\tafterSlideLoad: function( section, origin, destination, direction){\n\t\tvar loadedSlide = this;\n\n\t\t\/\/first slide of the second section\n\t\tif(section.anchor == 'secondPage' && destination.index == 1){\n\t\t\talert(\"First slide loaded\");\n\t\t}\n\n\t\t\/\/second slide of the second section (supposing #secondSlide is the\n\t\t\/\/anchor for the second slide)\n\t\tif(section.index == 1 && destination.anchor == 'secondSlide'){\n\t\t\talert(\"Second slide loaded\");\n\t\t}\n\t}\n});\n\nonSlideLeave (section, origin, destination, direction)\nThis callback is fired once the user leaves an slide to go to another, in the transition to the new slide.\nReturning false will cancel the move before it takes place.\nParameters:\n\nsection: (Object) active vertical section.\norigin: (Object) horizontal slide of origin.\ndestination: (Object) destination horizontal slide.\ndirection: (String) right or left depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tonSlideLeave: function( section, origin, destination, direction){\n\t\tvar leavingSlide = this;\n\n\t\t\/\/leaving the first slide of the 2nd Section to the right\n\t\tif(section.index == 1 && origin.index == 0 && direction == 'right'){\n\t\t\talert(\"Leaving the fist slide!!\");\n\t\t}\n\n\t\t\/\/leaving the 3rd slide of the 2nd Section to the left\n\t\tif(section.index == 1 && origin.index == 2 && direction == 'left'){\n\t\t\talert(\"Going to slide 2! \");\n\t\t}\n\t}\n});\nCancelling a move before it takes place\nYou can cancel a move by returning false on the onSlideLeave callback. Same as when canceling a movement with onLeave.\nReporting issues\n\nPlease, look for your issue before asking using the github issues search.\nMake sure you use the latest fullpage.js version. No support is provided for older versions.\nUse the the Github Issues forum to create issues.\nAn isolated reproduction of the issue will be required. Make use of jsfiddle or codepen for it if possible.\n\nContributing to fullpage.js\nPlease see Contributing to fullpage.js\nChangelog\nTo see the list of recent changes, see Releases section.\nBuild tasks\nWant to build fullpage.js distribution files? Please see Build Tasks\nResources\n\nWordpress Plugin for Gutenberg and for Elementor.\nWordpress theme\nOfficial Vue.js wrapper component\nOfficial React.js wrapper component\nOfficial Angular wrapper component\nCSS Easing Animation Tool - Matthew Lein (useful to define the easingcss3 value)\nfullPage.js jsDelivr CDN\nfullPage.js plugin for October CMS\nfullPage.js Angular2 directive\nfullPage.js angular directive\nfullPage.js ember-cli addon\nfullPage.js Rails Ruby Gem\nAngular fullPage.js - Adaptation for Angular.js v1.x\nIntegrating fullPage.js with Wordpress (Tutorial)\nWordpress Plugin for Divi\nWordpress Plugin for Elementor\n\nWho is using fullPage.js\nIf you want your page to be listed here, please contact me with the URL.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhttps:\/\/www.coca-colacompany.com\/annual-review\/2017\/index.html\nhttp:\/\/www.bbc.co.uk\/news\/resources\/idt-d88680d1-26f2-4863-be95-83298fd01e02\nhttp:\/\/www.newjumoconcept.com\/\nhttp:\/\/www.shootinggalleryasia.com\/\nhttp:\/\/medoff.ua\/en\/\nhttp:\/\/promo.prestigio.com\/grace1\/\nhttp:\/\/torchbrowser.com\/\nhttp:\/\/thekorner.fr\/\nhttp:\/\/charlotteaimes.com\/\nhttp:\/\/www.boxreload.com\/\nhttp:\/\/educationaboveall.org\/\nhttp:\/\/usescribe.com\/\nhttp:\/\/boxx.hk\/\nhttp:\/\/www.sanyang.com.tw\/service\/Conception\/\nhttp:\/\/trasmissione-energia.terna.it\/\nhttp:\/\/www.villareginateodolinda.it\nhttp:\/\/www.kesstrio.com\nhttp:\/\/ded-morozz.kiev.ua\/\nhttp:\/\/dancingroad.com\nhttp:\/\/www.camanihome.com\/\n\nYou can find another list here.\nDonations\nDonations would be more than welcome :)\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor] | [Become a patreon]\n\n\n\n\nPeople\n\n\n\n","68":"\n\n\n\n\nAPI creation made simple, secure and fast.\nThe most advanced open-source headless CMS to build powerful APIs with no effort.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStrapi is a free and open-source headless CMS delivering your content anywhere you need.\n\nKeep control over your data. With Strapi, you know where your data is stored, and you keep full control at all times.\nSelf-hosted. You can host and scale Strapi projects the way you want. You can choose any hosting platform you want: AWS, Netlify, Heroku, a VPS, or a dedicated server. You can scale as you grow, 100% independent.\nDatabase agnostic. You can choose the database you prefer. Strapi works with SQL & NoSQL databases: MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.\nCustomizable. You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.\n\nGetting Started\nRead the Getting Started tutorial or follow the steps below:\n\u23f3 Installation\nInstall Strapi with this Quickstart command to create a Strapi project instantly:\n\n(Use yarn to install the Strapi project (recommended). Install yarn with these docs.)\n\nyarn create strapi-app my-project --quickstart\nor\n\n(Use npm\/npx to install the Strapi project.)\n\nnpx create-strapi-app my-project --quickstart\nThis command generates a brand new project with the default features (authentication, permissions, content management, content type builder & file upload). The Quickstart command installs Strapi using a SQLite database which is used for prototyping in development.\nEnjoy \ud83c\udf89\n\ud83d\udd90 Requirements\nComplete installation requirements can be found in the documentation under Installation Requirements.\nSupported operating systems:\n\nUbuntu 18.04\/Debian 9.x\nCentOS\/RHEL 8\nmacOS Mojave\nWindows 10\nDocker - Docker-Repo\n\n(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)\nNode:\n\nNodeJS >= 10.16 <=14\nNPM >= 6.x\n\nDatabase:\n\nMongoDB >= 3.6\nMySQL >= 5.6\nMariaDB >= 10.1\nPostgreSQL >= 10\nSQLite >= 3\n\nWe recommend always using the latest version of Strapi to start your new projects.\nFeatures\n\nModern Admin Panel: Elegant, entirely customizable and a fully extensible admin panel.\nSecure by default: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.\nPlugins Oriented: Install the auth system, content management, custom plugins, and more, in seconds.\nBlazing Fast: Built on top of Node.js, Strapi delivers amazing performance.\nFront-end Agnostic: Use any front-end framework (React, Vue, Angular, etc.), mobile apps or even IoT.\nPowerful CLI: Scaffold projects and APIs on the fly.\nSQL & NoSQL databases: Works with MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.\n\nSee more on our website.\nContributing\nPlease read our Contributing Guide before submitting a Pull Request to the project.\nCommunity support\nFor general help using Strapi, please refer to the official Strapi documentation. For additional help, you can use one of these channels to ask a question:\n\nSlack (For live discussion with the Community and Strapi team)\nGitHub (Bug reports, Contributions)\nCommunity Forum (Questions and Discussions)\nProductBoard (Roadmap, Feature requests)\nTwitter (Get the news fast)\nFacebook\nYouTube Channel (Learn from Video Tutorials)\n\nMigration\nFollow our migration guides on the documentation to keep your projects up-to-date.\nRoadmap\nCheck out our roadmap to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.\nLicense\nSee the LICENSE file for licensing information.\n","69":"\n\n\n\n\n\u963f\u91cc\u62dbp6\/p7 nodejs \/ Python\uff0c\u652f\u6301\u8fdc\u7a0b\u9762\u8bd5 | gaojunqi@outlook.com | \u4e0a\u6d77 \nchinese-poetry: \u6700\u5168\u4e2d\u6587\u8bd7\u6b4c\u53e4\u5178\u6587\u96c6\u6570\u636e\u5e93\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u6700\u5168\u7684\u4e2d\u534e\u53e4\u5178\u6587\u96c6\u6570\u636e\u5e93\uff0c\u5305\u542b 5.5 \u4e07\u9996\u5510\u8bd7\u300126 \u4e07\u9996\u5b8b\u8bd7\u30012.1 \u4e07\u9996\u5b8b\u8bcd\u548c\u5176\u4ed6\u53e4\u5178\u6587\u96c6\u3002\u8bd7\u4eba\u5305\u62ec\u5510\u5b8b\u4e24\u671d\u8fd1 1.4 \u4e07\u53e4\u8bd7\u4eba\uff0c\u548c\u4e24\u5b8b\u65f6\u671f 1.5 \u5343\u53e4\u8bcd\u4eba\u3002\u6570\u636e\u6765\u6e90\u4e8e\u4e92\u8054\u7f51\u3002\n\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e2a\u4ed3\u5e93? \u53e4\u8bd7\u662f\u4e2d\u534e\u6c11\u65cf\u4e43\u81f3\u5168\u4e16\u754c\u7684\u7470\u5b9d\uff0c\u6211\u4eec\u5e94\u8be5\u4f20\u627f\u4e0b\u53bb\uff0c\u867d\u7136\u6709\u53e4\u5178\u6587\u96c6\uff0c\u4f46\u5927\u591a\u6570\u4eba\u5e76\u6ca1\u6709\u62e5\u6709\u8fd9\u4e9b\u4e66\u7c4d\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u8fd9\u4e9b\u5e9e\u5927\u7684\u6587\u96c6\u79bb\u6211\u4eec\u662f\u6709\u4e00\u5b9a\u8ddd\u79bb\u7684\u3002\u800c\u7535\u5b50\u7248\u65b9\u4fbf\u62f7\u8d1d\uff0c\u6240\u4ee5\u6b64\u5f00\u6e90\u6570\u636e\u5e93\u8bde\u751f\u4e86\u3002\u6b64\u6570\u636e\u5e93\u901a\u8fc7 JSON \u683c\u5f0f\u5206\u53d1\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5f88\u65b9\u4fbf\u7684\u5f00\u59cb\u4f60\u7684\u9879\u76ee\u3002\n\u53e4\u8bd7\u91c7\u96c6\u6ca1\u6709\u8bb0\u5f55\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u53e4\u8bd7\u6570\u636e\u5e9e\u5927\uff0c\u76ee\u6807\u7f51\u7ad9\u6709\u9650\u5236\uff0c\u91c7\u96c6\u8fc7\u7a0b\u7ecf\u5e38\u4e2d\u65ad\u8d85\u8fc7\u4e86\u4e00\u4e2a\u661f\u671f\u30022017 \u5e74\u65b0\u52a0\u5165\u5168\u5b8b\u8bcd\uff0c\u5168\u5b8b\u8bcd\u722c\u53d6\u8fc7\u7a0b\u53ca\u6570\u636e\u5206\u6790\u3002\n\u9ad8\u9891\u8bcd\u5206\u6790\u56fe\n\n\u5b8b\u8bcd\u53d7\u6b22\u8fce\u7684\u8bcd\u724c\u540d\n\n\n\n\n\n\u5b8b\u8bcd\u9ad8\u9891\u8bcd\n\n\n\n\u5b8b\u8bcd\u4f5c\u8005\u4f5c\u54c1\u699c\n\n\n\n\u5510\u8bd7\u9ad8\u9891\u8bcd\n\n\n\n\u5510\u8bd7\u4f5c\u8005\u4f5c\u54c1\u699c\n\n\n\n\u5b8b\u8bd7\u9ad8\u9891\u8bcd\n\n\n\n\u5b8b\u8bd7\u4f5c\u8005\u4f5c\u54c1\u699c\n\n\n\u6570\u636e\u96c6\n\n\u5168\u5510\u8bd7 json\n\u5168\u5b8b\u8bd7 json\n\u5168\u5b8b\u8bcd ci\n\u4e94\u4ee3\u00b7\u82b1\u95f4\u96c6 wudai\/huajianji\n\u4e94\u4ee3\u00b7\u5357\u5510\u4e8c\u4e3b\u8bcd wudai\/nantan\n\u8bba\u8bed lunyu\n\u8bd7\u7ecf shijing\n\u5e7d\u68a6\u5f71 youmengying\n\u56db\u4e66\u4e94\u7ecf sishuwujing\n\u8499\u5b78 mengxue\n\n\u8d21\u732e\n\u672c\u9879\u76ee\u76ee\u7684\u662f\u501f\u52a9\u6280\u672f\u6765\u751f\u6210\u683c\u5f0f\u5316(JSON)\u6570\u636e\uff0c\u8ba9\u5f00\u53d1\u8005\u66f4\u65b9\u4fbf\u5feb\u901f\u7684\u6784\u5efa\u8bd7\u8bcd\u7c7b\u5e94\u7528\u7a0b\u5e8f\u3002\u8eab\u5355\u529b\u8584\uff0c\u6b22\u8fce\u66f4\u591a\u4eba\u6765\u7ef4\u62a4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u53c2\u4e0e\u8d21\u732e\uff1a\n\n\n\u76f4\u63a5\u63d0\u4ea4 PR \u6216\u8005\u901a\u8fc7 issue \u8ba8\u8bba\u6765\u4f18\u5316\u5b8c\u5584\u6b64\u6570\u636e\u5e93\uff0c\u7406\u8bba\u4e0a\u53e4\u8bd7\u6b4c\u4f53\u975e\u5b97\u6559\u7c7b\u90fd\u6b22\u8fce\u52a0\u5165\uff0c\u90e8\u5206\u6709\u4e89\u8bae\u6027\u7684\u6570\u636e\u9700\u8981\u793e\u533a\u6295\u7968\u8ba8\u8bba\u51b3\u5b9a\u662f\u5426\u52a0\u5165\u3002\u5173\u4e8e\u8bd7\u53e5\u7684\u7ea0\u9519\u5728\u521b\u5efa PR \u65f6\u8bf7\u6807\u660e\u51fa\u5904\u3002\u66f4\u591a\u89c4\u8303\u8bf7\u53c2\u8003\u8d21\u732e\u89c4\u8303\u6587\u6863\u3002\n\n\n\u5982\u679c\u4f60\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u53c2\u4e0e\u5b8c\u5584\u7684\u8fc7\u7a0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u300cPatreon \u5468\u671f\u6027\u8d5e\u52a9\u300d\u7684\u5f62\u5f0f\u6765\u6301\u7eed\u5e2e\u52a9\u5e76\u6fc0\u52b1\u6211\u53bb\u4f18\u5316\u5b8c\u5584\u6b64\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u4e0d\u559c\u6b22\u5468\u671f\u6027\u8d5e\u52a9\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u300c\u652f\u4ed8\u5b9d\u300d\u6216\u8005\u300c\u5fae\u4fe1\u8d5e\u8d4f\u7801\u300d\u8fdb\u884c\u4e00\u6b21\u6027\u8d5e\u52a9(\u5907\u6ce8\u7559\u4e0b\u90ae\u7bb1)\u3002\n\n\n\u5982\u6709\u5efa\u8bae\u6216\u5410\u69fd\uff0c\u6b22\u8fce\u8054\u7cfb\u6211\u7684\u90ae\u7bb1 gaojunqi@outlook.com\u3002\n\n\n\u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u5f62\u5f0f\u8d21\u732e\u6700\u7ec8\u90fd\u4f1a\u4f7f\u4e4b\u53d8\u5f97\u66f4\u597d\uff01\n\u8d5e\u52a9\u8005\n\u4e0a\u6d77\u9006\u884c\u4fe1\u606f\u79d1\u6280\n\u8d21\u732e\u8005\n\n\n\n\u6848\u4f8b\u5c55\u793a\n\n\u6848\u4f8b\u5c55\u793a\n\n\u4e2d\u6587\u8bd7\u6b4c\u4e3b\u9875\u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8bd7\u8bcd\u7f51\u7ad9\uff0c\u5305\u542b\u5510\u8bd7\u4e09\u767e\u9996\u3001\u5b8b\u8bcd\u4e09\u767e\u9996\u7b49\u6587\u96c6\u3002\nanimalize \/ QuanTangshi \u79bb\u7ebf\u5168\u5510\u8bd7 Android\njustdark \/ pytorch-poetry-gen a char-RNN based on pytorch\nClover27 \/ ancient-Chinese-poem-generator Ancient-Chinese-Poem-Generator\nchinese-poetry \/ poetry-calendar \u8bd7\u8bcd\u5468\u5386\nchenyuntc \/ pytorch-book \u7b80\u4f53\u5510\u8bd7\u751f\u6210(char-RNN)\uff0c\u53ef\u751f\u6210\u85cf\u5934\u8bd7\uff0c\u81ea\u5b9a\u4e49\u8bd7\u6b4c\u610f\u5883\uff0c\u524d\u7f00\u7b49\nokcy1016 \/ poetry-desktop \u8bd7\u8bcd\u684c\u9762\nhuangjianke \/ weapp-poem \u8bd7\u8bcd\u58a8\u5ba2 \u5c0f\u7a0b\u5e8f\u7248\n\u6c49\u5b57\u4e4b\u7f8e\u6c49\u5b57\u4e4b\u7f8e\u662f\u4e00\u4e2a\u65b9\u4fbf\u67e5\u8be2\u7684\u8bd7\u8bcd\u7f51\u7ad9\uff0c\u7b80\u6d01\u5e72\u51c0\uff0c\u65b9\u4fbf\u4f7f\u7528\u3002\n\n\nLicense\nMIT \u8bb8\u53ef\u8bc1\u3002\n","70":"Immutable collections for JavaScript\n \nImmutable data cannot be changed once created, leading to much simpler\napplication development, no defensive copying, and enabling advanced memoization\nand change detection techniques with simple logic. Persistent data presents\na mutative API which does not update the data in-place, but instead always\nyields new updated data.\nImmutable.js provides many Persistent Immutable data structures including:\nList, Stack, Map, OrderedMap, Set, OrderedSet and Record.\nThese data structures are highly efficient on modern JavaScript VMs by using\nstructural sharing via hash maps tries and vector tries as popularized\nby Clojure and Scala, minimizing the need to copy or cache data.\nImmutable.js also provides a lazy Seq, allowing efficient\nchaining of collection methods like map and filter without creating\nintermediate representations. Create some Seq with Range and Repeat.\nWant to hear more? Watch the presentation about Immutable.js:\n\nGetting started\nInstall immutable using npm.\nnpm install immutable\nThen require it into any module.\nconst { Map } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = map1.set('b', 50);\nmap1.get('b') + \" vs. \" + map2.get('b'); \/\/ 2 vs. 50\nBrowser\nImmutable.js has no dependencies, which makes it predictable to include in a Browser.\nIt's highly recommended to use a module bundler like webpack,\nrollup, or\nbrowserify. The immutable npm module works\nwithout any additional consideration. All examples throughout the documentation\nwill assume use of this kind of tool.\nAlternatively, Immutable.js may be directly included as a script tag. Download\nor link to a CDN such as CDNJS\nor jsDelivr.\nUse a script tag to directly add Immutable to the global scope:\n<script src=\"immutable.min.js\"><\/script>\n<script>\n  var map1 = Immutable.Map({ a: 1, b: 2, c: 3 });\n  var map2 = map1.set('b', 50);\n  map1.get('b'); \/\/ 2\n  map2.get('b'); \/\/ 50\n<\/script>\nOr use an AMD-style loader (such as RequireJS):\nrequire(['.\/immutable.min.js'], function (Immutable) {\n  var map1 = Immutable.Map({ a: 1, b: 2, c: 3 });\n  var map2 = map1.set('b', 50);\n  map1.get('b'); \/\/ 2\n  map2.get('b'); \/\/ 50\n});\nFlow & TypeScript\nUse these Immutable collections and sequences as you would use native\ncollections in your Flowtype or TypeScript programs while still taking\nadvantage of type generics, error detection, and auto-complete in your IDE.\nInstalling immutable via npm brings with it type definitions for Flow (v0.55.0 or higher)\nand TypeScript (v2.1.0 or higher), so you shouldn't need to do anything at all!\nUsing TypeScript with Immutable.js v4\nImmutable.js type definitions embrace ES2015. While Immutable.js itself supports\nlegacy browsers and environments, its type definitions require TypeScript's 2015\nlib. Include either \"target\": \"es2015\" or \"lib\": \"es2015\" in your\ntsconfig.json, or provide --target es2015 or --lib es2015 to the\ntsc command.\nconst { Map } = require(\"immutable\");\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = map1.set('b', 50);\nmap1.get('b') + \" vs. \" + map2.get('b'); \/\/ 2 vs. 50\nUsing TypeScript with Immutable.js v3 and earlier:\nPrevious versions of Immutable.js include a reference file which you can include\nvia relative path to the type definitions at the top of your file.\n\/\/\/<reference path='.\/node_modules\/immutable\/dist\/immutable.d.ts'\/>\nimport Immutable from require('immutable');\nvar map1: Immutable.Map<string, number>;\nmap1 = Immutable.Map({ a: 1, b: 2, c: 3 });\nvar map2 = map1.set('b', 50);\nmap1.get('b'); \/\/ 2\nmap2.get('b'); \/\/ 50\nThe case for Immutability\nMuch of what makes application development difficult is tracking mutation and\nmaintaining state. Developing with immutable data encourages you to think\ndifferently about how data flows through your application.\nSubscribing to data events throughout your application creates a huge overhead of\nbook-keeping which can hurt performance, sometimes dramatically, and creates\nopportunities for areas of your application to get out of sync with each other\ndue to easy to make programmer error. Since immutable data never changes,\nsubscribing to changes throughout the model is a dead-end and new data can only\never be passed from above.\nThis model of data flow aligns well with the architecture of React\nand especially well with an application designed using the ideas of Flux.\nWhen data is passed from above rather than being subscribed to, and you're only\ninterested in doing work when something has changed, you can use equality.\nImmutable collections should be treated as values rather than objects. While\nobjects represent some thing which could change over time, a value represents\nthe state of that thing at a particular instance of time. This principle is most\nimportant to understanding the appropriate use of immutable data. In order to\ntreat Immutable.js collections as values, it's important to use the\nImmutable.is() function or .equals() method to determine value equality\ninstead of the === operator which determines object reference identity.\nconst { Map } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = Map({ a: 1, b: 2, c: 3 });\nmap1.equals(map2); \/\/ true\nmap1 === map2; \/\/ false\nNote: As a performance optimization Immutable.js attempts to return the existing\ncollection when an operation would result in an identical collection, allowing\nfor using === reference equality to determine if something definitely has not\nchanged. This can be extremely useful when used within a memoization function\nwhich would prefer to re-run the function if a deeper equality check could\npotentially be more costly. The === equality check is also used internally by\nImmutable.is and .equals() as a performance optimization.\nconst { Map } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = map1.set('b', 2); \/\/ Set to same value\nmap1 === map2; \/\/ true\nIf an object is immutable, it can be \"copied\" simply by making another reference\nto it instead of copying the entire object. Because a reference is much smaller\nthan the object itself, this results in memory savings and a potential boost in\nexecution speed for programs which rely on copies (such as an undo-stack).\nconst { Map } = require('immutable');\nconst map = Map({ a: 1, b: 2, c: 3 });\nconst mapCopy = map; \/\/ Look, \"copies\" are free!\nJavaScript-first API\nWhile Immutable.js is inspired by Clojure, Scala, Haskell and other functional\nprogramming environments, it's designed to bring these powerful concepts to\nJavaScript, and therefore has an Object-Oriented API that closely mirrors that\nof ES2015 Array, Map, and Set.\nThe difference for the immutable collections is that methods which would mutate\nthe collection, like push, set, unshift or splice, instead return a new\nimmutable collection. Methods which return new arrays, like slice or concat,\ninstead return new immutable collections.\nconst { List } = require('immutable');\nconst list1 = List([ 1, 2 ]);\nconst list2 = list1.push(3, 4, 5);\nconst list3 = list2.unshift(0);\nconst list4 = list1.concat(list2, list3);\nassert.equal(list1.size, 2);\nassert.equal(list2.size, 5);\nassert.equal(list3.size, 6);\nassert.equal(list4.size, 13);\nassert.equal(list4.get(0), 1);\nAlmost all of the methods on Array will be found in similar form on\nImmutable.List, those of Map found on Immutable.Map, and those of Set\nfound on Immutable.Set, including collection operations like forEach()\nand map().\nconst { Map } = require('immutable');\nconst alpha = Map({ a: 1, b: 2, c: 3, d: 4 });\nalpha.map((v, k) => k.toUpperCase()).join();\n\/\/ 'A,B,C,D'\nConvert from raw JavaScript objects and arrays.\nDesigned to inter-operate with your existing JavaScript, Immutable.js\naccepts plain JavaScript Arrays and Objects anywhere a method expects a\nCollection.\nconst { Map, List } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3, d: 4 });\nconst map2 = Map({ c: 10, a: 20, t: 30 });\nconst obj = { d: 100, o: 200, g: 300 };\nconst map3 = map1.merge(map2, obj);\n\/\/ Map { a: 20, b: 2, c: 10, d: 100, t: 30, o: 200, g: 300 }\nconst list1 = List([ 1, 2, 3 ]);\nconst list2 = List([ 4, 5, 6 ]);\nconst array = [ 7, 8, 9 ];\nconst list3 = list1.concat(list2, array);\n\/\/ List [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\nThis is possible because Immutable.js can treat any JavaScript Array or Object\nas a Collection. You can take advantage of this in order to get sophisticated\ncollection methods on JavaScript Objects, which otherwise have a very sparse\nnative API. Because Seq evaluates lazily and does not cache intermediate\nresults, these operations can be extremely efficient.\nconst { Seq } = require('immutable');\nconst myObject = { a: 1, b: 2, c: 3 };\nSeq(myObject).map(x => x * x).toObject();\n\/\/ { a: 1, b: 4, c: 9 }\nKeep in mind, when using JS objects to construct Immutable Maps, that\nJavaScript Object properties are always strings, even if written in a quote-less\nshorthand, while Immutable Maps accept keys of any type.\nconst { fromJS } = require('immutable');\n\nconst obj = { 1: \"one\" };\nconsole.log(Object.keys(obj)); \/\/ [ \"1\" ]\nconsole.log(obj[\"1\"], obj[1]); \/\/ \"one\", \"one\"\n\nconst map = fromJS(obj);\nconsole.log(map.get(\"1\"), map.get(1)); \/\/ \"one\", undefined\nProperty access for JavaScript Objects first converts the key to a string, but\nsince Immutable Map keys can be of any type the argument to get() is\nnot altered.\nConverts back to raw JavaScript objects.\nAll Immutable.js Collections can be converted to plain JavaScript Arrays and\nObjects shallowly with toArray() and toObject() or deeply with toJS().\nAll Immutable Collections also implement toJSON() allowing them to be passed\nto JSON.stringify directly. They also respect the custom toJSON() methods of\nnested objects.\nconst { Map, List } = require('immutable');\nconst deep = Map({ a: 1, b: 2, c: List([ 3, 4, 5 ]) });\nconsole.log(deep.toObject()); \/\/ { a: 1, b: 2, c: List [ 3, 4, 5 ] }\nconsole.log(deep.toArray()); \/\/ [ 1, 2, List [ 3, 4, 5 ] ]\nconsole.log(deep.toJS()); \/\/ { a: 1, b: 2, c: [ 3, 4, 5 ] }\nJSON.stringify(deep); \/\/ '{\"a\":1,\"b\":2,\"c\":[3,4,5]}'\nEmbraces ES2015\nImmutable.js supports all JavaScript environments, including legacy\nbrowsers (even IE8). However it also takes advantage of features added to\nJavaScript in ES2015, the latest standard version of JavaScript, including\nIterators, Arrow Functions, Classes, and Modules. It's inspired\nby the native Map and Set collections added to ES2015.\nAll examples in the Documentation are presented in ES2015. To run in all\nbrowsers, they need to be translated to ES5.\n\/\/ ES2015\nconst mapped = foo.map(x => x * x);\n\/\/ ES5\nvar mapped = foo.map(function (x) { return x * x; });\nAll Immutable.js collections are Iterable, which allows them to be\nused anywhere an Iterable is expected, such as when spreading into an Array.\nconst { List } = require('immutable');\nconst aList = List([ 1, 2, 3 ]);\nconst anArray = [ 0, ...aList, 4, 5 ]; \/\/ [ 0, 1, 2, 3, 4, 5 ]\nNote: A Collection is always iterated in the same order, however that order may\nnot always be well defined, as is the case for the Map and Set.\nNested Structures\nThe collections in Immutable.js are intended to be nested, allowing for deep\ntrees of data, similar to JSON.\nconst { fromJS } = require('immutable');\nconst nested = fromJS({ a: { b: { c: [ 3, 4, 5 ] } } });\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5 ] } } }\nA few power-tools allow for reading and operating on nested data. The\nmost useful are mergeDeep, getIn, setIn, and updateIn, found on List,\nMap and OrderedMap.\nconst { fromJS } = require('immutable');\nconst nested = fromJS({ a: { b: { c: [ 3, 4, 5 ] } } });\n\nconst nested2 = nested.mergeDeep({ a: { b: { d: 6 } } });\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5 ], d: 6 } } }\n\nconsole.log(nested2.getIn([ 'a', 'b', 'd' ])); \/\/ 6\n\nconst nested3 = nested2.updateIn([ 'a', 'b', 'd' ], value => value + 1);\nconsole.log(nested3);\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5 ], d: 7 } } }\n\nconst nested4 = nested3.updateIn([ 'a', 'b', 'c' ], list => list.push(6));\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5, 6 ], d: 7 } } }\nEquality treats Collections as Values\nImmutable.js collections are treated as pure data values. Two immutable\ncollections are considered value equal (via .equals() or is()) if they\nrepresent the same collection of values. This differs from JavaScript's typical\nreference equal (via === or ==) for Objects and Arrays which only\ndetermines if two variables represent references to the same object instance.\nConsider the example below where two identical Map instances are not\nreference equal but are value equal.\n\/\/ First consider:\nconst obj1 = { a: 1, b: 2, c: 3 };\nconst obj2 = { a: 1, b: 2, c: 3 };\nobj1 !== obj2; \/\/ two different instances are always not equal with ===\n\nconst { Map, is } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = Map({ a: 1, b: 2, c: 3 });\nmap1 !== map2; \/\/ two different instances are not reference-equal\nmap1.equals(map2); \/\/ but are value-equal if they have the same values\nis(map1, map2); \/\/ alternatively can use the is() function\nValue equality allows Immutable.js collections to be used as keys in Maps or\nvalues in Sets, and retrieved with different but equivalent collections:\nconst { Map, Set } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = Map({ a: 1, b: 2, c: 3 });\nconst set = Set().add(map1);\nset.has(map2); \/\/ true because these are value-equal\nNote: is() uses the same measure of equality as Object.is for scalar\nstrings and numbers, but uses value equality for Immutable collections,\ndetermining if both are immutable and all keys and values are equal\nusing the same measure of equality.\nPerformance tradeoffs\nWhile value equality is useful in many circumstances, it has different\nperformance characteristics than reference equality. Understanding these\ntradeoffs may help you decide which to use in each case, especially when used\nto memoize some operation.\nWhen comparing two collections, value equality may require considering every\nitem in each collection, on an O(N) time complexity. For large collections of\nvalues, this could become a costly operation. Though if the two are not equal\nand hardly similar, the inequality is determined very quickly. In contrast, when\ncomparing two collections with reference equality, only the initial references\nto memory need to be compared which is not based on the size of the collections,\nwhich has an O(1) time complexity. Checking reference equality is always very\nfast, however just because two collections are not reference-equal does not rule\nout the possibility that they may be value-equal.\nReturn self on no-op optimization\nWhen possible, Immutable.js avoids creating new objects for updates where no\nchange in value occurred, to allow for efficient reference equality checking\nto quickly determine if no change occurred.\nconst { Map } = require('immutable');\nconst originalMap = Map({ a: 1, b: 2, c: 3 });\nconst updatedMap = originalMap.set('b', 2);\nupdatedMap === originalMap; \/\/ No-op .set() returned the original reference.\nHowever updates which do result in a change will return a new reference. Each\nof these operations occur independently, so two similar updates will not return\nthe same reference:\nconst { Map } = require('immutable');\nconst originalMap = Map({ a: 1, b: 2, c: 3 });\nconst updatedMap = originalMap.set('b', 1000);\n\/\/ New instance, leaving the original immutable.\nupdatedMap !== originalMap;\nconst anotherUpdatedMap = originalMap.set('b', 1000);\n\/\/ Despite both the results of the same operation, each created a new reference.\nanotherUpdatedMap !== updatedMap;\n\/\/ However the two are value equal.\nanotherUpdatedMap.equals(updatedMap);\nBatching Mutations\n\nIf a tree falls in the woods, does it make a sound?\nIf a pure function mutates some local data in order to produce an immutable\nreturn value, is that ok?\n\u2014 Rich Hickey, Clojure\n\nApplying a mutation to create a new immutable object results in some overhead,\nwhich can add up to a minor performance penalty. If you need to apply a series\nof mutations locally before returning, Immutable.js gives you the ability to\ncreate a temporary mutable (transient) copy of a collection and apply a batch of\nmutations in a performant manner by using withMutations. In fact, this is\nexactly how  Immutable.js applies complex mutations itself.\nAs an example, building list2 results in the creation of 1, not 3, new\nimmutable Lists.\nconst { List } = require('immutable');\nconst list1 = List([ 1, 2, 3 ]);\nconst list2 = list1.withMutations(function (list) {\n  list.push(4).push(5).push(6);\n});\nassert.equal(list1.size, 3);\nassert.equal(list2.size, 6);\nNote: Immutable.js also provides asMutable and asImmutable, but only\nencourages their use when withMutations will not suffice. Use caution to not\nreturn a mutable copy, which could result in undesired behavior.\nImportant!: Only a select few methods can be used in withMutations including\nset, push and pop. These methods can be applied directly against a\npersistent data-structure where other methods like map, filter, sort,\nand splice will always return new immutable data-structures and never mutate\na mutable collection.\nLazy Seq\nSeq describes a lazy operation, allowing them to efficiently chain\nuse of all the higher-order collection methods (such as map and filter)\nby not creating intermediate collections.\nSeq is immutable \u2014 Once a Seq is created, it cannot be\nchanged, appended to, rearranged or otherwise modified. Instead, any mutative\nmethod called on a Seq will return a new Seq.\nSeq is lazy \u2014 Seq does as little work as necessary to respond to any\nmethod call. Values are often created during iteration, including implicit\niteration when reducing or converting to a concrete data structure such as\na List or JavaScript Array.\nFor example, the following performs no work, because the resulting\nSeq's values are never iterated:\nconst { Seq } = require('immutable');\nconst oddSquares = Seq([ 1, 2, 3, 4, 5, 6, 7, 8 ])\n  .filter(x => x % 2 !== 0)\n  .map(x => x * x);\nOnce the Seq is used, it performs only the work necessary. In this\nexample, no intermediate arrays are ever created, filter is called three\ntimes, and map is only called once:\noddSquares.get(1); \/\/ 9\nAny collection can be converted to a lazy Seq with Seq().\nconst { Map, Seq } = require('immutable');\nconst map = Map({ a: 1, b: 2, c: 3 });\nconst lazySeq = Seq(map);\nSeq allows for the efficient chaining of operations, allowing for the\nexpression of logic that can otherwise be very tedious:\nlazySeq\n  .flip()\n  .map(key => key.toUpperCase())\n  .flip();\n\/\/ Seq { A: 1, B: 2, C: 3 }\nAs well as expressing logic that would otherwise seem memory or time\nlimited, for example Range is a special kind of Lazy sequence.\nconst { Range } = require('immutable');\nRange(1, Infinity)\n  .skip(1000)\n  .map(n => -n)\n  .filter(n => n % 2 === 0)\n  .take(2)\n  .reduce((r, n) => r * n, 1);\n\/\/ 1006008\nDocumentation\nRead the docs and eat your vegetables.\nDocs are automatically generated from Immutable.d.ts.\nPlease contribute!\nAlso, don't miss the Wiki which\ncontains articles on specific topics. Can't find something? Open an issue.\nTesting\nIf you are using the Chai Assertion Library, Chai Immutable provides a set of assertions to use against Immutable.js collections.\nContribution\nUse Github issues for requests.\nWe actively welcome pull requests, learn how to contribute.\nChangelog\nChanges are tracked as Github releases.\nThanks\nPhil Bagwell, for his inspiration\nand research in persistent data structures.\nHugh Jackson, for providing the npm package\nname. If you're looking for his unsupported package, see this repository.\nLicense\nImmutable.js is MIT-licensed.\n","71":"\n\n\n\n\n\n\n\nExpressive HTTP middleware framework for node.js to make web applications and APIs more enjoyable to write. Koa's middleware stack flows in a stack-like manner, allowing you to perform actions downstream then filter and manipulate the response upstream.\nOnly methods that are common to nearly all HTTP servers are integrated directly into Koa's small ~570 SLOC codebase. This\nincludes things like content negotiation, normalization of node inconsistencies, redirection, and a few others.\nKoa is not bundled with any middleware.\nInstallation\nKoa requires node v7.6.0 or higher for ES2015 and async function support.\n$ npm install koa\n\nHello Koa\nconst Koa = require('koa');\nconst app = new Koa();\n\n\/\/ response\napp.use(ctx => {\n  ctx.body = 'Hello Koa';\n});\n\napp.listen(3000);\nGetting started\n\nKick-Off-Koa - An intro to Koa via a set of self-guided workshops.\nWorkshop - A workshop to learn the basics of Koa, Express' spiritual successor.\nIntroduction Screencast - An introduction to installing and getting started with Koa\n\nMiddleware\nKoa is a middleware framework that can take two different kinds of functions as middleware:\n\nasync function\ncommon function\n\nHere is an example of logger middleware with each of the different functions:\nasync functions (node v7.6+)\napp.use(async (ctx, next) => {\n  const start = Date.now();\n  await next();\n  const ms = Date.now() - start;\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n});\nCommon function\n\/\/ Middleware normally takes two parameters (ctx, next), ctx is the context for one request,\n\/\/ next is a function that is invoked to execute the downstream middleware. It returns a Promise with a then function for running code after completion.\n\napp.use((ctx, next) => {\n  const start = Date.now();\n  return next().then(() => {\n    const ms = Date.now() - start;\n    console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n  });\n});\nKoa v1.x Middleware Signature\nThe middleware signature changed between v1.x and v2.x.  The older signature is deprecated.\nOld signature middleware support will be removed in v3\nPlease see the Migration Guide for more information on upgrading from v1.x and\nusing v1.x middleware with v2.x.\nContext, Request and Response\nEach middleware receives a Koa Context object that encapsulates an incoming\nhttp message and the corresponding response to that message.  ctx is often used\nas the parameter name for the context object.\napp.use(async (ctx, next) => { await next(); });\nKoa provides a Request object as the request property of the Context.\nKoa's Request object provides helpful methods for working with\nhttp requests which delegate to an IncomingMessage\nfrom the node http module.\nHere is an example of checking that a requesting client supports xml.\napp.use(async (ctx, next) => {\n  ctx.assert(ctx.request.accepts('xml'), 406);\n  \/\/ equivalent to:\n  \/\/ if (!ctx.request.accepts('xml')) ctx.throw(406);\n  await next();\n});\nKoa provides a Response object as the response property of the Context.\nKoa's Response object provides helpful methods for working with\nhttp responses which delegate to a ServerResponse\n.\nKoa's pattern of delegating to Node's request and response objects rather than extending them\nprovides a cleaner interface and reduces conflicts between different middleware and with Node\nitself as well as providing better support for stream handling.  The IncomingMessage can still be\ndirectly accessed as the req property on the Context and ServerResponse can be directly\naccessed as the res property on the Context.\nHere is an example using Koa's Response object to stream a file as the response body.\napp.use(async (ctx, next) => {\n  await next();\n  ctx.response.type = 'xml';\n  ctx.response.body = fs.createReadStream('really_large.xml');\n});\nThe Context object also provides shortcuts for methods on its request and response.  In the prior\nexamples,  ctx.type can be used instead of ctx.response.type and ctx.accepts can be used\ninstead of ctx.request.accepts.\nFor more information on Request, Response and Context, see the Request API Reference,\nResponse API Reference and Context API Reference.\nKoa Application\nThe object created when executing new Koa() is known as the Koa application object.\nThe application object is Koa's interface with node's http server and handles the registration\nof middleware, dispatching to the middleware from http, default error handling, as well as\nconfiguration of the context, request and response objects.\nLearn more about the application object in the Application API Reference.\nDocumentation\n\nUsage Guide\nError Handling\nKoa for Express Users\nFAQ\nAPI documentation\n\nTroubleshooting\nCheck the Troubleshooting Guide or Debugging Koa in\nthe general Koa guide.\nRunning tests\n$ npm test\n\nReporting vulnerabilities\nTo report a security vulnerability, please do not open an issue, as this notifies attackers of the vulnerability. Instead, please email dead_horse, jonathanong, and niftylettuce to disclose.\nAuthors\nSee AUTHORS.\nCommunity\n\nBadgeboard and list of official modules\nExamples\nMiddleware list\nWiki\nReddit Community\nMailing list\n\u4e2d\u6587\u6587\u6863 v1.x\n\u4e2d\u6587\u6587\u6863 v2.x\n#koajs on freenode\n\nJob Board\nLooking for a career upgrade?\n\n\n\nBackers\nSupport us with a monthly donation and help us continue our activities.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n","72":"\nVideo.js - HTML5 Video Player\n\n\n\n\n\n\nVideo.js is a web video player built from the ground up for an HTML5 world. It supports HTML5 and Flash video, as well as YouTube and Vimeo (through plugins). It supports video playback on desktops and mobile devices. This project was started mid 2010, and the player is now used on over 50,000 100,000 200,000 400,000 websites.\n\nTable of Contents\n\nQuick Start\nContributing\nCode of Conduct\nLicense\n\nQuick Start\nThanks to the awesome folks over at Fastly, there's a free, CDN hosted version of Video.js that anyone can use. Add these tags to your document's <head>:\n<link href=\"\/\/vjs.zencdn.net\/7.8.2\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"\/\/vjs.zencdn.net\/7.8.2\/video.min.js\"><\/script>\n\nFor the latest version of video.js and URLs to use, check out the Getting Started page on our website.\n\nVideo.js version 7 (and newer) CDN builds do not send any data to Google Analytics.\nIn older versions of Video.js (6 and earlier), in the vjs.zencdn.net CDN-hosted versions we include a stripped down Google Analytics pixel that tracks a random sampling (currently 1%) of players loaded from the CDN. This allows us to see (roughly) what browsers are in use in the wild, along with other useful metrics such as OS and device. If you'd like to disable analytics, you can simply include the following global before including Video.js via the free CDN:\n<script>window.HELP_IMPROVE_VIDEOJS = false;<\/script>\nAlternatively, you can include Video.js by getting it from npm, downloading from GitHub releases or by including it via unpkg or another JavaScript CDN like CDNjs. These releases do not include Google Analytics tracking at all.\n<!-- unpkg : use the latest version of Video.js -->\n<link href=\"https:\/\/unpkg.com\/video.js\/dist\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https:\/\/unpkg.com\/video.js\/dist\/video.min.js\"><\/script>\n\n<!-- unpkg : use a specific version of Video.js (change the version numbers as necessary) -->\n<link href=\"https:\/\/unpkg.com\/video.js@7.8.2\/dist\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https:\/\/unpkg.com\/video.js@7.8.2\/dist\/video.min.js\"><\/script>\n\n<!-- cdnjs : use a specific version of Video.js (change the version numbers as necessary) -->\n<link href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/video.js\/7.8.1\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/video.js\/7.8.1\/video.min.js\"><\/script>\nNext, using Video.js is as simple as creating a <video> element, but with an additional data-setup attribute. At a minimum, this attribute must have a value of '{}', but it can include any Video.js options - just make sure it contains valid JSON!\n<video\n    id=\"my-player\"\n    class=\"video-js\"\n    controls\n    preload=\"auto\"\n    poster=\"\/\/vjs.zencdn.net\/v\/oceans.png\"\n    data-setup='{}'>\n  <source src=\"\/\/vjs.zencdn.net\/v\/oceans.mp4\" type=\"video\/mp4\"><\/source>\n  <source src=\"\/\/vjs.zencdn.net\/v\/oceans.webm\" type=\"video\/webm\"><\/source>\n  <source src=\"\/\/vjs.zencdn.net\/v\/oceans.ogv\" type=\"video\/ogg\"><\/source>\n  <p class=\"vjs-no-js\">\n    To view this video please enable JavaScript, and consider upgrading to a\n    web browser that\n    <a href=\"https:\/\/videojs.com\/html5-video-support\/\" target=\"_blank\">\n      supports HTML5 video\n    <\/a>\n  <\/p>\n<\/video>\nWhen the page loads, Video.js will find this element and automatically setup a player in its place.\nIf you don't want to use automatic setup, you can leave off the data-setup attribute and initialize a <video> element manually using the videojs function:\nvar player = videojs('my-player');\nThe videojs function also accepts an options object and a callback to be invoked\nwhen the player is ready:\nvar options = {};\n\nvar player = videojs('my-player', options, function onPlayerReady() {\n  videojs.log('Your player is ready!');\n\n  \/\/ In this context, `this` is the player that was created by Video.js.\n  this.play();\n\n  \/\/ How about an event listener?\n  this.on('ended', function() {\n    videojs.log('Awww...over so soon?!');\n  });\n});\nIf you're ready to dive in, the Getting Started page and documentation are the best places to go for more information. If you get stuck, head over to our Slack channel!\nContributing\nVideo.js is a free and open source library, and we appreciate any help you're willing to give - whether it's fixing bugs, improving documentation, or suggesting new features. Check out the contributing guide for more!\nVideo.js uses BrowserStack for compatibility testing.\nCode of Conduct\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\nLicense\nVideo.js is licensed under the Apache License, Version 2.0.\n","73":"clipboard.js\n\n\n\nModern copy to clipboard. No Flash. Just 3kb gzipped.\n\n\nWhy\nCopying text to the clipboard shouldn't be hard. It shouldn't require dozens of steps to configure or hundreds of KBs to load. But most of all, it shouldn't depend on Flash or any bloated framework.\nThat's why clipboard.js exists.\nInstall\nYou can get it on npm.\nnpm install clipboard --save\n\nOr if you're not into package management, just download a ZIP file.\nSetup\nFirst, include the script located on the dist folder or load it from a third-party CDN provider.\n<script src=\"dist\/clipboard.min.js\"><\/script>\nNow, you need to instantiate it by passing a DOM selector, HTML element, or list of HTML elements.\nnew ClipboardJS('.btn');\nInternally, we need to fetch all elements that matches with your selector and attach event listeners for each one. But guess what? If you have hundreds of matches, this operation can consume a lot of memory.\nFor this reason we use event delegation which replaces multiple event listeners with just a single listener. After all, #perfmatters.\nUsage\nWe're living a declarative renaissance, that's why we decided to take advantage of HTML5 data attributes for better usability.\nCopy text from another element\nA pretty common use case is to copy content from another element. You can do that by adding a data-clipboard-target attribute in your trigger element.\nThe value you include on this attribute needs to match another's element selector.\n\n<!-- Target -->\n<input id=\"foo\" value=\"https:\/\/github.com\/zenorocha\/clipboard.js.git\">\n\n<!-- Trigger -->\n<button class=\"btn\" data-clipboard-target=\"#foo\">\n    <img src=\"assets\/clippy.svg\" alt=\"Copy to clipboard\">\n<\/button>\nCut text from another element\nAdditionally, you can define a data-clipboard-action attribute to specify if you want to either copy or cut content.\nIf you omit this attribute, copy will be used by default.\n\n<!-- Target -->\n<textarea id=\"bar\">Mussum ipsum cacilds...<\/textarea>\n\n<!-- Trigger -->\n<button class=\"btn\" data-clipboard-action=\"cut\" data-clipboard-target=\"#bar\">\n    Cut to clipboard\n<\/button>\nAs you may expect, the cut action only works on <input> or <textarea> elements.\nCopy text from attribute\nTruth is, you don't even need another element to copy its content from. You can just include a data-clipboard-text attribute in your trigger element.\n\n<!-- Trigger -->\n<button class=\"btn\" data-clipboard-text=\"Just because you can doesn't mean you should \u2014 clipboard.js\">\n    Copy to clipboard\n<\/button>\nEvents\nThere are cases where you'd like to show some user feedback or capture what has been selected after a copy\/cut operation.\nThat's why we fire custom events such as success and error for you to listen and implement your custom logic.\nvar clipboard = new ClipboardJS('.btn');\n\nclipboard.on('success', function(e) {\n    console.info('Action:', e.action);\n    console.info('Text:', e.text);\n    console.info('Trigger:', e.trigger);\n\n    e.clearSelection();\n});\n\nclipboard.on('error', function(e) {\n    console.error('Action:', e.action);\n    console.error('Trigger:', e.trigger);\n});\nFor a live demonstration, go to this site and open your console.\nTooltips\nEach application has different design needs, that's why clipboard.js does not include any CSS or built-in tooltip solution.\nThe tooltips you see on the demo site were built using GitHub's Primer. You may want to check that out if you're looking for a similar look and feel.\nAdvanced Options\nIf you don't want to modify your HTML, there's a pretty handy imperative API for you to use. All you need to do is declare a function, do your thing, and return a value.\nFor instance, if you want to dynamically set a target, you'll need to return a Node.\nnew ClipboardJS('.btn', {\n    target: function(trigger) {\n        return trigger.nextElementSibling;\n    }\n});\nIf you want to dynamically set a text, you'll return a String.\nnew ClipboardJS('.btn', {\n    text: function(trigger) {\n        return trigger.getAttribute('aria-label');\n    }\n});\nFor use in Bootstrap Modals or with any other library that changes the focus you'll want to set the focused element as the container value.\nnew ClipboardJS('.btn', {\n    container: document.getElementById('modal')\n});\nAlso, if you are working with single page apps, you may want to manage the lifecycle of the DOM more precisely. Here's how you clean up the events and objects that we create.\nvar clipboard = new ClipboardJS('.btn');\nclipboard.destroy();\nBrowser Support\nThis library relies on both Selection and execCommand APIs. The first one is supported by all browsers while the second one is supported in the following browsers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n42+ \u2714\n12+ \u2714\n41+ \u2714\n9+ \u2714\n29+ \u2714\n10+ \u2714\n\n\n\nThe good news is that clipboard.js gracefully degrades if you need to support older browsers. All you have to do is show a tooltip saying Copied! when success event is called and Press Ctrl+C to copy when error event is called because the text is already selected.\nYou can also check if clipboard.js is supported or not by running ClipboardJS.isSupported(), that way you can hide copy\/cut buttons from the UI.\nBonus\nA browser extension that adds a \"copy to clipboard\" button to every code block on GitHub, MDN, Gist, StackOverflow, StackExchange, npm, and even Medium.\nInstall for Chrome and Firefox.\nLicense\nMIT License \u00a9 Zeno Rocha\n","74":"\nLeaflet is the leading open-source JavaScript library for mobile-friendly interactive maps.\nWeighing just about 39 KB of gzipped JS plus 4 KB of gzipped CSS code, it has all the mapping features most developers ever need.\nLeaflet is designed with simplicity, performance and usability in mind.\nIt works efficiently across all major desktop and mobile platforms out of the box,\ntaking advantage of HTML5 and CSS3 on modern browsers while being accessible on older ones too.\nIt can be extended with a huge amount of plugins,\nhas a beautiful, easy to use and well-documented API\nand a simple, readable source code that is a joy to contribute to.\nFor more info, docs and tutorials, check out the official website.\nFor Leaflet downloads (including the built master version), check out the download page.\nWe're happy to meet new contributors.\nIf you want to get involved with Leaflet development, check out the contribution guide.\nLet's make the best mapping library that will ever exist,\nand push the limits of what's possible with online maps!\n\n","75":"\n\n  The Ultimate Open Source WebChat Platform\n\n\n\n\n\n\n\n\n\n\nNEW! Rocket.Chat Moving to a Single Codebase\nCommunity\nMobile Apps\nDesktop Apps\nDeployment\n\nSnaps\nDigitalOcean\nRocketChatLauncher\nLayershift\nYunohost.org\nIndieHosters\nUbuntu 16.04\nCloudron.io\nHeroku\nHelm Kubernetes\nScalingo\nSloppy.io\nDocker\nAnsible\nRaspberry Pi 4\nKoozali SME\nUbuntu VPS\nD2C.io\nSyncloud.org\n\n\nAbout Rocket.Chat\n\nIn the News\nFeatures\nRoadmap\nHow it all started\nAwards\nIssues\nStack Overflow\nIntegrations\nDocumentation\nLicense\n\n\nDevelopment\nQuick Start\nBranching Model\nTranslations\nHow to Contribute\nCredits\nHelp Wanted\nDonate\n\nMoving to a Single Codebase\nRocket.Chat is moving to a single codebase. Get to know the reasons and how the community will benefit from it. Read the details.\nHelp Wanted\nAt Rocket.Chat, our community drives everything we do. The Rocket.Chat team is expanding, and we know no better place to find qualified new team members than right here - in our GitHub  community.\nIf you are passionate about our project, want to work with a world-leading open source team, and enjoy working remotely at a location of your choice, then we want to talk to you!\nGet to know more about us and explore current openings at https:\/\/jobs.rocket.chat\/\"\nCommunity\nJoin thousands of members worldwide 24\/7 in our community server.\n for help from our community with general Rocket.Chat questions.\n for developers needing help from the community to developing new features.\nYou can also join the conversation on Twitter and Facebook.\nShare your story\nWe\u2019d love to hear about your experience and potentially feature it on our Blog.\nSubscribe for Updates\nOnce a month our marketing team releases an email update with news about product releases, company related topics, events and use cases. Sign Up!\nDesktop Apps\nDownload the Native Cross-Platform Desktop Application at Rocket.Chat.Electron\nMobile Apps\n  \nDeployment\nInstant Server Installation with Snaps\nInstall Rocket.Chat in seconds on Linux (Ubuntu and others) with:\nsudo snap install rocketchat-server\n\n\nInstalling snaps is very quick. By running that command you have your full Rocket.Chat server up and running. Snaps are secure. They are isolated with all of their dependencies. Snaps also auto-update when we release new versions.\nOur snap features a built-in reverse proxy that can request and maintain free Let's Encrypt SSL certificates. You can go from zero to a public-facing SSL-secured Rocket.Chat server in less than 5 minutes.\nFind out more information about our snaps here.\nDigitalOcean droplet\nDeploy to a DigitalOcean droplet with our one-click install listing from the DigitalOcean Marketplace.\n\nLayershift\nInstantly deploy your Rocket.Chat server for free on next generation auto-scaling PaaS.\n\nPainless SSL. Automatically scale your server cluster based on usage demand.\nYunohost.org\nHost your own Rocket.Chat server in a few seconds.\n\nIndieHosters\nGet your Rocket.Chat instance hosted in an \"as a Service\" style. You register and we manage it for you! (updates, backup...).\n\nCloudron.io\nInstall Rocket.Chat on Cloudron Smartserver:\n\nHeroku\nHost your own Rocket.Chat server for FREE with One-Click Deploy.\n\nHelm Kubernetes\nDeploy on Kubernetes using the official helm chart.\nScalingo\nDeploy your own Rocket.Chat server instantly on Scalingo.\n\nSloppy.io\nHost your docker container at sloppy.io. Get an account and use the quickstarter.\nDocker\nDeploy with docker compose\n\nOR Use the automated build image of our most recent release\ndocker pull rocketchat\/rocket.chat:latest\n\nOR select a specific release (details of releases available):\ndocker pull rocketchat\/rocket.chat:vX.X.X\n\nOR our official docker registry image, containing recent stable release build approved by Docker:\ndocker pull rocket.chat\n\nAnsible\nAutomated production-grade deployment in minutes, for RHEL \/ CentOS 7 or Ubuntu 14.04 LTS \/ 15.04.\n\nRaspberry Pi 4\nRun Rocket.Chat on this world famous $35 quad-core server.\n\nKoozali SME\nAdd Rocket.Chat to this world famous time tested small enterprise server today.\n\nUbuntu VPS\nFollow these deployment instructions.\nD2C.io\nDeploy Rocket.Chat stack to your server with D2C. Scale with a single click, check live logs and metrics:\n\nSyncloud.org\nRun Rocket.Chat on your easy to use personal device.\n\nAbout Rocket.Chat\nRocket.Chat is a Web Chat Server, developed in JavaScript, using the Meteor full stack framework.\nIt is a great solution for communities and companies wanting to privately host their own chat service or for developers looking forward to build and evolve their own chat platforms.\nIn the News\nWired\n\nOpen Sourcers Race to Build Better Versions of Slack\n\nHacker News\n\nYes, we made it to the #1\n\nProduct Hunt\n\nYour own open source Slack-like chat\n\nJavaScript Weekly\n\nAn open source Web based, channel based chat system (a la Slack) built using Meteor, the full stack JavaScript development platform.\n\nOpen Source China\n\nRocket.Chat \u662f\u7279\u6027\u6700\u4e30\u5bcc\u7684 Slack \u5f00\u6e90\u66ff\u4ee3\u54c1\u4e4b\u4e00\u3002 \u4e3b\u8981\u529f\u80fd\uff1a\u7fa4\u7ec4\u804a\u5929\uff0c\u76f4\u63a5\u901a\u4fe1\uff0c\u79c1\u804a\u7fa4\uff0c\u684c\u9762\u901a\u77e5\uff0c\u5a92\u4f53\u5d4c\u5165\uff0c\u94fe\u63a5\u9884\u89c8\uff0c\u6587\u4ef6\u4e0a\u4f20\uff0c\u8bed\u97f3\/\u89c6\u9891 \u804a\u5929\uff0c\u622a\u56fe\u7b49\u7b49\u3002\n\nwwwhatsnew.com\n\nPara los programadores que quieran ofrecer un chat en su web\n\nclasesdeperiodismo.com\n\nUn chat de c\u00f3digo abierto que puedes a\u00f1adir a la web\n\nsnowulf.com\n\nWhy Slack when you can Rocket.chat?\n\nliminality.xyz\n\nSelf-hosted alternatives to popular cloud services\n\nFeatures\n\nBYOS (Bring Your Own Server)\nMultiple Rooms\nDirect Messages\nPrivate Groups\nPublic Channels\nDesktop Notifications\nMentions\nAvatars\nMarkdown\nEmojis\nCustom Emojis\nReactions\nOne touch Geolocation\nTeX Math Rendering - inline math typesetting\nMedia Embeds\nLink Previews\nSent Message Edit and Deletion\nTranscripts \/ History\nFile Upload \/ Sharing\nScalable file sharing - S3 uploads with CDN downloads\nFull text search\nGlobal search (from all channels\/rooms at once)\nLive chat \/ Messaging call center\nLDAP Authentication\nCAS 1.0, 2.0 support for educational institutions and hosting providers worldwide\nSupport for Okta SSO through SAML v2\nI18n - Supports 22 Languages\nHubot Friendly\n(Beta) Face to Face Video Conferencing (aka WebRTC )\n(Beta) Multi-users Video Group Chat\n(Beta) Jitsi integration\nAudio calls\nMulti-users Audio Conference\nScreen sharing\nDrupal 7.x and 8.x Plug-in (both stable and development flavours) (download  and source code )\nXMPP bridge (try it)\nREST APIs\nRemote Video Monitoring\nNative real-time APIs for Microsoft C#, Visual Basic, F# and other .NET supported languages (Get it!)\nAPI access from Perl and Java  (community contributions)\nChat-ops powered by Hubot: scalable horizontal app integration (early access)\nMassively scalable hosting and provisioning (beta testing now)\nNative Cross-Platform Desktop Application Windows, macOS, or Linux\nMobile app for iPhone, iPad, and iPod touch Download on App Store\nMobile app for Android phone, tablet, and TV stick Available now on Google Play\nAvailable on Cloudron Store\n\nRoadmap\nTo see an up to date view of what we have planned, view our milestones.\nHow it all started\nRead about how it all started.\nAwards\n\n\n\nIssues\nGitHub Issues are used to track bugs and tasks on the roadmap.\nFeature Requests\nRocketChat\/feature-requests is used to track Rocket.Chat feature requests and discussions. Click here to open a new feature request.\nFeature Request Forums stores the historical archives of old feature requests (up to 2018).\nStack Overflow\nPlease use the Stack Overflow TAG\nIntegrations\nHubot\nThe docker image is ready.\nEveryone can start hacking the adapter code or launch his\/her own bot within a few minutes now.\nPlease head over to the Hubot Integration Project for more information.\nChat-ops integrations powered by Hubot\nIntegrate your application with fly-in panels today! Early access is available for developers.\n\nMany, many, many more to come!\nWe are developing the APIs based on the competition, so stay tuned and you will see a lot happening here.\nDocumentation\nCheck out Rocket.Chat documentation.\nLicense\nNote that Rocket.Chat is distributed under the MIT License.\nDevelopment\nQuick start for code developers\nPrerequisites:\n\nGit\nMeteor\n\n\nMeteor automatically installs a hidden NodeJS v12 and MongoDB v4.2 to be used when you run your app in development mode using the meteor command.\n\nNow just clone and start the app:\ngit clone https:\/\/github.com\/RocketChat\/Rocket.Chat.git\ncd Rocket.Chat\nmeteor npm install\nmeteor npm start\nFor more detailed step-by-step, see our quick start for developers docs.\nTo debug the server part, use meteor debugging. You should use Chrome for best debugging experience:\nmeteor debug\nYou'll find a nodejs icon in the developer console.\nIf you are not a developer and just want to run the server - see deployment methods.\nBranching Model\nSee Branches and Releases.\nIt is based on Gitflow Workflow, reference section below is derived from Vincent Driessen at nvie.\nSee also this Git Workflows Comparison for more details.\nTranslations\nWe are experimenting with Lingohub.\nIf you want to help, send an email to support at rocket.chat to be invited to the translation project.\nHow to Contribute\nAlready a JavaScript developer? Familiar with Meteor? Pick an issue, push a PR and instantly become a member of Rocket.Chat's international contributors' community. For more information, check out our Contributing Guide and our Official Documentation for Contributors.\nA lot of work has already gone into Rocket.Chat, but we have much bigger plans for it!\nContributor License Agreement\nPlease review and sign our CLA at https:\/\/cla-assistant.io\/RocketChat\/Rocket.Chat\nCredits\nThanks to our core team\nAaron Ogle,\nBradley Hilton,\nDiego Sampaio,\nGabriel Engel,\nMarcelo Schmidt,\nRodrigo Nascimento,\nSing Li,\nand hundreds of awesome contributors.\n\nEmoji provided graciously by JoyPixels\n\nTesting with BrowserStack\n\nTranslations done with LingoHub\nDonate\nRocket.Chat will be free forever, but you can help us speed up the development!\n\nBountySource\n","76":"\n\n\n\n\n\n\n\nAwesome React Native is an awesome style list that curates the best React Native libraries,\ntools, tutorials, articles and more. PRs are welcome!\n\n\n\nDon't miss out! Subscribe to our weekly newsletter\n\n\n\n\nBuzzing\n\n\n\n\n\n        React Native Authentication in Depth\n        \n\n\n\n\n\n        Create React Native App\n        \n\n\n\n\n\n            Better List Views\n        \n\n\nHave something that belongs under \"Buzzing\"? drop me a line:\ndotan-at-paracode.com.\nInstabug\nUnderstand How Your React-Native App is Doing with Real-Time Contextual Insights From Your Users\n\n\nCatch bugs as soon as they happen and know exactly why a crash occurred. Instabug's SDK gives development and product teams all the logs they need to fix bugs, crashes, and other issues in minutes instead of days. Instabug automatically attaches screenshots, device details, network logs, repro steps, and tons of other critical insights needed to resolve issues and prioritize product backlogs. It only takes a line of code to integrate and accelerate your workflows by seamlessly integrating with third-party tools like Github, Jira, Slack, Zendesk, and much more. Instabug is offering awesome-reactnative community a 3 months free trial. Get Started Now!\n\nCategories\n\nBuzzing\n\nInstabug\n\n\nCategories\n\nConferences\n\nChain React - Portland, OR USA\nReact Native EU - Wroclaw, Poland\nReact Alicante - Alicante, Spain\nReactNext - Tel Aviv, Israel\nReact Berlin - Berlin, Germany\nApp.js Conf - Krakow, Poland\nChain React - Portland, OR USA\nReact Native EU - Wroclaw, Poland\nReact Berlin - Berlin, Germany\nReactEurope - Paris, France\n\n\nArticles\n\nReference\nHowtos\nAssorted\nContinuous Integration\nInternals\n\n\nComponents\n\nUI\nNavigation\n\nNavigation\/Routing Articles\nNavigation Demos\n\n\nDeep Linking\nText & Rich Content\nAnalytics\nUtils & Infra\nForms\nGeolocation\nInternationalization\nBuild & Development\nStyling\nSystem\nWeb\nMedia\nStorage\nBackend\nIntegrations\nMonetization\nAnimation\nExtension\nOther Platforms\n\n\nUtilities\nSeeds\nLibraries\nOpen Source Apps\nFrameworks\nTutorials\nBooks\nVideos\n\nTalks\nTraining & tutorials\n\n\nBlogs\nNewsletters\nReleases\n\n\n\nMany thanks to everyone on the contributor\nlist\\:)\nConferences\nConferences dedicated to React Native specifically. A listing of React\ngeneral conferences can be found on the ReactJS\nsite.\nChain React - Portland, OR USA\nhttp:\/\/chainreactconf.com\nWorkshops - July 11th, 2018\\\nConference - July 12-13th, 2018\nReact Native EU - Wroclaw, Poland\nhttp:\/\/react-native.eu\/\nWorkshops - September 3-4th, 2018\\\nConference - September 5-6th, 2018\nReact Alicante - Alicante, Spain\nhttp:\/\/reactalicante.es\/\nWorkshops - September 13th, 2018\\\nConference - September 14-15th, 2018\nReactNext - Tel Aviv, Israel\nhttps:\/\/react-next.com\/\nConference - November 4th, 2018\nApp.js Conf - Krakow, Poland\nhttps:\/\/appjs.co\/\nConference - April 4th, 2019\nWorkshops - April 5th, 2019\nChain React - Portland, OR USA\nhttps:\/\/infinite.red\/ChainReactConf\nWorkshops - July 10th, 2019\nConference - July 11th-12th, 2019\nReact Native EU - Wroclaw, Poland\nhttps:\/\/react-native.eu\/\nWorkshops - September 4th, 2019\nConference - September 5th-6th, 2019\nReact Berlin - Berlin, Germany\nhttps:\/\/reactday.berlin\/\nWorkshops - December 4th-5th, 2019\nConference - December 6th, 2019\nReactEurope - Paris, France\nhttps:\/\/www.react-europe.org\/\nConference - May 14th-15, 2020\nWorkshops - May 12th-13th, 2020\nArticles\nContent published on the Web.\nReference\n\nReact Native Styling Cheatsheet \u26052679\n\nHowtos\n\nHow to add Firebase Auth with React Native \u26054\nHow to get started with Cloud Firestore on React Native\nHow to upgrade React Navigation 1.x to 2.x\nHow to use React Native Navigation v2 with Redux and Google Analytics\nReact-Navigation Drawer\nGetting Started with React Native Development on Windows\nGetting Started with React Native Development for Windows\nBlueprint to becoming a React Native Developer\nHow to Use the ListView Component\nHow to upload photo\/file in react-native\nPreview your Android & iOS React Native apps on your Github Pull Request\nChange splash screen in React Native Android app\nRemote Push Notifications with OneSignal\nRelease React Native App to Android Play Store\nReact Native & Apple TV today\nRecord and Upload Videos with React Native\nHow to Setup your First React Native app\nUsing React Native With TypeScript\nHow To Build a News Reader App with React Native and NewsAPI\nHow to Build a Real Time Logo Detection App with React Native\nBuild a Chatbot with Dialogflow and React Native\nHow To Build Your First VR App with ViroReact and React Native\nReact Hooks Basics\u2014 Building a React Native App with React Hooks\nHow to Build a Web App with React Native\nBuilding a React Native Mobile App with AWS Amplify and Expo\nUser Authentication with Amplify in a React Native and Expo app\nHow to build an Email Authentication app with Firebase, Firestore and React Native\nHow to Gracefully Use Environment Variables in a React Native App\nHow to build a xylophone app with Audio API, React Native, and Expo\nHow To Use WebViews in a React Native App\n\nAssorted\n\nVersioning React Native Application in elegant way (cross-platformely) \u260510\nBest Practices for Building a Large Scale React Application\nReact Native - Nic or Not App\nReact and React Native State Museum\nTop 15 React Native libraries that I use in my apps\nBuilding 3 React Native Apps in One Summer\nReact Native: Bringing modern web techniques to mobile\nFirst impressions using React Native\nWrapping Cocoapods for React Native\nReact Native: Initial Thoughts (opinion)\nA Dynamic Crazy Native Mobile Future Powered by Javascript\nReactNative NES & More\nReact Native Installation and Setup\nDiary of Building an iOS App with React Native\nReflecting on React Native development\nReact-Native layout examples\nReact Native in Production - notes from Clay Allsop\nAn iOS Developer on React Native\nReact Native and WebRTC\nHow to bridge a Swift view\nHow to select the right React Native database\nBuilding a Native SoundCloud Android app with Redux - discussing redux, code reuse and performance on Android.\nReact Native Twitter exploding heart - hardcore animations with Animation and ReactART\nUsing AI to discover UI components - fun image processing \/ AI assisted process to discover and generate React Native UI\nWriting Android Components\nUnit Testing React Native with Mocha and Enzyme\nReact Native's Layout Animation is Awesome\nAvoiding the Keyboard\nHow To Use OpenCV In React Native For Image Processing\nUsing Styled Components with React Native\nCreate a React Native Image Recognition App with Google Vision API\nA comprehensive guide on building offline React Native apps with AsyncStorage\nBuild a Chat App with Firebase and React Native\nBuilding Stylistic UIs with Emotion-JS for React Native\nGetting Started with Firestore and React Native\nReact Native: Native Modules made for React developers - on the developer experience with 3rd-party libraries for RN 0.60+\n\nContinuous Integration\n\nDistributing beta builds with Fastlane on Android and iOS\nDeploying a React Native App with Fastlane\nContinuous Integration for React Native Apps With Fastlane and Bitrise (iOS)\nHow to automate Android build process on Bitrise CI\nfastlane for React Native iOS & Android app DevOps\nThe simplest way to automate delivery of your React Native Application\n21 Useful Open Source Packages for React Native\n\nInternals\n\nPerformance\nReact Native Debugger Internals\nDirty-up and execute top-down - @vjeux on React's optimizations for background color, layout, and more\nOptimizing React Native\nDiving into React Native Performance\nWait\u2026 What Happens When my React Native Application Starts?\u200a\u2014\u200aAn In-depth Look Inside React Native\n\nComponents\nComponents and native modules.\nUI\n\n\nlottie-react-native \u260510415 - A mobile library for Android and iOS that parses Adobe After Effects animations exported as JSON with bodymovin and renders them natively on mobile!\n\n\nreact-native-vector-icons \u26059985 - Customizable Icons for React Native with support for NavBar\/TabBar, image source and full styling. Choose from 3000+ bundled icons or use your own.\n\n\nreact-native-maps \u26058388 - React Native Map components for iOS + Android\n\n\nreact-native-swiper \u26056955 - The best Swiper component for React Native.\n\n\nreact-native-gifted-chat \u26056546 - The most complete chat UI for React Native (formerly known as Gifted Messenger)\n\n\nreact-native-scrollable-tab-view \u26055664 - A scrollable tab-view for React Native\n\n\nreact-native-image-picker \u26054709 - A React Native module that allows you to use the native UIImagePickerController UI to select a photo from the device library or directly from the camera.\n\n\nreact-native-material-kit \u26054124 - Bringing Material Design to React Native\n\n\nreact-native-snap-carousel \u26053959 - Swiper component for React Native with previews, multiple layouts, parallax images, performant handling of huge numbers of items, and RTL support\n\n\nreact-native-calendars \u26053402 - React Native Calendar Components \ud83d\udcc6\n\n\nreact-native-ui-kitten \u26053140 - Customizable and reusable react-native component kit\n\n\nreact-native-svg \u26052982 - SVG library that works on both iOS & Android\n\n\nreact-native-image-crop-picker \u26052736 - iOS\/Android image picker with support for multiple images and cropping\n\n\nreact-native-splash-screen \u26052663 - A splash screen for react-native, hide when application loaded, it works on iOS and Android.\n\n\nreact-native-material-ui \u26052536 - Highly customizable material design components for React Native\n\n\nreact-native-app-intro \u26052433 - A React Native parallax effect app intro\n\n\nreact-native-drawer \u26052276 - React Native Drawer\n\n\nreact-native-typography \u26052260 Pixel\u2013perfect, native\u2013looking typographic styles for React Native\n\n\nreact-native-fast-image \u26052240 - FastImage, performant React Native image component.\n\n\nreact-native-paper \u26052218 - Material design for React Native\n\n\nreact-native-swipeout \u26052194 - iOS-style swipeout buttons behind component\n\n\nreact-native-blur \u26052172 - React Native Blur component\n\n\nreact-native-progress \u26052069 - Progress indicators and spinners for React Native using ReactART.\n\n\nreact-native-textinput-effects \u26052062 - Text inputs with custom label and icon animations for iOS and Android. Built by react native and inspired by Codrops.\n\n\nreact-native-modalbox \u26052043 - A component for react-native\n\n\nreact-native-lightbox \u26051917 - A very Slick and modern mobile lightbox implementation\n\n\nreact-native-action-button \u26051762 - A customizable Float Button Component for React Native\n\n\ngl-react-native \u26051750 - Use OpenGL for performant effects on images and videos\n\n\nreact-native-modal \u26051728 - An enhanced, animated and customizable react-native modal\n\n\nnachos-ui \u26051684 - NACHOS UI kit for React Native. Pick from a bunch of pre-coded UI components ready for your next kick-ass app in JavaScript or React.\n\n\nreact-native-mapbox-gl \u26051663 - A Mapbox GL react native module for creating custom maps\n\n\nreact-native-foldview \u26051616 - Animated FoldingCell implementation in React Native\n\n\nreact-native-modern-datepicker \u260512 - React Native Modern Datepicker\n\n\nreact-native-spinkit \u26051585 - A collection of animated loading indicators for React Native\n\n\nreact-native-recyclerlist \u26051515 - High performance listview for React Native and Web with support for complex layouts.\n\n\nreact-native-parallax-scroll-view \u26051486 - A ScrollView-like component with parallax and sticky header support.\n\n\nreact-native-chart \u26051464 - React-native-chart is a simple module for adding line charts, area charts, or bar charts to your React Native app.\n\n\nreact-native-gifted-listview \u26051443 - A ListView that embed some recurrent features like pull-to-refresh, infinite scrolling and more for Android and iOS React-Native apps\n\n\nreact-native-datepicker \u26051365 - React Native date, datetime and time picker for both Android and IOS\n\n\nreact-native-viewpager \u26051350 - ViewPager component for React Native\n\n\nreact-virgin \u26051319 The react-native UI Kit you've been looking for.\n\n\nreact-native-easy-grid \u26051304 - Easy Responsive Grid Layout for React Native.\n\n\nvictory-native \u26051264 - Victory-native is a collection of components to help you create charts, bar graphs etc.\n\n\nreact-native-picker \u26051238 - react-native-picker\n\n\nreact-native-collapsible \u26051174 - Animated collapsible component for React Native using the new Animated API with fallback. Good for accordions, toggles etc\n\n\nreact-native-icons \u26051168 - Quick and easy icons in React Native video\n\n\nreact-native-orientation \u26051162 - Listen to device orientation changes in react-native and set preferred orientation on screen to screen basis\n\n\nreact-native-tableview \u26051105 - Native iOS TableView wrapper for React Native\n\n\nreact-native-keyboard-spacer \u26051103 - Plug and play react-Native keyboard spacer view.\n\n\nreact-native-looped-carousel \u26051094 - Create looped carousel of views or images\n\n\nreact-native-circular-progress \u26051088 - React Native component for creating animated, circular progress with ReactART\n\n\nreact-native-popup-dialog \u26051088 - A React Native Popup Dialog Easy Use & Support Use Custom Animation. For IOS & Android\n\n\nreact-native-largelist \u26051054 - The best performance large list component for React Native (iOS & Android)\n\n\nreact-native-offline \u2605977 - Handy toolbelt to deal nicely with offline\/online connectivity in a React Native app. Smooth redux integration.\n\n\nreact-native-root-toast \u2605971 - React native toast like component, pure javascript solution\n\n\nreact-native-dropdownalert \u2605894 - A simple drop down alert with 4 pre-defined types.\n\n\nreact-native-loading-spinner-overlay \u2605885 - The only pure React Native, Native iOS and Android loading spinner (progress bar indicator) overlay\n\n\nreact-native-tinder-swipe-cards \u2605881 - Tinder card style swiping.\n\n\nreact-native-slider \u2605845 - A pure JavaScript component for react-native\n\n\nreact-native-pathjs-charts \u2605842 - Android and iOS charts based on react-native-svg and paths-js\n\n\nreact-native-svg-charts \u2605764 - One library to rule all charts for React Native\n\n\nreact-native-masonry \u2605758 - A masonry~ish layout for rendering images.\n\n\nreact-native-credit-card-input \u2605742 - \ud83d\udcb3 \ud83d\udcb3 Easy (and good looking) credit-card input for your React Native Project\n\n\nrn-placeholder \u26051139 - Display some placeholder stuff before rendering your text or media content in React Native (+ React Native Web!)\n\n\naction-sheet-rn \u26051 - Probably the most declarative API for ActionSheets in React Native\n\n\nreact-native-sglistview \u2605731 - A memory minded implementation of React Native's ListView\n\n\nreact-native-modal-dropdown \u2605708 - A react-native dropdown\/picker\/selector component for both Android & iOS.\n\n\nreact-native-button \u2605707\n\n\nreact-native-bottom-sheet-behavior \u2605701 - A react native wrapper for android BottomSheetBehavior.\n\n\nreact-native-tabs \u2605687 - React Native platform-independent tabs. Could be used for bottom tab bars as well as sectioned views (with tab buttons)\n\n\nreact-native-search-bar \u2605671 - The native search bar for react native.\n\n\nreact-native-timeline-listview \u2605665 - Timeline component for React Native App\n\n\nreact-native-toastboard - The simplest way to show notification.\n\n\napsl-react-native-button \u2605653 - React Native button component with rounded corners.\n\n\nreact-native-popup-menu \u2605653 - Extensible popup menu component for React Native.\n\n\nreact-native-qrcode \u2605644 - react-native qrcode generator\n\n\nreact-native-easy-toast \u2605616 - A react native module to show toast like android, it works on iOS and Android.\n\n\nreact-router-native \u2605612 - A routing library for React Native that strives for sensible API parity with React Router\n\n\nreact-native-copilot \u2605595 - Step-by-step walkthrough for your react native app\n\n\nreact-native-photo-browser \u2605565 - Local and remote photo browser with captions, selections and grid view support.\n\n\nreact-native-calendar \u2605559 - Calendar Component for React Native\n\n\nreact-native-calendar-events \u2605510\n\n\nreact-native-parsed-text \u2605552 - Parse text and make them into multiple React Native Text elements\n\n\nreact-native-step-indicator \u2605538 - A simple react-native implementation of step indicator widget compatible with the ViewPager and ListView.\n\n\nreact-native-popover-haobtc \u2605514 - A component for react-native\n\n\nreact-native-dropdown \u2605507 - A better Select dropdown menu for react-native\n\n\nreact-native-star-rating \u2605489 - A React Native component for generating and displaying interactive star ratings\n\n\nreact-native-parallax \u2605479 - Parallax effects for React Native using Animated API\n\n\nreact-native-sketch \u2605467 - A react-native <Sketch \/> component to draw with touch events.\n\n\nreact-native-dialogs \u2605463 - React Native wrappers for https:\/\/github.com\/afollestad\/material-dialogs\n\n\ngalio \u2605458 - A fresh react native UI framework.\n\n\nreact-native-root-siblings \u2605452 - Add sibling elements after your app root element.\n\n\nreact-native-size-matters \u2605436 - A React-Native utility belt for scaling the size your apps UI across different sized devices.\n\n\nreact-native-button-component \u2605434 - A Beautiful, Customizable React Native Button component for iOS & Android\n\n\nreact-native-super-grid \u2605434 - Responsive Grid View for React Native.\n\n\nreact-native-activity-view \u2605427 - iOS share and action sheets for React Native\n\n\nreact-native-canvas \u2605421 - A Canvas element for React Native\n\n\nreact-native-refresher \u2605419 - A React Native pull to refresh ListView completely written in js. Also supports custom animations.\n\n\nreact-native-sortable-list \u2605412 A sortable list for react native with both vertical and horizontal direction support.\n\n\nreact-native-gesture-password \u2605410 - A gesture password component for React Native\n\n\nreact-native-carousel \u2605406 - Simple carousel component for react-native\n\n\nreact-native-country-picker-modal \u2605403 - Country picker provides a modal allowing a user to select a country from a list. It display a flag next to each country name.\n\n\nreact-native-radio-buttons \u2605399 - A react component to implement custom radio buttons-like behaviors: multiple options, only on can be selected at once.\n\n\nreact-native-masked-text \u2605392 - A simple masked text and input text component for React Native.\n\n\nreact-native-accordion \u2605390 - An Accordion Component for React Native\n\n\nreact-native-invertible-scroll-view \u2605388 - An invertible ScrollView for React Native\n\n\nreact-native-message-bar \u2605384 - A module for presenting notifications via an animated message bar at the top\/bottom of the screen, highly customizable, for React Native (Android and iOS) projects.\n\n\nreact-native-fit-image \u2605383 - Responsive image component to fit perfectly itself.\n\n\nreact-native-text-input-mask \u2605383 - Text input mask for Android and iOS, native implementation RedMadRobot libraries\n\n\nreact-native-alphabetlistview \u2605372 - A ListView with a sidebar to jump to sections directly, based on johanneslumpe's react-native-selectablesectionlistview\n\n\nreact-native-check-box \u2605372 - Checkbox component for react native, it works on iOS and Android.\n\n\nreact-native-really-awesome-button \u2605370 - RNRAB is a 3D at 60fps, progress enabled, extendable, production ready component that renders an awesome animated set of UI buttons.\n\n\nreact-native-autocomplete-input \u2605366 - Pure javascript autocomplete input for react-native\n\n\nreact-native-splashscreen \u2605358 - A splash screen for react-native\n\n\nreact-native-responsive-image \u2605344 - Most elegant Responsive Image component\n\n\nreact-native-pdf-view \u2605338 - View pdf file using react-native\n\n\nreact-native-image-header-scroll-view \u2605338 - ScrollView with an image in header which become a navbar\n\n\nreact-native-toast \u2605336 - An android like toast for react-native support for iOS and Android\n\n\nreact-native-modal-picker \u2605333 - A cross-platform (iOS \/ Android), selector\/picker component for React Native that is highly customizable and supports sections.\n\n\nreact-native-off-canvas-menu \u2605327 - Beautifully crafted off canvas menu components for React native applications.\n\n\nrn-sliding-up-panel \u2605321 - React Native draggable sliding up panel purly implemented in Javascript. Works nicely on both iOS and Android.\n\n\nreact-native-search-box \u2605319 - A simple search box with animation, inspired from ios search bar.\n\n\nreact-native-parallax-swiper \u2605315 - Configurable parallax swiper based on an iOS pattern. Uses Native Driver for super smooth parallax.\n\n\nreact-native-gesture-recognizers \u2605313 - Gesture recognizer decorators for react-native\n\n\nreact-native-searchbar \u2605313 - An animated search bar for react native with inbuilt search (iOS and Android)\n\n\nreact-native-app-auth \u2605310 - React Native bridge for AppAuth - a PKCE-compliant SDK for communicating with OAuth2 providers\n\n\nreact-native-circular-action-menu \u2605305 - An animated and customizable circular floating menu.\n\n\nreact-native-effects-view \u2605304 - React Native Component that makes easy to use iOS8 UIVisualEffect\n\n\nreact-native-root-modal \u2605304 - React native modal component\n\n\nreact-native-timeago \u2605278 - Auto-updating timeago component for React Native\n\n\nreact-native-grid-view \u2605276 - React Native Grid\/Collection View component\n\n\nreact-native-md-textinput \u2605275 - React Native TextInput styled with Material Design.\n\n\nreact-native-timer-mixin \u2605274 - TimerMixin provides timer functions for executing code in the future that are safely cleaned up when the component unmounts. This is a fork that includes react-native InteractionManager support.\n\n\nreact-native-tableview-simple \u2605267 - React Native component for TableView made with pure CSS\n\n\nreact-native-keyboard-manager \u2605267 - Library that allows to prevent issues of keyboard sliding up and cover on React-Native iOS projects.\n\n\nreact-native-tabbar \u2605261 - Tab bar with more freedom\n\n\nreact-native-simple-router \u2605255 - A community maintained router component for React Native\n\n\nreact-native-cacheable-image \u2605255 - A filesystem cacheable image component for react-native\n\n\nreact-native-segmented-control-tab \u2605252 react-native-segmented-control-tab (for Android\/iOS)\n\n\nreact-native-modal-selector \u2605249 - A cross-platform (iOS \/ Android), selector\/picker component for React Native that is highly customizable and supports sections.\n\n\nreact-native-keyboardevents \u2605247 - Monitors keyboard show\/hide notifications\n\n\nreact-native-multiselect \u2605246 - Simple multi-select component for react-native.\n\n\nreact-native-cardview \u2605239 - CardView for react-native (All Android version and iOS)\n\n\nreact-native-shimmer-placeholder \u2605231 - Placeholder of React Native\n\n\nreact-native-progress-hud \u2605228 - A clean and lightweight progress HUD for your React Native app\n\n\nreact-native-qrcode-svg \u2605228 - A QR Code generator for React Native based on react-native-svg and node-qrcode.\n\n\nreact-native-bottom-action-sheet \u2605226 - React Native: Native Bottom Action Sheet\n\n\nreact-native-awesome-button \u2605222 - A React Native component rendering a button supporting showing different appearances and functionality given the passed props\n\n\nreact-native-mobx \u2605220 - Make your app reactive with MobX and react-native-router-flux\n\n\nreact-native-egg \u2605220 - An easter egg component implementation simple gestures detection achieve trigger can make your react native app infinitely more fun.\n\n\nreact-native-progress-bar \u2605218 - An animated progress bar component for React Native\n\n\nreact-native-tooltip \u2605217 - A react-native wrapper for showing tooltips\n\n\nreact-native-emoji \u2605216 - Emoji component for React Native\n\n\nreact-native-image-cache-hoc \u2605211 - Higher Order Component that adds advanced caching and persistence functionality to standard Image component.\n\n\nreact-native-parallax-scroll \u2605209 - Parallax Scroll component with sticky header, foreground, native-driver and all scrollable components (FlatList, ListView, SectionList, ScrollView) support.\n\n\nreact-native-shine-button \u2605205 - React Native for Effects like shining\n\n\nautoresponsive-react-native \u2605201 - A Magical Layout Library For React\n\n\nreact-native-autolink \u2605201 - Autolinking component for React Native\n\n\nreact-native-carousel-control \u2605199 - React Native Carousel control with support for iOS and Android.\n\n\nreact-native-picker-select \u2605199 - A Picker component for React Native which emulates the native <select> interfaces for iOS and Android\n\n\nreact-native-calendar-select \u2605195 - A component to select a date period from calendar modal, like Airbnb.\n\n\nreact-native-wheel-picker \u2605190 - React native cross platform picker.\n\n\nreact-native-grid-component \u2605188 - Easy to use grid component for your react-native project. Supports iOS and Android.\n\n\nreact-native-popover-menu \u2605188 - React Native: Native Popover Menu\n\n\nreact-native-collapsing-toolbar \u2605185 - wrapper for android CollapsingToolbarLayout\n\n\nreact-native-pagination \u2605182 - A Beautiful Pagination Plugin For Lists.\n\n\nreact-native-hero \u2605180 - A hero\/banner component with support for dynamic or static images, dynamic sizing, color overlays, and more.\n\n\nreact-native-selectme \u2605178 - A better Select dropdown menu for react-native\n\n\nreact-native-swiper-animated \u2605176 - Tinder-like swiper for react-native\n\n\nreact-native-tab \u2605171 - react-native-tab is a simple module for add a \"Tab Menu\" to your React Native app.\n\n\nreact-native-webbrowser \u2605167 - A cross-platform (iOS \/ Android), full-featured, highly customizable web browser module for React Native apps.\n\n\nreact-native-autocomplete \u2605163 - React Native Component for MLPAutoCompleteTextField\n\n\nreact-native-segmented-view \u2605159 - Segmented View for React Native (with animation)\n\n\nreact-native-cache-image \u2605158 - A cache-image for react-native\n\n\nreact-native-pulse-loader \u2605158 - Tinder like loader for your React Native app\n\n\nstacks \u2605156 - Stacks: a set of layout components for building RN views blazingly fast \u26a1, and with debug mode and design system grid you can investigate non-trivial visual issues.\n\n\nreact-native-display \u2605155 - This module brings \"Display: none\" (css style) to turn on\/off components from render. Using this module will improve your app performance and appearance with the enter\/exit animations.\n\n\nRNParallax \u2605155 - A react native scroll view component with Parallax header\n\n\nreact-native-checkbox \u2605154 - Checkbox component for React native\n\n\nreact-native-phone-input \u2605154 - Phone input box for React Native\n\n\nreact-native-switch-pro \u2605153 - A pretty nice switch for Android and iOS that have same performance on two platforms and clean code in the library.\n\n\nreact-native-popup \u2605153 - Popup for react-native\n\n\nreact-native-radial-menu \u2605153 - A Radial Menu optimized for touch interfaces\n\n\nreact-native-gestures \u2605152 - Composable gesture system in react native\n\n\nreact-native-page-control \u2605151 - React native page control, like ios UIPageControl\n\n\nreact-native-iconic \u2605149 - React Native - Animated Icons with different states\n\n\nreact-native-google-place-picker \u2605148 - React Native Wrapper of Google Place Picker for both Android and iOS.\n\n\nreact-native-scaling-drawer \u2605148 - React native scaling drawer.\n\n\nreact-native-image-carousel \u2605148 - Image carousel with support for fullscreen mode, image swiping and pinch-to-zoom in fullscreen mode.\n\n\nreact-native-offline-mode \u2605144 - Swap your app with an offline version while there's no connectivity\n\n\nreact-native-orientation-listener \u2605141 - A react-native library for obtaining current device orientation\n\n\nreact-native-multi-slider \u2605137 - Pure JS slider component with multiple markers for React Native\n\n\nreact-native-color-picker \u2605137 - React Native implementation of color picker for both Android and iOS.\n\n\nreact-native-android-statusbar \u2605135 - A react native android package to control the status bar.\n\n\nreact-native-privacy-snapshot \u2605133 - Obscure passwords and other sensitive personal information when a react-native app transitions to the background\n\n\nreact-native-custom-segmented-control \u2605132 - Native UI iOS component for Segmented Control with custom style\n\n\nreact-native-map-link \u2605131 - Open a location in the maps app of the user's choice.\n\n\nreact-native-sketch-canvas \u2605129 - A React Native component for drawing by touching on iOS and Android. (support drawing on image, text)\n\n\nreact-native-floating-labels \u2605126 - Reusabe floating lable component for react native\n\n\nreact-native-beautiful-video-recorder \u2605125 - The video recorder component that extends from react-native-camera. It works for both iOS & Android.\n\n\nreact-native-cell-components \u2605125 - Awesome react-native cell components! From a Cell to more complex & awesome components.\n\n\nreact-native-material-menu \u2605119 - Pure JavaScript material menu component for React Native.\n\n\nreact-native-bouncy-drawer \u2605116 - Highly customizable Bouncy Drawer\n\n\nreact-native-taptargetview \u2605114 - React Native Bridge for Android KeepSafe\/TapTargetView. An implementation of tap targets from the Material Design guidelines for feature discovery.\n\n\nphoto-viewer \u2605114 - A photo viewer for react native build on top of NYTPhotoViewer and FrescoImageViewer\n\n\nreact-native-switch-selector \u2605112 - A custom Switch Selector component for Android and iOS.\n\n\nreact-native-flexi-radio-button \u2605111 - Simple and flexible Radio button for React Native\n\n\nreact-native-triangle \u2605108 - Draw triangle views in react native\n\n\nreact-native-viewport-units \u2605107 - Incredibly simple utility for (sort of) using viewport units with React Native.\n\n\nreact-native-wheel-picker-android \u2605186 - Simple and flexible React native wheel picker for Android, including DatePicker and TimePicker.\n\n\nreact-native-device-display \u2605105 - A simple way to create dynamic views through device and display detection, allowing the creation of adaptable and universal apps.\n\n\nreact-native-android-kit \u2605104 - A set of native Android UI components and modules for React Native framework (Android Design Support Library, TabLayout, Floating Action Button and more...).\n\n\nreact-native-fading-slides \u2605103 - Simple looped fading slides carousel for React Native\n\n\nreact-native-scl-alert \u2605102 - React Native implementation of the package SCLAlertView-Swift\n\n\nreact-native-card-view \u2605101 - A react native card component\n\n\nreact-native-marquee-label \u2605100 - A marquee label for react-native\n\n\nreact-native-drawer-menu \u260597 - React Native Drawer Menu\n\n\nreact-native-simple-dialogs \u260597 - Cross-platform simple dialogs for React Native based on the Modal component.\n\n\nreact-native-swipe-a-lot \u260596 - A swipe component for React Native that works on iOS and Android.\n\n\nreact-native-submit-button \u260596 - Animated Submit button. Works on both android and ios\n\n\nreact-native-actions-sheet \u260594 - A Cross Platform(Android & iOS) ActionSheet with a flexible api, native performance and zero dependency code\n\n\nreact-native-dialog \u260592 - Pure JavaScript React-Native dialog\n\n\nreact-native-scrollable-mixin \u260591 - A standard interface for your scrollable React Native components, making it easier to compose components\n\n\nreact-native-open-maps \u260590 - A simple lib to open up the corresponding map application (Google or Apple Maps) from a set of coordinates (latitude & longitude) within react-native\n\n\nreact-native-swiper2 \u260586 - Swiper component for React Native. Supersede react-native-swiper\n\n\nreact-native-listitem \u260586 - iOS-style listitem component for React Native\n\n\nreact-native-progressive-input \u260586 - TextInput with clear button and activity indicator, used as part of autocomplete list.\n\n\nreact-native-in-app-notification \u260586 - Customisable in-app notification component for React Native\n\n\nreact-native-shared-preferences \u260585 - Android's Native key value storage system in React Native\n\n\nreact-native-emoji-picker \u260585 - Simple Emoji picker for react-native with optional modal-like component\n\n\nreact-native-scalable-image \u260585 - React Native Image component which scales width or height automatically to keep the original aspect ratio.\n\n\nreact-native-page-swiper \u260583 - Page Swiper component for React Native.\n\n\nreact-native-material-showcase-ios \u260581 - React Native Bridge for iOS aromajoin\/material-showcase-ios. An elegant and beautiful showcase for iOS apps.\n\n\nreact-native-label-select \u260581 - A modal selector for React Native with selected items displayed as labels.\n\n\nreact-native-3dcube-navigation \u260580 - Page Swiper component with 3D cube transition (horizontal and vertical)\n\n\nreact-native-keyboard-accessory \u260580 - Keyboard Accessory (View, Navigation) Component. Sticky views on keyboard.\n\n\nreact-native-draggable-grid \u260579 - A React Native draggable and sortable grid component write by typescript.\n\n\nreact-native-textinput-utils \u260579 - A react native extension which allows you to control TextInput better.\n\n\nreact-native-idle-timer \u260579 - An Objective-C bridge that allows you to enable and disable the screen idle timer in your React Native app\n\n\nreact-native-snackbar-component \u260577 - A snackbar component for Android and iOS, customizable and simple.\n\n\nreact-native-charts \u260576 - Delightfully-animated data visualization.\n\n\nreact-native-android-blurryoverlay \u260575 - A react native android package to show a blurry overlay.\n\n\nreact-native-calendar-datepicker \u260575 - A cross-platform calendar datepicker\n\n\nreact-native-scrollview-smart \u260575 - A Smart ScrollView component for IOS and Android.\n\n\nreact-native-zoom-image \u260575 - An image viewer component for react-native, like twitter's image viewer.\n\n\nreact-native-picker-xg \u260574 - A picker for both Android and iOS\n\n\nreact-native-status-bar-height \u260573 - A small library that helps you to get status bar height easily. It also support iPhone X.\n\n\nreact-native-color-wheel \u260572 - A react native reusable color picker wheel\n\n\nreact-native-scrollview-lazyload \u260571 - react-native scrollview with image lazy load\n\n\nreact-native-pure-navigation-bar \u260571 - A fully customizable navigation bar in React Native.\n\n\nreact-native-material-cards \u260570 - A material design card component, customizable and versatile.\n\n\nreact-native-item-cell \u260569 - React Native default style iOS item cell\n\n\nreact-native-calendario \u260569 - React Native Calendar DatePicker\n\n\nreact-native-picker-android \u260567 - react-native-picker-android\n\n\nreact-native-nested-stylesheet \u260567 - Nestable stylesheets for react-native.\n\n\nreact-native-dropdown-android \u260565 - Simple wrapper for Android's Spinner to use with react-native\n\n\nreact-native-slot-machine \u260565 - A text slot machine component for react-native\n\n\nreact-native-swipeview \u260565 - SwipeView component used to perform actions like swipe to delete, works on iOS and Android\n\n\nreact-native-download-button \u260564 - React Native Download Button: with pretty cool animation\n\n\nreact-native-siri-wave-view \u260564 - React Native: Native Siri Wave View\n\n\nreact-native-card-media \u260563 - Card media component & Support multiple image layout\n\n\nreact-native-simple-picker \u260562 - A simple react-native select picker\n\n\nreact-native-view-pdf \u260562 - PDF viewer for React Native\n\n\nreact-native-touchable-bounce \u260562 - React Native Touchable Bounce\n\n\nreact-native-streetview \u260561 - Google's Panorama\/StreetView component for iOS and Android.\n\n\nreact-native-thumbnail \u260560 - Get thumbnail from local media.\n\n\nreact-native-simple-stepper \u260560 - A super simple react-native implementation of the UIStepper iOS control.\n\n\nreact-native-phone-picker \u260558 - a quick phone picker control\n\n\nreact-native-infinite-scrollview \u260558 - ScrollView with infinite paged scrolling (no looping)\n\n\nreact-native-select-multiple  \u260558 -A simple and easy to use component for multiple selection of item from List.\n\n\nreact-native-easy-content-loader \u260557 - React-Native light weight skeleton content loading.\n\n\nreact-native-multiple-choice \u260557 - A cross-platform (iOS \/ Android) single and multiple-choice React Native component.\n\n\nk-react-native-swipe-unlocker \u260555 - A simple swipe unlock for React Native\n\n\nreact-native-walkthrough-tooltip \u260555 - Highlight a component via tooltip\/popover\n\n\nreact-native-adbannerview \u260552 - React Native Bridge for ADBannerView\n\n\nreact-native-fxblurview \u260552 - React Native wrapper for popular FXBlurView library for realtime, fine-tuned blur effects\n\n\nreact-native-beautiful-image \u260552 - The Beautiful Image component that supports fadeIn animation and shows placeholderSource if the main source can't be loaded.\n\n\nreact-native-fs-modal \u260551 - React native full screen modal component.\n\n\nreact-native-toast-native \u260551 React Native Toast component for both Android and iOS.\n\n\nreact-native-masked-view \u260550 - A element for react-native\n\n\nreact-native-md-motion-buttons \u260550 - Material design motion button inspired by inVision app.\n\n\nreact-native-drop-refresh \u260549 - A pull down to refresh control for react native.\n\n\nreact-native-pin-view \u260548 - Easy, convenient, quick-forming PinView component. It runs smoothly for both IOS and Android.\n\n\nreact-native-radio-button-classic \u260547 - Bring Classic Radio to React-Native\n\n\nreact-native-image-intent \u260547 - Image intent receiver for React Native android\n\n\nreact-native-dial \u260547 - A react native reusable and efficient dial knob element.\n\n\nreact-native-date \u260546 - React Native date and time pickers for Android\n\n\nreact-native-draggable-drawer \u260546 - DraggableDrawer component for React Native.\n\n\nreact-native-date-picker \u260546 - A date picker component for Android and iOS\n\n\nreact-native-message-composer \u260545 - React Native module bridge to iOS MFMessageComposeViewController\n\n\nreact-native-layout \u260545 - Semantic JSX layout components for react-native\n\n\nreact-native-touch-visualizer \u260545 - Visualize touches and drags on React Native apps for iOS.\n\n\nreact-native-calendar-android \u260544 - A simple material-themed calendar for react native android\n\n\nreact-native-air-progress-bar \u260544 - React Native progress-bar component, customizable and animated\n\n\nreact-native-full-screen \u260544 - React Native FullScreen api and element\n\n\nreact-native-full-image-picker \u260544 - Support taking photo, video recording or selecting from photo library.\n\n\nreact-native-viewport \u260543 - Viewport dimensions for react-native\n\n\nreact-native-progress-circular \u260543 - A pure React Native Component for circular progress bars for both iOS and Android.\n\n\nreact-native-tween-animation \u260543 - A simple react native state tween animation module.\n\n\nreact-native-flanimatedimage \u260543 - FLAnimatedImage for React Native.\n\n\nreact-native-grading \u260543 - React Native Component for grading scores using ReactART.\n\n\nreact-native-auto-typing-text \u260543 - An auto typing text component for react-native\n\n\nreact-native-slack-webhook \u260542 - Follow some activities (new user, payment,...) from your app via Slack and this webhook lib.\n\n\nreact-native-simpledialog-android \u260541 - React Native Android module to use Android's AlertDialog - same idea of AlertIOS\n\n\nreact-native-toolkit \u260541 - A collection of common UI components for react native mobile apps.\n\n\nreact-native-draggable-grid \u260541 - A React Native draggable and sortable grid component write by typescript.\n\n\nreact-native-sortable-gridview \u26054 - A React Native sortable and draggable Grid View Component.\n\n\nreact-native-elastic-stack \u260541 - ReactNative component that implements elastic stack effect\n\n\nreact-native-big-slider \u260541 - Yet another, big one, pure JS easily customisable and hackable react-native slider component.\n\n\nreact-native-custom-actsheet \u260540 - A custom ActionSheet for react-native\n\n\nrn-render-perfs \u260540 - Measure React rendering lifecycles using UI controls\n\n\nreact-native-animated-check-mark \u260540 - A small react component for animated cross-mark transformation.\n\n\nreact-native-easy-dnd \u260539 - Drag and drop component for react-native\n\n\nreact-native-fab \u260539 - A FAB button component for Android and iOS, customizable, simple and as per material design specs.\n\n\nreact-native-popupwindow \u260538 - Android PopupWindow for react-native module\n\n\nreact-native-wheel \u260538 - android wheel view for react-native\n\n\nreact-native-bar-collapsible \u260538 - A Bar component that can be collapsible (toggle\/accordion), clickable or text-only.\n\n\nreact-native-circle-view \u260537 - circle progress for react native android using CircleView\n\n\nreact-native-slidable-tab-bar \u260537 - Slidable tab bar for instant view rendering(react-native)\n\n\nreact-native-scrollable-decorator \u260537 - A standard interface for your scrollable React Native components, making it easier to compose components\n\n\nreact-native-circle-checkbox \u260537 - Circle checkbox component for React Native\n\n\nreact-native-newsticker \u260535 - The News Ticker component for React Native\n\n\nreact-native-awesome-alert \u260535 - Customizable modal components with \u2714\ufe0fcheck options in React Native\n\n\nreact-native-view \u260534 - Lightweight View component for quick styling.\n\n\nreact-native-draggable-calendar \u260534 - A calendar component supporting dragging.\n\n\nreact-native-countdown \u260533 - react native countdown button\n\n\nreact-native-dashed-border \u260533 - A element for react-native\n\n\nreact-native-writebox \u260533 - (iOS \/ Android) Facebook\/Twitter textarea that autogrow and count characters.\n\n\nreact-native-ibeacon-simulator \u260532 - React Native Library to simulate device act as an iBeacon\n\n\nreact-native-suggester \u260532 - React-Native package to decorate TextInput and get suggestions with good UX.\n\n\nreact-native-photo-grid \u260531 - React Native component that handles the complexities of building a grid of photos with a flexible number of photos per row.\n\n\nreact-native-android-iconify \u260530 - icons for react native android using android-iconify\n\n\nreact-native-touchable-set-active \u260530 - Touchable component for React Native that enables more advanced styling by setting an active state. Most useful for building your own touchable\/button components on top of.\n\n\nreact-native-telephone-input \u260530 - React Native Telephone Input, discover country and mask telephone Input\n\n\nreact-native-nmrangeslider-ios \u260529 - The NMRangeSlider component for React Native\n\n\nreact-native-fade-in-view \u260529 - A simple and lightweight RN component that fades in its children\n\n\nreact-native-gl-image-filters \u260527 - React Native GL Filters for Image implementation.\n\n\nreact-native-focus-scroll \u260526 - react-native-focus-scroll can detect which children are focused when scrolling.\n\n\nreact-native-about-libraries \u260526 - React Native: It offers information about install packages\n\n\nreact-native-actionsheet-native \u260525 - Android ActionSheet support for React Native\n\n\nreact-native-comparison-slider \u260525 - A simple component to display two image in comparison with a slide-over feature.\n\n\nreact-native-selectmultiple-button \u260525 - A button (or a grouped buttons) supporting multiple or radio selection\n\n\nreact-native-timeline-theme \u260525 - Collection of TimeLine theme. This package only use flexbox(without absolute) & FlatList\n\n\nreact-native-date-range-picker \u260525 - Simple date range picker extended from react-native-calendars \ud83d\udcc6\n\n\nreact-native-circle-progress \u260524 - A custom Circle Progress Indicator for React Native\n\n\nreact-native-app-intro-v2 \u260524 - Latest App intro\n\n\nreact-native-starrating \u260524 - a react-native component for display interactive star ratings\n\n\nreact-native-echarts-wrapper \u260524 - Powerful ECharts wrapper build for React Native\n\n\nreact-native-orientation-controller \u260523 - A react-native library for obtaining and controlling the current device and application orientation\n\n\nreact-native-match-media \u260523 - window.matchMedia mock for React Native\n\n\nreact-native-simple-card-view \u260523 - Easiest way to adding a card view on your screen.\n\n\nmonalisa-ui \u260522 - MonalisaUI is UI component library for React Native to build native mobile apps for iOS and Android platforms\n\n\nreact-native-square-view \u260522 - A square view component for react native.\n\n\nreact-native-ichart \u260522 - ichart for react-native\n\n\nreact-native-dropbox-chooser \u260521 - React Native dropbox chooser module\n\n\nreact-native-compress \u260521 - Compress video for react native. Only for iOS, Android will be coming.\n\n\nreact-native-custom-actionsheet \u260521 - Fully customizable ActionSheet for React Native.\n\n\nreact-native-timepicker \u260520 - React Native timepicker for iOS\n\n\nreact-native-custom-checkbox \u260520 - React Native checkbox that can be customize. Works for both Android and iOS.\n\n\nreact-native-tilt \u260520 - Tilt effect with accelerometer for React Native components.\n\n\nreact-native-drawpad \u260520 - A pad for users to draw by touching\n\n\nrn-ab-hoc \u260519 - Poor intrusive way to make A\/B Testing by using an HoC instead of components.\n\n\nreact-native-expand \u260519 - A react-native expandable component for both Android and iOS\n\n\nreact-native-modal-loader \u260519 - Customizable animated modal progress hud for react apps.\n\n\nreact-native-images-collage \u260519 - Robust interactive image collage component for React Native.\n\n\nreact-native-avatar-gravatar \u260518 - React Native Gravatar component\n\n\nreact-native-image-modal \u260516 -  simple full size modal image for iOS and Android. supports zoom-in\/out, double-tap zoom-in\/out, move and swipe-to-dismiss\n\n\nreact-native-notifier \u260516 - Fast and simple in-app notifications for React Native\n\n\nreact-native-grid \u260515 - The 24-column grid component for react-native\n\n\nreact-native-search \u260515 - Native Search component for react native.\n\n\nrn-displayable \u260515 - Display your components based on props or a set of rules\n\n\nreact-native-custom-picker \u260515 - React native customizable picker component.\n\n\nreact-native-confirmation-code-field \u260515 - A React Native component to input confirmation code for both Android and IOS\n\n\nreact-native-android-circles \u260514 - A react native android package to show a circle progress view.\n\n\nreact-native-code-verification \u260513 - An UI module for user-side pincode verification.\n\n\nreact-native-hijri-date-picker \u260513 - Date Picker Dialog for Hijri calendar for android.\n\n\nreact-native-imagewand \u260513 - image wand for react native\n\n\nreact-native-gravatar \u260513 - react-native wrapper for gravatar-api\n\n\nreact-native-rebound-scrollview \u260512 - React Native Android ReboundScrollView implementation.\n\n\nreact-native-calculator \u260512 - React Native Calculator and Calculator Input Component.\n\n\nreact-native-navbar-color \u260512 - Change Navigationbar Color in Android\n\n\nradio-buttons-react-native \u260511 - Animated radio buttons component for react native\n\n\nreact-native-piechart \u260510 - A component for React Native\n\n\nreact-native-seekbar-android \u260510 - A React Native wrapper Android's SeekBar\n\n\nreact-native-coachmasks \u260510 - react-native-coachmark! It helps you easily create Coach Marks to enhance user experience!\n\n\nreact-native-progress-button \u260510 - A react native button component that can show progress.\n\n\nreact-native-quiltview \u26059 - Native iOS UICollectionView wrapper with RFQuiltLayout for React Native\n\n\nreact-native-relative-units \u26059 - Relative units for React Native\n\n\nreact-native-simple-button \u26059 - A simple react-native button\n\n\nreact-native-styled-toast \u26059 - A themeable toast component for React Native.\n\n\nreact-native-frame-loading \u26059 - The Loading indicator with frame by frame view animation\n\n\nreact-native-rheostat \u26059 - Inspired by Airbnb's rheostat, a powerful slider with assorted data visualized charts.\n\n\nreact-native-country-picker \u26058 - React Native Country Picker\n\n\nreact-native-flex-label \u26058 - A text label for React Native that handles multiple lines of text with ellipses truncation as well as vertical alignment within it's view container.\n\n\nreact-native-link \u26058 - A link component\n\n\nreact-native-stylesheet-xg \u26058 - extension stylesheet for cross platforms and responsive\n\n\nreact-native-censored \u26058 - React Native component to censor content.\n\n\nreact-native-bouncing-ball \u26058 - React Native component bouncing ball for both iOS and Android.\n\n\nreact-native-loading \u26057 - A lightweight loading for your React Native app.\n\n\nreact-native-segment-control \u26057 - A swipeable SegmentedControl component for React Native apps.\n\n\nreact-native-animated-styles \u26057 - Easily animate\/transition react components between two style states.\n\n\nreact-native-hide-modal \u26056 - Modal component that can be hidden\n\n\nreact-native-masonry-brick-list \u26055 - Staggered Or Masonary List View For React Native Written in pure js\n\n\nreact-native-blur-overlay \u26055 - React Native Blur Overlay Library For Ios And Android\n\n\nreact-native-rate-modal \u26055 - Hackable \"rate us\" component for React Native.\n\n\nreact-native-fancy-carousel-viewpager \u26054 - React Native Designed View Pager Library (pure js)\n\n\npinar \u26054 - Customizable, lightweight React Native carousel component with accessibility support.\n\n\nreact-native-svg-transformer \u26054 - Import SVG files inside React Native components. Uses the react-native-svg library to render SVG images.\n\n\nreact-native-progress-steps \u26054 - A simple and fully customizable React Native component that implements a progress stepper UI.\n\n\nreact-native-loader-hud \u26053 - Loader animation library for React Native\n\n\nreact-native-double-buffer \u26053 - Simple React Native Double Buffer View\n\n\nreact-native-fontbase \u26053 - Defining font sizes in React Native\n\n\nreact-native-units \u26052 - A collection of useful units and a simple grid implementation for responsive layouts in React Native.\n\n\nreact-native-easy-checkbox \u26052 - Simple CheckBox for react-native\n\n\nreact-native-scene-manager \u26052 - Simple Scene Manager for React-Native\n\n\nreact-native-rounded-navigation-drawer \u26052 - React Native Designed Navigation Drawer Library (Pure Js)\n\n\nreact-native-expandable-fab-menu \u26052 - React Native Expandable Fab Menu Component (pure js)\n\n\nreact-native-animated-bottom-tabbar \u26052 - Animated bottom Tab bar for react native\n\n\nreact-native-create-new-file-ios \u26051 - A react-native interface for creating a blank new file on ios. File must not already exist.\n\n\nreact-native-picker-module \u26051 - A different approach for React Native Picker.\n\n\nreact-native-countries \u26051 - This package is provide you directly native countries name & code list from device.\n\n\nreact-native-scrubber \u26051 - A simple audio\/video Scrubber for both iOS and Android.\n\n\nreact-native-loader-kit \u26051 - Purely native loading animations for React Native.\n\n\nreact-native-new-feature \u26051 - A simple and lightweight What's New component to show your latest React native Features.\n\n\nreact-native-sdr - Server Driven Rendering (SDR) component for React Native\n\n\nreact-native-store-view \u260519 - Wraps SKStoreProductViewController for use in react-native projects\n\n\nreact-native-image-container \u26050 - Image container for React Native\n\n\nreact-native-counters \u26050 - Minus Plus Counter for React Native\n\n\nreact-native-gradient-buttons - A lightweight, customizable and haptic Gradient Button component for React Native.\n\n\nreact-native-auth-screens - A series of Authentication Views for React Native: Sign In, Social Sign In Sign Up, and Forgot Password. Uses react-native-gradient-buttons.\n\n\nreact-native-animated-flatlist - Animated Flatlist for React Native.\n\n\nswipeable-modal-react-native - A 'pop-up' modal that can be swiped away left or right to run different functions.\n\n\nreact-native-countdown-text - A React Native component that converts a timestamp of a future date to a readable countdown clock, based on a format.\n\n\nrn-actionsheet-module \u26050 - BottomsheetDialog & ActionSheetIOS with same props and usage.\n\n\nreact-native-animated-loader - A React Native Loader Component which uses Airbnb's Lottie for beautiful loader animations.\n\n\nrn-verifcode - React-Native component to input confirmation code for both Android and IOS\n\n\nreact-native-picker-modal-view - React Native Module to select item picker modal.\n\n\nrn-material-textinput - A simple TextInput wrapper for material styling in iOS and Android with Customizable styles & Animated label.\n\n\nrn-action-picker - A simple action picker for iOS and Android. Renders Native ActionSheetIOS Component in iOS and custom ActionSheet lookalike component in Android.\n\n\nrn-collapsible-section - A collapsible section \/ section list with customizable section body and child body. Supports both iOS and Android.\n\n\nview-on-steroids - React-Native View component with inline styles\n\n\nreact-native-eva-icons - Eva Icons implementation for React Native based on react-native-svg elements.\n\n\nreact-native-dots-pagination \u26053 - A simple dot paging for React Native.\n\n\nreact-native-gesture-detector - Easily create and detect custom, complex gestures on React Native.\n\n\nreact-native-scrollview-header \u26055 - An animated ScrollView header that transitions from transparent background to opaque upon scrolling.\n\n\nreact-native-wizard - Easily navigate your user for next step. Quick-forming Wizard component.\n\n\nreact-native-timetable - \ud83d\udcc6 timetable library for React Native\n\n\nreact-native-material-drawer - React Native Material Drawer for iOS, Android, Web, and Electron\n\n\nNavigation\n\nreact-navigation \u260514233 - Easy to use Navigation for React Native\nreact-native-navigation \u26059325 - App-wide support for 100% native navigation with an easy cross-platform interface.\n\n\nreact-native-navigation-hooks \u2605109 - A set of React hooks for React Native Navigation.\n\n\nreact-native-router-flux \u26057720 - React Native Router based on new React Native Navigation API\nkittenTricks \u26054227 - A react native mobile starter kit with over 40 screens and theme hot reload support\nnative-navigation \u26053060 - Native navigation library for React Native applications\nreact-native-navbar \u26051824 - Simple customizable navbar component for react-native\nreact-native-router \u26051203 - Awesome navigation for your native app.\nex-navigation \u26051019 - A route-centric, batteries-included navigation library for Exponent and React Native that works seamlessly on Android and iOS.\nreact-native-controllers \u2605580 - Truly native no-compromise iOS navigation for React Native.\nex-navigator \u2605531 - Route-centric navigation built on top of React Native's Navigator\nreact-native-nav \u2605262 - A cross-platform (iOS \/ Android), fully customizable, React Native Navigation Bar component\nreact-native-navigation-drawer \u260598 - A slide menu inspired from Android for React-Native\nreact-native-ya-navigator \u260588 - Yet another react native navigator component\nnavbar-native \u260586 - A new, fully customizable Navbar component for React-Native\nreact-native-swiper-flatlist \u2605\u2605 \u260581 - \ud83d\udc46 React Native Swiper component implemented with FlatList\nreact-native-easy-router \u260578 - React Native router with easy-to-use API\nreact-native-navigator \u260574 - A simple router for react native\nreact-navigation-magic-move \u260562 - Bindings for using react-navigation with react-native-magic-move \ud83d\udc30\ud83c\udfa9\u2728 (shared element transitions)\nreact-native-navigation-bar \u260559 - react-native-navigation-bar\nreact-native-url-handler \u260537 - Navigate to external URLs, handle in-app URLs, and access system URLs\nreact-native-grid-list \u2605 \u260528 - React Native Grid List component\nreact-native-route-navigator \u260527 - React-Native page navigation using URIs.\nreact-native-transparent-bar \u260516 - react native navigator transparent bar\nreact-native-email-chip \u26058 - A simple yet customizable component to display a chip list of emails\nreact-native-invoke-app \u26058 - Bring React Native App to foreground from Headless JS\nreact-native-keyboard-sticky-view \u26057 - Keyboar Sticky View with animation and renderProps\nsajjad-brick-list \u26055 - Staggered Or Masonary List View For React Native Written in pure js\nreact-native-router-sinux \u2605 \u26054 - React Native Router based on new NavigationExperimental that use Sinux as Flux implementation.\nreact-native-simple-slider \u26053 - This is a simple javascript slider component for react native\nreact-native-header-scroll-view \u26053 - iOS-style large header scroll view.\nreact-native-navigation-buttons \u26052 - iOS navigation buttons for the React Native Navigator\nreact-native-hotspot \u26052 - A React Native component that displays hotspots over desired components to help lead your users through an onboarding flow or direct them towards new UI elements\nreact-native-pointer-interactions \u26052 - Expose iPad mouse & trackpads interactions to React Native.\nreact-native-yynavigator \u26051 - custom navigation bar for react-native\n\nNavigation\/Routing Articles\n\nBasics of using react-native-router-flux\nRouting and Navigation in React Native\nNavigatorIOS: Accessing onRightButtonPress from within child component\n\nNavigation Demos\n\nmovieapp \u26051441 \u2013 Discover Movies and TV shows - it uses redux and wix\/react-native-navigation\nExNavRelay \u260523 - React Native + Ex-navigation + Relay integration template\nReact Native Drawer & Bottom-Tab Navigation \u26056\nReact Native Example App: Navigation\n\nDeep Linking\n\nreact-native-deep-link \u260536 - React Native library to handle deep links\n\nText & Rich Content\n\nreact-native-hyperlink \u2605354 - A <Hyperlink \/> component for react-native that makes urls, fuzzy links, emails etc clickable and stylable\nreact-native-draftjs-render \u2605253 - A React Native render for Draft.js model\nreact-native-html-to-pdf \u2605171 - Convert html strings to PDF documents using React Native\nreact-native-htmltext \u2605132 - Use HTML like markup to create stylized text in react-native.\nreact-native-html-webview \u2605102 - Display (possibly untrusted) HTML using a UIWebView in React Native.\nreact-native-html-render \u260598 - A html render for react-native\nreact-native-markdown-display \u260557 - Highly customizable Markdown renderer using native components for all its elements without any web-view.\nreact-native-measure-text \u260548 - Measure text height without laying it out.\nreact-native-markdown-editor \u260547 - Markdown editor like github comment editor (contains preview, markdown buttons)\nreact-native-showdown \u260543 - React-native component which renders markdown into a webview!\nreact-native-file-viewer \u260533 - Preview any type of file supported by the mobile device\nreact-native-responsive-fontsize \u260522 - Provide responsive fontsize based on device height in React-Native\nreact-native-text-size \u260521 - Measure text accurately before laying it out and get font information from your App.\nreact-native-hypertext \u260520 - React Native module to render hypertext (text with links)\nreact-native-asciimage \u260517 - An ASCIImage component for React Native\nreact-native-universal-modal \u260516 - Universal simple modal component for React Native\nreact-native-html \u260511 - render html as react native custom elements\nreact-native-responsive-fontsize \u260583 - Provide responsive fontsize based on device height in React-Native\nrn-pdf-reader-js \u26056 - A PDF reader, in JavaScript only, for Expo, Android capable, PDF.JS\n\nAnalytics\n\nreact-native-fabric \u26051097 - A React Native library for Fabric, Crashlytics and Answers\nreact-native-google-analytics-bridge \u26051071 - A native Google Analytics bridge for React Native. Uses the official libraries on both iOS and Android.\nreact-native-google-analytics \u2605325 - Google Analytics for React Native!\nreact-native-mixpanel \u2605307 - A React Native wrapper for Mixpanel tracking\nreact-native-ab \u2605160 - A component for rendering A\/B tests in React Native\nreact-native-segment-io-analytics \u260568 - A React Native Segment wrapper!\nreact-native-ux-cam \u260532 - React Native wrapper for uxcam.com.\nreact-native-td \u260526 - An unofficial React Native SDK for Treasure Data.\nreact-native-flurry-sdk \u260515 - Official React Native wrapper for Flurry SDK. Supports Android, iOS and tvOS.\n\nUtils & Infra\n\ndetox \u26053566 - Graybox End-to-End (functional) Tests and Automation Library for Mobile with first class support for React Native\nreact-native-workers \u2605616 - Background services and web workers for react-native\nreact-native-mock \u2605504 - A fully mocked and test-friendly version of react native\nloki \u2605395 - Visual Regression Testing for Storybook\nreact-native-slowlog \u2605271 - A high-performance timer based profiler for React Native that helps you track big performance problems\nreact-native-zip-archive \u2605173 - Zip \/ Unzip archive utility\nreact-native-tips \u2605160 - This module is used to create easily some tips to help your new users to understand how works your app.\ncodemod-RN24-to-RN25 \u2605104 - a simple codemod to handle the new import style on >=RN25\nreact-native-linkedin \u2605101 React-Native LinkedIn, a simple LinkedIn login library for React-Native or Expo with WebView and Modal\nreact-native-eval \u260575 - Call any JS functions from your native code\nreact-native-device-log \u260573 - A UI and service for displaying dev-logs on devices.\nreact-native-call-detection \u260573 - Helps to detect different call states like Incoming, Disconnected, Dialing and Connected\nreact-native-userdefaults-ios \u260566 - React Native Module for NSUserDefaults\nreact-native-webp \u260556 - react-native-webp adds support for WebP images for react-native components.\nreact-native-global-event-emitter \u260550 - Shared event emitter between native and JS for React Native.\nreact-native-user-defaults \u260548 - ios UserDefaults used by react-native\nreact-native-console-time-polyfill \u260545 - console.time and console.timeEnd polyfill for react-native\nreact-native-aws-signature \u260542 - help generate signature required for using AWS API. Necessary to use S3, ec2, or other services.\nreact-native-rsa \u260541 - RSA crypto lib for react native\nreact-native-html-parser \u260538 - parse html in react-native\npixels-catcher \u260526 - Library for testing React Native UI components and screens\nreact-native-aes \u260524 - AES in react-native\nreact-native-hour-format \u260520 - Get hour format from OS settings.\nreact-native-des \u260520 - A des crypto for react-native\nreact-native-babel-jest \u260515 - Simple testing configuration for React Native with Jest\nreact-native-simple-encryption \u260514 - Simple XOR and base_64 encryption decryption for react-native\nreact-native-immutable \u260512 - using immutable.js library with react-native\nreact-native-util \u260512 - A fork of io.js's util module that works with React Native\nreact-native-referrer \u260511 - React Native android only library to retrieve campaign referrer.\nreact-native-webpackager-server \u26056 - react native webpackager server\nreact-native-crypto \u26056 - implementation of crypto for React Native\nreact-native-fluxbone \u26055 - A group of libraries that help with the FluxBone pattern in React Native\nreact-native-cross-settings \u26055 - React Native Settings module for both Android & iOS.\nreact-native-HsvToRgb \u26053 - a helper to convert HSV(HSB) color to RGB.\nreact-native-use-persist-storage \u26053 - Persist and rehydrate your context(state) using React Hooks\nreact-native-tools \u26050 - Tools for react native project development\nreact-native-call-observer - Helps to observe call status like incoming, ended, and connected (iOS).\nreact-native-iphone-se-helper \u26050 - utils for developing iphone SE size.\nreact-native-mov-to-mp4 \u260544 - utils for Converting mov file to mp4 for cross-platform playback compatibility.\n\nForms\n\nformik \u260510633 - Forms in React, without tears.\nreact-hook-form \u26059346 - React hooks for forms validation without the hassle.\nredux-form \u26054829 - Redux form state management (Web and Native)\nredux-hook-form \u26052700 - React hooks for form validation without the hassle. (Web and Native)\ntcomb-form-native \u26052831 - Generate React Native forms\nreact-native-gifted-form \u26051317 - Form component for react-native\nreact-native-clean-form \u2605414 - Good looking form elements with redux-form integration. Stylable with styled-components.\nreact-native-form-generator \u2605354 - Generate amazing React Native forms in a breeze\nreact-native-form \u2605138 - A simple react-native component to wrap your form fields!\nreact-reactive-forms \u2605106 - Angular like reactive forms in React.\nreact-native-forms \u260586 - A declarative API for creating, validating, and serializing native-looking forms.\nreact-native-formawesome - Complex and simple forms builder.\nreact-native-from-builder \u260569 - Handle your forms in a smart way.\nfoect \u260537 - Simple form validation library for React Native\nreact-native-fm-form \u260513 - Generate list view form of React Native in few line of codes\nreact-native-form-flux \u26052 - React Native Form management using Flux architecture\nreact-native-form-validator \u26050 - A simple validation library for react native\n\nGeolocation\n\nreact-native-background-geolocation \u26051316 - Sophisticated cross-platform background location-tracking & geofencing module with battery-conscious motion-detection intelligence (Android requires paid license).\nreact-native-mauron85-background-geolocation \u2605657 - React Native Android and iOS module for background and foreground geolocation with battery-saving \"circular region monitoring\" and \"stop detection\"\nreact-native-geocoder \u2605344 - react native geocoding and reverse geocoding\nreact-native-geo-fencing \u2605100 - Native modules to determine if a location is within defined geographical boundaries using Google Geometry library\nreact-native-fused-location \u260582 - Finest location for react-native on Android using the new Fused API.\nreact-native-android-geolocation \u260519 - React Native Module to use Android Geolocation via Google Play API\nreact-native-reverse-geo \u260518 - React Native module bridge to convert address to geo coordinates.\nreact-native-boundary \u260512 - React Native module to use geofences. Native implementation for iOS and Android.\nreact-native-geolocation-android \u26053 - Geolocation module for react native android\n\nInternationalization\n\n\nfbt \u26053202 - A JavaScript Internationalization Framework\n\n\nreact-native-localize \u2605603 - React Native Localize\n\n\nreact-native-globalize \u2605192 - Globalization helper for React Native\n\n\nredux-react-native-i18n \u260540 - An i18n solution for React Native apps on Redux\n\n\nreact-native-intl \u260537 - React Native module shipped native Intl implementation and Translation extension\n\n\nrn-translate-template \u260518 - I18n template for all iOS and Android supported languages\n\n\nreact-native-i18n \u26051778 - React Native + i18n.js Deprecated for react-native-localize\n\n\nreact-native-languages \u2605246 - React Native properties and methods related to the language of the device Now called react-native-localize\n\n\nBuild & Development\n\nreactotron \u26059198 - Control, monitor, and instrument your React Native apps from the comfort of your terminal.\nreact-native-code-push \u26055184 - React Native plugin for the CodePush service\nreact-native-webpack-server \u2605935 - Build React Native apps with Webpack\ngenerator-rn-toolbox \u2605800 - Yeoman generators to kickstart your project and setup continuous deployment.\nbabel-preset-react-native-stage-0 \u260597 - a Babel preset with latest Javascript goodies\nreact-native-debug-stylesheet \u260575 - Add coloured borders or backgrounds to all views to make it easier to debug layout issues\nreact-native-console-panel \u260573 - react native component for display console messages.\nreact-native-css-loader \u260539 - You can use react-native-css-loader with react-native-webpack-server, which can use webpack to built react-native app better.\nreact-native-assets \u260531 - Module to manage assets. It allows you download assets from a network and store into a specific local folder on iOS\nreact-native-cosmos \u260518 - DX tool to test react-native components with defined props\/state fixtures.\nreact-native-kill-packager \u260515 - kill running react native packager.\nreact-native-build-cli \u26053 - a cli tool for react-native build\n\nStyling\n\nstyled-components \u260520064 - Style React and React Native with utilising tagged template literals.\nemotion \u26055627 - Style as a function of state.\nreact-native-extended-stylesheet \u26051689 - Extend React Native stylesheet with variables, relative units, percents, math operations, scaling and other stuff.\nreact-native-css \u2605755 - Style React-Native components with css and built in support for SASS.\nreact-native-style-tachyons \u2605525 - functional, maintainable design for everyone based on tachyons.css.\nglamorous-native \u2605454 - A React Native version of glamorous - a component styling library.\nreact-native-responsive \u2605295 - The power of Media Queries now in your React Native project (ios and android) ! Responsive Design can now be easily managed !\ncairn \u2605110 - Simple, string-based style selector engine with support for basic inheritance.\nreact-native-theme \u2605104 - Theme manager for react native project!\nreact-native-css-modules \u260544 - Style React-Native components using CSS, Sass, Less or Stylus.\nrn-less \u260515 - Style react-native with less (with VS Code extension support)\nreact-native-prism \u260510 - Minimal, idiomatic style management for React Native\nreact-native-paint \u26055 - A themeable abstraction over React Native StyleSheet. Read about it here.\nbinstorm \u26055 - BinStorm is a React Native styling utility for rapidly building custom user interfaces. Read about it here.\nstyled-react-native - Advanced react native styling with simple method (style overwrites, component composition, enhanced style property). Full intro in this Medium article.\nreact-native-tailwindcss - A react native styling system based on TailwindCSS.\n\nSystem\n\nreact-native-firebase \u26054192 - A well tested feature rich Firebase implementation for React Native, supporting both iOS & Android platforms for 10+ Firebase modules (including Cloud Firestore).\nreact-native-push-notification \u26053431 - React Native Local and Remote Notifications\nreact-native-device-info \u26053145 - Get device information using react-native\nreact-native-fs \u26052465 - Native filesystem access for react-native\nreact-native-config \u26051894 - Config variables for React Native apps\nreact-native-ultimate-config - Configure all levels of your react-native app with a single file\nreact-native-fcm \u26051564 - react native module for firebase cloud messaging and local notification\nreact-native-notifications \u26051396 - React native notifications\nreact-native-arkit \u26051290 - React Native binding for iOS ARKit\nreact-native-permissions \u26051118 - Check and request all permissions with a single api\nreact-native-keychain \u2605992 - Keychain Access for React Native\nreact-native-touch-id \u2605902 - React Native authentication with the native Touch ID popup.\nreact-native-contacts \u2605882 - React Native Contacts (android & ios)\nreact-native-communications \u2605871 - Easily call, email, text or iMessage someone in React Native\nreact-native-onesignal \u2605871 - React Native Library for OneSignal Push Notifications Service (iOS + Android)\nreact-native-in-app-utils \u2605743 - A react-native wrapper for handling in-app payments.\nreact-native-image-resizer \u2605636 - Rescale local image files with React Native.\nreact-native-quick-actions \u2605593 - A react-native interface for 3D Touch home screen quick actions\nreact-native-billing \u2605534 - In-app purchase implementation for React Native on Android.\nreact-native-barcodescanner \u2605491 - A barcode scanner component for react native - not maintained anymore - use react-native-camera.\nreact-native-iap \u2605450 - React-native native module for In-App Purchase.\nreact-native-dotenv \u2605450 - A Babel preset let you import application configs from .env file (zero runtime dependency)\nreact-native-location \u2605425 - Native GPS location support for React Native.\nreact-native-background-fetch \u2605373 - iOS BackgroundFetch API implementation. Awakens a suspended iOS app in the background to execute a callbackFn about every 15 min.\nreact-native-queue \u2605359 - Your swiss army knife for task management in React Native - easily manage background tasks that run periodically when app is closed and dedicated worker threads.\nreact-native-sensors \u2605355 - Platform independent wrapper for sensors like Gyroscope, Accelerometer and Magnetometer with RxJS interface\nreact-native-social-share \u2605347 - Use the iOS native Twitter and Facebook share view from react native\nreact-native-ibeacon \u2605334 - iBeacon support for React Native. The API is very similar to the CoreLocation Objective-C one with the only major difference that regions are plain JavaScript objects. Beacons don't work in the iOS simulator.\nreact-native-lock-ios \u2605291 - Auth0 Lock for React Native (iOS)\nreact-native-motion-manager \u2605223 - A react-native interface for using the Gyroscope, Accelerometer and Magnetometer\nreact-native-android-sms-listener \u2605194 - Allows you to listen for incoming SMS messages\nreact-native-device \u2605185 - UIDevice wrapper for React Native\nreact-native-gcm-android \u2605174 - GCM for Android\nreact-native-sensor-manager \u2605172 - Wrapper for react-native providing native sensors access. (Gyroscope, accelerometer, magnetometer, thermometer...)\nreact-native-ble \u2605157 - React Native BLE using noble api surface\nreact-native-haptic \u2605137 - iOS 10 + haptic feedback for React Native applications\nreact-native-pinch \u2605130 - SSL pinning for react native\nreact-native-unified-contacts \u2605120 - React Native iOS 9+ Contacts (ios)\nreact-native-callkit \u260594 - iOS 10 CallKit framework for React Native\nreact-native-discovery \u260589 - Discover nearby devics using BLE. Turn iOS and Android devices into beacons\nreact-native-passcode-auth \u260587 - React Native authentication with iOS Passcode.\nreact-native-addressbook \u260581 - AddressBook module for react-native\nreact-native-fingerprint-identify \u260579 - React Native authentication with the Fingerprint on Android, fingerprint API compatible lib, which also combines Samsung, Xiaomi and MeiZu's official Fingerprint API.\nreact-native-phone-call \u260576 - A simple way to initiate a phone call in React Native\nreact-native-calendar-reminders \u260569 - React Native module for IOS EventKit Reminders\nreact-native-bluetooth-state \u260561 - Answering the question of \"Is my bluetooth on?\" in React Native\nreact-native-barcode-scanner \u260560 - Barcode scanner for React Native\nreact-native-haptic-feedback \u260560 - Trigger Haptic Native Feedback on iOS and Android\nreact-native-clipboard \u260558 - React Native component for getting or setting clipboard content\nreact-native-media-clipboard - React Native module for getting images, URLs, and strings from the clipboard\nreact-native-nfc-ios \u260552 - Easy to use CoreNFC for React Native\nreact-native-android-sms \u260548 - A react native android module to list\/send sms.\nreact-native-voip-push-notification \u260548 - iOS prioritized VoIP Push Notification\nreact-native-android-speech \u260547 - A text-to-speech library for Android React Native.\nreact-native-app-info \u260542 - React Native app info and version\nreact-native-icloud-sync \u260541 - A react-native wrapper for syncing with icloud\nreact-native-carrier-info \u260541 - React Native module bridge to obtain information about the user\u2019s home cellular service provider.\nreact-native-sms-android \u260540 - A react-native module for sending a sms message to a phone number.\nreact-native-touch-id-android \u260532 - React Native authentication with the Fingerprint on Android.\nreact-native-heading \u260531 - Get device heading (compass) information on iOS or Android\nreact-native-battery \u260530 - A React Native module that returns the battery level\/status of a device\nreact-native-device-battery \u260530 - Observe battery state changes in your react native application\nreact-native-device-motion \u260529 - iOS device motion wrapper for React Native.\nreact-native-wifi-manager \u260529 - Wifi Connection Manager for React Native on Android\nreact-native-android-sqlite \u260528 - A react native android wrapper for SQLite\nreact-native-search-api \u260527 - The SearchApi module gives you a general React Native interface to interact with the iOS Search API, Core Spotlight.\nreact-native-ssl-pinning \u260520 - React Native SSL pinning using OkHttp 3 on Android, and AFNetworking on iOS\nreact-native-localsearch \u260517 - React Native Module for MapKit Local Search\nrn-secure-storage \u260517 - Secure Storage for React Native (Android & iOS)\nreact-native-contacts-rx \u260514 - react-native-contacts counterpart that include the support of RxJS.\nreact-native-mipush \u260513 - MiPush for React Native\nreact-native-device-angles \u260512 - Get rotation information in degrees (pitch, yaw, roll) - ios\nreact-native-detect-device \u260511 - Detect a device on iOS or android in react-native.\nreact-native-battery-status \u260511 - A battery-status for react-native\nreact-native-system-notification \u260510 - Notification for React Native\nreact-native-home-pressed \u26058 - Listen to home and recent app events for Android\nreact-native-lock-android \u26057 - Auth0 Lock for React Native (Android)\nreact-native-push-with-gcm \u26056 - Register device for GCM push notifications services (supported only for iOS)\nreact-native-device-info-pod \u26053 - Get device information using react-native\nreact-native-sms-retriever - SMS Retriever API (Android).\nreact-native-background-downloader \u260593 - Help you download large files on iOS and Android both in the foreground and most importantly in the background.\n\nWeb\n\nreact-native-webrtc \u26051805 - A WebRTC module for React Native.\nreact-native-webview-bridge \u26051112 - React Native WebView Javascript Bridge\nreact-native-safari-view \u2605387 - A React Native wrapper for Safari View Controller\nreact-native-webview-android \u2605305 - Simple React Native Android module to use Android's WebView inside your app\nreact-native-for-web \u2605247 - A set of classes and react components to make work your react-native app in a browser. (with some limitations obviously)\nreact-native-browser \u2605107 - Full-featured web browser module for React Native apps, based on TOWebViewController\nreact-native-webview-crosswalk \u260588 - Crosswalk's WebView for React Native on Android\nreact-native-turbolinks \u260572 - React Native adapter for building hybrid apps with Turbolinks 5\nreact-native-webintent \u260553 - React native android module to open links in the default browser\nreact-native-web-container \u260536 - A wrapper around the react native WebView to add autoHeight, scrub html, etc\nreact-native-inappbrowser-reborn \u260530 - InAppBrowser for React Native (Android & iOS)\nreact-native-browser-polyfill \u260529 - A collection of polyfills for the react-native Javascript environment.\nreact-native-cookiemanager \u260519 - react-native cookie manager library.\nreact-native-bridgeable-webview \u260516 - A react-native webview with bridge to react-native code\nreact-native-html2native \u26053 - A html render for react-native\nreact-native-webview \u26053 - android webview for react-native\n\nMedia\n\nreact-native-camera \u26056227 - Camera component\nreact-native-video \u26053470 - A Video component for react-native\nreact-native-sound \u26051556 - React Native module for playing sound clips\nreact-native-audio \u2605798 - Record and play back audio in your iOS or Android React Native apps.\nreact-native-camera-kit \u2605701 - Advanced native camera and gallery components and device photos API.\nreact-native-audio-streaming \u2605679 - iOS & Android module to play an audio stream, with background support and media controls \ud83d\udd08\nreact-native-video-processing \u2605712 - Native Video editing\/trimming\/filtering library for React-Native\nreact-native-track-player \u2605441 - A fully fledged audio module created for music apps. Provides audio playback, external media controls, chromecast support and background mode for Android, iOS and Windows.\nreact-native-music-control - React Native module to display Now playing Info on lockscreen and handle control events\nreact-native-camera-roll-picker \u2605312 - A React Native component providing images selection from camera roll\nreact-native-incall-manager \u2605272 - Handling media-routes\/sensors\/events during a audio\/video chat like webrtc\nreact-native-speech \u2605246 - A text-to-speech library for React Native.\nreact-native-screcorder \u2605214 - Capture pictures and record Video with Vine-like tap to record\nreact-native-photos-framework \u2605154 - A modern and comprehensive CameraRoll\/iCloud-library for React Native\nreact-native-audioplayer \u260599 - Small audio player library for react native\nreact-native-player \u260581 - Media player for react-native\nreact-native-vlc-player \u260580 - VLC Player for react-native\nreact-native-volume-slider \u260569 - React Native VolumeView component\nreact-native-sound-demo \u260563 - react-native-sound demo project\nreact-native-interactive-image-gallery \u260560 - A React Native component to display a gallery of images.\nreact-native-color-grabber \u260557 - React native component for finding dominant colors in an image\nreact-native-hue-player \u260543 - Audio Player to offline\/local and online\/streaming audio.\nreact-native-media-meta \u260541 - Get media file metadata in your React Native app\nreact-native-sound-recorder \u260541 - No-hassle Sound Recorder for React Native.\nreact-native-fullscreen-video \u260539 - A full-screen video component on top of react-native-video\nreact-native-android-audio-streaming-aac \u260525 - A react native streaming player\nreact-native-photoeditorsdk \u260524 - React Native module for PhotoEditor SDK (Android & iOS)\nreact-native-videoeditorsdk \u260518 - React Native module for VideoEditor SDK (Android & iOS)\nreact-native-true-sight \u260518 - A cross-platform video player with customizable controls for React Native.\nreact-native-audio-manager \u260515 - Audio player library for react native Android\nreact-native-safe-image \u260513 - Really light React-Native package to handle fallback when image is on error\nreact-native-audio-player \u260512 - A React Native module to play audio on Android\nreact-native-mediaplayer \u260512 - Simple full screen media player for React Native.\nreact-native-simple-sound \u260511 - Start, stop, and pause a sound. iOS only. Derived from react-native-sound\nreact-native-tone \u26057 - Generates simple sine wave, specify a frequency and amplitude. Play sound indefinitely or for a specified time interval (iOS only).\nreact-native-media-capture \u26056 - A media-capture for react-native\nreact-native-android-video \u26058 - Android ExoPlayer Video component for react-native.\nreact-native-airplay-button - Native iOS Airplay button component\n\nStorage\n\nRxDB \u260512797 - A realtime Database for JavaScript Applications.\nWatermelonDB \u26054649 - \ud83c\udf49 Next-gen database for powerful React and React Native apps that scales to 10,000s of records and remains fast.\nrealm \u26053184 - An alternative mobile database to SQLite & key-value stores.\nreact-native-storage \u26052115 - This is a local storage wrapper for both react-native(AsyncStorage) and browser(localStorage). ES6\/babel is needed.\nreact-native-sqlite-storage \u26051508 - SQLite3 bindings for React Native (Android & iOS)\nreact-native-simple-store \u2605731 - A minimalistic wrapper around React Native's AsyncStorage.\nreact-native-store \u2605561 - A simple database base on react-native AsyncStorage.\nreact-native-db-models \u2605168 - Local DB Models for React Native Apps\nreact-native-sqlite-2 \u2605106 - SQLite3 Native Plugin for React Native for both Android and iOS\nreact-native-couchbase-lite \u2605105 - couchbase lite binding for react-native\nreact-native-persistent-job \u260572 - Run async tasks that retry after a crash, connection loss or exception\npouchdb-adapter-react-native-sqlite \u260549 - PouchDB adapter using ReactNative SQLite as its backing store\nreact-native-pouchdb \u260538 - Run pouchdb in React Native!\nreact-native-level-fs \u260520 - fs for react-native using level-filesystem and asyncstorage-down\nreact-native-mongoose \u260517 - A AsyncStorage based mongoose like storage for react-native\n\nBackend\n\nreact-native-fetch-blob \u26052299 - A module integrates network and file system. Supports file stream.\nreactivesearch-native \u26051218 - appbase.io and Elasticsearch UI components for React Native.\nreact-native-meteor \u2605673 - Full Meteor Client\naws-sdk-react-native \u2605650 - AWS SDK for React Native (Official developer preview)\nreact-native-simple-auth \u2605592 - Native social authentication for React Native on iOS\nreact-native-uploader \u2605455 - A React Native module to upload files and camera roll assets. Supports progress notification.\nreact-native-lazyload \u2605342 - lazyload for react native\nreact-native-aws3 \u2605293 - Pure JavaScript React Native library for uploading to AWS S3\nreact-native-background-upload \u2605270 - Upload files in your React Native app even while it's backgrounded. Supports Android and iOS, including iOS Camera Roll assets.\nreact-native-xmpp \u2605256 - XMPP Library for React Native\nreact-native-tcp \u2605199 - node's net API for react-native\nreact-native-udp \u2605147 - node's dgram API for react-native\nreact-native-aws-cognito-js \u2605131 - An adaptation of Amazon Cognito Identity SDK for JavaScript in combination with AWS SDK for JavaScript for React Native.\nfeathers-client \u2605121 - Feathers client that works with React Native, NodeJS and any client framework.\nreact-native-multipeer \u2605117 - Communicate over ad hoc wifi using Multipeer Connectivity\nreact-native-swift-socketio \u2605105 - A react native wrapper for socket.io-client-swift\nreact-native-file-upload \u2605103 - A file upload plugin for react-native\nreact-native-networking \u260599 - react-native module to download and upload files with AFNetworking\nreact-native-s3 \u260580 - A React Native wrapper for AWS iOS\/Android S3 SDK (TransferUtility)\nreact-native-rest-kit \u260565 - A React Native RESTful API kit that use the fetch method\nreact-native-cognito \u260563 - AWS Cognito-based authentication module for React Native.\nreact-native-file-download \u260545 - A simple file download module for react-native\nreact-native-jwt \u260537 - React native compatible JSON web token utility\nreact-native-sync \u260528 - Two way, incremental sync between React Native realmjs database and MySQL, Oracle, MS SQL Server and PostgreSQL\nreact-native-ssdp \u260526 - A React Native fork of the SSDP protocol to discover plug and play devices.\nreact-native-http \u260513 - React native http\nreact-native-async-http \u26055 - React Native component for async-http\nreact-native-nchan \u26053 - Nchan (pub\/sub server) module for React Native\n\nIntegrations\n\nreact-native-wechat \u26052016 - react-native library for wechat app\nreact-native-facebook-login \u26051141 - React Native wrapper for native iOS Facebook SDK login button and manager\nreact-native-google-signin \u26051123 - Google Signin for your react native applications\nreact-native-google-places-autocomplete \u2605846 - Customizable Google Places autocomplete component for iOS and Android React-Native apps\nreact-instantsearch \u2605644 - Lightning-fast search for React and React Native apps, by Algolia\nreact-native-awesome-card-io \u2605331 - A complete and cross-platform card.io component for React Native (iOS and Android)\nreact-native-qq \u2605278 - QQ Login&Share support in React Native.\nreact-native-facebook-account-kit \u2605227 - A Facebook Account Kit SDK wrapper for React Native.\nreact-native-wechat-ios \u2605199 - Wechat SDK for React Native(iOS).\nreact-native-card-io \u2605171 - React Native component for card.io\nreact-native-voximplant \u2605126 - VoxImplant Mobile SDK for embedding voice and video communication into React Native apps.\ninstabug-reactnative \u2605122 - A React Native wrapper for Bug reporting Instabug SDK.\nreact-native-fabric-digits \u2605112 Fabric Digits wrapper for React-Native\nreact-native-braintree \u2605104 - A react native interface for integrating payments using Braintree's v.zero SDK (currently iOS only)\nreact-native-dialogflow \u2605104 - A React-Native bridge for Google's Dialogflow (api.ai)\nreact-native-signalr \u2605100 - SignalR-client for react-native\nreact-native-twilio \u260587 - A React Native wrapper for the Twilio Client SDK.\nreact-native-twilio-programmable-voice \u260586 - A React Native wrapper for the Twilio Programmable Voice SDK.\nreact-native-qqsdk \u260583 - A React Native wrapper around the Tencent QQ SDK for Android and iOS. Provides access to QQ ssoLogin, QQ Sharing, QQ Zone Sharing etc.\nreact-native-braintree-xplat \u260581 - Cross-platform Braintree v.zero module.\nreact-native-android-vitamio \u260572 - React-native component for android Vitamio video player\nreact-native-linkedin-login \u260569 - Linkedin Login for your react native applications\nreact-native-twitter-signin \u2605140 - Login for your react native applications with client Twitter account\nreact-native-spring-scrollview \u260564 - React Native Spring ScrollView V2 is a high performance cross-platform native bounces ScrollView for React Native.(iOS & Android)\nreact-native-instagram-oauth \u260563 - react-native instagram login\nreact-native-digits \u260560 - Digits wrapper to use in React Native\nreact-native-realtimemessaging-android \u260553 - The Realtime Framework Cloud Messaging Pub\/Sub client for React-Native Android\nreact-native-new-relic \u260553 - New Relic event reporting for react-native.\nreact-native-onepassword \u260552 - React Native integration with the OnePassword extension.\nreact-native-level \u260538 - levelup API for react-native AsyncStorage.\nreact-native-instagram-share \u260528 - A react-native interface to share images and videos within instagram (iOS)\nreact-native-braintree-android \u260524 - Braintree's native Drop-in Payment UI for Android\nreact-native-amap \u260521 - A React Native component for building maps with the AMap Android SDK\nreact-native-realtime-pusher \u260519 - React Native module implementing the Pusher Realtime API\nreact-native-conekta \u260517 - Conekta SDK for React Native\nreact-native-fitness \u260517 - A React Native module to interact with Apple Healthkit and Google Fit\nreact-native-woopra \u260514 - Promise based Woopra library for react-native\nreact-native-sinch-verification \u260514 - Sinch verification for react native\nreact-native-testfairy \u260513 - TestFairy for React Native\nreact-native-leancloud \u260510 - a react native LeanCloud component\nreact-native-flurry \u26059 - React Native wrapper for Flurry\nreact-native-realtimemessaging-ios \u26058 - The Realtime Framework Cloud Messaging Pub\/Sub client for React-Native\nreact-native-realtimestorage-ios \u26058 - The Realtime Framework Cloud Storage client for React-Native\nreact-native-axmall-alipay \u26057 - react-native alipay\nreact-native-youtube-oauth \u26057 - react-native interface to login to youtube (iOS)\nreact-native-hawk \u26055 - Hawk wrapper for react-native\nreact-native-sumup \u26055 - A React Native implementation of SumupSDK.\nreact-native-instagram \u26055 - react-native instagram wrapper api (iOS)\nreact-native-realtimestorage-android \u26054 - The Realtime Cloud Storage client for React-Native Android\nreact-native-fbintent \u26054 - A React Native intent for Android Facebook App\nreact-native-heyzap- Heyzap plugin for React Native\nreact-native-launch-navigator - React Native module to launch popular navigation\/ride apps from a single API (Android & iOS)\nreact-native-agora +190 - A React Native Agora WebRTC Wrapper.\nagora-react-native-rtm +5 - A React Native Agora RealTime-Message Cloud Service Wrapper.\nreact-native-intercom *323 - A React Native Intercom Wrapper.\n\nMonetization\n\nreact-native-admob \u2605713 - A react-native component for Google AdMob banners.\nreact-native-stripe-api \u2605155 - A small React Native library for Stripe Rest API\nreact-native-revmob \u260515 - RevMob wrapper for React Native.\nreact-native-google-pay \u26052 - Accept Payments with Google Pay for React Native apps.\nreact-native-apay \u26052 - React Native bridge for Apple Pay\nreact-native-square-in-app-payments \u260518 - Square React Native plugin for In-App Payments SDK.\n\nAnimation\n\nreact-native-animatable \u26055787 - Standard set of easy to use animations and declarative transitions for React Native\nreact-native-interactable \u26054148 - experimental implementation of high performance interactable views in React Native\nreact-native-reanimated \u2605680 - React Native's Animated library reimplemented\nreact-native-spruce \u2605412 - React Native Bridge for Spruce Animation Library\nreact-native-magic-move \u2605402 - Create magical move transitions between scenes in react-native \ud83d\udc30\ud83c\udfa9\u2728 (shared element transitions)\nreact-native-gl-model-view \u2605210 - Display and animate textured Wavefront .OBJ 3D models with 60fps (iOS)\nreact-native-animated-sprite \u2605104 - A feature rich declarative component for animation, tweening, and dragging sprites.\nreact-native-animated-math \u260554 - An Animated API math extension - implements sin, cos, tan and pow as Animated Nodes with full Native Driver support\n\nExtension\n\nReact Native Today Widget \u2605190 - iOS Today Widget Extension in React Native\nReact Native Android Widget Proof of Concept \u2605127 - Android Widget Proof of Concept in React Native\nReact Native Floating Bubble \u260514 - A simple Facebook Chat Head like bubble for react native\n\nOther Platforms\n\nreact-native-web \u260510904 - React Native for Web\nreact-native-macos \u260510453 - React Native for OS X\nreactxp \u26057268 - Library for cross-platform app development\nreact-native-windows \u26055547 - React Native for Universal Windows Platform\n@areslabs\/alita \u2605392 - react native for mini-program(\u5fae\u4fe1\u5c0f\u7a0b\u5e8f)\nreact-native-tvos-controller \u260515 - TvOS remote controller module for react native.\nreact-native-watchkit \u26051 - react native for WatchKit\n\nUtilities\nUseful React Native tooling.\n\nupgrade-helper \u2605398 - \u269b\ufe0f A web interface to support React Native developers in upgrading their apps. Link to tool\nreact-native-debugger \u26054017 - The standalone app for React Native Debugger, with React DevTools \/ Redux DevTools\nhaul \u26052711 - command line tool for developing React Native apps\nrnpm \u26052408 - react native package manager\ngeneract \u26051125 - CLI that generates components based on existing ones no matter how you structure your app\nreact-native-rename \u2605901 - Rename react-native app with just one command\nreact-native-exception-handler \u2605504 \u2013 Avoid silent crash and errors on the production build of your app\nElectrode Native \u2605439 - A platform to ease the integration of React Native components in existing mobile applications.\nRuby React Native (via Opal) \u2605391 - Use Ruby for building React Native apps\nrn-snoopy \u2605329 - Profiling, monitoring and alerting over the React Native bridge. More here.\nreact-native-snippets \u2605249 - A collection of Sublime Text Snippets for react-native\nreact-native-bundle-visualizer \u2605141 - See what's inside your RN bundle; useful for optimizing the bundle size\nMakeicon \u260570 - Generates mobile app icons in all resolutions for both iOS and Android\nAsyncStorage Dev Menu Item \u260567 - Adds an option to your dev menu to log the content of your AsyncStorage.\nrn-diff-purge \u260564 - The easiest way to upgrade React Native versions. You can find diffs for every React Native version, that are created by diffing the previous version with a newly created app in the new version.\nReact Native Actions \u260555 - Run React Native actions from within VSCode.\nrsx \u260529 - An alternative to the react-native CLI tool\nADB Auto Restarter \u26058 - Restart ADB service Automatically in case of crashing while debugging app with device .\nrn-nodeify \u26056 - hack to allow react-native projects to use node core modules\nreact-native-ruler \u26053 - A devtool for measuring pixel dimensions on your React Native screens\nBuilderX - A design tool which writes React Native code for you , Desktop Mac app to replace your traditional UX design tools.\nCodePush - Push code updates to your apps, instantly\nStorybook - UI development environment for your React components\nBugSnag - A tool that logs native & JS errors. Has a free tier. Includes useful data about the user, environment, session, release, etc.\nReact Native Playground - Run React Native apps in your browser via real time simulator\nexponent - Use React Native without XCode (a previewer app + local server infrastructure)\nDeco IDE - React Native IDE with components manager\nreact-hook-hooker - A nifty little HOC to add hooks to your React components.\n\nSeeds\nGet a head start on development with an existing seed.\n\n\ud83d\udd25 Ignite \u26058832 - An unfair start for React Native - Generator CLI for redux\/sagas and more.\nPepperoni \u26054383 - Starter kit for Android & iOS, Redux, Immutable.js, disk-persisted app state\nSnowflake \u26054321 - Android & iOS, Redux, Jest (88% coverage), Immutable, Parse.com\nnative-starter-kit \u26051506 - A Starter Kit for React Native + NativeBase + React Navigation + Redux + CodePush Apps (iOS & Android)\nReact Native Hackathon Starter \u2605732 - React Native Starter Project, great for hackathons or rapid prototyping. Includes tabs, navigation, Redux, React Native Vector Icons, & React Native Elements\nReact Native Boilerplate Typescript - React Native Boilerplate - Redux + Saga + Reselect + redux-persist + react-navigation + TypeScript\nReact Native Meteor Boilerplate \u2605615\n\ud83d\udc19 React Native Boilerplate \u2605551 - React Native boilerplate that promotes a solid architecture via separation of concerns.\nReact Native Seed \u2605504 - A set of React Native Boilerplates to choose from. MobX or Redux for state-management, TypeScript or Flow for static type checking and CRNA or plain React Native for the stack - By the creators of Native Base.\n\ud83d\ude80 React Native Starter \u2605388 - A powerful starter template that bootstraps development of your mobile application.\nReactNativeTS \u2605353 - Boilerplate of a React Native project in Typescript.\nreact-native-starter by Ueno \u2605311 - Professional react-native starter kit with everything you'll ever need to deploy rock solid apps\nreact-native-babel \u2605241\nreact-native-vanilla \u2605185 - \ud83d\ude80\ud83d\ude80\ud83d\ude80 Build universal cross-platform apps with React Native. Includes latest iOS, tvOS, Android, Android TV, Android Wear, Web, Tizen TV, Tizen Watch, LG webOS, macOS\/OSX, Windows and KaiOS platforms\nreact-native-template-typescript \u2605183 - Clean and minimalist React Native template for a quick start with TypeScript.\nreact-native-template-airbnb - Clean and minimalist React Native template for a quick start with Airbnb (Flow, Prettier).\nreact-native-redux \u2605160 - React Native + Redux + Redux Saga\nreact-native-es6-reflux \u2605145\nreact-native-hot-redux-starter \u2605135\nRhinos-app \u260581 - Cross-platform React Native boilerplate (iOS, Android, Web) built on react-native-web.\nreact-native-web-boilerplate \u260572 - A react-native-web stateless hmr boilerplate\nreact-native-boilerplate \u260561 - Simple boilerplate for mobile development using React Native and Redux\nreact-native-easy-starter \u260550 - A React-native starter kit using latest react and react-native 0.60.5, easy-peasy state management, hooks workflow, hermes, codepush ready-to-use custom hooks, react-native-paper, contextapis, theming support and much more (android + ios)\nreact-native-web-workspace \u260558 - A cross platform app with react in a monorepo\n\ud83c\udf5e Baker \u260546 - An opinionated MVP toolkit that helps you build mobile apps crazy fast using React Native and Parse Server\nReact-Native-Starter-Pack \u260540 - React Native 0.34 + React-Redux (w\/ Redux-Storage) + Native Base + Code Push\nreact-native-relay-example \u260538 - React Native working with Relay\nMeteorNative Boilerplate \u260523 - a React Native and Meteor boilerplate with Redux.\nrn-mobx-template \u260517 - React Native with MobX template\nreact-native-boilerplate-chucknorris \u260515 - A boilerplate for React Native + React Navigation + React Native Elements (iOS & Android)\nreact-native-template-super \u26057 - A turbo starter template for react-native + React Navigation + Redux + Redux Persist\nrn-relay-drawer-template \u26054 - React Native working with RNRF, drawer and relay\nreact-native-community-maps \u26053 - Boilerplate app for browsing user-generated photos on a map\nReact Native Starter Kit - React Native starter kit with user onboarding elements, including Firebase Auth and Facebook Login integration.\nAwesome React Native Boilerplates - Effective start for your development with the most popular react-native navigation and UI libraries\nreact-int - A simple way to use react\/react-native with redux and redux-saga.\n\nLibraries\nLibraries \/ SDK type additions for React Native development.\n\nReact Native Elements \u260513599 - a collection of React Native UI Elements and components.\nShoutem UI \u26053802 - a complete UI toolkit for React Native from Shoutem.\nPanza \u2605243 - a collection of stateless, functional, cross-platform ui components for react-native.\nBlankApp UI \u260578 - Highly customizable and theming components for React Native.\nreact-native-fast-app \u260554 - React Native rapid development library.\nReact Native Common \u260549 - UI & API Components Library for React Native.\n\nOpen Source Apps\nOpen source React Native apps and other examples.\n\nf8app \u260513070 - Official F8 (Facebook Developer Conference) app of 2017. See blog post.\n30-days-of-react-native \u26055192 - 30 days of React Native examples (inspired by 30DaysofSwift)\nreact-native-nw-react-calculator \u26054624 - A mobile, desktop and website App with the same code\nGitPoint \u26053833 - A mobile GitHub client for both iOS and Android.\nHacker News (iOS & Android) \u26053460\nreading \u26052947 - Reading App Write In React-Native.\nStatus.im \u26052470 - Ethereum client.\nGitHub Popular \u26052452 - This is a GitHub most popular repositories viewer with React Native.\nDribbble React Native \u26051927\nreact-native-gitfeed \u26051709 - Yet another Github client written with react-native(iOS & android)\nFinance React Native \u26051680 - iOS's stocks app clone written in React Native for demo purpose.\nQuirk \ud83d\udc19 \u2605965 - Cognitive Behavioral Therapy for iOS and Android.\nTaskRabbit's Sample App \u2605802 - a testing ground for Task Rabbit's app making\nReact Weather \u2605702 - A simple weather app built with React Native\nBoostnote \u2605630 - Boostnote: open source note taking.\nreact-native-sudoku \u2605540 - a sudoku game written in React Native\nreact-native-hiapp \u2605513 - A simple and Twitter like demo app written in react-native\nReact Native Netflix \u2605489 - A Netflix-like app.\nwhat the thing? \u2605430 - Point camera at things to learn how to say them in a different language.\nreact-native-basketball \u2605425 - a clone of the Facebook Basketball game\nSurmon.me.native \u2605406 A react-native applaction for surmon.me\nAn example React Native project for client login authentication \u2605402\nGitterMobile \u2605387 - Gitter (chat for github) client for iOS and Android\nReactNativeRedditReader \u2605345\nAssemblies \u2605322 - a Meetup clone\nDuckDuckGo App (Unofficial) \u2605273\nZiliun React Native \u2605266 - Wordpress based article reader built with react native\nLuno \u2605266 - A ClojureScript React Native app demonstration\nReactNativeHackerNews \u2605241\niOS Conference App made with React Native \u2605234\nMagicMirror \u2605232\nRedux Demo \u2605226 - Minimal implement of redux counter example on ReactNative iOS and Android\nReact Native Embedded App \u2605218 -A collection of examples for using React Native in an existing iOS application\nReact Native Example, Geo and Location \u2605216\nuestc-bbs-react-native \u2605216 - An iOS client for http:\/\/bbs.uestc.edu.cn\/ written in React Native with Redux\nSh**t! I Smoke \u2605209 - Know how many cigarettes you smoke based on the pollution of your location.\nPxView \u2605198 - An unofficial Pixiv app client for Android and iOS\nBBC News (Unofficial) \u2605187 - a BBC news app\nHackerBuzz \u2605179 - a Hacker News reader.\nVecihi App \u2605170 \u2013 Build your own photo sharing app.\nRocket.Chat \u2605161 - Open Source Team Communication\nHackerWeb \u2605158 - A simply readable Hacker News web app for iOS & Android.\nBuyscreen sample \u2605151\nNewsWatch video viewer \u2605150\nYouTrack Mobile \u2605136 \u2013 a client for YouTrack \u2013 issue tracker from JetBrains.\nndash \u2605129 - npm dashboard.\nLook Lock \u2605126 - An app for showing photos without worries.\nKakapo - ambient sound mixer \u2605126\nAppointments \u2605116 - Full-fledged ReactNative App for Booking Appointments\nAlt\/Flux Demo \u2605106\nButtercup Mobile \u2605103 - Mobile password manager\nInsta Snap \u2605102 - Image Sharing App\nlive translator \u260594 - An app that translates in real time what you see from your mobile.\nFinance MacOS React Native \u260588 - iOS's Stocks App clone written for MacOS with Touch Bar support. Data is pulled from Yahoo Finance.\nNBAreact \u260588\nUrban Dictionary \u260583 - Mobile implementation of the popular Urban Dictionary website.\nASOS \u260583 - E-commerce app for ASOS (clone)\nReddit made with React Native and Redux \u260581\nreact-native-redux-facebook \u260579 - A simple React Redux Facebook authentication demo app.\nHekla for Hacker News \u260577 - Hackernews client with TypeScript, mobx-state-tree, native navigation and css modules.\nQRCode App \u260574 - application for scanning and generating QR codes.\nNearby Live \u260572 - An unofficial NearbyLive app for Android and iOS\nSoundcloudMboX \u260567 SoundcloudMobX is the Soundcloud for iOS, Build with React-Native and MobX.\nNative iOS font list \u260560\nReact Native Chromecast App \u260556\nMoeFM \u260554 - A light MusicPlayer build with React Native & Redux for both Android and iOS.\niTunesConnect \u260553 - Unofficial iTunes Connect App\nSequent \u260552 - short-term memory training game (W\/ Redux).\nAudienceNetworkReactNative \u260550 - Facebook Audience Network Performance Tool.\nrndrawer-implemented-rnrouter \u260550 - A react-native-drawer implemented example and scaffolding for react-native-router-flux\nMagento 2 Mobile App \u260547 - Magento 2.x mobile app built with React Native\niOS app that transcript your voice with IBM Watson Cloud \u260541\nSplitcloud \u260535 - Share listening to two songs at the same time from Soundcloud (by splitting right\/left channels).\nTodo List \u260531 - Todo-List app using SwipeView with ES6 standards for iOS and Android.\nParamap \u260530 - Accessability map. React-native with Redux and Firebase. iOS and Android.\nConfreaks \u260529\nVocab React Native \u260527 - Thai Vocabulary Learning App\nPremier League \u260525\nRoxie \u260523 - Sound processing and bluetooth hardware control.\nRoverz \u260521 - A native mobile chat client library for Rocket.Chat on both iOS and Android.\nText Blast \u260518 - iOS client for MMS text blasting app with analogous ionic version for comparison\nNewYorkTimesTopStories \u260514 - Read Topstories of NewYorkTimes using its api written for android in react-native.\nQuick-Sample \u260514 - A small and simple example app with navigation, data persistence, redux, listview and animation.\niGap Plus \u260513 - iGap+ is a cross-platform messaging application (Currently Android , iOS and Windows UWP) and has been created using all latest modern technologies. iGap+ is designed to easily support additional platforms like web, macOS and linux.\nPosters_Galore_Android \u260511 - An experimental Android application using Redux and a REST API\nreact-native-medium-clap-animation \u260511 - Medium Clap Animation in React Native\nHupuApp \u26059 - A Third-party Hupu App (http:\/\/bbs.hupu.com\/) client implemented using React Native (Android and iOS).\nreact-native-uber-clone \u26059 - Uber UI Clone with animations in react native\nCommit Strip (Unofficial) \u26058 - A CommitStrip.com reader built in React Native.\nreact-native-otello \u26056 - a reversi game written in React Native\nGitHub Jobs Search App (Unofficial) \u26056 - A GitHub Jobs Search App built in React Native.\nMinimal Quotes \u26056 - Mobile app that throws you random quotes in a super clean minimal version.\nHello Bemans \u26055 - Health Trainer Connection App (Android Version)\nRNV2ex \u26055 - react-native for v2ex\nRenote \u26054 - A simple react-native example app for make notes.\nManyverse \u2013 Social network off the grid (a Scuttlebutt Android client)\nBristol Pound - An app for the Bristol Pound, a UK-based local currency.\nReact Native Showcase\nInstagram clone - an Instagram clone\nJoplin - A note taking app for desktop, CLI, and mobile (linked here is the mobile app).\nCat-or-dog - Simple game with drag'n'drops and animations.\nForex Rates - Foreign exchange rates. currency rate converter. Historical exchange rates. Android and iOS.\nSmog Alert App \u2013 provides real-time air pollution data all around the world and shows nearby polluters.\nAudio Book App \u2013 Completed Audiobook app with some cool animations.\nFastBuy - App to manage the products from a dummy Store (built with React Native and Redux).\nHydropuzzle - Stylish puzzle adventure game.\nGithub-Gist - React native mobile application for github gist\nLyrics King - Minimalist and stylish lyrics search app.\nTensorFlow.js Starter - TensorFlow.js starter app using MobileNet to predict image class. Blog post for additional context.\nArt Museum - Browse through the endless Harvard's Art Museum collection.\nNMF.earth \u260514 - Calculate, understand and reduce your carbon footprint. Available for Android and iOS, using Expo, Redux Toolkit and Typescript.\n\nFrameworks\n\nNativeBase \u260510520 - builds a layer on top of React Native that provides you with basic set of components for mobile application development\nTeaset \u26051575 - A UI library for react native, provides 20+ pure JS(ES6) components, focusing on content display and action control.\nAwesome React Native Meteor \u2605152 - An awesome list of resources for using Meteor and React Native together\nfirst-born \u2605106 - A UI framework with pre-built components that render separately according to the underlying mobile platform.\nReact Native Diagnose \u260513 - A framework to test a React Native app during runtime and production\n\nTutorials\nWalkthroughs and tutorials that help you learn React Native.\n\nFully-immersive, hands-on, and fun learning experience for React Native \u2605825\nReact Native with Django backend \u260512\nSetting up background tasks that run periodically when app is closed in React Native\nAnimate React Native UI Elements\nBuild a streaming audio app with React Native\nBuilding a Calculator for Android and iOS with React Native\nBuilding Custom React Native Components From Scratch\nDeploying React Native using Fastlane\nEnabling Live Reload\nFacebook's F8 App Walkthrough Tutorial: React Native, Redux, Relay, Flow, Jest\nFacebook Login With React Native\nIntegrating Parse and React Native for iOS\nIntroducing React Native (on Ray Wenderlich's)\nLeverage Existing iOS Views In Your React Native App\nOfficial React Native tutorial\nReact Native Periscope Hearts Animation\nReact Native Youtube Animated Video Slide\nReact Native and Socket.io\nReact-Native Animated with React-Art - Firework Tap To Shoot\nReact-native Animated API Basic Example\nReact-native Animated API with PanResponder\nReact-native Animated ScrollView Row Swipe Actions\nReact-native press and hold button actions\nReact Native Express\nSimple React Native forms with redux-form, immutable.js and styled-components\nA Mini-Course on React Native Flexbox\nThe beauty of react-native -Build a stunning wallpaper app\nAdding and removing custom fonts in React Native IOS Android\nAdding Custom Fonts to A React Native Application\nBuilding a Minimalist Weather App with React Native and Expo\nGetting Started with Lottie, React Native and Expo\nHow to integrate Redux into your application with React Native and Expo\nReact Native for Designers\nStart React Native - Animation tutorial series\n\nBooks\nBooks - free and commercial (but only good ones).\n\nProgramming React Native - (Free) An in-depth React Native book that you should read after you've done a couple tutorials of the many out there.\nReact Native Animation Book - (Free) React Native Animation.\n\nBooks - for sale.\n\nReact Native In Action - Learn how to build applications using React Native from the ground up.\nReact Native - Building Mobile Apps with JavaScript - Your go-to guide to creating truly native iOS and Android mobile applications using React and JavaScript.\nFullstack React Native - The up-to-date, in-depth, complete guide to React Native.\n\nVideos\nAssortment of conference and training videos.\nTalks\n\nChain React 2019: React Native Only Playlist\nawesome-react-native-talks \u2605312 - A curated list of talks about React Native or topics related to React Native.\nActually Building Things In React Native , Jani Ev\u00e4kallio, Futurice\nUsing Redux, Jonas Ohlsson, State\nNative Testing\nReactotron\nReact Native In The Wild - Bonnie Eisenman\nChain React 2018: Playlist\nChain React 2017: Playlist\nReact Conf 2015: Introducing React Native\nReact Conf 2015: A Deep Dive into React Native\nF8 2015: React Native and Relay\n\nTraining & tutorials\n\nAwesome React Native Education \u2605455\nReact Native training \u2605238\nLet's build a React Native app in 20 minutes and Gist\nMario D\u00edez Channel - Youtube channel in spanish about with a series of videos talking about react native\nReact Native Basics: Build a Currency Converter - (Free) A multi-hour in-depth video course showing you how to build apps with React Native.\nReact Native in Arabic: Build a newspaper app - (Free) A simple to follow video series in Arabic showing you how to build a newspaper app with React Native.\nBuilding Youtube UI in 30 Minutes - A quick tutorial showing how to build Youtube Mobile app's UI using React Native. This tutorial helps in getting started with coding designs from scratch.\nAdding Authentication to a React Native Project - This tutorial shows how to easily add authentication to a React Native application using AWS Mobile Hub\nGenerate React Native Forms with tcomb-form-native\nBuild a chat app with React Native\nEgghead.io: React Native Fundamentals\nPluralsight.com: Build iOS Apps with React Native\nUdemy.com: Build apps with React Native\nUdemy.com: Create Your First React Native App - Introduction to building a React Native app and learning the foundational pieces.\nHandlebarlabs.com: Learn React Native + Meteor - Comprehensive course & community on building an application with React Native and Meteor.\nUdemy.com: Automate Your React Native Releases with Fastlane & Bitrise - Learn step-by-step how to release your React Native applications into Stores automatically by using Fastlane & Bitrise.\n\nBlogs\n\nReact Native Training\nUse React Native Blog\nFacebook Code Blog\nThe Bakery - JavaScript, React, React Native posts.\nChristopher Chedeau aka Vjeux\nBrent Vatne\nKyle Corbitt - Cofounder at Emberall.\nMade with React - Showcase of apps using React or React Native.\nSpencer Carli\nOfficial React Native Blog\nreactnative.gallery - Show and tell for React Native developers\nRed Shift - Infinite Red - Lots of React Native content\nIdeamotive's Blog - Blog about React Native\n\nNewsletters\n\nReact Native Now\nReact Native Newsletter\n\nReleases\n\nStable: 0.57.0\nNext: latest\nAll Versions\nAll Changelogs\nUpgrading Versions\nRelease Process\n\n","77":"Phaser - HTML5 Game Framework\n\n\n\n\n\nPhaser is a fast, free, and fun open source HTML5 game framework that offers WebGL and Canvas rendering across desktop and mobile web browsers. Games can be compiled to iOS, Android and native apps by using 3rd party tools. You can use JavaScript or TypeScript for development.\nAlong with the fantastic open source community, Phaser is actively developed and maintained by Photon Storm. As a result of rapid support, and a developer friendly API, Phaser is currently one of the most starred game frameworks on GitHub.\nThousands of developers from indie and multi-national digital agencies, and universities worldwide use Phaser. You can take a look at their incredible games.\nVisit: The Phaser website and follow on Twitter (#phaserjs)\nLearn: API Docs, Support Forum and StackOverflow\nCode: 1700+ Examples (source available in this repo)\nRead: The Phaser World Newsletter\nDiscord: Join us on Discord\nExtend: With Phaser Plugins\nBe awesome: Support the future of Phaser\nGrab the source and join the fun!\n\n\n\n13th July 2020\n\nI'm pleased to announce the immediate availability of Phaser 3.24. This release is primarily a maintenance release, with the focus mostly on bug fixes and updates. Even so, there are over 70 updates in this version alone. From improvements to the Arcade Physics system, to new Tween events and the ability to chain multiple animations, to some important fixes. If you're currently using 3.23 then we recommend this upgrade. As usual, I'd like to send my thanks to the Phaser community for their help in both reporting issues and submitting pull requests to fix them.\nSo, please do spend some time digging through the Change Log. I assure you, it's worth while :)\nI'd like to send a massive thank-you to everyone who supports Phaser on Patreon (and now even GitHub Sponsors, too!) Your continued backing keeps allowing me to work on Phaser full-time and this great new release is the very real result of that. If you've ever considered becoming a backer, now is the perfect time!\nAs well as all of these updates, development has been progressing rapidly on Phaser 4. If you'd like to stay abreast of developments then I'm now publishing them to the Phaser Patreon. Here you can find details about the latest developments and concepts behind Phaser 4.\nYou can also follow Phaser on Twitter and chat with fellow Phaser devs in our Discord.\nPhaser 3 wouldn't have been possible without the fantastic support of the community and Patreon. Thank you to everyone who supports our work, who shares our belief in the future of HTML5 gaming, and Phaser's role in that.\nHappy coding everyone!\nCheers,\nRich - @photonstorm\n\n\nBecause Phaser is an open source project, we cannot charge for it in the same way as traditional retail software. What's more, we don't ever want to. After all, it's built on, and was born from, open web standards. It's part of our manifesto that the core framework will always be free, even if you use it commercially, as many of you do.\nYou may not realize it, but because of this, we rely 100% on community backing to fund development.\nThose funds allow Phaser to improve, and when it improves, everyone involved benefits. Your support helps secure a constant cycle of updates, fixes, new features and planning for the future.\nThere are other benefits to backing Phaser, too:\n\nWe use Patreon to manage the backing and you can support Phaser from $1 per month. The amount you pledge is entirely up to you and can be changed as often as you like. Patreon renews monthly, just like Netflix. You can, of course, cancel at any point. Tears will be shed on this end, but that's not your concern.\nExtra special thanks to the following companies whose support makes Phaser possible:\n\nCerebral Fix\nCrossInstall\nFacebook\nGame Distribution\nGameCommerce\nMozilla\nTexture Packer\nTwilio\nPoki\nCrazyGames\nLagged\n\n\n\n\nPhaser 3 is available via GitHub, npm and CDNs:\n\nClone the git repository via https, ssh or with the GitHub Windows or Mac clients.\nDownload as zip\nDownload the build files: phaser.js and phaser.min.js\n\nNPM\nInstall via npm:\nnpm install phaser\nCDN\n\nPhaser is on jsDelivr which is a \"super-fast CDN for developers\". Include the following in your html:\n<script src=\"\/\/cdn.jsdelivr.net\/npm\/phaser@3.24.0\/dist\/phaser.js\"><\/script>\nor the minified version:\n<script src=\"\/\/cdn.jsdelivr.net\/npm\/phaser@3.24.0\/dist\/phaser.min.js\"><\/script>\nAPI Documentation\nGo to https:\/\/photonstorm.github.io\/phaser3-docs\/index.html to read the docs online. Use the drop-down menus at the top to navigate the namespaces, classes and Game Objects lists.\nOr, if you wish to run the docs locally you can checkout the phaser3-docs repository and then read the documentation by pointing your browser to the docs\/ folder.\nThe documentation for Phaser 3 is an on-going project. Please help us by searching the Phaser code for any instance of the string [description] and then replacing it with some documentation.\nTypeScript Definitions\nThe TypeScript definitions can be found inside the types folder. They are also referenced in the types entry in package.json.\nDepending on your project, you may need to add the following to your tsconfig.json file:\n\"typeRoots\": [\n    \".\/node_modules\/phaser\/types\"\n],\n\"types\": [\n    \"Phaser\"\n]\nWe recently published a new Phaser 3 TypeScript Project Template, which you can use to get started with if you like.\nThe TS defs are automatically generated from the JSDoc comments found in the Phaser source code. If you wish to help refine them then you must edit the Phaser JSDoc blocks directly, not the defs file. You can find more details about the parser we built in the scripts\/tsgen folder.\nWebpack\nWe use Webpack to build Phaser and we take advantage of its conditional build flag feature to handle renderer swapping. If you wish to use Webpack with Phaser then please use our Phaser 3 Project Template as it's already set-up to handle the build conditions Phaser needs. Recent changes to our build steps mean you should now be able to use any other packager, like Parcel, without any config changes.\nLicense\nPhaser is released under the MIT License.\n\n\n\nTutorials and guides on Phaser 3 development are being published every week.\n\nGetting Started with Phaser 3 (useful if you are completely new to Phaser)\nMaking your first Phaser 3 Game\nThe Complete Phaser 3 Game Development course contains over 15 hours of videos covering all kinds of important topics.\nPlus, there are over 700 Phaser tutorials listed on the official website.\n\nWe've 3 tutorials related specifically to creating Facebook Instant Games with Phaser:\n\nGetting Started with Facebook Instant Games\nFacebook Instant Games Leaderboards Tutorial\nDisplaying Ads in your Instant Games\n\nSource Code Examples\nDuring our development of Phaser 3, we created hundreds of examples with the full source code and assets ready available. These examples are now fully integrated into the Phaser website. You can also browse them on Phaser 3 Labs via a more advanced interface, or clone the examples repo. We are constantly adding to and refining these examples.\nHuge list of Phaser 3 Plugins\nSuper community member RexRainbow has been publishing Phaser 3 content for years, building up an impressive catalogue in that time. You'll find loads of plugins, from UI controls such as text input boxes, to Firebase support, Finite State Machines and lots more. As well as the plugins there is also a comprehensive set of 'Notes' about Phaser 3, going into great detail about how the various systems work. It's an invaluable resource and well worth checking out at https:\/\/rexrainbow.github.io\nCreate Your First Phaser 3 Example\nCreate an index.html page locally and paste the following code into it:\n<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"https:\/\/cdn.jsdelivr.net\/npm\/phaser@3.24.0\/dist\/phaser-arcade-physics.min.js\"><\/script> \n<\/head>\n<body>\n\n    <script><\/script>\n\n<\/body>\n<\/html>\nThis is a standard empty webpage. You'll notice there's a script tag that is pulling in a build of Phaser 3, but otherwise this webpage doesn't do anything yet. Now let's set-up the game config. Paste the following between the <script><\/script> tags:\nvar config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 600,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { y: 200 }\n        }\n    },\n    scene: {\n        preload: preload,\n        create: create\n    }\n};\nconfig is a pretty standard Phaser 3 Game Configuration object. We tell config to use the WebGL renderer if it can, set the canvas to a size of 800x600 pixels, enable Arcade Physics, and finally call the preload and create functions. preload and create have not been implemented yet, so if you run this JavaScript code, you will have an error. Add the following after config:\nvar game = new Phaser.Game(config);\n\nfunction preload ()\n{\n    this.load.setBaseURL('http:\/\/labs.phaser.io');\n\n    this.load.image('sky', 'assets\/skies\/space3.png');\n    this.load.image('logo', 'assets\/sprites\/phaser3-logo.png');\n    this.load.image('red', 'assets\/particles\/red.png');\n}\n\nfunction create ()\n{\n}\ngame is a Phaser Game instance that uses our configuration object config. We also add function definitions for preload and create. The preload function helps you easily load assets into your game. In preload, we set the Base URL to be the Phaser server and load 3 PNG files.\nThe create function is empty, so it's time to fill it in:\nfunction create ()\n{\n    this.add.image(400, 300, 'sky');\n\n    var particles = this.add.particles('red');\n\n    var emitter = particles.createEmitter({\n        speed: 100,\n        scale: { start: 1, end: 0 },\n        blendMode: 'ADD'\n    });\n\n    var logo = this.physics.add.image(400, 100, 'logo');\n\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n\n    emitter.startFollow(logo);\n}\nHere we add a sky image into the game and create a Particle Emitter. The scale value means that the particles will initially be large and will shrink to nothing as their lifespan progresses.\nAfter creating the emitter, we add a logo image called logo. Since logo is a Physics Image, logo is given a physics body by default. We set some properties for logo: velocity, bounce (or restitution), and collision with the world bounds. These properties will make our logo bounce around the screen. Finally, we tell the particle emitter to follow the logo - so as the logo moves, the particles will flow from it.\nRun it in your browser and you'll see the following:\n\n(Got an error? Here's the full code)\nThis is a tiny example, and there are hundreds more for you to explore, but hopefully it shows how expressive and quick Phaser is to use. With just a few easily readable lines of code, we've got something pretty impressive up on screen!\n\nOurcade have published two great Phaser 3 books. They'll take you from getting set-up, through to finishing your first game using modern JavaScript or TypeScript and they're both completely free! They also publish a huge range of quality tutorials and videos, so be sure to check out their site every week.\n\nThere are both plain and minified compiled versions of Phaser in the dist folder of the repository. The plain version is for use during development, and the minified version is for production use. You can also create your own builds.\nCustom Builds\nPhaser 3 is built using Webpack and we take advantage of the Webpack definePlugin feature to allow for conditional building of the Canvas and WebGL renderers and extra plugins. You can custom the build process to only include the features you require. Doing so can cut the main build file size down to just 70KB.\nRead our comprehensive guide on creating Custom Builds of Phaser 3 for full details.\nBuilding from Source\nIf you wish to build Phaser 3 from source, ensure you have the required packages by cloning the repository and then running npm install on your source directory.\nYou can then run webpack to create a development build in the build folder which includes source maps for local testing. You can also npm run dist to create a minified packaged build in the dist folder. For a list of all commands available use npm run help.\n\n\nChange Log\nVersion 3.24 - Rem - 13th July 2020\nArcade Physics New Features, Updates and Fixes\n\nWhen colliding physics groups with the search tree enabled, there was an unnecessary intersection test for each body returned by the search (thanks @samme)\nWhen doing an overlap collision, there was an unnecessary intersection test for each pair of overlapping bodies (thanks @samme)\nSprite vs. Static Group collision tests now always use the static tree (thanks @samme)\nFixed a bug where if you added a static body to a sprite with scale \u2260 1, the body position was incorrect (thanks @samme)\nIf you passed in an array of children when creating a Physics Group, they didn't receive bodies. Fix #5152 (thanks @samme)\nNew types allow for better docs \/ TypeScript defs especially in the Factory functions: ArcadePhysicsCallback, GameObjectWithBody, GameObjectWithDynamicBody, GameObjectWithStaticBody, ImageWithDynamicBody, ImageWithStaticBody, SpriteWithDynamicBody and SpriteWithStaticBody. Fix #4994 (thanks @samme @gnesher)\nBody.updateFromGameObject is a new method that extracts the relevant code from preUpdate, allowing you to read the body's new position and center immediately, before the next physics step. It also lets refreshBody work for dynamic bodies, where previously it would error (thanks @samme)\nMomentum exchange wasn't working correctly vs. immovable bodies. The movable body tended to stop. Fix #4770 (thanks @samme)\nThe Body mass was decreasing the inertia instead of increasing it. Fix #4770 (thanks @samme)\nThe separation vector seemed to be incorrect, causing the slip \/ slide collisions. The separation is now correct for circle\u2013circle collisions (although not fully for circle\u2013rectangle collisions), part fix #4770 (thanks @samme)\nThe Arcade Body delta was incorrectly calculated on bodies created during the update step, causing the position to be off. Fix #5204 (thanks @zackexplosion @samme)\nArcade.Components.Size.setBodySize is a new method available on Arcade Physics Game Objects that allows you to set the body size. This replaces setSize which is now deprecated. Fix #4786 (thanks @wingyplus)\n\nNew Features\n\nThe Animation component has a new property nextAnimsQueue which allows you to sequence Sprite animations to play in order, i.e: this.mole.anims.play('digging').anims.chain('lifting').anims.chain('looking').anims.chain('lowering'); (thanks @tgroborsch)\nGroup.setActive is a new method that will set the active state of a Group, just like it does on other Game Objects (thanks @samme)\nGroup.setName is a new method that will set the name property of a Group, just like it does on other Game Objects (thanks @samme)\nTWEEN_STOP is a new event dispatched by a Tween when it stops playback (thanks @samme @RollinSafary)\nYou can now specify an onStop callback when creating a Tween as part of the tween config, which is invoked when a Tween stops playback (thanks @samme @RollinSafary)\nPreviously, if you created a timeline and passed no tweens in the config, the timeline would be created but all config properties were ignored. Now the timeline's own properties (completeDelay, loop, loopDelay, useFrames, onStart, onUpdate, onLoop, onYoyo, onComplete, etc.) are set from the config properly (thanks @samme)\nTextStyle.wordWrapWidth lets you set the maximum width of a line of text (thanks @mikewesthad)\nTextStyle.wordWrapCallback is a custom function that will is responsible for wrapping the text (thanks @mikewesthad)\nTextStyle.wordWrapCallbackScope is the scope that will be applied when the wordWrapCallback is invoked (thanks @mikewesthad)\nTextStyle.wordWrapUseAdvanced controls whether or not to use the advanced wrapping algorithm (thanks @mikewesthad)\nKeyboardPlugin.removeAllKeys is a new method that allows you to automatically remove all Key instances that the plugin has created, making house-keeping a little easier (thanks @samme)\nMath.RotateTo is a new function that will position a point at the given angle and distance (thanks @samme)\nDisplay.Bounds.GetBounds is a new function that will return the un-transformed bounds of the given Game Object as a Rectangle (thanks @samme)\n\nUpdates\n\nThe Pointer.dragStartX\/YGlobal and Pointer.dragX\/Y values are now populated from the worldX\/Y, which means using those values directly in Input Drag callbacks will now work when the Camera is zoomed. Fix #4755 (thanks @braindx)\nThe browser field has been added to the Phaser package.json pointing to the dist\/phaser.js umd build (thanks @FredKSchott)\nCalling TimeStep.wake() while the loop is running will now cause nothing to happen, rather than sleeping and then waking again (thanks @samme)\nContainer.getBounds will no longer set the temp rect bounds to the first child of the Container by default (which would error if the child had no bounds, like a Graphics object) and instead sets it as it iterates the children (thanks @blopa)\nFile.state will now be set to the FILE_LOADING state while loading and FILE_LOADED after loading (thanks @samme)\nBaseCamera.cull now moves some of its calculations outside of the cull loop to speed it up (thanks @samme)\nSceneManager.createSceneFromInstance had a small refactor to avoid a pointless condition (thanks @samme)\n\nBug Fixes\n\nFixed a TypeError warning when importing JSON objects directly to the url argument of any of the Loader filetypes. Fix #5189 (thanks @awweather @samme)\nThe NOOP function was incorrectly imported by the Mouse and Keyboard Manager. Fix #5170 (thanks @samme @gregolai)\nWhen Audio files failed to decode on loading, they would always show 'undefined' as the key in the error log, now they show the actual key (thanks @samme)\nWhen the Sprite Sheet parser results in zero frames, the warning will now tell you the texture name that caused it (thanks @samme)\nKeyboardPlugin.checkDown didn't set the duration to zero if the parameter was omitted, causing it to always return false. Fix #5146 (thanks @lozzajp)\nIf you passed in an array of children when creating a Group, they were not added and removed correctly. Fix #5151 (thanks @samme)\nWhen using HTML5 Audio with pauseOnBlur (the default), if you play a sound, schedule stopping the sound (e.g., timer, tween complete callback), leave the page, and return to the page, the sound stop() will error (thanks @samme)\nUsing a Render Texture when you're also using the headless renderer would cause an error (thanks @samme)\nEllipse.setWidth would incorrectly set the xRadius to the diameter (thanks @rexrainbow)\nEllipse.setHeight would incorrectly set the yRadius to the diameter (thanks @rexrainbow)\nWhen specifically setting the parent property in the Game Config to null the canvas was appended to the document body, when it should have been ignored (allowing you to add it to the dom directly). Fix #5191 (thanks @MerganThePirate)\nContainers will now apply nested masks correctly when using the Canvas Renderer specifically (thanks @scott20145)\nCalling Scale.startFullScreen would fail in Safari on Mac OS, throwing a fullscreenfailed error. It now triggers fullscreen mode correctly, as on other browsers. Fix #5143 (thanks @samme @novaknole)\nCalling setCrop on a Matter Physics Sprite would throw a TypeError, but will now crop correctly. Not that it only crops the texture, the body is unaffected. Fix #5211 (thanks @MatthewRorke @samme)\nThe Static Tilemap Layer would ignore the layer rotation and parent transform when using WebGL (but worked in Canvas). Both modes now work in the same manner (thanks @cruzdanilo)\nCalling getTextBounds on a BitmapText object would return the incorrect values if the origin had been changed, but the text itself had not, as it was using out of date dimensions. Changing the origin now automatically triggers BitmapText to be dirty, forcing the bounds to be refreshed. Fix #5121 (thanks @thenonamezz)\nThe ISO Triangle shape would skip rendering the left side of the first triangle in the batch. It now renders all ISO Triangles correctly. Fix #5164 (thanks @mattjennings)\n\nExamples, Documentation and TypeScript\nMy thanks to the following for helping with the Phaser 3 Examples, Docs and TypeScript definitions, either by reporting errors, fixing them or helping author the docs:\n@samme @SanderVanhove @SirJosh3917 @mooreInteractive @A-312 @lozzajp @mikewesthad @j-waters @futuremarc\nPlease see the complete Change Log for previous releases.\n\n\nThe Contributors Guide contains full details on how to help with Phaser development. The main points are:\n\n\nFound a bug? Report it on GitHub Issues and include a code sample. Please state which version of Phaser you are using! This is vitally important.\n\n\nBefore submitting a Pull Request run your code through ES Lint using our config and respect our Editor Config.\n\n\nBefore contributing read the code of conduct.\n\n\nWritten something cool in Phaser? Please tell us about it in the forum, or email support@phaser.io\n\nPhaser is a Photon Storm production.\n\nCreated by Richard Davey. Powered by coffee, anime, pixels and love.\nThe Phaser logo and characters are \u00a9 2020 Photon Storm Limited.\nAll rights reserved.\n\"Above all, video games are meant to be just one thing: fun. Fun for everyone.\" - Satoru Iwata\n","78":"Note: This branch and README covers the upcoming 2.0 release. View 1.x docs here.\n\nQuill Rich Text Editor\n\n\n\n\n\nQuickstart\n  \u2022\n  Documentation\n  \u2022\n  Development\n  \u2022\n  Contributing\n  \u2022\n  Interactive Playground\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuill is a modern rich text editor built for compatibility and extensibility. It was created by Jason Chen and Byron Milligan and actively maintained by Slab.\nTo get started, check out https:\/\/quilljs.com\/ for documentation, guides, and live demos!\nQuickstart\nInstantiate a new Quill object with a css selector for the div that should become the editor.\n<!-- Include Quill stylesheet -->\n<link href=\"https:\/\/cdn.quilljs.com\/1.0.0\/quill.snow.css\" rel=\"stylesheet\">\n\n<!-- Create the toolbar container -->\n<div id=\"toolbar\">\n  <button class=\"ql-bold\">Bold<\/button>\n  <button class=\"ql-italic\">Italic<\/button>\n<\/div>\n\n<!-- Create the editor container -->\n<div id=\"editor\">\n  <p>Hello World!<\/p>\n<\/div>\n\n<!-- Include the Quill library -->\n<script src=\"https:\/\/cdn.quilljs.com\/1.0.0\/quill.js\"><\/script>\n\n<!-- Initialize Quill editor -->\n<script>\n  var editor = new Quill('#editor', {\n    modules: { toolbar: '#toolbar' },\n    theme: 'snow'\n  });\n<\/script>\nTake a look at the Quill website for more documentation, guides and live playground!\nDownload\n\nnpm - npm install quill\ntar - https:\/\/github.com\/quilljs\/quill\/releases\n\nCDN\n<!-- Main Quill library -->\n<script src=\"\/\/cdn.quilljs.com\/1.0.0\/quill.js\"><\/script>\n<script src=\"\/\/cdn.quilljs.com\/1.0.0\/quill.min.js\"><\/script>\n\n<!-- Theme included stylesheets -->\n<link href=\"\/\/cdn.quilljs.com\/1.0.0\/quill.snow.css\" rel=\"stylesheet\">\n<link href=\"\/\/cdn.quilljs.com\/1.0.0\/quill.bubble.css\" rel=\"stylesheet\">\n\n<!-- Core build with no theme, formatting, non-essential modules -->\n<link href=\"\/\/cdn.quilljs.com\/1.0.0\/quill.core.css\" rel=\"stylesheet\">\n<script src=\"\/\/cdn.quilljs.com\/1.0.0\/quill.core.js\"><\/script>\nCommunity\nGet help or stay up to date.\n\nContribute on Issues\nFollow @jhchen and @quilljs on Twitter\nAsk questions on Stack Overflow\nIf privacy is required, email support@quilljs.com\n\nLicense\nBSD 3-clause\n","79":"faker.js - generate massive amounts of fake data in the browser and node.js\n\n \n\n\n\nDemo\nhttps:\/\/rawgit.com\/Marak\/faker.js\/master\/examples\/browser\/index.html\nUsage\nBrowser\n    <script src = \"faker.js\" type = \"text\/javascript\"><\/script>\n    <script>\n      var randomName = faker.name.findName(); \/\/ Caitlyn Kerluke\n      var randomEmail = faker.internet.email(); \/\/ Rusty@arne.info\n      var randomCard = faker.helpers.createCard(); \/\/ random contact card containing many properties\n    <\/script>\nNode.js\n    var faker = require('faker');\n\n    var randomName = faker.name.findName(); \/\/ Rowan Nikolaus\n    var randomEmail = faker.internet.email(); \/\/ Kassandra.Haley@erich.biz\n    var randomCard = faker.helpers.createCard(); \/\/ random contact card containing many properties\nAPI\nJSDoc API Browser\nhttp:\/\/marak.github.io\/faker.js\/\nAPI Methods\n\naddress\n\nzipCode\nzipCodeByState\ncity\ncityPrefix\ncitySuffix\nstreetName\nstreetAddress\nstreetSuffix\nstreetPrefix\nsecondaryAddress\ncounty\ncountry\ncountryCode\nstate\nstateAbbr\nlatitude\nlongitude\ndirection\ncardinalDirection\nordinalDirection\nnearbyGPSCoordinate\ntimeZone\n\n\ncommerce\n\ncolor\ndepartment\nproductName\nprice\nproductAdjective\nproductMaterial\nproduct\nproductDescription\n\n\ncompany\n\nsuffixes\ncompanyName\ncompanySuffix\ncatchPhrase\nbs\ncatchPhraseAdjective\ncatchPhraseDescriptor\ncatchPhraseNoun\nbsAdjective\nbsBuzz\nbsNoun\n\n\ndatabase\n\ncolumn\ntype\ncollation\nengine\n\n\ndate\n\npast\nfuture\nbetween\nrecent\nsoon\nmonth\nweekday\n\n\nfake\nfinance\n\naccount\naccountName\nroutingNumber\nmask\namount\ntransactionType\ncurrencyCode\ncurrencyName\ncurrencySymbol\nbitcoinAddress\nlitecoinAddress\ncreditCardNumber\ncreditCardCVV\nethereumAddress\niban\nbic\ntransactionDescription\n\n\ngit\n\nbranch\ncommitEntry\ncommitMessage\ncommitSha\nshortSha\n\n\nhacker\n\nabbreviation\nadjective\nnoun\nverb\ningverb\nphrase\n\n\nhelpers\n\nrandomize\nslugify\nreplaceSymbolWithNumber\nreplaceSymbols\nreplaceCreditCardSymbols\nrepeatString\nregexpStyleStringParse\nshuffle\nmustache\ncreateCard\ncontextualCard\nuserCard\ncreateTransaction\n\n\nimage\n\nimage\navatar\nimageUrl\nabstract\nanimals\nbusiness\ncats\ncity\nfood\nnightlife\nfashion\npeople\nnature\nsports\ntechnics\ntransport\ndataUri\nlorempixel\nunsplash\nlorempicsum\n\n\ninternet\n\navatar\nemail\nexampleEmail\nuserName\nprotocol\nurl\ndomainName\ndomainSuffix\ndomainWord\nip\nipv6\nuserAgent\ncolor\nmac\npassword\n\n\nlorem\n\nword\nwords\nsentence\nslug\nsentences\nparagraph\nparagraphs\ntext\nlines\n\n\nmusic\n\ngenre\n\n\nname\n\nfirstName\nlastName\nfindName\njobTitle\ngender\nprefix\nsuffix\ntitle\njobDescriptor\njobArea\njobType\n\n\nphone\n\nphoneNumber\nphoneNumberFormat\nphoneFormats\n\n\nrandom\n\nnumber\nfloat\narrayElement\narrayElements\nobjectElement\nuuid\nboolean\nword\nwords\nimage\nlocale\nalpha\nalphaNumeric\nhexaDecimal\n\n\nsystem\n\nfileName\ncommonFileName\nmimeType\ncommonFileType\ncommonFileExt\nfileType\nfileExt\ndirectoryPath\nfilePath\nsemver\n\n\ntime\n\nrecent\n\n\nunique\nvehicle\n\nvehicle\nmanufacturer\nmodel\ntype\nfuel\nvin\ncolor\n\n\n\nFaker.fake()\nfaker.js contains a super useful generator method Faker.fake for combining faker API methods using a mustache string format.\nExample:\nconsole.log(faker.fake(\"{{name.lastName}}, {{name.firstName}} {{name.suffix}}\"));\n\/\/ outputs: \"Marks, Dean Sr.\"\nThis will interpolate the format string with the value of methods name.lastName(), name.firstName(), and name.suffix()\nLocalization\nAs of version v2.0.0 faker.js has support for multiple localities.\nThe default language locale is set to English.\nSetting a new locale is simple:\n\/\/ sets locale to de\nfaker.locale = \"de\";\n\naz\nar\ncz\nde\nde_AT\nde_CH\nen\nen_AU\nen_AU_ocker\nen_BORK\nen_CA\nen_GB\nen_IE\nen_IND\nen_US\nen_ZA\nes\nes_MX\nfa\nfi\nfr\nfr_CA\nfr_CH\nge\nid_ID\nit\nja\nko\nnb_NO\nnep\nnl\nnl_BE\npl\npt_BR\npt_PT\nro\nru\nsk\nsv\ntr\nuk\nvi\nzh_CN\nzh_TW\n\nIndividual Localization Packages\nfaker.js supports incremental loading of locales.\nBy default, requiring faker will include all locale data.\nIn a production environment, you may only want to include the locale data for a specific set of locales.\n\/\/ loads only de locale\nvar faker = require('faker\/locale\/de');\nSetting a randomness seed\nIf you want consistent results, you can set your own seed:\nfaker.seed(123);\n\nvar firstRandom = faker.random.number();\n\n\/\/ Setting the seed again resets the sequence.\nfaker.seed(123);\n\nvar secondRandom = faker.random.number();\n\nconsole.log(firstRandom === secondRandom);\nTests\nnpm install .\nmake test\n\nYou can view a code coverage report generated in coverage\/lcov-report\/index.html.\nBuilding faker.js\nfaker uses gulp to automate it's build process. Each build operation is a separate task which can be run independently.\nBrowser Bundle\nnpm run browser\n\nBuilding JSDocs\nJSDOC v3 HTML API documentation\nnpm run jsdoc\n\nBuilding ReadMe\nThe ReadMe.md file for faker.js is automatically generated and should not be modified directly. All updateds to ReadMe.md should be perfomed in .\/build\/src\/docs.md and then the build script should be run.\nnpm run readme\n\nVersion Release Schedule\nfaker.js is a popular project used by many organizations and individuals in production settings. Major and Minor version releases are generally on a monthly schedule. Bugs fixes are addressed by severity and fixed as soon as possible.\nIf you require the absolute latest version of faker.js the master branch @ http:\/\/github.com\/marak\/faker.js\/ should always be up to date and working.\nMaintainer\nMarak Squires\nfaker.js - Copyright (c) 2020\nMarak Squires\nwww.marak.com\nhttp:\/\/github.com\/marak\/faker.js\/\nfaker.js was inspired by and has used data definitions from:\n\nhttps:\/\/github.com\/stympy\/faker\/ - Copyright (c) 2007-2010 Benjamin Curtis\nhttp:\/\/search.cpan.org\/~jasonk\/Data-Faker-0.07\/ - Copyright 2004-2005 by Jason Kohles\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","80":" ____                     __      __\n\/\\  _`\\                  \/\\ \\    \/\\ \\                                   __\n\\ \\ \\ \\ \\     __      ___\\ \\ \\\/'\\\\ \\ \\____    ___     ___      __      \/\\_\\    ____\n \\ \\  _ <'  \/'__`\\   \/'___\\ \\ , < \\ \\ '__`\\  \/ __`\\ \/' _ `\\  \/'__`\\    \\\/\\ \\  \/',__\\\n  \\ \\ \\ \\ \\\/\\ \\ \\.\\_\/\\ \\__\/\\ \\ \\\\`\\\\ \\ \\ \\ \\\/\\ \\ \\ \\\/\\ \\\/\\ \\\/\\  __\/  __ \\ \\ \\\/\\__, `\\\n   \\ \\____\/\\ \\__\/.\\_\\ \\____\\\\ \\_\\ \\_\\ \\_,__\/\\ \\____\/\\ \\_\\ \\_\\ \\____\\\/\\_\\_\\ \\ \\\/\\____\/\n    \\\/___\/  \\\/__\/\\\/_\/\\\/____\/ \\\/_\/\\\/_\/\\\/___\/  \\\/___\/  \\\/_\/\\\/_\/\\\/____\/\\\/_\/\\ \\_\\ \\\/___\/\n                                                                       \\ \\____\/\n                                                                        \\\/___\/\n(_'_______________________________________________________________________________'_)\n(_.\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014._)\n\nBackbone supplies structure to JavaScript-heavy applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing application over a RESTful JSON interface.\nFor Docs, License, Tests, pre-packed downloads, and everything else, really, see:\nhttp:\/\/backbonejs.org\nTo suggest a feature or report a bug:\nhttps:\/\/github.com\/jashkenas\/backbone\/issues\nFor questions on working with Backbone or general discussions:\nhttps:\/\/groups.google.com\/forum\/#!forum\/backbonejs,\nhttp:\/\/stackoverflow.com\/questions\/tagged\/backbone.js, or\nhttps:\/\/gitter.im\/jashkenas\/backbone\nBackbone is an open-sourced component of DocumentCloud:\nhttps:\/\/github.com\/documentcloud\nMany thanks to our contributors:\nhttps:\/\/github.com\/jashkenas\/backbone\/graphs\/contributors\nSpecial thanks to Robert Kieffer for the original philosophy behind Backbone.\nhttps:\/\/github.com\/broofa\n","81":"\n\n\n\n\nFast 3kB alternative to React with the same modern API.\nAll the power of Virtual DOM components, without the overhead:\n\nFamiliar React API & patterns: ES6 Class, hooks, and Functional Components\nExtensive React compatibility via a simple preact\/compat alias\nEverything you need: JSX, VDOM, DevTools, HMR, SSR.\nHighly optimized diff algorithm and seamless hydration from Server Side Rendering\nSupports all modern browsers and IE11\nTransparent asynchronous rendering with a pluggable scheduler\nInstant production-grade app setup with Preact CLI\n\n\ud83d\udc81 More information at the Preact Website \u279e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can find some awesome libraries in the awesome-preact list \ud83d\ude0e\n\nGetting Started\n\n\ud83d\udc81 Note: You don't need ES2015 to use Preact... but give it a try!\n\nThe easiest way to get started with Preact is to install Preact CLI. This simple command-line tool wraps up the best possible tooling for you, and even keeps things like Webpack and Babel up-to-date as they change. Best of all, it's easy to understand! Start a project or compile for production in a single command (preact build), with no configuration needed and best practices baked in! \ud83d\ude4c\nTutorial: Building UI with Preact\nWith Preact, you create user interfaces by assembling trees of components and elements. Components are functions or classes that return a description of what their tree should output. These descriptions are typically written in JSX (shown underneath), or HTM which leverages standard JavaScript Tagged Templates. Both syntaxes can express trees of elements with \"props\" (similar to HTML attributes) and children.\nTo get started using Preact, first look at the render() function. This function accepts a tree description and creates the structure described. Next, it appends this structure to a parent DOM element provided as the second argument. Future calls to render() will reuse the existing tree and update it in-place in the DOM. Internally, render() will calculate the difference from previous outputted structures in an attempt to perform as few DOM operations as possible.\nimport { h, render } from 'preact';\n\/\/ Tells babel to use h for JSX. It's better to configure this globally.\n\/\/ See https:\/\/babeljs.io\/docs\/en\/babel-plugin-transform-react-jsx#usage\n\/\/ In tsconfig you can specify this with the jsxFactory\n\/** @jsx h *\/\n\n\/\/ create our tree and append it to document.body:\nrender(<main><h1>Hello<\/h1><\/main>, document.body);\n\n\/\/ update the tree in-place:\nrender(<main><h1>Hello World!<\/h1><\/main>, document.body);\n\/\/ ^ this second invocation of render(...) will use a single DOM call to update the text of the <h1>\nHooray! render() has taken our structure and output a User Interface! This approach demonstrates a simple case, but would be difficult to use as an application grows in complexity. Each change would be forced to calculate the difference between the current and updated structure for the entire application. Components can help here \u2013 by dividing the User Interface into nested Components each can calculate their difference from their mounted point. Here's an example:\nimport { render, h } from 'preact';\nimport { useState } from 'preact\/hooks';\n\n\/** @jsx h *\/\n\nconst App = () => {\n\tconst [input, setInput] = useState('');\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Do you agree to the statement: \"Preact is awesome\"?<\/p>\n\t\t\t<input value={input} onChange={e => setInput(e.target.value)} \/>\n\t\t<\/div>\n\t)\n}\n\nrender(<App \/>, document.body);\n\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n\n","82":"Taro\n\n\n\n\n\n\n\n\ud83d\udc7d Taro['t\u0251:ro\u028a]\uff0c\u6cf0\u7f57\u00b7\u5965\u7279\u66fc\uff0c\u5b87\u5b99\u8b66\u5907\u961f\u603b\u6559\u5b98\uff0c\u5b9e\u529b\u6700\u5f3a\u7684\u5965\u7279\u66fc\u3002\n\n\u7b80\u4ecb\nTaro \u662f\u4e00\u4e2a\u5f00\u653e\u5f0f\u8de8\u7aef\u8de8\u6846\u67b6\u89e3\u51b3\u65b9\u6848\uff0c\u652f\u6301\u4f7f\u7528 React\/Vue\/Nerv \u7b49\u6846\u67b6\u6765\u5f00\u53d1\u5fae\u4fe1\/\u4eac\u4e1c\/\u767e\u5ea6\/\u652f\u4ed8\u5b9d\/\u5b57\u8282\u8df3\u52a8\/ QQ \u5c0f\u7a0b\u5e8f\/H5 \u7b49\u5e94\u7528\u3002\u73b0\u5982\u4eca\u5e02\u9762\u4e0a\u7aef\u7684\u5f62\u6001\u591a\u79cd\u591a\u6837\uff0cWeb\u3001React Native\u3001\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7b49\u5404\u79cd\u7aef\u5927\u884c\u5176\u9053\uff0c\u5f53\u4e1a\u52a1\u8981\u6c42\u540c\u65f6\u5728\u4e0d\u540c\u7684\u7aef\u90fd\u8981\u6c42\u6709\u6240\u8868\u73b0\u7684\u65f6\u5019\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u7aef\u53bb\u7f16\u5199\u591a\u5957\u4ee3\u7801\u7684\u6210\u672c\u663e\u7136\u975e\u5e38\u9ad8\uff0c\u8fd9\u65f6\u5019\u53ea\u7f16\u5199\u4e00\u5957\u4ee3\u7801\u5c31\u80fd\u591f\u9002\u914d\u5230\u591a\u7aef\u7684\u80fd\u529b\u5c31\u663e\u5f97\u6781\u4e3a\u9700\u8981\u3002\n\u7248\u672c\u8bf4\u660e\n\u5f53\u524d Taro \u5df2\u8fdb\u5165 3.x \u65f6\u4ee3\uff0c\u76f8\u8f83\u4e8e Taro 1\/2 \u91c7\u7528\u4e86\u91cd\u8fd0\u884c\u65f6\u7684\u67b6\u6784\uff0c\u8ba9\u5f00\u53d1\u8005\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684 React\/Vue \u7b49\u6846\u67b6\u7684\u5f00\u53d1\u4f53\u9a8c\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u300a\u5c0f\u7a0b\u5e8f\u8de8\u6846\u67b6\u5f00\u53d1\u7684\u63a2\u7d22\u4e0e\u5b9e\u8df5\u300b\u3002\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528 Taro 1\/2\uff0c\u53ef\u4ee5\u8bbf\u95ee\u6587\u6863\u7248\u672c\u83b7\u5f97\u5e2e\u52a9\u3002\n\u5b66\u4e60\u8d44\u6e90\n5 \u5206\u949f\u4e0a\u624b Taro \u5f00\u53d1\nawesome-taro\n\u6398\u91d1\u5c0f\u518c\uff1aTaro \u591a\u7aef\u5f00\u53d1\u5b9e\u73b0\u539f\u7406\u4e0e\u5b9e\u6218\n\u793e\u533a\u5171\u4eab\nTaro \u4ea4\u6d41\u793e\u533a\u2014\u2014\u8ba9\u6bcf\u4e00\u6b21\u4ea4\u6d41\u90fd\u88ab\u6c89\u6dc0\nTaro \u7269\u6599\u5e02\u573a\u2014\u2014\u8ba9\u6bcf\u4e00\u4e2a\u8f6e\u5b50\u4ea7\u751f\u4ef7\u503c\n\u4f7f\u7528\u6848\u4f8b\nTaro \u5df2\u7ecf\u6295\u5165\u4e86\u6211\u4eec\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\uff0c\u4e1a\u754c\u4e5f\u5728\u5e7f\u6cdb\u5730\u4f7f\u7528 Taro \u5f00\u53d1\u591a\u7aef\u5e94\u7528\u3002\n\n\u5f81\u96c6\u66f4\u591a\u4f18\u79c0\u6848\u4f8b\nTaro \u7279\u6027\n\u6846\u67b6\u652f\u6301\nReact\/Nerv \u652f\u6301\n\u5728 Taro 3 \u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684 React\/Nerv \u5f00\u53d1\u4f53\u9a8c\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u57fa\u7840\u6559\u7a0b\u2014\u2014React\n\u4ee3\u7801\u793a\u4f8b\nimport React, { Component } from 'react'\nimport { View, Text } from '@tarojs\/components'\n\nexport default class Index extends Component {\n  state = {\n    msg: 'Hello World\uff01'\n  }\n  componentWillUnmount () { }\n\n  componentDidShow () { }\n\n  componentDidHide () { }\n\n  render () {\n    return (\n      <View className='index'>\n        <Text>{this.state.msg}<\/Text>\n      <\/View>\n    )\n  }\n}\nVue \u652f\u6301\n\u5728 Taro 3 \u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684 Vue \u5f00\u53d1\u4f53\u9a8c\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u57fa\u7840\u6559\u7a0b\u2014\u2014Vue\n\u4ee3\u7801\u793a\u4f8b\n<template>\n  <view class=\"index\">\n    <text>{{msg}}<\/text>\n  <\/view>\n<\/template>\n\n<script>\nexport default {\n  data () {\n    return {\n      msg: 'Hello World\uff01'\n    }\n  },\n  created () {},\n  onShow () {},\n  onHide () {}\n}\n<\/script>\n\u591a\u7aef\u8f6c\u6362\u652f\u6301\nTaro \u65b9\u6848\u7684\u521d\u5fc3\u5c31\u662f\u4e3a\u4e86\u6253\u9020\u4e00\u4e2a\u591a\u7aef\u5f00\u53d1\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u76ee\u524d Taro 3 \u53ef\u4ee5\u652f\u6301\u8f6c\u6362\u5230 \u5fae\u4fe1\/\u4eac\u4e1c\/\u767e\u5ea6\/\u652f\u4ed8\u5b9d\/\u5b57\u8282\u8df3\u52a8\/QQ \u5c0f\u7a0b\u5e8f \u4ee5\u53ca  H5 \u7aef\u3002\n\u52a0\u5165\u5171\u5efa\n\u52a0\u5165 Taro \u793e\u533a\u5171\u5efa\u5021\u8bae\nTaro \u9080\u4f60\u52a0\u5165\u793e\u533a\u5171\u5efa\n\u4e3a Taro \u8d21\u732e\u4ee3\u7801\nTaro \u975e\u5e38\u6b22\u8fce\u793e\u533a\u5f00\u53d1\u8005\u4e3a Taro \u8d21\u732e\u4ee3\u7801\uff0c\u5728\u8d21\u732e\u4e4b\u524d\u8bf7\u5148\u9605\u8bfb\u8d21\u732e\u6307\u5357\u3002\n\u5982\u679c\u4f60\u60f3\u4e3a Taro \u5b9e\u73b0\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\uff0c\u9700\u8981\u5148\u64b0\u5199 RFC  \u6587\u6863\uff0c\u6309\u7167 Taro \u7684RFC \u673a\u5236\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u7ecf\u8fc7\u793e\u533a\u8ba8\u8bba\u5b8c\u5584\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u4ee3\u7801\u7684\u63d0\u4ea4\u3002\n\u95ee\u9898\u53cd\u9988\u4e0e\u5efa\u8bae\n\u7ed9 Taro \u63d0 ISSUE\n\n\u5f3a\u70c8\u63a8\u8350\u9605\u8bfb \u300a\u63d0\u95ee\u7684\u667a\u6167\u300b\u3001\u300a\u5982\u4f55\u5411\u5f00\u6e90\u793e\u533a\u63d0\u95ee\u9898\u300b \u548c \u300a\u5982\u4f55\u6709\u6548\u5730\u62a5\u544a Bug\u300b\u3001\u300a\u5982\u4f55\u5411\u5f00\u6e90\u9879\u76ee\u63d0\u4ea4\u65e0\u6cd5\u89e3\u7b54\u7684\u95ee\u9898\u300b\uff0c\u66f4\u597d\u7684\u95ee\u9898\u66f4\u5bb9\u6613\u83b7\u5f97\u5e2e\u52a9\u3002\n\n\n\u7279\u522b\u9e23\u8c22\n\n\n\n\n\n\n\n\n\n\n\nnanjingboy\njsNewbee\nQiyu8\nGarfield Lee\n\n\n\n\u8d21\u732e\u8005\u4eec\n\n\u5f00\u53d1\u8ba1\u5212\nMilestones\n\u66f4\u65b0\u65e5\u5fd7\n\u672c\u9879\u76ee\u9075\u4ece Angular Style Commit Message Conventions\uff0c\u66f4\u65b0\u65e5\u5fd7\u8bf7\u67e5\u9605 Release\u3002\n\u5f00\u53d1\u4ea4\u6d41\n\u5b98\u65b9\u4ea4\u6d41\u5fae\u4fe1\u7fa4\nLicense\nMIT License\nCopyright (c) O2Team\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","83":"uni-app\nuni-app \u662f\u4e00\u4e2a\u4f7f\u7528 Vue.js \u5f00\u53d1\u5c0f\u7a0b\u5e8f\u3001H5\u3001App\u7684\u7edf\u4e00\u524d\u7aef\u6846\u67b6\u3002\u5b98\u7f51\u5730\u5740\uff1ahttps:\/\/uniapp.dcloud.io\n\u5f00\u53d1\u8005\u4f7f\u7528 Vue \u8bed\u6cd5\u7f16\u5199\u4ee3\u7801\uff0cuni-app \u6846\u67b6\u5c06\u5176\u7f16\u8bd1\u5230 \u5c0f\u7a0b\u5e8f\uff08\u5fae\u4fe1\/\u652f\u4ed8\u5b9d\/\u767e\u5ea6\/\u5b57\u8282\u8df3\u52a8\/QQ\/\u9489\u9489\uff09\u3001App\uff08iOS\/Android\uff09\u3001H5\u7b49\u591a\u4e2a\u5e73\u53f0\uff0c\u4fdd\u8bc1\u5176\u6b63\u786e\u8fd0\u884c\u5e76\u8fbe\u5230\u4f18\u79c0\u4f53\u9a8c\u3002\nuni-app\u7684\u7279\u70b9\n\n\u5f00\u53d1\u8005\u548c\u6848\u4f8b\u66f4\u591a\uff1aHBuilder\u88c5\u673a\u91cf500\u4e07\u53f0\uff0c\u5f00\u53d1\u8005\u793e\u533a\u6708\u6d3b\u767e\u4e07\uff0c70\u591a\u4e2aQQ\u5fae\u4fe1\u7fa4\u627f\u8f7d10\u4e07\u4eba\u3002\u6848\u4f8b\u4f17\u591a\uff0cuni\u7edf\u8ba1\u6708\u6d3b10\u4ebf\uff08\u8be6\u89c1\uff09\n\u6027\u80fd\u66f4\u9ad8\uff08\u89c1\u8bc4\u6d4b\uff09\n\u66f4\u4e30\u5bcc\u7684\u5468\u8fb9\u751f\u6001\uff0c\u63d2\u4ef6\u5e02\u573a\u6570\u5343\u6b3e\u63d2\u4ef6\n\u63d0\u4f9b\u6bd4\u5c0f\u7a0b\u5e8f\u539f\u751f\u5f00\u53d1\u66f4\u597d\u7684\u5f00\u53d1\u4f53\u9a8c\u3001\u66f4\u9ad8\u7684\u5de5\u7a0b\u5316\u6548\u7387\n\u8de8\u7aef\u62b9\u5e73\u5ea6\u66f4\u5b8c\u5584\uff0c\u4e14\u5404\u7aef\u7279\u8272\u53d1\u6325\u66f4\u7075\u6d3b\uff0c\u53ef\u771f\u6b63\u5b9e\u73b0\u4e00\u5957\u4ee3\u7801\u591a\u7aef\u8986\u76d6\uff0c\u65e0\u9700\u5404\u7aef\u591a\u5934\u7ef4\u62a4\u5347\u7ea7\n\u6743\u5a01\u8ba4\u53ef\uff1a\u963f\u91cc\u5c0f\u7a0b\u5e8f\u5b98\u65b9\u5de5\u5177\u5185\u7f6euni-app\uff08\u8be6\u89c1\uff09\u3001\u817e\u8baf\u8bfe\u5802\u5b98\u65b9\u81ea\u5236uni-app\u57f9\u8bad\u89c6\u9891\uff08\u8be6\u89c1\uff09\n\n\u626b\u7801\u4f53\u9a8c\n\u5f00\u53d1\u4e00\u6b21\uff0c\u7f16\u8bd1\u523010\u4e2a\u5e73\u53f0\u3002\u4f9d\u6b21\u626b\u63cf10\u4e2a\u4e8c\u7ef4\u7801\uff0c\u4eb2\u81ea\u4f53\u9a8c\u6700\u5168\u9762\u7684\u8de8\u5e73\u53f0\u6548\u679c\uff01\n\n\u6ce8\uff1a \u67d0\u4e9b\u5e73\u53f0\u4e0d\u80fd\u63d0\u4ea4\u7b80\u5355demo\uff0c\u8865\u5145\u4e86\u4e00\u4e9b\u5176\u4ed6\u529f\u80fd\u3002\n\u5feb\u901f\u5f00\u59cb\nuni-app\u652f\u6301\u901a\u8fc7vue-cli\u547d\u4ee4\u884c\u3001HBuilderX\u53ef\u89c6\u5316\u754c\u9762\u4e24\u79cd\u65b9\u5f0f\u5feb\u901f\u521b\u5efa\u9879\u76ee\uff1a\n\nvue-cli\u547d\u4ee4\u884c\u65b9\u5f0f\uff1a\u4e0d\u9650IDE\uff0c\u9002\u5408\u5bf9node\u719f\u6089\u7684\u5f00\u53d1\u8005\uff0c\u6269\u5c55\u9605\u8bfb\uff1a\u5728vscode\u4e2d\u5f00\u53d1uni-app\u3001\u5728 WebStorm \u4e2d\u5f00\u53d1 uni-app\nHBuilderX\u53ef\u89c6\u5316\u754c\u9762\uff1a\u4e13\u7528IDE\uff0c\u5185\u7f6e\u76f8\u5173\u73af\u5883\uff0c\u5f00\u7bb1\u5373\u7528\uff0c\u5f00\u53d1\u6548\u7387\u66f4\u9ad8\u3002\n\n\u9879\u76ee\u6848\u4f8b\n\u6848\u4f8b\u5c55\u793a\uff1auniapp.dcloud.io\/case\n\u6b22\u8fce\u63d0\u4ea4\u4f60\u7684\u5e94\u7528\uff0cuni-app\u6848\u4f8b\u5f81\u96c6\n\u9700\u6c42\u5899\nuni-app\u8ba1\u5212\u652f\u6301\u7684\u529f\u80fd\u70b9\uff0c\u4f1a\u5728\u9700\u6c42\u5899\u4e0a\u8fdb\u884c\u5c55\u793a\uff0c\u5f81\u96c6\u5f00\u53d1\u8005\u7684\u6295\u7968\u610f\u89c1\uff0c\u524d\u5f80\u6295\u7968\u3002\n\u66f4\u65b0\u65e5\u5fd7\nuni-app\u4e00\u76f4\u4fdd\u6301\u9ad8\u9891\u7684\u66f4\u65b0\u8fed\u4ee3\uff0c\u8be6\u89c1uni-app \u66f4\u65b0\u65e5\u5fd7\u3002\n\u8bba\u575b\n\u7531\u4e8eDCloud\u670970\u591a\u4e2aQQ\u3001\u5fae\u4fe1\u7fa4\uff0c\u5b98\u65b9\u5df2\u65e0\u6cd5\u7ef4\u62a4\u66f4\u591a\u4ea4\u6d41\u7fa4\u3002\u8bf7\u5f00\u53d1\u8005\u5230\u5b98\u65b9\u8bba\u575b\u4ea4\u6d41\uff1ahttps:\/\/ask.dcloud.net.cn\/explore\/ \u3002\u8bba\u575b\u63d0\u4f9b\u4e86\u6bd4issues\u66f4\u4e13\u4e1a\u7684\u5de5\u5177\u670d\u52a1\u3002\n\u63d2\u4ef6\u5e02\u573a\nuni-app\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\uff0c\u4f17\u591a\u5f00\u53d1\u8005\u63d0\u4ea4\u4e86\u6570\u5343\u6b3e\u7ec4\u4ef6\u3001sdk\u3001\u9879\u76ee\u6a21\u677f\uff0c\u8be6\u89c1\uff1ahttps:\/\/ext.dcloud.net.cn\/\n\u9664\u4e86\u4f17\u591a\u4e09\u65b9ui\u5e93\uff0c\u5b98\u65b9\u8fd8\u63d0\u4f9b\u4e86uni-ui\uff0c\u5728\u6027\u80fd\u548c\u8de8\u7aef\u517c\u5bb9\u65b9\u9762\u6709\u66f4\u5f3a\u7684\u4f18\u52bf\u3002\u8be6\u89c1\uff1ahttps:\/\/ext.dcloud.net.cn\/plugin?id=55\n\u73b0\u6709\u9879\u76ee\u5982\u4f55\u8fc1\u79fb\u5230uni-app\u4f53\u7cfb\n\n\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u8f6c\u6362uni-app\u6307\u5357\u53ca\u8f6c\u6362\u5668\uff1ahttps:\/\/ask.dcloud.net.cn\/article\/35786\nvue h5\u9879\u76ee\u8f6c\u6362uni-app\u6307\u5357\uff1ahttps:\/\/ask.dcloud.net.cn\/article\/36174\nmpvue \u9879\u76ee\uff08\u7ec4\u4ef6\uff09\u8fc1\u79fb\u6307\u5357\u3001\u793a\u4f8b\u53ca\u8d44\u6e90\u6c47\u603b\uff1a https:\/\/ask.dcloud.net.cn\/article\/34945\nwepy\u8f6cuni-app\u8f6c\u6362\u5668\uff1ahttps:\/\/github.com\/zhangdaren\/wepy-to-uniapp\n\n\u5e38\u89c1\u7591\u95ee\n\n\n\u95ee\uff1a\u4e0d\u540c\u7aef\u6709\u4e0d\u540c\u7684\u9700\u6c42\u3001\u4e0d\u540c\u7684\u7279\u8272\uff0c\u767b\u9646\u652f\u4ed8\u4e5f\u4e0d\u4e00\u6837\uff0c\u5982\u4f55\u7edf\u4e00\uff1f\n\n\n\u7b54\uff1a\u5dee\u5f02\u90e8\u5206\u4f7f\u7528\u6761\u4ef6\u7f16\u8bd1\u3002uni-app\u63d0\u4f9b\u4e86\u7075\u6d3b\u5f3a\u5927\u7684\u6761\u4ef6\u7f16\u8bd1\u3002\u53ef\u4ee5\u5b8c\u7f8e\u5904\u7406\u590d\u7528\u90e8\u5206\u548c\u5dee\u5f02\u90e8\u5206\u3002\u771f\u6b63\u4e00\u5957\u5de5\u7a0b\u6e90\u7801\u3002\u5f53\u4e1a\u52a1\u5347\u7ea7\u65f6\uff0c\u4e0d\u518d\u9700\u8981\u591a\u7aef\u7ef4\u62a4\u3002\u5982\u679c\u591a\u7aef\u7ef4\u62a4\uff0c\u7ecf\u5e38\u4f1a\u56e0\u4e3a\u67d0\u4e9b\u7aef\u7684\u6d41\u91cf\u4e0d\u5927\uff0c\u5c31\u4e00\u76f4\u62d6\u5ef6\u65e0\u6cd5\u8ba9\u90a3\u4e9b\u7528\u6237\u4eab\u53d7\u5230\u6700\u65b0\u670d\u52a1\u3002\u53e6\u5916\u767b\u9646\u652f\u4ed8\u5728\u5ba2\u6237\u7aef\u90e8\u5206\uff0c\u5df2\u7ecf\u88abuni-app\u7edf\u4e00\u6210\u4e00\u6837\u7684api\u4e86\u3002\n\n\n\u95ee\uff1a\u591a\u7aef\u662f\u4e0d\u662f\u4e00\u79cd\u59a5\u534f\uff0c\u662f\u5426\u4f1a\u9020\u6210\u6027\u80fd\u4e0b\u964d\uff1f\n\n\n\u7b54\uff1agood question\u3002\u591a\u7aef\u4e14\u4e0d\u5f71\u54cd\u6027\u80fd\uff0c\u786e\u5b9e\u5f88\u96be\uff0c\u4f46uni-app\u505a\u5230\u4e86\u3002\u5728h5\u7aef\uff0c\u5b83\u7684\u6027\u80fd\u3001\u5305\u4f53\u79ef\u4e0e\u76f4\u63a5\u4f7f\u7528vue.js\u5f00\u53d1\u4e00\u81f4\uff1b \u5728\u5c0f\u7a0b\u5e8f\u7aef\uff0c\u5b83\u7684\u6027\u80fd\u6bd4\u5927\u591a\u6570\u5f00\u53d1\u6846\u67b6\u66f4\u597d\uff0cuni-app\u5e95\u5c42\u81ea\u52a8\u5904\u7406\u7684setdata\u5dee\u91cf\u540c\u6b65\u673a\u5236\uff0c\u6bd4\u5f00\u53d1\u8005\u624b\u52a8\u5199setdata\u66f4\u597d\uff0c\u5c31\u50cf\u4f7f\u7528vue.js\u66f4\u65b0\u754c\u9762\u6bd4\u624b\u52a8\u5199js\u4fee\u6539dom\u66f4\u9ad8\u6548\u4e00\u6837\uff1b \u5728App\uff0cuni-app\u652f\u6301webview\u6e32\u67d3\u548c\u539f\u751f\u6e32\u67d3\u53cc\u5f15\u64ce\uff0c\u542f\u7528\u539f\u751f\u6e32\u67d3\u65f6\uff0ccss\u5199\u6cd5\u53d7\u9650\uff0c\u4f46\u6027\u80fd\u662f\u5f88\u63a5\u8fd1\u539f\u751f\u5f00\u53d1\u7684\u6548\u679c\u7684\uff0c\u5728\u5f53\u524d\u7684\u624b\u673a\u73af\u5883\u4e0b\uff0c\u5343\u4e07\u65e5\u6d3b\u4ee5\u4e0b\u7684\u5e94\u7528\u5728App\u4f7f\u7528uni-app\u4e5f\u4e0d\u4f1a\u9047\u5230\u4efb\u4f55\u538b\u529b\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u5df2\u7ecf\u505a\u597d\u7684\u539f\u751fApp\u4e2d\u5c06\u90e8\u5206\u9875\u9762\u6539\u4e3auni-app\u5b9e\u73b0; \u6b64\u5916\uff0c\u6211\u4eec\u4f1a\u628a\u5f88\u591a\u8de8\u7aef\u5904\u7406\u653e\u5728\u7f16\u8bd1\u671f\u5b8c\u6210\u7684\uff0c\u8fd9\u6837\u4f1a\u51cf\u5c11\u5bf9\u8fd0\u884c\u671f\u7684\u6548\u7387\u5f71\u54cd\u3002\n\n\n\u95ee\uff1a\u4e0d\u505a\u591a\u7aef\uff0c\u662f\u4e0d\u662f\u4e0d\u9700\u8981uni-app\uff1f\n\n\n\u7b54\uff1a\u4e0d\u662f\u3002\u5927\u91cf\u5f00\u53d1\u8005\u7528uni-app\u53ea\u505a\u4e00\u4e2a\u7aef\uff0c\u8be6\u89c1\u6848\u4f8b\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4e00\u4e2a\u4f18\u79c0\u5de5\u5177\u5728\u624b\uff0c\u505a\u4ec0\u4e48\u90fd\u4e0d\u6101\u3002\n\n\n\u95ee\uff1auni-app\u4ee5\u540e\u4f1a\u4e0d\u4f1a\u53d8\u66f4\u5f00\u6e90\u534f\u8bae\uff0c\u8f6c\u5411\u6536\u8d39\uff1f\n\n\n\u7b54\uff1a\u5b98\u65b9\u627f\u8bfa\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u66f4\u5f00\u6e90\u534f\u8bae\u3002\u65e0\u8bbaHBuilderX\u3001uni-app\u3001App\uff0c\u9762\u5411\u4e2d\u56fd\u4eba\u6c38\u4e45\u514d\u8d39\u3002\n\n\n\u66f4\u591a\u8d44\u6599\n\n\u8bc4\u6d4b\uff1a\u8de8\u7aef\u5f00\u53d1\u6846\u67b6\u6df1\u5ea6\u6a2a\u8bc4\u4e4b2020\u7248\n\u8bc4\u6d4b\uff1a\u6df1\u5165\u6d4b\u8bd5\u4e00\u5468\uff0c\u4e3b\u6d41\u591a\u7aef\u6846\u67b6\u5927\u6bd4\u6b66\nuni-app\u5728App\u7aef\u548cflutter\u3001react native\u7684\u6bd4\u8f83\n\n","84":"\n\nHelping you select an MV* framework\n\nWebsite\u00a0\u00a0\u00a0\u00a0Blog\u00a0\u00a0\u00a0\u00a0TasteJS\n\n\nDevelopers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.\nBackbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?\nTo help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.\nTeam\nTodoMVC would not be possible without a strong team of contributors helping push the project forward each day. Additionally, we have a core project team composed of:\nAddy Osmani - Founder\/Lead\n\n  Addy is a Software Engineer at Google who originally created TodoMVC. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nSindre Sorhus - Lead Developer\n\nSindre is a Web Developer who leads core development, quality control and application design for the project. His engineering contributions have helped us ensure consistency and best practices are enforced wherever possible. Sindre also leads up development of the TodoMVC application spec.\nPascal Hartig - Developer\n\nPascal is a Software Engineer at Twitter with a deep passion for consistency. He watches pull requests and helps developers getting their contributions integrated with TodoMVC.\nStephen Sawchuk - Developer\n\nStephen is a Front-end Engineer at Quicken Loans that cares about improving the maintainability and developer experience of open-source projects. His recent contributions include helping us move all apps over to using Bower and implementing the new information bar.\nColin Eberhardt - Developer\n\nColin is a software consultant at Scott Logic who is passionate about all software - from JavaScript to Java, and C# to Objective-C. His recent contribution to the project has been a fully automated test suite.\nSam Saccone - Developer\n\nSam is a Software Engineer at Google who is driven by an endless desire to create, solve problems, and improve developers' lives.\nArthur Verschaeve - Developer\n\nArthur is an open-source fanboy from Belgium. He is passionate about developer tooling and all things JavaScript.\nFady Samir Sadek - Developer\n\nFady is a front-end developer who loves all things JavaScript and enjoys solving real world problems using the web platform and helping other developers do the same. He currently leads maintenance of the project and ensures that the project is friendly for new contributors and upcoming developers.\nGianni Chiappetta - Logo designer\n\nGianni is a programmer and designer currently working as the Chief Rigger at MetaLab.\nDisclaimer\n\nTodoMVC has been called many things including the 'Speed-dating' and 'Rosetta Stone' of MV* frameworks. Whilst we hope that this project can offer assistance in deciding what frameworks are worth spending more time looking at, remember that the Todo application offers a limited view of a framework's potential capability.\nIt is meant to be used as a gateway to reviewing how a basic application using a framework may be structured, and we heavily recommend investing time researching a solution in more depth before opting to use it.\nAlso, please keep in mind that TodoMVC is not the perfect way to compare the size of different frameworks. We intentionally use the unminified versions to make reading the source code easier.\nGetting Involved\nWhilst we enjoy implementing and improving existing Todo apps, we're always interested in speaking to framework authors (and users) wishing to share Todo app implementations in their framework\/solution of choice.\nCheck out our contribution docs for more info.\nLicense\nEverything in this repo is MIT License unless otherwise specified.\nMIT \u00a9 Addy Osmani, Sindre Sorhus, Pascal Hartig, Stephen Sawchuk.\n","85":"\n\n\n\n\n\n\nAsync is a utility module which provides straight-forward, powerful functions for working with asynchronous JavaScript. Although originally designed for use with Node.js and installable via npm i async, it can also be used directly in the browser.  A ESM\/MJS version is included in the main async package that should automatically be used with compatible bundlers such as Webpack and Rollup.\nA pure ESM version of Async is available as async-es.\nFor Documentation, visit https:\/\/caolan.github.io\/async\/\nFor Async v1.5.x documentation, go HERE\n\/\/ for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"\/dev.json\", test: \"\/test.json\", prod: \"\/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    \/\/ configs is now a map of JSON data\n    doSomethingWith(configs);\n});\nvar async = require(\"async\");\n\n\/\/ ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    \/\/ results is now an array of the response bodies\n    console.log(results)\n})\n","86":"Vue CLI   \n\nVue CLI is the Standard Tooling for Vue.js Development.\n\nDocumentation\nDocs are available at https:\/\/cli.vuejs.org\/ - we are still working on refining it and contributions are welcome!\nContributing\nPlease see contributing guide.\nLicense\nMIT\n","87":"\n\nStart your next react project in seconds\nA highly scalable, offline-first foundation with the best DX and a focus on performance and best practices\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreated by Max Stoiber and maintained with \u2764\ufe0f by an amazing team of developers.\n\nFeatures\n\nQuick scaffolding\nCreate components, containers, routes, selectors and sagas - and their tests - right from the CLI!\nInstant feedback\nEnjoy the best DX (Developer eXperience) and code your app at the speed of thought! Your saved changes to the CSS and JS are reflected instantaneously without refreshing the page. Preserve application state even when you update something in the underlying code!\nPredictable state management\nUnidirectional data flow allows for change logging and time travel debugging.\nNext generation JavaScript\nUse template strings, object destructuring, arrow functions, JSX syntax and more.\nNext generation CSS\nWrite composable CSS that's co-located with your components for complete modularity. Unique generated class names keep the specificity low while eliminating style clashes. Ship only the styles that are on the page for the best performance.\nIndustry-standard routing\nIt's natural to want to add pages (e.g. `\/about`) to your application, and routing makes this possible.\nIndustry-standard i18n internationalization support\nScalable apps need to support multiple languages, easily add and support multiple languages with `react-intl`.\nOffline-first\nThe next frontier in performant web apps: availability without a network connection from the instant your users load the app.\nStatic code analysis\nFocus on writing new features without worrying about formatting or code quality. With the right editor setup, your code will automatically be formatted and linted as you work.\nSEO\nWe support SEO (document head tags management) for search engines that support indexing of JavaScript content. (eg. Google)\n\nBut wait... there's more!\n\nThe best test setup: Automatically guarantee code quality and non-breaking\nchanges. (Seen a react app with 100% test coverage before?)\nNative web app: Your app's new home? The home screen of your users' phones.\nThe fastest fonts: Say goodbye to vacant text.\nStay fast: Profile your app's performance from the comfort of your command\nline!\nCatch problems: AppVeyor and TravisCI setups included by default, so your\ntests get run automatically on Windows and Unix.\n\nThere\u2019s also a fantastic video on how to structure your React.js apps with scalability in mind. It provides rationale for the majority of boilerplate's design decisions.\nKeywords: React.js, Redux, Hot Reloading, ESNext, Babel, react-router, Offline First, ServiceWorker, styled-components, redux-saga, FontFaceObserver\nQuick start\n\nMake sure that you have Node.js v8.15.1 and npm v5 or above installed.\nClone this repo using git clone --depth=1 https:\/\/github.com\/react-boilerplate\/react-boilerplate.git <YOUR_PROJECT_NAME>\nMove to the appropriate directory: cd <YOUR_PROJECT_NAME>.\nRun npm run setup in order to install dependencies and clean the git repo.\nAt this point you can run npm start to see the example app at http:\/\/localhost:3000.\nRun npm run clean to delete the example app.\n\nNow you're ready to rumble!\n\nPlease note that this boilerplate is production-ready and not meant for beginners! If you're just starting out with react or redux, please refer to https:\/\/github.com\/petehunt\/react-howto instead. If you want a solid, battle-tested base to build your next product upon and have some experience with react, this is the perfect start for you.\n\nDocumentation\n\nThe Hitchhiker's Guide to react-boilerplate: An introduction for newcomers to this boilerplate.\nOverview: A short overview of the included tools\nCommands: Getting the most out of this boilerplate\nTesting: How to work with the built-in test harness\nStyling: How to work with the CSS tooling\nYour app: Supercharging your app with Routing, Redux, simple\nasynchronicity helpers, etc.\nTroubleshooting: Solutions to common problems faced by developers.\n\nContributors\nThanks goes to these wonderful people (emoji key):\nMax Stoiber\ud83d\udcbb \ud83d\udcd6 \ud83e\udd14 \ud83d\udc40 \u26a0\ufe0fJulien Benchetrit\ud83d\udcbb \ud83d\udcac \ud83d\udcd6 \ud83d\udc40 \ud83d\udea7Sara Federico\ud83d\udcbb \ud83d\udc40 \ud83d\udcac \ud83d\udcd6 \ud83d\udea7Justin Greenberg\ud83d\udcbb \ud83d\udc40Jon Winn\ud83d\udcbb \ud83d\udc40Johan Meester\ud83d\udcbb \u26a0\ufe0f \ud83d\udcd6Yaroslav Kiliba\ud83d\udcbbGlen Ihrig\ud83d\udcbbSomasundaram Ayyappan\ud83d\udcbbOliver Turner\ud83d\udcbbSamuel Sharpe\ud83d\udcbbMihir Karandikar\ud83d\udcbbVaibhav Verma\ud83d\udcbbS\u00e9bastien Dubois\ud83d\udcbbChainarong Tangsurakit\ud83d\udcbbAmila Welihinda\ud83d\udcbb\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nSupporters\nThis project would not be possible without the support of these amazing folks. Become a sponsor to get your company in front of thousands of engaged react developers and help us out!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nThis project is licensed under the MIT license, Copyright (c) 2019 Maximilian\nStoiber. For more information see LICENSE.md.\n","88":"Front End Interview Handbook\n\n\n\n\n\n\nCredits: Illustration by @yangheng\n\n\n\nRead on the website\n\n\n\n\n  Black Lives Matter. Support the Equal Justice Initiative\n\n\nWhat is this?\nUnlike typical software engineer job interviews, front-end job interviews have less emphasis on algorithms and have more questions on intricate knowledge and expertise about the domain\u200a\u2014\u200aHTML, CSS, JavaScript, just to name a few areas.\nWhile there are some existing resources to help front end developers in preparing for interviews, they aren't as abundant as materials for a software engineer interview. Among the existing resources, probably the most helpful question bank would be Front-end Developer Interview Questions. Unfortunately, I couldn't find many complete and satisfactory answers to these questions online, hence here is my attempt at answering them. Being an open source repository, the project can live on with the support of the community as the state of web evolves.\nWhy do I want this?\nGo From Zero to Hero\nGo from zero to front end interview hero with this handbook. No prior interview experience needed.\nBack to Basics\nLearn to walk before you learn to fly. While React, Vue and Angular are cool, make sure you also know your fundamentals.\nCommunity Effort\nThe best thing about Open Source is that the community vets the contents, so you can be sure the answers here have been proofread by many.\nWho is this for?\nAnybody who wants to land a job at a tech company for a front end role and is looking to make sure they don't stumble on the basic questions. To be frank, I revise the answers here from time to time as well!\n\n\n\ud83d\udcb0 Interested in Front End Dev jobs? Sign up with Triplebyte to efficiently interview with top tech companies! \ud83d\udcb0\n\n\nLooking for Generic Interview Preparation?\nYou might be interested in the Tech Interview Handbook which has helpful content on general coding interviews such as algorithms, behavioral questions and an interview cheatsheet!\n\n\n\n\n\n\nCredits: Illustration by unDraw\n\n\nRead on the website\n\n\nTable of Contents\n\nHTML Questions\nCSS Questions\nJavaScript Questions\n\nContents\n\nEnglish\nChinese (Simplified) (\u7b80\u4f53\u4e2d\u6587)\nJapanese (\u65e5\u672c\u8a9e)\nKorean (\ud55c\uad6d\uc5b4)\nPolish (Polski)\nPortuguese (Portugu\u00eas)\nRussian (\u0420\u0443\u0441\u0441\u043a\u0438\u0439)\nTagalog\n\nRelated\nIf you are interested in how data structures are implemented, check out Lago, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.\nContributing\nCode of Conduct\nWe have adopted the same Code of Conduct as Facebook that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about how you can contribute, how to propose improvements or if you are interested in translating the content.\nSupporting\nMany hours of hard work have gone into this project. Your support will be very appreciated!\n\nLicense\nAll projects and packages in this repository are MIT licensed.\n","89":"slick\nthe last carousel you'll ever need\nDemo\nhttp:\/\/kenwheeler.github.io\/slick\nCDN\nTo start working with Slick right away, there's a couple of CDN choices availabile\nto serve the files as close, and fast as possible to your users:\n\nhttps:\/\/cdnjs.com\/libraries\/slick-carousel\nhttps:\/\/www.jsdelivr.com\/projects\/jquery.slick\n\nExample using jsDelivr\nJust add a link to the css file in your <head>:\n<!-- Add the slick-theme.css if you want default styling -->\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"\/\/cdn.jsdelivr.net\/npm\/slick-carousel@1.8.1\/slick\/slick.css\"\/>\n<!-- Add the slick-theme.css if you want default styling -->\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"\/\/cdn.jsdelivr.net\/npm\/slick-carousel@1.8.1\/slick\/slick-theme.css\"\/>\nThen, before your closing <body> tag add:\n<script type=\"text\/javascript\" src=\"\/\/cdn.jsdelivr.net\/npm\/slick-carousel@1.8.1\/slick\/slick.min.js\"><\/script>\nPackage Managers\n# Bower\nbower install --save slick-carousel\n\n# NPM\nnpm install slick-carousel\nContributing\nPLEASE review CONTRIBUTING.markdown prior to requesting a feature, filing a pull request or filing an issue.\nData Attribute Settings\nIn slick 1.5 you can now add settings using the data-slick attribute. You still need to call $(element).slick() to initialize slick on the element.\nExample:\n<div data-slick='{\"slidesToShow\": 4, \"slidesToScroll\": 4}'>\n  <div><h3>1<\/h3><\/div>\n  <div><h3>2<\/h3><\/div>\n  <div><h3>3<\/h3><\/div>\n  <div><h3>4<\/h3><\/div>\n  <div><h3>5<\/h3><\/div>\n  <div><h3>6<\/h3><\/div>\n<\/div>\nSettings\n\n\n\nOption\nType\nDefault\nDescription\n\n\n\n\naccessibility\nboolean\ntrue\nEnables tabbing and arrow key navigation.  Unless autoplay: true, sets browser focus to current slide (or first of current slide set, if multiple slidesToShow) after slide change. For full a11y compliance enable focusOnChange in addition to this.\n\n\nadaptiveHeight\nboolean\nfalse\nAdapts slider height to the current slide\n\n\nappendArrows\nstring\n$(element)\nChange where the navigation arrows are attached (Selector, htmlString, Array, Element, jQuery object)\n\n\nappendDots\nstring\n$(element)\nChange where the navigation dots are attached (Selector, htmlString, Array, Element, jQuery object)\n\n\narrows\nboolean\ntrue\nEnable Next\/Prev arrows\n\n\nasNavFor\nstring\n$(element)\nEnables syncing of multiple sliders\n\n\nautoplay\nboolean\nfalse\nEnables auto play of slides\n\n\nautoplaySpeed\nint\n3000\nAuto play change interval\n\n\ncenterMode\nboolean\nfalse\nEnables centered view with partial prev\/next slides. Use with odd numbered slidesToShow counts.\n\n\ncenterPadding\nstring\n'50px'\nSide padding when in center mode. (px or %)\n\n\ncssEase\nstring\n'ease'\nCSS3 easing\n\n\ncustomPaging\nfunction\nn\/a\nCustom paging templates. See source for use example.\n\n\ndots\nboolean\nfalse\nCurrent slide indicator dots\n\n\ndotsClass\nstring\n'slick-dots'\nClass for slide indicator dots container\n\n\ndraggable\nboolean\ntrue\nEnables desktop dragging\n\n\neasing\nstring\n'linear'\nanimate() fallback easing\n\n\nedgeFriction\ninteger\n0.15\nResistance when swiping edges of non-infinite carousels\n\n\nfade\nboolean\nfalse\nEnables fade\n\n\nfocusOnSelect\nboolean\nfalse\nEnable focus on selected element (click)\n\n\nfocusOnChange\nboolean\nfalse\nPuts focus on slide after change\n\n\ninfinite\nboolean\ntrue\nInfinite looping\n\n\ninitialSlide\ninteger\n0\nSlide to start on\n\n\nlazyLoad\nstring\n'ondemand'\nAccepts 'ondemand' or 'progressive' for lazy load technique. 'ondemand' will load the image as soon as you slide to it, 'progressive' loads one image after the other when the page loads.\n\n\nmobileFirst\nboolean\nfalse\nResponsive settings use mobile first calculation\n\n\nnextArrow\nstring (html | jQuery selector) | object (DOM node | jQuery object)\n<button type=\"button\" class=\"slick-next\">Next<\/button>\nAllows you to select a node or customize the HTML for the \"Next\" arrow.\n\n\npauseOnDotsHover\nboolean\nfalse\nPauses autoplay when a dot is hovered\n\n\npauseOnFocus\nboolean\ntrue\nPauses autoplay when slider is focussed\n\n\npauseOnHover\nboolean\ntrue\nPauses autoplay on hover\n\n\nprevArrow\nstring (html | jQuery selector) | object (DOM node | jQuery object)\n<button type=\"button\" class=\"slick-prev\">Previous<\/button>\nAllows you to select a node or customize the HTML for the \"Previous\" arrow.\n\n\nrespondTo\nstring\n'window'\nWidth that responsive object responds to. Can be 'window', 'slider' or 'min' (the smaller of the two).\n\n\nresponsive\narray\nnull\nArray of objects containing breakpoints and settings objects (see example). Enables settings at given breakpoint. Set settings to \"unslick\" instead of an object to disable slick at a given breakpoint.\n\n\nrows\nint\n1\nSetting this to more than 1 initializes grid mode. Use slidesPerRow to set how many slides should be in each row.\n\n\nrtl\nboolean\nfalse\nChange the slider's direction to become right-to-left\n\n\nslide\nstring\n''\nSlide element query\n\n\nslidesPerRow\nint\n1\nWith grid mode initialized via the rows option, this sets how many slides are in each grid row.\n\n\nslidesToScroll\nint\n1\n# of slides to scroll at a time\n\n\nslidesToShow\nint\n1\n# of slides to show at a time\n\n\nspeed\nint\n300\nTransition speed\n\n\nswipe\nboolean\ntrue\nEnables touch swipe\n\n\nswipeToSlide\nboolean\nfalse\nSwipe to slide irrespective of slidesToScroll\n\n\ntouchMove\nboolean\ntrue\nEnables slide moving with touch\n\n\ntouchThreshold\nint\n5\nTo advance slides, the user must swipe a length of (1\/touchThreshold) * the width of the slider.\n\n\nuseCSS\nboolean\ntrue\nEnable\/Disable CSS Transitions\n\n\nuseTransform\nboolean\ntrue\nEnable\/Disable CSS Transforms\n\n\nvariableWidth\nboolean\nfalse\nDisables automatic slide width calculation\n\n\nvertical\nboolean\nfalse\nVertical slide direction\n\n\nverticalSwiping\nboolean\nfalse\nChanges swipe direction to vertical\n\n\nwaitForAnimate\nboolean\ntrue\nIgnores requests to advance the slide while animating\n\n\nzIndex\nnumber\n1000\nSet the zIndex values for slides, useful for IE9 and lower\n\n\n\nResponsive Option Example\nThe responsive option, and value, is quite unique and powerful.\nYou can use it like so:\n$(\".slider\").slick({\n\n  \/\/ normal options...\n  infinite: false,\n\n  \/\/ the magic\n  responsive: [{\n\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        infinite: true\n      }\n\n    }, {\n\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        dots: true\n      }\n\n    }, {\n\n      breakpoint: 300,\n      settings: \"unslick\" \/\/ destroys slick\n\n    }]\n});\nEvents\nIn slick 1.4, callback methods were deprecated and replaced with events. Use them before the initialization of slick as shown below:\n\/\/ On swipe event\n$('.your-element').on('swipe', function(event, slick, direction){\n  console.log(direction);\n  \/\/ left\n});\n\n\/\/ On edge hit\n$('.your-element').on('edge', function(event, slick, direction){\n  console.log('edge was hit')\n});\n\n\/\/ On before slide change\n$('.your-element').on('beforeChange', function(event, slick, currentSlide, nextSlide){\n  console.log(nextSlide);\n});\n\n\n\nEvent\nParams\nDescription\n\n\n\n\nafterChange\nevent, slick, currentSlide\nAfter slide change callback\n\n\nbeforeChange\nevent, slick, currentSlide, nextSlide\nBefore slide change callback\n\n\nbreakpoint\nevent, slick, breakpoint\nFires after a breakpoint is hit\n\n\ndestroy\nevent, slick\nWhen slider is destroyed, or unslicked.\n\n\nedge\nevent, slick, direction\nFires when an edge is overscrolled in non-infinite mode.\n\n\ninit\nevent, slick\nWhen Slick initializes for the first time callback. Note that this event should be defined before initializing the slider.\n\n\nreInit\nevent, slick\nEvery time Slick (re-)initializes callback\n\n\nsetPosition\nevent, slick\nEvery time Slick recalculates position\n\n\nswipe\nevent, slick, direction\nFires after swipe\/drag\n\n\nlazyLoaded\nevent, slick, image, imageSource\nFires after image loads lazily\n\n\nlazyLoadError\nevent, slick, image, imageSource\nFires after image fails to load\n\n\n\nMethods\nMethods are called on slick instances through the slick method itself in version 1.4, see below:\n\/\/ Add a slide\n$('.your-element').slick('slickAdd',\"<div><\/div>\");\n\n\/\/ Get the current slide\nvar currentSlide = $('.your-element').slick('slickCurrentSlide');\nThis new syntax allows you to call any internal slick method as well:\n\/\/ Manually refresh positioning of slick\n$('.your-element').slick('setPosition');\n\n\n\nMethod\nArgument\nDescription\n\n\n\n\nslick\noptions : object\nInitializes Slick\n\n\nunslick\n\nDestroys Slick\n\n\nslickNext\n\nTriggers next slide\n\n\nslickPrev\n\nTriggers previous slide\n\n\nslickPause\n\nPause Autoplay\n\n\nslickPlay\n\nStart Autoplay (will also set autoplay option to true)\n\n\nslickGoTo\nindex : int, dontAnimate : bool\nGoes to slide by index, skipping animation if second parameter is set to true\n\n\nslickCurrentSlide\n\nReturns the current slide index\n\n\nslickAdd\nelement : html or DOM object, index: int, addBefore: bool\nAdd a slide. If an index is provided, will add at that index, or before if addBefore is set. If no index is provided, add to the end or to the beginning if addBefore is set. Accepts HTML String\n\n\nslickRemove\nindex: int, removeBefore: bool\nRemove slide by index. If removeBefore is set true, remove slide preceding index, or the first slide if no index is specified. If removeBefore is set to false, remove the slide following index, or the last slide if no index is set.\n\n\nslickFilter\nfilter : selector or function\nFilters slides using jQuery .filter syntax\n\n\nslickUnfilter\n\nRemoves applied filter\n\n\nslickGetOption\noption : string(option name)\nGets an option value.\n\n\nslickSetOption\nchange an option, refresh is always boolean and will update UI changes...\n\n\n\noption, value, refresh\nchange a single option to given value; refresh is optional.\n\n\n\n\"responsive\", [{ breakpoint: n, settings: {} }, ... ], refresh\nchange or add whole sets of responsive options\n\n\n\n{ option: value, option: value, ... }, refresh\nchange  multiple options to corresponding values.\n\n\n\n\nExample\nInitialize with:\n$(element).slick({\n  dots: true,\n  speed: 500\n});\nChange the speed with:\n$(element).slick('slickSetOption', 'speed', 5000, true);\nDestroy with:\n$(element).slick('unslick');\nSass Variables\n\n\n\nVariable\nType\nDefault\nDescription\n\n\n\n\n$slick-font-path\nstring\n\".\/fonts\/\"\nDirectory path for the slick icon font\n\n\n$slick-font-family\nstring\n\"slick\"\nFont-family for slick icon font\n\n\n$slick-loader-path\nstring\n\".\/\"\nDirectory path for the loader image\n\n\n$slick-arrow-color\ncolor\nwhite\nColor of the left\/right arrow icons\n\n\n$slick-dot-color\ncolor\nblack\nColor of the navigation dots\n\n\n$slick-dot-color-active\ncolor\n$slick-dot-color\nColor of the active navigation dot\n\n\n$slick-prev-character\nstring\n'\\2190'\nUnicode character code for the previous arrow icon\n\n\n$slick-next-character\nstring\n'\\2192'\nUnicode character code for the next arrow icon\n\n\n$slick-dot-character\nstring\n'\\2022'\nUnicode character code for the navigation dot icon\n\n\n$slick-dot-size\npixels\n6px\nSize of the navigation dots\n\n\n\nBrowser support\nSlick works on IE8+ in addition to other modern browsers such as Chrome, Firefox, and Safari.\nDependencies\njQuery 1.7\nLicense\nCopyright (c) 2017 Ken Wheeler\nLicensed under the MIT license.\nFree as in Bacon.\n","90":"\n    \nnginx-proxy sets up a container running nginx and docker-gen.  docker-gen generates reverse proxy configs for nginx and reloads nginx when containers are started and stopped.\nSee Automated Nginx Reverse Proxy for Docker for why you might want to use this.\nUsage\nTo run it:\n$ docker run -d -p 80:80 -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n\nThen start any containers you want proxied with an env var VIRTUAL_HOST=subdomain.youdomain.com\n$ docker run -e VIRTUAL_HOST=foo.bar.com  ...\n\nThe containers being proxied must expose the port to be proxied, either by using the EXPOSE directive in their Dockerfile or by using the --expose flag to docker run or docker create and be in the same network. By default, if you don't pass the --net flag when your nginx-proxy container is created, it will only be attached to the default bridge network. This means that it will not be able to connect to containers on networks other than bridge.\nProvided your DNS is setup to forward foo.bar.com to the host running nginx-proxy, the request will be routed to a container with the VIRTUAL_HOST env var set.\nImage variants\nThe nginx-proxy images are available in two flavors.\njwilder\/nginx-proxy:latest\nThis image uses the debian:jessie based nginx image.\n$ docker pull jwilder\/nginx-proxy:latest\n\njwilder\/nginx-proxy:alpine\nThis image is based on the nginx:alpine image. Use this image to fully support HTTP\/2 (including ALPN required by recent Chrome versions). A valid certificate is required as well (see eg. below \"SSL Support using letsencrypt\" for more info).\n$ docker pull jwilder\/nginx-proxy:alpine\n\nDocker Compose\nversion: '2'\n\nservices:\n  nginx-proxy:\n    image: jwilder\/nginx-proxy\n    ports:\n      - \"80:80\"\n    volumes:\n      - \/var\/run\/docker.sock:\/tmp\/docker.sock:ro\n\n  whoami:\n    image: jwilder\/whoami\n    environment:\n      - VIRTUAL_HOST=whoami.local\n$ docker-compose up\n$ curl -H \"Host: whoami.local\" localhost\nI'm 5b129ab83266\nIPv6 support\nYou can activate the IPv6 support for the nginx-proxy container by passing the value true to the ENABLE_IPV6 environment variable:\n$ docker run -d -p 80:80 -e ENABLE_IPV6=true -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n\nMultiple Ports\nIf your container exposes multiple ports, nginx-proxy will default to the service running on port 80.  If you need to specify a different port, you can set a VIRTUAL_PORT env var to select a different one.  If your container only exposes one port and it has a VIRTUAL_HOST env var set, that port will be selected.\nMultiple Hosts\nIf you need to support multiple virtual hosts for a container, you can separate each entry with commas.  For example, foo.bar.com,baz.bar.com,bar.com and each host will be setup the same.\nWildcard Hosts\nYou can also use wildcards at the beginning and the end of host name, like *.bar.com or foo.bar.*. Or even a regular expression, which can be very useful in conjunction with a wildcard DNS service like xip.io, using ~^foo\\.bar\\..*\\.xip\\.io will match foo.bar.127.0.0.1.xip.io, foo.bar.10.0.2.2.xip.io and all other given IPs. More information about this topic can be found in the nginx documentation about server_names.\nMultiple Networks\nWith the addition of overlay networking in Docker 1.9, your nginx-proxy container may need to connect to backend containers on multiple networks. By default, if you don't pass the --net flag when your nginx-proxy container is created, it will only be attached to the default bridge network. This means that it will not be able to connect to containers on networks other than bridge.\nIf you want your nginx-proxy container to be attached to a different network, you must pass the --net=my-network option in your docker create or docker run command. At the time of this writing, only a single network can be specified at container creation time. To attach to other networks, you can use the docker network connect command after your container is created:\n$ docker run -d -p 80:80 -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro \\\n    --name my-nginx-proxy --net my-network jwilder\/nginx-proxy\n$ docker network connect my-other-network my-nginx-proxy\nIn this example, the my-nginx-proxy container will be connected to my-network and my-other-network and will be able to proxy to other containers attached to those networks.\nInternet vs. Local Network Access\nIf you allow traffic from the public internet to access your nginx-proxy container, you may want to restrict some containers to the internal network only, so they cannot be accessed from the public internet.  On containers that should be restricted to the internal network, you should set the environment variable NETWORK_ACCESS=internal.  By default, the internal network is defined as 127.0.0.0\/8, 10.0.0.0\/8, 172.16.0.0\/12, 192.168.0.0\/16.  To change the list of networks considered internal, mount a file on the nginx-proxy at \/etc\/nginx\/network_internal.conf with these contents, edited to suit your needs:\n# These networks are considered \"internal\"\nallow 127.0.0.0\/8;\nallow 10.0.0.0\/8;\nallow 192.168.0.0\/16;\nallow 172.16.0.0\/12;\n\n# Traffic from all other networks will be rejected\ndeny all;\n\nWhen internal-only access is enabled, external clients with be denied with an HTTP 403 Forbidden\n\nIf there is a load-balancer \/ reverse proxy in front of nginx-proxy that hides the client IP (example: AWS Application\/Elastic Load Balancer), you will need to use the nginx realip module (already installed) to extract the client's IP from the HTTP request headers.  Please see the nginx realip module configuration for more details.  This configuration can be added to a new config file and mounted in \/etc\/nginx\/conf.d\/.\n\nSSL Backends\nIf you would like the reverse proxy to connect to your backend using HTTPS instead of HTTP, set VIRTUAL_PROTO=https on the backend container.\n\nNote: If you use VIRTUAL_PROTO=https and your backend container exposes port 80 and 443, nginx-proxy will use HTTPS on port 80.  This is almost certainly not what you want, so you should also include VIRTUAL_PORT=443.\n\nuWSGI Backends\nIf you would like to connect to uWSGI backend, set VIRTUAL_PROTO=uwsgi on the\nbackend container. Your backend container should then listen on a port rather\nthan a socket and expose that port.\nFastCGI Backends\nIf you would like to connect to FastCGI backend, set VIRTUAL_PROTO=fastcgi on the\nbackend container. Your backend container should then listen on a port rather\nthan a socket and expose that port.\nFastCGI File Root Directory\nIf you use fastcgi,you can set VIRTUAL_ROOT=xxx  for your root directory\nDefault Host\nTo set the default host for nginx use the env var DEFAULT_HOST=foo.bar.com for example\n$ docker run -d -p 80:80 -e DEFAULT_HOST=foo.bar.com -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n\nSeparate Containers\nnginx-proxy can also be run as two separate containers using the jwilder\/docker-gen\nimage and the official nginx image.\nYou may want to do this to prevent having the docker socket bound to a publicly exposed container service.\nYou can demo this pattern with docker-compose:\n$ docker-compose --file docker-compose-separate-containers.yml up\n$ curl -H \"Host: whoami.local\" localhost\nI'm 5b129ab83266\nTo run nginx proxy as a separate container you'll need to have nginx.tmpl on your host system.\nFirst start nginx with a volume:\n$ docker run -d -p 80:80 --name nginx -v \/tmp\/nginx:\/etc\/nginx\/conf.d -t nginx\n\nThen start the docker-gen container with the shared volume and template:\n$ docker run --volumes-from nginx \\\n    -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro \\\n    -v $(pwd):\/etc\/docker-gen\/templates \\\n    -t jwilder\/docker-gen -notify-sighup nginx -watch \/etc\/docker-gen\/templates\/nginx.tmpl \/etc\/nginx\/conf.d\/default.conf\n\nFinally, start your containers with VIRTUAL_HOST environment variables.\n$ docker run -e VIRTUAL_HOST=foo.bar.com  ...\n\nSSL Support using letsencrypt\nletsencrypt-nginx-proxy-companion is a lightweight companion container for the nginx-proxy. It allows the creation\/renewal of Let's Encrypt certificates automatically.\nSet DHPARAM_GENERATION environment variable to false to disabled Diffie-Hellman parameters completely. This will also ignore auto-generation made by nginx-proxy.\nThe default value is true\n $ docker run -e DHPARAM_GENERATION=false ....\n\nSSL Support\nSSL is supported using single host, wildcard and SNI certificates using naming conventions for\ncertificates or optionally specifying a cert name (for SNI) as an environment variable.\nTo enable SSL:\n$ docker run -d -p 80:80 -p 443:443 -v \/path\/to\/certs:\/etc\/nginx\/certs -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n\nThe contents of \/path\/to\/certs should contain the certificates and private keys for any virtual\nhosts in use.  The certificate and keys should be named after the virtual host with a .crt and\n.key extension.  For example, a container with VIRTUAL_HOST=foo.bar.com should have a\nfoo.bar.com.crt and foo.bar.com.key file in the certs directory.\nIf you are running the container in a virtualized environment (Hyper-V, VirtualBox, etc...),\n\/path\/to\/certs must exist in that environment or be made accessible to that environment.\nBy default, Docker is not able to mount directories on the host machine to containers running in a virtual machine.\nDiffie-Hellman Groups\nDiffie-Hellman groups are enabled by default, with a pregenerated key in \/etc\/nginx\/dhparam\/dhparam.pem.\nYou can mount a different dhparam.pem file at that location to override the default cert.\nTo use custom dhparam.pem files per-virtual-host, the files should be named after the virtual host with a\ndhparam suffix and .pem extension. For example, a container with VIRTUAL_HOST=foo.bar.com\nshould have a foo.bar.com.dhparam.pem file in the \/etc\/nginx\/certs directory.\n\nNOTE: If you don't mount a dhparam.pem file at \/etc\/nginx\/dhparam\/dhparam.pem, one will be generated\nat startup.  Since it can take minutes to generate a new dhparam.pem, it is done at low priority in the\nbackground.  Once generation is complete, the dhparam.pem is saved on a persistent volume and nginx\nis reloaded.  This generation process only occurs the first time you start nginx-proxy.\n\n\nCOMPATIBILITY WARNING: The default generated dhparam.pem key is 2048 bits for A+ security.  Some\nolder clients (like Java 6 and 7) do not support DH keys with over 1024 bits.  In order to support these\nclients, you must either provide your own dhparam.pem, or tell nginx-proxy to generate a 1024-bit\nkey on startup by passing -e DHPARAM_BITS=1024.\n\nIn the separate container setup, no pregenerated key will be available and neither the\njwilder\/docker-gen image nor the offical\nnginx image will generate one. If you still want A+ security\nin a separate container setup, you'll have to generate a 2048 bits DH key file manually and mount it on the\nnginx container, at \/etc\/nginx\/dhparam\/dhparam.pem.\nWildcard Certificates\nWildcard certificates and keys should be named after the domain name with a .crt and .key extension.\nFor example VIRTUAL_HOST=foo.bar.com would use cert name bar.com.crt and bar.com.key.\nSNI\nIf your certificate(s) supports multiple domain names, you can start a container with CERT_NAME=<name>\nto identify the certificate to be used.  For example, a certificate for *.foo.com and *.bar.com\ncould be named shared.crt and shared.key.  A container running with VIRTUAL_HOST=foo.bar.com\nand CERT_NAME=shared will then use this shared cert.\nOCSP Stapling\nTo enable OCSP Stapling for a domain, nginx-proxy looks for a PEM certificate containing the trusted\nCA certificate chain at \/etc\/nginx\/certs\/<domain>.chain.pem, where <domain> is the domain name in\nthe VIRTUAL_HOST directive.  The format of this file is a concatenation of the public PEM CA\ncertificates starting with the intermediate CA most near the SSL certificate, down to the root CA.  This is\noften referred to as the \"SSL Certificate Chain\".  If found, this filename is passed to the NGINX\nssl_trusted_certificate directive\nand OCSP Stapling is enabled.\nHow SSL Support Works\nThe default SSL cipher configuration is based on the Mozilla intermediate profile version 5.0 which\nshould provide compatibility with clients back to Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7,\nJava 8u31, OpenSSL 1.0.1, Opera 20, and Safari 9.  Note that the DES-based TLS ciphers were removed for security.\nThe configuration also enables HSTS, PFS, OCSP stapling and SSL session caches.  Currently TLS 1.2 and 1.3\nare supported.\nIf you don't require backward compatibility, you can use the Mozilla modern profile\nprofile instead by including the environment variable SSL_POLICY=Mozilla-Modern to the nginx-proxy container or to your container.\nThis profile is compatible with clients back to Firefox 63, Android 10.0, Chrome 70, Edge 75, Java 11,\nOpenSSL 1.1.1, Opera 57, and Safari 12.1.  Note that this profile is not compatible with any version of Internet Explorer.\nOther policies available through the SSL_POLICY environment variable are Mozilla-Old\nand the AWS ELB Security Policies\nAWS-TLS-1-2-2017-01, AWS-TLS-1-1-2017-01, AWS-2016-08, AWS-2015-05, AWS-2015-03 and AWS-2015-02.\nNote that the Mozilla-Old policy should use a 1024 bits DH key for compatibility but this container generates\na 2048 bits key. The Diffie-Hellman Groups section details different methods of bypassing\nthis, either globally or per virtual-host.\nThe default behavior for the proxy when port 80 and 443 are exposed is as follows:\n\nIf a container has a usable cert, port 80 will redirect to 443 for that container so that HTTPS\nis always preferred when available.\nIf the container does not have a usable cert, a 503 will be returned.\n\nNote that in the latter case, a browser may get an connection error as no certificate is available\nto establish a connection.  A self-signed or generic cert named default.crt and default.key\nwill allow a client browser to make a SSL connection (likely w\/ a warning) and subsequently receive\na 500.\nTo serve traffic in both SSL and non-SSL modes without redirecting to SSL, you can include the\nenvironment variable HTTPS_METHOD=noredirect (the default is HTTPS_METHOD=redirect).  You can also\ndisable the non-SSL site entirely with HTTPS_METHOD=nohttp, or disable the HTTPS site with\nHTTPS_METHOD=nohttps. HTTPS_METHOD can be specified on each container for which you want to\noverride the default behavior or on the proxy container to set it globally. If HTTPS_METHOD=noredirect is used, Strict Transport Security (HSTS)\nis disabled to prevent HTTPS users from being redirected by the client.  If you cannot get to the HTTP\nsite after changing this setting, your browser has probably cached the HSTS policy and is automatically\nredirecting you back to HTTPS.  You will need to clear your browser's HSTS cache or use an incognito\nwindow \/ different browser.\nBy default, HTTP Strict Transport Security (HSTS)\nis enabled with max-age=31536000 for HTTPS sites.  You can disable HSTS with the environment variable\nHSTS=off or use a custom HSTS configuration like HSTS=max-age=31536000; includeSubDomains; preload.\nWARNING: HSTS will force your users to visit the HTTPS version of your site for the max-age time -\neven if they type in http:\/\/ manually.  The only way to get to an HTTP site after receiving an HSTS\nresponse is to clear your browser's HSTS cache.\nBasic Authentication Support\nIn order to be able to secure your virtual host, you have to create a file named as its equivalent VIRTUAL_HOST variable on directory\n\/etc\/nginx\/htpasswd\/$VIRTUAL_HOST\n$ docker run -d -p 80:80 -p 443:443 \\\n    -v \/path\/to\/htpasswd:\/etc\/nginx\/htpasswd \\\n    -v \/path\/to\/certs:\/etc\/nginx\/certs \\\n    -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro \\\n    jwilder\/nginx-proxy\n\nYou'll need apache2-utils on the machine where you plan to create the htpasswd file. Follow these instructions\nCustom Nginx Configuration\nIf you need to configure Nginx beyond what is possible using environment variables, you can provide custom configuration files on either a proxy-wide or per-VIRTUAL_HOST basis.\nReplacing default proxy settings\nIf you want to replace the default proxy settings for the nginx container, add a configuration file at \/etc\/nginx\/proxy.conf. A file with the default settings would\nlook like this:\n# HTTP 1.1 support\nproxy_http_version 1.1;\nproxy_buffering off;\nproxy_set_header Host $http_host;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection $proxy_connection;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;\nproxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;\nproxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;\n\n# Mitigate httpoxy attack (see README for details)\nproxy_set_header Proxy \"\";\nNOTE: If you provide this file it will replace the defaults; you may want to check the .tmpl file to make sure you have all of the needed options.\nNOTE: The default configuration blocks the Proxy HTTP request header from being sent to downstream servers.  This prevents attackers from using the so-called httpoxy attack.  There is no legitimate reason for a client to send this header, and there are many vulnerable languages \/ platforms (CVE-2016-5385, CVE-2016-5386, CVE-2016-5387, CVE-2016-5388, CVE-2016-1000109, CVE-2016-1000110, CERT-VU#797896).\nProxy-wide\nTo add settings on a proxy-wide basis, add your configuration file under \/etc\/nginx\/conf.d using a name ending in .conf.\nThis can be done in a derived image by creating the file in a RUN command or by COPYing the file into conf.d:\nFROM jwilder\/nginx-proxy\nRUN { \\\n      echo 'server_tokens off;'; \\\n      echo 'client_max_body_size 100m;'; \\\n    } > \/etc\/nginx\/conf.d\/my_proxy.conf\nOr it can be done by mounting in your custom configuration in your docker run command:\n$ docker run -d -p 80:80 -p 443:443 -v \/path\/to\/my_proxy.conf:\/etc\/nginx\/conf.d\/my_proxy.conf:ro -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n\nPer-VIRTUAL_HOST\nTo add settings on a per-VIRTUAL_HOST basis, add your configuration file under \/etc\/nginx\/vhost.d. Unlike in the proxy-wide case, which allows multiple config files with any name ending in .conf, the per-VIRTUAL_HOST file must be named exactly after the VIRTUAL_HOST.\nIn order to allow virtual hosts to be dynamically configured as backends are added and removed, it makes the most sense to mount an external directory as \/etc\/nginx\/vhost.d as opposed to using derived images or mounting individual configuration files.\nFor example, if you have a virtual host named app.example.com, you could provide a custom configuration for that host as follows:\n$ docker run -d -p 80:80 -p 443:443 -v \/path\/to\/vhost.d:\/etc\/nginx\/vhost.d:ro -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n$ { echo 'server_tokens off;'; echo 'client_max_body_size 100m;'; } > \/path\/to\/vhost.d\/app.example.com\n\nIf you are using multiple hostnames for a single container (e.g. VIRTUAL_HOST=example.com,www.example.com), the virtual host configuration file must exist for each hostname. If you would like to use the same configuration for multiple virtual host names, you can use a symlink:\n$ { echo 'server_tokens off;'; echo 'client_max_body_size 100m;'; } > \/path\/to\/vhost.d\/www.example.com\n$ ln -s \/path\/to\/vhost.d\/www.example.com \/path\/to\/vhost.d\/example.com\n\nPer-VIRTUAL_HOST default configuration\nIf you want most of your virtual hosts to use a default single configuration and then override on a few specific ones, add those settings to the \/etc\/nginx\/vhost.d\/default file. This file\nwill be used on any virtual host which does not have a \/etc\/nginx\/vhost.d\/{VIRTUAL_HOST} file associated with it.\nPer-VIRTUAL_HOST location configuration\nTo add settings to the \"location\" block on a per-VIRTUAL_HOST basis, add your configuration file under \/etc\/nginx\/vhost.d\njust like the previous section except with the suffix _location.\nFor example, if you have a virtual host named app.example.com and you have configured a proxy_cache my-cache in another custom file, you could tell it to use a proxy cache as follows:\n$ docker run -d -p 80:80 -p 443:443 -v \/path\/to\/vhost.d:\/etc\/nginx\/vhost.d:ro -v \/var\/run\/docker.sock:\/tmp\/docker.sock:ro jwilder\/nginx-proxy\n$ { echo 'proxy_cache my-cache;'; echo 'proxy_cache_valid  200 302  60m;'; echo 'proxy_cache_valid  404 1m;' } > \/path\/to\/vhost.d\/app.example.com_location\n\nIf you are using multiple hostnames for a single container (e.g. VIRTUAL_HOST=example.com,www.example.com), the virtual host configuration file must exist for each hostname. If you would like to use the same configuration for multiple virtual host names, you can use a symlink:\n$ { echo 'proxy_cache my-cache;'; echo 'proxy_cache_valid  200 302  60m;'; echo 'proxy_cache_valid  404 1m;' } > \/path\/to\/vhost.d\/app.example.com_location\n$ ln -s \/path\/to\/vhost.d\/www.example.com \/path\/to\/vhost.d\/example.com\n\nPer-VIRTUAL_HOST location default configuration\nIf you want most of your virtual hosts to use a default single location block configuration and then override on a few specific ones, add those settings to the \/etc\/nginx\/vhost.d\/default_location file. This file\nwill be used on any virtual host which does not have a \/etc\/nginx\/vhost.d\/{VIRTUAL_HOST}_location file associated with it.\nContributing\nBefore submitting pull requests or issues, please check github to make sure an existing issue or pull request is not already open.\nRunning Tests Locally\nTo run tests, you need to prepare the docker image to test which must be tagged jwilder\/nginx-proxy:test:\ndocker build -t jwilder\/nginx-proxy:test .  # build the Debian variant image\n\nand call the test\/pytest.sh script.\nThen build the Alpine variant of the image:\ndocker build -f Dockerfile.alpine -t jwilder\/nginx-proxy:test .  # build the Alpline variant image\n\nand call the test\/pytest.sh script again.\nIf your system has the make command, you can automate those tasks by calling:\nmake test\n\nYou can learn more about how the test suite works and how to write new tests in the test\/README.md file.\nNeed help?\nIf you have questions on how to use the image, please ask them on the Q&A Group\n","91":"PySnooper - Never use print for debugging again\nPySnooper is a poor man's debugger.\nYou're trying to figure out why your Python code isn't doing what you think it should be doing. You'd love to use a full-fledged debugger with breakpoints and watches, but you can't be bothered to set one up right now.\nYou want to know which lines are running and which aren't, and what the values of the local variables are.\nMost people would use print lines, in strategic locations, some of them showing the values of variables.\nPySnooper lets you do the same, except instead of carefully crafting the right print lines, you just add one decorator line to the function you're interested in. You'll get a play-by-play log of your function, including which lines ran and   when, and exactly when local variables were changed.\nWhat makes PySnooper stand out from all other code intelligence tools? You can use it in your shitty, sprawling enterprise codebase without having to do any setup. Just slap the decorator on, as shown below, and redirect the output to a dedicated log file by specifying its path as the first argument.\nExample\nWe're writing a function that converts a number to binary, by returning a list of bits. Let's snoop on it by adding the @pysnooper.snoop() decorator:\nimport pysnooper\n\n@pysnooper.snoop()\ndef number_to_bits(number):\n    if number:\n        bits = []\n        while number:\n            number, remainder = divmod(number, 2)\n            bits.insert(0, remainder)\n        return bits\n    else:\n        return [0]\n\nnumber_to_bits(6)\nThe output to stderr is:\nSource path:... \/my_code\/foo.py\nStarting var:.. number = 6\n15:29:11.327032 call         4 def number_to_bits(number):\n15:29:11.327032 line         5     if number:\n15:29:11.327032 line         6         bits = []\nNew var:....... bits = []\n15:29:11.327032 line         7         while number:\n15:29:11.327032 line         8             number, remainder = divmod(number, 2)\nNew var:....... remainder = 0\nModified var:.. number = 3\n15:29:11.327032 line         9             bits.insert(0, remainder)\nModified var:.. bits = [0]\n15:29:11.327032 line         7         while number:\n15:29:11.327032 line         8             number, remainder = divmod(number, 2)\nModified var:.. number = 1\nModified var:.. remainder = 1\n15:29:11.327032 line         9             bits.insert(0, remainder)\nModified var:.. bits = [1, 0]\n15:29:11.327032 line         7         while number:\n15:29:11.327032 line         8             number, remainder = divmod(number, 2)\nModified var:.. number = 0\n15:29:11.327032 line         9             bits.insert(0, remainder)\nModified var:.. bits = [1, 1, 0]\n15:29:11.327032 line         7         while number:\n15:29:11.327032 line        10         return bits\n15:29:11.327032 return      10         return bits\nReturn value:.. [1, 1, 0]\nElapsed time: 00:00:00.000001\n\nOr if you don't want to trace an entire function, you can wrap the relevant part in a with block:\nimport pysnooper\nimport random\n\ndef foo():\n    lst = []\n    for i in range(10):\n        lst.append(random.randrange(1, 1000))\n\n    with pysnooper.snoop():\n        lower = min(lst)\n        upper = max(lst)\n        mid = (lower + upper) \/ 2\n        print(lower, mid, upper)\n\nfoo()\nwhich outputs something like:\nNew var:....... i = 9\nNew var:....... lst = [681, 267, 74, 832, 284, 678, ...]\n09:37:35.881721 line        10         lower = min(lst)\nNew var:....... lower = 74\n09:37:35.882137 line        11         upper = max(lst)\nNew var:....... upper = 832\n09:37:35.882304 line        12         mid = (lower + upper) \/ 2\n74 453.0 832\nNew var:....... mid = 453.0\n09:37:35.882486 line        13         print(lower, mid, upper)\nElapsed time: 00:00:00.000344\n\nFeatures\nIf stderr is not easily accessible for you, you can redirect the output to a file:\n@pysnooper.snoop('\/my\/log\/file.log')\nYou can also pass a stream or a callable instead, and they'll be used.\nSee values of some expressions that aren't local variables:\n@pysnooper.snoop(watch=('foo.bar', 'self.x[\"whatever\"]'))\nShow snoop lines for functions that your function calls:\n@pysnooper.snoop(depth=2)\nSee Advanced Usage for more options. <------\nInstallation with Pip\nThe best way to install PySnooper is with Pip:\n$ pip install pysnooper\nOther installation options\nConda with conda-forge channel:\n$ conda install -c conda-forge pysnooper\nArch Linux:\n$ yay -S python-pysnooper\nLicense\nCopyright (c) 2019 Ram Rachum and collaborators, released under the MIT license.\nI provide Development services in Python and Django and I give Python workshops to teach people\nPython and related topics.\nMedia Coverage\nHacker News thread\nand \/r\/Python Reddit thread (22 April 2019)\n","92":"\n\n\n\n\n\n\n\nLuigi is a Python (3.6, 3.7 tested) package that helps you build complex\npipelines of batch jobs. It handles dependency resolution, workflow management,\nvisualization, handling failures, command line integration, and much more.\n\nGetting Started\nRun pip install luigi to install the latest stable version from PyPI. Documentation for the latest release is hosted on readthedocs.\nRun pip install luigi[toml] to install Luigi with TOML-based configs support.\nFor the bleeding edge code, pip install\ngit+https:\/\/github.com\/spotify\/luigi.git. Bleeding edge documentation is also available.\n\nBackground\nThe purpose of Luigi is to address all the plumbing typically associated\nwith long-running batch processes. You want to chain many tasks,\nautomate them, and failures will happen. These tasks can be anything,\nbut are typically long running things like\nHadoop jobs, dumping data to\/from\ndatabases, running machine learning algorithms, or anything else.\nThere are other software packages that focus on lower level aspects of\ndata processing, like Hive,\nPig, or\nCascading. Luigi is not a framework to\nreplace these. Instead it helps you stitch many tasks together, where\neach task can be a Hive query,\na Hadoop job in Java,\na  Spark job in Scala or Python,\na Python snippet,\ndumping a table\nfrom a database, or anything else. It's easy to build up\nlong-running pipelines that comprise thousands of tasks and take days or\nweeks to complete. Luigi takes care of a lot of the workflow management\nso that you can focus on the tasks themselves and their dependencies.\nYou can build pretty much any task you want, but Luigi also comes with a\ntoolbox of several common task templates that you use. It includes\nsupport for running\nPython mapreduce jobs\nin Hadoop, as well as\nHive,\nand Pig,\njobs. It also comes with\nfile system abstractions for HDFS,\nand local files that ensures all file system operations are atomic. This\nis important because it means your data pipeline will not crash in a\nstate containing partial data.\n\nVisualiser page\nThe Luigi server comes with a web interface too, so you can search and filter\namong all your tasks.\n\n\n\n\nDependency graph example\nJust to give you an idea of what Luigi does, this is a screen shot from\nsomething we are running in production. Using Luigi's visualiser, we get\na nice visual overview of the dependency graph of the workflow. Each\nnode represents a task which has to be run. Green tasks are already\ncompleted whereas yellow tasks are yet to be run. Most of these tasks\nare Hadoop jobs, but there are also some things that run locally and\nbuild up data files.\n\n\n\n\nPhilosophy\nConceptually, Luigi is similar to GNU\nMake where you have certain tasks\nand these tasks in turn may have dependencies on other tasks. There are\nalso some similarities to Oozie\nand Azkaban. One major\ndifference is that Luigi is not just built specifically for Hadoop, and\nit's easy to extend it with other kinds of tasks.\nEverything in Luigi is in Python. Instead of XML configuration or\nsimilar external data files, the dependency graph is specified within\nPython. This makes it easy to build up complex dependency graphs of\ntasks, where the dependencies can involve date algebra or recursive\nreferences to other versions of the same task. However, the workflow can\ntrigger things not in Python, such as running\nPig scripts\nor scp'ing files.\n\nWho uses Luigi?\nWe use Luigi internally at Spotify to run\nthousands of tasks every day, organized in complex dependency graphs.\nMost of these tasks are Hadoop jobs. Luigi provides an infrastructure\nthat powers all kinds of stuff including recommendations, toplists, A\/B\ntest analysis, external reports, internal dashboards, etc.\nSince Luigi is open source and without any registration walls, the exact number\nof Luigi users is unknown. But based on the number of unique contributors, we\nexpect hundreds of enterprises to use it. Some users have written blog posts\nor held presentations about Luigi:\n\nSpotify (presentation, 2014)\nFoursquare (presentation, 2013)\nMortar Data (Datadog) (documentation \/ tutorial)\nStripe (presentation, 2014)\nBuffer (blog, 2014)\nSeatGeek (blog, 2015)\nTreasure Data (blog, 2015)\nGrowth Intelligence (presentation, 2015)\nAdRoll (blog, 2015)\n17zuoye (presentation, 2015)\nCustobar (presentation, 2016)\nBlendle (presentation)\nTrustYou (presentation, 2015)\nGroupon \/ OrderUp (alternative implementation)\nRed Hat - Marketing Operations (blog, 2017)\nGetNinjas (blog, 2017)\nvoyages-sncf.com (presentation, 2017)\nOpen Targets (blog, 2017)\nLeipzig University Library (presentation, 2016) \/ (project)\nSynetiq (presentation, 2017)\nGlossier (blog, 2018)\nData Revenue (blog, 2018)\nUppsala University (tutorial)   \/ (presentation, 2015) \/ (slides, 2015) \/ (poster, 2015) \/ (paper, 2016) \/ (project)\nGIPHY (blog, 2019)\nxtream (blog, 2019)\nCIAN (presentation, 2019)\n\nSome more companies are using Luigi but haven't had a chance yet to write about it:\n\nSchibsted\nenbrite.ly\nDow Jones \/ The Wall Street Journal\nHotels.com\nNewsela\nSquarespace\nOAO\nGrovo\nWeebly\nDeloitte\nStacktome\nLINX+Neemu+Chaordic\nFoxberry\nOkko\nISVWorld\nBig Data\nMovio\nBonnier News\nStarsky Robotics\nBaseTIS\nHopper\nVOYAGE GROUP\/Zucks\nTextpert\nTracktics\nWhizar\nxtream\nSkyscanner\nJodel\nMekar\nM3\n\nWe're more than happy to have your company added here. Just send a PR on GitHub.\n\nExternal links\n\nMailing List for discussions and asking questions. (Google Groups)\nReleases (PyPI)\nSource code (GitHub)\nHubot Integration plugin for Slack, Hipchat, etc (GitHub)\n\n\nAuthors\nLuigi was built at Spotify, mainly by\nErik Bernhardsson and\nElias Freider.\nMany other people\nhave contributed since open sourcing in late 2012.\nArash Rouhani is currently the chief\nmaintainer of Luigi.\n","93":"\u6559\u4f60\u7528 Python \u6765\u73a9\u5fae\u4fe1\u8df3\u4e00\u8df3\n  \n\n\u6e38\u620f\u6a21\u5f0f\n\n2017 \u5e74 12 \u6708 28 \u65e5\u4e0b\u5348\uff0c\u5fae\u4fe1\u53d1\u5e03\u4e86 6.6.1 \u7248\u672c\uff0c\u52a0\u5165\u4e86\u300c\u5c0f\u6e38\u620f\u300d\u529f\u80fd\uff0c\u5e76\u63d0\u4f9b\u4e86\u5b98\u65b9 DEMO\u300c\u8df3\u4e00\u8df3\u300d\u3002\u8fd9\u662f\u4e00\u4e2a 2.5D \u63d2\u753b\u98ce\u683c\u7684\u76ca\u667a\u6e38\u620f\uff0c\u73a9\u5bb6\u53ef\u4ee5\u901a\u8fc7\u6309\u538b\u5c4f\u5e55\u65f6\u95f4\u7684\u957f\u77ed\u6765\u63a7\u5236\u8fd9\u4e2a\u300c\u5c0f\u4eba\u300d\u8df3\u8dc3\u7684\u8ddd\u79bb\u3002\u5206\u6570\u8d8a\u9ad8\uff0c\u90a3\u4e48\u5728\u597d\u53cb\u6392\u884c\u699c\u66f4\u52a0\u9760\u524d\u3002\u901a\u8fc7 Python \u811a\u672c\u81ea\u52a8\u8fd0\u884c\uff0c\u8ba9\u4f60\u8f7b\u677e\u9738\u699c\u3002\n\n\n\u53ef\u80fd\u521a\u5f00\u59cb\u4e0a\u624b\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u65f6\u95f4\u8ddd\u79bb\u4e4b\u95f4\u7684\u5173\u7cfb\u628a\u63e1\u4e0d\u6070\u5f53\uff0c\u53ea\u80fd\u8df3\u51fa\u51e0\u4e2a\u5c31\u6389\u5230\u4e86\u53f0\u5b50\u4e0b\u9762\u3002\u5982\u679c\u80fd\u5229\u7528\u56fe\u50cf\u8bc6\u522b\u7cbe\u786e\u6d4b\u91cf\u51fa\u8d77\u59cb\u548c\u76ee\u6807\u70b9\u4e4b\u95f4\u6d4b\u8ddd\u79bb\uff0c\u5c31\u53ef\u4ee5\u4f30\u8ba1\u6309\u538b\u7684\u65f6\u95f4\u6765\u7cbe\u786e\u8df3\u8dc3\u3002\n\u539f\u7406\u8bf4\u660e\n\u7531\u4e8e\u5fae\u4fe1\u68c0\u6d4b\u975e\u5e38\u4e25\u5389\uff0c\u8fd9\u91cc\u7684\u9632\u7981\u4ee3\u7801\u53ef\u80fd\u5df2\u7ecf\u4e0d\u8d77\u4f5c\u7528\uff0c\u4e3b\u8981\u4f9b\u5b66\u4e60\u7528\u9014\n\n\n\u5c06\u624b\u673a\u70b9\u51fb\u5230\u300a\u8df3\u4e00\u8df3\u300b\u5c0f\u7a0b\u5e8f\u754c\u9762\n\n\n\u7528 ADB \u5de5\u5177\u83b7\u53d6\u5f53\u524d\u624b\u673a\u622a\u56fe\uff0c\u5e76\u7528 ADB \u5c06\u622a\u56fe pull \u4e0a\u6765\n\n\nadb shell screencap -p \/sdcard\/autojump.png\nadb pull \/sdcard\/autojump.png .\n\n\u8ba1\u7b97\u6309\u538b\u65f6\u95f4\n\n\n\u624b\u52a8\u7248\uff1a\u7528 Matplotlib \u663e\u793a\u622a\u56fe\uff0c\u7528\u9f20\u6807\u5148\u70b9\u51fb\u8d77\u59cb\u70b9\u4f4d\u7f6e\uff0c\u7136\u540e\u70b9\u51fb\u76ee\u6807\u4f4d\u7f6e\uff0c\u8ba1\u7b97\u50cf\u7d20\u8ddd\u79bb\uff1b\n\u81ea\u52a8\u7248\uff1a\u9760\u68cb\u5b50\u7684\u989c\u8272\u6765\u8bc6\u522b\u68cb\u5b50\uff0c\u9760\u5e95\u8272\u548c\u65b9\u5757\u7684\u8272\u5dee\u6765\u8bc6\u522b\u68cb\u76d8\uff1b\n\n\n\u7528 ADB \u5de5\u5177\u70b9\u51fb\u5c4f\u5e55\u84c4\u529b\u4e00\u8df3\n\nadb shell input swipe x y x y time(ms)\n\u4f7f\u7528\u6559\u7a0b\n\u76f8\u5173\u8f6f\u4ef6\u5de5\u5177\u5b89\u88c5\u548c\u4f7f\u7528\u6b65\u9aa4\u8bf7\u53c2\u8003 Android \u548c iOS \u64cd\u4f5c\u6b65\u9aa4\n\u83b7\u53d6\u6e90\u7801\n- git clone https:\/\/github.com\/wangshub\/wechat_jump_game.git\n\n\n\u975e\u5e38\u63a8\u8350\u4f7f\u7528Python3\uff0c\u907f\u514d\u7f16\u7801\u53caimport\u95ee\u9898\nPR \u8981\u6c42\n\u8bf7\u9009\u62e9 merge \u8fdb master \u5206\u652f\uff0c\u5e76\u4e14\u6807\u9898\u5199\u4e0a\u7b80\u77ed\u63cf\u8ff0\uff0c\u4f8b\u5b50\n[\u4f18\u5316] \u4f7f\u7528PEP8\u4f18\u5316\u4ee3\u7801\n\u7248\u672c\u8bf4\u660e\n\nmaster \u5206\u652f\uff1a\u7a33\u5b9a\u7248\u672c\uff0c\u5df2\u901a\u8fc7\u6d4b\u8bd5\ndev \u5206\u652f\uff1a\u5f00\u53d1\u7248\u672c\uff0c\u5305\u542b\u4e00\u4e9b\u8f83\u7a33\u5b9a\u7684\u65b0\u529f\u80fd\uff0c\u7d2f\u8ba1\u591a\u4e2a\u529f\u80fd\u5e76\u6d4b\u8bd5\u901a\u8fc7\u540e\u5408\u5e76\u81f3 prod \u5206\u652f\n\u5176\u4ed6\u5206\u652f\uff1a\u529f\u80fd\u5f00\u53d1 (feature) \u6216\u95ee\u9898\u4fee\u590d (bugfix)\uff0c\u5c5e\u4e8e\u6700\u65b0\u5c1d\u9c9c\u7248\u672c\uff0c\u53ef\u80fd\u5904\u4e8e\u5f00\u53d1\u4e2d\u7684\u72b6\u6001\uff0c\u57fa\u672c\u5b8c\u6210\u540e\u5408\u5e76\u81f3 dev \u5206\u652f\n\nFAQ\n\n\u8be6\u89c1 Wiki-FAQ\n\n\u66f4\u65b0\u65e5\u5fd7\n\n\u8be6\u89c1 changelog\n\n\u5f00\u53d1\u8005\u5217\u8868\n\n\u8be6\u89c1 contributors\n\n\u4ea4\u6d41\n\n\n314659953 (1000 \u4eba)\n\n\n176740763 (500 \u4eba)\n\n\n\u6216\u8005\u5173\u6ce8\u6211\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u540e\u53f0\u7559\u8a00\n\n\n\n","94":"\n\n\n\n\n\nRay provides a simple, universal API for building distributed applications.\nRay is packaged with the following libraries for accelerating machine learning workloads:\n\nTune: Scalable Hyperparameter Tuning\nRLlib: Scalable Reinforcement Learning\nRaySGD: Distributed Training Wrappers\nRay Serve: Scalable and Programmable Serving\n\nThere are also many community integrations with Ray, including Dask, MARS, Modin, Horovod, Hugging Face, Scikit-learn, and others. Check out the full list of Ray distributed libraries here.\nInstall Ray with: pip install ray. For nightly wheels, see the\nInstallation page.\n\nQuick Start\nExecute Python functions in parallel.\nimport ray\nray.init()\n\n@ray.remote\ndef f(x):\n    return x * x\n\nfutures = [f.remote(i) for i in range(4)]\nprint(ray.get(futures))\nTo use Ray's actor model:\nimport ray\nray.init()\n\n@ray.remote\nclass Counter(object):\n    def __init__(self):\n        self.n = 0\n\n    def increment(self):\n        self.n += 1\n\n    def read(self):\n        return self.n\n\ncounters = [Counter.remote() for i in range(4)]\n[c.increment.remote() for c in counters]\nfutures = [c.read.remote() for c in counters]\nprint(ray.get(futures))\nRay programs can run on a single machine, and can also seamlessly scale to large clusters. To execute the above Ray script in the cloud, just download this configuration file, and run:\nray submit [CLUSTER.YAML] example.py --start\nRead more about launching clusters.\n\nTune Quick Start\n\nTune is a library for hyperparameter tuning at any scale.\n\nLaunch a multi-node distributed hyperparameter sweep in less than 10 lines of code.\nSupports any deep learning framework, including PyTorch, PyTorch Lightning, TensorFlow, and Keras.\nVisualize results with TensorBoard.\nChoose among scalable SOTA algorithms such as Population Based Training (PBT), Vizier's Median Stopping Rule, HyperBand\/ASHA.\nTune integrates with many optimization libraries such as Facebook Ax, HyperOpt, and Bayesian Optimization and enables you to scale them transparently.\n\nTo run this example, you will need to install the following:\n$ pip install \"ray[tune]\"\nThis example runs a parallel grid search to optimize an example objective function.\nfrom ray import tune\n\n\ndef objective(step, alpha, beta):\n    return (0.1 + alpha * step \/ 100)**(-1) + beta * 0.1\n\n\ndef training_function(config):\n    # Hyperparameters\n    alpha, beta = config[\"alpha\"], config[\"beta\"]\n    for step in range(10):\n        # Iterative training function - can be any arbitrary training procedure.\n        intermediate_score = objective(step, alpha, beta)\n        # Feed the score back back to Tune.\n        tune.report(mean_loss=intermediate_score)\n\n\nanalysis = tune.run(\n    training_function,\n    config={\n        \"alpha\": tune.grid_search([0.001, 0.01, 0.1]),\n        \"beta\": tune.choice([1, 2, 3])\n    })\n\nprint(\"Best config: \", analysis.get_best_config(metric=\"mean_loss\"))\n\n# Get a dataframe for analyzing trial results.\ndf = analysis.results_df\nIf TensorBoard is installed, automatically visualize all trial results:\ntensorboard --logdir ~\/ray_results\n\nRLlib Quick Start\n\nRLlib is an open-source library for reinforcement learning built on top of Ray that offers both high scalability and a unified API for a variety of applications.\npip install tensorflow  # or tensorflow-gpu\npip install \"ray[rllib]\"  # also recommended: ray[debug]\nimport gym\nfrom gym.spaces import Discrete, Box\nfrom ray import tune\n\nclass SimpleCorridor(gym.Env):\n    def __init__(self, config):\n        self.end_pos = config[\"corridor_length\"]\n        self.cur_pos = 0\n        self.action_space = Discrete(2)\n        self.observation_space = Box(0.0, self.end_pos, shape=(1, ))\n\n    def reset(self):\n        self.cur_pos = 0\n        return [self.cur_pos]\n\n    def step(self, action):\n        if action == 0 and self.cur_pos > 0:\n            self.cur_pos -= 1\n        elif action == 1:\n            self.cur_pos += 1\n        done = self.cur_pos >= self.end_pos\n        return [self.cur_pos], 1 if done else 0, done, {}\n\ntune.run(\n    \"PPO\",\n    config={\n        \"env\": SimpleCorridor,\n        \"num_workers\": 4,\n        \"env_config\": {\"corridor_length\": 5}})\n\nRay Serve Quick Start\n\nRay Serve is a scalable model-serving library built on Ray. It is:\n\nFramework Agnostic: Use the same toolkit to serve everything from deep\nlearning models built with frameworks like PyTorch or Tensorflow & Keras\nto Scikit-Learn models or arbitrary business logic.\nPython First: Configure your model serving with pure Python code - no more\nYAMLs or JSON configs.\nPerformance Oriented: Turn on batching, pipelining, and GPU acceleration to\nincrease the throughput of your model.\nComposition Native: Allow you to create \"model pipelines\" by composing multiple\nmodels together to drive a single prediction.\nHorizontally Scalable: Serve can linearly scale as you add more machines. Enable\nyour ML-powered service to handle growing traffic.\n\nTo run this example, you will need to install the following:\n$ pip install scikit-learn\n$ pip install \"ray[serve]\"\nThis example runs serves a scikit-learn gradient boosting classifier.\nfrom ray import serve\nimport pickle\nimport requests\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n# Train model\niris_dataset = load_iris()\nmodel = GradientBoostingClassifier()\nmodel.fit(iris_dataset[\"data\"], iris_dataset[\"target\"])\n\n# Define Ray Serve model,\nclass BoostingModel:\n    def __init__(self):\n        self.model = model\n        self.label_list = iris_dataset[\"target_names\"].tolist()\n\n    def __call__(self, flask_request):\n        payload = flask_request.json[\"vector\"]\n        print(\"Worker: received flask request with data\", payload)\n\n        prediction = self.model.predict([payload])[0]\n        human_name = self.label_list[prediction]\n        return {\"result\": human_name}\n\n\n# Deploy model\nclient = serve.start()\nclient.create_backend(\"iris:v1\", BoostingModel)\nclient.create_endpoint(\"iris_classifier\", backend=\"iris:v1\", route=\"\/iris\")\n\n# Query it!\nsample_request_input = {\"vector\": [1.2, 1.0, 1.1, 0.9]}\nresponse = requests.get(\"http:\/\/localhost:8000\/iris\", json=sample_request_input)\nprint(response.text)\n# Result:\n# {\n#  \"result\": \"versicolor\"\n# }\n\nMore Information\n\nDocumentation\nTutorial\nBlog\nRay 1.0 Architecture whitepaper (new)\nRay Design Patterns (new)\nRLlib paper\nTune paper\n\nOlder documents:\n\nRay paper\nRay HotOS paper\nBlog (old)\n\n\nGetting Involved\n\nCommunity Slack: Join our Slack workspace.\nGitHub Discussions: For discussions about development, questions about usage, and feature requests.\nGitHub Issues: For reporting bugs.\nTwitter: Follow updates on Twitter.\nMeetup Group: Join our meetup group.\nStackOverflow: For questions about how to use Ray.\n\n","95":"\nDetectron2 is Facebook AI Research's next generation software system\nthat implements state-of-the-art object detection algorithms.\nIt is a ground-up rewrite of the previous version,\nDetectron,\nand it originates from maskrcnn-benchmark.\n\n\n\nWhat's New\n\nIt is powered by the PyTorch deep learning framework.\nIncludes more features such as panoptic segmentation, Densepose, Cascade R-CNN, rotated bounding boxes, PointRend,\nDeepLab, etc.\nCan be used as a library to support different projects on top of it.\nWe'll open source more research projects in this way.\nIt trains much faster.\nModels can be exported to torchscript format or caffe2 format for deployment.\n\nSee our blog post\nto see more demos and learn about detectron2.\nInstallation\nSee INSTALL.md.\nQuick Start\nSee GETTING_STARTED.md,\nor the Colab Notebook.\nLearn more at our documentation.\nAnd see projects\/ for some projects that are built on top of detectron2.\nModel Zoo and Baselines\nWe provide a large set of baseline results and trained models available for download in the Detectron2 Model Zoo.\nLicense\nDetectron2 is released under the Apache 2.0 license.\nCiting Detectron2\nIf you use Detectron2 in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.\n@misc{wu2019detectron2,\n  author =       {Yuxin Wu and Alexander Kirillov and Francisco Massa and\n                  Wan-Yen Lo and Ross Girshick},\n  title =        {Detectron2},\n  howpublished = {\\url{https:\/\/github.com\/facebookresearch\/detectron2}},\n  year =         {2019}\n}\n","96":"Status: Archive (code is provided as-is, no updates expected)\ngpt-2\nCode and models from the paper \"Language Models are Unsupervised Multitask Learners\".\nYou can read about GPT-2 and its staged release in our original blog post, 6 month follow-up post, and final post.\nWe have also released a dataset for researchers to study their behaviors.\n* Note that our original parameter counts were wrong due to an error (in our previous blog posts and paper).  Thus you may have seen small referred to as 117M and medium referred to as 345M.\nUsage\nThis repository is meant to be a starting point for researchers and engineers to experiment with GPT-2.\nFor basic information, see our model card.\nSome caveats\n\nGPT-2 models' robustness and worst case behaviors are not well-understood.  As with any machine-learned model, carefully evaluate GPT-2 for your use case, especially if used without fine-tuning or in safety-critical applications where reliability is important.\nThe dataset our GPT-2 models were trained on contains many texts with biases and factual inaccuracies, and thus GPT-2 models are likely to be biased and inaccurate as well.\nTo avoid having samples mistaken as human-written, we recommend clearly labeling samples as synthetic before wide dissemination.  Our models are often incoherent or inaccurate in subtle ways, which takes more than a quick read for a human to notice.\n\nWork with us\nPlease let us know if you\u2019re doing interesting research with or working on applications of GPT-2!  We\u2019re especially interested in hearing from and potentially working with those who are studying\n\nPotential malicious use cases and defenses against them (e.g. the detectability of synthetic text)\nThe extent of problematic content (e.g. bias) being baked into the models and effective mitigations\n\nDevelopment\nSee DEVELOPERS.md\nContributors\nSee CONTRIBUTORS.md\nCitation\nPlease use the following bibtex entry:\n@article{radford2019language,\n  title={Language Models are Unsupervised Multitask Learners},\n  author={Radford, Alec and Wu, Jeff and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya},\n  year={2019}\n}\n\nFuture work\nWe may release code for evaluating the models on various benchmarks.\nWe are still considering release of the larger models.\nLicense\nModified MIT\n","97":"\n\nCycleGAN and pix2pix in PyTorch\nNew:  Please check out contrastive-unpaired-translation (CUT), our new unpaired image-to-image translation model that enables fast and memory-efficient training.\nWe provide PyTorch implementations for both unpaired and paired image-to-image translation.\nThe code was written by Jun-Yan Zhu and Taesung Park, and supported by Tongzhou Wang.\nThis PyTorch implementation produces results comparable to or better than our original Torch software. If you would like to reproduce the same results as in the papers, check out the original CycleGAN Torch and pix2pix Torch code in Lua\/Torch.\nNote: The current software works well with PyTorch 1.4. Check out the older branch that supports PyTorch 0.1-0.3.\nYou may find useful information in training\/test tips and frequently asked questions. To implement custom models and datasets, check out our templates. To help users better understand and adapt our codebase, we provide an overview of the code structure of this repository.\nCycleGAN: Project |  Paper |  Torch |\nTensorflow Core Tutorial | PyTorch Colab\n\nPix2pix:  Project |  Paper |  Torch |\nTensorflow Core Tutorial | PyTorch Colab\n\nEdgesCats Demo | pix2pix-tensorflow | by Christopher Hesse\n\nIf you use this code for your research, please cite:\nUnpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks.\nJun-Yan Zhu*,  Taesung Park*, Phillip Isola, Alexei A. Efros. In ICCV 2017. (* equal contributions) [Bibtex]\nImage-to-Image Translation with Conditional Adversarial Networks.\nPhillip Isola, Jun-Yan Zhu, Tinghui Zhou, Alexei A. Efros. In CVPR 2017. [Bibtex]\nTalks and Course\npix2pix slides: keynote | pdf,\nCycleGAN slides: pptx | pdf\nCycleGAN course assignment code and handout designed by Prof. Roger Grosse for CSC321 \"Intro to Neural Networks and Machine Learning\" at University of Toronto. Please contact the instructor if you would like to adopt it in your course.\nColab Notebook\nTensorFlow Core CycleGAN Tutorial: Google Colab | Code\nTensorFlow Core pix2pix Tutorial: Google Colab | Code\nPyTorch Colab notebook: CycleGAN and pix2pix\nZeroCostDL4Mic Colab notebook: CycleGAN and pix2pix\nOther implementations\nCycleGAN\n [Tensorflow] (by Harry Yang),\n[Tensorflow] (by Archit Rathore),\n[Tensorflow] (by Van Huy),\n[Tensorflow] (by Xiaowei Hu),\n [Tensorflow-simple] (by Zhenliang He),\n [TensorLayer1.0] (by luoxier),\n [TensorLayer2.0] (by zsdonghao),\n[Chainer] (by Yanghua Jin),\n[Minimal PyTorch] (by yunjey),\n[Mxnet] (by Ldpe2G),\n[lasagne\/Keras] (by tjwei),\n[Keras] (by Simon Karlsson),\n[OneFlow] (by Ldpe2G)\n\npix2pix\n [Tensorflow] (by Christopher Hesse),\n[Tensorflow] (by Eyy\u00fcb Sariu),\n [Tensorflow (face2face)] (by Dat Tran),\n [Tensorflow (film)] (by Arthur Juliani),\n[Tensorflow (zi2zi)] (by Yuchen Tian),\n[Chainer] (by mattya),\n[tf\/torch\/keras\/lasagne] (by tjwei),\n[Pytorch] (by taey16)\n\nPrerequisites\n\nLinux or macOS\nPython 3\nCPU or NVIDIA GPU + CUDA CuDNN\n\nGetting Started\nInstallation\n\nClone this repo:\n\ngit clone https:\/\/github.com\/junyanz\/pytorch-CycleGAN-and-pix2pix\ncd pytorch-CycleGAN-and-pix2pix\n\nInstall PyTorch and 0.4+ and other dependencies (e.g., torchvision, visdom and dominate).\n\nFor pip users, please type the command pip install -r requirements.txt.\nFor Conda users, you can create a new Conda environment using conda env create -f environment.yml.\nFor Docker users, we provide the pre-built Docker image and Dockerfile. Please refer to our Docker page.\nFor Repl users, please click .\n\n\n\nCycleGAN train\/test\n\nDownload a CycleGAN dataset (e.g. maps):\n\nbash .\/datasets\/download_cyclegan_dataset.sh maps\n\nTo view training results and loss plots, run python -m visdom.server and click the URL http:\/\/localhost:8097.\nTrain a model:\n\n#!.\/scripts\/train_cyclegan.sh\npython train.py --dataroot .\/datasets\/maps --name maps_cyclegan --model cycle_gan\nTo see more intermediate results, check out .\/checkpoints\/maps_cyclegan\/web\/index.html.\n\nTest the model:\n\n#!.\/scripts\/test_cyclegan.sh\npython test.py --dataroot .\/datasets\/maps --name maps_cyclegan --model cycle_gan\n\nThe test results will be saved to a html file here: .\/results\/maps_cyclegan\/latest_test\/index.html.\n\npix2pix train\/test\n\nDownload a pix2pix dataset (e.g.facades):\n\nbash .\/datasets\/download_pix2pix_dataset.sh facades\n\nTo view training results and loss plots, run python -m visdom.server and click the URL http:\/\/localhost:8097.\nTrain a model:\n\n#!.\/scripts\/train_pix2pix.sh\npython train.py --dataroot .\/datasets\/facades --name facades_pix2pix --model pix2pix --direction BtoA\nTo see more intermediate results, check out  .\/checkpoints\/facades_pix2pix\/web\/index.html.\n\nTest the model (bash .\/scripts\/test_pix2pix.sh):\n\n#!.\/scripts\/test_pix2pix.sh\npython test.py --dataroot .\/datasets\/facades --name facades_pix2pix --model pix2pix --direction BtoA\n\nThe test results will be saved to a html file here: .\/results\/facades_pix2pix\/test_latest\/index.html. You can find more scripts at scripts directory.\nTo train and test pix2pix-based colorization models, please add --model colorization and --dataset_mode colorization. See our training tips for more details.\n\nApply a pre-trained model (CycleGAN)\n\nYou can download a pretrained model (e.g. horse2zebra) with the following script:\n\nbash .\/scripts\/download_cyclegan_model.sh horse2zebra\n\nThe pretrained model is saved at .\/checkpoints\/{name}_pretrained\/latest_net_G.pth. Check here for all the available CycleGAN models.\nTo test the model, you also need to download the  horse2zebra dataset:\n\nbash .\/datasets\/download_cyclegan_dataset.sh horse2zebra\n\nThen generate the results using\n\npython test.py --dataroot datasets\/horse2zebra\/testA --name horse2zebra_pretrained --model test --no_dropout\n\n\nThe option --model test is used for generating results of CycleGAN only for one side. This option will automatically set --dataset_mode single, which only loads the images from one set. On the contrary, using --model cycle_gan requires loading and generating results in both directions, which is sometimes unnecessary. The results will be saved at .\/results\/. Use --results_dir {directory_path_to_save_result} to specify the results directory.\n\n\nFor pix2pix and your own models, you need to explicitly specify --netG, --norm, --no_dropout to match the generator architecture of the trained model. See this FAQ for more details.\n\n\nApply a pre-trained model (pix2pix)\nDownload a pre-trained model with .\/scripts\/download_pix2pix_model.sh.\n\nCheck here for all the available pix2pix models. For example, if you would like to download label2photo model on the Facades dataset,\n\nbash .\/scripts\/download_pix2pix_model.sh facades_label2photo\n\nDownload the pix2pix facades datasets:\n\nbash .\/datasets\/download_pix2pix_dataset.sh facades\n\nThen generate the results using\n\npython test.py --dataroot .\/datasets\/facades\/ --direction BtoA --model pix2pix --name facades_label2photo_pretrained\n\n\nNote that we specified --direction BtoA as Facades dataset's A to B direction is photos to labels.\n\n\nIf you would like to apply a pre-trained model to a collection of input images (rather than image pairs), please use --model test option. See .\/scripts\/test_single.sh for how to apply a model to Facade label maps (stored in the directory facades\/testB).\n\n\nSee a list of currently available models at .\/scripts\/download_pix2pix_model.sh\n\n\nDocker\nWe provide the pre-built Docker image and Dockerfile that can run this code repo. See docker.\nDatasets\nDownload pix2pix\/CycleGAN datasets and create your own datasets.\nTraining\/Test Tips\nBest practice for training and testing your models.\nFrequently Asked Questions\nBefore you post a new question, please first look at the above Q & A and existing GitHub issues.\nCustom Model and Dataset\nIf you plan to implement custom models and dataset for your new applications, we provide a dataset template and a model template as a starting point.\nCode structure\nTo help users better understand and use our code, we briefly overview the functionality and implementation of each package and each module.\nPull Request\nYou are always welcome to contribute to this repository by sending a pull request.\nPlease run flake8 --ignore E501 . and python .\/scripts\/test_before_push.py before you commit the code. Please also update the code structure overview accordingly if you add or remove files.\nCitation\nIf you use this code for your research, please cite our papers.\n@inproceedings{CycleGAN2017,\n  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},\n  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},\n  booktitle={Computer Vision (ICCV), 2017 IEEE International Conference on},\n  year={2017}\n}\n\n\n@inproceedings{isola2017image,\n  title={Image-to-Image Translation with Conditional Adversarial Networks},\n  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},\n  booktitle={Computer Vision and Pattern Recognition (CVPR), 2017 IEEE Conference on},\n  year={2017}\n}\n\nOther Languages\nSpanish\nRelated Projects\ncontrastive-unpaired-translation (CUT)\nCycleGAN-Torch |\npix2pix-Torch | pix2pixHD|\nBicycleGAN | vid2vid | SPADE\/GauGAN\niGAN | GAN Dissection | GAN Paint\nCat Paper Collection\nIf you love cats, and love reading cool graphics, vision, and learning papers, please check out the Cat Paper Collection.\nAcknowledgments\nOur code is inspired by pytorch-DCGAN.\n","98":"Dash\n\n\n\n\n\n\n\nDash is the most downloaded, trusted Python framework for building ML & data science web apps.\nBuilt on top of Plotly.js, React and Flask, Dash ties modern UI elements like dropdowns, sliders, and graphs directly to your analytical Python code. Read our tutorial proudly crafted \u2764\ufe0f by Dash itself.\n\n\nUser Guide\n\n\nDash Docs on Heroku (for corporate network that cannot access plotly.com)\n\n\nOpen-Source App Gallery With sample code and templates!\n\n\nApp Samples\n\n\n\nApp\nDescription\n\n\n\n\n\nHere\u2019s a simple example of a Dash App that ties a Dropdown to a D3.js Plotly Graph. As the user selects a value in the Dropdown, the application code dynamically exports data from Google Finance into a Pandas DataFrame. This app was written in just 43 lines of code (view the source).\n\n\n\nDash app code is declarative and reactive, which makes it easy to build complex apps that contain many interactive elements. Here\u2019s an example with 5 inputs, 3 outputs, and cross filtering. This app was composed in just 160 lines of code, all of which were Python.\n\n\n\nDash uses Plotly.js for charting. Over 35 chart types are supported, including maps.\n\n\n\nDash isn't just for dashboards. You have full control over the look and feel of your applications. Here's a Dash App that's styled to look like a PDF report.\n\n\n\nTo learn more about Dash, read the extensive announcement letter or jump in with the user guide.\nDash OSS & Dash Enterprise\nWith Dash Open Source, Dash apps run on your local laptop or workstation, but cannot be easily accessed by others in your organization.\nScale up with Dash Enterprise when your Dash app is ready for department or company-wide consumption. Or, launch your initiative with Dash Enterprise from the start to unlock developer productivity gains and hands-on acceleration from Plotly's team.\nML Ops Features: A one-stop shop for ML Ops: Horizontally scalable hosting, deployment, and authentication for your Dash apps. No IT or DevOps required.\n\nApp manager Deploy & manage Dash apps without needing IT or a DevOps team. App Manager gives you point & click control over all aspects of your Dash deployments.\nKubernetes scaling Ensure high availability of Dash apps and scale horizontally with Dash Enterprise\u2019s Kubernetes architecture. No IT or Helm required.\nNo code auth Control Dash app access in a few clicks. Dash Enterprise supports LDAP, AD, PKI, Okta, SAML, OpenID Connect, OAuth, SSO, and simple email authentication.\nJob Queue The Job Queue is the key to building scalable Dash apps. Move heavy computation from synchronous Dash callbacks to the Job Queue for asynchronous background processing.\n\nLow-Code Features: Low-code Dash app capabilities that supercharge developer productivity.\n\nDesign Kit Design like a pro without writing a line of CSS. Easily arrange, style, brand, and customize your Dash apps.\nSnapshot Engine Save & share Dash app views as links or PDFs. Or, run a Python job through Dash and have Snapshot Engine email a report when the job is done.\nDashboard Toolkit Drag & drop layouts, chart editing, and crossfilter for your Dash apps.\nEmbedding Natively embed Dash apps in an existing web application or website without the use of IFrames.\n\nEnterprise AI Features: Everything that your data science team needs to rapidly deliver AI\/ML research and business initiatives.\n\nAI App Marketplace Dash Enterprise ships with dozens of Dash app templates for business problems where AI\/ML is having the greatest impact.\nBig Data for Pything Connect to Python's most popular big data back ends: Dask, Databricks, NVIDIA RAPIDS, Snowflake, Postgres, Vaex, and more.\nGPU & Dask Acceleration Dash Enterprise puts Python\u2019s most popular HPC stack for GPU and parallel CPU computing in the hands of business users.\nData Science Workspaces Be productive from Day 1. Write and execute Python, R, & Julia code from Dash Enterprise's onboard code editor.\n\nSee https:\/\/plotly.com\/contact-us\/ to get in touch.\n\n","99":"\n\n\n\nEnglish | \u7b80\u4f53\u4e2d\u6587\n\n\n\n\n\nWelcome to the PaddlePaddle GitHub.\nPaddlePaddle, as the only independent R&D deep learning platform in China, has been officially open-sourced to professional communities since 2016. It is an industrial platform with advanced technologies and rich features that cover core deep learning frameworks, basic model libraries, end-to-end development kits, tools & components as well as service platforms.\nPaddlePaddle is originated from industrial practices with dedication and commitments to industrialization. It has been widely adopted by a wide range of sectors including manufacturing, agriculture, enterprise service, and so on while serving more than 1.5 million developers. With such advantages, PaddlePaddle has helped an increasing number of partners commercialize AI.\nInstallation\nLatest PaddlePaddle Release: v1.8\nOur vision is to enable deep learning for everyone via PaddlePaddle.\nPlease refer to our release announcement to track the latest features of PaddlePaddle.\nInstall Latest Stable Release:\n# Linux CPU\npip install paddlepaddle\n# Linux GPU cuda10cudnn7\npip install paddlepaddle-gpu\n# Linux GPU cuda9cudnn7\npip install paddlepaddle-gpu==1.8.5.post97\n\n\nIt is recommended to read this doc on our website.\nNow our developers can acquire Tesla V100 online computing resources for free. If you create a program by AI Studio, you will obtain 12 hours to train models online per day. If you can insist on that for five consecutive days, then you will receive an extra 48 hours. Click here to start.\nFOUR LEADING TECHNOLOGIES\n\n\nAgile Framework for Industrial Development of Deep Neural Networks\nThe PaddlePaddle deep learning framework facilitates the development while lowering the technical burden, through leveraging a programmable scheme to architect the neural networks. It supports both declarative programming and imperative programming with both development flexibility and high runtime performance preserved.  The neural architectures could be automatically designed by algorithms with better performance than the ones designed by human experts.\n\n\nSupport Ultra-Large-Scale Training of Deep Neural Networks\nPaddlePaddle has made breakthroughs in ultra-large-scale deep neural networks training. It launched the world's first large-scale open-source training platform that supports the training of deep networks with 100 billions of features and trillions of parameters using data sources distributed over hundreds of nodes. PaddlePaddle overcomes the online deep learning challenges for ultra-large-scale deep learning models, and further achieved the real-time model updating with more than 1 trillion parameters.\nClick here to learn more\n\n\nAccelerated High-Performance Inference over Ubiquitous Deployments\nPaddlePaddle is not only compatible with other open-source frameworks for models training, but also works well on the ubiquitous developments, varying from platforms to devices. More specifically, PaddlePaddle accelerates the inference procedure with the fastest speed-up. Note that, a recent breakthrough of inference speed has been made by PaddlePaddle on Huawei's Kirin NPU, through the hardware\/software co-optimization.\nClick here to learn more\n\n\nIndustry-Oriented Models and Libraries with Open Source Repositories\nPaddlePaddle includes and maintains more than 100 mainstream models that have been practiced and polished for a long time in the industry. Some of these models have won major prizes from key international competitions. In the meanwhile, PaddlePaddle has further more than 200 pre-training models (some of them with source codes) to facilitate the rapid development of industrial applications.\nClick here to learn more\n\n\nDocumentation\nWe provide English and\nChinese documentation.\n\n\nBasic Deep Learning Models\nYou might want to start from how to implement deep learning basics with PaddlePaddle.\n\n\nUser Guides\nYou might have got the hang of Beginner\u2019s Guide, and wish to model practical problems and build your original networks.\n\n\nAdvanced User Guides\nSo far you have already been familiar with Fluid. And the next step should be building a more efficient model or inventing your original Operator.\n\n\nAPI Reference\nOur new API enables much shorter programs.\n\n\nHow to Contribute\nWe appreciate your contributions!\n\n\nCommunication\n\nGithub Issues: bug reports, feature requests, install issues, usage issues, etc.\nQQ discussion group: 796771754 (PaddlePaddle).\nForums: discuss implementations, research, etc.\n\nCopyright and License\nPaddlePaddle is provided under the Apache-2.0 license.\n","100":"Cookiecutter\n\n\n\n\n\n\n\nA command-line utility that creates projects from cookiecutters (project\ntemplates), e.g. creating a Python package project from a Python package project\ntemplate.\n\nDocumentation: https:\/\/cookiecutter.readthedocs.io\nGitHub: https:\/\/github.com\/cookiecutter\/cookiecutter\nPyPI: https:\/\/pypi.org\/project\/cookiecutter\/\nFree and open source software: BSD license\n\n\nWe are proud to be an open source sponsor of\nPyCon 2016.\nFeatures\nDid someone say features?\n\nCross-platform: Windows, Mac, and Linux are officially supported.\nYou don't have to know\/write Python code to use Cookiecutter\nWorks with Python 3.6, 3.7, 3.8 and PyPy3.\nProject templates can be in any programming language or markup format:\nPython, JavaScript, Ruby, CoffeeScript, RST, Markdown, CSS, HTML, you name it.\nYou can use multiple languages in the same project template.\nSimple command line usage:\n\n# Create project from the cookiecutter-pypackage.git repo template\n# You'll be prompted to enter values.\n# Then it'll create your Python package in the current working directory,\n# based on those values.\n$ cookiecutter https:\/\/github.com\/audreyr\/cookiecutter-pypackage\n# For the sake of brevity, repos on GitHub can just use the 'gh' prefix\n$ cookiecutter gh:audreyr\/cookiecutter-pypackage\n\nUse it at the command line with a local template:\n\n# Create project in the current working directory, from the local\n# cookiecutter-pypackage\/ template\n$ cookiecutter cookiecutter-pypackage\/\n\nOr use it from Python:\n\nfrom cookiecutter.main import cookiecutter\n\n# Create project from the cookiecutter-pypackage\/ template\ncookiecutter('cookiecutter-pypackage\/')\n\n# Create project from the cookiecutter-pypackage.git repo template\ncookiecutter('https:\/\/github.com\/audreyr\/cookiecutter-pypackage.git')\n\nDirectory names and filenames can be templated. For example:\n\n{{cookiecutter.repo_name}}\/{{cookiecutter.repo_name}}\/{{cookiecutter.repo_name}}.py\n\nSupports unlimited levels of directory nesting.\n100% of templating is done with Jinja2. This includes file and directory names.\nSimply define your template variables in a cookiecutter.json file. For example:\n\n{\n    \"full_name\": \"Audrey Roy\",\n    \"email\": \"audreyr@gmail.com\",\n    \"project_name\": \"Complexity\",\n    \"repo_name\": \"complexity\",\n    \"project_short_description\": \"Refreshingly simple static site generator.\",\n    \"release_date\": \"2013-07-10\",\n    \"year\": \"2013\",\n    \"version\": \"0.1.1\"\n}\n\nUnless you suppress it with --no-input, you are prompted for input:\n\nPrompts are the keys in cookiecutter.json.\nDefault responses are the values in cookiecutter.json.\nPrompts are shown in order.\n\n\nCross-platform support for ~\/.cookiecutterrc files:\n\ndefault_context:\n    full_name: \"Audrey Roy\"\n    email: \"audreyr@gmail.com\"\n    github_username: \"audreyr\"\ncookiecutters_dir: \"~\/.cookiecutters\/\"\n\nCookiecutters (cloned Cookiecutter project templates) are put into\n~\/.cookiecutters\/ by default, or cookiecutters_dir if specified.\nIf you have already cloned a cookiecutter into ~\/.cookiecutters\/,\nyou can reference it by directory name:\n\n# Clone cookiecutter-pypackage\n$ cookiecutter gh:audreyr\/cookiecutter-pypackage\n# Now you can use the already cloned cookiecutter by name\n$ cookiecutter cookiecutter-pypackage\n\nYou can use local cookiecutters, or remote cookiecutters directly from Git\nrepos or from Mercurial repos on Bitbucket.\nDefault context: specify key\/value pairs that you want used as defaults\nwhenever you generate a project.\nInject extra context with command-line arguments:\n\ncookiecutter --no-input gh:msabramo\/cookiecutter-supervisor program_name=foobar startsecs=10\n\nDirect access to the Cookiecutter API allows for injection of extra context.\nPre- and post-generate hooks: Python or shell scripts to run before or after\ngenerating a project.\nPaths to local projects can be specified as absolute or relative.\nProjects generated to your current directory or to target directory if\nspecified with -o option.\n\nAvailable Cookiecutters\nMaking great cookies takes a lot of cookiecutters and contributors. We're so\npleased that there are many Cookiecutter project templates to choose from. We\nhope you find a cookiecutter that is just right for your needs.\nA Pantry Full of Cookiecutters\nThe best place to start searching for specific and ready to use cookiecutter\ntemplate is Github search.\nJust type cookiecutter and you will discover over 4000 related repositories.\nWe also recommend you to check related GitHub topics. For general search use\ncookiecutter-template.\nFor specific topics try to use cookiecutter-yourtopic, like\ncookiecutter-python or cookiecutter-datascience. This is a new GitHub feature,\nso not all active repositories use it at the moment.\nIf you are template developer please add related\ntopics\nwith cookiecutter prefix to you repository. We believe it will make it more\ndiscoverable. You are almost not limited in topics amount, use it!\nCookiecutter Specials\nThese Cookiecutters are maintained by the cookiecutter team:\n\ncookiecutter-pypackage:\n@audreyr's ultimate Python package project template.\ncookiecutter-django:\nA bleeding edge Django project template with Bootstrap 4, customizable users app,\nstarter templates, working user registration, celery setup, and much more.\ncookiecutter-pytest-plugin:\nMinimal Cookiecutter template for authoring pytest\nplugins that help you to write better programs.\n\nCommunity\nThe core committer team can be found in authors section.\nWe are always welcome and invite you to participate.\nStuck? Try one of the following:\n\nSee the Troubleshooting page.\nAsk for help on Stack Overflow.\nYou are strongly encouraged to\nfile an issue\nabout the problem, even if it's just \"I can't get it to work on this cookiecutter\"\nwith a link to your cookiecutter. Don't worry about naming\/pinpointing the issue\nproperly.\nAsk for help on Slack\nif you must (but please try one of the other options first, so that others\ncan benefit from the discussion).\n\nDevelopment on Cookiecutter is community-driven:\n\nHuge thanks to all the contributors who have pitched in to help\nmake Cookiecutter an even better tool.\nEveryone is invited to contribute. Read the\ncontributing instructions, then get started.\nConnect with other Cookiecutter contributors and users on\nSlack\n(note: due to work and commitments, a core committer might not always be available)\n\nEncouragement is unbelievably motivating. If you want more work done on\nCookiecutter, show support:\n\nThank a core committer for their efforts.\nStar Cookiecutter on GitHub.\nSupport this project\n\nGot criticism or complaints?\n\nFile an issue\nso that Cookiecutter can be improved. Be friendly and constructive about what\ncould be better. Make detailed suggestions.\nKeep us in the loop so that we can help. For example, if you are\ndiscussing problems with Cookiecutter on a mailing list,\nfile an issue\nwhere you link to the discussion thread and\/or cc at least 1 core committer on the email.\nBe encouraging. A comment like \"This function ought to be rewritten like this\"\nis much more likely to result in action than a comment like \"Eww, look how bad\nthis function is.\"\n\nWaiting for a response to an issue\/question?\n\nBe patient and persistent. All issues are on the core committer team's radar\nand will be considered thoughtfully, but we have a lot of issues to work through.\nIf urgent, it's fine to ping a core committer in the issue with a reminder.\nAsk others to comment, discuss, review, etc.\nSearch the Cookiecutter repo for issues related to yours.\nNeed a fix\/feature\/release\/help urgently, and can't wait?\n@audreyr is available for hire for consultation\nor custom development.\n\nSupport This Project\nThis project is run by volunteers. Shortly we will be providing means for\norganizations and individuals to support the project.\nCode of Conduct\nEveryone interacting in the Cookiecutter project's codebases, issue trackers,\nchat rooms, and mailing lists is expected to follow the\nPyPA Code of Conduct.\n","101":"wttr.in \u2014 the right way to check the weather!\nwttr.in is a console-oriented weather forecast service that supports various information\nrepresentation methods like terminal-oriented ANSI-sequences for console HTTP clients\n(curl, httpie, or wget), HTML for web browsers, or PNG for graphical viewers.\nwttr.in uses wego for visualization\nand various data sources for weather forecast information.\nYou can see it running here: wttr.in.\nUsage\nYou can access the service from a shell or from a Web browser like this:\n$ curl wttr.in\nWeather for City: Paris, France\n\n     \\   \/     Clear\n      .-.      10 \u2013 11 \u00b0C  \n   \u2015 (   ) \u2015   \u2191 11 km\/h  \n      `-\u2019      10 km  \n     \/   \\     0.0 mm  \n\nHere is an actual weather report for your location (it's live!):\n\n(It's not your actual location - GitHub's CDN hides your real IP address with its own IP address,\nbut it's still a live weather report in your language.)\nOr in PowerShell:\nInvoke-RestMethod http:\/\/wttr.in\nWant to get the weather information for a specific location? You can add the desired location to the URL in your\nrequest like this:\n$ curl wttr.in\/London\n$ curl wttr.in\/Moscow\n$ curl wttr.in\/Salt+Lake+City\n\nIf you omit the location name, you will get the report for your current location based on your IP address.\nUse 3-letter airport codes in order to get the weather information at a certain airport:\n$ curl wttr.in\/muc      # Weather for IATA: muc, Munich International Airport, Germany\n$ curl wttr.in\/ham      # Weather for IATA: ham, Hamburg Airport, Germany\n\nLet's say you'd like to get the weather for a geographical location other than a town or city - maybe an attraction\nin a city, a mountain name, or some special location. Add the character ~ before the name to look up that special\nlocation name before the weather is then retrieved:\n$ curl wttr.in\/~Vostok+Station\n$ curl wttr.in\/~Eiffel+Tower\n$ curl wttr.in\/~Kilimanjaro\n\nFor these examples, you'll see a line below the weather forecast output that shows the geolocation\nresults of looking up the location:\nLocation: Vostok Station, \u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0412\u043e\u0441\u0442\u043e\u043a, AAT, Antarctica [-78.4642714,106.8364678]\nLocation: Tour Eiffel, 5, Avenue Anatole France, Gros-Caillou, 7e, Paris, \u00cele-de-France, 75007, France [48.8582602,2.29449905432]\nLocation: Kilimanjaro, Northern, Tanzania [-3.4762789,37.3872648]\n\nYou can also use IP-addresses (direct) or domain names (prefixed with @) to specify a location:\n$ curl wttr.in\/@github.com\n$ curl wttr.in\/@msu.ru\n\nTo get detailed information online, you can access the \/:help page:\n$ curl wttr.in\/:help\n\nWeather Units\nBy default the USCS units are used for the queries from the USA and the metric system for the rest of the world.\nYou can override this behavior by adding ?u or ?m to a URL like this:\n$ curl wttr.in\/Amsterdam?u\n$ curl wttr.in\/Amsterdam?m\n\nSupported output formats and views\nwttr.in currently supports five output formats:\n\nANSI for the terminal;\nPlain-text for the terminal and scripts;\nHTML for the browser;\nPNG for the graphical viewers;\nJSON for scripts and APIs;\nPrometheus metrics for scripts and APIs.\n\nThe ANSI and HTML formats are selected basing on the User-Agent string.\nThe PNG format can be forced by adding .png to the end of the query:\n$ wget wttr.in\/Paris.png\n\nYou can use all of the options with the PNG-format like in an URL, but you have\nto separate them with _ instead of ? and &:\n$ wget wttr.in\/Paris_0tqp_lang=fr.png\n\nUseful options for the PNG format:\n\nt for transparency (transparency=150);\ntransparency=0..255 for a custom transparency level.\n\nTransparency is a useful feature when weather PNGs are used to add weather data to pictures:\n$ convert source.jpg <( curl wttr.in\/Oymyakon_tqp0.png ) -geometry +50+50 -composite target.jpg\n\nIn this example:\n\nsource.jpg - source file;\ntarget.jpg - target file;\nOymyakon - name of the location;\ntqp0 - options (recommended).\n\n\nYou can embed a special wttr.in widget, that displays the weather condition for the current or a selected location, into a HTML page using the wttr-switcher. That is how it looks like: wttr-switcher-example or on a real world web site: https:\/\/feuerwehr-eisolzried.de\/.\n\nOne-line output\nFor one-line output format, specify additional URL parameter format:\n$ curl wttr.in\/Nuremberg?format=3\nNuremberg: \ud83c\udf26 +11\u2070C\n\nAvailable preconfigured formats: 1, 2, 3, 4 and the custom format using the percent notation (see below).\nYou can specify multiple locations separated with : (for repeating queries):\n$ curl wttr.in\/Nuremberg:Hamburg:Berlin?format=3\nNuremberg: \ud83c\udf26 +11\u2070C\n\nOr to process all this queries at once:\n$ curl -s 'wttr.in\/{Nuremberg,Hamburg,Berlin}?format=3'\nNuremberg: \ud83c\udf26 +11\u2070C\nHamburg: \ud83c\udf26 +8\u2070C\nBerlin: \ud83c\udf26 +8\u2070C\n\nTo specify your own custom output format, use the special %-notation:\n    c    Weather condition,\n    C    Weather condition textual name,\n    h    Humidity,\n    t    Temperature (Actual),\n    f    Temperature (Feels Like),\n    w    Wind,\n    l    Location,\n    m    Moonphase \ud83c\udf11\ud83c\udf12\ud83c\udf13\ud83c\udf14\ud83c\udf15\ud83c\udf16\ud83c\udf17\ud83c\udf18,\n    M    Moonday,\n    p    precipitation (mm),\n    P    pressure (hPa),\n\n    D    Dawn*,\n    S    Sunrise*,\n    z    Zenith*,\n    s    Sunset*,\n    d    Dusk*.\n\n(*times are shown in the local timezone)\n\nSo, these two calls are the same:\n    $ curl wttr.in\/London?format=3\n    London: \u26c5\ufe0f +7\u2070C\n    $ curl wttr.in\/London?format=\"%l:+%c+%t\\n\"\n    London: \u26c5\ufe0f +7\u2070C\n\nKeep in mind, that when using in tmux.conf, you have to escape % with %, i.e. write there %% instead of %.\nIn programs, that are querying the service automatically (such as tmux), it is better to use some reasonable update interval. In tmux, you can configure it with status-interval.\nIf several, : separated locations, are specified in the query, specify update period\nas an additional query parameter period=:\nset -g status-interval 60\nWEATHER='#(curl -s wttr.in\/London:Stockholm:Moscow\\?format\\=\"%%l:+%%c%%20%%t%%60%%w&period=60\")'\nset -g status-right \"$WEATHER ...\"\n\n\nTo see emojis in terminal, you need:\n\nTerminal support for emojis (was added to Cairo 1.15.8);\nFont with emojis support.\n\nFor the Emoji font, we recommend Noto Color Emoji, and a good alternative option would be the Emoji One font;\nboth of them support all necessary emoji glyphs.\nFont configuration:\n$ cat ~\/.config\/fontconfig\/fonts.conf\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n<fontconfig>\n  <alias>\n    <family>serif<\/family>\n    <prefer>\n      <family>Noto Color Emoji<\/family>\n    <\/prefer>\n  <\/alias>\n  <alias>\n    <family>sans-serif<\/family>\n    <prefer>\n      <family>Noto Color Emoji<\/family>\n    <\/prefer>\n  <\/alias>\n  <alias>\n    <family>monospace<\/family>\n    <prefer>\n      <family>Noto Color Emoji<\/family>\n    <\/prefer>\n  <\/alias>\n<\/fontconfig>\n(to apply the configuration, run fc-cache -f -v)\nData-rich output format (v2)\nIn the experimental data-rich output format, that is available under the view code v2,\na lot of additional weather and astronomical information is available:\n\nTemperature, and precepetation changes forecast throughout the days;\nMoonphase for today and the next three days;\nThe current weather condition, temperature, humidity, windspeed and direction, pressure;\nTimezone;\nDawn, sunrise, noon, sunset, dusk time for he selected location;\nPrecise geographical coordinates for the selected location.\n\n  $ curl v2.wttr.in\/M\u00fcnchen\n\nor\n  $ curl wttr.in\/M\u00fcnchen?format=v2\n\nor, if you prefer Nerd Fonts instead of Emoji, v2d (day) or v2n (night):\n  $ curl v2d.wttr.in\/M\u00fcnchen\n\n\n(The mode is experimental, and it has several limitations currently:\n\nIt works only in terminal;\nOnly English is supported).\n\nCurrently, you need some tweaks for some terminals, to get the best possible visualization.\nURXVT\nDepending on your configuration you might be taking all steps, or only a few. URXVT currently doesn't support emoji related fonts, but we can get almost the same effect using Font-Symbola. So add to your .Xresources file the following line:\n    xft:symbola:size=10:minspace=False\n\nYou can add it after your preferred font and it will only show up when required.\nThen, if you see or feel like you're having spacing issues, add this: URxvt.letterSpace: 0\nFor some reason URXVT sometimes stops deciding right the word spacing and we need to force it this way.\nThe result, should look like:\n\nMap view (v3)\nIn the experimental map view, that is available under the view code v3,\nweather information about a geographical region is available:\n    $ curl v3.wttr.in\/Bayern.sxl\n\n\nor directly in browser:\n\nhttps:\/\/v3.wttr.in\/Bayern\n\nThe map view currently supports three formats:\n\nPNG (for browser and messangers);\nSixel (terminal inline images support);\nIIP (terminal with iterm2 inline images protocol support).\n\nTerminal with inline images protocols support:\n\u27f6 Detailed article: Images in terminal\n\n\n\nTerminal\nEnvironment\nImages support\nProtocol\n\n\n\n\nuxterm\nX11\nyes\nSixel\n\n\nmlterm\nX11\nyes\nSixel\n\n\nkitty\nX11\nyes\nKitty\n\n\nwezterm\nX11\nyes\nIIP\n\n\naminal\nX11\nyes\nSixel\n\n\nJexer\nX11\nyes\nSixel\n\n\nGNOME Terminal\nX11\nin-progress\nSixel\n\n\nalacritty\nX11\nin-progress\nSixel\n\n\nfoot\nWayland\nyes\nSixel\n\n\nDomTerm\nWeb\nyes\nSixel\n\n\nYaft\nFB\nyes\nSixel\n\n\niTerm2\nMac OS X\nyes\nIIP\n\n\nmintty\nWindows\nyes\nSixel\n\n\nWindows Terminal\nWindows\nin-progress\nSixel\n\n\nRLogin\nWindows\nyes\nSixel\n\n\n\nDifferent output formats\nJSON output\nThe JSON format is a feature providing access to wttr.in data through an easy-to-parse format, without requiring the user to create a complex script to reinterpret wttr.in's graphical output.\nTo fetch information in JSON format, use the following syntax:\n$ curl wttr.in\/Detroit?format=j1\n\nThis will fetch information on the Detroit region in JSON format. The j1 format code is used to allow for the use of other layouts for the JSON output.\nThe result will look something like the following:\n{\n\t\"current_condition\": [\n\t\t{\n\t\t    \"FeelsLikeC\": \"25\",\n\t\t    \"FeelsLikeF\": \"76\",\n\t\t    \"cloudcover\": \"100\",\n\t\t    \"humidity\": \"76\",\n\t\t    \"observation_time\": \"04:08 PM\",\n\t\t    \"precipMM\": \"0.2\",\n\t\t    \"pressure\": \"1019\",\n\t\t    \"temp_C\": \"22\",\n\t\t    \"temp_F\": \"72\",\n\t\t    \"uvIndex\": 5,\n\t\t    \"visibility\": \"16\",\n\t\t    \"weatherCode\": \"122\",\n\t\t    \"weatherDesc\": [\n\t\t\t{\n\t\t\t    \"value\": \"Overcast\"\n\t\t\t}\n\t\t    ],\n\t\t    \"weatherIconUrl\": [\n\t\t\t{\n\t\t\t    \"value\": \"\"\n\t\t\t}\n\t\t    ],\n\t\t    \"winddir16Point\": \"NNE\",\n\t\t    \"winddirDegree\": \"20\",\n\t\t    \"windspeedKmph\": \"7\",\n\t\t    \"windspeedMiles\": \"4\"\n\t\t}\n\t],\n...\nMost of these values are self-explanatory, aside from weatherCode. The weatherCode is an enumeration which you can find at either the WorldWeatherOnline website or in the wttr.in source code.\nPrometheus Metrics Output\nThe Prometheus Metrics format is a feature providing access to wttr.in data through an easy-to-parse format for monitoring systems, without requiring the user to create a complex script to reinterpret wttr.in's graphical output.\nTo fetch information in Prometheus format, use the following syntax:\n$ curl wttr.in\/Detroit?format=p1\n\nThis will fetch information on the Detroit region in Prometheus Metrics format. The p1 format code is used to allow for the use of other layouts for the Prometheus Metrics output.\nA possible configuration for Prometheus could look like this:\n    - job_name: 'wttr_in_detroit'\n        static_configs:\n            - targets: ['wttr.in']\n        metrics_path: '\/Detroit'\n        params:\n            format: ['p1']\nThe result will look something like the following:\n# HELP temperature_feels_like_celsius Feels Like Temperature in Celsius\ntemperature_feels_like_celsius{forecast=\"current\"} 7\n# HELP temperature_feels_like_fahrenheit Feels Like Temperature in Fahrenheit\ntemperature_feels_like_fahrenheit{forecast=\"current\"} 45\n[truncated]\n\n...\nMoon phases\nwttr.in can also be used to check the phase of the Moon. This example shows how to see the current Moon phase\nin the full-output mode:\n$ curl wttr.in\/Moon\n\nGet the Moon phase for a particular date by adding @YYYY-MM-DD:\n$ curl wttr.in\/Moon@2016-12-25\n\nThe Moon phase information uses pyphoon as its backend.\nTo get the moon phase information in the online mode, use %m:\n$ curl wttr.in\/London?format=%m\n\ud83c\udf16\n\nKeep in mind that the Unicode representation of moonphases suffers 2 caveats:\n\n\nWith some fonts, the representation \ud83c\udf18 is ambiguous, for it either seem\nalmost-shadowed or almost-lit, depending on whether your terminal is in\nlight mode or dark mode. Relying on colored fonts like noto-fonts works\naround this problem.\n\n\nThe representation \ud83c\udf18 is also ambiguous, for it means \"last quarter\" in\nnorthern hemisphere, but \"first quarter\" in souther hemisphere. It also means\nnothing in tropical zones. This is a limitation that\nUnicode is aware about.\nBut it has not been worked around at wttr.in yet.\n\n\nSee #247, #364 for the corresponding tracking issues,\nand pyphoon#1 for pyphoon. Any help is welcome.\nInternationalization and localization\nwttr.in supports multilingual locations names that can be specified in any language in the world\n(it may be surprising, but many locations in the world don't have an English name).\nThe query string should be specified in Unicode (hex-encoded or not). Spaces in the query string\nmust be replaced with +:\n$ curl wttr.in\/\u0441\u0442\u0430\u043d\u0446\u0438\u044f+\u0412\u043e\u0441\u0442\u043e\u043a\nWeather report: \u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0412\u043e\u0441\u0442\u043e\u043a\n\n               Overcast\n      .--.     -65 \u2013 -47 \u00b0C\n   .-(    ).   \u2191 23 km\/h\n  (___.__)__)  15 km\n               0.0 mm\n\nThe language used for the output (except the location name) does not depend on the input language\nand it is either English (by default) or the preferred language of the browser (if the query\nwas issued from a browser) that is specified in the query headers (Accept-Language).\nThe language can be set explicitly when using console clients by using command-line options like this:\ncurl -H \"Accept-Language: fr\" wttr.in\nhttp GET wttr.in Accept-Language:ru\n\nThe preferred language can be forced using the lang option:\n$ curl wttr.in\/Berlin?lang=de\n\nThe third option is to choose the language using the DNS name used in the query:\n$ curl de.wttr.in\/Berlin\n\nwttr.in is currently translated into 54 languages, and the number of supported languages is constantly growing.\nSee \/:translation to learn more about the translation process,\nto see the list of supported languages and contributors, or to know how you can help to translate wttr.in\nin your language.\n\nWindows Users\nThere are currently two Windows related issues that prevent the examples found on this page from working exactly as expected out of the box. Until Microsoft fixes the issues, there are a few workarounds. To circumvent both issues you may use a shell such as bash on the Windows Subsystem for Linux (WSL) or read on for alternative solutions.\nGarbage characters in the output\nThere is a limitation of the current Win32 version of curl. Until the Win32 curl issue is resolved and rolled out in a future Windows release, it is recommended that you use Powershell\u2019s Invoke-Web-Request command instead:\n\n(Invoke-WebRequest http:\/\/wttr.in).Content\n\nMissing or double wide diagonal wind direction characters\nThe second issue is regarding the width of the diagonal arrow glyphs that some Windows Terminal Applications such as the default conhost.exe use. At the time of writing this, ConEmu.exe, ConEmu64.exe and Terminal Applications built on top of ConEmu such as Cmder (cmder.exe) use these double-wide glyphs by default. The result is the same with all of these programs, either a missing character for certain wind directions or a broken table in the output or both. Some third-party Terminal Applications have addressed the wind direction glyph issue but that fix depends on the font and the Terminal Application you are using.\nOne way to display the diagonal wind direction glyphs in your Terminal Application is to use Windows Terminal which is currently available in the Microsoft Store. Windows Terminal is currently a preview release and will be rolled out as the default Terminal Application in an upcoming release. If your output is still skewed after using Windows Terminal then try maximizing the terminal window.\nAnother way you can display the diagonal wind direction is to swap out the problematic characters with forward and backward slashes as shown here.\nInstallation\nTo install the application:\n\nInstall external dependencies\nInstall Python dependencies used by the service\nConfigure IP2Location (optional)\nGet a WorldWeatherOnline API and configure wego\nConfigure wttr.in\nConfigure the HTTP-frontend service\n\nInstall external dependencies\nwttr.in has the following external dependencies:\n\ngolang, wego dependency\nwego, weather client for terminal\n\nAfter you install golang, install wego:\n$ go get -u github.com\/schachmat\/wego\n$ go install github.com\/schachmat\/wego\n\nInstall Python dependencies\nPython requirements:\n\nFlask\ngeoip2\ngeopy\nrequests\ngevent\n\nIf you want to get weather reports as PNG files, you'll also need to install:\n\nPIL\npyte (>=0.6)\nnecessary fonts\n\nYou can install most of them using pip.\nSome python package use LLVM, so install it first:\n$ apt-get install llvm-7 llvm-7-dev\n\nIf virtualenv is used:\n$ virtualenv -p python3 ve\n$ ve\/bin\/pip3 install -r requirements.txt\n$ ve\/bin\/python3 bin\/srv.py\n\nAlso, you need to install the geoip2 database.\nYou can use a free database GeoLite2 that can be downloaded from (http:\/\/dev.maxmind.com\/geoip\/geoip2\/geolite2\/).\nConfigure IP2Location (optional)\nIf you want to use the IP2location service for IP-addresses that are not covered by GeoLite2,\nyou have to obtain a API key of that service, and after that save into the ~\/.ip2location.key file:\n$ echo 'YOUR_IP2LOCATION_KEY' > ~\/.ip2location.key\n\nIf you don't have this file, the service will be silently skipped (it is not a big problem,\nbecause the MaxMind database is pretty good).\nInstallation with Docker\n\nInstall Docker\nBuild Docker Image\nThese files should be mounted by the user at runtime:\n\n\/root\/.wegorc\n\/root\/.ip2location.key (optional)\n\/app\/airports.dat\n\/app\/GeoLite2-City.mmdb\n\nGet a WorldWeatherOnline key and configure wego\nTo get a WorldWeatherOnline API key, you must register here:\nhttps:\/\/developer.worldweatheronline.com\/auth\/register\n\nAfter you have a WorldWeatherOnline key, you can save it into the\nWWO key file: ~\/.wwo.key\nAlso, you have to specify the key in the wego configuration:\n$ cat ~\/.wegorc\n{\n\t\"APIKey\": \"00XXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n\t\"City\": \"London\",\n\t\"Numdays\": 3,\n\t\"Imperial\": false,\n\t\"Lang\": \"en\"\n}\nThe City parameter in ~\/.wegorc is ignored.\nConfigure wttr.in\nConfigure the following environment variables that define the path to the local wttr.in\ninstallation, to the GeoLite database, and to the wego installation. For example:\nexport WTTR_MYDIR=\"\/home\/igor\/wttr.in\"\nexport WTTR_GEOLITE=\"\/home\/igor\/wttr.in\/GeoLite2-City.mmdb\"\nexport WTTR_WEGO=\"\/home\/igor\/go\/bin\/wego\"\nexport WTTR_LISTEN_HOST=\"0.0.0.0\"\nexport WTTR_LISTEN_PORT=\"8002\"\nConfigure the HTTP-frontend service\nIt's recommended that you also configure the web server that will be used to access the service:\nserver {\n\tlisten [::]:80;\n\tserver_name  wttr.in *.wttr.in;\n\taccess_log  \/var\/log\/nginx\/wttr.in-access.log  main;\n\terror_log  \/var\/log\/nginx\/wttr.in-error.log;\n\n\tlocation \/ {\n\t    proxy_pass         http:\/\/127.0.0.1:8002;\n\n\t    proxy_set_header   Host             $host;\n\t    proxy_set_header   X-Real-IP        $remote_addr;\n\t    proxy_set_header   X-Forwarded-For  $remote_addr;\n\n\t    client_max_body_size       10m;\n\t    client_body_buffer_size    128k;\n\n\t    proxy_connect_timeout      90;\n\t    proxy_send_timeout         90;\n\t    proxy_read_timeout         90;\n\n\t    proxy_buffer_size          4k;\n\t    proxy_buffers              4 32k;\n\t    proxy_busy_buffers_size    64k;\n\t    proxy_temp_file_write_size 64k;\n\n\t    expires                    off;\n\t}\n}\n","102":"Poetry: Dependency Management for Python\nPoetry helps you declare, manage and install dependencies of Python projects,\nensuring you have the right stack everywhere.\n\nIt supports Python 2.7 and 3.5+.\nNote: Python 2.7 and 3.5 will no longer be supported in the next feature release (1.2).\nYou should consider updating your Python version to a supported one.\n\nThe complete documentation is available on the official website.\nInstallation\nPoetry provides a custom installer that will install poetry isolated\nfrom the rest of your system by vendorizing its dependencies. This is the\nrecommended way of installing poetry.\ncurl -sSL https:\/\/raw.githubusercontent.com\/python-poetry\/poetry\/master\/get-poetry.py | python\nAlternatively, you can download the get-poetry.py file and execute it separately.\nThe setup script must be able to find one of following executables in your shell's path environment:\n\npython (which can be a py3 or py2 interpreter)\npython3\npy.exe -3 (Windows)\npy.exe -2 (Windows)\n\nIf you want to install prerelease versions, you can do so by passing --preview to get-poetry.py:\npython get-poetry.py --preview\nSimilarly, if you want to install a specific version, you can use --version:\npython get-poetry.py --version 0.7.0\nUsing pip to install poetry is also possible.\npip install --user poetry\nBe aware, however, that it will also install poetry's dependencies\nwhich might cause conflicts.\nUpdating poetry\nUpdating poetry to the latest stable version is as simple as calling the self update command.\npoetry self update\nIf you want to install prerelease versions, you can use the --preview option.\npoetry self update --preview\nAnd finally, if you want to install a specific version you can pass it as an argument\nto self update.\npoetry self update 1.0.0\nNote:\nIf you are still on poetry version < 1.0 use `poetry self:update` instead.\n\nEnable tab completion for Bash, Fish, or Zsh\npoetry supports generating completion scripts for Bash, Fish, and Zsh.\nSee poetry help completions for full details, but the gist is as simple as using one of the following:\n# Bash\npoetry completions bash > \/etc\/bash_completion.d\/poetry.bash-completion\n\n# Bash (Homebrew)\npoetry completions bash > $(brew --prefix)\/etc\/bash_completion.d\/poetry.bash-completion\n\n# Fish\npoetry completions fish > ~\/.config\/fish\/completions\/poetry.fish\n\n# Fish (Homebrew)\npoetry completions fish > (brew --prefix)\/share\/fish\/vendor_completions.d\/poetry.fish\n\n# Zsh\npoetry completions zsh > ~\/.zfunc\/_poetry\n\n# Zsh (Homebrew)\npoetry completions zsh > $(brew --prefix)\/share\/zsh\/site-functions\/_poetry\n\n# Zsh (Oh-My-Zsh)\nmkdir $ZSH_CUSTOM\/plugins\/poetry\npoetry completions zsh > $ZSH_CUSTOM\/plugins\/poetry\/_poetry\n\n# Zsh (prezto)\npoetry completions zsh > ~\/.zprezto\/modules\/completion\/external\/src\/_poetry\nNote: you may need to restart your shell in order for the changes to take\neffect.\nFor zsh, you must then add the following line in your ~\/.zshrc before\ncompinit (not for homebrew setup):\nfpath+=~\/.zfunc\nIntroduction\npoetry is a tool to handle dependency installation as well as building and packaging of Python packages.\nIt only needs one file to do all of that: the new, standardized pyproject.toml.\nIn other words, poetry uses pyproject.toml to replace setup.py, requirements.txt, setup.cfg, MANIFEST.in and the newly added Pipfile.\n[tool.poetry]\nname = \"my-package\"\nversion = \"0.1.0\"\ndescription = \"The description of the package\"\n\nlicense = \"MIT\"\n\nauthors = [\n    \"S\u00e9bastien Eustace <sebastien@eustace.io>\"\n]\n\nreadme = 'README.md'  # Markdown files are supported\n\nrepository = \"https:\/\/github.com\/python-poetry\/poetry\"\nhomepage = \"https:\/\/github.com\/python-poetry\/poetry\"\n\nkeywords = ['packaging', 'poetry']\n\n[tool.poetry.dependencies]\npython = \"~2.7 || ^3.2\"  # Compatible python versions must be declared here\ntoml = \"^0.9\"\n# Dependencies with extras\nrequests = { version = \"^2.13\", extras = [ \"security\" ] }\n# Python specific dependencies with prereleases allowed\npathlib2 = { version = \"^2.2\", python = \"~2.7\", allow-prereleases = true }\n# Git dependencies\ncleo = { git = \"https:\/\/github.com\/sdispater\/cleo.git\", branch = \"master\" }\n\n# Optional dependencies (extras)\npendulum = { version = \"^1.4\", optional = true }\n\n[tool.poetry.dev-dependencies]\npytest = \"^3.0\"\npytest-cov = \"^2.4\"\n\n[tool.poetry.scripts]\nmy-script = 'my_package:main'\nThere are some things we can notice here:\n\nIt will try to enforce semantic versioning as the best practice in version naming.\nYou can specify the readme, included and excluded files: no more MANIFEST.in.\npoetry will also use VCS ignore files (like .gitignore) to populate the exclude section.\nKeywords (up to 5) can be specified and will act as tags on the packaging site.\nThe dependencies sections support caret, tilde, wildcard, inequality and multiple requirements.\nYou must specify the python versions for which your package is compatible.\n\npoetry will also detect if you are inside a virtualenv and install the packages accordingly.\nSo, poetry can be installed globally and used everywhere.\npoetry also comes with a full fledged dependency resolution library.\nWhy?\nPackaging systems and dependency management in Python are rather convoluted and hard to understand for newcomers.\nEven for seasoned developers it might be cumbersome at times to create all files needed in a Python project: setup.py,\nrequirements.txt, setup.cfg, MANIFEST.in and the newly added Pipfile.\nSo I wanted a tool that would limit everything to a single configuration file to do:\ndependency management, packaging and publishing.\nIt takes inspiration in tools that exist in other languages, like composer (PHP) or cargo (Rust).\nAnd, finally, I started poetry to bring another exhaustive dependency resolver to the Python community apart from\nConda's.\nWhat about Pipenv?\nIn short: I do not like the CLI it provides, or some of the decisions made,\nand I think we can make a better and more intuitive one. Here are a few things\nthat I don't like.\nDependency resolution\nThe dependency resolution is erratic and will fail even if there is a solution. Let's take an example:\npipenv install oslo.utils==1.4.0\nwill fail with this error:\nCould not find a version that matches pbr!=0.7,!=2.1.0,<1.0,>=0.6,>=2.0.0\n\nwhile Poetry will get you the right set of packages:\npoetry add oslo.utils=1.4.0\nresults in :\n  - Installing pytz (2018.3)\n  - Installing netifaces (0.10.6)\n  - Installing netaddr (0.7.19)\n  - Installing oslo.i18n (2.1.0)\n  - Installing iso8601 (0.1.12)\n  - Installing six (1.11.0)\n  - Installing babel (2.5.3)\n  - Installing pbr (0.11.1)\n  - Installing oslo.utils (1.4.0)\n\nThis is possible thanks to the efficient dependency resolver at the heart of Poetry.\nHere is a breakdown of what exactly happens here:\noslo.utils (1.4.0) depends on:\n\npbr (>=0.6,!=0.7,<1.0)\nBabel (>=1.3)\nsix (>=1.9.0)\niso8601 (>=0.1.9)\noslo.i18n (>=1.3.0)\nnetaddr (>=0.7.12)\nnetifaces (>=0.10.4)\n\nWhat interests us is pbr (>=0.6,!=0.7,<1.0).\nAt this point, poetry will choose pbr==0.11.1 which is the latest version that matches the constraint.\nNext it will try to select oslo.i18n==3.20.0 which is the latest version that matches oslo.i18n (>=1.3.0).\nHowever this version requires pbr (!=2.1.0,>=2.0.0) which is incompatible with pbr==0.11.1,\nso poetry will try to find a version of oslo.i18n that satisfies pbr (>=0.6,!=0.7,<1.0).\nBy analyzing the releases of oslo.i18n, it will find oslo.i18n==2.1.0 which requires pbr (>=0.11,<2.0).\nAt this point the rest of the resolution is straightforward since there is no more conflict.\nResources\n\nOfficial Website\nIssue Tracker\nDiscord\n\n","103":"Zulip overview\nZulip is a powerful, open source group chat application that combines the\nimmediacy of real-time chat with the productivity benefits of threaded\nconversations. Zulip is used by open source projects, Fortune 500 companies,\nlarge standards bodies, and others who need a real-time chat system that\nallows users to easily process hundreds or thousands of messages a day. With\nover 500 contributors merging over 500 commits a month, Zulip is also the\nlargest and fastest growing open source group chat project.\n\n\n\n\n\n\n\n\nGetting started\nClick on the appropriate link below. If nothing seems to apply,\njoin us on the\nZulip community server\nand tell us what's up!\nYou might be interested in:\n\n\nContributing code. Check out our\nguide for new contributors\nto get started.  Zulip prides itself on maintaining a clean and\nwell-tested codebase, and a stock of hundreds of\nbeginner-friendly issues.\n\n\nContributing non-code.\nReport an issue,\ntranslate Zulip\ninto your language,\nwrite\nfor the Zulip blog, or\ngive us feedback. We\nwould love to hear from you, even if you're just trying the product out.\n\n\nSupporting Zulip. Advocate for your organization to use Zulip, write a\nreview in the mobile app stores, or\nupvote Zulip on\nproduct comparison sites.\n\n\nChecking Zulip out. The best way to see Zulip in action is to drop by\nthe\nZulip community server. We\nalso recommend reading Zulip for\nopen source, Zulip for\ncompanies, or Zulip for\nworking groups and part time communities.\n\n\nRunning a Zulip server. Use a preconfigured DigitalOcean droplet,\ninstall Zulip\ndirectly, or use Zulip's\nexperimental Docker image.\nCommercial support is available; see https:\/\/zulip.com\/plans for details.\n\n\nUsing Zulip without setting up a server. https:\/\/zulip.com\noffers free and commercial hosting, including providing our paid\nplan for free to fellow open source projects.\n\n\nParticipating in outreach\nprograms\nlike Google Summer of Code.\n\n\nYou may also be interested in reading our blog or\nfollowing us on Twitter.\nZulip is distributed under the\nApache 2.0 license.\n","104":"\n\n\n\n\n\n\n\n\n\n\n\nZipline is a Pythonic algorithmic trading library. It is an event-driven\nsystem for backtesting. Zipline is currently used in production as the backtesting and live-trading\nengine powering Quantopian -- a free,\ncommunity-centered, hosted platform for building and executing trading\nstrategies. Quantopian also offers a fully managed service for professionals\nthat includes Zipline, Alphalens, Pyfolio, FactSet data, and more.\n\nJoin our Community!\nDocumentation\nWant to Contribute? See our Development Guidelines\n\n\nFeatures\n\nEase of Use: Zipline tries to get out of your way so that you can\nfocus on algorithm development. See below for a code example.\n\"Batteries Included\": many common statistics like\nmoving average and linear regression can be readily accessed from\nwithin a user-written algorithm.\nPyData Integration: Input of historical data and output of performance statistics are\nbased on Pandas DataFrames to integrate nicely into the existing\nPyData ecosystem.\nStatistics and Machine Learning Libraries: You can use libraries like matplotlib, scipy,\nstatsmodels, and sklearn to support development, analysis, and\nvisualization of state-of-the-art trading systems.\n\n\nInstallation\nZipline currently supports Python 2.7, 3.5, and 3.6, and may be installed via\neither pip or conda.\nNote: Installing Zipline is slightly more involved than the average Python\npackage. See the full Zipline Install Documentation for detailed\ninstructions.\nFor a development installation (used to develop Zipline itself), create and\nactivate a virtualenv, then run the etc\/dev-install script.\n\nQuickstart\nSee our getting started tutorial.\nThe following code implements a simple dual moving average algorithm.\nfrom zipline.api import order_target, record, symbol\n\ndef initialize(context):\n    context.i = 0\n    context.asset = symbol('AAPL')\n\n\ndef handle_data(context, data):\n    # Skip first 300 days to get full windows\n    context.i += 1\n    if context.i < 300:\n        return\n\n    # Compute averages\n    # data.history() has to be called with the same params\n    # from above and returns a pandas dataframe.\n    short_mavg = data.history(context.asset, 'price', bar_count=100, frequency=\"1d\").mean()\n    long_mavg = data.history(context.asset, 'price', bar_count=300, frequency=\"1d\").mean()\n\n    # Trading logic\n    if short_mavg > long_mavg:\n        # order_target orders as many shares as needed to\n        # achieve the desired number of shares.\n        order_target(context.asset, 100)\n    elif short_mavg < long_mavg:\n        order_target(context.asset, 0)\n\n    # Save values for later inspection\n    record(AAPL=data.current(context.asset, 'price'),\n           short_mavg=short_mavg,\n           long_mavg=long_mavg)\nYou can then run this algorithm using the Zipline CLI.\nFirst, you must download some sample pricing and asset data:\n$ zipline ingest\n$ zipline run -f dual_moving_average.py --start 2014-1-1 --end 2018-1-1 -o dma.pickle --no-benchmark\nThis will download asset pricing data data sourced from Quandl, and stream it through the algorithm over the specified time range.\nThen, the resulting performance DataFrame is saved in dma.pickle, which you can load and analyze from within Python.\nYou can find other examples in the zipline\/examples directory.\n\nQuestions?\nIf you find a bug, feel free to open an issue and fill out the issue template.\n\nContributing\nAll contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome. Details on how to set up a development environment can be found in our development guidelines.\nIf you are looking to start working with the Zipline codebase, navigate to the GitHub issues tab and start looking through interesting issues. Sometimes there are issues labeled as Beginner Friendly or Help Wanted.\nFeel free to ask questions on the mailing list or on Gitter.\n\nNote\nPlease note that Zipline is not a community-led project. Zipline is\nmaintained by the Quantopian engineering team, and we are quite small and\noften busy.\nBecause of this, we want to warn you that we may not attend to your pull\nrequest, issue, or direct mention in months, or even years. We hope you\nunderstand, and we hope that this note might help reduce any frustration or\nwasted time.\n\n","105":"\n  \n\n \n \n \n    \n\nMatplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.\nCheck out our home page for more information.\n\nMatplotlib produces publication-quality figures in a variety of hardcopy formats\nand interactive environments across platforms. Matplotlib can be used in Python scripts,\nthe Python and IPython shell, web application servers, and various\ngraphical user interface toolkits.\n\nInstall\nFor installation instructions and requirements, see INSTALL.rst  or the\ninstall documentation.\n\nTest\nAfter installation, launch the test suite:\npython -m pytest\n\nRead the testing guide for more information and alternatives.\n\nContribute\nYou've discovered a bug or something else you want to change - excellent!\nYou've worked out a way to fix it \u2013 even better!\nYou want to tell us about it \u2013 best of all!\nStart at the contributing guide!\n\nContact\nDiscourse is the discussion forum for general questions and discussions and our recommended starting point.\nOur active mailing lists (which are mirrored on Discourse) are:\n\nUsers mailing list: matplotlib-users@python.org\nAnnouncement mailing list: matplotlib-announce@python.org\nDevelopment mailing list: matplotlib-devel@python.org\n\nGitter is for coordinating development and asking questions directly related\nto contributing to matplotlib.\n\nCiting Matplotlib\nIf Matplotlib contributes to a project that leads to publication, please\nacknowledge this by citing Matplotlib.\nA ready-made citation entry is available.\n","106":"Welcome to Fabric!\nFabric is a high level Python (2.7, 3.4+) library designed to execute shell\ncommands remotely over SSH, yielding useful Python objects in return. It builds\non top of Invoke (subprocess command execution and\ncommand-line features) and Paramiko (SSH protocol\nimplementation), extending their APIs to complement one another and provide\nadditional functionality.\nFor a high level introduction, including example code, please see\nour main project website; or for detailed API docs, see\nthe versioned API website.\n","107":"\n\n\nNews: We released the technical report on ArXiv.\nDocumentation: https:\/\/mmdetection.readthedocs.io\/\nIntroduction\nMMDetection is an open source object detection toolbox based on PyTorch. It is\na part of the OpenMMLab project developed by Multimedia Laboratory, CUHK.\nThe master branch works with PyTorch 1.3 to 1.6.\nThe old v1.x branch works with PyTorch 1.1 to 1.4, but v2.0 is strongly recommended for faster speed, higher performance, better design and more friendly usage.\n\nMajor features\n\n\nModular Design\nWe decompose the detection framework into different components and one can easily construct a customized object detection framework by combining different modules.\n\n\nSupport of multiple frameworks out of box\nThe toolbox directly supports popular and contemporary detection frameworks, e.g. Faster RCNN, Mask RCNN, RetinaNet, etc.\n\n\nHigh efficiency\nAll basic bbox and mask operations run on GPUs. The training speed is faster than or comparable to other codebases, including Detectron2, maskrcnn-benchmark and SimpleDet.\n\n\nState of the art\nThe toolbox stems from the codebase developed by the MMDet team, who won COCO Detection Challenge in 2018, and we keep pushing it forward.\n\n\nApart from MMDetection, we also released a library mmcv for computer vision research, which is heavily depended on by this toolbox.\nLicense\nThis project is released under the Apache 2.0 license.\nChangelog\nv2.6.0 was released in 1\/11\/2020.\nPlease refer to changelog.md for details and release history.\nA comparison between v1.x and v2.0 codebases can be found in compatibility.md.\nBenchmark and model zoo\nResults and models are available in the model zoo.\nSupported backbones:\n\n ResNet\n ResNeXt\n VGG\n HRNet\n RegNet\n Res2Net\n\nSupported methods:\n\n RPN\n Fast R-CNN\n Faster R-CNN\n Mask R-CNN\n Cascade R-CNN\n Cascade Mask R-CNN\n SSD\n RetinaNet\n GHM\n Mask Scoring R-CNN\n Double-Head R-CNN\n Hybrid Task Cascade\n Libra R-CNN\n Guided Anchoring\n FCOS\n RepPoints\n Foveabox\n FreeAnchor\n NAS-FPN\n ATSS\n FSAF\n PAFPN\n Dynamic R-CNN\n PointRend\n CARAFE\n DCNv2\n Group Normalization\n Weight Standardization\n OHEM\n Soft-NMS\n Generalized Attention\n GCNet\n Mixed Precision (FP16) Training\n InstaBoost\n GRoIE\n DetectoRS\n Generalized Focal Loss\n CornerNet\n Side-Aware Boundary Localization\n YOLOv3\n PAA\n YOLACT\n CentripetalNet\n VFNet\n\nSome other methods are also supported in projects using MMDetection.\nInstallation\nPlease refer to get_started.md for installation.\nGetting Started\nPlease see get_started.md for the basic usage of MMDetection.\nWe provide colab tutorial, and full guidance for quick run with existing dataset and with new dataset for beginners.\nThere are also tutorials for finetuning models, adding new dataset, designing data pipeline, customizing models, customizing runtime settings and useful tools.\nPlease refer to FAQ for frequently asked questions.\nContributing\nWe appreciate all contributions to improve MMDetection. Please refer to CONTRIBUTING.md for the contributing guideline.\nAcknowledgement\nMMDetection is an open source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks.\nWe wish that the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and develop their own new detectors.\nCitation\nIf you use this toolbox or benchmark in your research, please cite this project.\n@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n\nContact\nThis repo is currently maintained by Kai Chen (@hellock), Yuhang Cao (@yhcao6), Wenwei Zhang (@ZwwWayne),\nJiarui Xu (@xvjiarui). Other core developers include Jiangmiao Pang (@OceanPang) and Jiaqi Wang (@myownskyW7).\n","108":"LabelImg\n\n\n\n\n\nLabelImg is a graphical image annotation tool.\nIt is written in Python and uses Qt for its graphical interface.\nAnnotations are saved as XML files in PASCAL VOC format, the format used\nby ImageNet.  Besides, it also supports YOLO format\n\n\nWatch a demo video\n\nInstallation\n\nBuild from source\nLinux\/Ubuntu\/Mac requires at least Python\n2.6 and has been tested with PyQt\n4.8. However, Python\n3 or above and  PyQt5 are strongly recommended.\n\nUbuntu Linux\nPython 3 + Qt5\nsudo apt-get install pyqt5-dev-tools\nsudo pip3 install -r requirements\/requirements-linux-python3.txt\nmake qt5py3\npython3 labelImg.py\npython3 labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]\n\nmacOS\nPython 3 + Qt5\nbrew install qt  # Install qt-5.x.x by Homebrew\nbrew install libxml2\n\nor using pip\n\npip3 install pyqt5 lxml # Install qt and lxml by pip\n\nmake qt5py3\npython3 labelImg.py\npython3 labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]\nPython 3 Virtualenv (Recommended)\nVirtualenv can avoid a lot of the QT \/ Python version issues\nbrew install python3\npip3 install pipenv\npipenv run pip install pyqt5==5.12.1 lxml\npipenv run make qt5py3\npython3 labelImg.py\n[Optional] rm -rf build dist; python setup.py py2app -A;mv \"dist\/labelImg.app\" \/Applications\nNote: The Last command gives you a nice .app file with a new SVG Icon in your \/Applications folder. You can consider using the script: build-tools\/build-for-macos.sh\n\nWindows\nInstall Python,\nPyQt5\nand install lxml.\nOpen cmd and go to the labelImg directory\npyrcc4 -o lib\/resources.py resources.qrc\nFor pyqt5, pyrcc5 -o libs\/resources.py resources.qrc\n\npython labelImg.py\npython labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]\n\nWindows + Anaconda\nDownload and install Anaconda (Python 3+)\nOpen the Anaconda Prompt and go to the labelImg directory\nconda install pyqt=5\nconda install -c anaconda lxml\npyrcc5 -o libs\/resources.py resources.qrc\npython labelImg.py\npython labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]\n\nGet from PyPI but only python3.0 or above\nThis is the simplest (one-command) install method on modern Linux distributions such as Ubuntu and Fedora.\npip3 install labelImg\nlabelImg\nlabelImg [IMAGE_PATH] [PRE-DEFINED CLASS FILE]\n\nUse Docker\ndocker run -it \\\n--user $(id -u) \\\n-e DISPLAY=unix$DISPLAY \\\n--workdir=$(pwd) \\\n--volume=\"\/home\/$USER:\/home\/$USER\" \\\n--volume=\"\/etc\/group:\/etc\/group:ro\" \\\n--volume=\"\/etc\/passwd:\/etc\/passwd:ro\" \\\n--volume=\"\/etc\/shadow:\/etc\/shadow:ro\" \\\n--volume=\"\/etc\/sudoers.d:\/etc\/sudoers.d:ro\" \\\n-v \/tmp\/.X11-unix:\/tmp\/.X11-unix \\\ntzutalin\/py2qt4\n\nmake qt4py2;.\/labelImg.py\nYou can pull the image which has all of the installed and required dependencies. Watch a demo video\n\nUsage\n\nSteps (PascalVOC)\n\nBuild and launch using the instructions above.\nClick 'Change default saved annotation folder' in Menu\/File\nClick 'Open Dir'\nClick 'Create RectBox'\nClick and release left mouse to select a region to annotate the rect\nbox\nYou can use right mouse to drag the rect box to copy or move it\n\nThe annotation will be saved to the folder you specify.\nYou can refer to the below hotkeys to speed up your workflow.\n\nSteps (YOLO)\n\nIn data\/predefined_classes.txt define the list of classes that will be used for your training.\nBuild and launch using the instructions above.\nRight below \"Save\" button in the toolbar, click \"PascalVOC\" button to switch to YOLO format.\nYou may use Open\/OpenDIR to process single or multiple images. When finished with a single image, click save.\n\nA txt file of YOLO format will be saved in the same folder as your image with same name. A file named \"classes.txt\" is saved to that folder too. \"classes.txt\" defines the list of class names that your YOLO label refers to.\nNote:\n\nYour label list shall not change in the middle of processing a list of images. When you save an image, classes.txt will also get updated, while previous annotations will not be updated.\nYou shouldn't use \"default class\" function when saving to YOLO format, it will not be referred.\nWhen saving as YOLO format, \"difficult\" flag is discarded.\n\n\nCreate pre-defined classes\nYou can edit the\ndata\/predefined_classes.txt\nto load pre-defined classes\n\nHotkeys\n\n\nCtrl + u\nLoad all of the images from a directory\n\nCtrl + r\nChange the default annotation target dir\n\nCtrl + s\nSave\n\nCtrl + d\nCopy the current label and rect box\n\nCtrl + Shift + d\nDelete the current image\n\nSpace\nFlag the current image as verified\n\nw\nCreate a rect box\n\nd\nNext image\n\na\nPrevious image\n\ndel\nDelete the selected rect box\n\nCtrl++\nZoom in\n\nCtrl--\nZoom out\n\n\u2191\u2192\u2193\u2190             |  Keyboard arrows to move selected rect box\n\n\n\nVerify Image:\nWhen pressing space, the user can flag the image as verified, a green background will appear.\nThis is used when creating a dataset automatically, the user can then through all the pictures and flag them instead of annotate them.\nDifficult:\nThe difficult field is set to 1 indicates that the object has been annotated as \"difficult\", for example, an object which is clearly visible but difficult to recognize without substantial use of context.\nAccording to your deep neural network implementation, you can include or exclude difficult objects during training.\n\nHow to reset the settings\nIn case there are issues with loading the classes, you can either:\n\nFrom the top menu of the labelimg click on Menu\/File\/Reset All\n\nRemove the .labelImgSettings.pkl from your home directory. In Linux and Mac you can do:\nrm ~\/.labelImgSettings.pkl\n\n\n\n\nHow to contribute\nSend a pull request\n\nLicense\nFree software: MIT license\nCitation: Tzutalin. LabelImg. Git code (2015). https:\/\/github.com\/tzutalin\/labelImg\n\nRelated\n\nImageNet Utils to\ndownload image, create a label text for machine learning, etc\nUse Docker to run labelImg\nGenerating the PASCAL VOC TFRecord files\nApp Icon based on Icon by Nick Roach (GPL)\nSetup python development in vscode\nThe link of this project on iHub platform\n\n\nStargazers over time\n\n","109":"\ud83c\udf89Life is fantastic\ud83e\udd73!~\n\n\n\n\n\n\"Did you know all your doors were locked?\" - Riddick (The Chronicles of Riddick)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreated by\n  @kris\n\n\n\n\ud83d\udc95Website login model\n\u4e00\u4e9b\u722c\u866b\u793a\u4f8b\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u6a21\u62df\u767b\u9646\u7a0b\u5e8f,\u6a21\u62df\u767b\u9646\u57fa\u4e8e selenium\uff0c\u6709\u4e9b\u6a21\u62df\u767b\u5f55\u57fa\u4e8e js \u9006\u5411\uff0c\u6301\u7eed\u66f4\u65b0\uff0c\u6709\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u63d0\u4ea4 Issues\uff0c\u6b22\u8fce\u63d0\u4ea4 PR, \u6d4b\u8bd5\u901a\u8fc7\u53ef\u4ee5\u76f4\u63a5 merge\uff0c\u6587\u4e2d\u6240\u6709\u7a0b\u5e8f\u90fd\u662f\u4f7f\u7528 python3 \u7f16\u5199 :-)\nAbout\n\u6a21\u62df\u767b\u9646\u57fa\u672c\u91c7\u7528\u7684\u662f\u76f4\u63a5\u767b\u5f55\u6216\u8005\u4f7f\u7528selenium+webdriver\u7684\u65b9\u5f0f\uff0c\u6709\u7684\u7f51\u7ad9\u76f4\u63a5\u767b\u5f55\u96be\u5ea6\u5f88\u5927\uff0c\u6bd4\u5982qq\u7a7a\u95f4\uff0cbilibili\u7b49\u5982\u679c\u91c7\u7528selenium\u5c31\u76f8\u5bf9\u8f7b\u677e\u4e00\u4e9b\u3002\n\u867d\u7136\u5728\u767b\u5f55\u7684\u65f6\u5019\u91c7\u7528\u7684\u662fselenium,\u4e3a\u4e86\u6548\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u767b\u5f55\u8fc7\u540e\u5f97\u5230\u7684cookie\u7ef4\u62a4\u8d77\u6765\uff0c\u7136\u540e\u8c03\u7528requests\u6216\u8005scrapy\u7b49\u8fdb\u884c\u6570\u636e\u91c7\u96c6\uff0c\u8fd9\u6837\u6570\u636e\u91c7\u96c6\u7684\u901f\u5ea6\u53ef\u4ee5\u5f97\u5230\u4fdd\u8bc1\u3002\nWebDriver\nChrome\nFireFox\nCompleted\n\n \u867e\u7c73\u97f3\u4e50\n Facebook\n \u5fae\u535a\u7f51\u9875\u7248\n \u77e5\u4e4e\n QQZone\n CSDN\n \u6dd8\u5b9d-\u63a5\u53e3\u4fee\u590d\u5b8c\u6210-\u53ef\u7528\n CSDN--\u5df2\u91cd\u6784\n Baidu\n \u679c\u58f3\n JingDong \u6a21\u62df\u767b\u5f55\u548c\u81ea\u52a8\u7533\u8bf7\u4eac\u4e1c\u8bd5\u7528\n 163mail\n \u62c9\u94a9\n Bilibili\n \u8c46\u74e3\n \u8c46\u74e3spider\n Baidu\n \u730e\u8058\u7f51\n \u5fae\u4fe1\u7f51\u9875\u7248\u767b\u5f55\u5e76\u83b7\u53d6\u597d\u53cb\u5217\u8868\n Github\n \u722c\u53d6\u56fe\u866b\u76f8\u5e94\u7684\u56fe\u7247\n \u7f51\u6613\u4e91\u97f3\u4e50\n \u7cd7\u4e8b\u767e\u79d1--\u6539\u4e3a\u534f\u7a0b\u7248\n \u767e\u5ea6\u8d34\u5427spider\n \u767e\u5ea6\u7ffb\u8bd1\n\ncatalogue\n\n \u867e\u7c73\u97f3\u4e50\n Facebook\u6a21\u62df\u767b\u5f55\n \u5fae\u535a\u7f51\u9875\u7248\u6a21\u62df\u767b\u5f55\n QQZone\u6a21\u62df\u767b\u5f55\n CSDN\u6a21\u62df\u767b\u5f55--\u5df2\u6062\u590d\n \u6dd8\u5b9d\u722c\u866b--\u91cd\u6784\u4e2d\n Baidu\u6a21\u62df\u767b\u5f55\u4e00\n \u679c\u58f3\u722c\u866b\u7a0b\u5e8f\n JingDong \u6a21\u62df\u767b\u5f55\u548c\u81ea\u52a8\u7533\u8bf7\u4eac\u4e1c\u8bd5\u7528\n 163mail--\u5df2\u6062\u590d\n \u62c9\u94a9\u6a21\u62df\u767b\u5f55--\u5df2\u5931\u6548\n Bilibili\u6a21\u62df\u767b\u5f55\n \u8c46\u74e3\n Baidu2\u6a21\u62df\u767b\u5f55\n \u730e\u8058\u7f51\u6a21\u62df\u767b\u5f55\n \u5fae\u4fe1\u7f51\u9875\u7248\u767b\u5f55\u5e76\u83b7\u53d6\u597d\u53cb\u5217\u8868\n Github\u6a21\u62df\u767b\u5f55\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\u90fd\u53ef\u884c\n \u722c\u53d6\u56fe\u866b\u60f3\u8981\u7684\u56fe\u7247\n \u7f51\u6613\u4e91\u97f3\u4e50downloader\n \u7cd7\u4e8b\u767e\u79d1\u722c\u866b\n \u6dd8\u5b9d\u767b\u9646-\u8bbf\u95ee\n\nTest\n\nPlease touch here to view test images\n\nInformations\n\n\u4e3a\u611f\u8c22\u4f60\u4eec\u7684\u652f\u6301\uff0c\u51c6\u5907\u5199\u4e00\u5957\u514d\u8d39\u722c\u866b\u7684\u6559\u7a0b\uff0c\u4fdd\u8bc1\u4f60\u5b66\u4f1a\u4ee5\u540e\u53ef\u4ee5\u722c\u53d6\u5e02\u9762\u4e0a\u5927\u90e8\u5206\u7684\u7f51\u7ad9\uff0c\u6559\u7a0b\u5730\u5740\n\ntips of pull request\n\n\u6b22\u8fce\u5927\u5bb6\u4e00\u8d77\u6765 pull request \ud83d\udc97\n\nProblems\n\n\u5173\u4e8e\u9a8c\u8bc1\u7801\uff1a\u672c\u9879\u76ee\u6240\u7528\u7684\u65b9\u6cd5\u90fd\u6ca1\u6709\u5904\u7406\u9a8c\u8bc1\u7801\uff0c\u8bc6\u522b\u590d\u6742\u9a8c\u8bc1\u7801\u7684\u96be\u5ea6\u5c31\u76ee\u524d\u6765\u8bf4\uff0c\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\u4ee5\u6211\u7684\u5fc3\u5f97\u6765\u8bf4\uff0c\u505a\u722c\u866b\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u5c3d\u91cf\u89c4\u907f\u9a8c\u8bc1\u7801\u3002\n\u4ee3\u7801\u5931\u6548\uff1a\u7531\u4e8e\u7f51\u7ad9\u7b56\u7565\u6216\u8005\u6837\u5f0f\u6539\u53d8\uff0c\u5bfc\u81f4\u4ee3\u7801\u5931\u6548\uff0c\u8bf7\u7ed9\u6211\u63d0issue\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u89e3\u51b3\uff0c\u53ef\u4ee5\u63d0PR\uff0c\u8c22\u8c22\uff01\n\u6b63\u5728\u5bf9\u90e8\u5206\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\u3002\u3002\u3002\n\u5982\u679c\u8be5repo\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff0c\u8bb0\u5f97 star \u54e6\u3002\n\nAcknowledgments\n\n@deepforce | @cclauss | ksoeasyxiaosi | JasonJunJun | MediocrityXT\n\n\n\u611f\u8c22\u4ee5\u4e0a\u5f00\u53d1\u8005\u7684\u652f\u6301\u548c\u8d21\u732e\u3002\n\n\u8054\u7cfb\u6211\n\n\u6b22\u8fce\u53cd\u9988\uff01\nMy Email : criselyj@163.com\n\n\u6ce8\u610f\uff1a\n\n\u672c\u9879\u76ee\u4ec5\u7528\u4e8e\u5b66\u4e60\u548c\u4ea4\u6d41\n\n\n\u6b22\u8fce\u4efb\u4f55\u4eba\u53c2\u4e0e\u548c\u5b8c\u5584\uff1a\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8d70\u7684\u5f88\u5feb\uff0c\u4f46\u662f\u4e00\u7fa4\u4eba\u5374\u53ef\u4ee5\u8d70\u7684\u66f4\u8fdc\n\n","110":"wxpy: \u7528 Python \u73a9\u5fae\u4fe1\n\n\n\n\n\n\n\u5fae\u4fe1\u673a\u5668\u4eba \/ \u53ef\u80fd\u662f\u6700\u4f18\u96c5\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7 API\nwxpy \u5728 itchat \u7684\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u5927\u91cf\u63a5\u53e3\u4f18\u5316\u63d0\u5347\u4e86\u6a21\u5757\u7684\u6613\u7528\u6027\uff0c\u5e76\u8fdb\u884c\u4e30\u5bcc\u7684\u529f\u80fd\u6269\u5c55\n\n\nAttention!\n\n\u5f3a\u70c8\u5efa\u8bae\u4ec5\u4f7f\u7528\u5c0f\u53f7\u8fd0\u884c\u673a\u5668\u4eba\uff01\n\n\n\u4ece\u8fd1\u671f (17\u5e746\u6708\u4e0b\u65ec) \u53cd\u9988\u6765\u770b\uff0c\u4f7f\u7528\u673a\u5668\u4eba\u5b58\u5728\u4e00\u5b9a\u6982\u7387\u88ab\u9650\u5236\u767b\u5f55\u7684\u53ef\u80fd\u6027\u3002\n\u4e3b\u8981\u8868\u73b0\u4e3a\u65e0\u6cd5\u767b\u9646 Web \u5fae\u4fe1 (\u4f46\u4e0d\u5f71\u54cd\u624b\u673a\u7b49\u5176\u4ed6\u5e73\u53f0)\u3002\n\n\n\n\u7528\u6765\u5e72\u5565\n\u4e00\u4e9b\u5e38\u89c1\u7684\u573a\u666f\n\n\u63a7\u5236\u8def\u7531\u5668\u3001\u667a\u80fd\u5bb6\u5c45\u7b49\u5177\u6709\u5f00\u653e\u63a5\u53e3\u7684\u73a9\u610f\u513f\n\u8fd0\u884c\u811a\u672c\u65f6\u81ea\u52a8\u628a\u65e5\u5fd7\u53d1\u9001\u5230\u4f60\u7684\u5fae\u4fe1\n\u52a0\u7fa4\u4e3b\u4e3a\u597d\u53cb\uff0c\u81ea\u52a8\u62c9\u8fdb\u7fa4\u4e2d\n\u8de8\u53f7\u6216\u8de8\u7fa4\u8f6c\u53d1\u6d88\u606f\n\u81ea\u52a8\u966a\u4eba\u804a\u5929\n\u9017\u4eba\u73a9\n...\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u53ef\u7528\u6765\u5b9e\u73b0\u5404\u79cd\u5fae\u4fe1\u4e2a\u4eba\u53f7\u7684\u81ea\u52a8\u5316\u64cd\u4f5c\n\n\u8f7b\u677e\u5b89\u88c5\nwxpy \u652f\u6301 Python 3.4-3.6\uff0c\u4ee5\u53ca 2.7 \u7248\u672c\n\u5c06\u4e0b\u65b9\u547d\u4ee4\u4e2d\u7684 \"pip\" \u66ff\u6362\u4e3a \"pip3\" \u6216 \"pip2\"\uff0c\u53ef\u786e\u4fdd\u5b89\u88c5\u5230\u5bf9\u5e94\u7684 Python \u7248\u672c\u4e2d\n\n\u4ece PYPI \u5b98\u65b9\u6e90\u4e0b\u8f7d\u5b89\u88c5 (\u5728\u56fd\u5185\u53ef\u80fd\u6bd4\u8f83\u6162\u6216\u4e0d\u7a33\u5b9a):\n\npip install -U wxpy\n\n\u4ece\u8c46\u74e3 PYPI \u955c\u50cf\u6e90\u4e0b\u8f7d\u5b89\u88c5 (\u63a8\u8350\u56fd\u5185\u7528\u6237\u9009\u7528):\n\npip install -U wxpy -i \"https:\/\/pypi.doubanio.com\/simple\/\"\n\n\u7b80\u5355\u4e0a\u624b\n\u767b\u9646\u5fae\u4fe1:\n# \u5bfc\u5165\u6a21\u5757\nfrom wxpy import *\n# \u521d\u59cb\u5316\u673a\u5668\u4eba\uff0c\u626b\u7801\u767b\u9646\nbot = Bot()\n\u627e\u5230\u597d\u53cb:\n# \u641c\u7d22\u540d\u79f0\u542b\u6709 \"\u6e38\u5426\" \u7684\u7537\u6027\u6df1\u5733\u597d\u53cb\nmy_friend = bot.friends().search('\u6e38\u5426', sex=MALE, city=\"\u6df1\u5733\")[0]\n\u53d1\u9001\u6d88\u606f:\n# \u53d1\u9001\u6587\u672c\u7ed9\u597d\u53cb\nmy_friend.send('Hello WeChat!')\n# \u53d1\u9001\u56fe\u7247\nmy_friend.send_image('my_picture.jpg')\n\u81ea\u52a8\u54cd\u5e94\u5404\u7c7b\u6d88\u606f:\n# \u6253\u5370\u6765\u81ea\u5176\u4ed6\u597d\u53cb\u3001\u7fa4\u804a\u548c\u516c\u4f17\u53f7\u7684\u6d88\u606f\n@bot.register()\ndef print_others(msg):\n    print(msg)\n\n# \u56de\u590d my_friend \u7684\u6d88\u606f (\u4f18\u5148\u5339\u914d\u540e\u6ce8\u518c\u7684\u51fd\u6570!)\n@bot.register(my_friend)\ndef reply_my_friend(msg):\n    return 'received: {} ({})'.format(msg.text, msg.type)\n\n# \u81ea\u52a8\u63a5\u53d7\u65b0\u7684\u597d\u53cb\u8bf7\u6c42\n@bot.register(msg_types=FRIENDS)\ndef auto_accept_friends(msg):\n    # \u63a5\u53d7\u597d\u53cb\u8bf7\u6c42\n    new_friend = msg.card.accept()\n    # \u5411\u65b0\u7684\u597d\u53cb\u53d1\u9001\u6d88\u606f\n    new_friend.send('\u54c8\u54c8\uff0c\u6211\u81ea\u52a8\u63a5\u53d7\u4e86\u4f60\u7684\u597d\u53cb\u8bf7\u6c42')\n\u4fdd\u6301\u767b\u9646\/\u8fd0\u884c:\n# \u8fdb\u5165 Python \u547d\u4ee4\u884c\u3001\u8ba9\u7a0b\u5e8f\u4fdd\u6301\u8fd0\u884c\nembed()\n\n# \u6216\u8005\u4ec5\u4ec5\u5835\u585e\u7ebf\u7a0b\n# bot.join()\n\n\u6a21\u5757\u7279\u8272\n\n\u5168\u9762\u5bf9\u8c61\u5316\u63a5\u53e3\uff0c\u8c03\u7528\u66f4\u4f18\u96c5\n\n\u9ed8\u8ba4\u591a\u7ebf\u7a0b\u54cd\u5e94\u6d88\u606f\uff0c\u56de\u590d\u66f4\u5feb\n\n\u5305\u542b \u804a\u5929\u673a\u5668\u4eba\u3001\u5171\u540c\u597d\u53cb \u7b49 \u5b9e\u7528\u7ec4\u4ef6\n\n\u53ea\u9700\u4e24\u884c\u4ee3\u7801\uff0c\u5728\u5176\u4ed6\u9879\u76ee\u4e2d\u7528\u5fae\u4fe1\u63a5\u6536\u8b66\u544a\n\n\u6109\u5feb\u7684\u63a2\u7d22\u548c\u8c03\u8bd5\uff0c\u65e0\u9700\u6d82\u6d82\u6539\u6539\n\n\u53ef\u6df7\u5408\u4f7f\u7528 itchat \u7684\u539f\u63a5\u53e3\n\n\u5f53\u7136\uff0c\u8fd8\u8986\u76d6\u4e86\u5404\u7c7b\u5e38\u89c1\u57fa\u672c\u529f\u80fd:\n\n\n\u53d1\u9001\u6587\u672c\u3001\u56fe\u7247\u3001\u89c6\u9891\u3001\u6587\u4ef6\n\u901a\u8fc7\u5173\u952e\u8bcd\u6216\u7528\u6237\u5c5e\u6027\u641c\u7d22 \u597d\u53cb\u3001\u7fa4\u804a\u3001\u7fa4\u6210\u5458\u7b49\n\u83b7\u53d6\u597d\u53cb\/\u7fa4\u6210\u5458\u7684\u6635\u79f0\u3001\u5907\u6ce8\u3001\u6027\u522b\u3001\u5730\u533a\u7b49\u4fe1\u606f\n\u52a0\u597d\u53cb\uff0c\u5efa\u7fa4\uff0c\u9080\u8bf7\u5165\u7fa4\uff0c\u79fb\u51fa\u7fa4\n\n\n\n\n\n\u8bf4\u660e\u6587\u6863\nhttp:\/\/wxpy.readthedocs.io\n\n\u66f4\u65b0\u65e5\u5fd7\nhttps:\/\/github.com\/youfou\/wxpy\/releases\n\n\u9879\u76ee\u4e3b\u9875\nhttps:\/\/github.com\/youfou\/wxpy\n","111":"\nWe have made you a wrapper you can't refuse\nWe have a vibrant community of developers helping each other in our Telegram group. Join us!\nStay tuned for library updates and new releases on our Telegram Channel.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of contents\n\nIntroduction\nTelegram API support\nInstalling\nGetting started\nLearning by example\nLogging\nDocumentation\n\n\nGetting help\nContributing\nLicense\n\n\nIntroduction\nThis library provides a pure Python interface for the\nTelegram Bot API.\nIt's compatible with Python versions 3.6+. PTB might also work on PyPy, though there have been a lot of issues before. Hence, PyPy is not officially supported.\nIn addition to the pure API implementation, this library features a number of high-level classes to\nmake the development of bots easy and straightforward. These classes are contained in the\ntelegram.ext submodule.\n\nTelegram API support\nAll types and methods of the Telegram Bot API 4.8 are supported.\n\nInstalling\nYou can install or upgrade python-telegram-bot with:\n$ pip install python-telegram-bot --upgrade\nOr you can install from source with:\n$ git clone https:\/\/github.com\/python-telegram-bot\/python-telegram-bot --recursive\n$ cd python-telegram-bot\n$ python setup.py install\nIn case you have a previously cloned local repository already, you should initialize the added urllib3 submodule before installing with:\n$ git submodule update --init --recursive\n\nGetting started\nOur Wiki contains a lot of resources to get you started with python-telegram-bot:\n\nIntroduction to the API\nTutorial: Your first Bot\n\nOther references:\n\nTelegram API documentation\npython-telegram-bot documentation\n\n\nLearning by example\nWe believe that the best way to learn this package is by example. Here\nare some examples for you to review. Even if it is not your approach for learning, please take a\nlook at echobot.py, it is the de facto base for most of the bots out there. Best of all,\nthe code for these examples are released to the public domain, so you can start by grabbing the\ncode and building on top of it.\nVisit this page to discover the official examples or look at the examples on the wiki to see other bots the community has built.\n\nLogging\nThis library uses the logging module. To set up logging to standard output, put:\nimport logging\nlogging.basicConfig(level=logging.DEBUG,\n                    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nat the beginning of your script.\nYou can also use logs in your application by calling logging.getLogger() and setting the log level you want:\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\nIf you want DEBUG logs instead:\nlogger.setLevel(logging.DEBUG)\n\nDocumentation\npython-telegram-bot's documentation lives at readthedocs.io.\n\nGetting help\nYou can get help in several ways:\n\nWe have a vibrant community of developers helping each other in our Telegram group. Join us!\nIn case you are unable to join our group due to Telegram restrictions, you can use our IRC channel.\nReport bugs, request new features or ask questions by creating an issue.\nOur Wiki pages offer a growing amount of resources.\nYou can even ask for help on Stack Overflow using the python-telegram-bot tag.\n\n\nContributing\nContributions of all sizes are welcome. Please review our contribution guidelines to get started. You can also help by reporting bugs.\n\nLicense\nYou may copy, distribute and modify the software provided that modifications are described and licensed for free under LGPL-3. Derivatives works (including modifications or anything statically linked to the library) can only be redistributed under LGPL-3, but applications that use the library don't have to be.\n","112":"Words Commonly Mispronounced by Chinese Programmers\n\u4e2d\u56fd\u7a0b\u5e8f\u5458\u5bb9\u6613\u53d1\u97f3\u9519\u8bef\u7684\u5355\u8bcd(\u70b9\u51fb\ud83d\udd0a\u6536\u542c\u6b63\u786e\u8bfb\u97f3)\n\n\n\n\u5355\u8bcd\n\u6b63\u786e\u53d1\u97f3\uff08\u82f1\u97f3\uff09\n\u6b63\u786e\u53d1\u97f3\uff08\u7f8e\u97f3\uff09\n\u9519\u8bef\u53d1\u97f3\n\n\n\n\naccess\n\ud83d\udd0a  \/'\u00e6kses\/\n\ud83d\udd0a  \/\u02c8\u00e6kses\/\n\u274c \/\u0259k'ses\/\n\n\nAdobe\n\ud83d\udd0a  \/\u0259'd\u0259\u028abi\/\n\ud83d\udd0a  \/\u0259'd\u0259\u028abi\/\n\u274c \/\u0259\u02c8dub\/\n\n\nadmin\n\ud83d\udd0a  \/'\u00e6dm\u026an\/\n\ud83d\udd0a  \/\u02c8\u00e6dm\u026an\/\n\u274c \/\u025c:d'm\u026an\/\n\n\nadversarial\n\ud83d\udd0a  \/\u02cc\u00e6dv\u0259\u02c8se\u0259ri\u0259l\/\n\ud83d\udd0a   \/\u02cc\u00e6dv\u0259r\u02c8seri\u0259l\/\n\u274c \/\u0259d\u02c8v\u025c\u02d0rs\u0259ri\u0259l\/\n\n\nagile\n\ud83d\udd0a  \/'\u00e6d\u0292a\u026al\/\n\ud83d\udd0a  \/\u02c8\u00e6d\u0292l\/\n\u274c \/\u0259'd\u0292a\u026al\/\n\n\namazon\n\ud83d\udd0a  \/'\u00e6m\u0259z\u0259n\/\n\ud83d\udd0a  \/\u02c8\u00e6m\u0259z\u0251\u02d0n\/\n\u274c \/'\u0259meiz\u0259n\/ \/\u0259'meiz\u0259n\/\n\n\nanalogy\n\ud83d\udd0a  \/\u0259\u02c8n\u00e6l\u0259d\u0292i\/\n\ud83d\udd0a  \/\u0259\u02c8n\u00e6l\u0259d\u0292i\/\n\u274c \/\u00e6n\u0259'l\u0252d\u0292i\/\n\n\nAngular\n\ud83d\udd0a  \/'\u00e6\u014bgj\u028al\u0259\/\n\ud83d\udd0a  \/\u02c8\u00e6\u014b\u0261j\u0259l\u0259r\/\n\u274c \/'\u00e6\u014b\u0261\u0259l\u0259\/ \/'\u00e6\u014bd\u0292\u028cl\u0259\/\n\n\nAJAX\n\ud83d\udd0a  \/'eid\u0292\u00e6ks\/\n\ud83d\udd0a  \/'eid\u0292\u00e6ks\/\n\u274c \/\u0259'd\u0292\u028cks\/\n\n\nalias\n\ud83d\udd0a  \/\u02c8e\u026ali\u0259s\/\n\ud83d\udd0a  \/\u02c8e\u026ali\u0259s\/\n\u274c \/\u0259'lais\/\n\n\nApache\n\ud83d\udd0a  \/\u0259'p\u00e6t\u0283\u026a\/\n\ud83d\udd0a  \/\u0259\u02c8p\u00e6t\u0283i\/\n\u274c \/\u028cp\u028ct\u0283\/\n\n\napp\n\ud83d\udd0a  \/\u00e6p\/\n\ud83d\udd0a  \/\u00e6p\/\n\u274c \/eipi'pi\/\n\n\narchive\n\ud83d\udd0a  \/'\u0251\u02d0ka\u026av\/\n\ud83d\udd0a  \/'\u0251\u02d0ka\u026av\/\n\u274c \/'\u0259t\u0283\u026av\/\n\n\narray\n\ud83d\udd0a  \/\u0259'rei\/\n\ud83d\udd0a  \/\u0259\u02c8re\u026a\/\n\u274c \/\u00e6'rei\/\n\n\nASCII\n\ud83d\udd0a  \/'\u00e6ski\/\n\ud83d\udd0a  \/\u02c8\u00e6ski\/\n\u274c \/\u0251\u02d0sk\/\n\n\naspect\n\ud83d\udd0a  \/'\u00e6spekt\/\n\ud83d\udd0a  \/\u02c8\u00e6spekt\/\n\u274c \/\u0259'spekt\/\n\n\navatar\n\ud83d\udd0a  \/'\u00e6v\u0259t\u0251\u02d0\/\n\ud83d\udd0a  \/\u02c8\u00e6v\u0259t\u0251\u02d0r\/\n\u274c \/\u0259'v\u028ct\u0251\/\n\n\nAzure\n\ud83d\udd0a  \/'\u00e6\u0292\u0259\/\n\ud83d\udd0a  \/\u02c8\u00e6\u0292\u0259r\/\n\u274c \/\u02c8\u00e6z\u028a\u0292\u0259\/\n\n\nbind\n\ud83d\udd0a  \/ba\u026and\/\n\ud83d\udd0a  \/ba\u026and\/\n\u274c \/b\u026and\/\n\n\ncache\n\ud83d\udd0a  \/k\u00e6\u0283\/\n\ud83d\udd0a  \/k\u00e6\u0283\/\n\u274c \/k\u00e6t\u0283\/\n\n\nclang\n\ud83d\udd0a  \/kl\u00e6\u014b\/\n\ud83d\udd0a  \/kl\u00e6\u014b\/\n\u274c \/s\u026al\u00e6\u014b\/\n\n\ndaemon\n\ud83d\udd0a  \/'di\u02d0m\u0259n\/\n\ud83d\udd0a  \/\u02c8di\u02d0m\u0259n\/\n\u274c \/d\u00e6m\u0259n\/\n\n\ndebt\n\ud83d\udd0a  \/det\/\n\ud83d\udd0a  \/det\/\n\u274c \/de'bit\/\n\n\ndeny\n\ud83d\udd0a  \/d\u026a'na\u026a\/\n\ud83d\udd0a  \/d\u026a\u02c8na\u026a\/\n\u274c \/'d\u00e6ni\/\n\n\ndeprecate\n\ud83d\udd0a \/\u02c8depr\u0259ke\u026at\/\n\ud83d\udd0a \/\u02c8depr\u0259ke\u026at\/\n\n\n\ndeque\n\ud83d\udd0a  \/'dek\/\n\ud83d\udd0a  \/d\u025bk\/\n\u274c \/di'kju\/\n\n\ndigest\n\ud83d\udd0a  n. \/'d\u0251\u026ad\u0292\u025bst\/ v. \/d\u0251\u026a'd\u0292\u025bst\/\n\ud83d\udd0a  \/da\u026a\u02c8d\u0292est,d\u026a\u02c8d\u0292est\/\n\u274c \/'d\u026ag\u025bst\/\n\n\nDijkstra\n\ud83d\udd0a  Dutch:\/\u02c8d\u025bikstra\/ English:\/\u02c8da\u026akstr\u0259\/\n\ud83d\udd0a\n\n\n\nDjango\n\ud83d\udd0a  \/\u02c8d\u0292\u00e6\u014b\u0261o\u028a\/\n\ud83d\udd0a  \/\u02c8d\u0292\u00e6\u014b\u0261o\u028a\/\n\u274c \/di\u02c8d\u0292\u00e6\u014b\u0261o\u028a\/\n\n\ndoc\n\ud83d\udd0a  \/d\u0252k\/\n\ud83d\udd0a  \/d\u0252k\/\n\u274c \/da\u028ak\/\n\n\nepoch\n\ud83d\udd0a  \/\u02c8i\u02d0p\u0252k\/\n\ud83d\udd0a  \/\u02c8ep\u0259k\/\n\u274c \/'\u025bp\u0259t\u0283\/\n\n\nexecute\n\ud83d\udd0a \/\u02c8eks\u026akju\u02d0t\/\n\ud83d\udd0a \/\u02c8eks\u026akju\u02d0t\/\n\n\n\nexecutor\n\ud83d\udd0a \/\u026a\u0261\u02c8zekj\u0259t\u0259(r)\/\n\ud83d\udd0a \/\u026a\u0261\u02c8zekj\u0259t\u0259r\/\n\n\n\nevent\n\ud83d\udd0a  \/\u026a'vent\/\n\ud83d\udd0a  \/\u026a\u02c8vent\/\n\u274c \/'\u026av\u0259nt\/\n\n\nfacade\n\ud83d\udd0a  \/f\u0259's\u0251\u02d0d\/\n\ud83d\udd0a  \/f\u0259\u02c8s\u0251\u02d0d\/\n\u274c \/'feikeid\/\n\n\nfedora\n\ud83d\udd0a  \/f\u026a'd\u0254\u02d0r\u0259\/\n\ud83d\udd0a  \/f\u026a\u02c8d\u0254\u02d0r\u0259\/\n\u274c \/'fed\u0259r\u0259\/\n\n\nformat\n\ud83d\udd0a  \/'f\u0254\u02d0m\u00e6t\/\n\ud83d\udd0a  \/\u02c8f\u0254\u02d0rm\u00e6t\/\n\u274c \/f\u0254'm\u00e6t\/\n\n\ngauge\n\ud83d\udd0a \/\u0261e\u026ad\u0292\/\n\ud83d\udd0a \/\u0261e\u026ad\u0292\/\n\u274c \/\u0261\u0251ud\u0292\/\n\n\nGit\n\ud83d\udd0a  \/\u0261\u026at\/\n\ud83d\udd0a  \/\u0261\u026at\/\n\u274c \/d\u0292\u026at\/\n\n\nGNU\n\ud83d\udd0a  \/gnu:\/\n\ud83d\udd0a  \/nu\u02d0,nju\u02d0\/\n\n\n\nGrafana\n\ud83d\udd0a   \/gr\u0259\u02c8f\u0251\u02d0n\u02cc\u0251\u02d0\/\n\ud83d\udd0a   \/gr\u0259\u02c8f\u0251\u02d0n\u02cc\u0251\u02d0\/\n\n\n\nGraphQL\n\ud83d\udd0a  \/gr\u00e6f kju \u025bl\/\n\ud83d\udd0a  \/gr\u00e6f kju \u025bl\/\n\u274c \/d\u0292\u026agr\u00e6f kju \u025bl\/\n\n\nGUI\n\ud83d\udd0a  \/\u02c8\u0261u:i\/\n\ud83d\udd0a  \/\u02c8\u0261u:i\/\n\n\n\nHaskell\n\ud83d\udd0a  \/\u02c8h\u00e6sk\u0259l\/\n\ud83d\udd0a  \/\u02c8h\u00e6sk\u0259l\/\n\u274c \/h\u00e6\u02c8sk\u0259l\/\n\n\nheight\n\ud83d\udd0a  \/ha\u026at\/\n\ud83d\udd0a  \/ha\u026at\/\n\u274c \/he\u026at\/\n\n\nhidden\n\ud83d\udd0a  \/'h\u026adn\/\n\ud83d\udd0a  \/\u02c8h\u026adn\/\n\u274c \/'ha\u026adn\/\n\n\nimage\n\ud83d\udd0a  \/'\u026am\u026ad\u0292\/\n\ud83d\udd0a  \/\u02c8\u026am\u026ad\u0292\/\n\u274c \/\u026a'me\u026ad\u0292\/\n\n\nimplement\n\ud83d\udd0a  \/'\u026ampl\u026am(\u0259)nt\/\n\ud83d\udd0a  \/\u02c8\u026ampl\u026am\u0259nt\/ \/\u02c8\u026ampl\u0259\u02ccment\/\n\u274c \/\u026am'plem(\u0259)nt\/\n\n\ninteger\n\ud83d\udd0a  \/'\u026ant\u026ad\u0292\u0259\/\n\ud83d\udd0a  \/\u02c8\u026ant\u026ad\u0292\u0259r\/\n\u274c \/\u02c8\u026anta\u026ag\u0259\/\n\n\nissue\n\ud83d\udd0a  \/'\u026a\u0283u\u02d0\/\n\ud83d\udd0a  \/\u02c8\u026a\u0283u\u02d0\/\n\u274c \/\u02c8a\u026a\u0283u\u02d0\/\n\n\nJava\n\ud83d\udd0a  \/'d\u0292\u0251\u02d0v\u0259\/\n\ud83d\udd0a  \/\u02c8d\u0292\u0251\u02d0v\u0259\/\n\u274c \/'d\u0292\u0251\u02d0v\u0251\u02d0\/\n\n\njpg\n\ud83d\udd0a  \/'d\u0292e\u026ape\u0261\/\n\ud83d\udd0a  \/'d\u0292e\u026ape\u0261\/\n\u274c \/\u02c8d\u0292e\u026a\u02c8pi:\u02c8d\u0292i\u02d0\/\n\n\nkey\n\ud83d\udd0a  \/ki\u02d0\/\n\ud83d\udd0a  \/ki\u02d0\/\n\u274c \/kei\/\n\n\nKubernetes*\n\ud83d\udd0a  \/kub\u0437'net\u026as\/\n\ud83d\udd0a  \/ku\u02d0b\u0259\u02de'netiz\/\n\n\n\nlambda\n\ud83d\udd0a  \/\u02c8l\u00e6md\u0259\/\n\ud83d\udd0a  \/\u02c8l\u00e6md\u0259\/\n\u274c \/\u02c8l\u0252\u014bmd\u0251\/\n\n\nlinear\n\ud83d\udd0a  \/'l\u026an\u026a\u0259\/\n\ud83d\udd0a  \/\u02c8l\u026ani\u0259r\/\n\u274c \/'la\u026a\u0259\/\n\n\nLinux\n\ud83d\udd0a  \/'l\u026an\u0259ks\/\n\ud83d\udd0a  \/\u02c8la\u026an\u0259ks\/ \/\u02c8l\u026an\u0259ks\/\n\u274c \/\u02c8l\u026an\u028cks\/ \/\u02c8l\u026anju\u02d0ks\/\n\n\nlocale\n\ud83d\udd0a  \/l\u0259\u028a'k\u0251\u02d0l\/\n\ud83d\udd0a  \/lo\u028a\u02c8k\u00e6l\/\n\u274c \/\u02c8lo\u028ak(\u0259)l\/\n\n\nLucene\n\ud83d\udd0a  \/lu'si\u02d0n\/\n\ud83d\udd0a  \/lu'si\u02d0n\/\n\u274c \/'lu:s\u0259n\/\n\n\nmain\n\ud83d\udd0a  \/me\u026an\/\n\ud83d\udd0a  \/me\u026an\/\n\u274c \/m\u026an\/\n\n\nmargin\n\ud83d\udd0a  \/'m\u0251\u02d0d\u0292\u026an\/\n\ud83d\udd0a  \/\u02c8m\u0251\u02d0rd\u0292\u026an\/\n\u274c \/'m\u028cg\u026an\/\n\n\nmatrix\n\ud83d\udd0a  \/\u02c8me\u026atr\u026aks\/\n\ud83d\udd0a  \/\u02c8me\u026atr\u026aks\/\n\u274c \/\u02c8m\u0251:tr\u026aks\/\n\n\nmaven\n\ud83d\udd0a  \/'me\u026avn\/\n\ud83d\udd0a  \/\u02c8me\u026avn\/\n\u274c \/'ma\u02d0vn\/\n\n\nMicrosoft\n\ud83d\udd0a  \/'maikr\u0259us\u0254ft\/\n\ud83d\udd0a  \/\u02c8ma\u026akr\u0259s\u0254\u02d0ft\/\n\u274c \/'mikr\u0259us\u0254ft\/\n\n\nmiscellaneous\n\ud83d\udd0a \/\u02ccm\u026as\u0259\u02c8le\u026ani\u0259s\/\n\ud83d\udd0a \/\u02ccm\u026as\u0259\u02c8le\u026ani\u0259s\/\n\n\n\nmodule\n\ud83d\udd0a  \/'m\u0252dju\u02d0l\/\n\ud83d\udd0a  \/\u02c8m\u0251\u02d0d\u0292u\u02d0l\/\n\u274c \/'m\u0259\u028adl\/\n\n\nnginx\nEngine X\nEngine X\n\n\n\nnull\n\ud83d\udd0a  \/n\u028cl\/\n\ud83d\udd0a  \/n\u028cl\/\n\u274c \/na\u028a\/\n\n\nobsolete\n\ud83d\udd0a \/\u02c8\u0252bs\u0259li\u02d0t\/\n\ud83d\udd0a \/\u02cc\u0251\u02d0bs\u0259\u02c8li\u02d0t\/\n\n\n\nOS X\nOS ten\nOS ten\n\u274c \/\u0254s eks\/\n\n\nphantom\n\ud83d\udd0a  \/'f\u00e6nt\u0259m\/\n\ud83d\udd0a  \/\u02c8f\u00e6nt\u0259m\/\n\u274c \/'p\u00e6nt\u0259m\/\n\n\nparameter\n\ud83d\udd0a  \/p\u0259'r\u00e6m\u026at\u0259\/\n\ud83d\udd0a  \/p\u0259\u02c8r\u00e6m\u026at\u0259r\/\n\u274c \/'p\u00e6r\u0259m\u026at\u0259\/\n\n\nprivilege\n\ud83d\udd0a  \/'pr\u026av\u0259l\u026ad\u0292\/\n\ud83d\udd0a  \/\u02c8pr\u026av\u0259l\u026ad\u0292\/\n\u274c \/'pr\u026av\u026al\u026ad\u0292\/\n\n\nPrometheus\n\ud83d\udd0a  \/pr\u0259-\u02c8m\u0113-th\u0113-\u0259s\/\n\ud83d\udd0a  \/pro'mi\u03b8\u026a\u0259s\/\n\n\n\nputty\n\ud83d\udd0a  \/\u02c8p\u028cti\/\n\ud83d\udd0a  \/\u02c8p\u028cti\/\n\u274c \/\u02c8pu\u02d0ti\/\n\n\nQt\n\ud83d\udd0a  \/kju\u02d0t\/\n\ud83d\udd0a  \/kju\u02d0t\/\n\n\n\nquery\n\ud83d\udd0a  \/'kw\u026a\u0259ri\/\n\ud83d\udd0a  \/\u02c8kw\u026ari\/\n\u274c \/'kwa\u026ari\/\n\n\nRealm\n\ud83d\udd0a  \/relm\/\n\ud83d\udd0a  \/relm\/\n\u274c \/ri\u0259lm\/\n\n\nreconcile\n\ud83d\udd0a \/\u02c8rek\u0259nsa\u026al\/\n\ud83d\udd0a \/\u02c8rek\u0259nsa\u026al\/\n\n\n\nRedux\n\ud83d\udd0a  \/ri'd\u028cks\/\n\ud83d\udd0a  \/ri'd\u028cks\/\n\u274c \/'ridju:ks\/\n\n\nresume\n\ud83d\udd0a   \/r\u026a'zju:m\/\n\ud83d\udd0a  \/r\u026a\u02c8zu\u02d0m\/\n\u274c  \/r\u026a'sju:m\/\n\n\nresolved\n\ud83d\udd0a  \/r\u026a'z\u0252lvd\/\n\ud83d\udd0a  \/r\u026a\u02c8z\u0251\u02d0lvd\/\n\u274c \/r\u026a's\u0259\u028avd\/\n\n\nresort\n\ud83d\udd0a  \/r\u026a\u02c8z\u0254:t\/\n\ud83d\udd0a  \/r\u026a\u02c8z\u0254\u02d0rt\/\n\u274c \/r\u026a\u02c8s\u0254:t\/\n\n\nretina\n\ud83d\udd0a  \/'ret\u026an\u0259\/\n\ud83d\udd0a  \/\u02c8ret\u026an\u0259\/\n\u274c \/ri'tina\/\n\n\nroute\n\ud83d\udd0a  \/ru\u02d0t\/\n\ud83d\udd0a  \/ru\u02d0t,ra\u028at\/\n\u274c \/r\u0259\u028at\/\n\n\nSan Jose\n\ud83d\udd0a  \/s\u00e6nh\u0259u'zei\/\n\ud83d\udd0a  \/s\u00e6nh\u0259u'zei\/\n\u274c \/s\u00e6n'ju:s\/\n\n\nsafari\n\ud83d\udd0a  \/s\u0259'f\u0251\u02d0r\u026a\/\n\ud83d\udd0a  \/s\u0259\u02c8f\u0251\u02d0ri\/\n\u274c \/s\u00e6f\u0259r\u026a\/\n\n\nscheme\n\ud83d\udd0a  \/ski\u02d0m\/\n\ud83d\udd0a  \/ski\u02d0m\/\n\u274c \/s'k\u00e6m\u0259\/\n\n\nscala\n\ud83d\udd0a  \/\u02c8sk\u0251\u02d0l\u0251\/\n\ud83d\udd0a  \/\u02c8sk\u0251\u02d0l\u0251\/\n\u274c \/\u02c8sk\u00e6\u02d0l\u0251\/\n\n\nsegue\n\ud83d\udd0a  \/'s\u025b\u0261we\/\n\ud83d\udd0a  \/\u02c8se\u0261we\u026a\/\n\u274c \/se'd\u0292\/\n\n\nSQL\n\/\u02c8si\u02d0kw\u0259l\/ \/\u02c8es\u02c8kju\u02d0\u02c8el\/\n\/\u02c8si\u02d0kw\u0259l\/ \/\u02c8es\u02c8kju\u02d0\u02c8el\/\n\n\n\nsudo\n\/'su\u02d0du\u02d0\/\n\/'su\u02d0du\u02d0\/\n\n\n\nsuite\n\ud83d\udd0a  \/swi\u02d0t\/\n\ud83d\udd0a  \/swi\u02d0t\/\n\u274c \/sju\u02d0t\/\n\n\nthymeleaf\n\ud83d\udd0a  \/\u02c8ta\u026am\u02ccl\u026a\u02d0f\/\n\ud83d\udd0a  \/\u02c8ta\u026am\u02ccl\u026a\u02d0f\/\n\u274c \/\u03b8i\u02d0m\u026al\u026a\u02d0f\/\n\n\ntuple\n\ud83d\udd0a \/tj\u028ap\u0259l\/\n\ud83d\udd0a \/tu\u02d0p\u0259l\/\n\n\n\ntypical\n\ud83d\udd0a  \/'t\u026ap\u026akl\/\n\ud83d\udd0a  \/\u02c8t\u026ap\u026akl\/\n\u274c \/'ta\u026ap\u026ak\u0259l\/\n\n\nUbuntu\n\ud83d\udd0a  \/\u028a'b\u028ant\u028a\/\n\ud83d\udd0a  \/\u028a'b\u028ant\u028a\/\n\u274c \/ju\u02d0'b\u028ant\u028a\/\n\n\nVagrant\n\ud83d\udd0a \/\u02c8ve\u026a\u0261r\u0259nt\/\n\ud83d\udd0a \/\u02c8ve\u026a\u0261r\u0259nt\/\n\/\u02c8vag\u0279ent\/\n\n\nvariable\n\ud83d\udd0a  \/'ve\u0259ri\u0259bl\/\n\ud83d\udd0a  \/\u02c8veri\u0259bl,\u02c8v\u00e6ri\u0259bl\/\n\u274c \/v\u0259'rai\u0259bl\/\n\n\nverbose\n\ud83d\udd0a  \/v\u025c\u02d0\u02c8b\u0259\u028as\/\n\ud83d\udd0a  \/v\u025c\u02d0r\u02c8bo\u028as\/\n\u274c \/'v\u025c\u02d0rbo\u028as\/\n\n\nvue\n\ud83d\udd0a  \/v'ju:\/\n\ud83d\udd0a  \/v'ju:\/\n\u274c \/v'ju:i\/\n\n\nwidth\n\ud83d\udd0a  \/w\u026ad\u03b8\/\n\ud83d\udd0a  \/w\u026ad\u03b8,w\u026at\u03b8\/\n\u274c \/wa\u026ad\u03b8\/\n\n\nYouTube\n\ud83d\udd0a  \/'ju\u02d0'tju\u02d0b\/\n\ud83d\udd0a  \/'ju\u02d0'tju\u02d0b\/\n\u274c \/'ju\u02d0't\u028ab\u026a\/\n\n\n\n\u9644\u6ce8\n\n\u5f53\u4f7f\u7528\u7b80\u540d \u2018Kube\u2019 \u79f0\u547c \u2018Kubernetes\u2019 \u65f6, \u53d1\u97f3\u5219\u4e0e \u2018cube\u2019(\/kju\u02d0b\/) \u4e00\u81f4\n\n\u5176\u4ed6\u76f8\u5173\u94fe\u63a5\n\n\u771f\u4eba\u53d1\u97f3 https:\/\/www.bilibili.com\/video\/bv1nv411i7z3 (by @hailintao)\n\u7b80\u6d01\u7684\u5355\u8bcd\u5217\u8868\uff0c\u6b63\u786e\u8bfb\u97f3\u4e0d\u7528\u518d\u6253\u5f00\u65b0\u7f51\u9875 https:\/\/cpwp.netlify.app\/ (by @antfu7)\n\u56fd\u9645\u97f3\u6807\u4e25\u5f0f\u8bb0\u97f3\uff08\u7ebd\u7ea6\u97f3\uff09https:\/\/github.com\/b1f6c1c4\/programming-pronunciations-en_US (by @b1f6c1c4)\n\n\u8bf4\u660e\n\n\u672c\u7740\u7b80\u5355\u7684\u539f\u5219, \u53c8\u4e3a\u4e86\u907f\u514d\u7a0b\u5e8f\u733f\u4eec\u51fa\u73b0\u9009\u62e9\u56f0\u96be\u75c7, '\u6b63\u786e\u97f3\u6807'\u91c7\u7528\u4e86\u6700\u63a5\u8fd1\u6709\u9053\u8bcd\u5178\u97f3\u9891\u7684\u82f1\u5f0f DJ \u97f3\u6807, \u4e0d\u4ee3\u8868\u5176\u552f\u4e00\u6027\n\u4e13\u4e1a\u5728\u7ebf\u82f1\u8bed\u8bcd\u5178\u8bf7\u53c2\u8003\u77e5\u4e4e\u94fe\u63a5:\u5728\u7ebf\u82f1\u8bed\u8bcd\u5178\u54ea\u4e2a\u6bd4\u8f83\u597d?\n\n\u53c2\u8003\u8d44\u6599\n\nhttps:\/\/www.zhihu.com\/question\/19739907\nhttps:\/\/www.v2ex.com\/t\/131094\nhttps:\/\/www.v2ex.com\/t\/309350\nhttps:\/\/www.v2ex.com\/t\/63781\nhttps:\/\/www.v2ex.com\/t\/246033\nhttps:\/\/www.v2ex.com\/t\/342087\n\n","113":"Kivy\n\nInnovative user interfaces made easy.\nKivy is an open source, cross-platform Python\nframework for the development of applications that make use of innovative,\nmulti-touch user interfaces.\nThe aim is to allow for quick and easy interaction design and rapid prototyping\nwhilst making your code reusable and deployable.\nKivy is written in Python and Cython, based on OpenGL ES\n2, supports various input devices and has an extensive widget library. With the\nsame codebase, you can target Windows, macOS, Linux, Android and iOS. All Kivy\nwidgets are built with multitouch support.\nKivy is MIT licensed, actively developed by a great community and is supported\nby many projects managed by the Kivy Organization.\n\n\n\n\n\n\n\n\n\n\n\nInstallation, Documentation and Examples\nExtensive installation instructions as well as tutorials and general\ndocumentation, including an API reference, can be found at https:\/\/kivy.org\/docs.\nA PDF version is also available.\nKivy ships with many examples which can be found in the examples folder.\nSupport\nIf you need assistance, you can ask for help on our mailing list:\n\nUser Group : https:\/\/groups.google.com\/group\/kivy-users\nEmail      : kivy-users@googlegroups.com\n\nWe also have a Discord channel:\n\nServer     : https:\/\/chat.kivy.org\nChannel    : #support\n\nContributing\nWe love pull requests and discussing novel ideas. Check out our\ncontribution guide and\nfeel free to improve Kivy.\nThe following mailing list and Discord channel are used exclusively for\ndiscussions about developing the Kivy framework and its sister projects:\n\nDev Group : https:\/\/groups.google.com\/group\/kivy-dev\nEmail     : kivy-dev@googlegroups.com\n\nDiscord channel:\n\nServer     : https:\/\/chat.kivy.org\nChannel    : #dev\n\nSister projects\n\nBuildozer: generic Python packager\nfor Android and iOS.\nPlyer: platform-independent Python wrapper\nfor platform-dependent APIs.\nPyjnius: dynamic access to the Java\/Android\nAPI from Python.\nPyobjus: dynamic access to the\nObjective-C\/iOS API from Python.\nPython for Android: toolchain\nfor building and packaging Python applications for Android.\nKivy iOS: toolchain for building and\npackaging Kivy applications for iOS.\nAudiostream: library for direct access\nto the microphone and speaker.\nKivEnt: entity-based game engine for Kivy.\nGarden: widgets and libraries created and\nmaintained by users.\n\n\nOscpy: a fast and tested python2\/3\nimplementation of OSC.\n\nLicenses\n\nKivy is released under the terms of the MIT License. Please refer to the\nLICENSE file.\nThe provided fonts Roboto and Roboto Mono are licensed and\ndistributed under the terms of the\nApache License, Version 2.0.\nThe DejaVuSans (used for the virtual keyboard) license can be viewed\nhere.\nThe current UI design has been adapted from Moblintouch theme's SVGs\nand is licensed under the terms of the\nLGPLv2.1.\n\nContributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n","114":"Powerline\n\nPowerline is a statusline plugin for vim, and provides statuslines and\nprompts for several other applications, including zsh, bash, fish, tmux,\nIPython, Awesome, i3 and Qtile.\n\n\nAuthor\nKim Silkeb\u00e6kken (kim.silkebaekken+vim@gmail.com)\n\nSource\nhttps:\/\/github.com\/powerline\/powerline\n\nVersion\nbeta\n\n\n\nPowerline does not support python2 anymore and powerline will stop working with python2 in the near future.\n\nFeatures\n\nExtensible and feature rich, written in Python. Powerline was\ncompletely rewritten in Python to get rid of as much vimscript as\npossible. This has allowed much better extensibility, leaner and better\nconfig files, and a structured, object-oriented codebase with no mandatory\nthird-party dependencies other than a Python interpreter.\nStable and testable code base. Using Python has allowed unit testing\nof all the project code. The code is tested to work in Python 3.6+.\nSupport for prompts and statuslines in many applications. Originally\ncreated exclusively for vim statuslines, the project has evolved to\nprovide statuslines in tmux and several WMs, and prompts for shells like\nbash\/zsh and other applications. It\u2019s simple to write renderers for any\nother applications that Powerline doesn\u2019t yet support.\nConfiguration and colorschemes written in JSON. JSON is\na standardized, simple and easy to use file format that allows for easy\nuser configuration across all of Powerline\u2019s supported applications.\nFast and lightweight, with daemon support for even better performance.\nAlthough the code base spans a couple of thousand lines of code with no\ngoal of \u201cless than X lines of code\u201d, the main focus is on good performance\nand as little code as possible while still providing a rich set of\nfeatures. The new daemon also ensures that only one Python instance is\nlaunched for prompts and statuslines, which provides excellent\nperformance.\n\nBut I hate Python \/ I don\u2019t need shell prompts \/ this is just too much\nhassle for me \/ what happened to the original vim-powerline project \/ \u2026\nYou should check out some of the Powerline derivatives. The most lightweight\nand feature-rich alternative is currently the vim-airline project.\n\nConfiguration\nBasic powerline configuration is done via JSON files located at .config\/powerline\/. It is a good idea to start by copying the default configuration located at powerline_root\/powerline\/config_files\/ to .config\/powerline\/.\nIf you installed the powerline from the AUR or via pip, powerline_root should be \/usr\/lib\/python3.6\/site-packages\/ or something similar, depending on your python version.\nIf you installed powerline via apt-get 'powerline_root' should be '\/usr\/share\/powerline\/'.\nThis should yield you the following directory structure:\n\n.config\/powerline\/\n\u251c\u2500\u2500 colorschemes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wm\n|\u00a0\u00a0 \u00a0\u00a0  \u2514\u2500\u2500 default.json  \/\/ Your configuration goes here\n\u251c\u2500\u2500 colors.json\n\u251c\u2500\u2500 config.json\n\u2514\u2500\u2500 themes\n    \u251c\u2500\u2500 ...\n    \u2514\u2500\u2500 wm\n        \u2514\u2500\u2500 default.json  \/\/ Your configuration goes here\n\n\nThe files in the subdirectories of themes are used to specify which segments shall be shown; the files in subdirectories of colorschemes are used to specify which colors (as defined in colors.json) shall be used to display a segment.\nNote that your local configuration only overrides the global configuration, it does not replace it, i.e. if you don't configure something locally, the global default will be used instead.\n\nConsult the documentation for more details. See also the segment reference for available segments and their configuration.\nCheck out powerline-fonts for\npre-patched versions of popular, open source coding fonts.\n\n\nScreenshots\n\nVim statusline\nMode-dependent highlighting\n\n\n\n\n\n\n\n\n\n\nAutomatic truncation of segments in small windows\n\n\n\n\n\n\n\n\n\nThe font in the screenshots is Pragmata Pro by Fabrizio Schiavi.\n","115":"NAME\nautojump - a faster way to navigate your filesystem\nDESCRIPTION\nautojump is a faster way to navigate your filesystem. It works by\nmaintaining a database of the directories you use the most from the\ncommand line.\nDirectories must be visited first before they can be jumped to.\nUSAGE\nj is a convenience wrapper function around autojump. Any option that\ncan be used with autojump can be used with j and vice versa.\n\n\nJump To A Directory That Contains foo:\nj foo\n\n\n\nJump To A Child Directory:\nSometimes it's convenient to jump to a child directory\n(sub-directory of current directory) rather than typing out the\nfull name.\njc bar\n\n\n\nOpen File Manager To Directories (instead of jumping):\nInstead of jumping to a directory, you can open a file explorer\nwindow (Mac Finder, Windows Explorer, GNOME Nautilus, etc.) to the\ndirectory instead.\njo music\n\nOpening a file manager to a child directory is also supported:\njco images\n\n\n\nUsing Multiple Arguments:\nLet's assume the following database:\n30   \/home\/user\/mail\/inbox\n10   \/home\/user\/work\/inbox\n\nj in would jump into \/home\/user\/mail\/inbox as the higher\nweighted entry. However you can pass multiple arguments to autojump\nto prefer a different entry. In the above example, j w in would\nthen change directory to \/home\/user\/work\/inbox.\n\n\nFor more options refer to help:\nautojump --help\n\nINSTALLATION\nREQUIREMENTS\n\nPython v2.6+ or Python v3.3+\nSupported shells\n\nbash - first class support\nzsh - first class support\nfish - community supported\ntcsh - community supported\nclink - community supported\n\n\nSupported platforms\n\nLinux - first class support\nOS X - first class support\nWindows - community supported\nBSD - community supported\n\n\nSupported installation methods\n\nsource code - first class support\nDebian and derivatives - first class support\nArchLinux \/ Gentoo \/ openSUSE \/ RedHat and derivatives -\ncommunity supported\nHomebrew \/ MacPorts - community supported\n\n\n\nDue to limited time and resources, only \"first class support\" items will\nbe maintained by the primary committers. All \"community supported\" items\nwill be updated based on pull requests submitted by the general public.\nPlease continue opening issues and providing feedback for community\nsupported items since consolidating information helps other users\ntroubleshoot and submit enhancements and fixes.\nMANUAL\nGrab a copy of autojump:\ngit clone git:\/\/github.com\/wting\/autojump.git\n\nRun the installation script and follow on screen instructions.\ncd autojump\n.\/install.py or .\/uninstall.py\n\nAUTOMATIC\nLinux\nautojump is included in the following distro repositories, please use\nrelevant package management utilities to install (e.g. apt-get, yum,\npacman, etc):\n\n\nDebian, Ubuntu, Linux Mint\nAll Debian-derived distros require manual activation for policy\nreasons, please see \/usr\/share\/doc\/autojump\/README.Debian.\n\n\nRedHat, Fedora, CentOS\nInstall autojump-zsh for zsh, autojump-fish for fish, etc.\n\n\nArchLinux\n\n\nGentoo\n\n\nFrugalware\n\n\nSlackware\n\n\nOS X\nHomebrew is the recommended installation method for Mac OS X:\nbrew install autojump\n\nMacPorts is also available:\nport install autojump\n\nWindows\nWindows support is enabled by clink\nwhich should be installed prior to installing autojump.\nKNOWN ISSUES\n\n\nautojump does not support directories that begin with -.\n\n\nFor bash users, autojump keeps track of directories by modifying\n$PROMPT_COMMAND. Do not overwrite $PROMPT_COMMAND:\nexport PROMPT_COMMAND=\"history -a\"\n\nInstead append to the end of the existing $PROMPT_COMMAND:\nexport PROMPT_COMMAND=\"${PROMPT_COMMAND:+$PROMPT_COMMAND ;} history -a\"\n\n\n\nREPORTING BUGS\nFor any questions or issues please visit:\nhttps:\/\/github.com\/wting\/autojump\/issues\n\nAUTHORS\nautojump was originally written by Jo\u00ebl Schaerer, and currently\nmaintained by William Ting. More contributors can be found in AUTHORS.\nCOPYRIGHT\nCopyright \u00a9 2016 Free Software Foundation, Inc. License GPLv3+: GNU GPL\nversion 3 or later http:\/\/gnu.org\/licenses\/gpl.html. This is free\nsoftware: you are free to change and redistribute it. There is NO\nWARRANTY, to the extent permitted by law.\n","116":"Welcome to Streamlit \ud83d\udc4b\n\nThe fastest way to build and share data apps.\nStreamlit lets you turn data scripts into sharable web apps in minutes, not weeks. It's all Python, open-source, and free! And once you've created an app you can use our free sharing platform to deploy, manage, and share your app with the world.\n\nInstallation\npip install streamlit\nstreamlit hello\nStreamlit can also be installed in a virtual environment on Windows, Mac, and Linux.\nA little example\nStreamlit makes it incredibly easy to build interactive apps:\nimport streamlit as st\n\nx = st.slider('Select a value')\nst.write(x, 'squared is', x * x)\n\nA bigger example\nStreamlit's simple and focused API lets you build incredibly rich and powerful tools.\u00a0 This demo project lets you browse the entire Udacity self-driving-car dataset and run inference in real-time using the YOLO object detection net.\n\nThe complete demo is implemented in less than 300 lines of Python. In fact, the app contains only 23 Streamlit calls which illustrates all the major building blocks of Streamlit. You can try it right now at share.streamlit.io\/streamlit\/demo-self-driving.\nThe Streamlit GitHub badge\nStreamlit's GitHub badge helps others find and play with your Streamlit app.\n\nOnce you deploy your app, you can embed this badge right into your GitHub readme.md as follows:\n[![Streamlit App](https:\/\/static.streamlit.io\/badges\/streamlit_badge_black_white.svg)](https:\/\/share.streamlit.io\/yourGitHubName\/yourRepo\/yourApp\/)\nMore Information\n\nOur launch post explaining why we created Streamlit\nOur sharing platform announcement\nOur amazing community where Streamlit users share apps, ask questions, and help each other out\nStreamlit documentation and blog for the latest Streamlit info\nMore demo projects to inspire you\nAnd if you would like to contribute, see instructions here\n\nStreamlit for Teams\nStreamlit for Teams is our enterprise solution for deploying, managing, sharing, and collaborating on your Streamlit apps. Streamlit for Teams provides secure single-click deploy, authentication, web editing, versioning, and much more. It is currently in closed beta, and you can join the wait-list here.\nLicense\nStreamlit is completely free and open-source and licensed under the Apache 2.0 license.\n","117":"Code samples for \"Neural Networks and Deep Learning\"\nThis repository contains code samples for my book on \"Neural Networks\nand Deep Learning\".\nThe code is written for Python 2.6 or 2.7. Michal Daniel Dobrzanski\nhas a repository for Python 3\nhere. I\nwill not be updating the current repository for Python 3\ncompatibility.\nThe program src\/network3.py uses version 0.6 or 0.7 of the Theano\nlibrary.  It needs modification for compatibility with later versions\nof the library.  I will not be making such modifications.\nAs the code is written to accompany the book, I don't intend to add\nnew features. However, bug reports are welcome, and you should feel\nfree to fork and modify the code.\nLicense\nMIT License\nCopyright (c) 2012-2018 Michael Nielsen\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","118":"\n\nInstaPy\nTooling that automates your social media interactions to \u201cfarm\u201d Likes, Comments, and Followers on Instagram\nImplemented in Python using the Selenium module.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTwitter of InstaPy |\u00a0Twitter of Tim | Discord Channel |\u00a0How it works (FreeCodingCamp) |\nTalk about automating your Instagram | Talk about doing Open-Source work |\u00a0Listen to the \"Talk Python to me\"-Episode\nNewsletter: Sign Up for the Newsletter here!\nOfficial Video Guide: Get it here!\nGuide to Bot Creation: Learn to Build your own Bots with the Creators of InstaPy\n\nLearn Automation from Scratch: The School of Automation\n\n\nFind the full documentation on InstaPy.org\nTable of contents\n\nHow to install and run InstaPy\n\nInstalling InstaPy\nRunning Instapy\nUpdating InstaPy\nGuides and tutorials\n\nVideo tutorials\nWritten guides\n\n\n\n\nExternals and additionals tools\n\nWeb Interface\n\n\nRunning InstaPy on Docker\nDocumentation of all Instapy's features\nSupport\nCredits\n\n\nCredits\nCommunity\nAn active and supportive community is what every open-source project needs to sustain. Together we reached every continent and most of the countries in the world!\nThank you all for being part of the InstaPy community \u270c\ufe0f\n\n\n\nContributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\n\n\nDisclaimer: Please note that this is a research project. I am by no means responsible for any usage of this tool. Use it on your behalf. I'm also not responsible if your accounts get banned due to the extensive use of this tool.\n\n","119":"\u6ce8\uff1a2020\u5e74\u6700\u65b0\u8fde\u8f7d\u6559\u7a0b\u8bf7\u79fb\u6b65\uff1aPython Spider 2020\nPython Spider\n\u539f\u521b\u6587\u7ae0\u6bcf\u5468\u6700\u5c11\u4e24\u7bc7\uff0c\u540e\u7eed\u6700\u65b0\u6587\u7ae0\u4f1a\u5728\u3010\u516c\u4f17\u53f7\u3011\u9996\u53d1\uff0c\u89c6\u9891\u3010B\u7ad9\u3011\u9996\u53d1\uff0c\u5927\u5bb6\u53ef\u4ee5\u52a0\u6211\u3010\u5fae\u4fe1\u3011\u8fdb\u4ea4\u6d41\u7fa4\uff0c\u6280\u672f\u4ea4\u6d41\u6216\u63d0\u610f\u89c1\u90fd\u53ef\u4ee5\uff0c\u6b22\u8fceStar\uff01\n\n\n\n\n\n\n\n\n\u58f0\u660e\n\n\u4ee3\u7801\u3001\u6559\u7a0b\u4ec5\u9650\u4e8e\u5b66\u4e60\u4ea4\u6d41\uff0c\u8bf7\u52ff\u7528\u4e8e\u4efb\u4f55\u5546\u4e1a\u7528\u9014\uff01\n\n\u76ee\u5f55\n\n\u722c\u866b\u5c0f\u5de5\u5177\n\n\u6587\u4ef6\u4e0b\u8f7d\u5c0f\u52a9\u624b\n\n\n\u722c\u866b\u5b9e\u6218\n\n\u7b14\u8da3\u770b\u5c0f\u8bf4\u4e0b\u8f7d\n\u767e\u5ea6\u6587\u5e93\u514d\u8d39\u6587\u7ae0\u4e0b\u8f7d\u52a9\u624b_rev1\n\u767e\u5ea6\u6587\u5e93\u514d\u8d39\u6587\u7ae0\u4e0b\u8f7d\u52a9\u624b_rev2\n\u300a\u5e05\u554a\u300b\u7f51\u5e05\u54e5\u56fe\u7247\u4e0b\u8f7d\n\u6784\u5efa\u4ee3\u7406IP\u6c60\n\u300a\u706b\u5f71\u5fcd\u8005\u300b\u6f2b\u753b\u4e0b\u8f7d\n\u8d22\u52a1\u62a5\u8868\u4e0b\u8f7d\u5c0f\u52a9\u624b\n\u4e00\u5c0f\u65f6\u5165\u95e8\u7f51\u7edc\u722c\u866b\n\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\nGEETEST\u9a8c\u8bc1\u7801\u8bc6\u522b\n12306\u62a2\u7968\u5c0f\u52a9\u624b\n\u767e\u4e07\u82f1\u96c4\u7b54\u9898\u8f85\u52a9\u7cfb\u7edf\n\u7f51\u6613\u4e91\u97f3\u4e50\u514d\u8d39\u97f3\u4e50\u6279\u91cf\u4e0b\u8f7d\nB\u7ad9\u514d\u8d39\u89c6\u9891\u548c\u5f39\u5e55\u6279\u91cf\u4e0b\u8f7d\n\u4eac\u4e1c\u5546\u54c1\u6652\u5355\u56fe\u4e0b\u8f7d\n\u6b63\u65b9\u6559\u52a1\u7ba1\u7406\u7cfb\u7edf\u4e2a\u4eba\u4fe1\u606f\u67e5\u8be2\n\n\n\u5176\u5b83\n\n\u722c\u866b\u5c0f\u5de5\u5177\n\n\ndownloader.py:\u6587\u4ef6\u4e0b\u8f7d\u5c0f\u52a9\u624b\n\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u4e0b\u8f7d\u56fe\u7247\u3001\u89c6\u9891\u3001\u6587\u4ef6\u7684\u5c0f\u5de5\u5177\uff0c\u6709\u4e0b\u8f7d\u8fdb\u5ea6\u663e\u793a\u529f\u80fd\u3002\u7a0d\u52a0\u4fee\u6539\u5373\u53ef\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u722c\u866b\u4e2d\u3002\n\u52a8\u6001\u793a\u610f\u56fe\uff1a\n\n\n\n\u722c\u866b\u5b9e\u6218\n\n\nbiqukan.py:\u300a\u7b14\u8da3\u770b\u300b\u76d7\u7248\u5c0f\u8bf4\u7f51\u7ad9\uff0c\u722c\u53d6\u5c0f\u8bf4\u5de5\u5177\n\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5e93\u5b89\u88c5\uff1a\n pip3 install beautifulsoup4\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n python biqukan.py\n\n\n\nbaiduwenku.py: \u767e\u5ea6\u6587\u5e93word\u6587\u7ae0\u722c\u53d6\n\u539f\u7406\u8bf4\u660e\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/72331737\n\u4ee3\u7801\u4e0d\u5b8c\u5584\uff0c\u6ca1\u6709\u8fdb\u884c\u6253\u5305\uff0c\u4e0d\u5177\u901a\u7528\u6027\uff0c\u7eaf\u5c5e\u5a31\u4e50\u3002\n\n\nshuaia.py: \u722c\u53d6\u300a\u5e05\u554a\u300b\u7f51\uff0c\u5e05\u54e5\u56fe\u7247\n\u300a\u5e05\u554a\u300b\u7f51URL\uff1ahttp:\/\/www.shuaia.net\/index.html\n\u539f\u7406\u8bf4\u660e\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/72597755\n\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5e93\u5b89\u88c5\uff1a\n pip3 install requests beautifulsoup4\n\n\n\ndaili.py: \u6784\u5efa\u4ee3\u7406IP\u6c60\n\u539f\u7406\u8bf4\u660e\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/72793480\n\n\ncarton: \u4f7f\u7528Scrapy\u722c\u53d6\u300a\u706b\u5f71\u5fcd\u8005\u300b\u6f2b\u753b\n\u4ee3\u7801\u53ef\u4ee5\u722c\u53d6\u6574\u4e2a\u300a\u706b\u5f71\u5fcd\u8005\u300b\u6f2b\u753b\u6240\u6709\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u4fdd\u5b58\u5230\u672c\u5730\u3002\u66f4\u6539\u5730\u5740\uff0c\u53ef\u4ee5\u722c\u53d6\u5176\u4ed6\u6f2b\u753b\u3002\u4fdd\u5b58\u5730\u5740\u53ef\u4ee5\u5728settings.py\u4e2d\u4fee\u6539\u3002\n\u52a8\u6f2b\u7f51\u7ad9\uff1ahttp:\/\/comic.kukudm.com\/\n\u539f\u7406\u8bf4\u660e\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/72858983\n\n\nhero.py: \u300a\u738b\u8005\u8363\u8000\u300b\u63a8\u8350\u51fa\u88c5\u67e5\u8be2\u5c0f\u52a9\u624b\n\u7f51\u9875\u722c\u53d6\u5df2\u7ecf\u4f1a\u4e86\uff0c\u60f3\u8fc7\u722c\u53d6\u624b\u673aAPP\u91cc\u7684\u5185\u5bb9\u5417\uff1f\n\u539f\u7406\u8bf4\u660e\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/76850843\n\n\nfinancical.py: \u8d22\u52a1\u62a5\u8868\u4e0b\u8f7d\u5c0f\u52a9\u624b\n\u722c\u53d6\u7684\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93\u4f1a\u5417\uff1f\u300a\u8ddf\u80a1\u795e\u5df4\u83f2\u7279\u5b66\u4e60\u7092\u80a1\u4e4b\u8d22\u52a1\u62a5\u8868\u5165\u5e93(MySQL)\u300b\u4e5f\u8bb8\u80fd\u7ed9\u4f60\u4e00\u4e9b\u601d\u8def\u3002\n\u539f\u7406\u8bf4\u660e\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/77801899\n\u52a8\u6001\u793a\u610f\u56fe\uff1a\n\n\n\none_hour_spider:\u4e00\u5c0f\u65f6\u5165\u95e8Python3\u7f51\u7edc\u722c\u866b\u3002\n\u539f\u7406\u8bf4\u660e:\n\n\u77e5\u4e4e\uff1ahttps:\/\/zhuanlan.zhihu.com\/p\/29809609\nCSDN\uff1ahttp:\/\/blog.csdn.net\/c406495762\/article\/details\/78123502\n\n\u672c\u6b21\u5b9e\u6218\u5185\u5bb9\u6709\uff1a\n\n\u7f51\u7edc\u5c0f\u8bf4\u4e0b\u8f7d(\u9759\u6001\u7f51\u7ad9)-biqukan\n\u4f18\u7f8e\u58c1\u7eb8\u4e0b\u8f7d(\u52a8\u6001\u7f51\u7ad9)-unsplash\n\u89c6\u9891\u4e0b\u8f7d\n\n\n\ndouyin.py:\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\n\u6296\u97f3App\u7684\u89c6\u9891\u4e0b\u8f7d\uff0c\u5c31\u662f\u666e\u901a\u7684App\u722c\u53d6\u3002\n\u539f\u7406\u8bf4\u660e:\n\n\u4e2a\u4eba\u7f51\u7ad9\uff1ahttp:\/\/cuijiahua.com\/blog\/2018\/03\/spider-5.html\n\n\n\ndouyin_pro:\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\uff08\u5347\u7ea7\u7248\uff09\n\u6296\u97f3App\u7684\u89c6\u9891\u4e0b\u8f7d\uff0c\u6dfb\u52a0\u89c6\u9891\u89e3\u6790\u7f51\u7ad9\uff0c\u652f\u6301\u65e0\u6c34\u5370\u89c6\u9891\u4e0b\u8f7d\uff0c\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e73\u53f0\u89e3\u6790\u3002\n\u539f\u7406\u8bf4\u660e:\n\n\u4e2a\u4eba\u7f51\u7ad9\uff1ahttp:\/\/cuijiahua.com\/blog\/2018\/03\/spider-5.html\n\n\n\ndouyin:\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\uff08\u5347\u7ea7\u72482\uff09\n\u6296\u97f3App\u7684\u89c6\u9891\u4e0b\u8f7d\uff0c\u6dfb\u52a0\u89c6\u9891\u89e3\u6790\u7f51\u7ad9\uff0c\u652f\u6301\u65e0\u6c34\u5370\u89c6\u9891\u4e0b\u8f7d\uff0c\u901a\u8fc7url\u89e3\u6790\uff0c\u65e0\u9700\u7b2c\u4e09\u65b9\u5e73\u53f0\u3002\n\u539f\u7406\u8bf4\u660e:\n\n\u4e2a\u4eba\u7f51\u7ad9\uff1ahttp:\/\/cuijiahua.com\/blog\/2018\/03\/spider-5.html\n\n\u52a8\u6001\u793a\u610f\u56fe\uff1a\n\n\n\ngeetest.py:GEETEST\u9a8c\u8bc1\u7801\u8bc6\u522b\n\u539f\u7406\u8bf4\u660e:\n\u65e0\n\n\n12306.py:\u7528Python\u62a2\u706b\u8f66\u7968\u7b80\u5355\u4ee3\u7801\n\u53ef\u4ee5\u81ea\u5df1\u6162\u6162\u4e30\u5bcc\uff0c\u86ee\u7b80\u5355\uff0c\u6709\u722c\u866b\u57fa\u7840\u5f88\u597d\u64cd\u4f5c\uff0c\u6ca1\u6709\u539f\u7406\u8bf4\u660e\u3002\n\n\nbaiwan:\u767e\u4e07\u82f1\u96c4\u8f85\u52a9\u7b54\u9898\n\u6548\u679c\u56fe\uff1a\n\n\u539f\u7406\u8bf4\u660e\uff1a\n\n\u4e2a\u4eba\u7f51\u7ad9\uff1ahttp:\/\/cuijiahua.com\/blog\/2018\/01\/spider_3.html\n\n\u529f\u80fd\u4ecb\u7ecd\uff1a\n\u670d\u52a1\u5668\u7aef\uff0c\u4f7f\u7528Python\uff08baiwan.py\uff09\u901a\u8fc7\u6293\u5305\u83b7\u5f97\u7684\u63a5\u53e3\u83b7\u53d6\u7b54\u9898\u6570\u636e\uff0c\u89e3\u6790\u4e4b\u540e\u901a\u8fc7\u767e\u5ea6\u77e5\u9053\u641c\u7d22\u63a5\u53e3\u5339\u914d\u7b54\u6848\uff0c\u5c06\u6700\u7ec8\u5339\u914d\u7684\u7ed3\u679c\u5199\u5165\u6587\u4ef6\uff08file.txt)\u3002\n\u624b\u673a\u6293\u5305\u4e0d\u4f1a\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u770b\u4e0b\u6211\u7684\u65e9\u671f\u624b\u673aAPP\u6293\u5305\u6559\u7a0b\u3002\nNode.js\uff08app.js\uff09\u6bcf\u96941s\u8bfb\u53d6\u4e00\u6b21file.txt\u6587\u4ef6\uff0c\u5e76\u5c06\u8bfb\u53d6\u7ed3\u679c\u901a\u8fc7socket.io\u63a8\u9001\u7ed9\u5ba2\u6237\u7aef\uff08index.html\uff09\u3002\n\u4eb2\u6d4b\u7b54\u9898\u5ef6\u65f6\u57283s\u5de6\u53f3\u3002\n\u58f0\u660e\uff1a\u6ca1\u505a\u8fc7\u540e\u7aef\u548c\u524d\u7aef\uff0c\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\uff0c\u73b0\u5b66\u73b0\u5356\u5f04\u597d\u7684\uff0cjavascript\u4e5f\u662f\u73b0\u770b\u73b0\u7528\uff0c\u767e\u5ea6\u7684\u7a0b\u5e8f\uff0c\u8c03\u8bd5\u8c03\u8bd5\u800c\u5df2\u3002\u53ef\u80fd\u6709\u5f88\u591a\u7528\u6cd5\u6bd4\u8f83low\u7684\u5730\u65b9\uff0c\u7528\u6cd5\u4e0d\u5bf9\uff0c\u8bf7\u52ff\u89c1\u602a\uff0c\u6709\u5927\u725b\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u81ea\u884c\u5b8c\u5584\u3002\n\n\nNetease:\u6839\u636e\u6b4c\u5355\u4e0b\u8f7d\u7f51\u6613\u4e91\u97f3\u4e50\n\u6548\u679c\u56fe\uff1a\n\n\u539f\u7406\u8bf4\u660e\uff1a\n\u6682\u65e0\n\u529f\u80fd\u4ecb\u7ecd\uff1a\n\u6839\u636emusic_list.txt\u6587\u4ef6\u91cc\u7684\u6b4c\u5355\u7684\u4fe1\u606f\u4e0b\u8f7d\u7f51\u6613\u4e91\u97f3\u4e50\uff0c\u5c06\u81ea\u5df1\u559c\u6b22\u7684\u97f3\u4e50\u8fdb\u884c\u6279\u91cf\u4e0b\u8f7d\u3002\n\n\nbilibili\uff1aB\u7ad9\u89c6\u9891\u548c\u5f39\u5e55\u6279\u91cf\u4e0b\u8f7d\n\u539f\u7406\u8bf4\u660e\uff1a\n\u6682\u65e0\n\u4f7f\u7528\u8bf4\u660e\uff1a\n python bilibili.py -d \u732b -k \u732b -p 10\n\n \u4e09\u4e2a\u53c2\u6570\uff1a\n -d\t\u4fdd\u5b58\u89c6\u9891\u7684\u6587\u4ef6\u5939\u540d\n -k\tB\u7ad9\u641c\u7d22\u7684\u5173\u952e\u5b57\n -p\t\u4e0b\u8f7d\u641c\u7d22\u7ed3\u679c\u524d\u591a\u5c11\u9875\n\n\n\njingdong\uff1a\u4eac\u4e1c\u5546\u54c1\u6652\u5355\u56fe\u4e0b\u8f7d\n\u6548\u679c\u56fe\uff1a\n\n\u539f\u7406\u8bf4\u660e\uff1a\n\u6682\u65e0\n\u4f7f\u7528\u8bf4\u660e\uff1a\n python jd.py -k \u8292\u679c\n\n  \u4e09\u4e2a\u53c2\u6570\uff1a\n -d\t\u4fdd\u5b58\u56fe\u7247\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3afd.py\u6587\u4ef6\u6240\u5728\u6587\u4ef6\u5939\n -k\t\u641c\u7d22\u5173\u952e\u8bcd\n -n  \t\u4e0b\u8f7d\u5546\u54c1\u7684\u6652\u5355\u56fe\u4e2a\u6570\uff0c\u5373n\u4e2a\u5546\u5e97\u7684\u6652\u5355\u56fe\n\n\n\nzhengfang_system_spider\uff1a\u5bf9\u6b63\u65b9\u6559\u52a1\u7ba1\u7406\u7cfb\u7edf\u4e2a\u4eba\u8bfe\u8868\uff0c\u4e2a\u4eba\u5b66\u751f\u6210\u7ee9\uff0c\u7ee9\u70b9\u7b49\u7b80\u5355\u722c\u53d6\n\u6548\u679c\u56fe\uff1a\n\n\u539f\u7406\u8bf4\u660e\uff1a\n\u6682\u65e0\n\u4f7f\u7528\u8bf4\u660e\uff1a\n cd zhengfang_system_spider\n pip install -r requirements.txt\n python spider.py\n\n\n\n\u5176\u5b83\n\n\u6b22\u8fce Pull requests\uff0c\u611f\u8c22\u8d21\u732e\u3002\n\n\u66f4\u591a\u7cbe\u5f69\uff0c\u656c\u8bf7\u671f\u5f85\uff01\n \n\n","120":"Prophet: Automatic Forecasting Procedure\n\n\n\nProphet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.\nProphet is open source software released by Facebook's Core Data Science team. It is available for download on CRAN and PyPI.\nImportant links\n\nHomepage: https:\/\/facebook.github.io\/prophet\/\nHTML documentation: https:\/\/facebook.github.io\/prophet\/docs\/quick_start.html\nIssue tracker: https:\/\/github.com\/facebook\/prophet\/issues\nSource code repository: https:\/\/github.com\/facebook\/prophet\nProphet R package: https:\/\/cran.r-project.org\/package=prophet\nProphet Python package: https:\/\/pypi.python.org\/pypi\/fbprophet\/\nRelease blogpost: https:\/\/research.fb.com\/prophet-forecasting-at-scale\/\nProphet paper: Sean J. Taylor, Benjamin Letham (2018) Forecasting at scale. The American Statistician 72(1):37-45 (https:\/\/peerj.com\/preprints\/3190.pdf).\n\nInstallation in R\nProphet is a CRAN package so you can use install.packages.\ninstall.packages('prophet')\nAfter installation, you can get started!\nWindows\nOn Windows, R requires a compiler so you'll need to follow the instructions provided by rstan. The key step is installing Rtools before attempting to install the package.\nIf you have custom Stan compiler settings, install from source rather than the CRAN binary.\nInstallation in Python\nProphet is on PyPI, so you can use pip to install it. From v0.6 onwards, Python 2 is no longer supported.\n# Install pystan with pip before using pip to install fbprophet\npip install pystan\n\npip install fbprophet\nThe default dependency that Prophet has is pystan. PyStan has its own installation instructions. Install pystan with pip before using pip to install fbprophet.\nYou can also choose a (more experimental) alternative stan backend called cmdstanpy. It requires the CmdStan command line interface and you will have to specify the environment variable STAN_BACKEND pointing to it, for example:\n# bash\n$ CMDSTAN=\/tmp\/cmdstan-2.22.1 STAN_BACKEND=CMDSTANPY pip install fbprophet\n\nNote that the CMDSTAN variable is directly related to cmdstanpy module and can be omitted if your CmdStan binaries are in your $PATH.\nIt is also possible to install Prophet with two backends:\n# bash\n$ CMDSTAN=\/tmp\/cmdstan-2.22.1 STAN_BACKEND=PYSTAN,CMDSTANPY pip install fbprophet\n\nAfter installation, you can get started!\nIf you upgrade the version of PyStan installed on your system, you may need to reinstall fbprophet (see here).\nAnaconda\nUse conda install gcc to set up gcc. The easiest way to install Prophet is through conda-forge: conda install -c conda-forge fbprophet.\nWindows\nOn Windows, PyStan requires a compiler so you'll need to follow the instructions. The easiest way to install Prophet in Windows is in Anaconda.\nLinux\nMake sure compilers (gcc, g++, build-essential) and Python development tools (python-dev, python3-dev) are installed. In Red Hat systems, install the packages gcc64 and gcc64-c++. If you are using a VM, be aware that you will need at least 4GB of memory to install fbprophet, and at least 2GB of memory to use fbprophet.\nChangelog\nVersion 0.6 (2020.03.03)\n\nFix bugs related to upstream changes in holidays and pandas packages.\nCompile model during first use, not during install (to comply with CRAN policy)\ncmdstanpy backend now available in Python\nPython 2 no longer supported\n\nVersion 0.5 (2019.05.14)\n\nConditional seasonalities\nImproved cross validation estimates\nPlotly plot in Python\nBugfixes\n\nVersion 0.4 (2018.12.18)\n\nAdded holidays functionality\nBugfixes\n\nVersion 0.3 (2018.06.01)\n\nMultiplicative seasonality\nCross validation error metrics and visualizations\nParameter to set range of potential changepoints\nUnified Stan model for both trend types\nImproved future trend uncertainty for sub-daily data\nBugfixes\n\nVersion 0.2.1 (2017.11.08)\n\nBugfixes\n\nVersion 0.2 (2017.09.02)\n\nForecasting with sub-daily data\nDaily seasonality, and custom seasonalities\nExtra regressors\nAccess to posterior predictive samples\nCross-validation function\nSaturating minimums\nBugfixes\n\nVersion 0.1.1 (2017.04.17)\n\nBugfixes\nNew options for detecting yearly and weekly seasonality (now the default)\n\nVersion 0.1 (2017.02.23)\n\nInitial release\n\nLicense\nProphet is licensed under the MIT license.\n","121":"\nEnglish svg pdf jpg png\n\u7b80\u4f53\u4e2d\u6587 svg pdf jpg png by tkchu\n\n\nDisclaimer\n\nThis work (the WORK) was created by Milo Yip (the AUTHOR), who has been a game developer for more than 20 years.\nThe books shown in the WORK represent knowledge\/skills that may\/should be acquired by game programmers. There are other important ways of learning, such as practicing, courses, industrial\/academic conferences\/publications, etc.\nThe AUTHOR has not been sponsored by any authors\/publishers of the books, except that he was the translator for the Chinese version of Game Engine Architecture.\nComments are welcome but the AUTHOR reserved the rights of modification.\nThe WORK is licensed under Creative Commons Attribution-ShareAlike 4.0 International License.\n\nBuild\n\nGNU make\nGraphviz 2.38\nGhostscript 9.16 (ps2pdf)\ncpdf\n\nAcknowledgement\n\nWindy Wang\nStanley Luo\nShuo Chen\nXinz\nVczh\nHush\n\n","122":"Inter\nInter is a typeface specially designed for user interfaces\nwith focus on high legibility of small-to-medium sized text on computer screens.\nThe family features a tall x-height to aid in readability of mixed-case and\nlower-case text. Several OpenType features are provided as well,\nlike contextual alternates that adjusts punctuation depending on the shape of\nsurrounding glyphs, slashed zero for when you need to disambiguate \"0\" from \"o\",\ntabular numbers, etc.\n\n\u2b07\ufe0e Download the latest release\nAfter downloading the zip from above:\n\nDouble-click the downloaded zip file to unpack or open it.\nFollow the instructions in \"install-mac.txt\" or \"install-win.txt\", depending\non what operating system you're using.\n\nFont files are also available from the following third-party distributors:\n\ninter-ui on npm\nfont-inter in Homebrew's Fonts cask\nSee Repology for a list of Linux distributions that include the font in their repositories.\n\nDisclaimer: Third-party packages may not always be up-to-date.\nDesign\nInter is similar to Roboto, San Francisco, Akkurat, Asap, Lucida Grande and other \"UI\" and \"Text\" typefaces. Some trade-offs were made in order to make this typeface work really well at small sizes:\n\nCurrently not suitable for very large sizes because of some small-scale glyph optimizations (like \"pits\" and \"traps\") that help rasterization at small sizes but stand out and interfere at large sizes.\nRasterized at sizes below 12px, some stems\u2014like the horizontal center of \"E\", \"F\", or vertical center of \"m\"\u2014are drawn with two semi-opaque pixels instead of one solid. This is because we \"prioritize\" (optimize for) higher-density rasterizations. If we move these stems to an off-center position\u2014so that they can be drawn sharply at e.g. 11px\u2014text will be less legible at higher resolutions.\n\nCurrent font styles:\n\n\n\nName\nWeight class\n\n\n\n\nThin\n100\n\n\nThin Italic\n100\n\n\nExtra Light\n200\n\n\nExtra Light Italic\n200\n\n\nLight\n300\n\n\nLight Italic\n300\n\n\nRegular\n400\n\n\nItalic\n400\n\n\nMedium\n500\n\n\nMedium Italic\n500\n\n\nSemi Bold\n600\n\n\nSemi Bold Italic\n600\n\n\nBold\n700\n\n\nBold Italic\n700\n\n\nExtra Bold\n800\n\n\nExtra Bold Italic\n800\n\n\nBlack\n900\n\n\nBlack Italic\n900\n\n\n\nInter also ships as a variable font.\nFont metrics\nThis font was originally designed to work at a specific size: 11px. Thus, the Units per EM (UPM) is defined in such a way that a power-of-two multiple of one EM unit ends up at an integer value compared to a pixel. Most fonts are designed with a UPM of either 1000 or 2048. Because of this we picked a value that is as high as possible but also as close as possible to one of those common values (since it's reasonable to assume that some layout engines and rasterizers are optimized for those value magnitudes.) We ended up picking a UPM of 2816 which equates to exactly 256 units per pixel when rasterized for size 11pt at 1x scale. This also means that when rasterized at power-of-two scales (like 2x and 4x) the number of EM units corresponding to a pixel is an integer (128 units for 2x, 64 for 4x, and so on.)\nHowever, as the project progressed and the typeface was put into use, it quickly\nbecame clear that for anything longer than a short word, it was actually hard to\nread the almost monotonically-spaced letters.\nA second major revision was created where the previously-strict rule of geometry being even multiples of 256 was relaxed and now the rule is \"try to stick with 128x, if you can't, stick with 64x and if you can't do that either, never go below 16x.\" This means that Inter is now much more variable in pace than it used to be, making it work better at higher resolutions and work much better in longer text, but losing some contrast and sharpness at small sizes.\n\nThe glyphs are designed based on this \"plan\"; most stems and lines will be positioned at EM units that are even multiples of 128, and in a few cases they are at even multiples of 64 or as low as 16.\nMetrics:\n\nUPM:        2816\nDescender:  -640\nx-height:   1536\nCap height: 2048\nAscender:   2688\n\nTranslating between EM units and pixels:\n\nRasterized at 11px: 1px = 256 units\nRasterized at 22px: 1px = 128 units\nRasterized at 44px: 1px =  64 units\n\nThere's a Figma workspace for glyphs, with configured metrics: \"Inter glyphs\"\nSupporters\nA wholehearted Thank You to everyone who supports the Inter project!\nDonors\n\n@adrianmg\n@artemc\n@bapun26\n@brianlovin\n@chadlittle\n@colinkeany\n@danrowden\n@davo\n@emuravjev\n@gbougakov\n@jakejarvis\n@lukesbeard\n@lustfullyCake\n@mamuso\n@mbullington\n@muuvmuuv\n@NetOperatorWibby\n@pedromvpg\n@pmarsceill\n@romashamin\n@ruslangirichev\n@saishmenon\n@satyakresna\n@sorentwo\n@StandardResumeSponsors\n@stpnkcrk\n@taravancil\n@usmanity\n@zethussuen\nStefan Kempf\n\n(Private donors excluded)\nContributors\n\n@thundernixon\n@KatjaSchimmel\n@kdrag0n\n@gabrielizaias\n@fractaledmind\n@davelab6\n@Veratyr\n@Calinou\n\nDevelopment\nFor instructions on how to work with the source files and how to\ncompile & build font files,\nrefer to CONTRIBUTING.md.\nInter is licensed under the SIL Open Font License\n","123":"Magic Wormhole\n\n\n\n\n\nGet things from one computer to another, safely.\nThis package provides a library and a command-line tool named wormhole,\nwhich makes it possible to get arbitrary-sized files and directories\n(or short pieces of text) from one computer to another. The two endpoints are\nidentified by using identical \"wormhole codes\": in general, the sending\nmachine generates and displays the code, which must then be typed into the\nreceiving machine.\nThe codes are short and human-pronounceable, using a phonetically-distinct\nwordlist. The receiving side offers tab-completion on the codewords, so\nusually only a few characters must be typed. Wormhole codes are single-use\nand do not need to be memorized.\n\nPyCon 2016 presentation: Slides, Video\n\nFor complete documentation, please see https:\/\/magic-wormhole.readthedocs.io\nor the docs\/ subdirectory.\nThis program uses two servers, whose source code is kept in separate\nrepositories: the\nmailbox server,\nand the\ntransit relay.\nLicense, Compatibility\nMagic-Wormhole is released under the MIT license, see the LICENSE file for details.\nThis library is compatible with Python 3.5 and higher (tested against 3.5,\n3.6, 3.7, and 3.8). It also still works with Python 2.7.\nPackaging, Installation\nMagic Wormhole packages are included in many operating systems.\n\nTo install it without an OS package, follow the Installation docs.\n","124":"Faker is a Python package that generates fake data for you. Whether\nyou need to bootstrap your database, create good-looking XML documents,\nfill-in your persistence to stress test it, or anonymize data taken from\na production service, Faker is for you.\nFaker is heavily inspired by PHP Faker, Perl Faker, and by Ruby Faker.\n\n_|_|_|_|          _|\n_|        _|_|_|  _|  _|      _|_|    _|  _|_|\n_|_|_|  _|    _|  _|_|      _|_|_|_|  _|_|\n_|      _|    _|  _|  _|    _|        _|\n_|        _|_|_|  _|    _|    _|_|_|  _|\n\n    \n\n\nCompatibility\nStarting from version 4.0.0, Faker dropped support for Python 2 and only supports Python\n3.5 and above. If you still need Python 2 compatibility, please install version 3.0.1 in the\nmeantime, and please consider updating your codebase to support Python 3 so you can enjoy the\nlatest features Faker has to offer. Please see the extended docs for more details, especially\nif you are upgrading from version 2.0.4 and below as there might be breaking changes.\nThis package was also previously called fake-factory which was already deprecated by the end\nof 2016, and much has changed since then, so please ensure that your project and its dependencies\ndo not depend on the old package.\n\nBasic Usage\nInstall with pip:\npip install Faker\nUse faker.Faker() to create and initialize a faker\ngenerator, which can generate data by accessing properties named after\nthe type of data you want.\nfrom faker import Faker\nfake = Faker()\n\nfake.name()\n# 'Lucy Cechtelar'\n\nfake.address()\n# '426 Jordy Lodge\n#  Cartwrightshire, SC 88120-6700'\n\nfake.text()\n# 'Sint velit eveniet. Rerum atque repellat voluptatem quia rerum. Numquam excepturi\n#  beatae sint laudantium consequatur. Magni occaecati itaque sint et sit tempore. Nesciunt\n#  amet quidem. Iusto deleniti cum autem ad quia aperiam.\n#  A consectetur quos aliquam. In iste aliquid et aut similique suscipit. Consequatur qui\n#  quaerat iste minus hic expedita. Consequuntur error magni et laboriosam. Aut aspernatur\n#  voluptatem sit aliquam. Dolores voluptatum est.\n#  Aut molestias et maxime. Fugit autem facilis quos vero. Eius quibusdam possimus est.\n#  Ea quaerat et quisquam. Deleniti sunt quam. Adipisci consequatur id in occaecati.\n#  Et sint et. Ut ducimus quod nemo ab voluptatum.'\nEach call to method fake.name() yields a different (random) result.\nThis is because faker forwards faker.Generator.method_name() calls\nto faker.Generator.format(method_name).\nfor _ in range(10):\n  print(fake.name())\n\n# 'Adaline Reichel'\n# 'Dr. Santa Prosacco DVM'\n# 'Noemy Vandervort V'\n# 'Lexi O'Conner'\n# 'Gracie Weber'\n# 'Roscoe Johns'\n# 'Emmett Lebsack'\n# 'Keegan Thiel'\n# 'Wellington Koelpin II'\n# 'Ms. Karley Kiehn V'\n\nPytest fixtures\nFaker also has its own pytest plugin which provides a faker fixture you can use in your\ntests. Please check out the pytest fixture docs to learn more.\n\nProviders\nEach of the generator properties (like name, address, and\nlorem) are called \"fake\". A faker generator has many of them,\npackaged in \"providers\".\nfrom faker import Faker\nfrom faker.providers import internet\n\nfake = Faker()\nfake.add_provider(internet)\n\nprint(fake.ipv4_private())\nCheck the extended docs for a list of bundled providers and a list of\ncommunity providers.\n\nLocalization\nfaker.Faker can take a locale as an argument, to return localized\ndata. If no localized provider is found, the factory falls back to the\ndefault en_US locale.\nfrom faker import Faker\nfake = Faker('it_IT')\nfor _ in range(10):\n    print(fake.name())\n\n# 'Elda Palumbo'\n# 'Pacifico Giordano'\n# 'Sig. Avide Guerra'\n# 'Yago Amato'\n# 'Eustachio Messina'\n# 'Dott. Violante Lombardo'\n# 'Sig. Alighieri Monti'\n# 'Costanzo Costa'\n# 'Nazzareno Barbieri'\n# 'Max Coppola'\nfaker.Faker also supports multiple locales. New in v3.0.0.\nfrom faker import Faker\nfake = Faker(['it_IT', 'en_US', 'ja_JP'])\nfor _ in range(10):\n    print(fake.name())\n\n# \u9234\u6728 \u967d\u4e00\n# Leslie Moreno\n# Emma Williams\n# \u6e21\u8fba \u88d5\u7f8e\u5b50\n# Marcantonio Galuppi\n# Martha Davis\n# Kristen Turner\n# \u4e2d\u6d25\u5ddd \u6625\u9999\n# Ashley Castillo\n# \u5c71\u7530 \u6843\u5b50\nYou can check available Faker locales in the source code, under the\nproviders package. The localization of Faker is an ongoing process, for\nwhich we need your help. Please don't hesitate to create a localized\nprovider for your own locale and submit a Pull Request (PR).\n\nCommand line usage\nWhen installed, you can invoke faker from the command-line:\nfaker [-h] [--version] [-o output]\n      [-l {bg_BG,cs_CZ,...,zh_CN,zh_TW}]\n      [-r REPEAT] [-s SEP]\n      [-i {package.containing.custom_provider otherpkg.containing.custom_provider}]\n      [fake] [fake argument [fake argument ...]]\nWhere:\n\nfaker: is the script when installed in your environment, in\ndevelopment you could use python -m faker instead\n-h, --help: shows a help message\n--version: shows the program's version number\n-o FILENAME: redirects the output to the specified filename\n-l {bg_BG,cs_CZ,...,zh_CN,zh_TW}: allows use of a localized\nprovider\n-r REPEAT: will generate a specified number of outputs\n-s SEP: will generate the specified separator after each\ngenerated output\n-i {my.custom_provider other.custom_provider} list of additional custom\nproviders to use. Note that is the import path of the package containing\nyour Provider class, not the custom Provider class itself.\nfake: is the name of the fake to generate an output for, such as\nname, address, or text\n[fake argument ...]: optional arguments to pass to the fake (e.g. the\nprofile fake takes an optional list of comma separated field names as the\nfirst argument)\n\nExamples:\n$ faker address\n968 Bahringer Garden Apt. 722\nKristinaland, NJ 09890\n\n$ faker -l de_DE address\nSamira-Niemeier-Allee 56\n94812 Biedenkopf\n\n$ faker profile ssn,birthdate\n{'ssn': u'628-10-1085', 'birthdate': '2008-03-29'}\n\n$ faker -r=3 -s=\";\" name\nWillam Kertzmann;\nJosiah Maggio;\nGayla Schmitt;\n\nHow to create a Provider\nfrom faker import Faker\nfake = Faker()\n\n# first, import a similar Provider or use the default one\nfrom faker.providers import BaseProvider\n\n# create new provider class\nclass MyProvider(BaseProvider):\n    def foo(self):\n        return 'bar'\n\n# then add new provider to faker instance\nfake.add_provider(MyProvider)\n\n# now you can use:\nfake.foo()\n# 'bar'\n\nHow to customize the Lorem Provider\nYou can provide your own sets of words if you don't want to use the\ndefault lorem ipsum one. The following example shows how to do it with a list of words picked from cakeipsum :\nfrom faker import Faker\nfake = Faker()\n\nmy_word_list = [\n'danish','cheesecake','sugar',\n'Lollipop','wafer','Gummies',\n'sesame','Jelly','beans',\n'pie','bar','Ice','oat' ]\n\nfake.sentence()\n# 'Expedita at beatae voluptatibus nulla omnis.'\n\nfake.sentence(ext_word_list=my_word_list)\n# 'Oat beans oat Lollipop bar cheesecake.'\n\nHow to use with Factory Boy\nFactory Boy already ships with integration with Faker. Simply use the\nfactory.Faker method of factory_boy:\nimport factory\nfrom myapp.models import Book\n\nclass BookFactory(factory.Factory):\n    class Meta:\n        model = Book\n\n    title = factory.Faker('sentence', nb_words=4)\n    author_name = factory.Faker('name')\n\nAccessing the random instance\nThe .random property on the generator returns the instance of\nrandom.Random used to generate the values:\nfrom faker import Faker\nfake = Faker()\nfake.random\nfake.random.getstate()\nBy default all generators share the same instance of random.Random, which\ncan be accessed with from faker.generator import random. Using this may\nbe useful for plugins that want to affect all faker instances.\n\nUnique values\nThrough use of the .unique property on the generator, you can guarantee\nthat any generated values are unique for this specific instance.\nfrom faker import Faker\nfake = Faker()\nnames = [fake.unique.first_name() for i in range(500)]\nassert len(set(names)) == len(names)\nCalling fake.unique.clear() clears the already seen values.\nNote, to avoid infinite loops, after a number of attempts to find a unique\nvalue, Faker will throw a UniquenessException. Beware of the birthday\nparadox, collisions\nare more likely than you'd think.\nfrom faker import Faker\n\nfake = Faker()\nfor i in range(3):\n     # Raises a UniquenessException\n     fake.unique.boolean()\nIn addition, only hashable arguments and return values can be used\nwith .unique.\n\nSeeding the Generator\nWhen using Faker for unit testing, you will often want to generate the same\ndata set. For convenience, the generator also provide a seed() method,\nwhich seeds the shared random number generator. Calling the same methods with\nthe same version of faker and seed produces the same results.\nfrom faker import Faker\nfake = Faker()\nFaker.seed(4321)\n\nprint(fake.name())\n# 'Margaret Boehm'\nEach generator can also be switched to its own instance of random.Random,\nseparate to the shared one, by using the seed_instance() method, which acts\nthe same way. For example:\nfrom faker import Faker\nfake = Faker()\nfake.seed_instance(4321)\n\nprint(fake.name())\n# 'Margaret Boehm'\nPlease note that as we keep updating datasets, results are not guaranteed to be\nconsistent across patch versions. If you hardcode results in your test, make sure\nyou pinned the version of Faker down to the patch number.\nIf you are using pytest, you can seed the faker fixture by defining a faker_seed\nfixture. Please check out the pytest fixture docs to learn more.\n\nTests\nRun tests:\n$ tox\nWrite documentation for providers:\n$ python -m faker > docs.txt\n\nContribute\nPlease see CONTRIBUTING.\n\nLicense\nFaker is released under the MIT License. See the bundled LICENSE file\nfor details.\n\nCredits\n\nFZaninotto \/ PHP Faker\nDistribute\nBuildout\nmodern-package-template\n\n","125":"gensim \u2013 Topic Modelling in Python\n\n\n\n\n\n\nGensim is a Python library for topic modelling, document indexing\nand similarity retrieval with large corpora. Target audience is the\nnatural language processing (NLP) and information retrieval (IR)\ncommunity.\nFeatures\n\nAll algorithms are memory-independent w.r.t. the corpus size\n(can process input larger than RAM, streamed, out-of-core),\nIntuitive interfaces\n\neasy to plug in your own input corpus\/datastream (trivial\nstreaming API)\neasy to extend with other Vector Space algorithms (trivial\ntransformation API)\n\n\nEfficient multicore implementations of popular algorithms, such as\nonline Latent Semantic Analysis (LSA\/LSI\/SVD), Latent\nDirichlet Allocation (LDA), Random Projections (RP),\nHierarchical Dirichlet Process (HDP) or word2vec deep\nlearning.\nDistributed computing: can run Latent Semantic Analysis and\nLatent Dirichlet Allocation on a cluster of computers.\nExtensive documentation and Jupyter Notebook tutorials.\n\nIf this feature list left you scratching your head, you can first read\nmore about the Vector Space Model and unsupervised document analysis\non Wikipedia.\nInstallation\nThis software depends on NumPy and Scipy, two Python packages for\nscientific computing. You must have them installed prior to installing\ngensim.\nIt is also recommended you install a fast BLAS library before installing\nNumPy. This is optional, but using an optimized BLAS such as ATLAS or\nOpenBLAS is known to improve performance by as much as an order of\nmagnitude. On OS X, NumPy picks up the BLAS that comes with it\nautomatically, so you don\u2019t need to do anything special.\nInstall the latest version of gensim:\n    pip install --upgrade gensim\nOr, if you have instead downloaded and unzipped the source tar.gz\npackage:\n    python setup.py install\nFor alternative modes of installation, see the documentation.\nGensim is being continuously tested under Python 3.6, 3.7 and 3.8.\nSupport for Python 2.7 was dropped in gensim 4.0.0 \u2013 install gensim 3.8.3 if you must use Python 2.7.\nHow come gensim is so fast and memory efficient? Isn\u2019t it pure Python, and isn\u2019t Python slow and greedy?\nMany scientific algorithms can be expressed in terms of large matrix\noperations (see the BLAS note above). Gensim taps into these low-level\nBLAS libraries, by means of its dependency on NumPy. So while\ngensim-the-top-level-code is pure Python, it actually executes highly\noptimized Fortran\/C under the hood, including multithreading (if your\nBLAS is so configured).\nMemory-wise, gensim makes heavy use of Python\u2019s built-in generators and\niterators for streamed data processing. Memory efficiency was one of\ngensim\u2019s design goals, and is a central feature of gensim, rather than\nsomething bolted on as an afterthought.\nDocumentation\n\nQuickStart\nTutorials\nOfficial API Documentation\n\nSupport\nAsk open-ended or research questions on the Gensim Mailing List.\nRaise bugs on Github but make sure you follow the issue template. Issues that are not bugs or fail to follow the issue template will be closed without inspection.\n\nAdopters\n\n\n\nCompany\nLogo\nIndustry\nUse of Gensim\n\n\n\n\nRARE Technologies\n\nML & NLP consulting\nCreators of Gensim \u2013\u00a0this is us!\n\n\nAmazon\n\nRetail\nDocument similarity.\n\n\nNational Institutes of Health\n\nHealth\nProcessing grants and publications with word2vec.\n\n\nCisco Security\n\nSecurity\nLarge-scale fraud detection.\n\n\nMindseye\n\nLegal\nSimilarities in legal documents.\n\n\nChannel 4\n\nMedia\nRecommendation engine.\n\n\nTalentpair\n\nHR\nCandidate matching in high-touch recruiting.\n\n\nJuju\n\nHR\nProvide non-obvious related job suggestions.\n\n\nTailwind\n\nMedia\nPost interesting and relevant content to Pinterest.\n\n\nIssuu\n\nMedia\nGensim's LDA module lies at the very core of the analysis we perform on each uploaded publication to figure out what it's all about.\n\n\nSearch Metrics\n\nContent Marketing\nGensim word2vec used for entity disambiguation in Search Engine Optimisation.\n\n\n12K Research\n\nMedia\nDocument similarity analysis on media articles.\n\n\nStillwater Supercomputing\n\nHardware\nDocument comprehension and association with word2vec.\n\n\nSiteGround\n\nWeb hosting\nAn ensemble search engine which uses different embeddings models and similarities, including word2vec, WMD, and LDA.\n\n\nCapital One\n\nFinance\nTopic modeling for customer complaints exploration.\n\n\n\n\nCiting gensim\nWhen citing gensim in academic papers and theses, please use this\nBibTeX entry:\n@inproceedings{rehurek_lrec,\n      title = {{Software Framework for Topic Modelling with Large Corpora}},\n      author = {Radim {\\v R}eh{\\r u}{\\v r}ek and Petr Sojka},\n      booktitle = {{Proceedings of the LREC 2010 Workshop on New\n           Challenges for NLP Frameworks}},\n      pages = {45--50},\n      year = 2010,\n      month = May,\n      day = 22,\n      publisher = {ELRA},\n      address = {Valletta, Malta},\n      note={\\url{http:\/\/is.muni.cz\/publication\/884893\/en}},\n      language={English}\n}\n\n","126":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSalt is the world\u2019s fastest, most intelligent and scalable automation engine.\n    \nExplore the docs \u00bb\n\nDemo Salt For Free Online\n    \u00b7\n    Report Bug\n    \u00b7\n    Request Feature\n\n\nAbout Salt\nBuilt on python, Salt uses simple and human-readable YAML combined with\nevent-driven automation to deploy and configure complex IT systems. In addition\nto powering SaltStack\u2019s powerful enterprise product suite, Salt can be found\nunder the hood of products from Juniper, Cisco, Cloudflare, Nutanix, SUSE, and\nTieto, to name a few.\n\nAbout SaltStack\nSaltStack develops award-winning software used by IT and security operations\nteams to help modern business more efficiently secure and maintain all aspects\nof their digital infrastructure. But we\u2019re not like other legacy systems\nmanagement or security software tools. Our software is unique in providing\nintelligent, event-driven automation for efficient control of complex business\nsystems at any scale.\nWe help enterprise IT organizations orchestrate and automate difficult IT tasks\nwith speed and flexibility to ultimately deliver continuous security compliance,\nvulnerability remediation, and real IT security.\nWhether you need help automating the work of ITOps, DevOps, NetOps, or SecOps\nfunctions, SaltStack software is the answer. In addition to open source\nsoftware, such as Salt, we offer\nSaltStack Enterprise\nand\nSaltStack SecOps products to\nmanage and secure your digital business operations.\n\nDownload Salt\nSalt is tested and packaged to run on CentOS, Debian, RHEL, Ubuntu,\nWindows. Download Salt and get started now.\n\nhttps:\/\/repo.saltstack.com\/\nInstallation Instructions\n\n\nSaltStack Documentation\nInstallation instructions, getting started guides, in-depth API\ndocumentation, and contributing to Salt.\n\nGetting Started with Salt\nLatest Salt Documentation\nSalt\u2019s Contributor Guide\n\n\nSecurity Advisories\nIn 2020, SaltStack created a\n**Security Announcements**\nlanding page. SaltStack recommends subscribing to the\nSaltStack Security RSS feed\nto receive notification when new information is available regarding security\nannouncements.\nOther channels to receive security announcements include the\nSalt Community mailing list\nand the\nSalt Community Slack Channel.\n\nResponsibly Reporting Security Vulnerabilities\nWhen reporting security vulnerabilities for Salt or other SaltStack projects,\nrefer to the\nSECURITY.md file\nfound in this repository.\n\nEngage SaltStack and The Community\nPlease be sure to review our\nCode of Conduct.\nAlso, check out some of our community resources including:\n\nSaltStack Community Wiki\nSaltStack Community Slack\nSaltStack: IRC on Freenode\nSaltStack YouTube channel\nSaltStackInc Twitch channel\n\nThere are lots of ways to get involved in our community. Every month, there are\naround a dozen opportunities to meet with other contributors and the Salt Core\nteam and collaborate in real time. The best way to keep track is by subscribing\nto the\nSalt Community Events Calendar.\nIf you have additional questions, email us at core@saltstack.com or reach out\ndirectly to the Community Manager, Cassandra Faris via Slack. We\u2019d be glad to\nhave you join our community!\n\nSaltStack Training\nGet access to proprietary\nSaltStack education offerings\nthrough instructor-led training offered on-site, virtually or at SaltStack\nheadquarters in Salt Lake City. SaltStack Enterprise training helps increase the\nvalue and effectiveness of SaltStack software for any customer and is a\nprerequisite for coveted SaltStack Certified Administrator (SSCA) and\nSaltStack Certified Engineer (SSCE) certifications.\nSaltStack training is also available through several\nSaltStack professional services\nofferings.\n\nLicense\nSaltStack is licensed by the SaltStack Team under the Apache 2.0 license. Please\nsee the\nLICENSE file for the\nfull text of the Apache license, followed by a full summary of the licensing\nused by external modules.\nA complete list of attributions and dependencies can be found here:\nsalt\/DEPENDENCIES.md\n","127":"Jupyter\nRead this in other languages: English, Espa\u00f1ol, Portugu\u00eas\nJupyter metapackage for installation and docs.\nRunning the docs locally\nFirst navigate to the \/docs directory and create a conda environment:\nconda env create -f environment.yml  \nActivate the environment:\nsource activate jupyter_docs  \nBuild the docs:\nmake clean  \nmake html\nThe docs will be built in build\/html. They can be viewed by opening build\/html\/index.html or starting an HTTP server and navigating to 0.0.0.0:8000 in your web browser.\npython3 -m http.server\n","128":"\nRequests-HTML: HTML Parsing for Humans\u2122\n\n\nThis library intends to make parsing HTML (e.g. scraping the web) as\nsimple and intuitive as possible.\nWhen using this library you automatically get:\n\nFull JavaScript support!\nCSS Selectors (a.k.a jQuery-style, thanks to PyQuery).\nXPath Selectors, for the faint of heart.\nMocked user-agent (like a real web browser).\nAutomatic following of redirects.\nConnection\u2013pooling and cookie persistence.\nThe Requests experience you know and love, with magical parsing abilities.\nAsync Support\n\n\nTutorial & Usage\nMake a GET request to 'python.org', using Requests:\n>>> from requests_html import HTMLSession\n>>> session = HTMLSession()\n>>> r = session.get('https:\/\/python.org\/')\nTry async and get some sites at the same time:\n>>> from requests_html import AsyncHTMLSession\n>>> asession = AsyncHTMLSession()\n>>> async def get_pythonorg():\n...     r = await asession.get('https:\/\/python.org\/')\n...     return r\n...\n>>> async def get_reddit():\n...    r = await asession.get('https:\/\/reddit.com\/')\n...    return r\n...\n>>> async def get_google():\n...    r = await asession.get('https:\/\/google.com\/')\n...    return r\n...\n>>> results = asession.run(get_pythonorg, get_reddit, get_google)\n>>> results # check the requests all returned a 200 (success) code\n[<Response [200]>, <Response [200]>, <Response [200]>]\n>>> # Each item in the results list is a response object and can be interacted with as such\n>>> for result in results:\n...     print(result.html.url)\n...\nhttps:\/\/www.python.org\/\nhttps:\/\/www.google.com\/\nhttps:\/\/www.reddit.com\/\nNote that the order of the objects in the results list represents the order they were returned in, not the order that the coroutines are passed to the run method, which is shown in the example by the order being different.\nGrab a list of all links on the page, as\u2013is (anchors excluded):\n>>> r.html.links\n{'\/\/docs.python.org\/3\/tutorial\/', '\/about\/apps\/', 'https:\/\/github.com\/python\/pythondotorg\/issues', '\/accounts\/login\/', '\/dev\/peps\/', '\/about\/legal\/', '\/\/docs.python.org\/3\/tutorial\/introduction.html#lists', '\/download\/alternatives', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/kihd2DW98YY\/python-370a4-is-available-for-testing.html', '\/download\/other\/', '\/downloads\/windows\/', 'https:\/\/mail.python.org\/mailman\/listinfo\/python-dev', '\/doc\/av', 'https:\/\/devguide.python.org\/', '\/about\/success\/#engineering', 'https:\/\/wiki.python.org\/moin\/PythonEventsCalendar#Submitting_an_Event', 'https:\/\/www.openstack.org', '\/about\/gettingstarted\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/AMoBel8b8Mc\/python-3.html', '\/success-stories\/industrial-light-magic-runs-python\/', 'http:\/\/docs.python.org\/3\/tutorial\/introduction.html#using-python-as-a-calculator', '\/', 'http:\/\/pyfound.blogspot.com\/', '\/events\/python-events\/past\/', '\/downloads\/release\/python-2714\/', 'https:\/\/wiki.python.org\/moin\/PythonBooks', 'http:\/\/plus.google.com\/+Python', 'https:\/\/wiki.python.org\/moin\/', 'https:\/\/status.python.org\/', '\/community\/workshops\/', '\/community\/lists\/', 'http:\/\/buildbot.net\/', '\/community\/awards', 'http:\/\/twitter.com\/ThePSF', 'https:\/\/docs.python.org\/3\/license.html', '\/psf\/donations\/', 'http:\/\/wiki.python.org\/moin\/Languages', '\/dev\/', '\/events\/python-user-group\/', 'https:\/\/wiki.qt.io\/PySide', '\/community\/sigs\/', 'https:\/\/wiki.gnome.org\/Projects\/PyGObject', 'http:\/\/www.ansible.com', 'http:\/\/www.saltstack.com', 'http:\/\/planetpython.org\/', '\/events\/python-events', '\/about\/help\/', '\/events\/python-user-group\/past\/', '\/about\/success\/', '\/psf-landing\/', '\/about\/apps', '\/about\/', 'http:\/\/www.wxpython.org\/', '\/events\/python-user-group\/665\/', 'https:\/\/www.python.org\/psf\/codeofconduct\/', '\/dev\/peps\/peps.rss', '\/downloads\/source\/', '\/psf\/sponsorship\/sponsors\/', 'http:\/\/bottlepy.org', 'http:\/\/roundup.sourceforge.net\/', 'http:\/\/pandas.pydata.org\/', 'http:\/\/brochure.getpython.info\/', 'https:\/\/bugs.python.org\/', '\/community\/merchandise\/', 'http:\/\/tornadoweb.org', '\/events\/python-user-group\/650\/', 'http:\/\/flask.pocoo.org\/', '\/downloads\/release\/python-364\/', '\/events\/python-user-group\/660\/', '\/events\/python-user-group\/638\/', '\/psf\/', '\/doc\/', 'http:\/\/blog.python.org', '\/events\/python-events\/604\/', '\/about\/success\/#government', 'http:\/\/python.org\/dev\/peps\/', 'https:\/\/docs.python.org', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/zVC80sq9s00\/python-364-is-now-available.html', '\/users\/membership\/', '\/about\/success\/#arts', 'https:\/\/wiki.python.org\/moin\/Python2orPython3', '\/downloads\/', '\/jobs\/', 'http:\/\/trac.edgewall.org\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/wh73_1A-N7Q\/python-355rc1-and-python-348rc1-are-now.html', '\/privacy\/', 'https:\/\/pypi.python.org\/', 'http:\/\/www.riverbankcomputing.co.uk\/software\/pyqt\/intro', 'http:\/\/www.scipy.org', '\/community\/forums\/', '\/about\/success\/#scientific', '\/about\/success\/#software-development', '\/shell\/', '\/accounts\/signup\/', 'http:\/\/www.facebook.com\/pythonlang?fref=ts', '\/community\/', 'https:\/\/kivy.org\/', '\/about\/quotes\/', 'http:\/\/www.web2py.com\/', '\/community\/logos\/', '\/community\/diversity\/', '\/events\/calendars\/', 'https:\/\/wiki.python.org\/moin\/BeginnersGuide', '\/success-stories\/', '\/doc\/essays\/', '\/dev\/core-mentorship\/', 'http:\/\/ipython.org', '\/events\/', '\/\/docs.python.org\/3\/tutorial\/controlflow.html', '\/about\/success\/#education', '\/blogs\/', '\/community\/irc\/', 'http:\/\/pycon.blogspot.com\/', '\/\/jobs.python.org', 'http:\/\/www.pylonsproject.org\/', 'http:\/\/www.djangoproject.com\/', '\/downloads\/mac-osx\/', '\/about\/success\/#business', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/x_c9D0S-4C4\/python-370b1-is-now-available-for.html', 'http:\/\/wiki.python.org\/moin\/TkInter', 'https:\/\/docs.python.org\/faq\/', '\/\/docs.python.org\/3\/tutorial\/controlflow.html#defining-functions'}\nGrab a list of all links on the page, in absolute form (anchors excluded):\n>>> r.html.absolute_links\n{'https:\/\/github.com\/python\/pythondotorg\/issues', 'https:\/\/docs.python.org\/3\/tutorial\/', 'https:\/\/www.python.org\/about\/success\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/kihd2DW98YY\/python-370a4-is-available-for-testing.html', 'https:\/\/www.python.org\/dev\/peps\/', 'https:\/\/mail.python.org\/mailman\/listinfo\/python-dev', 'https:\/\/www.python.org\/doc\/', 'https:\/\/www.python.org\/', 'https:\/\/www.python.org\/about\/', 'https:\/\/www.python.org\/events\/python-events\/past\/', 'https:\/\/devguide.python.org\/', 'https:\/\/wiki.python.org\/moin\/PythonEventsCalendar#Submitting_an_Event', 'https:\/\/www.openstack.org', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/AMoBel8b8Mc\/python-3.html', 'https:\/\/docs.python.org\/3\/tutorial\/introduction.html#lists', 'http:\/\/docs.python.org\/3\/tutorial\/introduction.html#using-python-as-a-calculator', 'http:\/\/pyfound.blogspot.com\/', 'https:\/\/wiki.python.org\/moin\/PythonBooks', 'http:\/\/plus.google.com\/+Python', 'https:\/\/wiki.python.org\/moin\/', 'https:\/\/www.python.org\/events\/python-events', 'https:\/\/status.python.org\/', 'https:\/\/www.python.org\/about\/apps', 'https:\/\/www.python.org\/downloads\/release\/python-2714\/', 'https:\/\/www.python.org\/psf\/donations\/', 'http:\/\/buildbot.net\/', 'http:\/\/twitter.com\/ThePSF', 'https:\/\/docs.python.org\/3\/license.html', 'http:\/\/wiki.python.org\/moin\/Languages', 'https:\/\/docs.python.org\/faq\/', 'https:\/\/jobs.python.org', 'https:\/\/www.python.org\/about\/success\/#software-development', 'https:\/\/www.python.org\/about\/success\/#education', 'https:\/\/www.python.org\/community\/logos\/', 'https:\/\/www.python.org\/doc\/av', 'https:\/\/wiki.qt.io\/PySide', 'https:\/\/www.python.org\/events\/python-user-group\/660\/', 'https:\/\/wiki.gnome.org\/Projects\/PyGObject', 'http:\/\/www.ansible.com', 'http:\/\/www.saltstack.com', 'https:\/\/www.python.org\/dev\/peps\/peps.rss', 'http:\/\/planetpython.org\/', 'https:\/\/www.python.org\/events\/python-user-group\/past\/', 'https:\/\/docs.python.org\/3\/tutorial\/controlflow.html#defining-functions', 'https:\/\/www.python.org\/community\/diversity\/', 'https:\/\/docs.python.org\/3\/tutorial\/controlflow.html', 'https:\/\/www.python.org\/community\/awards', 'https:\/\/www.python.org\/events\/python-user-group\/638\/', 'https:\/\/www.python.org\/about\/legal\/', 'https:\/\/www.python.org\/dev\/', 'https:\/\/www.python.org\/download\/alternatives', 'https:\/\/www.python.org\/downloads\/', 'https:\/\/www.python.org\/community\/lists\/', 'http:\/\/www.wxpython.org\/', 'https:\/\/www.python.org\/about\/success\/#government', 'https:\/\/www.python.org\/psf\/', 'https:\/\/www.python.org\/psf\/codeofconduct\/', 'http:\/\/bottlepy.org', 'http:\/\/roundup.sourceforge.net\/', 'http:\/\/pandas.pydata.org\/', 'http:\/\/brochure.getpython.info\/', 'https:\/\/www.python.org\/downloads\/source\/', 'https:\/\/bugs.python.org\/', 'https:\/\/www.python.org\/downloads\/mac-osx\/', 'https:\/\/www.python.org\/about\/help\/', 'http:\/\/tornadoweb.org', 'http:\/\/flask.pocoo.org\/', 'https:\/\/www.python.org\/users\/membership\/', 'http:\/\/blog.python.org', 'https:\/\/www.python.org\/privacy\/', 'https:\/\/www.python.org\/about\/gettingstarted\/', 'http:\/\/python.org\/dev\/peps\/', 'https:\/\/www.python.org\/about\/apps\/', 'https:\/\/docs.python.org', 'https:\/\/www.python.org\/success-stories\/', 'https:\/\/www.python.org\/community\/forums\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/zVC80sq9s00\/python-364-is-now-available.html', 'https:\/\/www.python.org\/community\/merchandise\/', 'https:\/\/www.python.org\/about\/success\/#arts', 'https:\/\/wiki.python.org\/moin\/Python2orPython3', 'http:\/\/trac.edgewall.org\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/wh73_1A-N7Q\/python-355rc1-and-python-348rc1-are-now.html', 'https:\/\/pypi.python.org\/', 'https:\/\/www.python.org\/events\/python-user-group\/650\/', 'http:\/\/www.riverbankcomputing.co.uk\/software\/pyqt\/intro', 'https:\/\/www.python.org\/about\/quotes\/', 'https:\/\/www.python.org\/downloads\/windows\/', 'https:\/\/www.python.org\/events\/calendars\/', 'http:\/\/www.scipy.org', 'https:\/\/www.python.org\/community\/workshops\/', 'https:\/\/www.python.org\/blogs\/', 'https:\/\/www.python.org\/accounts\/signup\/', 'https:\/\/www.python.org\/events\/', 'https:\/\/kivy.org\/', 'http:\/\/www.facebook.com\/pythonlang?fref=ts', 'http:\/\/www.web2py.com\/', 'https:\/\/www.python.org\/psf\/sponsorship\/sponsors\/', 'https:\/\/www.python.org\/community\/', 'https:\/\/www.python.org\/download\/other\/', 'https:\/\/www.python.org\/psf-landing\/', 'https:\/\/www.python.org\/events\/python-user-group\/665\/', 'https:\/\/wiki.python.org\/moin\/BeginnersGuide', 'https:\/\/www.python.org\/accounts\/login\/', 'https:\/\/www.python.org\/downloads\/release\/python-364\/', 'https:\/\/www.python.org\/dev\/core-mentorship\/', 'https:\/\/www.python.org\/about\/success\/#business', 'https:\/\/www.python.org\/community\/sigs\/', 'https:\/\/www.python.org\/events\/python-user-group\/', 'http:\/\/ipython.org', 'https:\/\/www.python.org\/shell\/', 'https:\/\/www.python.org\/community\/irc\/', 'https:\/\/www.python.org\/about\/success\/#engineering', 'http:\/\/www.pylonsproject.org\/', 'http:\/\/pycon.blogspot.com\/', 'https:\/\/www.python.org\/about\/success\/#scientific', 'https:\/\/www.python.org\/doc\/essays\/', 'http:\/\/www.djangoproject.com\/', 'https:\/\/www.python.org\/success-stories\/industrial-light-magic-runs-python\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/x_c9D0S-4C4\/python-370b1-is-now-available-for.html', 'http:\/\/wiki.python.org\/moin\/TkInter', 'https:\/\/www.python.org\/jobs\/', 'https:\/\/www.python.org\/events\/python-events\/604\/'}\nSelect an element with a CSS Selector:\n>>> about = r.html.find('#about', first=True)\nGrab an element's text contents:\n>>> print(about.text)\nAbout\nApplications\nQuotes\nGetting Started\nHelp\nPython Brochure\nIntrospect an Element's attributes:\n>>> about.attrs\n{'id': 'about', 'class': ('tier-1', 'element-1'), 'aria-haspopup': 'true'}\nRender out an Element's HTML:\n>>> about.html\n'<li aria-haspopup=\"true\" class=\"tier-1 element-1 \" id=\"about\">\\n<a class=\"\" href=\"\/about\/\" title=\"\">About<\/a>\\n<ul aria-hidden=\"true\" class=\"subnav menu\" role=\"menu\">\\n<li class=\"tier-2 element-1\" role=\"treeitem\"><a href=\"\/about\/apps\/\" title=\"\">Applications<\/a><\/li>\\n<li class=\"tier-2 element-2\" role=\"treeitem\"><a href=\"\/about\/quotes\/\" title=\"\">Quotes<\/a><\/li>\\n<li class=\"tier-2 element-3\" role=\"treeitem\"><a href=\"\/about\/gettingstarted\/\" title=\"\">Getting Started<\/a><\/li>\\n<li class=\"tier-2 element-4\" role=\"treeitem\"><a href=\"\/about\/help\/\" title=\"\">Help<\/a><\/li>\\n<li class=\"tier-2 element-5\" role=\"treeitem\"><a href=\"http:\/\/brochure.getpython.info\/\" title=\"\">Python Brochure<\/a><\/li>\\n<\/ul>\\n<\/li>'\nSelect Elements within Elements:\n>>> about.find('a')\n[<Element 'a' href='\/about\/' title='' class=''>, <Element 'a' href='\/about\/apps\/' title=''>, <Element 'a' href='\/about\/quotes\/' title=''>, <Element 'a' href='\/about\/gettingstarted\/' title=''>, <Element 'a' href='\/about\/help\/' title=''>, <Element 'a' href='http:\/\/brochure.getpython.info\/' title=''>]\nSearch for links within an element:\n>>> about.absolute_links\n{'http:\/\/brochure.getpython.info\/', 'https:\/\/www.python.org\/about\/gettingstarted\/', 'https:\/\/www.python.org\/about\/', 'https:\/\/www.python.org\/about\/quotes\/', 'https:\/\/www.python.org\/about\/help\/', 'https:\/\/www.python.org\/about\/apps\/'}\nSearch for text on the page:\n>>> r.html.search('Python is a {} language')[0]\nprogramming\nMore complex CSS Selector example (copied from Chrome dev tools):\n>>> r = session.get('https:\/\/github.com\/')\n>>> sel = 'body > div.application-main > div.jumbotron.jumbotron-codelines > div > div > div.col-md-7.text-center.text-md-left > p'\n>>> print(r.html.find(sel, first=True).text)\nGitHub is a development platform inspired by the way you work. From open source to business, you can host and review code, manage projects, and build software alongside millions of other\u00a0developers.\nXPath is also supported:\n>>> r.html.xpath('\/html\/body\/div[1]\/a')\n[<Element 'a' class=('px-2', 'py-4', 'show-on-focus', 'js-skip-to-content') href='#start-of-content' tabindex='1'>]\n\nJavaScript Support\nLet's grab some text that's rendered by JavaScript. Until 2020, the Python 2.7 countdown clock (https:\/\/pythonclock.org) will serve as a good test page:\n>>> r = session.get('https:\/\/pythonclock.org')\nLet's try and see the dynamically rendered code (The countdown clock). To do that quickly at first, we'll search between the last text we see before it ('Python 2.7 will retire in...') and the first text we see after it ('Enable Guido Mode').\n>>> r.html.search('Python 2.7 will retire in...{}Enable Guido Mode')[0]\n'<\/h1>\\n        <\/div>\\n        <div class=\"python-27-clock\"><\/div>\\n        <div class=\"center\">\\n            <div class=\"guido-button-block\">\\n                <button class=\"js-guido-mode guido-button\">'\nNotice the clock is missing. The render() method takes the response and renders the dynamic content just like a web browser would.\n>>> r.html.render()\n>>> r.html.search('Python 2.7 will retire in...{}Enable Guido Mode')[0]\n'<\/h1>\\n        <\/div>\\n        <div class=\"python-27-clock is-countdown\"><span class=\"countdown-row countdown-show6\"><span class=\"countdown-section\"><span class=\"countdown-amount\">1<\/span><span class=\"countdown-period\">Year<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">2<\/span><span class=\"countdown-period\">Months<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">28<\/span><span class=\"countdown-period\">Days<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">16<\/span><span class=\"countdown-period\">Hours<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">52<\/span><span class=\"countdown-period\">Minutes<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">46<\/span><span class=\"countdown-period\">Seconds<\/span><\/span><\/span><\/div>\\n        <div class=\"center\">\\n            <div class=\"guido-button-block\">\\n                <button class=\"js-guido-mode guido-button\">'\nLet's clean it up a bit. This step is not needed, it just makes it a bit easier to visualize the returned html to see what we need to target to extract our required information.\n       >>> from pprint import pprint\n       >>> pprint(r.html.search('Python 2.7 will retire in...{}Enable')[0])\n       ('<\/h1>\\n'\n'        <\/div>\\n'\n'        <div class=\"python-27-clock is-countdown\"><span class=\"countdown-row '\n'countdown-show6\"><span class=\"countdown-section\"><span '\n'class=\"countdown-amount\">1<\/span><span '\n'class=\"countdown-period\">Year<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">2<\/span><span '\n'class=\"countdown-period\">Months<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">28<\/span><span '\n'class=\"countdown-period\">Days<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">16<\/span><span '\n'class=\"countdown-period\">Hours<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">52<\/span><span '\n'class=\"countdown-period\">Minutes<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">46<\/span><span '\n'class=\"countdown-period\">Seconds<\/span><\/span><\/span><\/div>\\n'\n'        <div class=\"center\">\\n'\n'            <div class=\"guido-button-block\">\\n'\n'                <button class=\"js-guido-mode guido-button\">')\nThe rendered html has all the same methods and attributes as above. Let's extract just the data that we want out of the clock into something easy to use elsewhere and introspect like a dictionary.\n>>> periods = [element.text for element in r.html.find('.countdown-period')]\n>>> amounts = [element.text for element in r.html.find('.countdown-amount')]\n>>> countdown_data = dict(zip(periods, amounts))\n>>> countdown_data\n{'Year': '1', 'Months': '2', 'Days': '5', 'Hours': '23', 'Minutes': '34', 'Seconds': '37'}\nOr you can do this async also:\n>>> async def get_pyclock():\n...     r = await asession.get('https:\/\/pythonclock.org\/')\n...     await r.html.arender()\n...     return r\n...\n>>> results = asession.run(get_pyclock, get_pyclock, get_pyclock)\nThe rest of the code operates the same way as the synchronous version except that results is a list containing multiple response objects however the same basic processes can be applied as above to extract the data you want.\nNote, the first time you ever run the render() method, it will download\nChromium into your home directory (e.g. ~\/.pyppeteer\/). This only happens\nonce.\n\nUsing without Requests\nYou can also use this library without Requests:\n>>> from requests_html import HTML\n>>> doc = \"\"\"<a href='https:\/\/httpbin.org'>\"\"\"\n>>> html = HTML(html=doc)\n>>> html.links\n{'https:\/\/httpbin.org'}\n\nInstallation\n$ pipenv install requests-html\n\u2728\ud83c\udf70\u2728\nOnly Python 3.6 and above is supported.\n","129":"Face Recognition using Tensorflow \nThis is a TensorFlow implementation of the face recognizer described in the paper\n\"FaceNet: A Unified Embedding for Face Recognition and Clustering\". The project also uses ideas from the paper \"Deep Face Recognition\" from the Visual Geometry Group at Oxford.\nCompatibility\nThe code is tested using Tensorflow r1.7 under Ubuntu 14.04 with Python 2.7 and Python 3.5. The test cases can be found here and the results can be found here.\nNews\n\n\n\nDate\nUpdate\n\n\n\n\n2018-04-10\nAdded new models trained on Casia-WebFace and VGGFace2 (see below). Note that the models uses fixed image standardization (see wiki).\n\n\n2018-03-31\nAdded a new, more flexible input pipeline as well as a bunch of minor updates.\n\n\n2017-05-13\nRemoved a bunch of older non-slim models. Moved the last bottleneck layer into the respective models. Corrected normalization of Center Loss.\n\n\n2017-05-06\nAdded code to train a classifier on your own images. Renamed facenet_train.py to train_tripletloss.py and facenet_train_classifier.py to train_softmax.py.\n\n\n2017-03-02\nAdded pretrained models that generate 128-dimensional embeddings.\n\n\n2017-02-22\nUpdated to Tensorflow r1.0. Added Continuous Integration using Travis-CI.\n\n\n2017-02-03\nAdded models where only trainable variables has been stored in the checkpoint. These are therefore significantly smaller.\n\n\n2017-01-27\nAdded a model trained on a subset of the MS-Celeb-1M dataset. The LFW accuracy of this model is around 0.994.\n\n\n2017\u201101\u201102\nUpdated to run with Tensorflow r0.12. Not sure if it runs with older versions of Tensorflow though.\n\n\n\nPre-trained models\n\n\n\nModel name\nLFW accuracy\nTraining dataset\nArchitecture\n\n\n\n\n20180408-102900\n0.9905\nCASIA-WebFace\nInception ResNet v1\n\n\n20180402-114759\n0.9965\nVGGFace2\nInception ResNet v1\n\n\n\nNOTE: If you use any of the models, please do not forget to give proper credit to those providing the training dataset as well.\nInspiration\nThe code is heavily inspired by the OpenFace implementation.\nTraining data\nThe CASIA-WebFace dataset has been used for training. This training set consists of total of 453 453 images over 10 575 identities after face detection. Some performance improvement has been seen if the dataset has been filtered before training. Some more information about how this was done will come later.\nThe best performing model has been trained on the VGGFace2 dataset consisting of ~3.3M faces and ~9000 classes.\nPre-processing\nFace alignment using MTCNN\nOne problem with the above approach seems to be that the Dlib face detector misses some of the hard examples (partial occlusion, silhouettes, etc). This makes the training set too \"easy\" which causes the model to perform worse on other benchmarks.\nTo solve this, other face landmark detectors has been tested. One face landmark detector that has proven to work very well in this setting is the\nMulti-task CNN. A Matlab\/Caffe implementation can be found here and this has been used for face alignment with very good results. A Python\/Tensorflow implementation of MTCNN can be found here. This implementation does not give identical results to the Matlab\/Caffe implementation but the performance is very similar.\nRunning training\nCurrently, the best results are achieved by training the model using softmax loss. Details on how to train a model using softmax loss on the CASIA-WebFace dataset can be found on the page Classifier training of Inception-ResNet-v1 and .\nPre-trained models\nInception-ResNet-v1 model\nA couple of pretrained models are provided. They are trained using softmax loss with the Inception-Resnet-v1 model. The datasets has been aligned using MTCNN.\nPerformance\nThe accuracy on LFW for the model 20180402-114759 is 0.99650+-0.00252. A description of how to run the test can be found on the page Validate on LFW. Note that the input images to the model need to be standardized using fixed image standardization (use the option --use_fixed_image_standardization when running e.g. validate_on_lfw.py).\n","130":"\n\n\nZappa - Serverless Python\n\n\n\n\n\n\n\nAbout\nInstallation and Configuration\n\nRunning the Initial Setup \/ Settings\n\n\nBasic Usage\n\nInitial Deployments\nUpdates\nRollback\nScheduling\n\nAdvanced Scheduling\n\n\nUndeploy\nPackage\n\nHow Zappa Makes Packages\n\n\nTemplate\nStatus\nTailing Logs\nRemote Function Invocation\nDjango Management Commands\nSSL Certification\n\nDeploying to a Domain With AWS Certificate Manager\nDeploying to a Domain With a Let's Encrypt Certificate (DNS Auth)\nDeploying to a Domain With a Let's Encrypt Certificate (HTTP Auth)\nDeploying to a Domain With Your Own SSL Certs\n\n\n\n\nExecuting in Response to AWS Events\nAsynchronous Task Execution\n\nCatching Exceptions\nTask Sources\nDirect Invocation\nRemote Invocations\nRestrictions\nRunning Tasks in a VPC\nResponses\n\n\nAdvanced Settings\n\nYAML Settings\n\n\nAdvanced Usage\n\nKeeping The Server Warm\n\nServing Static Files \/ Binary Uploads\n\n\nEnabling CORS\nLarge Projects\nEnabling Bash Completion\nEnabling Secure Endpoints on API Gateway\n\nAPI Key\nIAM Policy\nAPI Gateway Lambda Authorizers\nCognito User Pool Authorizer\nAPI Gateway Resource Policy\n\n\nSetting Environment Variables\n\nLocal Environment Variables\nRemote AWS Environment Variables\nRemote Environment Variables\nRemote Environment Variables (via an S3 file)\n\n\nAPI Gateway Context Variables\nCatching Unhandled Exceptions\nUsing Custom AWS IAM Roles and Policies\n\nCustom AWS IAM Roles and Policies for Deployment\nCustom AWS IAM Roles and Policies for Execution\n\n\nAWS X-Ray\nGlobally Available Server-less Architectures\nRaising AWS Service Limits\nDead Letter Queues\nUnique Package ID\nApplication Load Balancer Event Source\nEndpoint Configuration\n\nExample Private API Gateway configuration\n\n\n\n\nZappa Guides\nZappa in the Press\nSites Using Zappa\nRelated Projects\nHacks\nContributing\n\nUsing a Local Repo\n\n\nPatrons\nSupport \/ Development \/ Training \/ Consulting\n\nAbout\n\n\n\n\nIn a hurry? Click to see (now slightly out-dated) slides from Serverless SF!\n\nZappa makes it super easy to build and deploy server-less, event-driven Python applications (including, but not limited to, WSGI web apps) on AWS Lambda + API Gateway. Think of it as \"serverless\" web hosting for your Python apps. That means infinite scaling, zero downtime, zero maintenance - and at a fraction of the cost of your current deployments!\nIf you've got a Python web app (including Django and Flask apps), it's as easy as:\n$ pip install zappa\n$ zappa init\n$ zappa deploy\n\nand now you're server-less! Wow!\n\nWhat do you mean \"serverless\"?\n\nOkay, so there still is a server - but it only has a 40 millisecond life cycle! Serverless in this case means \"without any permanent infrastructure.\"\nWith a traditional HTTP server, the server is online 24\/7, processing requests one by one as they come in. If the queue of incoming requests grows too large, some requests will time out. With Zappa, each request is given its own virtual HTTP \"server\" by Amazon API Gateway. AWS handles the horizontal scaling automatically, so no requests ever time out. Each request then calls your application from a memory cache in AWS Lambda and returns the response via Python's WSGI interface. After your app returns, the \"server\" dies.\nBetter still, with Zappa you only pay for the milliseconds of server time that you use, so it's many orders of magnitude cheaper than VPS\/PaaS hosts like Linode or Heroku - and in most cases, it's completely free. Plus, there's no need to worry about load balancing or keeping servers online ever again.\nIt's great for deploying serverless microservices with frameworks like Flask and Bottle, and for hosting larger web apps and CMSes with Django. Or, you can use any WSGI-compatible app you like! You probably don't need to change your existing applications to use it, and you're not locked into using it.\nZappa also lets you build hybrid event-driven applications that can scale to trillions of events a year with no additional effort on your part! You also get free SSL certificates, global app deployment, API access management, automatic security policy generation, precompiled C-extensions, auto keep-warms, oversized Lambda packages, and many other exclusive features!\nAnd finally, Zappa is super easy to use. You can deploy your application with a single command out of the box!\nAwesome!\n\n\n\nInstallation and Configuration\nBefore you begin, make sure you are running Python 3.6\/3.7\/3.8 and you have a valid AWS account and your AWS credentials file is properly installed.\nZappa can easily be installed through pip, like so:\n$ pip install zappa\n\nPlease note that Zappa must be installed into your project's virtual environment. The virtual environment name should not be the same as the Zappa project name, as this may cause errors.\n(If you use pyenv and love to manage virtualenvs with pyenv-virtualenv, you just have to call pyenv local [your_venv_name] and it's ready. Conda users should comment here.)\nNext, you'll need to define your local and server-side settings.\nRunning the Initial Setup \/ Settings\nZappa can automatically set up your deployment settings for you with the init command:\n$ zappa init\n\nThis will automatically detect your application type (Flask\/Django - Pyramid users see here) and help you define your deployment configuration settings. Once you finish initialization, you'll have a file named zappa_settings.json in your project directory defining your basic deployment settings. It will probably look something like this for most WSGI apps:\n{\n    \/\/ The name of your stage\n    \"dev\": {\n        \/\/ The name of your S3 bucket\n        \"s3_bucket\": \"lambda\",\n\n        \/\/ The modular python path to your WSGI application function.\n        \/\/ In Flask and Bottle, this is your 'app' object.\n        \/\/ Flask (your_module.py):\n        \/\/ app = Flask()\n        \/\/ Bottle (your_module.py):\n        \/\/ app = bottle.default_app()\n        \"app_function\": \"your_module.app\"\n    }\n}\nor for Django:\n{\n    \"dev\": { \/\/ The name of your stage\n       \"s3_bucket\": \"lambda\", \/\/ The name of your S3 bucket\n       \"django_settings\": \"your_project.settings\" \/\/ The python path to your Django settings.\n    }\n}\nPsst: If you're deploying a Django application with Zappa for the first time, you might want to read Edgar Roman's Django Zappa Guide.\nYou can define as many stages as your like - we recommend having dev, staging, and production.\nNow, you're ready to deploy!\nBasic Usage\nInitial Deployments\nOnce your settings are configured, you can package and deploy your application to a stage called \"production\" with a single command:\n$ zappa deploy production\nDeploying..\nYour application is now live at: https:\/\/7k6anj0k99.execute-api.us-east-1.amazonaws.com\/production\n\nAnd now your app is live! How cool is that?!\nTo explain what's going on, when you call deploy, Zappa will automatically package up your application and local virtual environment into a Lambda-compatible archive, replace any dependencies with versions precompiled for Lambda, set up the function handler and necessary WSGI Middleware, upload the archive to S3, create and manage the necessary Amazon IAM policies and roles, register it as a new Lambda function, create a new API Gateway resource, create WSGI-compatible routes for it, link it to the new Lambda function, and finally delete the archive from your S3 bucket. Handy!\nBe aware that the default IAM role and policy created for executing Lambda applies a liberal set of permissions.\nThese are most likely not appropriate for production deployment of important applications.  See the section\nCustom AWS IAM Roles and Policies for Execution for more detail.\nUpdates\nIf your application has already been deployed and you only need to upload new Python code, but not touch the underlying routes, you can simply:\n$ zappa update production\nUpdating..\nYour application is now live at: https:\/\/7k6anj0k99.execute-api.us-east-1.amazonaws.com\/production\n\nThis creates a new archive, uploads it to S3 and updates the Lambda function to use the new code, but doesn't touch the API Gateway routes.\nRollback\nYou can also rollback the deployed code to a previous version by supplying the number of revisions to return to. For instance, to rollback to the version deployed 3 versions ago:\n$ zappa rollback production -n 3\n\nScheduling\nZappa can be used to easily schedule functions to occur on regular intervals. This provides a much nicer, maintenance-free alternative to Celery!\nThese functions will be packaged and deployed along with your app_function and called from the handler automatically.\nJust list your functions and the expression to schedule them using cron or rate syntax in your zappa_settings.json file:\n{\n    \"production\": {\n       ...\n       \"events\": [{\n           \"function\": \"your_module.your_function\", \/\/ The function to execute\n           \"expression\": \"rate(1 minute)\" \/\/ When to execute it (in cron or rate format)\n       }],\n       ...\n    }\n}\nAnd then:\n$ zappa schedule production\n\nAnd now your function will execute every minute!\nIf you want to cancel these, you can simply use the unschedule command:\n$ zappa unschedule production\n\nAnd now your scheduled event rules are deleted.\nSee the example for more details.\nAdvanced Scheduling\nSometimes a function needs multiple expressions to describe its schedule. To set multiple expressions, simply list your functions, and the list of expressions to schedule them using cron or rate syntax in your zappa_settings.json file:\n{\n    \"production\": {\n       ...\n       \"events\": [{\n           \"function\": \"your_module.your_function\", \/\/ The function to execute\n           \"expressions\": [\"cron(0 20-23 ? * SUN-THU *)\", \"cron(0 0-8 ? * MON-FRI *)\"] \/\/ When to execute it (in cron or rate format)\n       }],\n       ...\n    }\n}\nThis can be used to deal with issues arising from the UTC timezone crossing midnight during business hours in your local timezone.\nIt should be noted that overlapping expressions will not throw a warning, and should be checked for, to prevent duplicate triggering of functions.\nUndeploy\nIf you need to remove the API Gateway and Lambda function that you have previously published, you can simply:\n$ zappa undeploy production\n\nYou will be asked for confirmation before it executes.\nIf you enabled CloudWatch Logs for your API Gateway service and you don't\nwant to keep those logs, you can specify the --remove-logs argument to purge the logs for your API Gateway and your Lambda function:\n$ zappa undeploy production --remove-logs\n\nPackage\nIf you want to build your application package without actually uploading and registering it as a Lambda function, you can use the package command:\n$ zappa package production\n\nIf you have a zip callback in your callbacks setting, this will also be invoked.\n{\n    \"production\": { \/\/ The name of your stage\n        \"callbacks\": {\n            \"zip\": \"my_app.zip_callback\"\/\/ After creating the package\n        }\n    }\n}\nYou can also specify the output filename of the package with -o:\n$ zappa package production -o my_awesome_package.zip\n\nHow Zappa Makes Packages\nZappa will automatically package your active virtual environment into a package which runs smoothly on AWS Lambda.\nDuring this process, it will replace any local dependencies with AWS Lambda compatible versions. Dependencies are included in this order:\n\nLambda-compatible manylinux wheels from a local cache\nLambda-compatible manylinux wheels from PyPI\nLambda-specific versions from lambda-package\nPackages from the active virtual environment\nPackages from the local project directory\n\nIt also skips certain unnecessary files, and ignores any .py files if .pyc files are available.\nIn addition, Zappa will also automatically set the correct execution permissions, configure package settings, and create a unique, auditable package manifest file.\nTo further reduce the final package file size, you can:\n\nSet slim_handler to True to upload a small handler to Lambda and the rest of the package to S3. For more details, see the merged pull request and the discussion in the original issue. See also: Large Projects.\nUse the exclude setting and provide a list of regex patterns to exclude from the archive. By default, Zappa will exclude Boto, because it's already available in the Lambda execution environment.\n\nTemplate\nSimilarly to package, if you only want the API Gateway CloudFormation template, use the template command:\n$ zappa template production --l your-lambda-arn -r your-role-arn\n\nNote that you must supply your own Lambda ARN and Role ARNs in this case, as they may not have been created for you.\nYou can get the JSON output directly with --json, and specify the output file with --output.\nStatus\nIf you need to see the status of your deployment and event schedules, simply use the status command.\n$ zappa status production\n\nTailing Logs\nYou can watch the logs of a deployment by calling the tail management command.\n$ zappa tail production\n\nBy default, this will show all log items. In addition to HTTP and other events, anything printed to stdout or stderr will be shown in the logs.\nYou can use the argument --http to filter for HTTP requests, which will be in the Apache Common Log Format.\n$ zappa tail production --http\n\nSimilarly, you can do the inverse and only show non-HTTP events and log messages:\n$ zappa tail production --non-http\n\nIf you don't like the default log colors, you can turn them off with --no-color.\nYou can also limit the length of the tail with --since, which accepts a simple duration string:\n$ zappa tail production --since 4h # 4 hours\n$ zappa tail production --since 1m # 1 minute\n$ zappa tail production --since 1mm # 1 month\n\nYou can filter out the contents of the logs with --filter, like so:\n$ zappa tail production --http --filter \"POST\" # Only show POST HTTP requests\n\nNote that this uses the CloudWatch Logs filter syntax.\nTo tail logs without following (to exit immediately after displaying the end of the requested logs), pass --disable-keep-open:\n$ zappa tail production --since 1h --disable-keep-open\n\nRemote Function Invocation\nYou can execute any function in your application directly at any time by using the invoke command.\nFor instance, suppose you have a basic application in a file called \"my_app.py\", and you want to invoke a function in it called \"my_function\". Once your application is deployed, you can invoke that function at any time by calling:\n$ zappa invoke production 'my_app.my_function'\n\nAny remote print statements made and the value the function returned will then be printed to your local console. Nifty!\nYou can also invoke interpretable Python 3.6\/3.7\/3.8 strings directly by using --raw, like so:\n$ zappa invoke production \"print(1 + 2 + 3)\" --raw\n\nFor instance, it can come in handy if you want to create your first superuser on a RDS database running in a VPC (like Serverless Aurora):\n$ zappa invoke staging \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('username', 'email', 'password')\" --raw\nDjango Management Commands\nAs a convenience, Zappa can also invoke remote Django 'manage.py' commands with the manage command. For instance, to perform the basic Django status check:\n$ zappa manage production showmigrations admin\n\nObviously, this only works for Django projects which have their settings properly defined.\nFor commands which have their own arguments, you can also pass the command in as a string, like so:\n$ zappa manage production \"shell --version\"\n\nCommands which require direct user input, such as createsuperuser, should be replaced by commands which use zappa invoke <env> --raw.\nFor more Django integration, take a look at the zappa-django-utils project.\n(Please note that commands which take over 30 seconds to execute may time-out preventing output from being returned - but the command may continue to run. See this related issue for a work-around.)\nSSL Certification\nZappa can be deployed to custom domain names and subdomains with custom SSL certificates, Let's Encrypt certificates, and AWS Certificate Manager (ACM) certificates.\nCurrently, the easiest of these to use are the AWS Certificate Manager certificates, as they are free, self-renewing, and require the least amount of work.\nOnce configured as described below, all of these methods use the same command:\n$ zappa certify\n\nWhen deploying from a CI\/CD system, you can use:\n$ zappa certify --yes\n\nto skip the confirmation prompt.\nDeploying to a Domain With AWS Certificate Manager\nAmazon provides their own free alternative to Let's Encrypt called AWS Certificate Manager (ACM). To use this service with Zappa:\n\nVerify your domain in the AWS Certificate Manager console.\nIn the console, select the N. Virginia (us-east-1) region and request a certificate for your domain or subdomain (sub.yourdomain.tld), or request a wildcard domain (*.yourdomain.tld).\nCopy the entire ARN of that certificate and place it in the Zappa setting certificate_arn.\nSet your desired domain in the domain setting.\nCall $ zappa certify to create and associate the API Gateway distribution using that certificate.\n\nDeploying to a Domain With a Let's Encrypt Certificate (DNS Auth)\nIf you want to use Zappa on a domain with a free Let's Encrypt certificate using automatic Route 53 based DNS Authentication, you can follow this handy guide.\nDeploying to a Domain With a Let's Encrypt Certificate (HTTP Auth)\nIf you want to use Zappa on a domain with a free Let's Encrypt certificate using HTTP Authentication, you can follow this guide.\nHowever, it's now far easier to use Route 53-based DNS authentication, which will allow you to use a Let's Encrypt certificate with a single $ zappa certify command.\nDeploying to a Domain With Your Own SSL Certs\n\nThe first step is to create a custom domain and obtain your SSL cert \/ key \/ bundle.\nEnsure you have set the domain setting within your Zappa settings JSON - this will avoid problems with the Base Path mapping between the Custom Domain and the API invoke URL, which gets the Stage Name appended in the URI\nAdd the paths to your SSL cert \/ key \/ bundle to the certificate, certificate_key, and certificate_chain settings, respectively, in your Zappa settings JSON\nSet route53_enabled to false if you plan on using your own DNS provider, and not an AWS Route53 Hosted zone.\nDeploy or update your app using Zappa\nRun $ zappa certify to upload your certificates and register the custom domain name with your API gateway.\n\nExecuting in Response to AWS Events\nSimilarly, you can have your functions execute in response to events that happen in the AWS ecosystem, such as S3 uploads, DynamoDB entries, Kinesis streams, SNS messages, and SQS queues.\nIn your zappa_settings.json file, define your event sources and the function you wish to execute. For instance, this will execute your_module.process_upload_function in response to new objects in your my-bucket S3 bucket. Note that process_upload_function must accept event and context parameters.\n{\n    \"production\": {\n       ...\n       \"events\": [{\n            \"function\": \"your_module.process_upload_function\",\n            \"event_source\": {\n                  \"arn\":  \"arn:aws:s3:::my-bucket\",\n                  \"events\": [\n                    \"s3:ObjectCreated:*\" \/\/ Supported event types: http:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/dev\/NotificationHowTo.html#supported-notification-event-types\n                  ]\n               }\n            }],\n       ...\n    }\n}\nAnd then:\n$ zappa schedule production\n\nAnd now your function will execute every time a new upload appears in your bucket!\nTo access the key's information in your application context, you'll want process_upload_function to look something like this:\nimport boto3\ns3_client = boto3.client('s3')\n\ndef process_upload_function(event, context):\n    \"\"\"\n    Process a file upload.\n    \"\"\"\n\n    # Get the uploaded file's information\n    bucket = event['Records'][0]['s3']['bucket']['name'] # Will be `my-bucket`\n    key = event['Records'][0]['s3']['object']['key'] # Will be the file path of whatever file was uploaded.\n\n    # Get the bytes from S3\n    s3_client.download_file(bucket, key, '\/tmp\/' + key) # Download this file to writable tmp space.\n    file_bytes = open('\/tmp\/' + key).read()\nSimilarly, for a Simple Notification Service event:\n        \"events\": [\n            {\n                \"function\": \"your_module.your_function\",\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:sns:::your-event-topic-arn\",\n                    \"events\": [\n                        \"sns:Publish\"\n                    ]\n                }\n            }\n        ]\nOptionally you can add SNS message filters:\n        \"events\": [\n            {\n                \"function\": \"your_module.your_function\",\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:sns:::your-event-topic-arn\",\n                    \"filters\": {\n                        \"interests\": [\"python\", \"aws\", \"zappa\"],\n                        \"version\": [\"1.0\"]\n                    },\n                    ...\n                }\n            }\n        ]\nDynamoDB and Kinesis are slightly different as it is not event based but pulling from a stream:\n       \"events\": [\n           {\n               \"function\": \"replication.replicate_records\",\n               \"event_source\": {\n                    \"arn\":  \"arn:aws:dynamodb:us-east-1:1234554:table\/YourTable\/stream\/2016-05-11T00:00:00.000\",\n                    \"starting_position\": \"TRIM_HORIZON\", \/\/ Supported values: TRIM_HORIZON, LATEST\n                    \"batch_size\": 50, \/\/ Max: 1000\n                    \"enabled\": true \/\/ Default is false\n               }\n           }\n       ]\nSQS is also pulling messages from a stream.  At this time, only \"Standard\" queues can trigger lambda events, not \"FIFO\" queues.  Read the AWS Documentation carefully since Lambda calls the SQS DeleteMessage API on your behalf once your function completes successfully.\n       \"events\": [\n           {\n               \"function\": \"your_module.process_messages\",\n               \"event_source\": {\n                    \"arn\":  \"arn:aws:sqs:us-east-1:12341234:your-queue-name-arn\",\n                    \"batch_size\": 10, \/\/ Max: 10. Use 1 to trigger immediate processing\n                    \"enabled\": true \/\/ Default is false\n               }\n           }\n       ]\nFor configuring Lex Bot's intent triggered events:\n    \"bot_events\": [\n        {\n            \"function\": \"lexbot.handlers.book_appointment.handler\",\n            \"event_source\": {\n                \"arn\": \"arn:aws:lex:us-east-1:01234123123:intent:TestLexEventNames:$LATEST\", \/\/ optional. In future it will be used to configure the intent\n                \"intent\":\"intentName\", \/\/ name of the bot event configured\n                \"invocation_source\":\"DialogCodeHook\", \/\/ either FulfillmentCodeHook or DialogCodeHook\n            }\n        }\n    ]\nEvents can also take keyword arguments:\n       \"events\": [\n            {\n                \"function\": \"your_module.your_recurring_function\", \/\/ The function to execute\n                \"kwargs\": {\"key\": \"val\", \"key2\": \"val2\"},  \/\/ Keyword arguments to pass. These are available in the event\n                \"expression\": \"rate(1 minute)\" \/\/ When to execute it (in cron or rate format)\n            }\n       ]\nTo get the keyword arguments you will need to look inside the event dictionary:\ndef your_recurring_function(event, context):\n    my_kwargs = event.get(\"kwargs\")  # dict of kwargs given in zappa_settings file\nYou can find more example event sources here.\nAsynchronous Task Execution\nZappa also now offers the ability to seamlessly execute functions asynchronously in a completely separate AWS Lambda instance!\nFor example, if you have a Flask API for ordering a pie, you can call your bake function seamlessly in a completely separate Lambda instance by using the zappa.asynchronous.task decorator like so:\nfrom flask import Flask\nfrom zappa.asynchronous import task\napp = Flask(__name__)\n\n@task\ndef make_pie():\n    \"\"\" This takes a long time! \"\"\"\n    ingredients = get_ingredients()\n    pie = bake(ingredients)\n    deliver(pie)\n\n@app.route('\/api\/order\/pie')\ndef order_pie():\n    \"\"\" This returns immediately! \"\"\"\n    make_pie()\n    return \"Your pie is being made!\"\nAnd that's it! Your API response will return immediately, while the make_pie function executes in a completely different Lambda instance.\nWhen calls to @task decorated functions or the zappa.asynchronous.run command occur outside of Lambda, such as your local dev environment,\nthe functions will execute immediately and locally. The zappa asynchronous functionality only works\nwhen in the Lambda environment or when specifying Remote Invocations.\nCatching Exceptions\nPutting a try..except block on an asynchronous task like this:\n@task\ndef make_pie():\n    try:\n        ingredients = get_ingredients()\n        pie = bake(ingredients)\n        deliver(pie)\n    except Fault as error:\n        \"\"\"send an email\"\"\"\n    ...\n    return Response('Web services down', status=503)\nwill cause an email to be sent twice for the same error. See asynchronous retries at AWS. To work around this side-effect, and have the fault handler execute only once, change the return value to:\n@task\ndef make_pie():\n    try:\n        \"\"\"code block\"\"\"\n    except Fault as error:\n        \"\"\"send an email\"\"\"\n    ...\n    return {} #or return True\nTask Sources\nBy default, this feature uses direct AWS Lambda invocation. You can instead use AWS Simple Notification Service as the task event source by using the task_sns decorator, like so:\nfrom zappa.asynchronous import task_sns\n@task_sns\nUsing SNS also requires setting the following settings in your zappa_settings:\n{\n  \"dev\": {\n    ..\n      \"async_source\": \"sns\", \/\/ Source of async tasks. Defaults to \"lambda\"\n      \"async_resources\": true, \/\/ Create the SNS topic to use. Defaults to true.\n    ..\n    }\n}\nThis will automatically create and subscribe to the SNS topic the code will use when you call the zappa schedule command.\nUsing SNS will also return a message ID in case you need to track your invocations.\nDirect Invocation\nYou can also use this functionality without a decorator by passing your function to zappa.asynchronous.run, like so:\nfrom zappa.asynchronous import run\n\nrun(your_function, args, kwargs) # Using Lambda\nrun(your_function, args, kwargs, service='sns') # Using SNS\nRemote Invocations\nBy default, Zappa will use lambda's current function name and current AWS region. If you wish to invoke a lambda with\na different function name\/region or invoke your lambda from outside of lambda, you must specify the\nremote_aws_lambda_function_name and remote_aws_region arguments so that the application knows which function and\nregion to use. For example, if some part of our pizza making application had to live on an EC2 instance, but we\nwished to call the make_pie() function on its own Lambda instance, we would do it as follows:\n@task(remote_aws_lambda_function_name='pizza-pie-prod', remote_aws_region='us-east-1')\ndef make_pie():\n   \"\"\" This takes a long time! \"\"\"\n   ingredients = get_ingredients()\n   pie = bake(ingredients)\n   deliver(pie)\nIf those task() parameters were not used, then EC2 would execute the function locally. These same\nremote_aws_lambda_function_name and remote_aws_region arguments can be used on the zappa.asynchronous.run() function as well.\nRestrictions\nThe following restrictions to this feature apply:\n\nFunctions must have a clean import path -- i.e. no closures, lambdas, or methods.\nargs and kwargs must be JSON-serializable.\nThe JSON-serialized arguments must be within the size limits for Lambda (256K) or SNS (256K) events.\n\nAll of this code is still backwards-compatible with non-Lambda environments - it simply executes in a blocking fashion and returns the result.\nRunning Tasks in a VPC\nIf you're running Zappa in a Virtual Private Cloud (VPC), you'll need to configure your subnets to allow your lambda to communicate with services inside your VPC as well as the public Internet. A minimal setup requires two subnets.\nIn subnet-a:\n\nCreate a NAT\nCreate an Internet gateway\nIn the route table, create a route pointing the Internet gateway to 0.0.0.0\/0.\n\nIn subnet-b:\n\nPlace your lambda function\nIn the route table, create a route pointing the NAT that belongs to subnet-a to 0.0.0.0\/0.\n\nYou can place your lambda in multiple subnets that are configured the same way as subnet-b for high availability.\nSome helpful resources are this tutorial, this other tutorial and this AWS doc page.\nResponses\nIt is possible to capture the responses of Asynchronous tasks.\nZappa uses DynamoDB as the backend for these.\nTo capture responses, you must configure a async_response_table in zappa_settings. This is the DynamoDB table name. Then, when decorating with @task, pass capture_response=True.\nAsync responses are assigned a response_id. This is returned as a property of the LambdaAsyncResponse (or SnsAsyncResponse) object that is returned by the @task decorator.\nExample:\nfrom zappa.asynchronous import task, get_async_response\nfrom flask import Flask, make_response, abort, url_for, redirect, request, jsonify\nfrom time import sleep\n\napp = Flask(__name__)\n\n@app.route('\/payload')\ndef payload():\n    delay = request.args.get('delay', 60)\n    x = longrunner(delay)\n    return redirect(url_for('response', response_id=x.response_id))\n\n@app.route('\/async-response\/<response_id>')\ndef response(response_id):\n    response = get_async_response(response_id)\n    if response is None:\n        abort(404)\n\n    if response['status'] == 'complete':\n        return jsonify(response['response'])\n\n    sleep(5)\n\n    return \"Not yet ready. Redirecting.\", 302, {\n        'Content-Type': 'text\/plain; charset=utf-8',\n        'Location': url_for('response', response_id=response_id, backoff=5),\n        'X-redirect-reason': \"Not yet ready.\",\n    }\n\n@task(capture_response=True)\ndef longrunner(delay):\n    sleep(float(delay))\n    return {'MESSAGE': \"It took {} seconds to generate this.\".format(delay)}\nAdvanced Settings\nThere are other settings that you can define in your local settings\nto change Zappa's behavior. Use these at your own risk!\n {\n    \"dev\": {\n        \"alb_enabled\": false, \/\/ enable provisioning of application load balancing resources. If set to true, you _must_ fill out the alb_vpc_config option as well.\n        \"alb_vpc_config\": {\n            \"CertificateArn\": \"your_acm_certificate_arn\", \/\/ ACM certificate ARN for ALB\n            \"SubnetIds\": [], \/\/ list of subnets for ALB\n            \"SecurityGroupIds\": [] \/\/ list of security groups for ALB\n        },\n        \"api_key_required\": false, \/\/ enable securing API Gateway endpoints with x-api-key header (default False)\n        \"api_key\": \"your_api_key_id\", \/\/ optional, use an existing API key. The option \"api_key_required\" must be true to apply\n        \"apigateway_enabled\": true, \/\/ Set to false if you don't want to create an API Gateway resource. Default true.\n        \"apigateway_description\": \"My funky application!\", \/\/ Define a custom description for the API Gateway console. Default None.\n        \"assume_policy\": \"my_assume_policy.json\", \/\/ optional, IAM assume policy JSON file\n        \"attach_policy\": \"my_attach_policy.json\", \/\/ optional, IAM attach policy JSON file\n        \"apigateway_policy\": \"my_apigateway_policy.json\", \/\/ optional, API Gateway resource policy JSON file\n        \"async_source\": \"sns\", \/\/ Source of async tasks. Defaults to \"lambda\"\n        \"async_resources\": true, \/\/ Create the SNS topic and DynamoDB table to use. Defaults to true.\n        \"async_response_table\": \"your_dynamodb_table_name\",  \/\/ the DynamoDB table name to use for captured async responses; defaults to None (can't capture)\n        \"async_response_table_read_capacity\": 1,  \/\/ DynamoDB table read capacity; defaults to 1\n        \"async_response_table_write_capacity\": 1,  \/\/ DynamoDB table write capacity; defaults to 1\n        \"aws_endpoint_urls\": { \"aws_service_name\": \"endpoint_url\" }, \/\/ a dictionary of endpoint_urls that emulate the appropriate service.  Usually used for testing, for instance with `localstack`.\n        \"aws_environment_variables\" : {\"your_key\": \"your_value\"}, \/\/ A dictionary of environment variables that will be available to your deployed app via AWS Lambdas native environment variables. See also \"environment_variables\" and \"remote_env\" . Default {}.\n        \"aws_kms_key_arn\": \"your_aws_kms_key_arn\", \/\/ Your AWS KMS Key ARN\n        \"aws_region\": \"aws-region-name\", \/\/ optional, uses region set in profile or environment variables if not set here,\n        \"binary_support\": true, \/\/ Enable automatic MIME-type based response encoding through API Gateway. Default true.\n        \"callbacks\": { \/\/ Call custom functions during the local Zappa deployment\/update process\n            \"settings\": \"my_app.settings_callback\", \/\/ After loading the settings\n            \"zip\": \"my_app.zip_callback\", \/\/ After creating the package\n            \"post\": \"my_app.post_callback\", \/\/ After command has executed\n        },\n        \"cache_cluster_enabled\": false, \/\/ Use APIGW cache cluster (default False)\n        \"cache_cluster_size\": 0.5, \/\/ APIGW Cache Cluster size (default 0.5)\n        \"cache_cluster_ttl\": 300, \/\/ APIGW Cache Cluster time-to-live (default 300)\n        \"cache_cluster_encrypted\": false, \/\/ Whether or not APIGW Cache Cluster encrypts data (default False)\n        \"certificate\": \"my_cert.crt\", \/\/ SSL certificate file location. Used to manually certify a custom domain\n        \"certificate_key\": \"my_key.key\", \/\/ SSL key file location. Used to manually certify a custom domain\n        \"certificate_chain\": \"my_cert_chain.pem\", \/\/ SSL certificate chain file location. Used to manually certify a custom domain\n        \"certificate_arn\": \"arn:aws:acm:us-east-1:1234512345:certificate\/aaaa-bbb-cccc-dddd\", \/\/ ACM certificate ARN (needs to be in us-east-1 region).\n        \"cloudwatch_log_level\": \"OFF\", \/\/ Enables\/configures a level of logging for the given staging. Available options: \"OFF\", \"INFO\", \"ERROR\", default \"OFF\".\n        \"cloudwatch_data_trace\": false, \/\/ Logs all data about received events. Default false.\n        \"cloudwatch_metrics_enabled\": false, \/\/ Additional metrics for the API Gateway. Default false.\n        \"cognito\": { \/\/ for Cognito event triggers\n            \"user_pool\": \"user-pool-id\", \/\/ User pool ID from AWS Cognito\n            \"triggers\": [{\n                \"source\": \"PreSignUp_SignUp\", \/\/ triggerSource from http:\/\/docs.aws.amazon.com\/cognito\/latest\/developerguide\/cognito-user-identity-pools-working-with-aws-lambda-triggers.html#cognito-user-pools-lambda-trigger-syntax-pre-signup\n                \"function\": \"my_app.pre_signup_function\"\n            }]\n        },\n        \"context_header_mappings\": { \"HTTP_header_name\": \"API_Gateway_context_variable\" }, \/\/ A dictionary mapping HTTP header names to API Gateway context variables\n        \"cors\": false, \/\/ Enable Cross-Origin Resource Sharing. Default false. If true, simulates the \"Enable CORS\" button on the API Gateway console. Can also be a dictionary specifying lists of \"allowed_headers\", \"allowed_methods\", and string of \"allowed_origin\"\n        \"dead_letter_arn\": \"arn:aws:<sns\/sqs>:::my-topic\/queue\", \/\/ Optional Dead Letter configuration for when Lambda async invoke fails thrice\n        \"debug\": true, \/\/ Print Zappa configuration errors tracebacks in the 500. Default true.\n        \"delete_local_zip\": true, \/\/ Delete the local zip archive after code updates. Default true.\n        \"delete_s3_zip\": true, \/\/ Delete the s3 zip archive. Default true.\n        \"django_settings\": \"your_project.production_settings\", \/\/ The modular path to your Django project's settings. For Django projects only.\n        \"domain\": \"yourapp.yourdomain.com\", \/\/ Required if you're using a domain\n        \"base_path\": \"your-base-path\", \/\/ Optional base path for API gateway custom domain base path mapping. Default None. Not supported for use with Application Load Balancer event sources.\n        \"environment_variables\": {\"your_key\": \"your_value\"}, \/\/ A dictionary of environment variables that will be available to your deployed app. See also \"remote_env\" and \"aws_environment_variables\". Default {}.\n        \"events\": [\n            {   \/\/ Recurring events\n                \"function\": \"your_module.your_recurring_function\", \/\/ The function to execute\n                \"expression\": \"rate(1 minute)\" \/\/ When to execute it (in cron or rate format)\n            },\n            {   \/\/ AWS Reactive events\n                \"function\": \"your_module.your_reactive_function\", \/\/ The function to execute\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:s3:::my-bucket\", \/\/ The ARN of this event source\n                    \"events\": [\n                        \"s3:ObjectCreated:*\" \/\/ The specific event to execute in response to.\n                    ]\n                }\n            }\n        ],\n        \"endpoint_configuration\": [\"EDGE\", \"REGIONAL\", \"PRIVATE\"],  \/\/ Specify APIGateway endpoint None (default) or list `EDGE`, `REGION`, `PRIVATE`\n        \"exception_handler\": \"your_module.report_exception\", \/\/ function that will be invoked in case Zappa sees an unhandled exception raised from your code\n        \"exclude\": [\"*.gz\", \"*.rar\"], \/\/ A list of regex patterns to exclude from the archive. To exclude boto3 and botocore (available in an older version on Lambda), add \"boto3*\" and \"botocore*\".\n        \"extends\": \"stage_name\", \/\/ Duplicate and extend another stage's settings. For example, `dev-asia` could extend from `dev-common` with a different `s3_bucket` value.\n        \"extra_permissions\": [{ \/\/ Attach any extra permissions to this policy. Default None\n            \"Effect\": \"Allow\",\n            \"Action\": [\"rekognition:*\"], \/\/ AWS Service ARN\n            \"Resource\": \"*\"\n        }],\n        \"iam_authorization\": false, \/\/ optional, use IAM to require request signing. Default false. Note that enabling this will override the authorizer configuration.\n        \"include\": [\"your_special_library_to_load_at_handler_init\"], \/\/ load special libraries into PYTHONPATH at handler init that certain modules cannot find on path\n        \"authorizer\": {\n            \"function\": \"your_module.your_auth_function\", \/\/ Local function to run for token validation. For more information about the function see below.\n            \"arn\": \"arn:aws:lambda:<region>:<account_id>:function:<function_name>\", \/\/ Existing Lambda function to run for token validation.\n            \"result_ttl\": 300, \/\/ Optional. Default 300. The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches authorizer results. Currently, the maximum TTL value is 3600 seconds.\n            \"token_header\": \"Authorization\", \/\/ Optional. Default 'Authorization'. The name of a custom authorization header containing the token that clients submit as part of their requests.\n            \"validation_expression\": \"^Bearer \\\\w+$\", \/\/ Optional. A validation expression for the incoming token, specify a regular expression.\n        },\n        \"keep_warm\": true, \/\/ Create CloudWatch events to keep the server warm. Default true. To remove, set to false and then `unschedule`.\n        \"keep_warm_expression\": \"rate(4 minutes)\", \/\/ How often to execute the keep-warm, in cron and rate format. Default 4 minutes.\n        \"lambda_description\": \"Your Description\", \/\/ However you want to describe your project for the AWS console. Default \"Zappa Deployment\".\n        \"lambda_handler\": \"your_custom_handler\", \/\/ The name of Lambda handler. Default: handler.lambda_handler\n        \"layers\": [\"arn:aws:lambda:<region>:<account_id>:layer:<layer_name>:<layer_version>\"], \/\/ optional lambda layers\n        \"lambda_concurrency\": 10, \/\/ Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level. Default is None.\n        \"lets_encrypt_key\": \"s3:\/\/your-bucket\/account.key\", \/\/ Let's Encrypt account key path. Can either be an S3 path or a local file path.\n        \"log_level\": \"DEBUG\", \/\/ Set the Zappa log level. Can be one of CRITICAL, ERROR, WARNING, INFO and DEBUG. Default: DEBUG\n        \"manage_roles\": true, \/\/ Have Zappa automatically create and define IAM execution roles and policies. Default true. If false, you must define your own IAM Role and role_name setting.\n        \"memory_size\": 512, \/\/ Lambda function memory in MB. Default 512.\n        \"num_retained_versions\":null, \/\/ Indicates the number of old versions to retain for the lambda. If absent, keeps all the versions of the function.\n        \"payload_compression\": true, \/\/ Whether or not to enable API gateway payload compression (default: true)\n        \"payload_minimum_compression_size\": 0, \/\/ The threshold size (in bytes) below which payload compression will not be applied (default: 0)\n        \"prebuild_script\": \"your_module.your_function\", \/\/ Function to execute before uploading code\n        \"profile_name\": \"your-profile-name\", \/\/ AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.\n        \"project_name\": \"MyProject\", \/\/ The name of the project as it appears on AWS. Defaults to a slugified `pwd`.\n        \"remote_env\": \"s3:\/\/my-project-config-files\/filename.json\", \/\/ optional file in s3 bucket containing a flat json object which will be used to set custom environment variables.\n        \"role_name\": \"MyLambdaRole\", \/\/ Name of Zappa execution role. Default <project_name>-<env>-ZappaExecutionRole. To use a different, pre-existing policy, you must also set manage_roles to false.\n        \"role_arn\": \"arn:aws:iam::12345:role\/app-ZappaLambdaExecutionRole\", \/\/ ARN of Zappa execution role. Default to None. To use a different, pre-existing policy, you must also set manage_roles to false. This overrides role_name. Use with temporary credentials via GetFederationToken.\n        \"route53_enabled\": true, \/\/ Have Zappa update your Route53 Hosted Zones when certifying with a custom domain. Default true.\n        \"runtime\": \"python3.6\", \/\/ Python runtime to use on Lambda. Can be one of \"python3.6\", \"python3.7\" or \"python3.8\". Defaults to whatever the current Python being used is.\n        \"s3_bucket\": \"dev-bucket\", \/\/ Zappa zip bucket,\n        \"slim_handler\": false, \/\/ Useful if project >50M. Set true to just upload a small handler to Lambda and load actual project from S3 at runtime. Default false.\n        \"settings_file\": \"~\/Projects\/MyApp\/settings\/dev_settings.py\", \/\/ Server side settings file location,\n        \"tags\": { \/\/ Attach additional tags to AWS Resources\n            \"Key\": \"Value\",  \/\/ Example Key and value\n            \"Key2\": \"Value2\",\n            },\n        \"timeout_seconds\": 30, \/\/ Maximum lifespan for the Lambda function (default 30, max 900.)\n        \"touch\": true, \/\/ GET the production URL upon initial deployment (default True)\n        \"touch_path\": \"\/\", \/\/ The endpoint path to GET when checking the initial deployment (default \"\/\")\n        \"use_precompiled_packages\": true, \/\/ If possible, use C-extension packages which have been pre-compiled for AWS Lambda. Default true.\n        \"vpc_config\": { \/\/ Optional Virtual Private Cloud (VPC) configuration for Lambda function\n            \"SubnetIds\": [ \"subnet-12345678\" ], \/\/ Note: not all availability zones support Lambda!\n            \"SecurityGroupIds\": [ \"sg-12345678\" ]\n        },\n        \"xray_tracing\": false \/\/ Optional, enable AWS X-Ray tracing on your lambda function.\n    }\n}\nYAML Settings\nIf you prefer YAML over JSON, you can also use a zappa_settings.yml, like so:\n---\ndev:\n  app_function: your_module.your_app\n  s3_bucket: your-code-bucket\n  events:\n  - function: your_module.your_function\n    event_source:\n      arn: arn:aws:s3:::your-event-bucket\n      events:\n      - s3:ObjectCreated:*\nYou can also supply a custom settings file at any time with the -s argument, ex:\n$ zappa deploy dev -s my-custom-settings.yml\n\nSimilarly, you can supply a zappa_settings.toml file:\n[dev]\n  app_function = \"your_module.your_app\"\n  s3_bucket = \"your-code-bucket\"\nAdvanced Usage\nKeeping The Server Warm\nZappa will automatically set up a regularly occurring execution of your application in order to keep the Lambda function warm. This can be disabled via the keep_warm setting.\nServing Static Files \/ Binary Uploads\nZappa is now able to serve and receive binary files, as detected by their MIME-type.\nHowever, generally Zappa is designed for running your application code, not for serving static web assets. If you plan on serving custom static assets in your web application (CSS\/JavaScript\/images\/etc.,), you'll likely want to use a combination of AWS S3 and AWS CloudFront.\nYour web application framework will likely be able to handle this for you automatically. For Flask, there is Flask-S3, and for Django, there is Django-Storages.\nSimilarly, you may want to design your application so that static binary uploads go directly to S3, which then triggers an event response defined in your events setting! That's thinking serverlessly!\nEnabling CORS\nThe simplest way to enable CORS (Cross-Origin Resource Sharing) for your Zappa application is to set cors to true in your Zappa settings file and update, which is the equivalent of pushing the \"Enable CORS\" button in the AWS API Gateway console. This is disabled by default, but you may wish to enable it for APIs which are accessed from other domains, etc.\nYou can also simply handle CORS directly in your application. Your web framework will probably have an extension to do this, such as django-cors-headers or Flask-CORS. Using these will make your code more portable.\nLarge Projects\nAWS currently limits Lambda zip sizes to 50 megabytes. If your project is larger than that, set slim_handler: true in your zappa_settings.json. In this case, your fat application package will be replaced with a small handler-only package. The handler file then pulls the rest of the large project down from S3 at run time! The initial load of the large project may add to startup overhead, but the difference should be minimal on a warm lambda function. Note that this will also eat into the storage space of your application function. Note that AWS currently limits the \/tmp directory storage to 512 MB, so your project must still be smaller than that.\nEnabling Bash Completion\nBash completion can be enabled by adding the following to your .bashrc:\n  eval \"$(register-python-argcomplete zappa)\"\nregister-python-argcomplete is provided by the argcomplete Python package. If this package was installed in a virtualenv\nthen the command must be run there. Alternatively you can execute:\nactivate-global-python-argcomplete --dest=- > file\nThe file's contents should then be sourced in e.g. ~\/.bashrc.\nEnabling Secure Endpoints on API Gateway\nAPI Key\nYou can use the api_key_required setting to generate an API key to all the routes of your API Gateway. The process is as follows:\n\nDeploy\/redeploy (update won't work) and write down the id for the key that has been created\nGo to AWS console > Amazon API Gateway and\n\nselect \"API Keys\" and find the key value (for example key_value)\nselect \"Usage Plans\", create a new usage plan and link the API Key and the API that Zappa has created for you\n\n\nSend a request where you pass the key value as a header called x-api-key to access the restricted endpoints (for example with curl: curl --header \"x-api-key: key_value\"). Note that without the x-api-key header, you will receive a 403.\n\nIAM Policy\nYou can enable IAM-based (v4 signing) authorization on an API by setting the iam_authorization setting to true. Your API will then require signed requests and access can be controlled via IAM policy. Unsigned requests will receive a 403 response, as will requesters who are not authorized to access the API. Enabling this will override the Authorizer configuration (see below).\nAPI Gateway Lambda Authorizers\nIf you deploy an API endpoint with Zappa, you can take advantage of API Gateway Lambda Authorizers to implement a token-based authentication - all you need to do is to provide a function to create the required output, Zappa takes care of the rest. A good start for the function is the AWS Labs blueprint example.\nIf you are wondering for what you would use an Authorizer, here are some potential use cases:\n\nCall out to OAuth provider\nDecode a JWT token inline\nLookup in a self-managed DB (for example DynamoDB)\n\nZappa can be configured to call a function inside your code to do the authorization, or to call some other existing lambda function (which lets you share the authorizer between multiple lambdas). You control the behavior by specifying either the arn or function_name values in the authorizer settings block.\nFor example, to get the Cognito identity, add this to a zappa_settings.yaml:\n  context_header_mappings:\n    user_id: authorizer.user_id\nWhich can now be accessed in Flask like this:\nfrom flask import request\n\n@route('\/hello')\ndef hello_world:\n   print(request.headers.get('user_id'))\nCognito User Pool Authorizer\nYou can also use AWS Cognito User Pool Authorizer by adding:\n{\n    \"authorizer\": {\n        \"type\": \"COGNITO_USER_POOLS\",\n        \"provider_arns\": [\n            \"arn:aws:cognito-idp:{region}:{account_id}:userpool\/{user_pool_id}\"\n        ]\n    }\n}\nAPI Gateway Resource Policy\nYou can also use API Gateway Resource Policies. Example of IP Whitelisting:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:\/*\",\n            \"Condition\": {\n                \"IpAddress\": {\n                    \"aws:SourceIp\": [\n                        \"1.2.3.4\/32\"\n                    ]\n                }\n            }\n        }\n    ]\n}\nSetting Environment Variables\nLocal Environment Variables\nIf you want to set local environment variables for a deployment stage, you can simply set them in your zappa_settings.json:\n{\n    \"dev\": {\n        ...\n        \"environment_variables\": {\n            \"your_key\": \"your_value\"\n        }\n    },\n    ...\n}\nYou can then access these inside your application with:\nimport os\nyour_value = os.environ.get('your_key')\nIf your project needs to be aware of the type of environment you're deployed to, you'll also be able to get SERVERTYPE (AWS Lambda), FRAMEWORK (Zappa), PROJECT (your project name) and STAGE (dev, production, etc.) variables at any time.\nRemote AWS Environment Variables\nIf you want to use native AWS Lambda environment variables you can use the aws_environment_variables configuration setting. These are useful as you can easily change them via the AWS Lambda console or cli at runtime. They are also useful for storing sensitive credentials and to take advantage of KMS encryption of environment variables.\nDuring development, you can add your Zappa defined variables to your locally running app by, for example, using the below (for Django, to manage.py).\nif 'SERVERTYPE' in os.environ and os.environ['SERVERTYPE'] == 'AWS Lambda':\n    import json\n    import os\n    json_data = open('zappa_settings.json')\n    env_vars = json.load(json_data)['dev']['environment_variables']\n    for key, val in env_vars.items():\n        os.environ[key] = val\nRemote Environment Variables\nAny environment variables that you have set outside of Zappa (via AWS Lambda console or cli) will remain as they are when running update, unless they are also in aws_environment_variables, in which case the remote value will be overwritten by the one in the settings file. If you are using KMS-encrypted AWS environment variables, you can set your KMS Key ARN in the aws_kms_key_arn setting. Make sure that the values you set are encrypted in such case.\nNote: if you rely on these as well as environment_variables, and you have the same key names, then those in environment_variables will take precedence as they are injected in the lambda handler.\nRemote Environment Variables (via an S3 file)\nS3 remote environment variables were added to Zappa before AWS introduced native environment variables for Lambda (via the console and cli). Before going down this route check if above make more sense for your usecase.\nIf you want to use remote environment variables to configure your application (which is especially useful for things like sensitive credentials), you can create a file and place it in an S3 bucket to which your Zappa application has access. To do this, add the remote_env key to zappa_settings pointing to a file containing a flat JSON object, so that each key-value pair on the object will be set as an environment variable and value whenever a new lambda instance spins up.\nFor example, to ensure your application has access to the database credentials without storing them in your version control, you can add a file to S3 with the connection string and load it into the lambda environment using the remote_env configuration setting.\nsuper-secret-config.json (uploaded to my-config-bucket):\n{\n    \"DB_CONNECTION_STRING\": \"super-secret:database\"\n}\nzappa_settings.json:\n{\n    \"dev\": {\n        ...\n        \"remote_env\": \"s3:\/\/my-config-bucket\/super-secret-config.json\",\n    },\n    ...\n}\nNow in your application you can use:\nimport os\ndb_string = os.environ.get('DB_CONNECTION_STRING')\nAPI Gateway Context Variables\nIf you want to map an API Gateway context variable (http:\/\/docs.aws.amazon.com\/apigateway\/latest\/developerguide\/api-gateway-mapping-template-reference.html) to an HTTP header you can set up the mapping in zappa_settings.json:\n{\n    \"dev\": {\n        ...\n        \"context_header_mappings\": {\n            \"HTTP_header_name\": \"API_Gateway_context_variable\"\n        }\n    },\n    ...\n}\nFor example, if you want to expose the $context.identity.cognitoIdentityId variable as the HTTP header CognitoIdentityId, and $context.stage as APIStage, you would have:\n{\n    \"dev\": {\n        ...\n        \"context_header_mappings\": {\n            \"CognitoIdentityId\": \"identity.cognitoIdentityId\",\n            \"APIStage\": \"stage\"\n        }\n    },\n    ...\n}\nCatching Unhandled Exceptions\nBy default, if an unhandled exception happens in your code, Zappa will just print the stacktrace into a CloudWatch log. If you wish to use an external reporting tool to take note of those exceptions, you can use the exception_handler configuration option.\nzappa_settings.json:\n{\n    \"dev\": {\n        ...\n        \"exception_handler\": \"your_module.unhandled_exceptions\",\n    },\n    ...\n}\nThe function has to accept three arguments: exception, event, and context:\nyour_module.py\ndef unhandled_exceptions(e, event, context):\n    send_to_raygun(e, event)  # gather data you need and send\n    return True # Prevent invocation retry\nYou may still need a similar exception handler inside your application, this is just a way to catch exception which happen at the Zappa\/WSGI layer (typically event-based invocations, misconfigured settings, bad Lambda packages, and permissions issues).\nBy default, AWS Lambda will attempt to retry an event based (non-API Gateway, e.g. CloudWatch) invocation if an exception has been thrown. However, you can prevent this by returning True, as in example above, so Zappa that will not re-raise the uncaught exception, thus preventing AWS Lambda from retrying the current invocation.\nUsing Custom AWS IAM Roles and Policies\nCustom AWS IAM Roles and Policies for Deployment\nYou can specify which local profile to use for deploying your Zappa application by defining\nthe profile_name setting, which will correspond to a profile in your AWS credentials file.\nCustom AWS IAM Roles and Policies for Execution\nThe default IAM policy created by Zappa for executing the Lambda is very permissive.\nIt grants access to all actions for\nall resources for types CloudWatch, S3, Kinesis, SNS, SQS, DynamoDB, and Route53; lambda:InvokeFunction\nfor all Lambda resources; Put to all X-Ray resources; and all Network Interface operations to all EC2\nresources. While this allows most Lambdas to work correctly with no extra permissions, it is\ngenerally not an acceptable set of permissions for most continuous integration pipelines or\nproduction deployments. Instead, you will probably want to manually manage your IAM policies.\nTo manually define the policy of your Lambda execution role, you must set manage_roles to false and define\neither the role_name or role_arn in your Zappa settings file.\n{\n    \"dev\": {\n        ...\n        \"manage_roles\": false, \/\/ Disable Zappa client managing roles.\n        \"role_name\": \"MyLambdaRole\", \/\/ Name of your Zappa execution role. Optional, default: <project_name>-<env>-ZappaExecutionRole.\n        \"role_arn\": \"arn:aws:iam::12345:role\/app-ZappaLambdaExecutionRole\", \/\/ ARN of your Zappa execution role. Optional.\n        ...\n    },\n    ...\n}\nOngoing discussion about the minimum policy requirements necessary for a Zappa deployment can be found here.\nA more robust solution to managing these entitlements will likely be implemented soon.\nTo add permissions to the default Zappa execution policy, use the extra_permissions setting:\n{\n    \"dev\": {\n        ...\n        \"extra_permissions\": [{ \/\/ Attach any extra permissions to this policy.\n            \"Effect\": \"Allow\",\n            \"Action\": [\"rekognition:*\"], \/\/ AWS Service ARN\n            \"Resource\": \"*\"\n        }]\n    },\n    ...\n}\nAWS X-Ray\nZappa can enable AWS X-Ray support on your function with a configuration setting:\n{\n    \"dev\": {\n        ...\n        \"xray_tracing\": true\n    },\n    ...\n}\nThis will enable it on the Lambda function and allow you to instrument your code with X-Ray.\nFor example, with Flask:\nfrom aws_xray_sdk.core import xray_recorder\n\napp = Flask(__name__)\n\nxray_recorder.configure(service='my_app_name')\n\n@route('\/hello')\n@xray_recorder.capture('hello')\ndef hello_world:\n    return 'Hello'\nYou may use the capture decorator to create subsegments around functions, or xray_recorder.begin_subsegment('subsegment_name') and xray_recorder.end_subsegment() within a function. The official X-Ray documentation for Python has more information on how to use this with your code.\nNote that you may create subsegments in your code but an exception will be raised if you try to create a segment, as it is created by the lambda worker. This also means that if you use Flask you must not use the XRayMiddleware the documentation suggests.\nGlobally Available Server-less Architectures\n\n\n\n\nClick to see slides from ServerlessConf London!\n\nDuring the init process, you will be given the option to deploy your application \"globally.\" This will allow you to deploy your application to all available AWS regions simultaneously in order to provide a consistent global speed, increased redundancy, data isolation, and legal compliance. You can also choose to deploy only to \"primary\" locations, the AWS regions with -1 in their names.\nTo learn more about these capabilities, see these slides from ServerlessConf London.\nRaising AWS Service Limits\nOut of the box, AWS sets a limit of 1000 concurrent executions for your functions. If you start to breach these limits, you may start to see errors like ClientError: An error occurred (LimitExceededException) when calling the PutTargets..\" or something similar.\nTo avoid this, you can file a service ticket with Amazon to raise your limits up to the many tens of thousands of concurrent executions which you may need. This is a fairly common practice with Amazon, designed to prevent you from accidentally creating extremely expensive bug reports. So, before raising your service limits, make sure that you don't have any rogue scripts which could accidentally create tens of thousands of parallel executions that you don't want to pay for.\nDead Letter Queues\nIf you want to utilise AWS Lambda's Dead Letter Queue feature simply add the key dead_letter_arn, with the value being the complete ARN to the corresponding SNS topic or SQS queue in your zappa_settings.json.\nYou must have already created the corresponding SNS\/SQS topic\/queue, and the Lambda function execution role must have been provisioned with read\/publish\/sendMessage access to the DLQ resource.\nUnique Package ID\nFor monitoring of different deployments, a unique UUID for each package is available in package_info.json in the root directory of your application's package.  You can use this information or a hash of this file for such things as tracking errors across different deployments, monitoring status of deployments and other such things on services such as Sentry and New Relic. The package will contain:\n{\n  \"build_platform\": \"darwin\",\n  \"build_user\": \"frank\",\n  \"build_time\": \"1509732511\",\n  \"uuid\": \"9c2df9e6-30f4-4c0a-ac4d-4ecb51831a74\"\n}\nApplication Load Balancer Event Source\nZappa can be used to handle events triggered by Application Load Balancers (ALB). This can be useful in a few circumstances:\n\nSince API Gateway has a hard limit of 30 seconds before timing out, you can use an ALB for longer running requests.\nAPI Gateway is billed per-request; therefore, costs can become excessive with high throughput services. ALBs pricing model makes much more sense financially if you're expecting a lot of traffic to your Lambda.\nALBs can be placed within a VPC, which may make more sense for private endpoints than using API Gateway's private model (using AWS PrivateLink).\n\nLike API Gateway, Zappa can automatically provision ALB resources for you.  You'll need to add the following to your zappa_settings:\n\"alb_enabled\": true,\n\"alb_vpc_config\": {\n    \"CertificateArn\": \"arn:aws:acm:us-east-1:[your-account-id]:certificate\/[certificate-id]\",\n    \"SubnetIds\": [\n        \/\/ Here, you'll want to provide a list of subnets for your ALB, eg. 'subnet-02a58266'\n    ],\n    \"SecurityGroupIds\": [\n        \/\/ And here, a list of security group IDs, eg. 'sg-fbacb791'\n    ]\n}\n\nMore information on using ALB as an event source for Lambda can be found here.\nAn important note: right now, Zappa will provision ONE lambda to ONE load balancer, which means using base_path along with ALB configuration is currently unsupported.\nEndpoint Configuration\nAPI Gateway can be configured to be only accessible in a VPC. To enable this; configure your VPC to support then set the endpoint_configuration to PRIVATE and set up Resource Policy on the API Gateway. A note about this; if you're using a private endpoint, Zappa won't be able to tell if the API is returning a successful status code upon deploy or update, so you'll have to check it manually to ensure your setup is working properly.\nFor full list of options for endpoint configuration refer to API Gateway EndpointConfiguration documentation\nExample Private API Gateway configuration\nzappa_settings.json:\n{\n    \"dev\": {\n        ...\n        \"endpoint_configuration\": [\"PRIVATE\"],\n        \"apigateway_policy\": \"apigateway_resource_policy.json\",\n        ...\n    },\n    ...\n}\napigateway_resource_policy.json:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Deny\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:\/*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"aws:sourceVpc\": \"{{vpcID}}\" \/\/ UPDATE ME\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:\/*\"\n        }\n    ]\n}\nZappa Guides\n\nDjango-Zappa tutorial (screencast).\nUsing Django-Zappa, Part 1.\nUsing Django-Zappa, Part 2: VPCs.\nBuilding Serverless Microservices with Zappa and Flask\nZappa \u3067 Hello World \u3059\u308b\u307e\u3067 (Japanese)\nHow to Deploy Zappa with CloudFront, RDS and VPC\nSecure 'Serverless' File Uploads with AWS Lambda, S3, and Zappa\nDeploy a Serverless WSGI App using Zappa, CloudFront, RDS, and VPC\nAWS: Deploy Alexa Ask Skills with Flask-Ask and Zappa\nGuide to using Django with Zappa\nZappa and LambCI\nBuilding A Serverless Image Processing SaaS using Zappa\nServerless Slack Slash Commands with Python and Zappa\nBringing Tokusatsu to AWS using Python, Flask, Zappa and Contentful\nAWS Summit 2018 Seoul - Zappa\uc640 \ud568\uaed8\ud558\ub294 Serverless Microservice\nBook - Building Serverless Python Web Services with Zappa\nVider sa flask dans une lambda[French]\nYour guide here?\n\nZappa in the Press\n\nZappa Serves Python, Minus the Servers\nZappa lyfter serverl\u00f6sa applikationer med Python\nInterview: Rich Jones on Zappa\nTop 10 Python Libraries of 2016\n\nSites Using Zappa\n\nMailchimp Signup Utility - A microservice for adding people to a mailing list via API.\nZappa Slack Inviter - A tiny, server-less service for inviting new users to your Slack channel.\nServerless Image Host - A thumbnailing service with Flask, Zappa and Pillow.\nZappa BitTorrent Tracker - An experimental server-less BitTorrent tracker. Work in progress.\nJankyGlance - A server-less Yahoo! Pipes replacement.\nLambdaMailer - A server-less endpoint for processing a contact form.\nVoter Registration Microservice - Official backup to to the Virginia Department of Elections portal.\nFreePoll Online - A simple and awesome say for groups to make decisions.\nPasteOfCode - A Zappa-powered paste bin.\nAnd many more, including banks, governments, startups, enterprises and schools!\n\nAre you using Zappa? Let us know and we'll list your site here!\nRelated Projects\n\nlambda-packages - Precompiled C-extension packages for AWS Lambda. Used automatically by Zappa.\nMackenzie - AWS Lambda Infection Toolkit\nNoDB - A simple, server-less, Pythonic object store based on S3.\nzappa-cms - A tiny server-less CMS for busy hackers. Work in progress.\nzappa-django-utils - Utility commands to help Django deployments.\nflask-ask - A framework for building Amazon Alexa applications. Uses Zappa for deployments.\nzappa-file-widget - A Django plugin for supporting binary file uploads in Django on Zappa.\nzops - Utilities for teams and continuous integrations using Zappa.\ncookiecutter-mobile-backend - A cookiecutter Django project with Zappa and S3 uploads support.\nzappa-examples - Flask, Django, image uploads, and more!\nzappa-hug-example - Example of a Hug application using Zappa.\nZappa Docker Image - A Docker image for running Zappa locally, based on Lambda Docker.\nzappa-dashing - Monitor your AWS environment (health\/metrics) with Zappa and CloudWatch.\ns3env - Manipulate a remote Zappa environment variable key\/value JSON object file in an S3 bucket through the CLI.\nzappa_resize_image_on_fly - Resize images on the fly using Flask, Zappa, Pillow, and OpenCV-python.\nzappa-ffmpeg - Run ffmpeg inside a lambda for serverless transformations.\ngdrive-lambda - pass json data to a csv file for end users who use Gdrive across the organization.\ntravis-build-repeat - Repeat TravisCI builds to avoid stale test results.\nwunderskill-alexa-skill - An Alexa skill for adding to a Wunderlist.\nxrayvision - Utilities and wrappers for using AWS X-Ray with Zappa.\nterraform-aws-zappa - Terraform modules for creating a VPC, RDS instance, ElastiCache Redis and CloudFront Distribution for use with Zappa.\nzappa-sentry - Integration with Zappa and Sentry\nIOpipe - Monitor, profile and analyze your Zappa apps.\n\nHacks\nZappa goes quite far beyond what Lambda and API Gateway were ever intended to handle. As a result, there are quite a few hacks in here that allow it to work. Some of those include, but aren't limited to..\n\nUsing VTL to map body, headers, method, params and query strings into JSON, and then turning that into valid WSGI.\nAttaching response codes to response bodies, Base64 encoding the whole thing, using that as a regex to route the response code, decoding the body in VTL, and mapping the response body to that.\nPacking and Base58 encoding multiple cookies into a single cookie because we can only map one kind.\nForcing the case permutations of \"Set-Cookie\" in order to return multiple headers at the same time.\nTurning cookie-setting 301\/302 responses into 200 responses with HTML redirects, because we have no way to set headers on redirects.\n\nContributing\nThis project is still young, so there is still plenty to be done. Contributions are more than welcome!\nPlease file tickets for discussion before submitting patches. Pull requests should target master and should leave Zappa in a \"shippable\" state if merged.\nIf you are adding a non-trivial amount of new code, please include a functioning test in your PR. For AWS calls, we use the placebo library, which you can learn to use in their README. The test suite will be run by Travis CI once you open a pull request.\nPlease include the GitHub issue or pull request URL that has discussion related to your changes as a comment in the code (example). This greatly helps for project maintainability, as it allows us to trace back use cases and explain decision making. Similarly, please make sure that you meet all of the requirements listed in the pull request template.\nPlease feel free to work on any open ticket, especially any ticket marked with the \"help-wanted\" label. If you get stuck or want to discuss an issue further, please join our Slack channel, where you'll find a community of smart and interesting people working dilligently on hard problems.\nZappa does not intend to conform to PEP8, isolate your commits so that changes to functionality with changes made by your linter.\nUsing a Local Repo\nTo use the git HEAD, you probably can't use pip install -e . Instead, you should clone the repo to your machine and then pip install \/path\/to\/zappa\/repo or ln -s \/path\/to\/zappa\/repo\/zappa zappa in your local project.\nPatrons\nIf you or your company uses Zappa, please consider giving what you can to support the ongoing development of the project!\nYou can become a patron by visiting our Patreon page.\nZappa is currently supported by these awesome individuals and companies:\n\nNathan Lawrence\nLaunchLab\nSean Paley\nTheo Chitayat\nGeorge Sibble\nJoe Weiss\nNik Bora\nZerong Toby Wang\nGareth E\nMatt Jackson\nSean Coates\nAlexander Loschilov\nKorey Peters\nJoe Weiss\nKimmo Parvianen-Jalanko\nPatrick Agin\nRoberto Martinez\nCharles Dimino\nDoug Beney\nDan \"The Man\" Gayle\nJuancito\nWill Childs-Klein\nEfi Merdler Kravitz\nPhilippe Trounev\n\nThank you very, very much!\nSupport \/ Development \/ Training \/ Consulting\nDo you need help with..\n\nPorting existing Flask and Django applications to Zappa?\nBuilding new applications and services that scale infinitely?\nReducing your operations and hosting costs?\nAdding new custom features into Zappa?\nTraining your team to use AWS and other server-less paradigms?\n\nGood news! We're currently available for remote and on-site consulting for small, large and enterprise teams. Please contact miserlou@gmail.com with your needs and let's work together!\n\n\n\n\n","131":"YAPF\n\n\n\n\n\nIntroduction\nMost of the current formatters for Python --- e.g., autopep8, and pep8ify ---\nare made to remove lint errors from code. This has some obvious limitations.\nFor instance, code that conforms to the PEP 8 guidelines may not be\nreformatted.  But it doesn't mean that the code looks good.\nYAPF takes a different approach. It's based off of 'clang-format', developed by Daniel Jasper. In essence,\nthe algorithm takes the code and reformats it to the best formatting that\nconforms to the style guide, even if the original code didn't violate the\nstyle guide. The idea is also similar to the 'gofmt' tool for the Go programming language: end all holy wars about\nformatting - if the whole codebase of a project is simply piped through YAPF\nwhenever modifications are made, the style remains consistent throughout the\nproject and there's no point arguing about style in every code review.\nThe ultimate goal is that the code YAPF produces is as good as the code that a\nprogrammer would write if they were following the style guide. It takes away\nsome of the drudgery of maintaining your code.\nTry out YAPF with this online demo.\n\nContents\n\nIntroduction\nInstallation\nPython versions\nUsage\nReturn Codes\nExcluding files from formatting (.yapfignore)\n\n\nFormatting style\nExample\nExample as a module\nFormatting diffs\nKnobs\n(Potentially) Frequently Asked Questions\nWhy does YAPF destroy my awesome formatting?\nWhy Not Improve Existing Tools?\nCan I Use YAPF In My Program?\nI still get non Pep8 compliant code! Why?\n\n\nGory Details\nAlgorithm Design\n\n\n\n\n\nInstallation\nTo install YAPF from PyPI:\n$ pip install yapf\n(optional) If you are using Python 2.7 and want to enable multiprocessing:\n$ pip install futures\nYAPF is still considered in \"alpha\" stage, and the released version may change\noften; therefore, the best way to keep up-to-date with the latest development\nis to clone this repository.\nNote that if you intend to use YAPF as a command-line tool rather than as a\nlibrary, installation is not necessary. YAPF supports being run as a directory\nby the Python interpreter. If you cloned\/unzipped YAPF into DIR, it's\npossible to run:\n$ PYTHONPATH=DIR python DIR\/yapf [options] ...\n\nPython versions\nYAPF supports Python 2.7 and 3.6.4+. (Note that some Python 3 features may fail\nto parse with Python versions before 3.6.4.)\nYAPF requires the code it formats to be valid Python for the version YAPF itself\nruns under. Therefore, if you format Python 3 code with YAPF, run YAPF itself\nunder Python 3 (and similarly for Python 2).\n\nUsage\nOptions:\nusage: yapf [-h] [-v] [-d | -i] [-r | -l START-END] [-e PATTERN]\n            [--style STYLE] [--style-help] [--no-local-style] [-p]\n            [-vv]\n            [files [files ...]]\n\nFormatter for Python code.\n\npositional arguments:\n  files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show version number and exit\n  -d, --diff            print the diff for the fixed source\n  -i, --in-place        make changes to files in place\n  -r, --recursive       run recursively over directories\n  -l START-END, --lines START-END\n                        range of lines to reformat, one-based\n  -e PATTERN, --exclude PATTERN\n                        patterns for files to exclude from formatting\n  --style STYLE         specify formatting style: either a style name (for\n                        example \"pep8\" or \"google\"), or the name of a file\n                        with style settings. The default is pep8 unless a\n                        .style.yapf or setup.cfg file located in the same\n                        directory as the source or one of its parent\n                        directories (for stdin, the current directory is\n                        used).\n  --style-help          show style settings and exit; this output can be saved\n                        to .style.yapf to make your settings permanent\n  --no-local-style      don't search for local style definition\n  -p, --parallel        Run yapf in parallel when formatting multiple files.\n                        Requires concurrent.futures in Python 2.X\n  -vv, --verbose        Print out file names while processing\n\n\nReturn Codes\nNormally YAPF returns zero on successful program termination and non-zero otherwise.\nIf --diff is supplied, YAPF returns zero when no changes were necessary, non-zero\notherwise (including program error). You can use this in a CI workflow to test that code\nhas been YAPF-formatted.\n\nExcluding files from formatting (.yapfignore)\nIn addition to exclude patterns provided on commandline, YAPF looks for additional\npatterns specified in a file named .yapfignore located in the working directory from\nwhich YAPF is invoked.\n.yapfignore's syntax is similar to UNIX's filename pattern matching:\n*       matches everything\n?       matches any single character\n[seq]   matches any character in seq\n[!seq]  matches any character not in seq\n\nNote that no entry should begin with .\/.\n\nFormatting style\nThe formatting style used by YAPF is configurable and there are many \"knobs\"\nthat can be used to tune how YAPF does formatting. See the style.py module\nfor the full list.\nTo control the style, run YAPF with the --style argument. It accepts one of\nthe predefined styles (e.g., pep8 or google), a path to a configuration\nfile that specifies the desired style, or a dictionary of key\/value pairs.\nThe config file is a simple listing of (case-insensitive) key = value pairs\nwith a [yapf] heading. For example:\n[yapf]\nbased_on_style = pep8\nspaces_before_comment = 4\nsplit_before_logical_operator = true\nThe based_on_style setting determines which of the predefined styles this\ncustom style is based on (think of it like subclassing). Four\nstyles are predefined: pep8 (default), google, yapf, and facebook\n(see _STYLE_NAME_TO_FACTORY in style.py).\nIt's also possible to do the same on the command line with a dictionary. For\nexample:\n--style='{based_on_style: pep8, indent_width: 2}'\nThis will take the pep8 base style and modify it to have two space\nindentations.\nYAPF will search for the formatting style in the following manner:\n\nSpecified on the command line\nIn the [style] section of a .style.yapf file in either the current\ndirectory or one of its parent directories.\nIn the [yapf] section of a setup.cfg file in either the current\ndirectory or one of its parent directories.\nIn the [style] section of a ~\/.config\/yapf\/style file in your home\ndirectory.\n\nIf none of those files are found, the default style is used (PEP8).\n\nExample\nAn example of the type of formatting that YAPF can do, it will take this ugly\ncode:\nx = {  'a':37,'b':42,\n\n'c':927}\n\ny = 'hello ''world'\nz = 'hello '+'world'\na = 'hello {}'.format('world')\nclass foo  (     object  ):\n  def f    (self   ):\n    return       37*-+2\n  def g(self, x,y=42):\n      return y\ndef f  (   a ) :\n  return      37+-+a[42-x :  y**3]\nand reformat it into:\nx = {'a': 37, 'b': 42, 'c': 927}\n\ny = 'hello ' 'world'\nz = 'hello ' + 'world'\na = 'hello {}'.format('world')\n\n\nclass foo(object):\n    def f(self):\n        return 37 * -+2\n\n    def g(self, x, y=42):\n        return y\n\n\ndef f(a):\n    return 37 + -+a[42 - x:y**3]\n\nExample as a module\nThe two main APIs for calling yapf are FormatCode and FormatFile, these\nshare several arguments which are described below:\n>>> from yapf.yapflib.yapf_api import FormatCode  # reformat a string of code\n\n>>> FormatCode(\"f ( a = 1, b = 2 )\")\n'f(a=1, b=2)\\n'\nA style_config argument: Either a style name or a path to a file that contains\nformatting style settings. If None is specified, use the default style\nas set in style.DEFAULT_STYLE_FACTORY.\n>>> FormatCode(\"def g():\\n  return True\", style_config='pep8')\n'def g():\\n    return True\\n'\nA lines argument: A list of tuples of lines (ints), [start, end],\nthat we want to format. The lines are 1-based indexed. It can be used by\nthird-party code (e.g., IDEs) when reformatting a snippet of code rather\nthan a whole file.\n>>> FormatCode(\"def g( ):\\n    a=1\\n    b = 2\\n    return a==b\", lines=[(1, 1), (2, 3)])\n'def g():\\n    a = 1\\n    b = 2\\n    return a==b\\n'\nA print_diff (bool): Instead of returning the reformatted source, return a\ndiff that turns the formatted source into reformatter source.\n>>> print(FormatCode(\"a==b\", filename=\"foo.py\", print_diff=True))\n--- foo.py (original)\n+++ foo.py (reformatted)\n@@ -1 +1 @@\n-a==b\n+a == b\nNote: the filename argument for FormatCode is what is inserted into\nthe diff, the default is <unknown>.\nFormatFile returns reformatted code from the passed file along with its encoding:\n>>> from yapf.yapflib.yapf_api import FormatFile  # reformat a file\n\n>>> print(open(\"foo.py\").read())  # contents of file\na==b\n\n>>> FormatFile(\"foo.py\")\n('a == b\\n', 'utf-8')\nThe in_place argument saves the reformatted code back to the file:\n>>> FormatFile(\"foo.py\", in_place=True)\n(None, 'utf-8')\n\n>>> print(open(\"foo.py\").read())  # contents of file (now fixed)\na == b\n\nFormatting diffs\nOptions:\nusage: yapf-diff [-h] [-i] [-p NUM] [--regex PATTERN] [--iregex PATTERN][-v]\n                 [--style STYLE] [--binary BINARY]\n\nThis script reads input from a unified diff and reformats all the changed\nlines. This is useful to reformat all the lines touched by a specific patch.\nExample usage for git\/svn users:\n\n  git diff -U0 --no-color --relative HEAD^ | yapf-diff -i\n  svn diff --diff-cmd=diff -x-U0 | yapf-diff -p0 -i\n\nIt should be noted that the filename contained in the diff is used\nunmodified to determine the source file to update. Users calling this script\ndirectly should be careful to ensure that the path in the diff is correct\nrelative to the current working directory.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --in-place        apply edits to files instead of displaying a diff\n  -p NUM, --prefix NUM  strip the smallest prefix containing P slashes\n  --regex PATTERN       custom pattern selecting file paths to reformat\n                        (case sensitive, overrides -iregex)\n  --iregex PATTERN      custom pattern selecting file paths to reformat\n                        (case insensitive, overridden by -regex)\n  -v, --verbose         be more verbose, ineffective without -i\n  --style STYLE         specify formatting style: either a style name (for\n                        example \"pep8\" or \"google\"), or the name of a file\n                        with style settings. The default is pep8 unless a\n                        .style.yapf or setup.cfg file located in one of the\n                        parent directories of the source file (or current\n                        directory for stdin)\n  --binary BINARY       location of binary to use for yapf\n\n\nKnobs\n\nALIGN_CLOSING_BRACKET_WITH_VISUAL_INDENT\nAlign closing bracket with visual indentation.\nALLOW_MULTILINE_LAMBDAS\nAllow lambdas to be formatted on more than one line.\nALLOW_MULTILINE_DICTIONARY_KEYS\nAllow dictionary keys to exist on multiple lines. For example:\nx = {\n    ('this is the first element of a tuple',\n     'this is the second element of a tuple'):\n         value,\n}\n\nALLOW_SPLIT_BEFORE_DEFAULT_OR_NAMED_ASSIGNS\nAllow splitting before a default \/ named assignment in an argument list.\nALLOW_SPLIT_BEFORE_DICT_VALUE\nAllow splits before the dictionary value.\nARITHMETIC_PRECEDENCE_INDICATION\nLet spacing indicate operator precedence. For example:\na = 1 * 2 + 3 \/ 4\nb = 1 \/ 2 - 3 * 4\nc = (1 + 2) * (3 - 4)\nd = (1 - 2) \/ (3 + 4)\ne = 1 * 2 - 3\nf = 1 + 2 + 3 + 4\nwill be formatted as follows to indicate precedence:\na = 1*2 + 3\/4\nb = 1\/2 - 3*4\nc = (1+2) * (3-4)\nd = (1-2) \/ (3+4)\ne = 1*2 - 3\nf = 1 + 2 + 3 + 4\n\nBLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF\nInsert a blank line before a def or class immediately nested within\nanother def or class. For example:\nclass Foo:\n                   # <------ this blank line\n    def method():\n        pass\n\nBLANK_LINE_BEFORE_MODULE_DOCSTRING\nInsert a blank line before a module docstring.\nBLANK_LINE_BEFORE_CLASS_DOCSTRING\nInsert a blank line before a class-level docstring.\nBLANK_LINES_AROUND_TOP_LEVEL_DEFINITION\nSets the number of desired blank lines surrounding top-level function and\nclass definitions. For example:\nclass Foo:\n    pass\n                   # <------ having two blank lines here\n                   # <------ is the default setting\nclass Bar:\n    pass\n\nBLANK_LINES_BETWEEN_TOP_LEVEL_IMPORTS_AND_VARIABLES\nSets the number of desired blank lines between top-level imports and\nvariable definitions. Useful for compatibility with tools like isort.\nCOALESCE_BRACKETS\nDo not split consecutive brackets. Only relevant when\nDEDENT_CLOSING_BRACKETS or INDENT_CLOSING_BRACKETS\nis set. For example:\ncall_func_that_takes_a_dict(\n    {\n        'key1': 'value1',\n        'key2': 'value2',\n    }\n)\nwould reformat to:\ncall_func_that_takes_a_dict({\n    'key1': 'value1',\n    'key2': 'value2',\n})\n\nCOLUMN_LIMIT\nThe column limit (or max line-length)\nCONTINUATION_ALIGN_STYLE\nThe style for continuation alignment. Possible values are:\n\nSPACE: Use spaces for continuation alignment. This is default\nbehavior.\nFIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n(ie: CONTINUATION_INDENT_WIDTH\/INDENT_WIDTH tabs or CONTINUATION_INDENT_WIDTH\nspaces) for continuation alignment.\nVALIGN-RIGHT: Vertically align continuation lines to multiple of\nINDENT_WIDTH columns. Slightly right (one tab or a few spaces) if cannot\nvertically align continuation lines with indent characters.\n\n\nCONTINUATION_INDENT_WIDTH\nIndent width used for line continuations.\nDEDENT_CLOSING_BRACKETS\nPut closing brackets on a separate line, dedented, if the bracketed\nexpression can't fit in a single line. Applies to all kinds of brackets,\nincluding function definitions and calls. For example:\nconfig = {\n    'key1': 'value1',\n    'key2': 'value2',\n}  # <--- this bracket is dedented and on a separate line\n\ntime_series = self.remote_client.query_entity_counters(\n    entity='dev3246.region1',\n    key='dns.query_latency_tcp',\n    transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n    start_ts=now()-timedelta(days=3),\n    end_ts=now(),\n)  # <--- this bracket is dedented and on a separate line\n\nDISABLE_ENDING_COMMA_HEURISTIC\nDisable the heuristic which places each list element on a separate line if\nthe list is comma-terminated.\nEACH_DICT_ENTRY_ON_SEPARATE_LINE\nPlace each dictionary entry onto its own line.\nFORCE_MULTILINE_DICT\nRespect EACH_DICT_ENTRY_ON_SEPARATE_LINE even if the line is shorter than\nCOLUMN_LIMIT.\nI18N_COMMENT\nThe regex for an internationalization comment. The presence of this comment\nstops reformatting of that line, because the comments are required to be\nnext to the string they translate.\nI18N_FUNCTION_CALL\nThe internationalization function call names. The presence of this function\nstops reformatting on that line, because the string it has cannot be moved\naway from the i18n comment.\nINDENT_DICTIONARY_VALUE\nIndent the dictionary value if it cannot fit on the same line as the\ndictionary key. For example:\nconfig = {\n    'key1':\n        'value1',\n    'key2': value1 +\n            value2,\n}\n\nINDENT_WIDTH\nThe number of columns to use for indentation.\nINDENT_BLANK_LINES\nSet to True to prefer indented blank lines rather than empty\nINDENT_CLOSING_BRACKETS\nPut closing brackets on a separate line, indented, if the bracketed\nexpression can't fit in a single line. Applies to all kinds of brackets,\nincluding function definitions and calls. For example:\nconfig = {\n    'key1': 'value1',\n    'key2': 'value2',\n    }  # <--- this bracket is indented and on a separate line\n\ntime_series = self.remote_client.query_entity_counters(\n    entity='dev3246.region1',\n    key='dns.query_latency_tcp',\n    transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n    start_ts=now()-timedelta(days=3),\n    end_ts=now(),\n    )  # <--- this bracket is indented and on a separate line\n\nJOIN_MULTIPLE_LINES\nJoin short lines into one line. E.g., single line if statements.\nNO_SPACES_AROUND_SELECTED_BINARY_OPERATORS\nDo not include spaces around selected binary operators. For example:\n1 + 2 * 3 - 4 \/ 5\nwill be formatted as follows when configured with *, \/:\n1 + 2*3 - 4\/5\n\nSPACES_AROUND_POWER_OPERATOR\nSet to True to prefer using spaces around **.\nSPACES_AROUND_DEFAULT_OR_NAMED_ASSIGN\nSet to True to prefer spaces around the assignment operator for default\nor keyword arguments.\nSPACES_AROUND_DICT_DELIMITERS\nAdds a space after the opening '{' and before the ending '}' dict delimiters.\n{1: 2}\nwill be formatted as:\n{ 1: 2 }\n\nSPACES_AROUND_LIST_DELIMITERS\nAdds a space after the opening '[' and before the ending ']' list delimiters.\n[1, 2]\nwill be formatted as:\n[ 1, 2 ]\n\nSPACES_AROUND_SUBSCRIPT_COLON\nUse spaces around the subscript \/ slice operator.  For example:\nmy_list[1 : 10 : 2]\n\nSPACES_AROUND_TUPLE_DELIMITERS\nAdds a space after the opening '(' and before the ending ')' tuple delimiters.\n(1, 2, 3)\nwill be formatted as:\n( 1, 2, 3 )\n\nSPACES_BEFORE_COMMENT\nThe number of spaces required before a trailing comment.\nThis can be a single value (representing the number of spaces\nbefore each trailing comment) or list of of values (representing\nalignment column values; trailing comments within a block will\nbe aligned to the first column value that is greater than the maximum\nline length within the block). For example:\nWith spaces_before_comment=5:\n1 + 1 # Adding values\nwill be formatted as:\n1 + 1     # Adding values <-- 5 spaces between the end of the statement and comment\nWith spaces_before_comment=15, 20:\n1 + 1 # Adding values\ntwo + two # More adding\n\nlonger_statement # This is a longer statement\nshort # This is a shorter statement\n\na_very_long_statement_that_extends_beyond_the_final_column # Comment\nshort # This is a shorter statement\nwill be formatted as:\n1 + 1          # Adding values <-- end of line comments in block aligned to col 15\ntwo + two      # More adding\n\nlonger_statement    # This is a longer statement <-- end of line comments in block aligned to col 20\nshort               # This is a shorter statement\n\na_very_long_statement_that_extends_beyond_the_final_column  # Comment <-- the end of line comments are aligned based on the line length\nshort                                                       # This is a shorter statement\n\nSPACE_BETWEEN_ENDING_COMMA_AND_CLOSING_BRACKET\nInsert a space between the ending comma and closing bracket of a list, etc.\nSPACE_INSIDE_BRACKETS\nUse spaces inside brackets, braces, and parentheses.  For example:\nmethod_call( 1 )\nmy_dict[ 3 ][ 1 ][ get_index( *args, **kwargs ) ]\nmy_set = { 1, 2, 3 }\n\nSPLIT_ARGUMENTS_WHEN_COMMA_TERMINATED\nSplit before arguments if the argument list is terminated by a comma.\nSPLIT_ALL_COMMA_SEPARATED_VALUES\nIf a comma separated list (dict, list, tuple, or function\ndef) is on a line that is too long, split such that all elements\nare on a single line.\nSPLIT_ALL_TOP_LEVEL_COMMA_SEPARATED_VALUES\nVariation on SPLIT_ALL_COMMA_SEPARATED_VALUES in which, if a\nsubexpression with a comma fits in its starting line, then the\nsubexpression is not split. This avoids splits like the one for\nb in this code:\nabcdef(\n    aReallyLongThing: int,\n    b: [Int,\n        Int])\nWith the new knob this is split as:\nabcdef(\n    aReallyLongThing: int,\n    b: [Int, Int])\n\nSPLIT_BEFORE_BITWISE_OPERATOR\nSet to True to prefer splitting before &, | or ^ rather\nthan after.\nSPLIT_BEFORE_ARITHMETIC_OPERATOR\nSet to True to prefer splitting before +, -, *, \/, \/\/,\nor @ rather than after.\nSPLIT_BEFORE_CLOSING_BRACKET\nSplit before the closing bracket if a list or dict literal doesn't\nfit on a single line.\nSPLIT_BEFORE_DICT_SET_GENERATOR\nSplit before a dictionary or set generator (comp_for). For example, note\nthe split before the for:\nfoo = {\n    variable: 'Hello world, have a nice day!'\n    for variable in bar if variable != 42\n}\n\nSPLIT_BEFORE_DOT\nSplit before the . if we need to split a longer expression:\nfoo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\nwould reformat to something like:\nfoo = ('This is a really long string: {}, {}, {}, {}'\n       .format(a, b, c, d))\n\nSPLIT_BEFORE_EXPRESSION_AFTER_OPENING_PAREN\nSplit after the opening paren which surrounds an expression if it doesn't\nfit on a single line.\nSPLIT_BEFORE_FIRST_ARGUMENT\nIf an argument \/ parameter list is going to be split, then split before the\nfirst argument.\nSPLIT_BEFORE_LOGICAL_OPERATOR\nSet to True to prefer splitting before and or or rather than\nafter.\nSPLIT_BEFORE_NAMED_ASSIGNS\nSplit named assignments onto individual lines.\nSPLIT_COMPLEX_COMPREHENSION\nFor list comprehensions and generator expressions with multiple clauses\n(e.g multiple for calls, if filter expressions) and which need to\nbe reflowed, split each clause onto its own line. For example:\nresult = [\n    a_var + b_var for a_var in xrange(1000) for b_var in xrange(1000)\n    if a_var % b_var]\nwould reformat to something like:\nresult = [\n    a_var + b_var\n    for a_var in xrange(1000)\n    for b_var in xrange(1000)\n    if a_var % b_var]\n\nSPLIT_PENALTY_AFTER_OPENING_BRACKET\nThe penalty for splitting right after the opening bracket.\nSPLIT_PENALTY_AFTER_UNARY_OPERATOR\nThe penalty for splitting the line after a unary operator.\nSPLIT_PENALTY_ARITHMETIC_OPERATOR\nThe penalty of splitting the line around the +, -, *, \/,\n\/\/, %, and @ operators.\nSPLIT_PENALTY_BEFORE_IF_EXPR\nThe penalty for splitting right before an if expression.\nSPLIT_PENALTY_BITWISE_OPERATOR\nThe penalty of splitting the line around the &, |, and ^\noperators.\nSPLIT_PENALTY_COMPREHENSION\nThe penalty for splitting a list comprehension or generator expression.\nSPLIT_PENALTY_EXCESS_CHARACTER\nThe penalty for characters over the column limit.\nSPLIT_PENALTY_FOR_ADDED_LINE_SPLIT\nThe penalty incurred by adding a line split to the unwrapped line. The more\nline splits added the higher the penalty.\nSPLIT_PENALTY_IMPORT_NAMES\nThe penalty of splitting a list of import as names. For example:\nfrom a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n                                                          long_argument_2,\n                                                          long_argument_3)\nwould reformat to something like:\nfrom a_very_long_or_indented_module_name_yada_yad import (\n    long_argument_1, long_argument_2, long_argument_3)\n\nSPLIT_PENALTY_LOGICAL_OPERATOR\nThe penalty of splitting the line around the and and or operators.\nUSE_TABS\nUse the Tab character for indentation.\n\n\n(Potentially) Frequently Asked Questions\n\nWhy does YAPF destroy my awesome formatting?\nYAPF tries very hard to get the formatting correct. But for some code, it won't\nbe as good as hand-formatting. In particular, large data literals may become\nhorribly disfigured under YAPF.\nThe reasons for this are manyfold. In short, YAPF is simply a tool to help\nwith development. It will format things to coincide with the style guide, but\nthat may not equate with readability.\nWhat can be done to alleviate this situation is to indicate regions YAPF should\nignore when reformatting something:\n# yapf: disable\nFOO = {\n    # ... some very large, complex data literal.\n}\n\nBAR = [\n    # ... another large data literal.\n]\n# yapf: enable\nYou can also disable formatting for a single literal like this:\nBAZ = {\n    (1, 2, 3, 4),\n    (5, 6, 7, 8),\n    (9, 10, 11, 12),\n}  # yapf: disable\nTo preserve the nice dedented closing brackets, use the\ndedent_closing_brackets in your style. Note that in this case all\nbrackets, including function definitions and calls, are going to use\nthat style.  This provides consistency across the formatted codebase.\n\nWhy Not Improve Existing Tools?\nWe wanted to use clang-format's reformatting algorithm. It's very powerful and\ndesigned to come up with the best formatting possible. Existing tools were\ncreated with different goals in mind, and would require extensive modifications\nto convert to using clang-format's algorithm.\n\nCan I Use YAPF In My Program?\nPlease do! YAPF was designed to be used as a library as well as a command line\ntool. This means that a tool or IDE plugin is free to use YAPF.\n\nI still get non Pep8 compliant code! Why?\nYAPF tries very hard to be fully PEP 8 compliant. However, it is paramount\nto not risk altering the semantics of your code. Thus, YAPF tries to be as\nsafe as possible and does not change the token stream\n(e.g., by adding parentheses).\nAll these cases however, can be easily fixed manually. For instance,\nfrom my_package import my_function_1, my_function_2, my_function_3, my_function_4, my_function_5\n\nFOO = my_variable_1 + my_variable_2 + my_variable_3 + my_variable_4 + my_variable_5 + my_variable_6 + my_variable_7 + my_variable_8\nwon't be split, but you can easily get it right by just adding parentheses:\nfrom my_package import (my_function_1, my_function_2, my_function_3,\n                        my_function_4, my_function_5)\n\nFOO = (my_variable_1 + my_variable_2 + my_variable_3 + my_variable_4 +\n       my_variable_5 + my_variable_6 + my_variable_7 + my_variable_8)\n\nGory Details\n\nAlgorithm Design\nThe main data structure in YAPF is the UnwrappedLine object. It holds a list\nof FormatTokens, that we would want to place on a single line if there were\nno column limit. An exception being a comment in the middle of an expression\nstatement will force the line to be formatted on more than one line. The\nformatter works on one UnwrappedLine object at a time.\nAn UnwrappedLine typically won't affect the formatting of lines before or\nafter it. There is a part of the algorithm that may join two or more\nUnwrappedLines into one line. For instance, an if-then statement with a\nshort body can be placed on a single line:\nif a == 42: continue\nYAPF's formatting algorithm creates a weighted tree that acts as the solution\nspace for the algorithm. Each node in the tree represents the result of a\nformatting decision --- i.e., whether to split or not to split before a token.\nEach formatting decision has a cost associated with it. Therefore, the cost is\nrealized on the edge between two nodes. (In reality, the weighted tree doesn't\nhave separate edge objects, so the cost resides on the nodes themselves.)\nFor example, take the following Python code snippet. For the sake of this\nexample, assume that line (1) violates the column limit restriction and needs to\nbe reformatted.\ndef xxxxxxxxxxx(aaaaaaaaaaaa, bbbbbbbbb, cccccccc, dddddddd, eeeeee):  # 1\n    pass                                                               # 2\nFor line (1), the algorithm will build a tree where each node (a\nFormattingDecisionState object) is the state of the line at that token given\nthe decision to split before the token or not. Note: the FormatDecisionState\nobjects are copied by value so each node in the graph is unique and a change in\none doesn't affect other nodes.\nHeuristics are used to determine the costs of splitting or not splitting.\nBecause a node holds the state of the tree up to a token's insertion, it can\neasily determine if a splitting decision will violate one of the style\nrequirements. For instance, the heuristic is able to apply an extra penalty to\nthe edge when not splitting between the previous token and the one being added.\nThere are some instances where we will never want to split the line, because\ndoing so will always be detrimental (i.e., it will require a backslash-newline,\nwhich is very rarely desirable). For line (1), we will never want to split the\nfirst three tokens: def, xxxxxxxxxxx, and (. Nor will we want to\nsplit between the ) and the : at the end. These regions are said to be\n\"unbreakable.\" This is reflected in the tree by there not being a \"split\"\ndecision (left hand branch) within the unbreakable region.\nNow that we have the tree, we determine what the \"best\" formatting is by finding\nthe path through the tree with the lowest cost.\nAnd that's it!\n\n\nYAPF is not an official Google product (experimental or otherwise), it is\njust code that happens to be owned by Google.\n","132":"\ud83d\ude82 py12306 \u8d2d\u7968\u52a9\u624b\n\u5206\u5e03\u5f0f\uff0c\u591a\u8d26\u53f7\uff0c\u591a\u4efb\u52a1\u8d2d\u7968\nFeatures\n\n \u591a\u65e5\u671f\u67e5\u8be2\u4f59\u7968\n \u81ea\u52a8\u6253\u7801\u4e0b\u5355\n \u7528\u6237\u72b6\u6001\u6062\u590d\n \u7535\u8bdd\u8bed\u97f3\u901a\u77e5\n \u591a\u8d26\u53f7\u3001\u591a\u4efb\u52a1\u3001\u591a\u7ebf\u7a0b\u652f\u6301\n \u5355\u4e2a\u4efb\u52a1\u591a\u7ad9\u70b9\u67e5\u8be2\n \u5206\u5e03\u5f0f\u8fd0\u884c\n Docker \u652f\u6301\n \u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\n \u90ae\u4ef6\u901a\u77e5\n Web \u7ba1\u7406\u9875\u9762\n \u5fae\u4fe1\u6d88\u606f\u901a\u77e5\n \u4ee3\u7406\u6c60\u652f\u6301 (pyproxy-async)\n\n\u4f7f\u7528\npy12306 \u9700\u8981\u8fd0\u884c\u5728 python 3.6 \u4ee5\u4e0a\u7248\u672c\uff08\u5176\u5b83\u7248\u672c\u6682\u672a\u6d4b\u8bd5)\n1. \u5b89\u88c5\u4f9d\u8d56\ngit clone https:\/\/github.com\/pjialin\/py12306\n\npip install -r requirements.txt\n2. \u914d\u7f6e\u7a0b\u5e8f\ncp env.py.example env.py\n\u81ea\u52a8\u6253\u7801\n\uff08\u82e5\u5feb\u5df2\u505c\u6b62\u670d\u52a1\uff0c\u76ee\u524d\u53ea\u80fd\u8bbe\u7f6efree\u6253\u7801\u6a21\u5f0f\uff09\nfree \u5df2\u5bf9\u63a5\u5230\u6253\u7801\u5171\u4eab\u5e73\u53f0\uff0chttps:\/\/py12306-helper.pjialin.com\uff0c\u6b22\u8fce\u53c2\u4e0e\u5206\u4eab\n\u8bed\u97f3\u901a\u77e5\n\u8bed\u97f3\u9a8c\u8bc1\u7801\u4f7f\u7528\u7684\u662f\u963f\u91cc\u4e91 API \u5e02\u573a\u4e0a\u7684\u4e00\u4e2a\u670d\u52a1\u5546\uff0c\u9700\u8981\u5230 https:\/\/market.aliyun.com\/products\/56928004\/cmapi026600.html \u8d2d\u4e70\u540e\u5c06 appcode \u586b\u5199\u5230\u914d\u7f6e\u4e2d\n3. \u542f\u52a8\u524d\u6d4b\u8bd5\n\u76ee\u524d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u5305\u62ec\u7528\u6237\u8d26\u53f7\u68c0\u6d4b\uff0c\u4e58\u5ba2\u4fe1\u606f\u68c0\u6d4b\uff0c\u8f66\u7ad9\u68c0\u6d4b\u7b49\n\u5f00\u59cb\u6d4b\u8bd5 -t\npython main.py -t\n\u6d4b\u8bd5\u901a\u77e5\u6d88\u606f (\u8bed\u97f3, \u90ae\u4ef6) -t -n\n# \u9ed8\u8ba4\u4e0d\u4f1a\u8fdb\u884c\u901a\u77e5\u6d4b\u8bd5\uff0c\u8981\u5bf9\u901a\u77e5\u8fdb\u884c\u6d4b\u8bd5\u9700\u8981\u52a0\u4e0a -n \u53c2\u6570 \npython main.py -t -n\n4. \u8fd0\u884c\u7a0b\u5e8f\npython main.py\n\u53c2\u6570\u5217\u8868\n\n-t \u6d4b\u8bd5\u914d\u7f6e\u4fe1\u606f\n-t -n \u6d4b\u8bd5\u914d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u901a\u77e5\u6d88\u606f\n-c \u6307\u5b9a\u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\n\n\u5206\u5e03\u5f0f\u96c6\u7fa4\n\u96c6\u7fa4\u4f9d\u8d56\u4e8e redis\uff0c\u76ee\u524d\u652f\u6301\u60c5\u51b5\n\n\u5355\u53f0\u4e3b\u8282\u70b9\u591a\u4e2a\u5b50\u8282\u70b9\u540c\u65f6\u8fd0\u884c\n\u4e3b\u8282\u70b9\u5b95\u673a\u540e\u81ea\u52a8\u5207\u6362\u63d0\u5347\u5b50\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\n\u4e3b\u8282\u70b9\u6062\u590d\u540e\u81ea\u52a8\u6062\u590d\u4e3a\u771f\u5b9e\u4e3b\u8282\u70b9\n\u914d\u7f6e\u901a\u8fc7\u4e3b\u8282\u70b9\u540c\u6b65\u5230\u6240\u6709\u5b50\u8282\u70b9\n\u4e3b\u8282\u70b9\u914d\u7f6e\u4fee\u6539\u540e\u65e0\u9700\u91cd\u542f\u5b50\u8282\u70b9\uff0c\u652f\u6301\u81ea\u52a8\u66f4\u65b0\n\u5b50\u8282\u70b9\u6d88\u606f\u5b9e\u65f6\u540c\u6b65\u5230\u4e3b\u8282\u70b9\n\n\u4f7f\u7528\n\u5c06\u914d\u7f6e\u6587\u4ef6\u7684\u4e2d CLUSTER_ENABLED \u6253\u5f00\u5373\u5f00\u542f\u5206\u5e03\u5f0f\n\u76ee\u524d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u5b50\u8282\u70b9\u914d\u7f6e\u6587\u4ef6 env.slave.py.example \u5c06\u6587\u4ef6\u4fee\u6539\u4e3a env.slave.py\uff0c \u901a\u8fc7 python main.py -c env.slave.py \u5373\u53ef\u5feb\u901f\u542f\u52a8\nDocker \u4f7f\u7528\n1. \u5c06\u914d\u7f6e\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\ndocker run --rm pjialin\/py12306 cat \/config\/env.py > env.py\n# \u6216\ncurl https:\/\/raw.githubusercontent.com\/pjialin\/py12306\/master\/env.docker.py.example -o env.py\n2. \u4fee\u6539\u597d\u914d\u7f6e\u540e\u8fd0\u884c\ndocker run --rm --name py12306 -p 8008:8008 -d -v $(pwd):\/config -v py12306:\/data pjialin\/py12306\n\u5f53\u524d\u76ee\u5f55\u4f1a\u591a\u4e00\u4e2a 12306.log \u7684\u65e5\u5fd7\u6587\u4ef6\uff0c tail -f 12306.log\nDocker-compose \u4e2d\u4f7f\u7528\n1. \u590d\u5236\u914d\u7f6e\u6587\u4ef6\ncp docker-compose.yml.example docker-compose.yml\n\n2. \u4ece docker-compose \u8fd0\u884c\n\u5728docker-compose.yml\u6240\u5728\u7684\u76ee\u5f55\u4f7f\u7528\u547d\u4ee4\ndocker-compose up -d\n\nWeb \u7ba1\u7406\u9875\u9762\n\u76ee\u524d\u652f\u6301\u7528\u6237\u548c\u4efb\u52a1\u4ee5\u53ca\u5b9e\u65f6\u65e5\u5fd7\u67e5\u770b\uff0c\u66f4\u591a\u529f\u80fd\u540e\u7eed\u4f1a\u4e0d\u65ad\u52a0\u5165\n\u4f7f\u7528\n\u6253\u5f00 Web \u529f\u80fd\u9700\u8981\u5c06\u914d\u7f6e\u4e2d\u7684 WEB_ENABLE \u6253\u5f00\uff0c\u542f\u52a8\u7a0b\u5e8f\u540e\u8bbf\u95ee\u5f53\u524d\u4e3b\u673a\u5730\u5740 + \u7aef\u53e3\u53f7 (\u9ed8\u8ba4 8008) \u5373\u53ef\uff0c\u5982 http:\/\/127.0.0.1:8008\n\u66f4\u65b0\n\n19-01-10\n\n\u652f\u6301\u5206\u5e03\u5f0f\u96c6\u7fa4\n\n\n19-01-11\n\n\u914d\u7f6e\u6587\u4ef6\u652f\u6301\u52a8\u6001\u4fee\u6539\n\n\n19-01-12\n\n\u65b0\u589e\u514d\u8d39\u6253\u7801\n\n\n19-01-14\n\n\u65b0\u589e Web \u9875\u9762\u652f\u6301\n\n\n19-01-15\n\n\u65b0\u589e \u9489\u9489\u901a\u77e5\n\u65b0\u589e Telegram \u901a\u77e5\n\u65b0\u589e ServerChan \u548c PushBear \u5fae\u4fe1\u63a8\u9001\n\n\n19-01-18\n\n\u65b0\u589e CDN \u67e5\u8be2\n\n\n\n\u622a\u56fe\nWeb \u7ba1\u7406\u9875\u9762\n\n\u4e0b\u5355\u6210\u529f\n\n\u5173\u4e8e\u9632\u5c01\n\u76ee\u524d\u67e5\u8be2\u548c\u767b\u5f55\u64cd\u4f5c\u662f\u5206\u5f00\u7684\uff0c\u67e5\u8be2\u662f\u4e0d\u4f9d\u8d56\u7528\u6237\u662f\u5426\u767b\u5f55\uff0c\u653e\u5728 A \u4e91 T \u4e91\u5bb9\u6613\u88ab\u9650\u5236 ip\uff0c\u5efa\u8bae\u5728\u5176\u5b83\u7f51\u7edc\u73af\u5883\u4e0b\u8fd0\u884c\nQQ \u4ea4\u6d41\u7fa4 780289875\uff0cTG \u7fa4 Py12306 \u4ea4\u6d41\nOnline IDE\n\nThanks\n\n\u611f\u8c22\u5927\u4f6c testerSunshine\uff0c\u501f\u9274\u4e86\u90e8\u5206\u5b9e\u73b0\n\u611f\u8c22\u6240\u6709\u63d0\u4f9b pr \u7684\u5927\u4f6c\n\u611f\u8c22\u5927\u4f6c zhaipro \u7684\u9a8c\u8bc1\u7801\u672c\u5730\u8bc6\u522b\u6a21\u578b\u4e0e\u7b97\u6cd5\n\nLicense\nApache License.\n","133":"ProxyPool \u722c\u866b\u4ee3\u7406IP\u6c60\n\n\n\n\n\n\n______                        ______             _\n| ___ \\_                      | ___ \\           | |\n| |_\/ \/ \\__ __   __  _ __   _ | |_\/ \/___   ___  | |\n|  __\/|  _\/\/ _ \\ \\ \\\/ \/| | | ||  __\/\/ _ \\ \/ _ \\ | |\n| |   | | | (_) | >  < \\ |_| || |  | (_) | (_) || |___\n\\_|   |_|  \\___\/ \/_\/\\_\\ \\__  |\\_|   \\___\/ \\___\/ \\_____\\\n                       __ \/ \/\n                      \/___ \/\n\nProxyPool\n\u722c\u866b\u4ee3\u7406IP\u6c60\u9879\u76ee,\u4e3b\u8981\u529f\u80fd\u4e3a\u5b9a\u65f6\u91c7\u96c6\u7f51\u4e0a\u53d1\u5e03\u7684\u514d\u8d39\u4ee3\u7406\u9a8c\u8bc1\u5165\u5e93\uff0c\u5b9a\u65f6\u9a8c\u8bc1\u5165\u5e93\u7684\u4ee3\u7406\u4fdd\u8bc1\u4ee3\u7406\u7684\u53ef\u7528\u6027\uff0c\u63d0\u4f9bAPI\u548cCLI\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\u3002\u540c\u65f6\u4f60\u4e5f\u53ef\u4ee5\u6269\u5c55\u4ee3\u7406\u6e90\u4ee5\u589e\u52a0\u4ee3\u7406\u6c60IP\u7684\u8d28\u91cf\u548c\u6570\u91cf\u3002\n\n\n\u6587\u6863: document \n\n\n\u652f\u6301\u7248\u672c:  \n\n\n\u6d4b\u8bd5\u5730\u5740: http:\/\/118.24.52.95 (\u5355\u673a\u52ff\u538b)\n\n\n\u8fd0\u884c\u9879\u76ee\n\u4e0b\u8f7d\u4ee3\u7801:\n\ngit clone\n\ngit clone git@github.com:jhao104\/proxy_pool.git\n\nreleases\n\nhttps:\/\/github.com\/jhao104\/proxy_pool\/releases \u4e0b\u8f7d\u5bf9\u5e94zip\u6587\u4ef6\n\u5b89\u88c5\u4f9d\u8d56:\npip install -r requirements.txt\n\u66f4\u65b0\u914d\u7f6e:\n# setting.py \u4e3a\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n\n# \u914d\u7f6eAPI\u670d\u52a1\n\nHOST = \"0.0.0.0\"               # IP\nPORT = 5000                    # \u76d1\u542c\u7aef\u53e3\n\n\n# \u914d\u7f6e\u6570\u636e\u5e93\n\nDB_CONN = 'redis:\/\/:pwd@127.0.0.1:8888\/0'\n\n\n# \u914d\u7f6e ProxyFetcher\n\nPROXY_FETCHER = [\n    \"freeProxy01\",      # \u8fd9\u91cc\u662f\u542f\u7528\u7684\u4ee3\u7406\u6293\u53d6\u65b9\u6cd5\u540d\uff0c\u6240\u6709fetch\u65b9\u6cd5\u4f4d\u4e8efetcher\/proxyFetcher.py\n    \"freeProxy02\",\n    # ....\n]\n\u542f\u52a8\u9879\u76ee:\n# \u5982\u679c\u5df2\u7ecf\u5177\u5907\u8fd0\u884c\u6761\u4ef6, \u53ef\u7528\u901a\u8fc7proxyPool.py\u542f\u52a8\u3002\n# \u7a0b\u5e8f\u5206\u4e3a: schedule \u8c03\u5ea6\u7a0b\u5e8f \u548c server Api\u670d\u52a1\n\n# \u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\npython proxyPool.py schedule\n\n# \u542f\u52a8webApi\u670d\u52a1\npython proxyPool.py server\n\nDocker\u8fd0\u884c\ndocker pull jhao104\/proxy_pool\n\ndocker run --env DB_CONN=redis:\/\/:password@ip:port\/db -p 5010:5010 jhao104\/proxy_pool:latest\n\u4f7f\u7528\n\nApi\n\n\u542f\u52a8web\u670d\u52a1\u540e, \u9ed8\u8ba4\u914d\u7f6e\u4e0b\u4f1a\u5f00\u542f http:\/\/127.0.0.1:5010 \u7684api\u63a5\u53e3\u670d\u52a1:\n\n\n\napi\nmethod\nDescription\narg\n\n\n\n\n\/\nGET\napi\u4ecb\u7ecd\nNone\n\n\n\/get\nGET\n\u968f\u673a\u83b7\u53d6\u4e00\u4e2a\u4ee3\u7406\nNone\n\n\n\/get_all\nGET\n\u83b7\u53d6\u6240\u6709\u4ee3\u7406\nNone\n\n\n\/get_status\nGET\n\u67e5\u770b\u4ee3\u7406\u6570\u91cf\nNone\n\n\n\/delete\nGET\n\u5220\u9664\u4ee3\u7406\nproxy=host:ip\n\n\n\n\n\u722c\u866b\u4f7f\u7528\n\n\u3000\u3000\u5982\u679c\u8981\u5728\u722c\u866b\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u8bdd\uff0c \u53ef\u4ee5\u5c06\u6b64api\u5c01\u88c5\u6210\u51fd\u6570\u76f4\u63a5\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a\nimport requests\n\ndef get_proxy():\n    return requests.get(\"http:\/\/127.0.0.1:5010\/get\/\").json()\n\ndef delete_proxy(proxy):\n    requests.get(\"http:\/\/127.0.0.1:5010\/delete\/?proxy={}\".format(proxy))\n\n# your spider code\n\ndef getHtml():\n    # ....\n    retry_count = 5\n    proxy = get_proxy().get(\"proxy\")\n    while retry_count > 0:\n        try:\n            html = requests.get('http:\/\/www.example.com', proxies={\"http\": \"http:\/\/{}\".format(proxy)})\n            # \u4f7f\u7528\u4ee3\u7406\u8bbf\u95ee\n            return html\n        except Exception:\n            retry_count -= 1\n    # \u5220\u9664\u4ee3\u7406\u6c60\u4e2d\u4ee3\u7406\n    delete_proxy(proxy)\n    return None\n\u6269\u5c55\u4ee3\u7406\n\u3000\u3000\u9879\u76ee\u9ed8\u8ba4\u5305\u542b\u51e0\u4e2a\u514d\u8d39\u7684\u4ee3\u7406\u83b7\u53d6\u6e90\uff0c\u4f46\u662f\u514d\u8d39\u7684\u6bd5\u7adf\u8d28\u91cf\u6709\u9650\uff0c\u6240\u4ee5\u5982\u679c\u76f4\u63a5\u8fd0\u884c\u53ef\u80fd\u62ff\u5230\u7684\u4ee3\u7406\u8d28\u91cf\u4e0d\u7406\u60f3\u3002\u6240\u4ee5\uff0c\u63d0\u4f9b\u4e86\u4ee3\u7406\u83b7\u53d6\u7684\u6269\u5c55\u65b9\u6cd5\u3002\n\u3000\u3000\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u4ee3\u7406\u6e90\u65b9\u6cd5\u5982\u4e0b:\n\n1\u3001\u9996\u5148\u5728ProxyFetcher\u7c7b\u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u83b7\u53d6\u4ee3\u7406\u7684\u9759\u6001\u65b9\u6cd5\uff0c\n\u8be5\u65b9\u6cd5\u9700\u8981\u4ee5\u751f\u6210\u5668(yield)\u5f62\u5f0f\u8fd4\u56dehost:ip\u683c\u5f0f\u7684\u4ee3\u7406\uff0c\u4f8b\u5982:\n\nclass ProxyFetcher(object):\n    # ....\n\n    # \u81ea\u5b9a\u4e49\u4ee3\u7406\u6e90\u83b7\u53d6\u65b9\u6cd5\n    @staticmethod\n    def freeProxyCustom1():  # \u547d\u540d\u4e0d\u548c\u5df2\u6709\u91cd\u590d\u5373\u53ef\n\n        # \u901a\u8fc7\u67d0\u7f51\u7ad9\u6216\u8005\u67d0\u63a5\u53e3\u6216\u67d0\u6570\u636e\u5e93\u83b7\u53d6\u4ee3\u7406\n        # \u5047\u8bbe\u4f60\u5df2\u7ecf\u62ff\u5230\u4e86\u4e00\u4e2a\u4ee3\u7406\u5217\u8868\n        proxies = [\"x.x.x.x:3128\", \"x.x.x.x:80\"]\n        for proxy in proxies:\n            yield proxy\n        # \u786e\u4fdd\u6bcf\u4e2aproxy\u90fd\u662f host:ip\u6b63\u786e\u7684\u683c\u5f0f\u8fd4\u56de\n\n2\u3001\u6dfb\u52a0\u597d\u65b9\u6cd5\u540e\uff0c\u4fee\u6539setting.py\u6587\u4ef6\u4e2d\u7684PROXY_FETCHER\u9879\uff1a\n\n\u3000\u3000\u5728PROXY_FETCHER\u4e0b\u6dfb\u52a0\u81ea\u5b9a\u4e49\u65b9\u6cd5\u7684\u540d\u5b57:\nPROXY_FETCHER = [\n    \"freeProxy01\",    \n    \"freeProxy02\",\n    # ....\n    \"freeProxyCustom1\"  #  # \u786e\u4fdd\u540d\u5b57\u548c\u4f60\u6dfb\u52a0\u65b9\u6cd5\u540d\u5b57\u4e00\u81f4\n]\n\u3000\u3000schedule \u8fdb\u7a0b\u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u6293\u53d6\u4e00\u6b21\u4ee3\u7406\uff0c\u4e0b\u6b21\u6293\u53d6\u65f6\u4f1a\u81ea\u52a8\u8bc6\u522b\u8c03\u7528\u4f60\u5b9a\u4e49\u7684\u65b9\u6cd5\u3002\n\u514d\u8d39\u4ee3\u7406\u6e90\n\u76ee\u524d\u5b9e\u73b0\u7684\u91c7\u96c6\u514d\u8d39\u4ee3\u7406\u7f51\u7ad9\u6709(\u6392\u540d\u4e0d\u5206\u5148\u540e, \u4e0b\u9762\u4ec5\u662f\u5bf9\u5176\u53d1\u5e03\u7684\u514d\u8d39\u4ee3\u7406\u60c5\u51b5, \u4ed8\u8d39\u4ee3\u7406\u6d4b\u8bc4\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc):\n\n\n\n\u4ee3\u7406\u540d\u79f0\n\u72b6\u6001\n\u66f4\u65b0\u901f\u5ea6\n\u53ef\u7528\u7387\n\u5730\u5740\n\u4ee3\u7801\n\n\n\n\n\u65e0\u5fe7\u4ee3\u7406\n\u221a\n\u2605\n*\n\u5730\u5740\nfreeProxy01\n\n\n66\u4ee3\u7406\n\u221a\n\u2605\u2605\n*\n\u5730\u5740\nfreeProxy02\n\n\n\u897f\u523a\u4ee3\u7406\n\u5df2\u5173\u95ed\n\u2014\u2014\n\u2014\u2014\n\u5730\u5740\nfreeProxy03\n\n\n\u5168\u7f51\u4ee3\u7406\n\u221a\n\u2605\n*\n\u5730\u5740\nfreeProxy04\n\n\n\u5feb\u4ee3\u7406\n\u221a\n\u2606\n*\n\u5730\u5740\nfreeProxy05\n\n\n\u4ee3\u7406\u76d2\u5b50\n\u221a\n\u2605\u2605\u2605\n*\n\u5730\u5740\nfreeProxy06\n\n\n\u4e91\u4ee3\u7406\n\u221a\n\u2605\n*\n\u5730\u5740\nfreeProxy07\n\n\nIP\u6d77\n\u5df2\u5173\u95ed\n\u2014\u2014\n\u2014\u2014\n\u5730\u5740\nfreeProxy08\n\n\n\u514d\u8d39\u4ee3\u7406\u5e93\n\u221a\n\u2606\n*\n\u5730\u5740\nfreeProxy09\n\n\n89\u4ee3\u7406\n\u221a\n\u2606\n*\n\u5730\u5740\nfreeProxy13\n\n\n\u897f\u62c9\u4ee3\u7406\n\u221a\n\u2605\u2605\n*\n\u5730\u5740\nfreeProxy14\n\n\n\n\u5982\u679c\u8fd8\u6709\u5176\u4ed6\u597d\u7684\u514d\u8d39\u4ee3\u7406\u7f51\u7ad9, \u53ef\u4ee5\u5728\u63d0\u4ea4\u5728issues, \u4e0b\u6b21\u66f4\u65b0\u65f6\u4f1a\u8003\u8651\u5728\u9879\u76ee\u4e2d\u652f\u6301\u3002\n\u95ee\u9898\u53cd\u9988\n\u3000\u3000\u4efb\u4f55\u95ee\u9898\u6b22\u8fce\u5728Issues \u4e2d\u53cd\u9988\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5230\u6211\u7684\u535a\u5ba2\u4e2d\u7559\u8a00\u3002\n\u3000\u3000\u4f60\u7684\u53cd\u9988\u4f1a\u8ba9\u6b64\u9879\u76ee\u53d8\u5f97\u66f4\u52a0\u5b8c\u7f8e\u3002\n\u8d21\u732e\u4ee3\u7801\n\u3000\u3000\u672c\u9879\u76ee\u4ec5\u4f5c\u4e3a\u57fa\u672c\u7684\u901a\u7528\u7684\u4ee3\u7406\u6c60\u67b6\u6784\uff0c\u4e0d\u63a5\u6536\u7279\u6709\u529f\u80fd(\u5f53\u7136,\u4e0d\u9650\u4e8e\u7279\u522b\u597d\u7684idea)\u3002\n\u3000\u3000\u672c\u9879\u76ee\u4f9d\u7136\u4e0d\u591f\u5b8c\u5584\uff0c\u5982\u679c\u53d1\u73b0bug\u6216\u6709\u65b0\u7684\u529f\u80fd\u6dfb\u52a0\uff0c\u8bf7\u5728Issues\u4e2d\u63d0\u4ea4bug(\u6216\u65b0\u529f\u80fd)\u63cf\u8ff0\uff0c\u6211\u4f1a\u5c3d\u529b\u6539\u8fdb\uff0c\u4f7f\u5979\u66f4\u52a0\u5b8c\u7f8e\u3002\n\u3000\u3000\u8fd9\u91cc\u611f\u8c22\u4ee5\u4e0bcontributor\u7684\u65e0\u79c1\u5949\u732e\uff1a\n\u3000\u3000@kangnwh| @bobobo80| @halleywj| @newlyedward| @wang-ye| @gladmo| @bernieyangmh| @PythonYXY| @zuijiawoniu| @netAir| @scil| @tangrela| @highroom| @luocaodan| @vc5| @1again| @obaiyan @zsbh\nRelease Notes\nchangelog\n","134":"\n\n      This project is no longer under active development. This theme should be completely rewritten from scratch, if any python developer want to help me to revive this project, contact me.\n  \n\n\n\n\n\n\nThis theme brings the Material Design visual language to your Sublime Text 3. If you have problems, first search for a similar issue and then report a new one.\nPlease read the Known Issues section before reporting a new one. Any issue that does not use the issue template and any issue related to the known issues section will be automatically closed.\nEasy installation\nYou can install this awesome theme through the Package Control.\n\nPress \u2318\/Ctrl + \u21e7 + P to open the command palette.\nType Package Control: Install Package and press enter. Then search for Material Theme.\n\nManual installation\n\nDownload the latest release, extract and rename the directory to \"Material Theme\".\nMove the directory inside your sublime Packages directory. (Preferences > Browse packages...)\n\nActivate the theme\nYou can active this theme from:\n\nCommand palette Tools > Command Palette (\u2318\/Ctrl + \u21e7 + P) by typing Material Theme: Activate theme.\nContext menu (Right click on the editor) and choose Material Theme > Activate\nPreferences > Packages Settings and choose Material Theme > Activate\n\nYou can also manually activate this theme by adding these lines to your user settings (Preferences > Settings - User):\n\"color_scheme\": \"Packages\/Material Theme\/schemes\/Material-Theme.tmTheme\",\n\"theme\": \"Material-Theme.sublime-theme\",\nNOTE: Restart Sublime Text after activating the theme.\nConfiguration\nThis theme provide a visual configuration tool that allow you to configure the theme by activating the available options from an inline popup. Just right click in your editor and choose Material Theme > Configuration. You can also open the configurator from the command palette by searching Material Theme > Configuration.\nAdvanced configuration\nIf you like the advanced text text-configuration you can use it by the Material Theme > Advanced configuration command both from context menu and command palette.\nKnown issues\nPlease see the issue #67 if you can't see the bottom panel (find\/replace, rename, move, can't see the box inputs in SidebarEnhancement, etc..). here the quick fix:\n\nAddons\nFile icons\nFrom release 4.0.0 this theme use A File Icon package to display file icons. Please install the package and restart Sublime Text.\nApp Bar\nMaterial Theme Appbar\nThis official addon enable a beautiful colored tab bar to your Material Theme. The color tint fits automagically the material theme accent color you choosed.\nWhite panels\nMaterial Theme White Panels\nIf you want to enable the white panels and inputs you can install the addon package through Package Control, search for \"Material theme white panels\". You have to disable it if you want to use the Lighter theme style.\nTheme options\n\/\/ Accent\n\"material_theme_accent_acid-lime\"         : true, \/\/ Set acid-lime accent color\n\"material_theme_accent_blue\"              : true, \/\/ Set blue accent color\n\"material_theme_accent_brba\"              : true, \/\/ Set Breaking Bad green accent color\n\"material_theme_accent_bright-teal\"       : true, \/\/ Set bright-teal accent color\n\"material_theme_accent_cyan\"              : true, \/\/ Set cyan accent color\n\"material_theme_accent_graphite\"          : true, \/\/ Set graphite accent color\n\"material_theme_accent_indigo\"            : true, \/\/ Set indigo accent color\n\"material_theme_accent_lime\"              : true, \/\/ Set lime green accent color\n\"material_theme_accent_orange\"            : true, \/\/ Set orange accent color\n\"material_theme_accent_pink\"              : true, \/\/ Set pink accent color\n\"material_theme_accent_purple\"            : true, \/\/ Set purple accent color\n\"material_theme_accent_red\"               : true, \/\/ Set pale red accent color\n\"material_theme_accent_sky\"               : true, \/\/ Set bright-cyan accent color\n\"material_theme_accent_tomato\"            : true, \/\/ Set tomato red accent color\n\"material_theme_accent_yellow\"            : true, \/\/ Set yellow accent color\n\n\/\/ Panels\n\"material_theme_accent_scrollbars\"        : true, \/\/ Enable accent color for scrollbars\n\"material_theme_accent_titlebar\"          : true, \/\/ Enable accent color for titlebar\n\"material_theme_bright_scrollbars\"        : true, \/\/ Bright scrollbars puck color\n\"material_theme_compact_panel\"            : true, \/\/ Set minimal padding for the search panel\n\"material_theme_contrast_mode\"            : true, \/\/ Enable sidebar and panels contrast mode\n\"material_theme_panel_separator\"          : true, \/\/ Show bottom panel separator\n\"material_theme_small_statusbar\"          : true, \/\/ Set small status bar\n\"material_theme_titlebar\"                 : true, \/\/ Enable title bar (OS X 10.10+)\n\n\/\/ Sidebar\n\"material_theme_arrow_folders\"            : true, \/\/ Replace folder icons with arrows\n\"material_theme_big_fileicons\"            : true, \/\/ Show bigger file type icons\n\"material_theme_bullet_tree_indicator\"    : true, \/\/ Set a bullet as active tree indicator\n\"material_theme_compact_sidebar\"          : true, \/\/ Set compact sidebar\n\"material_theme_disable_fileicons\"        : true, \/\/ Hide sidebar file type icons\n\"material_theme_disable_folder_animation\" : true, \/\/ Disable folder animation\n\"material_theme_disable_tree_indicator\"   : true, \/\/ Disable sidebar file indicator\n\n\/\/ Tabs\n\"material_theme_bold_tab\"                 : true, \/\/ Make the tab labels bolder\n\"material_theme_small_tab\"                : true, \/\/ Set small tabs\n\"material_theme_tabs_autowidth\"           : true, \/\/ Enable autowidth for tabs\n\"material_theme_tabs_separator\"           : true, \/\/ Show tabs separator, this disables tab hover animation\n\n\/\/ If you use Material Theme - Appbar addon, you can use this setting:\n\"material_theme_tree_headings\"            : true, \/\/ Show sidebar headings\nRecommended settings for a better experience:\n\"always_show_minimap_viewport\" : true,\n\"bold_folder_labels\"           : true,\n\"font_options\"                 : [\"gray_antialias\", \"subpixel_antialias\"], \/\/ On retina Mac & Windows\n\"indent_guide_options\"         : [\"draw_normal\", \"draw_active\"], \/\/ Highlight active indent\n\"line_padding_bottom\"          : 3,\n\"line_padding_top\"             : 3,\n\"overlay_scroll_bars\"          : \"enabled\",\nThe font used for the code is \"Operator Mono\"\nYou can also use the official Material Design monospace font \"Roboto Mono\" or \"Fira Code\".\nContributing\nThis UI theme uses a custom compiler build on Gulp and JS. If you want to edit the UI you must first install the compiler:\n\n\nInstall the PackageDev package to Sublime Text.\n\n\nThen create a new symlink for the subl command following this guide\n\n\nInstall all the required packages:\n\n\n$ npm install\n\n\nthen run compiler and watcher by run:\n\n$ gulp\n\nYou can now edit the source files under .\/sources folder that will be compiled inside the root folder (don't edit compiled files).\nOther Resources\nApp icon: Download the official Material Theme icon.\nSublime Material Icon Pack: A set of Sublime Text icons heavily inspired by this theme and designed by @halacoglu\nDownload  it and enjoy a full Material Theme experience.\nOfficial Portings\nMaterial Theme was also ported to:\n\nAtom Editor: atom-material-ui (by @silvestreh) and material-ui (by @leo)\nIntelliJ IDEA (thanks to @ChrisRM and @mallowigi).\nVim (thanks to @kristijanhusak).\nTerminal OSX (thanks to @mvaneijgen).\niTerm2 (by @Revod) and iTerm2 Palenight (by @jonathanspeek).\nHyper.\nConEmu (thanks to @rajadain).\nSlack App ( #263238,#2e3a40,#80CBC4,#FFFFFF,#13191C,#ffffff,#50fa7b,#FF5555 )\nNylas N1 (thanks to @jackiehluo)\nBase16 (by @ntpeters)\n\nColor Schemes palettes\n\n\n\nColor\nDefault \/ Lighter\nDarker\n\n\n\n\nRed\n#FF5370\n#E53935\n\n\nPink\n#F07178\n#FF5370\n\n\nOrange\n#F78C6C\n#F76D47\n\n\nYellow\n#FFCB6B\n#FFB62C\n\n\nGreen\n#C3E88D\n#91B859\n\n\nPale Blue\n#B2CCD6\n#8796B0\n\n\nCyan\n#89DDFF\n#39ADB5\n\n\nBlue\n#82AAFF\n#6182B8\n\n\nPurple\n#C792EA\n#7C4DFF\n\n\nViolet\n#BB80B3\n#945EB8\n\n\nBrown\n#AB7967\n#AB7967\n\n\n\nThanks\nThanks for all the contributors.\nCheck the video review by LevelUpTuts\nVideo review\n\nSupport on Beerpay\nHey dude! Help me out for a couple of \ud83c\udf7b!\n \n","135":"MkDocs\nProject documentation with Markdown.\n\n\n\n\n\n\nView the MkDocs documentation.\nProject release notes.\nVisit the MkDocs wiki for community\nresources, including third party themes and a list of MkDocs users.\nIRC channel: #mkdocs on freenode.\nDiscussions and support: https:\/\/groups.google.com\/forum\/#!forum\/mkdocs\n\nCode of Conduct\nEveryone interacting in the MkDocs project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the PyPA Code of Conduct.\n","136":"pix2code\nGenerating Code from a Graphical User Interface Screenshot\n\n\nA video demo of the system can be seen here\nThe paper is available at https:\/\/arxiv.org\/abs\/1705.07962\nOfficial research page: https:\/\/uizard.io\/research#pix2code\n\nAbstract\nTransforming a graphical user interface screenshot created by a designer into computer code is a typical task conducted by a developer in order to build customized software, websites, and mobile applications. In this paper, we show that deep learning methods can be leveraged to train a model end-to-end to automatically generate code from a single input image with over 77% of accuracy for three different platforms (i.e. iOS, Android and web-based technologies).\nCitation\n@article{beltramelli2017pix2code,\n  title={pix2code: Generating Code from a Graphical User Interface Screenshot},\n  author={Beltramelli, Tony},\n  journal={arXiv preprint arXiv:1705.07962},\n  year={2017}\n}\n\nDisclaimer\nThe following software is shared for educational purposes only. The author and its affiliated institution are not responsible in any manner whatsoever for any damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of the use or inability to use this software.\nThe project pix2code is a research project demonstrating an application of deep neural networks to generate code from visual inputs.\nThe current implementation is not, in any way, intended, nor able to generate code in a real-world context.\nWe could not emphasize enough that this project is experimental and shared for educational purposes only.\nBoth the source code and the datasets are provided to foster future research in machine intelligence and are not designed for end users.\nSetup\nPrerequisites\n\nPython 2 or 3\npip\n\nInstall dependencies\npip install -r  requirements.txt\nUsage\nPrepare the data:\n# reassemble and unzip the data\ncd datasets\nzip -F pix2code_datasets.zip --out datasets.zip\nunzip datasets.zip\n\ncd ..\/model\n\n# split training set and evaluation set while ensuring no training example in the evaluation set\n# usage: build_datasets.py <input path> <distribution (default: 6)>\n.\/build_datasets.py ..\/datasets\/ios\/all_data\n.\/build_datasets.py ..\/datasets\/android\/all_data\n.\/build_datasets.py ..\/datasets\/web\/all_data\n\n# transform images (normalized pixel values and resized pictures) in training dataset to numpy arrays (smaller files if you need to upload the set to train your model in the cloud)\n# usage: convert_imgs_to_arrays.py <input path> <output path>\n.\/convert_imgs_to_arrays.py ..\/datasets\/ios\/training_set ..\/datasets\/ios\/training_features\n.\/convert_imgs_to_arrays.py ..\/datasets\/android\/training_set ..\/datasets\/android\/training_features\n.\/convert_imgs_to_arrays.py ..\/datasets\/web\/training_set ..\/datasets\/web\/training_features\nTrain the model:\nmkdir bin\ncd model\n\n# provide input path to training data and output path to save trained model and metadata\n# usage: train.py <input path> <output path> <is memory intensive (default: 0)> <pretrained weights (optional)>\n.\/train.py ..\/datasets\/web\/training_set ..\/bin\n\n# train on images pre-processed as arrays\n.\/train.py ..\/datasets\/web\/training_features ..\/bin\n\n# train with generator to avoid having to fit all the data in memory (RECOMMENDED)\n.\/train.py ..\/datasets\/web\/training_features ..\/bin 1\n\n# train on top of pretrained weights\n.\/train.py ..\/datasets\/web\/training_features ..\/bin 1 ..\/bin\/pix2code.h5\nGenerate code for batch of GUIs:\nmkdir code\ncd model\n\n# generate DSL code (.gui file), the default search method is greedy\n# usage: generate.py <trained weights path> <trained model name> <input image> <output path> <search method (default: greedy)>\n.\/generate.py ..\/bin pix2code ..\/gui_screenshots ..\/code\n\n# equivalent to command above\n.\/generate.py ..\/bin pix2code ..\/gui_screenshots ..\/code greedy\n\n# generate DSL code with beam search and a beam width of size 3\n.\/generate.py ..\/bin pix2code ..\/gui_screenshots ..\/code 3\nGenerate code for a single GUI image:\nmkdir code\ncd model\n\n# generate DSL code (.gui file), the default search method is greedy\n# usage: sample.py <trained weights path> <trained model name> <input image> <output path> <search method (default: greedy)>\n.\/sample.py ..\/bin pix2code ..\/test_gui.png ..\/code\n\n# equivalent to command above\n.\/sample.py ..\/bin pix2code ..\/test_gui.png ..\/code greedy\n\n# generate DSL code with beam search and a beam width of size 3\n.\/sample.py ..\/bin pix2code ..\/test_gui.png ..\/code 3\nCompile generated code to target language:\ncd compiler\n\n# compile .gui file to Android XML UI\n.\/android-compiler.py <input file path>.gui\n\n# compile .gui file to iOS Storyboard\n.\/ios-compiler.py <input file path>.gui\n\n# compile .gui file to HTML\/CSS (Bootstrap style)\n.\/web-compiler.py <input file path>.gui\nFAQ\nWill pix2code supports other target platforms\/languages?\nNo, pix2code is only a research project and will stay in the state described in the paper for consistency reasons.\nThis project is really just a toy example but you are of course more than welcome to fork the repo and experiment yourself with other target platforms\/languages.\nWill I be able to use pix2code for my own frontend projects?\nNo, pix2code is experimental and won't work for your specific use cases.\nHow is the model performance measured?\nThe accuracy\/error reported in the paper is measured at the DSL level by comparing each generated token with each expected token.\nAny difference in length between the generated token sequence and the expected token sequence is also counted as error.\nHow long does it take to train the model?\nOn a Nvidia Tesla K80 GPU, it takes a little less than 5 hours to optimize the 109 * 10^6 parameters for one dataset; so expect around 15 hours if you want to train the model for the three target platforms.\nI am a front-end developer, will I soon lose my job?\n(I have genuinely been asked this question multiple times)\nTL;DR Not anytime soon will AI replace front-end developers.\nEven assuming a mature version of pix2code able to generate GUI code with 100% accuracy for every platforms\/languages in the universe, front-enders will still be needed to implement the logic, the interactive parts, the advanced graphics and animations, and all the features users love. The product we are building at Uizard Technologies is intended to bridge the gap between UI\/UX designers and front-end developers, not replace any of them. We want to rethink the traditional workflow that too often results in more frustration than innovation. We want designers to be as creative as possible to better serve end users, and developers to dedicate their time programming the core functionality and forget about repetitive tasks such as UI implementation. We believe in a future where AI collaborate with humans, not replace humans.\nMedia coverage\n\nWired UK\nThe Next Web\nFast Company\nNVIDIA Developer News\nLifehacker Australia\nTwo Minute Papers (web series)\nNLP Highlights (podcast)\nData Skeptic (podcast)\nRead comments on Hacker News\n\n","137":"\nWhat the f*ck Python! \ud83d\udc0d\n\u4e00\u4e9b\u6709\u8da3\u4e14\u9c9c\u4e3a\u4eba\u77e5\u7684 Python \u7279\u6027.\n\nEnglish\n| \u4e2d\u6587\n\n  \nPython, \u662f\u4e00\u4e2a\u8bbe\u8ba1\u4f18\u7f8e\u7684\u89e3\u91ca\u578b\u9ad8\u7ea7\u8bed\u8a00, \u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u80fd\u8ba9\u7a0b\u5e8f\u5458\u611f\u5230\u8212\u9002\u7684\u529f\u80fd\u7279\u6027. \u4f46\u6709\u7684\u65f6\u5019, Python \u7684\u4e00\u4e9b\u8f93\u51fa\u7ed3\u679c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4f3c\u4e4e\u5e76\u4e0d\u662f\u90a3\u4e48\u4e00\u76ee\u4e86\u7136.\n\u8fd9\u4e2a\u6709\u8da3\u7684\u9879\u76ee\u610f\u5728\u6536\u96c6 Python \u4e2d\u90a3\u4e9b\u96be\u4ee5\u7406\u89e3\u548c\u53cd\u4eba\u7c7b\u76f4\u89c9\u7684\u4f8b\u5b50\u4ee5\u53ca\u9c9c\u4e3a\u4eba\u77e5\u7684\u529f\u80fd\u7279\u6027, \u5e76\u5c1d\u8bd5\u8ba8\u8bba\u8fd9\u4e9b\u73b0\u8c61\u80cc\u540e\u771f\u6b63\u7684\u539f\u7406!\n\u867d\u7136\u4e0b\u9762\u7684\u6709\u4e9b\u4f8b\u5b50\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u8ba9\u4f60\u89c9\u5f97 WTFs, \u4f46\u5b83\u4eec\u4f9d\u7136\u6709\u53ef\u80fd\u4f1a\u544a\u8bc9\u4f60\u4e00\u4e9b\u4f60\u6240\u4e0d\u77e5\u9053\u7684 Python \u6709\u8da3\u7279\u6027.  \u6211\u89c9\u5f97\u8fd9\u662f\u4e00\u79cd\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u5185\u90e8\u539f\u7406\u7684\u597d\u529e\u6cd5, \u800c\u4e14\u6211\u76f8\u4fe1\u4f60\u4e5f\u4f1a\u4ece\u4e2d\u83b7\u5f97\u4e50\u8da3!\n\u5982\u679c\u60a8\u662f\u4e00\u4f4d\u7ecf\u9a8c\u6bd4\u8f83\u4e30\u5bcc\u7684 Python \u7a0b\u5e8f\u5458, \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6311\u6218\u770b\u662f\u5426\u80fd\u4e00\u6b21\u5c31\u627e\u5230\u4f8b\u5b50\u7684\u6b63\u786e\u7b54\u6848. \u4f60\u53ef\u80fd\u5bf9\u5176\u4e2d\u7684\u4e00\u4e9b\u4f8b\u5b50\u5df2\u7ecf\u6bd4\u8f83\u719f\u6089\u4e86, \u90a3\u8fd9\u4e5f\u8bb8\u80fd\u5524\u8d77\u4f60\u5f53\u5e74\u8e29\u8fd9\u4e9b\u5751\u65f6\u7684\u751c\u871c\u56de\u5fc6 \ud83d\ude05\nPS: \u5982\u679c\u4f60\u4e0d\u662f\u7b2c\u4e00\u6b21\u8bfb\u4e86, \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u83b7\u53d6\u53d8\u52a8\u5185\u5bb9.\n\u90a3\u4e48, \u8ba9\u6211\u4eec\u5f00\u59cb\u5427...\nTable of Contents\/\u76ee\u5f55\n\nTable of Contents\/\u76ee\u5f55\nStructure of the Examples\/\u793a\u4f8b\u7ed3\u6784\nUsage\/\u7528\u6cd5\n\ud83d\udc40 Examples\/\u793a\u4f8b\n\nSection: Strain your brain!\/\u5927\u8111\u8fd0\u52a8!\n\n> Strings can be tricky sometimes\/\u5fae\u5999\u7684\u5b57\u7b26\u4e32 *\n> Time for some hash brownies!\/\u662f\u65f6\u5019\u6765\u70b9\u86cb\u7cd5\u4e86!\n> Return return everywhere!\/\u5230\u5904\u8fd4\u56de\uff01\n> Deep down, we're all the same.\/\u672c\u8d28\u4e0a,\u6211\u4eec\u90fd\u4e00\u6837. *\n> For what?\/\u4e3a\u4ec0\u4e48?\n> Evaluation time discrepancy\/\u6267\u884c\u65f6\u673a\u5dee\u5f02\n> is is not what it is!\/\u51fa\u4eba\u610f\u6599\u7684is!\n> A tic-tac-toe where X wins in the first attempt!\/\u4e00\u8e74\u5373\u81f3!\n> The sticky output function\/\u9ebb\u70e6\u7684\u8f93\u51fa\n> is not ... is not is (not ...)\/is not ... \u4e0d\u662f is (not ...)\n> The surprising comma\/\u610f\u5916\u7684\u9017\u53f7\n> Backslashes at the end of string\/\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u53cd\u659c\u6760\n> not knot!\/\u522b\u7ea0\u7ed3!\n> Half triple-quoted strings\/\u4e09\u4e2a\u5f15\u53f7\n> Midnight time doesn't exist?\/\u4e0d\u5b58\u5728\u7684\u5348\u591c?\n> What's wrong with booleans?\/\u5e03\u5c14\u4f60\u548b\u4e86?\n> Class attributes and instance attributes\/\u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027\n> yielding None\/\u751f\u6210 None\n> Mutating the immutable!\/\u5f3a\u4eba\u6240\u96be\n> The disappearing variable from outer scope\/\u6d88\u5931\u7684\u5916\u90e8\u53d8\u91cf\n> When True is actually False\/\u771f\u4ea6\u5047\n> From filled to None in one instruction...\/\u4ece\u6709\u5230\u65e0...\n> Subclass relationships\/\u5b50\u7c7b\u5173\u7cfb *\n> The mysterious key type conversion\/\u795e\u79d8\u7684\u952e\u578b\u8f6c\u6362 *\n> Let's see if you can guess this?\/\u770b\u770b\u4f60\u80fd\u5426\u731c\u5230\u8fd9\u4e00\u70b9?\n\n\nSection: Appearances are deceptive!\/\u5916\u8868\u662f\u9760\u4e0d\u4f4f\u7684!\n\n> Skipping lines?\/\u8df3\u8fc7\u4e00\u884c?\n> Teleportation\/\u7a7a\u95f4\u79fb\u52a8 *\n> Well, something is fishy...\/\u55ef, \u6709\u4e9b\u53ef\u7591...\n\n\nSection: Watch out for the landmines!\/\u5c0f\u5fc3\u5730\u96f7!\n\n> Modifying a dictionary while iterating over it\/\u8fed\u4ee3\u5b57\u5178\u65f6\u7684\u4fee\u6539\n> Stubborn del operator\/\u575a\u5f3a\u7684 del *\n> Deleting a list item while iterating\/\u8fed\u4ee3\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\n> Loop variables leaking out!\/\u5faa\u73af\u53d8\u91cf\u6cc4\u6f0f!\n> Beware of default mutable arguments!\/\u5f53\u5fc3\u9ed8\u8ba4\u7684\u53ef\u53d8\u53c2\u6570!\n> Catching the Exceptions\/\u6355\u83b7\u5f02\u5e38\n> Same operands, different story!\/\u540c\u4eba\u4e0d\u540c\u547d!\n> The out of scope variable\/\u5916\u90e8\u4f5c\u7528\u57df\u53d8\u91cf\n> Be careful with chained operations\/\u5c0f\u5fc3\u94fe\u5f0f\u64cd\u4f5c\n> Name resolution ignoring class scope\/\u5ffd\u7565\u7c7b\u4f5c\u7528\u57df\u7684\u540d\u79f0\u89e3\u6790\n> Needle in a Haystack\/\u5927\u6d77\u635e\u9488\n\n\nSection: The Hidden treasures!\/\u9690\u85cf\u7684\u5b9d\u85cf!\n\n> Okay Python, Can you make me fly?\/Python, \u53ef\u5426\u5e26\u6211\u98de? *\n> goto, but why?\/goto, \u4f46\u4e3a\u4ec0\u4e48? *\n> Brace yourself!\/\u505a\u597d\u601d\u60f3\u51c6\u5907 *\n> Let's meet Friendly Language Uncle For Life\/\u8ba9\u751f\u6d3b\u66f4\u53cb\u597d *\n> Even Python understands that love is complicated\/\u8fdePython\u4e5f\u77e5\u9053\u7231\u662f\u96be\u8a00\u7684 *\n> Yes, it exists!\/\u662f\u7684, \u5b83\u5b58\u5728!\n> Inpinity\/\u65e0\u9650 *\n> Mangling time!\u4fee\u9970\u65f6\u95f4! *\n\n\nSection: Miscellaneous\/\u6742\u9879\n\n> += is faster\/\u66f4\u5feb\u7684 += \n> Let's make a giant string!\/\u6765\u505a\u4e2a\u5de8\u5927\u7684\u5b57\u7b26\u4e32\u5427!\n> Explicit typecast of strings\/\u5b57\u7b26\u4e32\u7684\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\n> Minor Ones\/\u5c0f\u77e5\u8bc6\u70b9\n\n\n\n\nContributing\/\u8d21\u732e\nAcknowledgements\/\u81f4\u8c22\n\ud83c\udf93 License\/\u8bb8\u53ef\n\nHelp\/\u5e2e\u52a9\nSurprise your geeky pythonist friends?\/\u60f3\u7ed9\u4f60\u7684\u6781\u5ba2\u670b\u53cb\u4e00\u4e2a\u60ca\u559c?\nNeed a pdf version?\/\u9700\u8981\u6765\u4e00\u4efdpdf\u7248\u7684?\nFollow Commit\/\u8ffd\u8e2aCommit\n996.icu\n\n\n\nStructure of the Examples\/\u793a\u4f8b\u7ed3\u6784\n\u6240\u6709\u793a\u4f8b\u7684\u7ed3\u6784\u90fd\u5982\u4e0b\u6240\u793a:\n\n> \u4e00\u4e2a\u7cbe\u9009\u7684\u6807\u9898 *\n\u6807\u9898\u672b\u5c3e\u7684\u661f\u53f7\u8868\u793a\u8be5\u793a\u4f8b\u5728\u7b2c\u4e00\u7248\u4e2d\u4e0d\u5b58\u5728\uff0c\u662f\u6700\u8fd1\u6dfb\u52a0\u7684.\n# \u51c6\u5907\u4ee3\u7801.\n# \u91ca\u653e\u9b54\u6cd5...\nOutput (Python version):\n>>> \u89e6\u53d1\u8bed\u53e5\n\u51fa\u4e4e\u610f\u6599\u7684\u8f93\u51fa\u7ed3\u679c\n(\u53ef\u9009): \u5bf9\u610f\u5916\u8f93\u51fa\u7ed3\u679c\u7684\u7b80\u77ed\u63cf\u8ff0.\n\ud83d\udca1 \u8bf4\u660e:\n\n\u7b80\u8981\u8bf4\u660e\u53d1\u751f\u4e86\u4ec0\u4e48\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f.\n\u5982\u6709\u5fc5\u8981, \u4e3e\u4f8b\u8bf4\u660e\nOutput:\n>>> \u89e6\u53d1\u8bed\u53e5 # \u4e00\u4e9b\u8ba9\u9b54\u6cd5\u53d8\u5f97\u5bb9\u6613\u7406\u89e3\u7684\u4f8b\u5b50\n# \u4e00\u4e9b\u6b63\u5e38\u7684\u8f93\u5165\n\n\n\n\u6ce8\u610f: \u6240\u6709\u7684\u793a\u4f8b\u90fd\u5728 Python 3.5.2 \u7248\u672c\u7684\u4ea4\u4e92\u89e3\u91ca\u5668\u4e0a\u6d4b\u8bd5\u8fc7, \u5982\u679c\u4e0d\u7279\u522b\u8bf4\u660e\u5e94\u8be5\u9002\u7528\u4e8e\u6240\u6709 Python \u7248\u672c.\nUsage\/\u7528\u6cd5\n\u6211\u4e2a\u4eba\u5efa\u8bae, \u6700\u597d\u4f9d\u6b21\u9605\u8bfb\u4e0b\u9762\u7684\u793a\u4f8b, \u5e76\u5bf9\u6bcf\u4e2a\u793a\u4f8b:\n\n\u4ed4\u7ec6\u9605\u8bfb\u8bbe\u7f6e\u4f8b\u5b50\u6700\u5f00\u59cb\u7684\u4ee3\u7801.  \u5982\u679c\u60a8\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684 Python \u7a0b\u5e8f\u5458, \u90a3\u4e48\u5927\u591a\u6570\u65f6\u5019\u60a8\u90fd\u80fd\u6210\u529f\u9884\u671f\u5230\u540e\u9762\u7684\u7ed3\u679c.\n\u9605\u8bfb\u8f93\u51fa\u7ed3\u679c,\n\n\u786e\u8ba4\u7ed3\u679c\u662f\u5426\u5982\u4f60\u6240\u6599.\n\u786e\u8ba4\u4f60\u662f\u5426\u77e5\u9053\u8fd9\u80cc\u540e\u7684\u539f\u7406.\n\n\u5982\u679c\u4e0d\u77e5\u9053, \u6df1\u547c\u5438\u7136\u540e\u9605\u8bfb\u8bf4\u660e (\u5982\u679c\u4f60\u8fd8\u662f\u770b\u4e0d\u660e\u767d, \u522b\u6c89\u9ed8! \u53ef\u4ee5\u5728\u8fd9\u63d0\u4e2a issue).\n\u5982\u679c\u77e5\u9053, \u7ed9\u81ea\u5df1\u70b9\u5956\u52b1, \u7136\u540e\u53bb\u770b\u4e0b\u4e00\u4e2a\u4f8b\u5b50.\n\n\n\n\n\nPS: \u4f60\u4e5f\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u9605\u8bfb WTFpython. \u6211\u4eec\u6709 pypi \u5305 \u548c npm \u5305(\u652f\u6301\u4ee3\u7801\u9ad8\u4eae).(\u8bd1: \u8fd9\u4e24\u4e2a\u90fd\u662f\u82f1\u6587\u7248\u7684)\n\u5b89\u88c5 npm \u5305 wtfpython\n$ npm install -g wtfpython\n\u6216\u8005, \u5b89\u88c5 pypi \u5305 wtfpython\n$ pip install wtfpython -U\n\u73b0\u5728, \u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c wtfpython, \u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u6d4f\u89c8\u4e86.\n\n\ud83d\udc40 Examples\/\u793a\u4f8b\nSection: Strain your brain!\/\u5927\u8111\u8fd0\u52a8!\n> Strings can be tricky sometimes\/\u5fae\u5999\u7684\u5b57\u7b26\u4e32 *\n1.\n>>> a = \"some_string\"\n>>> id(a)\n140420665652016\n>>> id(\"some\" + \"_\" + \"string\") # \u6ce8\u610f\u4e24\u4e2a\u7684id\u503c\u662f\u76f8\u540c\u7684.\n140420665652016\n2.\n>>> a = \"wtf\"\n>>> b = \"wtf\"\n>>> a is b\nTrue\n\n>>> a = \"wtf!\"\n>>> b = \"wtf!\"\n>>> a is b\nFalse\n\n>>> a, b = \"wtf!\", \"wtf!\"\n>>> a is b \nTrue # 3.7 \u7248\u672c\u8fd4\u56de\u7ed3\u679c\u4e3a False.\n3.\n>>> 'a' * 20 is 'aaaaaaaaaaaaaaaaaaaa'\nTrue\n>>> 'a' * 21 is 'aaaaaaaaaaaaaaaaaaaaa'\nFalse # 3.7 \u7248\u672c\u8fd4\u56de\u7ed3\u679c\u4e3a True\n\u5f88\u597d\u7406\u89e3, \u5bf9\u5427?\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u8fd9\u4e9b\u884c\u4e3a\u662f\u7531\u4e8e Cpython \u5728\u7f16\u8bd1\u4f18\u5316\u65f6, \u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u4e0d\u53ef\u53d8\u5bf9\u8c61\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61. (\u8fd9\u79cd\u884c\u4e3a\u88ab\u79f0\u4f5c\u5b57\u7b26\u4e32\u7684\u9a7b\u7559[string interning])\n\n\n\u53d1\u751f\u9a7b\u7559\u4e4b\u540e, \u8bb8\u591a\u53d8\u91cf\u53ef\u80fd\u6307\u5411\u5185\u5b58\u4e2d\u7684\u76f8\u540c\u5b57\u7b26\u4e32\u5bf9\u8c61. (\u4ece\u800c\u8282\u7701\u5185\u5b58)\n\n\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d, \u5b57\u7b26\u4e32\u662f\u9690\u5f0f\u9a7b\u7559\u7684. \u4f55\u65f6\u53d1\u751f\u9690\u5f0f\u9a7b\u7559\u5219\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u5b9e\u73b0. \u8fd9\u91cc\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u731c\u6d4b\u5b57\u7b26\u4e32\u662f\u5426\u4f1a\u88ab\u9a7b\u7559:\n\n\n\u6240\u6709\u957f\u5ea6\u4e3a 0 \u548c\u957f\u5ea6\u4e3a 1 \u7684\u5b57\u7b26\u4e32\u90fd\u88ab\u9a7b\u7559.\n\n\n\u5b57\u7b26\u4e32\u5728\u7f16\u8bd1\u65f6\u88ab\u5b9e\u73b0 ('wtf' \u5c06\u88ab\u9a7b\u7559, \u4f46\u662f ''.join(['w', 't', 'f']) \u5c06\u4e0d\u4f1a\u88ab\u9a7b\u7559)\n\n\n\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\uff0c\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u65f6\u5c06\u4f1a\u9a7b\u7559. \u6240\u4ee5 'wtf!' \u7531\u4e8e\u5305\u542b ! \u800c\u672a\u88ab\u9a7b\u7559. \u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 CPython \u5bf9\u6b64\u89c4\u5219\u7684\u5b9e\u73b0.\n\n\n\n\n\n\u5f53\u5728\u540c\u4e00\u884c\u5c06 a \u548c b \u7684\u503c\u8bbe\u7f6e\u4e3a \"wtf!\" \u7684\u65f6\u5019, Python \u89e3\u91ca\u5668\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61, \u7136\u540e\u540c\u65f6\u5f15\u7528\u7b2c\u4e8c\u4e2a\u53d8\u91cf(\u8bd1: \u4ec5\u9002\u7528\u4e8e3.7\u4ee5\u4e0b, \u8be6\u7ec6\u60c5\u51b5\u8bf7\u770b\u8fd9\u91cc). \u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u884c\u4e0a\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c, \u5b83\u5c31\u4e0d\u4f1a\u201c\u77e5\u9053\u201d\u5df2\u7ecf\u6709\u4e00\u4e2a wtf\uff01 \u5bf9\u8c61 (\u56e0\u4e3a \"wtf!\" \u4e0d\u662f\u6309\u7167\u4e0a\u9762\u63d0\u5230\u7684\u65b9\u5f0f\u88ab\u9690\u5f0f\u9a7b\u7559\u7684). \u5b83\u662f\u4e00\u79cd\u7f16\u8bd1\u5668\u4f18\u5316, \u7279\u522b\u9002\u7528\u4e8e\u4ea4\u4e92\u5f0f\u73af\u5883.\n\n\n\u5e38\u91cf\u6298\u53e0(constant folding) \u662f Python \u4e2d\u7684\u4e00\u79cd \u7aa5\u5b54\u4f18\u5316(peephole optimization) \u6280\u672f. \u8fd9\u610f\u5473\u7740\u5728\u7f16\u8bd1\u65f6\u8868\u8fbe\u5f0f 'a'*20 \u4f1a\u88ab\u66ff\u6362\u4e3a 'aaaaaaaaaaaaaaaaaaaa' \u4ee5\u51cf\u5c11\u8fd0\u884c\u65f6\u7684\u65f6\u949f\u5468\u671f. \u53ea\u6709\u957f\u5ea6\u5c0f\u4e8e 20 \u7684\u5b57\u7b26\u4e32\u624d\u4f1a\u53d1\u751f\u5e38\u91cf\u6298\u53e0. (\u4e3a\u5565? \u60f3\u8c61\u4e00\u4e0b\u7531\u4e8e\u8868\u8fbe\u5f0f 'a'*10**10 \u800c\u751f\u6210\u7684 .pyc \u6587\u4ef6\u7684\u5927\u5c0f). \u76f8\u5173\u7684\u6e90\u7801\u5b9e\u73b0\u5728\u8fd9\u91cc.\n\n\n\u5982\u679c\u4f60\u662f\u4f7f\u7528 3.7 \u7248\u672c\u4e2d\u8fd0\u884c\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801, \u4f1a\u53d1\u73b0\u90e8\u5206\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u4e0e\u6ce8\u91ca\u8bf4\u660e\u76f8\u540c. \u8fd9\u662f\u56e0\u4e3a\u5728 3.7 \u7248\u672c\u4e2d, \u5e38\u91cf\u6298\u53e0\u5df2\u7ecf\u4ece\u7aa5\u5b54\u4f18\u5316\u5668\u8fc1\u79fb\u81f3\u65b0\u7684 AST \u4f18\u5316\u5668, \u540e\u8005\u53ef\u4ee5\u4ee5\u66f4\u9ad8\u7684\u4e00\u81f4\u6027\u6765\u6267\u884c\u4f18\u5316. (\u7531 Eugene Toder \u548c INADA Naoki \u5728 bpo-29469 \u548c bpo-11549 \u4e2d\u8d21\u732e.)\n\n\n(\u8bd1: \u4f46\u662f\u5728\u6700\u65b0\u7684 3.8 \u7248\u672c\u4e2d, \u7ed3\u679c\u53c8\u53d8\u56de\u53bb\u4e86. \u867d\u7136 3.8 \u7248\u672c\u548c 3.7 \u7248\u672c\u4e00\u6837, \u90fd\u662f\u4f7f\u7528 AST \u4f18\u5316\u5668. \u76ee\u524d\u4e0d\u786e\u5b9a\u5b98\u65b9\u5bf9 3.8 \u7248\u672c\u7684 AST \u505a\u4e86\u4ec0\u4e48\u8c03\u6574.)\n\n\n\n> Time for some hash brownies!\/\u662f\u65f6\u5019\u6765\u70b9\u86cb\u7cd5\u4e86!\n\nhash brownie\u6307\u4e00\u79cd\u542b\u6709\u5927\u9ebb\u6210\u5206\u7684\u86cb\u7cd5, \u6240\u4ee5\u8fd9\u91cc\u662f\u53e5\u53cc\u5173\n\n1.\nsome_dict = {}\nsome_dict[5.5] = \"Ruby\"\nsome_dict[5.0] = \"JavaScript\"\nsome_dict[5] = \"Python\"\nOutput:\n>>> some_dict[5.5]\n\"Ruby\"\n>>> some_dict[5.0]\n\"Python\"\n>>> some_dict[5]\n\"Python\"\n\"Python\" \u6d88\u9664\u4e86 \"JavaScript\" \u7684\u5b58\u5728?\n\ud83d\udca1 \u8bf4\u660e:\n\nPython \u5b57\u5178\u901a\u8fc7\u68c0\u67e5\u952e\u503c\u662f\u5426\u76f8\u7b49\u548c\u6bd4\u8f83\u54c8\u5e0c\u503c\u6765\u786e\u5b9a\u4e24\u4e2a\u952e\u662f\u5426\u76f8\u540c.\n\u5177\u6709\u76f8\u540c\u503c\u7684\u4e0d\u53ef\u53d8\u5bf9\u8c61\u5728Python\u4e2d\u59cb\u7ec8\u5177\u6709\u76f8\u540c\u7684\u54c8\u5e0c\u503c.\n>>> 5 == 5.0\nTrue\n>>> hash(5) == hash(5.0)\nTrue\n\u6ce8\u610f: \u5177\u6709\u4e0d\u540c\u503c\u7684\u5bf9\u8c61\u4e5f\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u54c8\u5e0c\u503c\uff08\u54c8\u5e0c\u51b2\u7a81\uff09.\n\u5f53\u6267\u884c some_dict[5] = \"Python\" \u8bed\u53e5\u65f6, \u56e0\u4e3aPython\u5c06 5 \u548c 5.0 \u8bc6\u522b\u4e3a some_dict \u7684\u540c\u4e00\u4e2a\u952e, \u6240\u4ee5\u5df2\u6709\u503c \"JavaScript\" \u5c31\u88ab \"Python\" \u8986\u76d6\u4e86.\n\u8fd9\u4e2a StackOverflow\u7684 \u56de\u7b54 \u6f02\u4eae\u5730\u89e3\u91ca\u4e86\u8fd9\u80cc\u540e\u7684\u57fa\u672c\u539f\u7406.\n\n\n> Return return everywhere!\/\u5230\u5904\u8fd4\u56de\uff01\ndef some_func():\n    try:\n        return 'from_try'\n    finally:\n        return 'from_finally'\nOutput:\n>>> some_func()\n'from_finally'\n\ud83d\udca1 \u8bf4\u660e:\n\n\u5f53\u5728 \"try...finally\" \u8bed\u53e5\u7684 try \u4e2d\u6267\u884c return, break \u6216 continue \u540e, finally \u5b50\u53e5\u4f9d\u7136\u4f1a\u6267\u884c.\n\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7531\u6700\u540e\u6267\u884c\u7684 return \u8bed\u53e5\u51b3\u5b9a. \u7531\u4e8e finally \u5b50\u53e5\u4e00\u5b9a\u4f1a\u6267\u884c, \u6240\u4ee5 finally \u5b50\u53e5\u4e2d\u7684 return \u5c06\u59cb\u7ec8\u662f\u6700\u540e\u6267\u884c\u7684\u8bed\u53e5.\n\n\n> Deep down, we're all the same.\/\u672c\u8d28\u4e0a,\u6211\u4eec\u90fd\u4e00\u6837. *\nclass WTF:\n  pass\nOutput:\n>>> WTF() == WTF() # \u4e24\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u5e94\u8be5\u4e0d\u76f8\u7b49\nFalse\n>>> WTF() is WTF() # \u4e5f\u4e0d\u76f8\u540c\nFalse\n>>> hash(WTF()) == hash(WTF()) # \u54c8\u5e0c\u503c\u4e5f\u5e94\u8be5\u4e0d\u540c\nTrue\n>>> id(WTF()) == id(WTF())\nTrue\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5f53\u8c03\u7528 id \u51fd\u6570\u65f6, Python \u521b\u5efa\u4e86\u4e00\u4e2a WTF \u7c7b\u7684\u5bf9\u8c61\u5e76\u4f20\u7ed9 id \u51fd\u6570. \u7136\u540e id \u51fd\u6570\u83b7\u53d6\u5176id\u503c (\u4e5f\u5c31\u662f\u5185\u5b58\u5730\u5740), \u7136\u540e\u4e22\u5f03\u8be5\u5bf9\u8c61. \u8be5\u5bf9\u8c61\u5c31\u88ab\u9500\u6bc1\u4e86.\n\n\n\u5f53\u6211\u4eec\u8fde\u7eed\u4e24\u6b21\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\u65f6, Python\u4f1a\u5c06\u76f8\u540c\u7684\u5185\u5b58\u5730\u5740\u5206\u914d\u7ed9\u7b2c\u4e8c\u4e2a\u5bf9\u8c61. \u56e0\u4e3a (\u5728CPython\u4e2d) id \u51fd\u6570\u4f7f\u7528\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u4f5c\u4e3a\u5bf9\u8c61\u7684id\u503c, \u6240\u4ee5\u4e24\u4e2a\u5bf9\u8c61\u7684id\u503c\u662f\u76f8\u540c\u7684.\n\n\n\u7efc\u4e0a, \u5bf9\u8c61\u7684id\u503c\u4ec5\u4ec5\u5728\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u5185\u552f\u4e00. \u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\u4e4b\u540e, \u6216\u88ab\u521b\u5efa\u4e4b\u524d, \u5176\u4ed6\u5bf9\u8c61\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684id\u503c.\n\n\n\u90a3\u4e3a\u4ec0\u4e48 is \u64cd\u4f5c\u7684\u7ed3\u679c\u4e3a False \u5462? \u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u6bb5\u4ee3\u7801.\nclass WTF(object):\n  def __init__(self): print(\"I\")\n  def __del__(self): print(\"D\")\nOutput:\n>>> WTF() is WTF()\nI\nI\nD\nD\nFalse\n>>> id(WTF()) == id(WTF())\nI\nD\nI\nD\nTrue\n\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684, \u5bf9\u8c61\u9500\u6bc1\u7684\u987a\u5e8f\u662f\u9020\u6210\u6240\u6709\u4e0d\u540c\u4e4b\u5904\u7684\u539f\u56e0.\n\n\n\n> For what?\/\u4e3a\u4ec0\u4e48?\nsome_string = \"wtf\"\nsome_dict = {}\nfor i, some_dict[i] in enumerate(some_string):\n    pass\nOutput:\n>>> some_dict # \u521b\u5efa\u4e86\u7d22\u5f15\u5b57\u5178.\n{0: 'w', 1: 't', 2: 'f'}\n\ud83d\udca1 \u8bf4\u660e:\n\n\nPython \u8bed\u6cd5 \u4e2d\u5bf9 for \u7684\u5b9a\u4e49\u662f:\nfor_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]\n\n\u5176\u4e2d exprlist \u6307\u5206\u914d\u76ee\u6807. \u8fd9\u610f\u5473\u7740\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u4f1a\u6267\u884c\u7c7b\u4f3c {exprlist} = {next_value} \u7684\u64cd\u4f5c.\n\u4e00\u4e2a\u6709\u8da3\u7684\u4f8b\u5b50\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9:\nfor i in range(4):\n    print(i)\n    i = 10\nOutput:\n0\n1\n2\n3\n\n\u4f60\u53ef\u66fe\u89c9\u5f97\u8fd9\u4e2a\u5faa\u73af\u53ea\u4f1a\u8fd0\u884c\u4e00\u6b21?\n\ud83d\udca1 \u8bf4\u660e:\n\n\u7531\u4e8e\u5faa\u73af\u5728Python\u4e2d\u5de5\u4f5c\u65b9\u5f0f, \u8d4b\u503c\u8bed\u53e5 i = 10 \u5e76\u4e0d\u4f1a\u5f71\u54cd\u8fed\u4ee3\u5faa\u73af, \u5728\u6bcf\u6b21\u8fed\u4ee3\u5f00\u59cb\u4e4b\u524d, \u8fed\u4ee3\u5668(\u8fd9\u91cc\u6307 range(4)) \u751f\u6210\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u5c31\u88ab\u89e3\u5305\u5e76\u8d4b\u503c\u7ed9\u76ee\u6807\u5217\u8868\u7684\u53d8\u91cf(\u8fd9\u91cc\u6307 i)\u4e86.\n\n\n\n\u5728\u6bcf\u4e00\u6b21\u7684\u8fed\u4ee3\u4e2d, enumerate(some_string) \u51fd\u6570\u5c31\u751f\u6210\u4e00\u4e2a\u65b0\u503c i (\u8ba1\u6570\u5668\u589e\u52a0) \u5e76\u4ece some_string \u4e2d\u83b7\u53d6\u4e00\u4e2a\u5b57\u7b26. \u7136\u540e\u5c06\u5b57\u5178 some_dict \u952e i (\u521a\u521a\u5206\u914d\u7684) \u7684\u503c\u8bbe\u4e3a\u8be5\u5b57\u7b26. \u672c\u4f8b\u4e2d\u5faa\u73af\u7684\u5c55\u5f00\u53ef\u4ee5\u7b80\u5316\u4e3a:\n>>> i, some_dict[i] = (0, 'w')\n>>> i, some_dict[i] = (1, 't')\n>>> i, some_dict[i] = (2, 'f')\n>>> some_dict\n\n\n\n> Evaluation time discrepancy\/\u6267\u884c\u65f6\u673a\u5dee\u5f02\n1.\narray = [1, 8, 15]\ng = (x for x in array if array.count(x) > 0)\narray = [2, 8, 22]\nOutput:\n>>> print(list(g))\n[8]\n2.\narray_1 = [1,2,3,4]\ng1 = (x for x in array_1)\narray_1 = [1,2,3,4,5]\n\narray_2 = [1,2,3,4]\ng2 = (x for x in array_2)\narray_2[:] = [1,2,3,4,5]\nOutput:\n>>> print(list(g1))\n[1,2,3,4]\n\n>>> print(list(g2))\n[1,2,3,4,5]\n\ud83d\udca1 \u8bf4\u660e\n\n\u5728\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4e2d, in \u5b50\u53e5\u5728\u58f0\u660e\u65f6\u6267\u884c, \u800c\u6761\u4ef6\u5b50\u53e5\u5219\u662f\u5728\u8fd0\u884c\u65f6\u6267\u884c.\n\u6240\u4ee5\u5728\u8fd0\u884c\u524d, array \u5df2\u7ecf\u88ab\u91cd\u65b0\u8d4b\u503c\u4e3a [2, 8, 22], \u56e0\u6b64\u5bf9\u4e8e\u4e4b\u524d\u7684 1, 8 \u548c 15, \u53ea\u6709 count(8) \u7684\u7ed3\u679c\u662f\u5927\u4e8e 0 \u7684, \u6240\u4ee5\u751f\u6210\u5668\u53ea\u4f1a\u751f\u6210 8.\n\u7b2c\u4e8c\u90e8\u5206\u4e2d g1 \u548c g2 \u7684\u8f93\u51fa\u5dee\u5f02\u5219\u662f\u7531\u4e8e\u53d8\u91cf array_1 \u548c array_2 \u88ab\u91cd\u65b0\u8d4b\u503c\u7684\u65b9\u5f0f\u5bfc\u81f4\u7684.\n\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b, array_1 \u88ab\u7ed1\u5b9a\u5230\u65b0\u5bf9\u8c61 [1,2,3,4,5], \u56e0\u4e3a in \u5b50\u53e5\u662f\u5728\u58f0\u660e\u65f6\u88ab\u6267\u884c\u7684\uff0c \u6240\u4ee5\u5b83\u4ecd\u7136\u5f15\u7528\u65e7\u5bf9\u8c61 [1,2,3,4](\u5e76\u6ca1\u6709\u88ab\u9500\u6bc1).\n\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b, \u5bf9 array_2 \u7684\u5207\u7247\u8d4b\u503c\u5c06\u76f8\u540c\u7684\u65e7\u5bf9\u8c61 [1,2,3,4] \u539f\u5730\u66f4\u65b0\u4e3a [1,2,3,4,5]. \u56e0\u6b64 g2 \u548c array_2 \u4ecd\u7136\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61(\u8fd9\u4e2a\u5bf9\u8c61\u73b0\u5728\u5df2\u7ecf\u66f4\u65b0\u4e3a [1,2,3,4,5]).\n\n\n> is is not what it is!\/\u51fa\u4eba\u610f\u6599\u7684is!\n\u4e0b\u9762\u662f\u4e00\u4e2a\u5728\u4e92\u8054\u7f51\u4e0a\u975e\u5e38\u6709\u540d\u7684\u4f8b\u5b50.\n>>> a = 256\n>>> b = 256\n>>> a is b\nTrue\n\n>>> a = 257\n>>> b = 257\n>>> a is b\nFalse\n\n>>> a = 257; b = 257\n>>> a is b\nTrue\n\ud83d\udca1 \u8bf4\u660e:\nis \u548c == \u7684\u533a\u522b\n\nis \u8fd0\u7b97\u7b26\u68c0\u67e5\u4e24\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u662f\u5426\u5f15\u7528\u81ea\u540c\u4e00\u5bf9\u8c61 (\u5373, \u5b83\u68c0\u67e5\u4e24\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u662f\u5426\u76f8\u540c).\n== \u8fd0\u7b97\u7b26\u6bd4\u8f83\u4e24\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u7684\u503c\u662f\u5426\u76f8\u7b49.\n\u56e0\u6b64 is \u4ee3\u8868\u5f15\u7528\u76f8\u540c, == \u4ee3\u8868\u503c\u76f8\u7b49. \u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u5f88\u597d\u7684\u8bf4\u660e\u8fd9\u70b9,\n>>> [] == []\nTrue\n>>> [] is [] # \u8fd9\u4e24\u4e2a\u7a7a\u5217\u8868\u4f4d\u4e8e\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740.\nFalse\n\n\n256 \u662f\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61, \u800c 257 \u4e0d\u662f\n\u5f53\u4f60\u542f\u52a8Python \u7684\u65f6\u5019, \u6570\u503c\u4e3a -5 \u5230 256 \u7684\u5bf9\u8c61\u5c31\u5df2\u7ecf\u88ab\u5206\u914d\u597d\u4e86. \u8fd9\u4e9b\u6570\u5b57\u56e0\u4e3a\u7ecf\u5e38\u88ab\u4f7f\u7528, \u6240\u4ee5\u4f1a\u88ab\u63d0\u524d\u51c6\u5907\u597d.\nPython \u901a\u8fc7\u8fd9\u79cd\u521b\u5efa\u5c0f\u6574\u6570\u6c60\u7684\u65b9\u5f0f\u6765\u907f\u514d\u5c0f\u6574\u6570\u9891\u7e41\u7684\u7533\u8bf7\u548c\u9500\u6bc1\u5185\u5b58\u7a7a\u95f4.\n\u5f15\u7528\u81ea https:\/\/docs.python.org\/3\/c-api\/long.html\n\n\u5f53\u524d\u7684\u5b9e\u73b0\u4e3a-5\u5230256\u4e4b\u95f4\u7684\u6240\u6709\u6574\u6570\u4fdd\u7559\u4e00\u4e2a\u6574\u6570\u5bf9\u8c61\u6570\u7ec4, \u5f53\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u8be5\u8303\u56f4\u5185\u7684\u6574\u6570\u65f6, \u4f60\u53ea\u9700\u8981\u8fd4\u56de\u73b0\u6709\u5bf9\u8c61\u7684\u5f15\u7528. \u6240\u4ee5\u6539\u53d81\u7684\u503c\u662f\u6709\u53ef\u80fd\u7684. \u6211\u6000\u7591\u8fd9\u79cd\u884c\u4e3a\u5728Python\u4e2d\u662f\u672a\u5b9a\u4e49\u884c\u4e3a. :-)\n\n>>> id(256)\n10922528\n>>> a = 256\n>>> b = 256\n>>> id(a)\n10922528\n>>> id(b)\n10922528\n>>> id(257)\n140084850247312\n>>> x = 257\n>>> y = 257\n>>> id(x)\n140084850247440\n>>> id(y)\n140084850247344\n\u8fd9\u91cc\u89e3\u91ca\u5668\u5e76\u6ca1\u6709\u667a\u80fd\u5230\u80fd\u5728\u6267\u884c y = 257 \u65f6\u610f\u8bc6\u5230\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u6574\u6570 257, \u6240\u4ee5\u5b83\u5728\u5185\u5b58\u4e2d\u53c8\u65b0\u5efa\u4e86\u53e6\u4e00\u4e2a\u5bf9\u8c61.\n\u5f53 a \u548c b \u5728\u540c\u4e00\u884c\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u503c\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61.\n>>> a, b = 257, 257\n>>> id(a)\n140640774013296\n>>> id(b)\n140640774013296\n>>> a = 257\n>>> b = 257\n>>> id(a)\n140640774013392\n>>> id(b)\n140640774013488\n\n\u5f53 a \u548c b \u5728\u540c\u4e00\u884c\u4e2d\u88ab\u8bbe\u7f6e\u4e3a 257 \u65f6, Python \u89e3\u91ca\u5668\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61, \u7136\u540e\u540c\u65f6\u5f15\u7528\u7b2c\u4e8c\u4e2a\u53d8\u91cf. \u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u884c\u4e0a\u8fdb\u884c, \u5b83\u5c31\u4e0d\u4f1a \"\u77e5\u9053\" \u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a 257 \u5bf9\u8c61\u4e86.\n\u8fd9\u662f\u4e00\u79cd\u7279\u522b\u4e3a\u4ea4\u4e92\u5f0f\u73af\u5883\u505a\u7684\u7f16\u8bd1\u5668\u4f18\u5316. \u5f53\u4f60\u5728\u5b9e\u65f6\u89e3\u91ca\u5668\u4e2d\u8f93\u5165\u4e24\u884c\u7684\u65f6\u5019, \u4ed6\u4eec\u4f1a\u5355\u72ec\u7f16\u8bd1, \u56e0\u6b64\u4e5f\u4f1a\u5355\u72ec\u8fdb\u884c\u4f18\u5316. \u5982\u679c\u4f60\u5728 .py \u6587\u4ef6\u4e2d\u5c1d\u8bd5\u8fd9\u4e2a\u4f8b\u5b50, \u5219\u4e0d\u4f1a\u770b\u5230\u76f8\u540c\u7684\u884c\u4e3a, \u56e0\u4e3a\u6587\u4ef6\u662f\u4e00\u6b21\u6027\u7f16\u8bd1\u7684.\n\n\n> A tic-tac-toe where X wins in the first attempt!\/\u4e00\u8e74\u5373\u81f3!\n# \u6211\u4eec\u5148\u521d\u59cb\u5316\u4e00\u4e2a\u53d8\u91cfrow\nrow = [\"\"]*3 #row i['', '', '']\n# \u5e76\u521b\u5efa\u4e00\u4e2a\u53d8\u91cfboard\nboard = [row]*3\nOutput:\n>>> board\n[['', '', ''], ['', '', ''], ['', '', '']]\n>>> board[0]\n['', '', '']\n>>> board[0][0]\n''\n>>> board[0][0] = \"X\"\n>>> board\n[['X', '', ''], ['X', '', ''], ['X', '', '']]\n\u6211\u4eec\u6709\u6ca1\u6709\u8d4b\u503c\u8fc73\u4e2a \"X\" \u5462\uff1f\n\ud83d\udca1 \u8bf4\u660e:\n\u5f53\u6211\u4eec\u521d\u59cb\u5316 row \u53d8\u91cf\u65f6, \u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5185\u5b58\u4e2d\u7684\u60c5\u51b5\u3002\n\n\u800c\u5f53\u901a\u8fc7\u5bf9 row \u505a\u4e58\u6cd5\u6765\u521d\u59cb\u5316 board \u65f6, \u5185\u5b58\u4e2d\u7684\u60c5\u51b5\u5219\u5982\u4e0b\u56fe\u6240\u793a (\u6bcf\u4e2a\u5143\u7d20 board[0], board[1] \u548c board[2] \u90fd\u548c row \u4e00\u6837\u5f15\u7528\u4e86\u540c\u4e00\u5217\u8868.)\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u4f7f\u7528\u53d8\u91cf row \u751f\u6210 board \u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5. (\u8fd9\u4e2aissue\u63d0\u51fa\u4e86\u8fd9\u4e2a\u9700\u6c42.)\n>>> board = [['']*3 for _ in range(3)]\n>>> board[0][0] = \"X\"\n>>> board\n[['X', '', ''], ['', '', ''], ['', '', '']]\n\n> The sticky output function\/\u9ebb\u70e6\u7684\u8f93\u51fa\nfuncs = []\nresults = []\nfor x in range(7):\n    def some_func():\n        return x\n    funcs.append(some_func)\n    results.append(some_func()) # \u6ce8\u610f\u8fd9\u91cc\u51fd\u6570\u88ab\u6267\u884c\u4e86\n\nfuncs_results = [func() for func in funcs]\nOutput:\n>>> results\n[0, 1, 2, 3, 4, 5, 6]\n>>> funcs_results\n[6, 6, 6, 6, 6, 6, 6]\n\u5373\u4f7f\u6bcf\u6b21\u5728\u8fed\u4ee3\u4e2d\u5c06 some_func \u52a0\u5165 funcs \u524d\u7684 x \u503c\u90fd\u4e0d\u76f8\u540c, \u6240\u6709\u7684\u51fd\u6570\u8fd8\u662f\u90fd\u8fd4\u56de6.\n\/\/ \u518d\u6362\u4e2a\u4f8b\u5b50\n>>> powers_of_x = [lambda x: x**i for i in range(10)]\n>>> [f(2) for f in powers_of_x]\n[512, 512, 512, 512, 512, 512, 512, 512, 512, 512]\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5f53\u5728\u5faa\u73af\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u65f6, \u5982\u679c\u8be5\u51fd\u6570\u5728\u5176\u4e3b\u4f53\u4e2d\u4f7f\u7528\u4e86\u5faa\u73af\u53d8\u91cf, \u5219\u95ed\u5305\u51fd\u6570\u5c06\u4e0e\u5faa\u73af\u53d8\u91cf\u7ed1\u5b9a, \u800c\u4e0d\u662f\u5b83\u7684\u503c. \u56e0\u6b64, \u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u4f7f\u7528\u6700\u540e\u5206\u914d\u7ed9\u53d8\u91cf\u7684\u503c\u6765\u8fdb\u884c\u8ba1\u7b97\u7684.\n\n\n\u53ef\u4ee5\u901a\u8fc7\u5c06\u5faa\u73af\u53d8\u91cf\u4f5c\u4e3a\u547d\u540d\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u6765\u83b7\u5f97\u9884\u671f\u7684\u7ed3\u679c. \u4e3a\u4ec0\u4e48\u8fd9\u6837\u53ef\u884c? \u56e0\u4e3a\u8fd9\u4f1a\u5728\u51fd\u6570\u5185\u518d\u6b21\u5b9a\u4e49\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf.\nfuncs = []\nfor x in range(7):\n    def some_func(x=x):\n        return x\n    funcs.append(some_func)\nOutput:\n>>> funcs_results = [func() for func in funcs]\n>>> funcs_results\n[0, 1, 2, 3, 4, 5, 6]\n\n\n\n> is not ... is not is (not ...)\/is not ... \u4e0d\u662f is (not ...)\n>>> 'something' is not None\nTrue\n>>> 'something' is (not None)\nFalse\n\ud83d\udca1 \u8bf4\u660e:\n\nis not \u662f\u4e2a\u5355\u72ec\u7684\u4e8c\u5143\u8fd0\u7b97\u7b26, \u4e0e\u5206\u522b\u4f7f\u7528 is \u548c not \u4e0d\u540c.\n\u5982\u679c\u64cd\u4f5c\u7b26\u4e24\u4fa7\u7684\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61, \u5219 is not \u7684\u7ed3\u679c\u4e3a False, \u5426\u5219\u7ed3\u679c\u4e3a True.\n\n\n> The surprising comma\/\u610f\u5916\u7684\u9017\u53f7\nOutput:\n>>> def f(x, y,):\n...     print(x, y)\n...\n>>> def g(x=4, y=5,):\n...     print(x, y)\n...\n>>> def h(x, **kwargs,):\n  File \"<stdin>\", line 1\n    def h(x, **kwargs,):\n                     ^\nSyntaxError: invalid syntax\n>>> def h(*args,):\n  File \"<stdin>\", line 1\n    def h(*args,):\n                ^\nSyntaxError: invalid syntax\n\ud83d\udca1 \u8bf4\u660e:\n\n\u5728Python\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u5217\u8868\u4e2d, \u5c3e\u968f\u9017\u53f7\u5e76\u4e0d\u4e00\u5b9a\u662f\u5408\u6cd5\u7684.\n\u5728Python\u4e2d, \u53c2\u6570\u5217\u8868\u90e8\u5206\u7528\u524d\u7f6e\u9017\u53f7\u5b9a\u4e49, \u90e8\u5206\u7528\u5c3e\u968f\u9017\u53f7\u5b9a\u4e49. \u8fd9\u79cd\u51b2\u7a81\u5bfc\u81f4\u9017\u53f7\u88ab\u5939\u5728\u4e2d\u95f4, \u6ca1\u6709\u89c4\u5219\u5b9a\u4e49\u5b83.(\u8bd1:\u8fd9\u4e00\u53e5\u770b\u5f97\u6211\u4e5f\u5f88\u61f5\u903c,\u53ea\u80fd\u5f3a\u7ffb\u4e86.\u8be6\u7ec6\u89e3\u91ca\u770b\u4e0b\u9762\u7684\u8ba8\u8bba\u5e16\u4f1a\u4e00\u76ee\u4e86\u7136.)\n\u6ce8\u610f: \u5c3e\u968f\u9017\u53f7\u7684\u95ee\u9898\u5df2\u7ecf\u5728Python 3.6\u4e2d\u88ab\u4fee\u590d\u4e86. \u800c\u8fd9\u7bc7\u5e16\u5b50\u4e2d\u5219\u7b80\u8981\u8ba8\u8bba\u4e86Python\u4e2d\u5c3e\u968f\u9017\u53f7\u7684\u4e0d\u540c\u7528\u6cd5.\n\n\n> Backslashes at the end of string\/\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u53cd\u659c\u6760\nOutput:\n>>> print(\"\\\\ C:\\\\\")\n\\ C:\\\n>>> print(r\"\\ C:\")\n\\ C:\n>>> print(r\"\\ C:\\\")\n\n    File \"<stdin>\", line 1\n      print(r\"\\ C:\\\")\n                     ^\nSyntaxError: EOL while scanning string literal\n\n\ud83d\udca1 \u8bf4\u660e:\n\n\u5728\u4ee5 r \u5f00\u5934\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d, \u53cd\u659c\u6760\u5e76\u6ca1\u6709\u7279\u6b8a\u542b\u4e49.\n>>> print(repr(r\"wt\\\"f\"))\n'wt\\\\\"f'\n\n\u89e3\u91ca\u5668\u6240\u505a\u7684\u53ea\u662f\u7b80\u5355\u7684\u6539\u53d8\u4e86\u53cd\u659c\u6760\u7684\u884c\u4e3a, \u56e0\u6b64\u4f1a\u76f4\u63a5\u653e\u884c\u53cd\u659c\u6760\u53ca\u540e\u4e00\u4e2a\u7684\u5b57\u7b26. \u8fd9\u5c31\u662f\u53cd\u659c\u6760\u5728\u539f\u59cb\u5b57\u7b26\u4e32\u672b\u5c3e\u4e0d\u8d77\u4f5c\u7528\u7684\u539f\u56e0.\n\n\n> not knot!\/\u522b\u7ea0\u7ed3!\nx = True\ny = False\nOutput:\n>>> not x == y\nTrue\n>>> x == not y\n  File \"<input>\", line 1\n    x == not y\n           ^\nSyntaxError: invalid syntax\n\ud83d\udca1 \u8bf4\u660e:\n\n\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4f1a\u5f71\u54cd\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u987a\u5e8f, \u800c\u5728 Python \u4e2d == \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u8981\u9ad8\u4e8e not \u8fd0\u7b97\u7b26.\n\u6240\u4ee5 not x == y \u76f8\u5f53\u4e8e not (x == y), \u540c\u65f6\u7b49\u4ef7\u4e8e not (True == False), \u6700\u540e\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f True.\n\u4e4b\u6240\u4ee5 x == not y \u4f1a\u629b\u4e00\u4e2a SyntaxError \u5f02\u5e38, \u662f\u56e0\u4e3a\u5b83\u4f1a\u88ab\u8ba4\u4e3a\u7b49\u4ef7\u4e8e (x == not) y, \u800c\u4e0d\u662f\u4f60\u4e00\u5f00\u59cb\u671f\u671b\u7684 x == (not y).\n\u89e3\u91ca\u5668\u671f\u671b not \u6807\u8bb0\u662f not in \u64cd\u4f5c\u7b26\u7684\u4e00\u90e8\u5206 (\u56e0\u4e3a == \u548c not in \u64cd\u4f5c\u7b26\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7), \u4f46\u662f\u5b83\u5728 not \u6807\u8bb0\u540e\u9762\u627e\u4e0d\u5230 in \u6807\u8bb0, \u6240\u4ee5\u4f1a\u629b\u51fa SyntaxError \u5f02\u5e38.\n\n\n> Half triple-quoted strings\/\u4e09\u4e2a\u5f15\u53f7\nOutput:\n>>> print('wtfpython''')\nwtfpython\n>>> print(\"wtfpython\"\"\")\nwtfpython\n>>> # \u4e0b\u9762\u7684\u8bed\u53e5\u4f1a\u629b\u51fa `SyntaxError` \u5f02\u5e38\n>>> # print('''wtfpython')\n>>> # print(\"\"\"wtfpython\")\n\ud83d\udca1 \u8bf4\u660e:\n\nPython \u63d0\u4f9b\u9690\u5f0f\u7684\u5b57\u7b26\u4e32\u8fde\u63a5, \u4f8b\u5982,\n>>> print(\"wtf\" \"python\")\nwtfpython\n>>> print(\"wtf\" \"\") # or \"wtf\"\"\"\nwtf\n\n\n''' \u548c \"\"\" \u5728 Python\u4e2d\u4e5f\u662f\u5b57\u7b26\u4e32\u5b9a\u754c\u7b26, Python \u89e3\u91ca\u5668\u5728\u5148\u9047\u5230\u4e09\u4e2a\u5f15\u53f7\u7684\u7684\u65f6\u5019\u4f1a\u5c1d\u8bd5\u518d\u5bfb\u627e\u4e09\u4e2a\u7ec8\u6b62\u5f15\u53f7\u4f5c\u4e3a\u5b9a\u754c\u7b26, \u5982\u679c\u4e0d\u5b58\u5728\u5219\u4f1a\u5bfc\u81f4 SyntaxError \u5f02\u5e38.\n\n\n> Midnight time doesn't exist?\/\u4e0d\u5b58\u5728\u7684\u5348\u591c?\nfrom datetime import datetime\n\nmidnight = datetime(2018, 1, 1, 0, 0)\nmidnight_time = midnight.time()\n\nnoon = datetime(2018, 1, 1, 12, 0)\nnoon_time = noon.time()\n\nif midnight_time:\n    print(\"Time at midnight is\", midnight_time)\n\nif noon_time:\n    print(\"Time at noon is\", noon_time)\nOutput:\n('Time at noon is', datetime.time(12, 0))\nmidnight_time \u5e76\u6ca1\u6709\u88ab\u8f93\u51fa.\n\ud83d\udca1 \u8bf4\u660e:\n\u5728Python 3.5\u4e4b\u524d, \u5982\u679c datetime.time \u5bf9\u8c61\u5b58\u50a8\u7684UTC\u7684\u5348\u591c\u65f6\u95f4(\u8bd1: \u5c31\u662f 00:00), \u90a3\u4e48\u5b83\u7684\u5e03\u5c14\u503c\u4f1a\u88ab\u8ba4\u4e3a\u662f False. \u5f53\u4f7f\u7528 if obj: \u8bed\u53e5\u6765\u68c0\u67e5 obj \u662f\u5426\u4e3a null \u6216\u8005\u67d0\u4e9b\u201c\u7a7a\u201d\u503c\u7684\u65f6\u5019, \u5f88\u5bb9\u6613\u51fa\u9519.\n\n> What's wrong with booleans?\/\u5e03\u5c14\u4f60\u548b\u4e86?\n1.\n# \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50, \u7edf\u8ba1\u4e0b\u9762\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5e03\u5c14\u578b\u503c\u7684\u4e2a\u6570\u548c\u6574\u578b\u503c\u7684\u4e2a\u6570\nmixed_list = [False, 1.0, \"some_string\", 3, True, [], False]\nintegers_found_so_far = 0\nbooleans_found_so_far = 0\n\nfor item in mixed_list:\n    if isinstance(item, int):\n        integers_found_so_far += 1\n    elif isinstance(item, bool):\n        booleans_found_so_far += 1\nOutput:\n>>> integers_found_so_far\n4\n>>> booleans_found_so_far\n0\n2.\nanother_dict = {}\nanother_dict[True] = \"JavaScript\"\nanother_dict[1] = \"Ruby\"\nanother_dict[1.0] = \"Python\"\nOutput:\n>>> another_dict[True]\n\"Python\"\n3.\n>>> some_bool = True\n>>> \"wtf\"*some_bool\n'wtf'\n>>> some_bool = False\n>>> \"wtf\"*some_bool\n''\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5e03\u5c14\u503c\u662f int \u7684\u5b50\u7c7b\n>>> isinstance(True, int)\nTrue\n>>> isinstance(False, int)\nTrue\n\n\n\u6240\u4ee5 True \u7684\u6574\u6570\u503c\u662f 1, \u800c False \u7684\u6574\u6570\u503c\u662f 0.\n>>> True == 1 == 1.0 and False == 0 == 0.0\nTrue\n\n\n\u5173\u4e8e\u5176\u80cc\u540e\u7684\u539f\u7406, \u8bf7\u770b\u8fd9\u4e2a StackOverflow \u7684\u56de\u7b54.\n\n\n\n> Class attributes and instance attributes\/\u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027\n1.\nclass A:\n    x = 1\n\nclass B(A):\n    pass\n\nclass C(A):\n    pass\nOutput:\n>>> A.x, B.x, C.x\n(1, 1, 1)\n>>> B.x = 2\n>>> A.x, B.x, C.x\n(1, 2, 1)\n>>> A.x = 3\n>>> A.x, B.x, C.x\n(3, 2, 3)\n>>> a = A()\n>>> a.x, A.x\n(3, 3)\n>>> a.x += 1\n>>> a.x, A.x\n(4, 3)\n2.\nclass SomeClass:\n    some_var = 15\n    some_list = [5]\n    another_list = [5]\n    def __init__(self, x):\n        self.some_var = x + 1\n        self.some_list = self.some_list + [x]\n        self.another_list += [x]\nOutput:\n>>> some_obj = SomeClass(420)\n>>> some_obj.some_list\n[5, 420]\n>>> some_obj.another_list\n[5, 420]\n>>> another_obj = SomeClass(111)\n>>> another_obj.some_list\n[5, 111]\n>>> another_obj.another_list\n[5, 420, 111]\n>>> another_obj.another_list is SomeClass.another_list\nTrue\n>>> another_obj.another_list is some_obj.another_list\nTrue\n\ud83d\udca1 \u8bf4\u660e:\n\n\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u5728\u5185\u90e8\u662f\u901a\u8fc7\u7c7b\u5bf9\u8c61\u7684\u5b57\u5178\u6765\u5904\u7406(\u8bd1: \u5c31\u662f __dict__ \u5c5e\u6027). \u5982\u679c\u5728\u5f53\u524d\u7c7b\u7684\u5b57\u5178\u4e2d\u627e\u4e0d\u5230\u7684\u8bdd\u5c31\u53bb\u5b83\u7684\u7236\u7c7b\u4e2d\u5bfb\u627e.\n+= \u8fd0\u7b97\u7b26\u4f1a\u5728\u539f\u5730\u4fee\u6539\u53ef\u53d8\u5bf9\u8c61, \u800c\u4e0d\u662f\u521b\u5efa\u65b0\u5bf9\u8c61. \u56e0\u6b64, \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u4fee\u6539\u4e00\u4e2a\u5b9e\u4f8b\u7684\u5c5e\u6027\u4f1a\u5f71\u54cd\u5176\u4ed6\u5b9e\u4f8b\u548c\u7c7b\u5c5e\u6027.\n\n\n> yielding None\/\u751f\u6210 None\nsome_iterable = ('a', 'b')\n\ndef some_func(val):\n    return \"something\"\nOutput:\n>>> [x for x in some_iterable]\n['a', 'b']\n>>> [(yield x) for x in some_iterable]\n<generator object <listcomp> at 0x7f70b0a4ad58>\n>>> list([(yield x) for x in some_iterable])\n['a', 'b']\n>>> list((yield x) for x in some_iterable)\n['a', None, 'b', None]\n>>> list(some_func((yield x)) for x in some_iterable)\n['a', 'something', 'b', 'something']\n\ud83d\udca1 \u8bf4\u660e:\n\n\u6765\u6e90\u548c\u89e3\u91ca\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230: https:\/\/stackoverflow.com\/questions\/32139885\/yield-in-list-comprehensions-and-generator-expressions\n\u76f8\u5173\u9519\u8bef\u62a5\u544a: http:\/\/bugs.python.org\/issue10544\n\u8fd9\u4e2abug\u57283.7\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u4e0d\u88ab\u63a8\u8350\u4f7f\u7528, \u5e76\u57283.8\u4e2d\u88ab\u4fee\u590d. \u56e0\u6b64\u57283.8\u4e2d\u5c1d\u8bd5\u5728\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528 yield, \u53ea\u4f1a\u5f97\u5230\u4e00\u4e2a SyntaxError. \u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u770b3.7\u66f4\u65b0\u5185\u5bb9, 3.8\u66f4\u65b0\u5185\u5bb9.\n\n\n> Mutating the immutable!\/\u5f3a\u4eba\u6240\u96be\nsome_tuple = (\"A\", \"tuple\", \"with\", \"values\")\nanother_tuple = ([1, 2], [3, 4], [5, 6])\nOutput:\n>>> some_tuple[2] = \"change this\"\nTypeError: 'tuple' object does not support item assignment\n>>> another_tuple[2].append(1000) # \u8fd9\u91cc\u4e0d\u51fa\u73b0\u9519\u8bef\n>>> another_tuple\n([1, 2], [3, 4], [5, 6, 1000])\n>>> another_tuple[2] += [99, 999]\nTypeError: 'tuple' object does not support item assignment\n>>> another_tuple\n([1, 2], [3, 4], [5, 6, 1000, 99, 999])\n\u6211\u8fd8\u4ee5\u4e3a\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\u5462...\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5f15\u7528 https:\/\/docs.python.org\/2\/reference\/datamodel.html\n\n\u4e0d\u53ef\u53d8\u5e8f\u5217\n\u4e0d\u53ef\u53d8\u5e8f\u5217\u7684\u5bf9\u8c61\u4e00\u65e6\u521b\u5efa\u5c31\u4e0d\u80fd\u518d\u6539\u53d8. (\u5982\u679c\u5bf9\u8c61\u5305\u542b\u5bf9\u5176\u4ed6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5219\u8fd9\u4e9b\u5176\u4ed6\u5bf9\u8c61\u53ef\u80fd\u662f\u53ef\u53d8\u7684\u5e76\u4e14\u53ef\u80fd\u4f1a\u88ab\u4fee\u6539; \u4f46\u662f\uff0c\u7531\u4e0d\u53ef\u53d8\u5bf9\u8c61\u76f4\u63a5\u5f15\u7528\u7684\u5bf9\u8c61\u96c6\u5408\u4e0d\u80fd\u66f4\u6539.)\n\n\n\n+= \u64cd\u4f5c\u7b26\u5728\u539f\u5730\u4fee\u6539\u4e86\u5217\u8868. \u5143\u7d20\u8d4b\u503c\u64cd\u4f5c\u5e76\u4e0d\u5de5\u4f5c, \u4f46\u662f\u5f53\u5f02\u5e38\u629b\u51fa\u65f6, \u5143\u7d20\u5df2\u7ecf\u5728\u539f\u5730\u88ab\u4fee\u6539\u4e86.\n\n\n(\u8bd1: \u5bf9\u4e8e\u4e0d\u53ef\u53d8\u5bf9\u8c61, \u8fd9\u91cc\u6307tuple, += \u5e76\u4e0d\u662f\u539f\u5b50\u64cd\u4f5c, \u800c\u662f extend \u548c = \u4e24\u4e2a\u52a8\u4f5c, \u8fd9\u91cc = \u64cd\u4f5c\u867d\u7136\u4f1a\u629b\u51fa\u5f02\u5e38, \u4f46 extend \u64cd\u4f5c\u5df2\u7ecf\u4fee\u6539\u6210\u529f\u4e86. \u8be6\u7ec6\u89e3\u91ca\u53ef\u4ee5\u770b\u8fd9\u91cc)\n\n> The disappearing variable from outer scope\/\u6d88\u5931\u7684\u5916\u90e8\u53d8\u91cf\ne = 7\ntry:\n    raise Exception()\nexcept Exception as e:\n    pass\nOutput (Python 2.x):\n>>> print(e)\n# prints nothing\nOutput (Python 3.x):\n>>> print(e)\nNameError: name 'e' is not defined\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u51fa\u5904: https:\/\/docs.python.org\/3\/reference\/compound_stmts.html#except\n\u5f53\u4f7f\u7528 as \u4e3a\u76ee\u6807\u5206\u914d\u5f02\u5e38\u7684\u65f6\u5019, \u5c06\u5728except\u5b50\u53e5\u7684\u672b\u5c3e\u6e05\u9664\u8be5\u5f02\u5e38.\n\u8fd9\u5c31\u597d\u50cf\nexcept E as N:\n    foo\n\u4f1a\u88ab\u7ffb\u8bd1\u6210\nexcept E as N:\n    try:\n        foo\n    finally:\n        del N\n\u8fd9\u610f\u5473\u7740\u5f02\u5e38\u5fc5\u987b\u5728\u88ab\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\u624d\u80fd\u5728 except \u5b50\u53e5\u4e4b\u540e\u5f15\u7528\u5b83. \u800c\u5f02\u5e38\u4e4b\u6240\u4ee5\u4f1a\u88ab\u6e05\u9664, \u5219\u662f\u7531\u4e8e\u4e0a\u9762\u9644\u52a0\u7684\u56de\u6eaf\u4fe1\u606f(trackback)\u4f1a\u548c\u6808\u5e27(stack frame)\u5f62\u6210\u5faa\u73af\u5f15\u7528, \u4f7f\u5f97\u8be5\u6808\u5e27\u4e2d\u7684\u6240\u6709\u672c\u5730\u53d8\u91cf\u5728\u4e0b\u4e00\u6b21\u5783\u573e\u56de\u6536\u53d1\u751f\u4e4b\u524d\u90fd\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001.(\u8bd1: \u4e5f\u5c31\u662f\u8bf4\u4e0d\u4f1a\u88ab\u56de\u6536)\n\n\n\u5b50\u53e5\u5728 Python \u4e2d\u5e76\u6ca1\u6709\u72ec\u7acb\u7684\u4f5c\u7528\u57df. \u793a\u4f8b\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5904\u4e8e\u540c\u4e00\u4f5c\u7528\u57df\u5185, \u6240\u4ee5\u53d8\u91cf e \u4f1a\u7531\u4e8e\u6267\u884c\u4e86 except \u5b50\u53e5\u800c\u88ab\u5220\u9664. \u800c\u5bf9\u4e8e\u6709\u72ec\u7acb\u7684\u5185\u90e8\u4f5c\u7528\u57df\u7684\u51fd\u6570\u6765\u8bf4\u60c5\u51b5\u5c31\u4e0d\u4e00\u6837\u4e86. \u4e0b\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9:\ndef f(x):\n    del(x)\n    print(x)\n\nx = 5\ny = [5, 4, 3]\nOutput:\n>>>f(x)\nUnboundLocalError: local variable 'x' referenced before assignment\n>>>f(y)\nUnboundLocalError: local variable 'x' referenced before assignment\n>>> x\n5\n>>> y\n[5, 4, 3]\n\n\n\u5728 Python 2.x \u4e2d, Exception() \u5b9e\u4f8b\u88ab\u8d4b\u503c\u7ed9\u4e86\u53d8\u91cf e, \u6240\u4ee5\u5f53\u4f60\u5c1d\u8bd5\u6253\u5370\u7ed3\u679c\u7684\u65f6\u5019, \u5b83\u7684\u8f93\u51fa\u4e3a\u7a7a.\uff08\u8bd1: \u6b63\u5e38\u7684Exception\u5b9e\u4f8b\u6253\u5370\u51fa\u6765\u5c31\u662f\u7a7a\uff09\nOutput (Python 2.x):\n>>> e\nException()\n>>> print e\n# \u6ca1\u6709\u6253\u5370\u4efb\u4f55\u5185\u5bb9!\n\n\n\n> When True is actually False\/\u771f\u4ea6\u5047\nTrue = False\nif True == False:\n    print(\"I've lost faith in truth!\")\nOutput:\nI've lost faith in truth!\n\n\ud83d\udca1 \u8bf4\u660e:\n\n\u6700\u521d, Python \u5e76\u6ca1\u6709 bool \u578b (\u4eba\u4eec\u75280\u8868\u793a\u5047\u503c, \u7528\u975e\u96f6\u503c\u6bd4\u59821\u4f5c\u4e3a\u771f\u503c). \u540e\u6765\u4ed6\u4eec\u6dfb\u52a0\u4e86 True, False, \u548c bool \u578b, \u4f46\u662f, \u4e3a\u4e86\u5411\u540e\u517c\u5bb9, \u4ed6\u4eec\u6ca1\u6cd5\u628a True \u548c False \u8bbe\u7f6e\u4e3a\u5e38\u91cf, \u53ea\u662f\u8bbe\u7f6e\u6210\u4e86\u5185\u7f6e\u53d8\u91cf.\nPython 3 \u7531\u4e8e\u4e0d\u518d\u9700\u8981\u5411\u540e\u517c\u5bb9, \u7ec8\u4e8e\u53ef\u4ee5\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u4e86, \u6240\u4ee5\u8fd9\u4e2a\u4f8b\u5b50\u65e0\u6cd5\u5728 Python 3.x \u4e2d\u6267\u884c!\n\n\n> From filled to None in one instruction...\/\u4ece\u6709\u5230\u65e0...\nsome_list = [1, 2, 3]\nsome_dict = {\n  \"key_1\": 1,\n  \"key_2\": 2,\n  \"key_3\": 3\n}\n\nsome_list = some_list.append(4)\nsome_dict = some_dict.update({\"key_4\": 4})\nOutput:\n>>> print(some_list)\nNone\n>>> print(some_dict)\nNone\n\ud83d\udca1 \u8bf4\u660e:\n\u5927\u591a\u6570\u4fee\u6539\u5e8f\u5217\/\u6620\u5c04\u5bf9\u8c61\u7684\u65b9\u6cd5, \u6bd4\u5982 list.append, dict.update, list.sort \u7b49\u7b49. \u90fd\u662f\u539f\u5730\u4fee\u6539\u5bf9\u8c61\u5e76\u8fd4\u56de None. \u8fd9\u6837\u505a\u7684\u7406\u7531\u662f, \u5982\u679c\u64cd\u4f5c\u53ef\u4ee5\u539f\u5730\u5b8c\u6210, \u5c31\u53ef\u4ee5\u907f\u514d\u521b\u5efa\u5bf9\u8c61\u7684\u526f\u672c\u6765\u63d0\u9ad8\u6027\u80fd. (\u53c2\u8003\u8fd9\u91cc)\n\n> Subclass relationships\/\u5b50\u7c7b\u5173\u7cfb *\nOutput:\n>>> from collections import Hashable\n>>> issubclass(list, object)\nTrue\n>>> issubclass(object, Hashable)\nTrue\n>>> issubclass(list, Hashable)\nFalse\n\u5b50\u7c7b\u5173\u7cfb\u5e94\u8be5\u662f\u53ef\u4f20\u9012\u7684, \u5bf9\u5427? (\u5373, \u5982\u679c A \u662f B \u7684\u5b50\u7c7b, B \u662f C \u7684\u5b50\u7c7b, \u90a3\u4e48 A \u5e94\u8be5 \u662f C \u7684\u5b50\u7c7b.)\n\ud83d\udca1 \u8bf4\u660e:\n\nPython \u4e2d\u7684\u5b50\u7c7b\u5173\u7cfb\u5e76\u4e0d\u4e00\u5b9a\u662f\u4f20\u9012\u7684. \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728\u5143\u7c7b\u4e2d\u968f\u610f\u5b9a\u4e49 __subclasscheck__.\n\u5f53 issubclass(cls, Hashable) \u88ab\u8c03\u7528\u65f6, \u5b83\u53ea\u662f\u5728 cls \u4e2d\u5bfb\u627e __hash__ \u65b9\u6cd5\u6216\u8005\u4ece\u7ee7\u627f\u7684\u7236\u7c7b\u4e2d\u5bfb\u627e __hash__ \u65b9\u6cd5.\n\u7531\u4e8e object is \u53ef\u6563\u5217\u7684(hashable), \u4f46\u662f list \u662f\u4e0d\u53ef\u6563\u5217\u7684, \u6240\u4ee5\u5b83\u6253\u7834\u4e86\u8fd9\u79cd\u4f20\u9012\u5173\u7cfb.\n\u5728\u8fd9\u91cc\u53ef\u4ee5\u627e\u5230\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca.\n\n\n> The mysterious key type conversion\/\u795e\u79d8\u7684\u952e\u578b\u8f6c\u6362 *\nclass SomeClass(str):\n    pass\n\nsome_dict = {'s':42}\nOutput:\n>>> type(list(some_dict.keys())[0])\nstr\n>>> s = SomeClass('s')\n>>> some_dict[s] = 40\n>>> some_dict # \u9884\u671f: \u4e24\u4e2a\u4e0d\u540c\u7684\u952e\u503c\u5bf9\n{'s': 40}\n>>> type(list(some_dict.keys())[0])\nstr\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u7531\u4e8e SomeClass \u4f1a\u4ece str \u81ea\u52a8\u7ee7\u627f __hash__ \u65b9\u6cd5, \u6240\u4ee5 s \u5bf9\u8c61\u548c \"s\" \u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u662f\u76f8\u540c\u7684.\n\n\n\u800c SomeClass(\"s\") == \"s\" \u4e3a True \u662f\u56e0\u4e3a SomeClass \u4e5f\u7ee7\u627f\u4e86 str \u7c7b __eq__ \u65b9\u6cd5.\n\n\n\u7531\u4e8e\u4e24\u8005\u7684\u54c8\u5e0c\u503c\u76f8\u540c\u4e14\u76f8\u7b49, \u6240\u4ee5\u5b83\u4eec\u5728\u5b57\u5178\u4e2d\u8868\u793a\u76f8\u540c\u7684\u952e.\n\n\n\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u671f\u671b\u7684\u529f\u80fd, \u6211\u4eec\u53ef\u4ee5\u91cd\u5b9a\u4e49 SomeClass \u7684 __eq__ \u65b9\u6cd5.\nclass SomeClass(str):\n  def __eq__(self, other):\n      return (\n          type(self) is SomeClass\n          and type(other) is SomeClass\n          and super().__eq__(other)\n      )\n\n  # \u5f53\u6211\u4eec\u81ea\u5b9a\u4e49 __eq__ \u65b9\u6cd5\u65f6, Python \u4e0d\u4f1a\u518d\u81ea\u52a8\u7ee7\u627f __hash__ \u65b9\u6cd5\n  # \u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5b9a\u4e49\u5b83\n  __hash__ = str.__hash__\n\nsome_dict = {'s':42}\nOutput:\n>>> s = SomeClass('s')\n>>> some_dict[s] = 40\n>>> some_dict\n{'s': 40, 's': 42}\n>>> keys = list(some_dict.keys())\n>>> type(keys[0]), type(keys[1])\n(__main__.SomeClass, str)\n\n\n\n> Let's see if you can guess this?\/\u770b\u770b\u4f60\u80fd\u5426\u731c\u5230\u8fd9\u4e00\u70b9?\na, b = a[b] = {}, 5\nOutput:\n>>> a\n{5: ({...}, 5)}\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u6839\u636e Python \u8bed\u8a00\u53c2\u8003, \u8d4b\u503c\u8bed\u53e5\u7684\u5f62\u5f0f\u5982\u4e0b\n(target_list \"=\")+ (expression_list | yield_expression)\n\n\n\u8d4b\u503c\u8bed\u53e5\u8ba1\u7b97\u8868\u8fbe\u5f0f\u5217\u8868(expression list)(\u7262\u8bb0 \u8fd9\u53ef\u4ee5\u662f\u5355\u4e2a\u8868\u8fbe\u5f0f\u6216\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5217\u8868, \u540e\u8005\u8fd4\u56de\u5143\u7ec4)\u5e76\u5c06\u5355\u4e2a\u7ed3\u679c\u5bf9\u8c61\u4ece\u5de6\u5230\u53f3\u5206\u914d\u7ed9\u76ee\u6807\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u9879.\n\n\n\n(target_list \"=\")+ \u4e2d\u7684 + \u610f\u5473\u7740\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u76ee\u6807\u5217\u8868. \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d, \u76ee\u6807\u5217\u8868\u662f a, b \u548c a[b] (\u6ce8\u610f\u8868\u8fbe\u5f0f\u5217\u8868\u53ea\u80fd\u6709\u4e00\u4e2a, \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f {}, 5).\n\n\n\u8868\u8fbe\u5f0f\u5217\u8868\u8ba1\u7b97\u7ed3\u675f\u540e, \u5c06\u5176\u503c\u81ea\u52a8\u89e3\u5305\u540e\u4ece\u5de6\u5230\u53f3\u5206\u914d\u7ed9\u76ee\u6807\u5217\u8868(target list). \u56e0\u6b64, \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d, \u9996\u5148\u5c06 {}, 5 \u5143\u7ec4\u5e76\u8d4b\u503c\u7ed9 a, b, \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230 a = {} \u4e14 b = 5.\n\n\na \u88ab\u8d4b\u503c\u7684 {} \u662f\u53ef\u53d8\u5bf9\u8c61.\n\n\n\u7b2c\u4e8c\u4e2a\u76ee\u6807\u5217\u8868\u662f a[b] (\u4f60\u53ef\u80fd\u89c9\u5f97\u8fd9\u91cc\u4f1a\u62a5\u9519, \u56e0\u4e3a\u5728\u4e4b\u524d\u7684\u8bed\u53e5\u4e2d a \u548c b \u90fd\u8fd8\u6ca1\u6709\u88ab\u5b9a\u4e49. \u4f46\u662f\u522b\u5fd8\u4e86, \u6211\u4eec\u521a\u521a\u5c06 a \u8d4b\u503c {} \u4e14\u5c06 b \u8d4b\u503c\u4e3a 5).\n\n\n\u73b0\u5728, \u6211\u4eec\u5c06\u901a\u8fc7\u5c06\u5b57\u5178\u4e2d\u952e 5 \u7684\u503c\u8bbe\u7f6e\u4e3a\u5143\u7ec4 ({}, 5) \u6765\u521b\u5efa\u5faa\u73af\u5f15\u7528 (\u8f93\u51fa\u4e2d\u7684 {...} \u6307\u4e0e a \u5f15\u7528\u4e86\u76f8\u540c\u7684\u5bf9\u8c61). \u4e0b\u9762\u662f\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5faa\u73af\u5f15\u7528\u7684\u4f8b\u5b50\n>>> some_list = some_list[0] = [0]\n>>> some_list\n[[...]]\n>>> some_list[0]\n[[...]]\n>>> some_list is some_list[0]\nTrue\n>>> some_list[0][0][0][0][0][0] == some_list\nTrue\n\u6211\u4eec\u7684\u4f8b\u5b50\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5 (a[b][0] \u4e0e a \u662f\u76f8\u540c\u7684\u5bf9\u8c61)\n\n\n\u603b\u7ed3\u4e00\u4e0b, \u4f60\u4e5f\u53ef\u4ee5\u628a\u4f8b\u5b50\u62c6\u6210\na, b = {}, 5\na[b] = a, b\n\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 a[b][0] \u4e0e a \u662f\u76f8\u540c\u7684\u5bf9\u8c61\u6765\u8bc1\u660e\u662f\u5faa\u73af\u5f15\u7528\n>>> a[b][0] is a\nTrue\n\n\n\n\nSection: Appearances are deceptive!\/\u5916\u8868\u662f\u9760\u4e0d\u4f4f\u7684!\n> Skipping lines?\/\u8df3\u8fc7\u4e00\u884c?\nOutput:\n>>> value = 11\n>>> valu\u0435 = 32\n>>> value\n11\n\u4ec0\u4e48\u9b3c?\n\u6ce8\u610f: \u5982\u679c\u4f60\u60f3\u8981\u91cd\u73b0\u7684\u8bdd\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u590d\u5236\u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u5230\u4f60\u7684\u6587\u4ef6\u6216\u547d\u4ee4\u884c\u91cc.\n\ud83d\udca1 \u8bf4\u660e:\n\u4e00\u4e9b\u975e\u897f\u65b9\u5b57\u7b26\u867d\u7136\u770b\u8d77\u6765\u548c\u82f1\u8bed\u5b57\u6bcd\u76f8\u540c, \u4f46\u4f1a\u88ab\u89e3\u91ca\u5668\u8bc6\u522b\u4e3a\u4e0d\u540c\u7684\u5b57\u6bcd.\n>>> ord('\u0435') # \u897f\u91cc\u5c14\u8bed\u7684 'e' (Ye)\n1077\n>>> ord('e') # \u62c9\u4e01\u8bed\u7684 'e', \u7528\u4e8e\u82f1\u6587\u5e76\u4f7f\u7528\u6807\u51c6\u952e\u76d8\u8f93\u5165\n101\n>>> '\u0435' == 'e'\nFalse\n\n>>> value = 42 # \u62c9\u4e01\u8bed e\n>>> valu\u0435 = 23 # \u897f\u91cc\u5c14\u8bed 'e', Python 2.x \u7684\u89e3\u91ca\u5668\u5728\u8fd9\u4f1a\u629b\u51fa `SyntaxError` \u5f02\u5e38\n>>> value\n42\n\u5185\u7f6e\u7684 ord() \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u7684 Unicode \u4ee3\u7801\u70b9, \u8fd9\u91cc\u897f\u91cc\u5c14\u8bed 'e' \u548c\u62c9\u4e01\u8bed 'e' \u7684\u4ee3\u7801\u70b9\u4e0d\u540c\u8bc1\u5b9e\u4e86\u4e0a\u8ff0\u4f8b\u5b50.\n\n> Teleportation\/\u7a7a\u95f4\u79fb\u52a8 *\nimport numpy as np\n\ndef energy_send(x):\n    # \u521d\u59cb\u5316\u4e00\u4e2a numpy \u6570\u7ec4\n    np.array([float(x)])\n\ndef energy_receive():\n    # \u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 numpy \u6570\u7ec4\n    return np.empty((), dtype=np.float).tolist()\nOutput:\n>>> energy_send(123.456)\n>>> energy_receive()\n123.456\n\u8c01\u6765\u7ed9\u6211\u53d1\u4e2a\u8bfa\u8d1d\u5c14\u5956?\n\ud83d\udca1 \u8bf4\u660e:\n\n\u6ce8\u610f\u5728 energy_send \u51fd\u6570\u4e2d\u521b\u5efa\u7684 numpy \u6570\u7ec4\u5e76\u6ca1\u6709\u8fd4\u56de, \u56e0\u6b64\u5185\u5b58\u7a7a\u95f4\u88ab\u91ca\u653e\u5e76\u53ef\u4ee5\u88ab\u91cd\u65b0\u5206\u914d.\nnumpy.empty() \u76f4\u63a5\u8fd4\u56de\u4e0b\u4e00\u6bb5\u7a7a\u95f2\u5185\u5b58\uff0c\u800c\u4e0d\u91cd\u65b0\u521d\u59cb\u5316. \u800c\u8fd9\u4e2a\u5185\u5b58\u70b9\u6070\u597d\u5c31\u662f\u521a\u521a\u91ca\u653e\u7684\u90a3\u4e2a(\u901a\u5e38\u60c5\u51b5\u4e0b, \u5e76\u4e0d\u7edd\u5bf9).\n\n\n> Well, something is fishy...\/\u55ef\uff0c\u6709\u4e9b\u53ef\u7591...\ndef square(x):\n    \"\"\"\n    \u4e00\u4e2a\u901a\u8fc7\u52a0\u6cd5\u8ba1\u7b97\u5e73\u65b9\u7684\u7b80\u5355\u51fd\u6570.\n    \"\"\"\n    sum_so_far = 0\n    for counter in range(x):\n        sum_so_far = sum_so_far + x\n  return sum_so_far\nOutput (Python 2.x):\n>>> square(10)\n10\n\u96be\u9053\u4e0d\u5e94\u8be5\u662f100\u5417?\n\u6ce8\u610f: \u5982\u679c\u4f60\u65e0\u6cd5\u91cd\u73b0, \u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c\u8fd9\u4e2a\u6587\u4ef6mixed_tabs_and_spaces.py.\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u4e0d\u8981\u6df7\u7528\u5236\u8868\u7b26(tab)\u548c\u7a7a\u683c(space)! \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d, return \u7684\u524d\u9762\u662f\"1\u4e2a\u5236\u8868\u7b26\", \u800c\u5176\u4ed6\u90e8\u5206\u7684\u4ee3\u7801\u524d\u9762\u662f \"4\u4e2a\u7a7a\u683c\".\n\n\nPython\u662f\u8fd9\u4e48\u5904\u7406\u5236\u8868\u7b26\u7684:\n\n\u9996\u5148, \u5236\u8868\u7b26\u4f1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u88ab\u66ff\u6362\u62108\u4e2a\u7a7a\u683c, \u76f4\u5230\u88ab\u66ff\u6362\u540e\u7684\u5b57\u7b26\u603b\u6570\u662f\u516b\u7684\u500d\u6570 <...>\n\n\n\n\u56e0\u6b64, square \u51fd\u6570\u6700\u540e\u4e00\u884c\u7684\u5236\u8868\u7b26\u4f1a\u88ab\u66ff\u6362\u62108\u4e2a\u7a7a\u683c, \u5bfc\u81f4return\u8bed\u53e5\u8fdb\u5165\u5faa\u73af\u8bed\u53e5\u91cc\u9762.\n\n\nPython 3 \u5f88\u53cb\u597d, \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u81ea\u52a8\u629b\u51fa\u9519\u8bef.\nOutput (Python 3.x):\nTabError: inconsistent use of tabs and spaces in indentation\n\n\n\n\nSection: Watch out for the landmines!\/\u5c0f\u5fc3\u5730\u96f7!\n> Modifying a dictionary while iterating over it\/\u8fed\u4ee3\u5b57\u5178\u65f6\u7684\u4fee\u6539\nx = {0: None}\n\nfor i in x:\n    del x[i]\n    x[i+1] = None\n    print(i)\nOutput (Python 2.7- Python 3.5):\n0\n1\n2\n3\n4\n5\n6\n7\n\n\u662f\u7684, \u5b83\u8fd0\u884c\u4e86\u516b\u6b21\u7136\u540e\u624d\u505c\u4e0b\u6765.\n\ud83d\udca1 \u8bf4\u660e:\n\nPython\u4e0d\u652f\u6301\u5bf9\u5b57\u5178\u8fdb\u884c\u8fed\u4ee3\u7684\u540c\u65f6\u4fee\u6539\u5b83.\n\u5b83\u4e4b\u6240\u4ee5\u8fd0\u884c8\u6b21, \u662f\u56e0\u4e3a\u5b57\u5178\u4f1a\u81ea\u52a8\u6269\u5bb9\u4ee5\u5bb9\u7eb3\u66f4\u591a\u952e\u503c(\u6211\u4eec\u67098\u6b21\u5220\u9664\u8bb0\u5f55, \u56e0\u6b64\u9700\u8981\u6269\u5bb9). \u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b9e\u73b0\u7ec6\u8282. (\u8bd1: \u5e94\u8be5\u662f\u56e0\u4e3a\u5b57\u5178\u7684\u521d\u59cb\u6700\u5c0f\u503c\u662f8, \u6269\u5bb9\u4f1a\u5bfc\u81f4\u6563\u5217\u8868\u5730\u5740\u53d1\u751f\u53d8\u5316\u800c\u4e2d\u65ad\u5faa\u73af.)\n\u5728\u4e0d\u540c\u7684Python\u5b9e\u73b0\u4e2d\u5220\u9664\u952e\u7684\u5904\u7406\u65b9\u5f0f\u4ee5\u53ca\u8c03\u6574\u5927\u5c0f\u7684\u65f6\u95f4\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c.(\u8bd1: \u5c31\u662f\u8bf4\u4ec0\u4e48\u65f6\u5019\u6269\u5bb9\u5728\u4e0d\u540c\u7248\u672c\u4e2d\u53ef\u80fd\u662f\u4e0d\u540c\u7684, \u57283.6\u53ca3.7\u7684\u7248\u672c\u4e2d\u52305\u5c31\u4f1a\u81ea\u52a8\u6269\u5bb9\u4e86. \u4ee5\u540e\u4e5f\u6709\u53ef\u80fd\u518d\u6b21\u53d1\u751f\u53d8\u5316. \u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u6563\u5217\u51b2\u7a81. \u987a\u5e26\u4e00\u63d0, \u540e\u9762\u4e24\u6b21\u6269\u5bb9\u4f1a\u6269\u5c55\u4e3a32\u548c256. \u53738->32->256.)\n\u66f4\u591a\u7684\u4fe1\u606f, \u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2aStackOverflow\u7684\u56de\u7b54, \u5b83\u8be6\u7ec6\u7684\u89e3\u91ca\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4f8b\u5b50.\n\n\n> Stubborn del operator\/\u575a\u5f3a\u7684 del *\nclass SomeClass:\n    def __del__(self):\n        print(\"Deleted!\")\nOutput:\n1.\n>>> x = SomeClass()\n>>> y = x\n>>> del x # \u8fd9\u91cc\u5e94\u8be5\u4f1a\u8f93\u51fa \"Deleted!\"\n>>> del y\nDeleted!\n\u5537, \u7ec8\u4e8e\u5220\u9664\u4e86. \u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e86\u5728\u6211\u4eec\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u5220\u9664 x \u65f6\u662f\u4ec0\u4e48\u8ba9 __del__ \u514d\u4e8e\u88ab\u8c03\u7528\u7684. \u90a3\u8ba9\u6211\u4eec\u7ed9\u8fd9\u4e2a\u4f8b\u5b50\u589e\u52a0\u70b9\u96be\u5ea6.\n2.\n>>> x = SomeClass()\n>>> y = x\n>>> del x\n>>> y # \u68c0\u67e5\u4e00\u4e0by\u662f\u5426\u5b58\u5728\n<__main__.SomeClass instance at 0x7f98a1a67fc8>\n>>> del y # \u50cf\u4e4b\u524d\u4e00\u6837, \u8fd9\u91cc\u5e94\u8be5\u4f1a\u8f93\u51fa \"Deleted!\"\n>>> globals() # \u597d\u5427, \u5e76\u6ca1\u6709. \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6240\u6709\u7684\u5168\u5c40\u53d8\u91cf\nDeleted!\n{'__builtins__': <module '__builtin__' (built-in)>, 'SomeClass': <class __main__.SomeClass at 0x7f98a1a5f668>, '__package__': None, '__name__': '__main__', '__doc__': None}\n\u597d\u4e86\uff0c\u73b0\u5728\u5b83\u88ab\u5220\u9664\u4e86 \ud83d\ude15\n\ud83d\udca1 \u8bf4\u660e:\n\ndel x \u5e76\u4e0d\u4f1a\u7acb\u523b\u8c03\u7528 x.__del__().\n\u6bcf\u5f53\u9047\u5230 del x, Python \u4f1a\u5c06 x \u7684\u5f15\u7528\u6570\u51cf1, \u5f53 x \u7684\u5f15\u7528\u6570\u51cf\u52300\u65f6\u5c31\u4f1a\u8c03\u7528 x.__del__().\n\u5728\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u4e2d, y.__del__() \u4e4b\u6240\u4ee5\u672a\u88ab\u8c03\u7528, \u662f\u56e0\u4e3a\u524d\u4e00\u6761\u8bed\u53e5 (>>> y) \u5bf9\u540c\u4e00\u5bf9\u8c61\u521b\u5efa\u4e86\u53e6\u4e00\u4e2a\u5f15\u7528, \u4ece\u800c\u9632\u6b62\u5728\u6267\u884c del y \u540e\u5bf9\u8c61\u7684\u5f15\u7528\u6570\u53d8\u4e3a0.\n\u8c03\u7528 globals \u5bfc\u81f4\u5f15\u7528\u88ab\u9500\u6bc1, \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u770b\u5230 \"Deleted!\" \u7ec8\u4e8e\u88ab\u8f93\u51fa\u4e86.\n(\u8bd1: \u8fd9\u5176\u5b9e\u662f Python \u4ea4\u4e92\u89e3\u91ca\u5668\u7684\u7279\u6027, \u5b83\u4f1a\u81ea\u52a8\u8ba9 _ \u4fdd\u5b58\u4e0a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u8f93\u51fa\u7684\u503c, \u8be6\u7ec6\u53ef\u4ee5\u770b\u8fd9\u91cc.)\n\n\n> Deleting a list item while iterating\/\u8fed\u4ee3\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\nlist_1 = [1, 2, 3, 4]\nlist_2 = [1, 2, 3, 4]\nlist_3 = [1, 2, 3, 4]\nlist_4 = [1, 2, 3, 4]\n\nfor idx, item in enumerate(list_1):\n    del item\n\nfor idx, item in enumerate(list_2):\n    list_2.remove(item)\n\nfor idx, item in enumerate(list_3[:]):\n    list_3.remove(item)\n\nfor idx, item in enumerate(list_4):\n    list_4.pop(idx)\nOutput:\n>>> list_1\n[1, 2, 3, 4]\n>>> list_2\n[2, 4]\n>>> list_3\n[]\n>>> list_4\n[2, 4]\n\u4f60\u80fd\u731c\u5230\u4e3a\u4ec0\u4e48\u8f93\u51fa\u662f [2, 4] \u5417?\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5728\u8fed\u4ee3\u65f6\u4fee\u6539\u5bf9\u8c61\u662f\u4e00\u4e2a\u5f88\u611a\u8822\u7684\u4e3b\u610f. \u6b63\u786e\u7684\u505a\u6cd5\u662f\u8fed\u4ee3\u5bf9\u8c61\u7684\u526f\u672c, list_3[:] \u5c31\u662f\u8fd9\u4e48\u505a\u7684.\n>>> some_list = [1, 2, 3, 4]\n>>> id(some_list)\n139798789457608\n>>> id(some_list[:]) # \u6ce8\u610fpython\u4e3a\u5207\u7247\u5217\u8868\u521b\u5efa\u4e86\u65b0\u5bf9\u8c61.\n139798779601192\n\n\ndel, remove \u548c pop \u7684\u4e0d\u540c:\n\ndel var_name \u53ea\u662f\u4ece\u672c\u5730\u6216\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u5220\u9664\u4e86 var_name (\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 list_1 \u6ca1\u6709\u53d7\u5230\u5f71\u54cd).\nremove \u4f1a\u5220\u9664\u7b2c\u4e00\u4e2a\u5339\u914d\u5230\u7684\u6307\u5b9a\u503c, \u800c\u4e0d\u662f\u7279\u5b9a\u7684\u7d22\u5f15, \u5982\u679c\u627e\u4e0d\u5230\u503c\u5219\u629b\u51fa ValueError \u5f02\u5e38.\npop \u5219\u4f1a\u5220\u9664\u6307\u5b9a\u7d22\u5f15\u5904\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u5b83, \u5982\u679c\u6307\u5b9a\u4e86\u65e0\u6548\u7684\u7d22\u5f15\u5219\u629b\u51fa IndexError \u5f02\u5e38.\n\n\u4e3a\u4ec0\u4e48\u8f93\u51fa\u662f [2, 4]?\n\n\u5217\u8868\u8fed\u4ee3\u662f\u6309\u7d22\u5f15\u8fdb\u884c\u7684, \u6240\u4ee5\u5f53\u6211\u4eec\u4ece list_2 \u6216 list_4 \u4e2d\u5220\u9664 1 \u65f6, \u5217\u8868\u7684\u5185\u5bb9\u5c31\u53d8\u6210\u4e86 [2, 3, 4]. \u5269\u4f59\u5143\u7d20\u4f1a\u4f9d\u6b21\u4f4d\u79fb, \u4e5f\u5c31\u662f\u8bf4, 2 \u7684\u7d22\u5f15\u4f1a\u53d8\u4e3a 0, 3 \u4f1a\u53d8\u4e3a 1. \u7531\u4e8e\u4e0b\u4e00\u6b21\u8fed\u4ee3\u5c06\u83b7\u53d6\u7d22\u5f15\u4e3a 1 \u7684\u5143\u7d20 (\u5373 3), \u56e0\u6b64 2 \u5c06\u88ab\u5f7b\u5e95\u7684\u8df3\u8fc7. \u7c7b\u4f3c\u7684\u60c5\u51b5\u4f1a\u4ea4\u66ff\u53d1\u751f\u5728\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0a.\n\n\n\u53c2\u8003\u8fd9\u4e2aStackOverflow\u7684\u56de\u7b54\u6765\u89e3\u91ca\u8fd9\u4e2a\u4f8b\u5b50\n\u5173\u4e8ePython\u4e2d\u5b57\u5178\u7684\u7c7b\u4f3c\u4f8b\u5b50, \u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2aStackoverflow\u7684\u56de\u7b54.\n\n\n> Loop variables leaking out!\/\u5faa\u73af\u53d8\u91cf\u6cc4\u6f0f!\n1.\nfor x in range(7):\n    if x == 6:\n        print(x, ': for x inside loop')\nprint(x, ': x in global')\nOutput:\n6 : for x inside loop\n6 : x in global\n\u4f46\u662f x \u4ece\u672a\u5728\u5faa\u73af\u5916\u88ab\u5b9a\u4e49...\n2.\n# \u8fd9\u6b21\u6211\u4eec\u5148\u521d\u59cb\u5316x\nx = -1\nfor x in range(7):\n    if x == 6:\n        print(x, ': for x inside loop')\nprint(x, ': x in global')\nOutput:\n6 : for x inside loop\n6 : x in global\n3.\nx = 1\nprint([x for x in range(5)])\nprint(x, ': x in global')\n\nOutput (on Python 2.x):\n[0, 1, 2, 3, 4]\n(4, ': x in global')\n\nOutput (on Python 3.x):\n[0, 1, 2, 3, 4]\n1 : x in global\n\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5728 Python \u4e2d, for \u5faa\u73af\u4f7f\u7528\u6240\u5728\u4f5c\u7528\u57df\u5e76\u5728\u7ed3\u675f\u540e\u4fdd\u7559\u5b9a\u4e49\u7684\u5faa\u73af\u53d8\u91cf. \u5982\u679c\u6211\u4eec\u66fe\u5728\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u8fc7\u5faa\u73af\u53d8\u91cf. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u5b83\u4f1a\u91cd\u65b0\u7ed1\u5b9a\u73b0\u6709\u53d8\u91cf.\n\n\nPython 2.x \u548c Python 3.x \u89e3\u91ca\u5668\u5728\u5217\u8868\u63a8\u5bfc\u5f0f\u793a\u4f8b\u4e2d\u7684\u8f93\u51fa\u5dee\u5f02, \u5728\u6587\u6863 What\u2019s New In Python 3.0 \u4e2d\u53ef\u4ee5\u627e\u5230\u76f8\u5173\u7684\u89e3\u91ca:\n\n\"\u5217\u8868\u63a8\u5bfc\u4e0d\u518d\u652f\u6301\u53e5\u6cd5\u5f62\u5f0f [... for var in item1, item2, ...]. \u53d6\u800c\u4ee3\u4e4b\u7684\u662f [... for var in (item1, item2, ...)]. \u53e6\u5916, \u6ce8\u610f\u5217\u8868\u63a8\u5bfc\u5177\u6709\u4e0d\u540c\u7684\u8bed\u4e49: \u5b83\u4eec\u66f4\u63a5\u8fd1\u4e8e list() \u6784\u9020\u51fd\u6570\u4e2d\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u7cd6(\u8bd1: \u8fd9\u4e00\u53e5\u6211\u4e5f\u4e0d\u662f\u5f88\u660e\u767d), \u7279\u522b\u662f\u5faa\u73af\u63a7\u5236\u53d8\u91cf\u4e0d\u518d\u6cc4\u6f0f\u5230\u5468\u56f4\u7684\u4f5c\u7528\u57df\u4e2d.\"\n\n\n\n\n> Beware of default mutable arguments!\/\u5f53\u5fc3\u9ed8\u8ba4\u7684\u53ef\u53d8\u53c2\u6570!\ndef some_func(default_arg=[]):\n    default_arg.append(\"some_string\")\n    return default_arg\nOutput:\n>>> some_func()\n['some_string']\n>>> some_func()\n['some_string', 'some_string']\n>>> some_func([])\n['some_string']\n>>> some_func()\n['some_string', 'some_string', 'some_string']\n\ud83d\udca1 \u8bf4\u660e:\n\n\nPython\u4e2d\u51fd\u6570\u7684\u9ed8\u8ba4\u53ef\u53d8\u53c2\u6570\u5e76\u4e0d\u662f\u6bcf\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u90fd\u4f1a\u88ab\u521d\u59cb\u5316. \u76f8\u53cd, \u5b83\u4eec\u4f1a\u4f7f\u7528\u6700\u8fd1\u5206\u914d\u7684\u503c\u4f5c\u4e3a\u9ed8\u8ba4\u503c. \u5f53\u6211\u4eec\u660e\u786e\u7684\u5c06 [] \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 some_func \u7684\u65f6\u5019, \u5c31\u4e0d\u4f1a\u4f7f\u7528 default_arg \u7684\u9ed8\u8ba4\u503c, \u6240\u4ee5\u51fd\u6570\u4f1a\u8fd4\u56de\u6211\u4eec\u6240\u671f\u671b\u7684\u7ed3\u679c.\ndef some_func(default_arg=[]):\n    default_arg.append(\"some_string\")\n    return default_arg\nOutput:\n>>> some_func.__defaults__ # \u8fd9\u91cc\u4f1a\u663e\u793a\u51fd\u6570\u7684\u9ed8\u8ba4\u53c2\u6570\u7684\u503c\n([],)\n>>> some_func()\n>>> some_func.__defaults__\n(['some_string'],)\n>>> some_func()\n>>> some_func.__defaults__\n(['some_string', 'some_string'],)\n>>> some_func([])\n>>> some_func.__defaults__\n(['some_string', 'some_string'],)\n\n\n\u907f\u514d\u53ef\u53d8\u53c2\u6570\u5bfc\u81f4\u7684\u9519\u8bef\u7684\u5e38\u89c1\u505a\u6cd5\u662f\u5c06 None \u6307\u5b9a\u4e3a\u53c2\u6570\u7684\u9ed8\u8ba4\u503c, \u7136\u540e\u68c0\u67e5\u662f\u5426\u6709\u503c\u4f20\u7ed9\u5bf9\u5e94\u7684\u53c2\u6570. \u4f8b:\ndef some_func(default_arg=None):\n    if not default_arg:\n        default_arg = []\n    default_arg.append(\"some_string\")\n    return default_arg\n\n\n\n> Catching the Exceptions\/\u6355\u83b7\u5f02\u5e38\nsome_list = [1, 2, 3]\ntry:\n    # \u8fd9\u91cc\u4f1a\u629b\u51fa\u5f02\u5e38 ``IndexError``\n    print(some_list[4])\nexcept IndexError, ValueError:\n    print(\"Caught!\")\n\ntry:\n    # \u8fd9\u91cc\u4f1a\u629b\u51fa\u5f02\u5e38 ``ValueError``\n    some_list.remove(4)\nexcept IndexError, ValueError:\n    print(\"Caught again!\")\nOutput (Python 2.x):\nCaught!\n\nValueError: list.remove(x): x not in list\nOutput (Python 3.x):\n  File \"<input>\", line 3\n    except IndexError, ValueError:\n                     ^\nSyntaxError: invalid syntax\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5982\u679c\u4f60\u60f3\u8981\u540c\u65f6\u6355\u83b7\u591a\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u65f6, \u4f60\u9700\u8981\u5c06\u5b83\u4eec\u7528\u62ec\u53f7\u5305\u6210\u4e00\u4e2a\u5143\u7ec4\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012. \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u540d\u79f0, \u5982\u679c\u4f60\u63d0\u4f9b, \u5b83\u5c06\u4e0e\u88ab\u6355\u83b7\u7684\u5f02\u5e38\u5b9e\u4f8b\u7ed1\u5b9a. \u4f8b,\nsome_list = [1, 2, 3]\ntry:\n   # \u8fd9\u91cc\u4f1a\u629b\u51fa\u5f02\u5e38 ``ValueError``\n   some_list.remove(4)\nexcept (IndexError, ValueError), e:\n   print(\"Caught again!\")\n   print(e)\nOutput (Python 2.x):\nCaught again!\nlist.remove(x): x not in list\n\nOutput (Python 3.x):\n  File \"<input>\", line 4\n    except (IndexError, ValueError), e:\n                                     ^\nIndentationError: unindent does not match any outer indentation level\n\n\n\u5728 Python 3 \u4e2d, \u7528\u9017\u53f7\u533a\u5206\u5f02\u5e38\u4e0e\u53ef\u9009\u540d\u79f0\u662f\u65e0\u6548\u7684; \u6b63\u786e\u7684\u505a\u6cd5\u662f\u4f7f\u7528 as \u5173\u952e\u5b57. \u4f8b,\nsome_list = [1, 2, 3]\ntry:\n    some_list.remove(4)\n\nexcept (IndexError, ValueError) as e:\n    print(\"Caught again!\")\n    print(e)\nOutput:\nCaught again!\nlist.remove(x): x not in list\n\n\n\n\n> Same operands, different story!\/\u540c\u4eba\u4e0d\u540c\u547d!\n1.\na = [1, 2, 3, 4]\nb = a\na = a + [5, 6, 7, 8]\nOutput:\n>>> a\n[1, 2, 3, 4, 5, 6, 7, 8]\n>>> b\n[1, 2, 3, 4]\n2.\na = [1, 2, 3, 4]\nb = a\na += [5, 6, 7, 8]\nOutput:\n>>> a\n[1, 2, 3, 4, 5, 6, 7, 8]\n>>> b\n[1, 2, 3, 4, 5, 6, 7, 8]\n\ud83d\udca1 \u8bf4\u660e:\n\n\na += b \u5e76\u4e0d\u603b\u662f\u4e0e a = a + b \u8868\u73b0\u76f8\u540c. \u7c7b\u5b9e\u73b0 op= \u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f \u4e5f\u8bb8 \u662f\u4e0d\u540c\u7684, \u5217\u8868\u5c31\u662f\u8fd9\u6837\u505a\u7684.\n\n\n\u8868\u8fbe\u5f0f a = a + [5,6,7,8] \u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u5217\u8868, \u5e76\u8ba9 a \u5f15\u7528\u8fd9\u4e2a\u65b0\u5217\u8868, \u540c\u65f6\u4fdd\u6301 b \u4e0d\u53d8.\n\n\n\u8868\u8fbe\u5f0f a += [5,6,7,8] \u5b9e\u9645\u4e0a\u662f\u4f7f\u7528\u7684\u662f \"extend\" \u51fd\u6570, \u6240\u4ee5 a \u548c b \u4ecd\u7136\u6307\u5411\u5df2\u88ab\u4fee\u6539\u7684\u540c\u4e00\u5217\u8868.\n\n\n\n> The out of scope variable\/\u5916\u90e8\u4f5c\u7528\u57df\u53d8\u91cf\na = 1\ndef some_func():\n    return a\n\ndef another_func():\n    a += 1\n    return a\nOutput:\n>>> some_func()\n1\n>>> another_func()\nUnboundLocalError: local variable 'a' referenced before assignment\n\ud83d\udca1 \u8bf4\u660e:\n\n\n\u5f53\u4f60\u5728\u4f5c\u7528\u57df\u4e2d\u5bf9\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u65f6, \u53d8\u91cf\u4f1a\u53d8\u6210\u8be5\u4f5c\u7528\u57df\u5185\u7684\u5c40\u90e8\u53d8\u91cf. \u56e0\u6b64 a \u4f1a\u53d8\u6210 another_func \u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf, \u4f46\u5b83\u5728\u51fd\u6570\u4f5c\u7528\u57df\u4e2d\u5e76\u6ca1\u6709\u88ab\u521d\u59cb\u5316, \u6240\u4ee5\u4f1a\u5f15\u53d1\u9519\u8bef.\n\n\n\u53ef\u4ee5\u9605\u8bfb\u8fd9\u4e2a\u7b80\u77ed\u5374\u5f88\u68d2\u7684\u6307\u5357, \u4e86\u89e3\u66f4\u591a\u5173\u4e8e Python \u4e2d\u547d\u540d\u7a7a\u95f4\u548c\u4f5c\u7528\u57df\u7684\u5de5\u4f5c\u539f\u7406.\n\n\n\u60f3\u8981\u5728 another_func \u4e2d\u4fee\u6539\u5916\u90e8\u4f5c\u7528\u57df\u53d8\u91cf a \u7684\u8bdd, \u53ef\u4ee5\u4f7f\u7528 global \u5173\u952e\u5b57.\ndef another_func()\n    global a\n    a += 1\n    return a\nOutput:\n>>> another_func()\n2\n\n\n\n> Be careful with chained operations\/\u5c0f\u5fc3\u94fe\u5f0f\u64cd\u4f5c\n>>> (False == False) in [False] # \u53ef\u4ee5\u7406\u89e3\nFalse\n>>> False == (False in [False]) # \u53ef\u4ee5\u7406\u89e3\nFalse\n>>> False == False in [False] # \u4e3a\u6bdb?\nTrue\n\n>>> True is False == False\nFalse\n>>> False is False is False\nTrue\n\n>>> 1 > 0 < 1\nTrue\n>>> (1 > 0) < 1\nFalse\n>>> 1 > (0 < 1)\nFalse\n\ud83d\udca1 \u8bf4\u660e:\n\u6839\u636e https:\/\/docs.python.org\/2\/reference\/expressions.html#not-in\n\n\u5f62\u5f0f\u4e0a, \u5982\u679c a, b, c, ..., y, z \u662f\u8868\u8fbe\u5f0f, \u800c op1, op2, ..., opN \u662f\u6bd4\u8f83\u8fd0\u7b97\u7b26, \u90a3\u4e48\u9664\u4e86\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u6700\u591a\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916 a op1 b op2 c ... y opN z \u5c31\u7b49\u4e8e a op1 b and b op2 c and ... y opN z.\n\n\u867d\u7136\u4e0a\u9762\u7684\u4f8b\u5b50\u4f3c\u4e4e\u5f88\u611a\u8822, \u4f46\u662f\u50cf a == b == c \u6216 0 <= x <= 100 \u5c31\u5f88\u68d2\u4e86.\n\nFalse is False is False \u76f8\u5f53\u4e8e (False is False) and (False is False)\nTrue is False == False \u76f8\u5f53\u4e8e True is False and False == False, \u7531\u4e8e\u8bed\u53e5\u7684\u7b2c\u4e00\u90e8\u5206 (True is False) \u7b49\u4e8e False, \u56e0\u6b64\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4e3a False.\n1 > 0 < 1 \u76f8\u5f53\u4e8e 1 > 0 and 0 < 1, \u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u4e3a True.\n\u8868\u8fbe\u5f0f (1 > 0) < 1 \u76f8\u5f53\u4e8e True < 1 \u4e14\n>>> int(True)\n1\n>>> True + 1 # \u4e0e\u8fd9\u4e2a\u4f8b\u5b50\u65e0\u5173\uff0c\u53ea\u662f\u597d\u73a9\n2\n\u6240\u4ee5, 1 < 1 \u7b49\u4e8e False\n\n\n> Name resolution ignoring class scope\/\u5ffd\u7565\u7c7b\u4f5c\u7528\u57df\u7684\u540d\u79f0\u89e3\u6790\n1.\nx = 5\nclass SomeClass:\n    x = 17\n    y = (x for i in range(10))\nOutput:\n>>> list(SomeClass.y)[0]\n5\n2.\nx = 5\nclass SomeClass:\n    x = 17\n    y = [x for i in range(10)]\nOutput (Python 2.x):\n>>> SomeClass.y[0]\n17\nOutput (Python 3.x):\n>>> SomeClass.y[0]\n5\n\ud83d\udca1 \u8bf4\u660e:\n\n\u7c7b\u5b9a\u4e49\u4e2d\u5d4c\u5957\u7684\u4f5c\u7528\u57df\u4f1a\u5ffd\u7565\u7c7b\u5185\u7684\u540d\u79f0\u7ed1\u5b9a.\n\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u6709\u5b83\u81ea\u5df1\u7684\u4f5c\u7528\u57df.\n\u4ece Python 3.X \u5f00\u59cb, \u5217\u8868\u63a8\u5bfc\u5f0f\u4e5f\u6709\u81ea\u5df1\u7684\u4f5c\u7528\u57df.\n\n\n> Needle in a Haystack\/\u5927\u6d77\u635e\u9488\n1.\nx, y = (0, 1) if True else None, None\nOutput:\n>>> x, y  # \u671f\u671b\u7684\u7ed3\u679c\u662f (0, 1)\n((0, 1), None)\n\n\u51e0\u4e4e\u6bcf\u4e2a Python \u7a0b\u5e8f\u5458\u90fd\u9047\u5230\u8fc7\u7c7b\u4f3c\u7684\u60c5\u51b5.\n2.\nt = ('one', 'two')\nfor i in t:\n    print(i)\n\nt = ('one')\nfor i in t:\n    print(i)\n\nt = ()\nprint(t)\nOutput:\none\ntwo\no\nn\ne\ntuple()\n\ud83d\udca1 \u8bf4\u660e:\n\n\u5bf9\u4e8e 1, \u6b63\u786e\u7684\u8bed\u53e5\u662f x, y = (0, 1) if True else (None, None).\n\u5bf9\u4e8e 2, \u6b63\u786e\u7684\u8bed\u53e5\u662f t = ('one',) \u6216\u8005 t = 'one', (\u7f3a\u5c11\u9017\u53f7) \u5426\u5219\u89e3\u91ca\u5668\u4f1a\u8ba4\u4e3a t \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32, \u5e76\u9010\u4e2a\u5b57\u7b26\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3.\n() \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0\uff0c\u8868\u793a\u7a7a\u5143\u7ec4.\n\n\n\nSection: The Hidden treasures!\/\u9690\u85cf\u7684\u5b9d\u85cf!\nThis section contains few of the lesser-known interesting things about Python that most beginners like me are unaware of (well, not anymore).\n> Okay Python, Can you make me fly?\/Python, \u53ef\u5426\u5e26\u6211\u98de? *\n\u597d, \u53bb\u5427.\nimport antigravity\nOutput:\n\u5618.. \u8fd9\u662f\u4e2a\u8d85\u7ea7\u79d8\u5bc6.\n\ud83d\udca1 \u8bf4\u660e:\n\nantigravity \u6a21\u5757\u662f Python \u5f00\u53d1\u4eba\u5458\u53d1\u5e03\u7684\u5c11\u6570\u590d\u6d3b\u8282\u5f69\u86cb\u4e4b\u4e00.\nimport antigravity \u4f1a\u6253\u5f00\u4e00\u4e2a Python \u7684\u7ecf\u5178 XKCD \u6f2b\u753b\u9875\u9762.\n\u4e0d\u6b62\u5982\u6b64. \u8fd9\u4e2a\u590d\u6d3b\u8282\u5f69\u86cb\u91cc\u8fd8\u6709\u4e00\u4e2a\u590d\u6d3b\u8282\u5f69\u86cb. \u5982\u679c\u4f60\u770b\u4e00\u4e0b\u4ee3\u7801, \u5c31\u4f1a\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e86 XKCD's geohashing \u7b97\u6cd5.\n\n\n> goto, but why?\/goto, \u4f46\u4e3a\u4ec0\u4e48? *\nfrom goto import goto, label\nfor i in range(9):\n    for j in range(9):\n        for k in range(9):\n            print(\"I'm trapped, please rescue!\")\n            if k == 2:\n                goto .breakout # \u4ece\u591a\u91cd\u5faa\u73af\u4e2d\u8df3\u51fa\nlabel .breakout\nprint(\"Freedom!\")\nOutput (Python 2.3):\nI'm trapped, please rescue!\nI'm trapped, please rescue!\nFreedom!\n\ud83d\udca1 \u8bf4\u660e:\n\n2004\u5e744\u67081\u65e5, Python \u5ba3\u5e03 \u52a0\u5165\u4e00\u4e2a\u53ef\u7528\u7684 goto \u4f5c\u4e3a\u611a\u4eba\u8282\u793c\u7269.\n\u5f53\u524d\u7248\u672c\u7684 Python \u5e76\u6ca1\u6709\u8fd9\u4e2a\u6a21\u5757.\n\u5c31\u7b97\u53ef\u4ee5\u7528, \u4e5f\u8bf7\u4e0d\u8981\u4f7f\u7528\u5b83. \u8fd9\u91cc\u662f\u4e3a\u4ec0\u4e48Python\u4e2d\u6ca1\u6709 goto \u7684\u539f\u56e0.\n\n\n> Brace yourself!\/\u505a\u597d\u601d\u60f3\u51c6\u5907 *\n\u5982\u679c\u4f60\u4e0d\u559c\u6b22\u5728Python\u4e2d\u4f7f\u7528\u7a7a\u683c\u6765\u8868\u793a\u4f5c\u7528\u57df, \u4f60\u53ef\u4ee5\u5bfc\u5165 C \u98ce\u683c\u7684 {},\nfrom __future__ import braces\nOutput:\n  File \"some_file.py\", line 1\n    from __future__ import braces\nSyntaxError: not a chance\n\u60f3\u7528\u5927\u62ec\u53f7? \u6ca1\u95e8! \u89c9\u5f97\u4e0d\u723d, \u8bf7\u53bb\u7528java.\n\ud83d\udca1 \u8bf4\u660e:\n\n\u901a\u5e38 __future__ \u4f1a\u63d0\u4f9b Python \u672a\u6765\u7248\u672c\u7684\u529f\u80fd. \u7136\u800c\uff0c\u8fd9\u91cc\u7684 \u201c\u672a\u6765\u201d \u662f\u4e00\u4e2a\u8bbd\u523a.\n\u8fd9\u662f\u4e00\u4e2a\u8868\u8fbe\u793e\u533a\u5bf9\u6b64\u7c7b\u95ee\u9898\u6001\u5ea6\u7684\u590d\u6d3b\u8282\u5f69\u86cb.\n\n\n> Let's meet Friendly Language Uncle For Life\/\u8ba9\u751f\u6d3b\u66f4\u53cb\u597d *\nOutput (Python 3.x)\n>>> from __future__ import barry_as_FLUFL\n>>> \"Ruby\" != \"Python\" # \u8fd9\u91cc\u6ca1\u4ec0\u4e48\u7591\u95ee\n  File \"some_file.py\", line 1\n    \"Ruby\" != \"Python\"\n              ^\nSyntaxError: invalid syntax\n\n>>> \"Ruby\" <> \"Python\"\nTrue\n\u8fd9\u5c31\u5bf9\u4e86.\n\ud83d\udca1 \u8bf4\u660e:\n\n\u76f8\u5173\u7684 PEP-401 \u53d1\u5e03\u4e8e 2009\u5e744\u67081\u65e5 (\u6240\u4ee5\u4f60\u73b0\u5728\u77e5\u9053\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u4e86\u5427).\n\u5f15\u7528 PEP-401\n\n\u610f\u8bc6\u5230 Python 3.0 \u91cc\u7684 != \u8fd0\u7b97\u7b26\u662f\u4e00\u4e2a\u4f1a\u5f15\u8d77\u624b\u6307\u75bc\u75db\u7684\u6050\u6016\u9519\u8bef, FLUFL \u5c06 <> \u8fd0\u7b97\u7b26\u6062\u590d\u4e3a\u552f\u4e00\u5199\u6cd5.\n\n\nUncle Barry \u5728 PEP \u4e2d\u8fd8\u5206\u4eab\u4e86\u5176\u4ed6\u4e1c\u897f; \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u83b7\u5f97\u4ed6\u4eec.\n(\u8bd1: \u867d\u7136\u6587\u6863\u4e2d\u6ca1\u5199\uff0c\u4f46\u5e94\u8be5\u662f\u53ea\u80fd\u5728\u4ea4\u4e92\u89e3\u91ca\u5668\u4e2d\u4f7f\u7528.)\n\n\n> Even Python understands that love is complicated\/\u8fdePython\u4e5f\u77e5\u9053\u7231\u662f\u96be\u8a00\u7684 *\nimport this\n\u7b49\u7b49, this \u662f\u4ec0\u4e48? this \u662f\u7231 \u2764\ufe0f\nOutput:\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\n\u4f18\u7f8e\u80dc\u4e8e\u4e11\u964b\uff08Python \u4ee5\u7f16\u5199\u4f18\u7f8e\u7684\u4ee3\u7801\u4e3a\u76ee\u6807\uff09\nExplicit is better than implicit.\n\u660e\u4e86\u80dc\u4e8e\u6666\u6da9\uff08\u4f18\u7f8e\u7684\u4ee3\u7801\u5e94\u5f53\u662f\u660e\u4e86\u7684\uff0c\u547d\u540d\u89c4\u8303\uff0c\u98ce\u683c\u76f8\u4f3c\uff09\nSimple is better than complex.\n\u7b80\u6d01\u80dc\u4e8e\u590d\u6742\uff08\u4f18\u7f8e\u7684\u4ee3\u7801\u5e94\u5f53\u662f\u7b80\u6d01\u7684\uff0c\u4e0d\u8981\u6709\u590d\u6742\u7684\u5185\u90e8\u5b9e\u73b0\uff09\nComplex is better than complicated.\n\u590d\u6742\u80dc\u4e8e\u51cc\u4e71\uff08\u5982\u679c\u590d\u6742\u4e0d\u53ef\u907f\u514d\uff0c\u90a3\u4ee3\u7801\u95f4\u4e5f\u4e0d\u80fd\u6709\u96be\u61c2\u7684\u5173\u7cfb\uff0c\u8981\u4fdd\u6301\u63a5\u53e3\u7b80\u6d01\uff09\nFlat is better than nested.\n\u6241\u5e73\u80dc\u4e8e\u5d4c\u5957\uff08\u4f18\u7f8e\u7684\u4ee3\u7801\u5e94\u5f53\u662f\u6241\u5e73\u7684\uff0c\u4e0d\u80fd\u6709\u592a\u591a\u7684\u5d4c\u5957\uff09\nSparse is better than dense.\n\u95f4\u9694\u80dc\u4e8e\u7d27\u51d1\uff08\u4f18\u7f8e\u7684\u4ee3\u7801\u6709\u9002\u5f53\u7684\u95f4\u9694\uff0c\u4e0d\u8981\u5962\u671b\u4e00\u884c\u4ee3\u7801\u89e3\u51b3\u95ee\u9898\uff09\nReadability counts.\n\u53ef\u8bfb\u6027\u5f88\u91cd\u8981\uff08\u4f18\u7f8e\u7684\u4ee3\u7801\u4e00\u5b9a\u662f\u53ef\u8bfb\u7684\uff09\nSpecial cases aren't special enough to break the rules.\n\u6ca1\u6709\u7279\u4f8b\u7279\u6b8a\u5230\u9700\u8981\u8fdd\u80cc\u8fd9\u4e9b\u89c4\u5219\uff08\u8fd9\u4e9b\u89c4\u5219\u81f3\u9ad8\u65e0\u4e0a\uff09\nAlthough practicality beats purity.\n\u5c3d\u7ba1\u6211\u4eec\u66f4\u503e\u5411\u4e8e\u5b9e\u7528\u6027\nErrors should never pass silently.\n\u4e0d\u8981\u5b89\u9759\u7684\u5305\u5bb9\u6240\u6709\u9519\u8bef\nUnless explicitly silenced.\n\u9664\u975e\u4f60\u786e\u5b9a\u9700\u8981\u8fd9\u6837\u505a\uff08\u7cbe\u51c6\u5730\u6355\u83b7\u5f02\u5e38\uff0c\u4e0d\u5199 except:pass \u98ce\u683c\u7684\u4ee3\u7801\uff09\nIn the face of ambiguity, refuse the temptation to guess.\n\u62d2\u7edd\u8bf1\u60d1\u4f60\u53bb\u731c\u6d4b\u7684\u66a7\u6627\u4e8b\u7269\nThere should be one-- and preferably only one --obvious way to do it.\n\u800c\u662f\u5c3d\u91cf\u627e\u4e00\u79cd\uff0c\u6700\u597d\u662f\u552f\u4e00\u4e00\u79cd\u660e\u663e\u7684\u89e3\u51b3\u65b9\u6848\uff08\u5982\u679c\u4e0d\u786e\u5b9a\uff0c\u5c31\u7528\u7a77\u4e3e\u6cd5\uff09\nAlthough that way may not be obvious at first unless you're Dutch.\n\u867d\u7136\u8fd9\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u4f60\u4e0d\u662f Python \u4e4b\u7236\uff08\u8fd9\u91cc\u7684 Dutch \u662f\u6307 Guido \uff09\nNow is better than never.\n\u73b0\u5728\u884c\u52a8\u597d\u8fc7\u6c38\u8fdc\u4e0d\u884c\u52a8\nAlthough never is often better than *right* now.\n\u5c3d\u7ba1\u4e0d\u884c\u52a8\u8981\u597d\u8fc7\u9c81\u83bd\u884c\u52a8\nIf the implementation is hard to explain, it's a bad idea.\n\u5982\u679c\u4f60\u65e0\u6cd5\u5411\u4eba\u63cf\u8ff0\u4f60\u7684\u65b9\u6848\uff0c\u90a3\u80af\u5b9a\u4e0d\u662f\u4e00\u4e2a\u597d\u65b9\u6848\uff1b\nIf the implementation is easy to explain, it may be a good idea.\n\u5982\u679c\u4f60\u80fd\u8f7b\u677e\u5411\u4eba\u63cf\u8ff0\u4f60\u7684\u65b9\u6848\uff0c\u90a3\u4e5f\u8bb8\u4f1a\u662f\u4e00\u4e2a\u597d\u65b9\u6848\uff08\u65b9\u6848\u6d4b\u8bc4\u6807\u51c6\uff09\nNamespaces are one honking great idea -- let's do more of those!\n\u547d\u540d\u7a7a\u95f4\u662f\u4e00\u79cd\u7edd\u5999\u7684\u7406\u5ff5\uff0c\u6211\u4eec\u5e94\u5f53\u591a\u52a0\u5229\u7528\uff08\u5021\u5bfc\u4e0e\u53f7\u53ec\uff09\n\n\u8fd9\u662f Python \u4e4b\u7985!\n>>> love = this\n>>> this is love\nTrue\n>>> love is True\nFalse\n>>> love is False\nFalse\n>>> love is not True or False\nTrue\n>>> love is not True or False; love is love  # \u7231\u662f\u96be\u8a00\u7684\nTrue\n\ud83d\udca1 \u8bf4\u660e:\n\nthis \u6a21\u5757\u662f\u5173\u4e8e Python \u4e4b\u7985\u7684\u590d\u6d3b\u8282\u5f69\u86cb (PEP 20).\n\u5982\u679c\u4f60\u8ba4\u4e3a\u8fd9\u5df2\u7ecf\u591f\u6709\u8da3\u7684\u4e86, \u53ef\u4ee5\u770b\u770b this.py \u7684\u5b9e\u73b0. \u6709\u8da3\u7684\u662f, Python \u4e4b\u7985\u7684\u5b9e\u73b0\u4ee3\u7801\u8fdd\u53cd\u4e86\u4ed6\u81ea\u5df1 (\u8fd9\u53ef\u80fd\u662f\u552f\u4e00\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u7684\u5730\u65b9).\n\n\n\u81f3\u4e8e love is not True or False; love is love, \u610f\u5916\u5374\u53c8\u4e0d\u8a00\u800c\u55bb.\n\n> Yes, it exists!\/\u662f\u7684, \u5b83\u5b58\u5728!\n\u5faa\u73af\u7684 else. \u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50:\n  def does_exists_num(l, to_find):\n      for num in l:\n          if num == to_find:\n              print(\"Exists!\")\n              break\n      else:\n          print(\"Does not exist\")\nOutput:\n>>> some_list = [1, 2, 3, 4, 5]\n>>> does_exists_num(some_list, 4)\nExists!\n>>> does_exists_num(some_list, -1)\nDoes not exist\n\u5f02\u5e38\u7684 else . \u4f8b,\ntry:\n    pass\nexcept:\n    print(\"Exception occurred!!!\")\nelse:\n    print(\"Try block executed successfully...\")\nOutput:\nTry block executed successfully...\n\ud83d\udca1 \u8bf4\u660e:\n\n\u5faa\u73af\u540e\u7684 else \u5b50\u53e5\u53ea\u4f1a\u5728\u5faa\u73af\u6ca1\u6709\u89e6\u53d1 break \u8bed\u53e5, \u6b63\u5e38\u7ed3\u675f\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u6267\u884c.\ntry \u4e4b\u540e\u7684 else \u5b50\u53e5\u4e5f\u88ab\u79f0\u4e3a \"\u5b8c\u6210\u5b50\u53e5\", \u56e0\u4e3a\u5728 try \u8bed\u53e5\u4e2d\u5230\u8fbe else \u5b50\u53e5\u610f\u5473\u7740try\u5757\u5b9e\u9645\u4e0a\u5df2\u6210\u529f\u5b8c\u6210.\n\n\n> Inpinity\/\u65e0\u9650 *\n\u82f1\u6587\u62fc\u5199\u662f\u6709\u610f\u7684, \u8bf7\u4e0d\u8981\u4e3a\u6b64\u63d0\u4ea4\u8865\u4e01.\n(\u8bd1: \u8fd9\u91cc\u662f\u4e3a\u4e86\u7a81\u51fa Python \u4e2d\u65e0\u9650\u7684\u5b9a\u4e49\u4e0ePi\u6709\u5173, \u6240\u4ee5\u5c06\u4e24\u4e2a\u5355\u8bcd\u62fc\u63a5\u4e86.)\nOutput (Python 3.x):\n>>> infinity = float('infinity')\n>>> hash(infinity)\n314159\n>>> hash(float('-inf'))\n-314159\n\ud83d\udca1 \u8bf4\u660e:\n\ninfinity \u7684\u54c8\u5e0c\u503c\u662f 10\u2075 x \u03c0.\n\u6709\u610f\u601d\u7684\u662f, float('-inf') \u7684\u54c8\u5e0c\u503c\u5728 Python 3 \u4e2d\u662f \"-10\u2075 x \u03c0\"  , \u800c\u5728 Python 2 \u4e2d\u662f \"-10\u2075 x e\".\n\n\n> Mangling time!\/\u4fee\u9970\u65f6\u95f4! *\nclass Yo(object):\n    def __init__(self):\n        self.__honey = True\n        self.bitch = True\nOutput:\n>>> Yo().bitch\nTrue\n>>> Yo().__honey\nAttributeError: 'Yo' object has no attribute '__honey'\n>>> Yo()._Yo__honey\nTrue\n\u4e3a\u4ec0\u4e48 Yo()._Yo__honey \u80fd\u8fd0\u884c? \u53ea\u6709\u5370\u5ea6\u4eba\u7406\u89e3.(\u8bd1: \u8fd9\u4e2a\u6897\u53ef\u80fd\u662f\u6307\u5370\u5ea6\u97f3\u4e50\u4ebaYo Yo Honey Singh)\n\ud83d\udca1 \u8bf4\u660e:\n\n\u540d\u5b57\u4fee\u9970 \u7528\u4e8e\u907f\u514d\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u4e4b\u95f4\u540d\u79f0\u51b2\u7a81.\n\u5728 Python \u4e2d, \u89e3\u91ca\u5668\u4f1a\u901a\u8fc7\u7ed9\u7c7b\u4e2d\u4ee5 __ (\u53cc\u4e0b\u5212\u7ebf)\u5f00\u5934\u4e14\u7ed3\u5c3e\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u4e0b\u5212\u7ebf\u7684\u7c7b\u6210\u5458\u540d\u79f0\u52a0\u4e0a_NameOfTheClass \u6765\u4fee\u9970(mangles)\u540d\u79f0.\n\u6240\u4ee5, \u8981\u8bbf\u95ee __honey \u5bf9\u8c61,\u6211\u4eec\u9700\u8981\u52a0\u4e0a _Yo \u4ee5\u9632\u6b62\u4e0e\u5176\u4ed6\u7c7b\u4e2d\u5b9a\u4e49\u7684\u76f8\u540c\u540d\u79f0\u7684\u5c5e\u6027\u53d1\u751f\u51b2\u7a81.\n\n\n\nSection: Miscellaneous\/\u6742\u9879\n> += is faster\/\u66f4\u5feb\u7684 +=\n# \u7528 \"+\" \u8fde\u63a5\u4e09\u4e2a\u5b57\u7b26\u4e32:\n>>> timeit.timeit(\"s1 = s1 + s2 + s3\", setup=\"s1 = ' ' * 100000; s2 = ' ' * 100000; s3 = ' ' * 100000\", number=100)\n0.25748300552368164\n# \u7528 \"+=\" \u8fde\u63a5\u4e09\u4e2a\u5b57\u7b26\u4e32:\n>>> timeit.timeit(\"s1 += s2 + s3\", setup=\"s1 = ' ' * 100000; s2 = ' ' * 100000; s3 = ' ' * 100000\", number=100)\n0.012188911437988281\n\ud83d\udca1 \u8bf4\u660e:\n\n\u8fde\u63a5\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5b57\u7b26\u4e32\u65f6 += \u6bd4 + \u66f4\u5feb, \u56e0\u4e3a\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 (\u4f8b\u5982, s1 += s2 + s3 \u4e2d\u7684 s1) \u4e0d\u4f1a\u88ab\u9500\u6bc1.(\u8bd1: \u5c31\u662f += \u6267\u884c\u7684\u662f\u8ffd\u52a0\u64cd\u4f5c\uff0c\u5c11\u4e86\u4e00\u4e2a\u9500\u6bc1\u65b0\u5efa\u7684\u52a8\u4f5c.)\n\n\n> Let's make a giant string!\/\u6765\u505a\u4e2a\u5de8\u5927\u7684\u5b57\u7b26\u4e32\u5427\uff01\ndef add_string_with_plus(iters):\n    s = \"\"\n    for i in range(iters):\n        s += \"xyz\"\n    assert len(s) == 3*iters\n\ndef add_bytes_with_plus(iters):\n    s = b\"\"\n    for i in range(iters):\n        s += b\"xyz\"\n    assert len(s) == 3*iters\n\ndef add_string_with_format(iters):\n    fs = \"{}\"*iters\n    s = fs.format(*([\"xyz\"]*iters))\n    assert len(s) == 3*iters\n\ndef add_string_with_join(iters):\n    l = []\n    for i in range(iters):\n        l.append(\"xyz\")\n    s = \"\".join(l)\n    assert len(s) == 3*iters\n\ndef convert_list_to_string(l, iters):\n    s = \"\".join(l)\n    assert len(s) == 3*iters\nOutput:\n>>> timeit(add_string_with_plus(10000))\n1000 loops, best of 3: 972 \u00b5s per loop\n>>> timeit(add_bytes_with_plus(10000))\n1000 loops, best of 3: 815 \u00b5s per loop\n>>> timeit(add_string_with_format(10000))\n1000 loops, best of 3: 508 \u00b5s per loop\n>>> timeit(add_string_with_join(10000))\n1000 loops, best of 3: 878 \u00b5s per loop\n>>> l = [\"xyz\"]*10000\n>>> timeit(convert_list_to_string(l, 10000))\n10000 loops, best of 3: 80 \u00b5s per loop\n\u8ba9\u6211\u4eec\u5c06\u8fed\u4ee3\u6b21\u6570\u589e\u52a010\u500d.\n>>> timeit(add_string_with_plus(100000)) # \u6267\u884c\u65f6\u95f4\u7ebf\u6027\u589e\u52a0\n100 loops, best of 3: 9.75 ms per loop\n>>> timeit(add_bytes_with_plus(100000)) # \u4e8c\u6b21\u589e\u52a0\n1000 loops, best of 3: 974 ms per loop\n>>> timeit(add_string_with_format(100000)) # \u7ebf\u6027\u589e\u52a0\n100 loops, best of 3: 5.25 ms per loop\n>>> timeit(add_string_with_join(100000)) # \u7ebf\u6027\u589e\u52a0\n100 loops, best of 3: 9.85 ms per loop\n>>> l = [\"xyz\"]*100000\n>>> timeit(convert_list_to_string(l, 100000)) # \u7ebf\u6027\u589e\u52a0\n1000 loops, best of 3: 723 \u00b5s per loop\n\ud83d\udca1 \u8bf4\u660e:\n\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u83b7\u5f97\u66f4\u591a timeit \u7684\u76f8\u5173\u4fe1\u606f. \u5b83\u901a\u5e38\u7528\u4e8e\u8861\u91cf\u4ee3\u7801\u7247\u6bb5\u7684\u6267\u884c\u65f6\u95f4.\n\u4e0d\u8981\u7528 + \u53bb\u751f\u6210\u8fc7\u957f\u7684\u5b57\u7b26\u4e32, \u5728 Python \u4e2d, str \u662f\u4e0d\u53ef\u53d8\u7684, \u6240\u4ee5\u5728\u6bcf\u6b21\u8fde\u63a5\u4e2d\u4f60\u90fd\u8981\u628a\u5de6\u53f3\u4e24\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u5230\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d. \u5982\u679c\u4f60\u8fde\u63a5\u56db\u4e2a\u957f\u5ea6\u4e3a10\u7684\u5b57\u7b26\u4e32, \u4f60\u9700\u8981\u62f7\u8d1d (10+10) + ((10+10)+10) + (((10+10)+10)+10) = 90 \u4e2a\u5b57\u7b26\u800c\u4e0d\u662f 40 \u4e2a\u5b57\u7b26. \u968f\u7740\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u548c\u5927\u5c0f\u7684\u589e\u52a0, \u60c5\u51b5\u4f1a\u53d8\u5f97\u8d8a\u53d1\u7684\u7cdf\u7cd5 (\u5c31\u50cfadd_bytes_with_plus \u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u4e00\u6837)\n\u56e0\u6b64, \u66f4\u5efa\u8bae\u4f7f\u7528 .format. \u6216 % \u8bed\u6cd5 (\u4f46\u662f, \u5bf9\u4e8e\u77ed\u5b57\u7b26\u4e32, \u5b83\u4eec\u6bd4 + \u7a0d\u6162\u4e00\u70b9).\n\u53c8\u6216\u8005, \u5982\u679c\u4f60\u6240\u9700\u7684\u5185\u5bb9\u5df2\u7ecf\u4ee5\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5f62\u5f0f\u63d0\u4f9b\u4e86, \u4f7f\u7528 ''.join(\u53ef\u8fed\u4ee3\u5bf9\u8c61) \u8981\u5feb\u591a\u4e86.\nadd_string_with_plus \u7684\u6267\u884c\u65f6\u95f4\u6ca1\u6709\u50cf add_bytes_with_plus \u4e00\u6837\u51fa\u73b0\u4e8c\u6b21\u589e\u52a0\u662f\u56e0\u4e3a\u89e3\u91ca\u5668\u4f1a\u5982\u540c\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u6240\u8ba8\u8bba\u7684\u4e00\u6837\u4f18\u5316 +=. \u7528 s = s + \"x\" + \"y\" + \"z\" \u66ff\u4ee3 s += \"xyz\" \u7684\u8bdd, \u6267\u884c\u65f6\u95f4\u5c31\u4f1a\u4e8c\u6b21\u589e\u52a0\u4e86.\ndef add_string_with_plus(iters):\n    s = \"\"\n    for i in range(iters):\n        s = s + \"x\" + \"y\" + \"z\"\n    assert len(s) == 3*iters\n\n>>> timeit(add_string_with_plus(10000))\n100 loops, best of 3: 9.87 ms per loop\n>>> timeit(add_string_with_plus(100000)) # \u6267\u884c\u65f6\u95f4\u4e8c\u6b21\u589e\u52a0\n1 loops, best of 3: 1.09 s per loop\n\n\n\n> Explicit typecast of strings\/\u5b57\u7b26\u4e32\u7684\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\na = float('inf')\nb = float('nan')\nc = float('-iNf')  # \u8fd9\u4e9b\u5b57\u7b26\u4e32\u4e0d\u533a\u5206\u5927\u5c0f\u5199\nd = float('nan')\nOutput:\n>>> a\ninf\n>>> b\nnan\n>>> c\n-inf\n>>> float('some_other_string')\nValueError: could not convert string to float: some_other_string\n>>> a == -c #inf==inf\nTrue\n>>> None == None # None==None\nTrue\n>>> b == d #\u4f46\u662f nan!=nan\nFalse\n>>> 50\/a\n0.0\n>>> a\/a\nnan\n>>> 23 + b\nnan\n\ud83d\udca1 \u8bf4\u660e:\n'inf' \u548c 'nan' \u662f\u7279\u6b8a\u7684\u5b57\u7b26\u4e32(\u4e0d\u533a\u5206\u5927\u5c0f\u5199), \u5f53\u663e\u793a\u8f6c\u6362\u6210 float \u578b\u65f6, \u5b83\u4eec\u5206\u522b\u7528\u4e8e\u8868\u793a\u6570\u5b66\u610f\u4e49\u4e0a\u7684 \"\u65e0\u7a77\u5927\" \u548c \"\u975e\u6570\u5b57\".\n\n> Minor Ones\/\u5c0f\u77e5\u8bc6\u70b9\n\n\njoin() \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u64cd\u4f5c\u800c\u4e0d\u662f\u5217\u8868\u64cd\u4f5c. (\u7b2c\u4e00\u6b21\u63a5\u89e6\u4f1a\u89c9\u5f97\u6709\u70b9\u8fdd\u53cd\u76f4\u89c9)\n\ud83d\udca1 \u8bf4\u660e:\n\u5982\u679c join() \u662f\u5b57\u7b26\u4e32\u65b9\u6cd5 \u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61(\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u8fed\u4ee3\u5668). \u5982\u679c\u5b83\u662f\u5217\u8868\u65b9\u6cd5, \u5219\u5fc5\u987b\u5728\u6bcf\u79cd\u7c7b\u578b\u4e2d\u5355\u72ec\u5b9e\u73b0. \u53e6\u5916, \u5728 list \u5bf9\u8c61\u7684\u901a\u7528API\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u4e13\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u6ca1\u6709\u592a\u5927\u7684\u610f\u4e49.\n\n\n\u770b\u7740\u5947\u602a\u4f46\u80fd\u6b63\u786e\u8fd0\u884c\u7684\u8bed\u53e5:\n\n[] = () \u8bed\u53e5\u5728\u8bed\u4e49\u4e0a\u662f\u6b63\u786e\u7684 (\u89e3\u5305\u4e00\u4e2a\u7a7a\u7684 tuple \u5e76\u8d4b\u503c\u7ed9 list)\n'a'[0][0][0][0][0] \u5728\u8bed\u4e49\u4e0a\u4e5f\u662f\u6b63\u786e\u7684, \u56e0\u4e3a\u5728 Python \u4e2d\u5b57\u7b26\u4e32\u540c\u65f6\u4e5f\u662f\u5e8f\u5217(\u53ef\u8fed\u4ee3\u5bf9\u8c61\u652f\u6301\u4f7f\u7528\u6574\u6570\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20).\n3 --0-- 5 == 8 \u548c --5 == 5 \u5728\u8bed\u4e49\u4e0a\u90fd\u662f\u6b63\u786e\u7684, \u4e14\u7ed3\u679c\u7b49\u4e8e True.(\u8bd1: 3\u51cf\u8d1f0\u7b49\u4e8e3\uff0c\u518d\u51cf\u8d1f5\u76f8\u5f53\u4e8e\u52a05\u7b49\u4e8e8\uff1b\u8d1f\u7684\u8d1f5\u7b49\u4e8e5.)\n\n\n\n\u9274\u4e8e a \u662f\u4e00\u4e2a\u6570\u5b57, ++a \u548c --a \u90fd\u662f\u6709\u6548\u7684 Python \u8bed\u53e5, \u4f46\u5176\u6548\u679c\u4e0e C, C++ \u6216 Java \u7b49\u4e0d\u4e00\u6837.\n>>> a = 5\n>>> a\n5\n>>> ++a\n5\n>>> --a\n5\n\ud83d\udca1 \u8bf4\u660e:\n\npython \u91cc\u6ca1\u6709 ++ \u64cd\u4f5c\u7b26. \u8fd9\u5176\u5b9e\u662f\u4e24\u4e2a + \u64cd\u4f5c\u7b26.\n++a \u88ab\u89e3\u6790\u4e3a +(+a) \u6700\u540e\u7b49\u4e8e a. --a \u540c\u7406.\n\u8fd9\u4e2a StackOverflow \u56de\u7b54 \u8ba8\u8bba\u4e86\u4e3a\u4ec0\u4e48 Python \u4e2d\u7f3a\u5c11\u589e\u91cf\u548c\u51cf\u91cf\u8fd0\u7b97\u7b26.\n\n\n\nPython \u4f7f\u7528 2\u4e2a\u5b57\u8282\u5b58\u50a8\u51fd\u6570\u4e2d\u7684\u672c\u5730\u53d8\u91cf. \u7406\u8bba\u4e0a, \u8fd9\u610f\u5473\u7740\u51fd\u6570\u4e2d\u53ea\u80fd\u5b9a\u4e4965536\u4e2a\u53d8\u91cf. \u4f46\u662f\uff0cPython \u5185\u7f6e\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u7528\u4e8e\u5b58\u50a8\u8d85\u8fc72^16\u4e2a\u53d8\u91cf\u540d. \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5f53\u5b9a\u4e49\u4e86\u8d85\u8fc765536\u4e2a\u5c40\u90e8\u53d8\u91cf\u65f6\u5806\u6808\u4e2d\u53d1\u751f\u7684\u60c5\u51b5 (\u8b66\u544a: \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u6253\u5370\u5927\u7ea62^18\u884c\u6587\u672c, \u8bf7\u505a\u597d\u51c6\u5907!):\nimport dis\nexec(\"\"\"\ndef f():\n    \"\"\" + \"\"\"\n    \"\"\".join([\"X\"+str(x)+\"=\" + str(x) for x in range(65539)]))\n\nf()\n\nprint(dis.dis(f))\n\n\n\u4f60\u7684 Python \u4ee3\u7801 \u5e76\u4e0d\u4f1a\u591a\u7ebf\u7a0b\u540c\u65f6\u8fd0\u884c (\u662f\u7684, \u4f60\u6ca1\u542c\u9519!). \u867d\u7136\u4f60\u89c9\u5f97\u4f1a\u4ea7\u751f\u591a\u4e2a\u7ebf\u7a0b\u5e76\u8ba9\u5b83\u4eec\u540c\u65f6\u6267\u884c\u4f60\u7684\u4ee3\u7801, \u4f46\u662f, \u7531\u4e8e \u5168\u5c40\u89e3\u91ca\u9501\u7684\u5b58\u5728, \u4f60\u6240\u505a\u7684\u53ea\u662f\u8ba9\u4f60\u7684\u7ebf\u7a0b\u4f9d\u6b21\u5728\u540c\u4e00\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c. Python \u591a\u7ebf\u7a0b\u9002\u7528\u4e8eIO\u5bc6\u96c6\u578b\u7684\u4efb\u52a1, \u4f46\u5982\u679c\u60f3\u8981\u5e76\u884c\u5904\u7406CPU\u5bc6\u96c6\u578b\u7684\u4efb\u52a1, \u4f60\u5e94\u8be5\u4f1a\u60f3\u4f7f\u7528 multiprocessing \u6a21\u5757.\n\n\n\u5217\u8868\u5207\u7247\u8d85\u51fa\u7d22\u5f15\u8fb9\u754c\u800c\u4e0d\u5f15\u53d1\u4efb\u4f55\u9519\u8bef\n>>> some_list = [1, 2, 3, 4, 5]\n>>> some_list[111:]\n[]\n\n\nint('\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669') \u5728 Python 3 \u4e2d\u4f1a\u8fd4\u56de 123456789. \u5728 Python \u4e2d, \u5341\u8fdb\u5236\u5b57\u7b26\u5305\u62ec\u6570\u5b57\u5b57\u7b26, \u4ee5\u53ca\u53ef\u7528\u4e8e\u5f62\u6210\u5341\u8fdb\u5236\u6570\u5b57\u7684\u6240\u6709\u5b57\u7b26, \u4f8b\u5982: U+0660, ARABIC-INDIC DIGIT ZERO. \u8fd9\u6709\u4e00\u4e2a\u5173\u4e8e\u6b64\u7684 \u6709\u8da3\u6545\u4e8b.\n\n\n'abc'.count('') == 4. \u8fd9\u6709\u4e00\u4e2a count \u65b9\u6cd5\u7684\u76f8\u8fd1\u5b9e\u73b0, \u80fd\u66f4\u597d\u7684\u8bf4\u660e\u95ee\u9898\ndef count(s, sub):\n    result = 0\n    for i in range(len(s) + 1 - len(sub)):\n        result += (s[i:i + len(sub)] == sub)\n    return result\n\u8fd9\u4e2a\u884c\u4e3a\u662f\u7531\u4e8e\u7a7a\u5b50\u4e32('')\u4e0e\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d\u957f\u5ea6\u4e3a0\u7684\u5207\u7247\u76f8\u5339\u914d\u5bfc\u81f4\u7684.\n\n\n\nContributing\/\u8d21\u732e\n\u6b22\u8fce\u5404\u79cd\u8865\u4e01! \u8be6\u60c5\u8bf7\u770bCONTRIBUTING.md.(\u8bd1: \u8fd9\u662f\u7ed9\u539f\u5e93\u63d0\u8d21\u732e\u7684\u8981\u6c42\u6a21\u7248)\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u65b0\u5efa issue \u6216\u8005\u5728\u4e0a Gitter \u4e0e\u6211\u4eec\u8fdb\u884c\u8ba8\u8bba.\n(\u8bd1: \u5982\u679c\u4f60\u60f3\u5bf9\u8fd9\u4e2a\u7ffb\u8bd1\u9879\u76ee\u63d0\u4f9b\u5e2e\u52a9, \u8bf7\u770b\u8fd9\u91cc)\nAcknowledgements\/\u81f4\u8c22\n\u8fd9\u4e2a\u7cfb\u5217\u6700\u521d\u7684\u60f3\u6cd5\u548c\u8bbe\u8ba1\u7075\u611f\u6765\u81ea\u4e8e Denys Dovhan \u7684\u9879\u76ee wtfjs. \u793e\u533a\u7684\u5f3a\u5927\u652f\u6301\u8ba9\u5b83\u6210\u957f\u4e3a\u73b0\u5728\u7684\u6a21\u6837.\nSome nice Links!\/\u4e00\u4e9b\u4e0d\u9519\u7684\u8d44\u6e90\n\nhttps:\/\/www.youtube.com\/watch?v=sH4XF6pKKmk\nhttps:\/\/www.reddit.com\/r\/Python\/comments\/3cu6ej\/what_are_some_wtf_things_about_python\nhttps:\/\/sopython.com\/wiki\/Common_Gotchas_In_Python\nhttps:\/\/stackoverflow.com\/questions\/530530\/python-2-x-gotchas-and-landmines\nhttps:\/\/stackoverflow.com\/questions\/1011431\/common-pitfalls-in-python\nhttps:\/\/www.python.org\/doc\/humor\/\nhttps:\/\/www.codementor.io\/satwikkansal\/python-practices-for-efficient-code-performance-memory-and-usability-aze6oiq65\n\n\ud83c\udf93 License\/\u8bb8\u53ef\n\n\u00a9 Satwik Kansal\nHelp\/\u5e2e\u52a9\n\u5982\u679c\u60a8\u6709\u4efb\u4f55\u60f3\u6cd5\u6216\u5efa\u8bae\uff0c\u6b22\u8fce\u5206\u4eab.\nSurprise your geeky pythonist friends?\/\u60f3\u7ed9\u4f60\u7684\u6781\u5ba2\u670b\u53cb\u4e00\u4e2a\u60ca\u559c?\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5feb\u94fe\u5411 Twitter \u548c Linkedin \u4e0a\u7684\u670b\u53cb\u63a8\u8350 wtfpython,\nTwitter\n| Linkedin\nNeed a pdf version?\/\u9700\u8981\u6765\u4e00\u4efdpdf\u7248\u7684?\n\u6211\u6536\u5230\u4e00\u4e9b\u60f3\u8981pdf\u7248\u672c\u7684\u9700\u6c42. \u4f60\u53ef\u4ee5\u5feb\u901f\u5728\u8fd9\u83b7\u5f97.\nFollow Commit\/\u8ffd\u8e2aCommit\n\u8fd9\u662f\u4e2d\u6587\u7248 fork \u65f6\u6240\u5904\u7684\u539f\u5e93 Commit, \u5f53\u539f\u5e93\u66f4\u65b0\u65f6\u6211\u4f1a\u8ddf\u968f\u66f4\u65b0.\n\n996.icu\n\n","138":"\nDiagrams\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiagram as Code.\nDiagrams lets you draw the cloud system architecture in Python code. It was born for prototyping a new system architecture design without any design tools. You can also describe or visualize the existing system architecture as well. Diagrams currently supports main major providers including: AWS, Azure, GCP, Kubernetes, Alibaba Cloud, Oracle Cloud etc... It also supports On-Premise nodes, SaaS and major Programming frameworks and languages.\nDiagram as Code also allows you to track the architecture diagram changes in any version control system.\n\nNOTE: It does not control any actual cloud resources nor does it generate cloud formation or terraform code. It is just for drawing the cloud system architecture diagrams.\n\nGetting Started\nIt requires Python 3.6 or higher, check your Python version first.\nIt uses Graphviz to render the diagram, so you need to install Graphviz to use diagrams. After installing graphviz (or already have it), install the diagrams.\n\nmacOS users can download the Graphviz via brew install graphviz if you're using Homebrew.\n\n# using pip (pip3)\n$ pip install diagrams\n\n# using pipenv\n$ pipenv install diagrams\n\n# using poetry\n$ poetry add diagrams\nYou can start with quick start. Check out guides for more details, and you can find all available nodes list in here.\nExamples\n\n\n\nEvent Processing\nStateful Architecture\nAdvanced Web Service\n\n\n\n\n\n\n\n\n\n\nYou can find all the examples on the examples page.\nContributing\nTo contribute to diagram, check out contribution guidelines.\n\nLet me know if you are using diagrams! I'll add you in showcase page. (I'm working on it!) :)\n\nWho uses it?\n\nGitPitch is the perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators. Diagrams is now available as a dedicated Cloud Diagram Markdown Widget so you can use Diagrams directly on any slide for conferences, meetups, and training.\nCloudiscovery helps you to analyze resources in your cloud (AWS\/GCP\/Azure\/Alibaba\/IBM) account. It allows you to create a diagram of analyzed cloud resource map based on this Diagrams library, so you can draw the your existing cloud infrastructure with Cloudicovery.\nAirflow Diagrams is an Airflow plugin that aims to easily visualise your Airflow DAGs on service level from providers like AWS, GCP, Azure, etc. via diagrams.\nOther languages\n\nIf you are familiar to Go, you can use go-diagrams as well.\n\nLicense\nMIT\n","139":"Status: Maintenance (expect bug fixes and minor updates)\n \nBaselines\nOpenAI Baselines is a set of high-quality implementations of reinforcement learning algorithms.\nThese algorithms will make it easier for the research community to replicate, refine, and identify new ideas, and will create good baselines to build research on top of. Our DQN implementation and its variants are roughly on par with the scores in published papers. We expect they will be used as a base around which new ideas can be added, and as a tool for comparing a new approach against existing ones.\nPrerequisites\nBaselines requires python3 (>=3.5) with the development headers. You'll also need system packages CMake, OpenMPI and zlib. Those can be installed as follows\nUbuntu\nsudo apt-get update && sudo apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev\nMac OS X\nInstallation of system packages on Mac requires Homebrew. With Homebrew installed, run the following:\nbrew install cmake openmpi\nVirtual environment\nFrom the general python package sanity perspective, it is a good idea to use virtual environments (virtualenvs) to make sure packages from different projects do not interfere with each other. You can install virtualenv (which is itself a pip package) via\npip install virtualenv\nVirtualenvs are essentially folders that have copies of python executable and all python packages.\nTo create a virtualenv called venv with python3, one runs\nvirtualenv \/path\/to\/venv --python=python3\nTo activate a virtualenv:\n. \/path\/to\/venv\/bin\/activate\n\nMore thorough tutorial on virtualenvs and options can be found here\nTensorflow versions\nThe master branch supports Tensorflow from version 1.4 to 1.14. For Tensorflow 2.0 support, please use tf2 branch.\nInstallation\n\n\nClone the repo and cd into it:\ngit clone https:\/\/github.com\/openai\/baselines.git\ncd baselines\n\n\nIf you don't have TensorFlow installed already, install your favourite flavor of TensorFlow. In most cases, you may use\npip install tensorflow-gpu==1.14 # if you have a CUDA-compatible gpu and proper drivers\nor\npip install tensorflow==1.14\nto install Tensorflow 1.14, which is the latest version of Tensorflow supported by the master branch. Refer to TensorFlow installation guide\nfor more details.\n\n\nInstall baselines package\npip install -e .\n\n\nMuJoCo\nSome of the baselines examples use MuJoCo (multi-joint dynamics in contact) physics simulator, which is proprietary and requires binaries and a license (temporary 30-day license can be obtained from www.mujoco.org). Instructions on setting up MuJoCo can be found here\nTesting the installation\nAll unit tests in baselines can be run using pytest runner:\npip install pytest\npytest\n\nTraining models\nMost of the algorithms in baselines repo are used as follows:\npython -m baselines.run --alg=<name of the algorithm> --env=<environment_id> [additional arguments]\nExample 1. PPO with MuJoCo Humanoid\nFor instance, to train a fully-connected network controlling MuJoCo humanoid using PPO2 for 20M timesteps\npython -m baselines.run --alg=ppo2 --env=Humanoid-v2 --network=mlp --num_timesteps=2e7\nNote that for mujoco environments fully-connected network is default, so we can omit --network=mlp\nThe hyperparameters for both network and the learning algorithm can be controlled via the command line, for instance:\npython -m baselines.run --alg=ppo2 --env=Humanoid-v2 --network=mlp --num_timesteps=2e7 --ent_coef=0.1 --num_hidden=32 --num_layers=3 --value_network=copy\nwill set entropy coefficient to 0.1, and construct fully connected network with 3 layers with 32 hidden units in each, and create a separate network for value function estimation (so that its parameters are not shared with the policy network, but the structure is the same)\nSee docstrings in common\/models.py for description of network parameters for each type of model, and\ndocstring for baselines\/ppo2\/ppo2.py\/learn() for the description of the ppo2 hyperparameters.\nExample 2. DQN on Atari\nDQN with Atari is at this point a classics of benchmarks. To run the baselines implementation of DQN on Atari Pong:\npython -m baselines.run --alg=deepq --env=PongNoFrameskip-v4 --num_timesteps=1e6\n\nSaving, loading and visualizing models\nSaving and loading the model\nThe algorithms serialization API is not properly unified yet; however, there is a simple method to save \/ restore trained models.\n--save_path and --load_path command-line option loads the tensorflow state from a given path before training, and saves it after the training, respectively.\nLet's imagine you'd like to train ppo2 on Atari Pong,  save the model and then later visualize what has it learnt.\npython -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~\/models\/pong_20M_ppo2\nThis should get to the mean reward per episode about 20. To load and visualize the model, we'll do the following - load the model, train it for 0 steps, and then visualize:\npython -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=0 --load_path=~\/models\/pong_20M_ppo2 --play\nNOTE: Mujoco environments require normalization to work properly, so we wrap them with VecNormalize wrapper. Currently, to ensure the models are saved with normalization (so that trained models can be restored and run without further training) the normalization coefficients are saved as tensorflow variables. This can decrease the performance somewhat, so if you require high-throughput steps with Mujoco and do not need saving\/restoring the models, it may make sense to use numpy normalization instead. To do that, set 'use_tf=False` in baselines\/run.py.\nLogging and vizualizing learning curves and other training metrics\nBy default, all summary data, including progress, standard output, is saved to a unique directory in a temp folder, specified by a call to Python's tempfile.gettempdir().\nThe directory can be changed with the --log_path command-line option.\npython -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~\/models\/pong_20M_ppo2 --log_path=~\/logs\/Pong\/\nNOTE: Please be aware that the logger will overwrite files of the same name in an existing directory, thus it's recommended that folder names be given a unique timestamp to prevent overwritten logs.\nAnother way the temp directory can be changed is through the use of the $OPENAI_LOGDIR environment variable.\nFor examples on how to load and display the training data, see here.\nSubpackages\n\nA2C\nACER\nACKTR\nDDPG\nDQN\nGAIL\nHER\nPPO1 (obsolete version, left here temporarily)\nPPO2\nTRPO\n\nBenchmarks\nResults of benchmarks on Mujoco (1M timesteps) and Atari (10M timesteps) are available\nhere for Mujoco\nand\nhere for Atari\nrespectively. Note that these results may be not on the latest version of the code, particular commit hash with which results were obtained is specified on the benchmarks page.\nTo cite this repository in publications:\n@misc{baselines,\n  author = {Dhariwal, Prafulla and Hesse, Christopher and Klimov, Oleg and Nichol, Alex and Plappert, Matthias and Radford, Alec and Schulman, John and Sidor, Szymon and Wu, Yuhuai and Zhokhov, Peter},\n  title = {OpenAI Baselines},\n  year = {2017},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https:\/\/github.com\/openai\/baselines}},\n}\n\n","140":"\nNeural Enhance\n\nExample #1 \u2014 Old Station: view comparison in 24-bit HD, original photo CC-BY-SA @siv-athens.\n\nAs seen on TV! What if you could increase the resolution of your photos using technology from CSI laboratories? Thanks to deep learning and #NeuralEnhance, it's now possible to train a neural network to zoom in to your images at 2x or even 4x.  You'll get even better results by increasing the number of neurons or training with a dataset similar to your low resolution image.\nThe catch? The neural network is hallucinating details based on its training from example images. It's not reconstructing your photo exactly as it would have been if it was HD. That's only possible in Hollywood \u2014 but using deep learning as \"Creative AI\" works and it is just as cool!  Here's how you can get started...\n\nExamples & Usage\nInstallation\nBackground & Research\nTroubleshooting\nFrequent Questions\n\n\n \n \n\n\n1. Examples & Usage\nThe main script is called enhance.py, which you can run with Python 3.4+ once it's setup as below.  The --device argument that lets you specify which GPU or CPU to use. For the samples above, here are the performance results:\n\nGPU Rendering HQ \u2014 Assuming you have CUDA setup and enough on-board RAM to fit the image and neural network, generating 1080p output should complete in 5 seconds, or 2s per image if multiple at the same time.\nCPU Rendering HQ \u2014 This will take roughly 20 to 60 seconds for 1080p output, however on most machines you can run 4-8 processes simultaneously given enough system RAM. Runtime depends on the neural network size.\n\nThe default is to use --device=cpu, if you have NVIDIA card setup with CUDA already try --device=gpu0. On the CPU, you can also set environment variable to OMP_NUM_THREADS=4, which is most useful when running the script multiple times in parallel.\n\n1.a) Enhancing Images\nA list of example command lines you can use with the pre-trained models provided in the GitHub releases:\n# Run the super-resolution script to repair JPEG artefacts, zoom factor 1:1.\npython3 enhance.py --type=photo --model=repair --zoom=1 broken.jpg\n\n# Process multiple good quality images with a single run, zoom factor 2:1.\npython3 enhance.py --type=photo --zoom=2 file1.jpg file2.jpg\n\n# Display output images that were given `_ne?x.png` suffix.\nopen *_ne?x.png\nHere's a list of currently supported models, image types, and zoom levels in one table.\n\n\nFEATURES\n--model=default\n--model=repair\n--model=denoise\n--model=deblur\n\n\n\n--type=photo\n2x\n1x\n\u2026\n\u2026\n\n\n\n\n1.b) Training Super-Resolution\nPre-trained models are provided in the GitHub releases.  Training your own is a delicate process that may require you to pick parameters based on your image dataset.\n# Remove the model file as don't want to reload the data to fine-tune it.\nrm -f ne?x*.pkl.bz2\n\n# Pre-train the model using perceptual loss from paper [1] below.\npython3.4 enhance.py --train \"data\/*.jpg\" --model custom --scales=2 --epochs=50 \\\n    --perceptual-layer=conv2_2 --smoothness-weight=1e7 --adversary-weight=0.0 \\\n    --generator-blocks=4 --generator-filters=64\n\n# Train the model using an adversarial setup based on [4] below.\npython3.4 enhance.py --train \"data\/*.jpg\" --model custom --scales=2 --epochs=250 \\\n         --perceptual-layer=conv5_2 --smoothness-weight=2e4 --adversary-weight=1e3 \\\n         --generator-start=5 --discriminator-start=0 --adversarial-start=5 \\\n         --discriminator-size=64\n\n# The newly trained model is output into this file...\nls ne?x-custom-*.pkl.bz2\n\nExample #2 \u2014 Bank Lobby: view comparison in 24-bit HD, original photo CC-BY-SA @benarent.\n\n2. Installation & Setup\n\n2.a) Using Docker Image [recommended]\nThe easiest way to get up-and-running is to install Docker. Then, you should be able to download and run the pre-built image using the docker command line tool.  Find out more about the alexjc\/neural-enhance image on its Docker Hub page.\nHere's the simplest way you can call the script using docker, assuming you're familiar with using -v argument to mount folders you can use this directly to specify files to enhance:\n# Download the Docker image and show the help text to make sure it works.\ndocker run --rm -v `pwd`:\/ne\/input -it alexjc\/neural-enhance --help\nSingle Image \u2014 In practice, we suggest you setup an alias called enhance to automatically expose the folder containing your specified image, so the script can read it and store results where you can access them.  This is how you can do it in your terminal console on OSX or Linux:\n# Setup the alias. Put this in your .bashrc or .zshrc file so it's available at startup.\nalias enhance='function ne() { docker run --rm -v \"$(pwd)\/`dirname ${@:$#}`\":\/ne\/input -it alexjc\/neural-enhance ${@:1:$#-1} \"input\/`basename ${@:$#}`\"; }; ne'\n\n# Now run any of the examples above using this alias, without the `.py` extension.\nenhance --zoom=1 --model=repair images\/broken.jpg\nMultiple Images \u2014 To enhance multiple images in a row (faster) from a folder or wildcard specification, make sure to quote the argument to the alias command:\n# Process multiple images, make sure to quote the argument!\nenhance --zoom=2 \"images\/*.jpg\"\nIf you want to run on your NVIDIA GPU, you can instead change the alias to use the image alexjc\/neural-enhance:gpu which comes with CUDA and CUDNN pre-installed.  Then run it within nvidia-docker and it should use your physical hardware!\n\n2.b) Manual Installation [developers]\nThis project requires Python 3.4+ and you'll also need numpy and scipy (numerical computing libraries) as well as python3-dev installed system-wide.  If you want more detailed instructions, follow these:\n\nLinux Installation of Lasagne (intermediate)\nMac OSX Installation of Lasagne (advanced)\nWindows Installation of Lasagne (expert)\n\nAfterward fetching the repository, you can run the following commands from your terminal to setup a local environment:\n# Create a local environment for Python 3.x to install dependencies here.\npython3 -m venv pyvenv --system-site-packages\n\n# If you're using bash, make this the active version of Python.\nsource pyvenv\/bin\/activate\n\n# Setup the required dependencies simply using the PIP module.\npython3 -m pip install --ignore-installed -r requirements.txt\nAfter this, you should have pillow, theano and lasagne installed in your virtual environment.  You'll also need to download this pre-trained neural network (VGG19, 80Mb) and put it in the same folder as the script to run. To de-install everything, you can just delete the #\/pyvenv\/ folder.\n\nExample #3 \u2014 Specialized super-resolution for faces, trained on HD examples of celebrity faces only.  The quality is significantly higher when narrowing the domain from \"photos\" in general.\n\n3. Background & Research\nThis code uses a combination of techniques from the following papers, as well as some minor improvements yet to be documented (watch this repository for updates):\n\nPerceptual Losses for Real-Time Style Transfer and Super-Resolution\nReal-Time Super-Resolution Using Efficient Sub-Pixel Convolution\nDeeply-Recursive Convolutional Network for Image Super-Resolution\nPhoto-Realistic Super-Resolution Using a Generative Adversarial Network\n\nSpecial thanks for their help and support in various ways:\n\nEder Santana \u2014 Discussions, encouragement, and his ideas on sub-pixel deconvolution.\nAndrew Brock \u2014 This sub-pixel layer code is based on his project repository using Lasagne.\nCasper Kaae S\u00f8nderby \u2014 For suggesting a more stable alternative to sigmoid + log as GAN loss functions.\n\n\n4. Troubleshooting Problems\n\nCan't install or Unable to find pgen, not compiling formal grammar.\nThere's a Python extension compiler called Cython, and it's missing or improperly installed. Try getting it directly from the system package manager rather than PIP.\nFIX: sudo apt-get install cython3\n\nNotImplementedError: AbstractConv2d theano optimization failed.\nThis happens when you're running without a GPU, and the CPU libraries were not found (e.g. libblas).  The neural network expressions cannot be evaluated by Theano and it's raising an exception.\nFIX: sudo apt-get install libblas-dev libopenblas-dev\n\nTypeError: max_pool_2d() got an unexpected keyword argument 'mode'\nYou need to install Lasagne and Theano directly from the versions specified in requirements.txt, rather than from the PIP versions.  These alternatives are older and don't have the required features.\nFIX: python3 -m pip install -r requirements.txt\n\nValueError: unknown locale: UTF-8\nIt seems your terminal is misconfigured and not compatible with the way Python treats locales. You may need to change this in your .bashrc or other startup script. Alternatively, this command will fix it once for this shell instance.\nFIX: export LC_ALL=en_US.UTF-8\n\nExample #4 \u2014 Street View: view comparison in 24-bit HD, original photo CC-BY-SA @cyalex.\n\n\n \n \n","141":"Tensor2Tensor\n\n\n\n\n\n\n\nTensor2Tensor, or\nT2T for short, is a library\nof deep learning models and datasets designed to make deep learning more\naccessible and accelerate ML\nresearch.\nT2T was developed by researchers and engineers in the\nGoogle Brain team and a community\nof users. It is now deprecated \u2014 we keep it running and welcome\nbug-fixes, but encourage users to use the successor library Trax.\nQuick Start\nThis iPython notebook\nexplains T2T and runs in your browser using a free VM from Google,\nno installation needed. Alternatively, here is a one-command version that\ninstalls T2T, downloads MNIST, trains a model and evaluates it:\npip install tensor2tensor && t2t-trainer \\\n  --generate_data \\\n  --data_dir=~\/t2t_data \\\n  --output_dir=~\/t2t_train\/mnist \\\n  --problem=image_mnist \\\n  --model=shake_shake \\\n  --hparams_set=shake_shake_quick \\\n  --train_steps=1000 \\\n  --eval_steps=100\n\nContents\n\nSuggested Datasets and Models\n\nMathematical Language Understanding\nStory, Question and Answer\nImage Classification\nImage Generation\nLanguage Modeling\nSentiment Analysis\nSpeech Recognition\nSummarization\nTranslation\n\n\nBasics\n\nWalkthrough\nInstallation\nFeatures\n\n\nT2T Overview\n\nDatasets\nProblems and Modalities\nModels\nHyperparameter Sets\nTrainer\n\n\nAdding your own components\nAdding a dataset\nPapers\nRun on FloydHub\n\nSuggested Datasets and Models\nBelow we list a number of tasks that can be solved with T2T when\nyou train the appropriate model on the appropriate problem.\nWe give the problem and model below and we suggest a setting of\nhyperparameters that we know works well in our setup. We usually\nrun either on Cloud TPUs or on 8-GPU machines; you might need\nto modify the hyperparameters if you run on a different setup.\nMathematical Language Understanding\nFor evaluating mathematical expressions at the character level involving addition, subtraction and multiplication of both positive and negative decimal numbers with variable digits assigned to symbolic variables, use\n\nthe MLU data-set:\n--problem=algorithmic_math_two_variables\n\nYou can try solving the problem with different transformer models and hyperparameters as described in the paper:\n\nStandard transformer:\n--model=transformer\n--hparams_set=transformer_tiny\nUniversal transformer:\n--model=universal_transformer\n--hparams_set=universal_transformer_tiny\nAdaptive universal transformer:\n--model=universal_transformer\n--hparams_set=adaptive_universal_transformer_tiny\n\nStory, Question and Answer\nFor answering questions based on a story, use\n\nthe bAbi data-set:\n--problem=babi_qa_concat_task1_1k\n\nYou can choose the bAbi task from the range [1,20] and the subset from 1k or\n10k. To combine test data from all tasks into a single test set, use\n--problem=babi_qa_concat_all_tasks_10k\nImage Classification\nFor image classification, we have a number of standard data-sets:\n\nImageNet (a large data-set): --problem=image_imagenet, or one\nof the re-scaled versions (image_imagenet224, image_imagenet64,\nimage_imagenet32)\nCIFAR-10: --problem=image_cifar10 (or\n--problem=image_cifar10_plain to turn off data augmentation)\nCIFAR-100: --problem=image_cifar100\nMNIST: --problem=image_mnist\n\nFor ImageNet, we suggest to use the ResNet or Xception, i.e.,\nuse --model=resnet --hparams_set=resnet_50 or\n--model=xception --hparams_set=xception_base.\nResnet should get to above 76% top-1 accuracy on ImageNet.\nFor CIFAR and MNIST, we suggest to try the shake-shake model:\n--model=shake_shake --hparams_set=shakeshake_big.\nThis setting trained for --train_steps=700000 should yield\nclose to 97% accuracy on CIFAR-10.\nImage Generation\nFor (un)conditional image generation, we have a number of standard data-sets:\n\nCelebA: --problem=img2img_celeba for image-to-image translation, namely,\nsuperresolution from 8x8 to 32x32.\nCelebA-HQ: --problem=image_celeba256_rev for a downsampled 256x256.\nCIFAR-10: --problem=image_cifar10_plain_gen_rev for class-conditional\n32x32 generation.\nLSUN Bedrooms: --problem=image_lsun_bedrooms_rev\nMS-COCO: --problem=image_text_ms_coco_rev for text-to-image generation.\nSmall ImageNet (a large data-set): --problem=image_imagenet32_gen_rev for\n32x32 or --problem=image_imagenet64_gen_rev for 64x64.\n\nWe suggest to use the Image Transformer, i.e., --model=imagetransformer, or\nthe Image Transformer Plus, i.e., --model=imagetransformerpp that uses\ndiscretized mixture of logistics, or variational auto-encoder, i.e.,\n--model=transformer_ae.\nFor CIFAR-10, using --hparams_set=imagetransformer_cifar10_base or\n--hparams_set=imagetransformer_cifar10_base_dmol yields 2.90 bits per\ndimension. For Imagenet-32, using\n--hparams_set=imagetransformer_imagenet32_base yields 3.77 bits per dimension.\nLanguage Modeling\nFor language modeling, we have these data-sets in T2T:\n\nPTB (a small data-set): --problem=languagemodel_ptb10k for\nword-level modeling and --problem=languagemodel_ptb_characters\nfor character-level modeling.\nLM1B (a billion-word corpus): --problem=languagemodel_lm1b32k for\nsubword-level modeling and --problem=languagemodel_lm1b_characters\nfor character-level modeling.\n\nWe suggest to start with --model=transformer on this task and use\n--hparams_set=transformer_small for PTB and\n--hparams_set=transformer_base for LM1B.\nSentiment Analysis\nFor the task of recognizing the sentiment of a sentence, use\n\nthe IMDB data-set: --problem=sentiment_imdb\n\nWe suggest to use --model=transformer_encoder here and since it is\na small data-set, try --hparams_set=transformer_tiny and train for\nfew steps (e.g., --train_steps=2000).\nSpeech Recognition\nFor speech-to-text, we have these data-sets in T2T:\n\n\nLibrispeech (US English): --problem=librispeech for\nthe whole set and --problem=librispeech_clean for a smaller\nbut nicely filtered part.\n\n\nMozilla Common Voice (US English): --problem=common_voice for the whole set\n--problem=common_voice_clean for a quality-checked subset.\n\n\nSummarization\nFor summarizing longer text into shorter one we have these data-sets:\n\nCNN\/DailyMail articles summarized into a few sentences:\n--problem=summarize_cnn_dailymail32k\n\nWe suggest to use --model=transformer and\n--hparams_set=transformer_prepend for this task.\nThis yields good ROUGE scores.\nTranslation\nThere are a number of translation data-sets in T2T:\n\nEnglish-German: --problem=translate_ende_wmt32k\nEnglish-French: --problem=translate_enfr_wmt32k\nEnglish-Czech: --problem=translate_encs_wmt32k\nEnglish-Chinese: --problem=translate_enzh_wmt32k\nEnglish-Vietnamese: --problem=translate_envi_iwslt32k\nEnglish-Spanish: --problem=translate_enes_wmt32k\n\nYou can get translations in the other direction by appending _rev to\nthe problem name, e.g., for German-English use\n--problem=translate_ende_wmt32k_rev\n(note that you still need to download the original data with t2t-datagen\n--problem=translate_ende_wmt32k).\nFor all translation problems, we suggest to try the Transformer model:\n--model=transformer. At first it is best to try the base setting,\n--hparams_set=transformer_base. When trained on 8 GPUs for 300K steps\nthis should reach a BLEU score of about 28 on the English-German data-set,\nwhich is close to state-of-the art. If training on a single GPU, try the\n--hparams_set=transformer_base_single_gpu setting. For very good results\nor larger data-sets (e.g., for English-French), try the big model\nwith --hparams_set=transformer_big.\nSee this example to know how the translation works.\nBasics\nWalkthrough\nHere's a walkthrough training a good English-to-German translation\nmodel using the Transformer model from Attention Is All You\nNeed on WMT data.\npip install tensor2tensor\n\n# See what problems, models, and hyperparameter sets are available.\n# You can easily swap between them (and add new ones).\nt2t-trainer --registry_help\n\nPROBLEM=translate_ende_wmt32k\nMODEL=transformer\nHPARAMS=transformer_base_single_gpu\n\nDATA_DIR=$HOME\/t2t_data\nTMP_DIR=\/tmp\/t2t_datagen\nTRAIN_DIR=$HOME\/t2t_train\/$PROBLEM\/$MODEL-$HPARAMS\n\nmkdir -p $DATA_DIR $TMP_DIR $TRAIN_DIR\n\n# Generate data\nt2t-datagen \\\n  --data_dir=$DATA_DIR \\\n  --tmp_dir=$TMP_DIR \\\n  --problem=$PROBLEM\n\n# Train\n# *  If you run out of memory, add --hparams='batch_size=1024'.\nt2t-trainer \\\n  --data_dir=$DATA_DIR \\\n  --problem=$PROBLEM \\\n  --model=$MODEL \\\n  --hparams_set=$HPARAMS \\\n  --output_dir=$TRAIN_DIR\n\n# Decode\n\nDECODE_FILE=$DATA_DIR\/decode_this.txt\necho \"Hello world\" >> $DECODE_FILE\necho \"Goodbye world\" >> $DECODE_FILE\necho -e 'Hallo Welt\\nAuf Wiedersehen Welt' > ref-translation.de\n\nBEAM_SIZE=4\nALPHA=0.6\n\nt2t-decoder \\\n  --data_dir=$DATA_DIR \\\n  --problem=$PROBLEM \\\n  --model=$MODEL \\\n  --hparams_set=$HPARAMS \\\n  --output_dir=$TRAIN_DIR \\\n  --decode_hparams=\"beam_size=$BEAM_SIZE,alpha=$ALPHA\" \\\n  --decode_from_file=$DECODE_FILE \\\n  --decode_to_file=translation.en\n\n# See the translations\ncat translation.en\n\n# Evaluate the BLEU score\n# Note: Report this BLEU score in papers, not the internal approx_bleu metric.\nt2t-bleu --translation=translation.en --reference=ref-translation.de\n\nInstallation\n# Assumes tensorflow or tensorflow-gpu installed\npip install tensor2tensor\n\n# Installs with tensorflow-gpu requirement\npip install tensor2tensor[tensorflow_gpu]\n\n# Installs with tensorflow (cpu) requirement\npip install tensor2tensor[tensorflow]\n\nBinaries:\n# Data generator\nt2t-datagen\n\n# Trainer\nt2t-trainer --registry_help\n\nLibrary usage:\npython -c \"from tensor2tensor.models.transformer import Transformer\"\n\nFeatures\n\nMany state of the art and baseline models are built-in and new models can be\nadded easily (open an issue or pull request!).\nMany datasets across modalities - text, audio, image - available for\ngeneration and use, and new ones can be added easily (open an issue or pull\nrequest for public datasets!).\nModels can be used with any dataset and input mode (or even multiple); all\nmodality-specific processing (e.g. embedding lookups for text tokens) is done\nwith bottom and top transformations, which are specified per-feature in the\nmodel.\nSupport for multi-GPU machines and synchronous (1 master, many workers) and\nasynchronous (independent workers synchronizing through a parameter server)\ndistributed training.\nEasily swap amongst datasets and models by command-line flag with the data\ngeneration script t2t-datagen and the training script t2t-trainer.\nTrain on Google Cloud ML and Cloud TPUs.\n\nT2T overview\nProblems\nProblems consist of features such as inputs and targets, and metadata such\nas each feature's modality (e.g. symbol, image, audio) and vocabularies. Problem\nfeatures are given by a dataset, which is stored as a TFRecord file with\ntensorflow.Example protocol buffers. All\nproblems are imported in\nall_problems.py\nor are registered with @registry.register_problem. Run\nt2t-datagen\nto see the list of available problems and download them.\nModels\nT2TModels define the core tensor-to-tensor computation. They apply a\ndefault transformation to each input and output so that models may deal with\nmodality-independent tensors (e.g. embeddings at the input; and a linear\ntransform at the output to produce logits for a softmax over classes). All\nmodels are imported in the\nmodels subpackage,\ninherit from T2TModel,\nand are registered with\n@registry.register_model.\nHyperparameter Sets\nHyperparameter sets are encoded in\nHParams\nobjects, and are registered with\n@registry.register_hparams.\nEvery model and problem has a HParams. A basic set of hyperparameters are\ndefined in\ncommon_hparams.py\nand hyperparameter set functions can compose other hyperparameter set functions.\nTrainer\nThe trainer binary is the entrypoint for training, evaluation, and\ninference. Users can easily switch between problems, models, and hyperparameter\nsets by using the --model, --problem, and --hparams_set flags. Specific\nhyperparameters can be overridden with the --hparams flag. --schedule and\nrelated flags control local and distributed training\/evaluation\n(distributed training documentation).\nAdding your own components\nT2T's components are registered using a central registration mechanism that\nenables easily adding new ones and easily swapping amongst them by command-line\nflag. You can add your own components without editing the T2T codebase by\nspecifying the --t2t_usr_dir flag in t2t-trainer.\nYou can do so for models, hyperparameter sets, modalities, and problems. Please\ndo submit a pull request if your component might be useful to others.\nSee the example_usr_dir\nfor an example user directory.\nAdding a dataset\nTo add a new dataset, subclass\nProblem\nand register it with @registry.register_problem. See\nTranslateEndeWmt8k\nfor an example. Also see the data generators\nREADME.\nRun on FloydHub\n\nClick this button to open a Workspace on FloydHub. You can use the workspace to develop and test your code on a fully configured cloud GPU machine.\nTensor2Tensor comes preinstalled in the environment, you can simply open a Terminal and run your code.\n# Test the quick-start on a Workspace's Terminal with this command\nt2t-trainer \\\n  --generate_data \\\n  --data_dir=.\/t2t_data \\\n  --output_dir=.\/t2t_train\/mnist \\\n  --problem=image_mnist \\\n  --model=shake_shake \\\n  --hparams_set=shake_shake_quick \\\n  --train_steps=1000 \\\n  --eval_steps=100\nNote: Ensure compliance with the FloydHub Terms of Service.\nPapers\nWhen referencing Tensor2Tensor, please cite this\npaper.\n@article{tensor2tensor,\n  author    = {Ashish Vaswani and Samy Bengio and Eugene Brevdo and\n    Francois Chollet and Aidan N. Gomez and Stephan Gouws and Llion Jones and\n    \\L{}ukasz Kaiser and Nal Kalchbrenner and Niki Parmar and Ryan Sepassi and\n    Noam Shazeer and Jakob Uszkoreit},\n  title     = {Tensor2Tensor for Neural Machine Translation},\n  journal   = {CoRR},\n  volume    = {abs\/1803.07416},\n  year      = {2018},\n  url       = {http:\/\/arxiv.org\/abs\/1803.07416},\n}\n\nTensor2Tensor was used to develop a number of state-of-the-art models\nand deep learning methods. Here we list some papers that were based on T2T\nfrom the start and benefited from its features and architecture in ways\ndescribed in the Google Research Blog post introducing\nT2T.\n\nAttention Is All You Need\nDepthwise Separable Convolutions for Neural Machine\nTranslation\nOne Model To Learn Them All\nDiscrete Autoencoders for Sequence Models\nGenerating Wikipedia by Summarizing Long\nSequences\nImage Transformer\nTraining Tips for the Transformer Model\nSelf-Attention with Relative Position Representations\nFast Decoding in Sequence Models using Discrete Latent Variables\nAdafactor: Adaptive Learning Rates with Sublinear Memory Cost\nUniversal Transformers\nAttending to Mathematical Language with Transformers\nThe Evolved Transformer\nModel-Based Reinforcement Learning for Atari\nVideoFlow: A Flow-Based Generative Model for Video\n\nNOTE: This is not an official Google product.\n","142":"Mackup\nKeep your application settings in sync.\n\n\nTable of content\n\nQuickstart\nUsage\nWhat does it do\nBullsh*t, what does it really do to my files\nSupported Storages\nSupported Applications\nCan you support application X\nWhy did you do this\nWhat platforms are supported\nWhat's up with the weird name\nWhere can I find more information\n\nQuickstart\nIf you have Dropbox installed and want to use it to\nsave your config files, that's super easy.\nOn OS X, if you want an easy install, you can install\nHomebrew and do:\n# Install Mackup\nbrew install mackup\n\n# Launch it and back up your files\nmackup backup\nIf not running OS X, or you don't like Homebrew, you can use pip.\n\nNote: The below command will check if a previous version of Mackup\nis already installed on your system.\nIf this is the case, it will be upgraded to the latest version.\n\n# Install Mackup with PIP\npip install --upgrade mackup\n\n# Launch it and back up your files\nmackup backup\n\nOn Ubuntu, pip will install to the current user's home\ndirectory rather than system-wide. Because of this, when\ninstalling pip on Ubuntu you will need to run pip install\nwith the --system flag as well (on other platforms this is not\nneeded)\n\nYou're all set and constantly backed up from now on.\nNext, on any new workstation, do:\n# Install Mackup\nbrew install mackup\n\n# Launch it and restore your files\nmackup restore\nDone!\nYou can find more detailed instructions in INSTALL.md.\nUsage\nmackup backup\nBackup your application settings.\nmackup restore\nRestore your application settings on a newly installed workstation.\nmackup uninstall\nCopy back any synced config file to its original place.\nmackup list\nDisplay the list of applications supported by Mackup.\nmackup -h\nGet some help, obviously...\nWhat does it do\n\nBack ups your application settings in a safe directory (e.g. Dropbox)\nSyncs your application settings among all your workstations\nRestores your configuration on any fresh install in one command line\n\nBy only tracking pure configuration files, it keeps the crap out of your\nfreshly new installed workstation (no cache, temporary and locally specific\nfiles are transfered).\nMackup makes setting up the environment easy and simple, saving time for your\nfamily, great ideas, and all the cool stuff you like.\nBullsh*t, what does it really do to my files\nLet's take git as an example. Your settings for git are saved in your home\nfolder, in the .gitconfig file.\nBackup\nIf you have Dropbox, these things happen when you launch mackup backup:\n\ncp ~\/.gitconfig ~\/Dropbox\/Mackup\/.gitconfig\nrm ~\/.gitconfig\nln -s ~\/Dropbox\/Mackup\/.gitconfig ~\/.gitconfig\n\nNow your git config is always backed up and up to date on all your workstations.\nRestore\nWhen you launch mackup restore, here's what it's really doing:\n\nln -s ~\/Dropbox\/Mackup\/.gitconfig ~\/.gitconfig\n\nThat's it, you got your git config setup on your new workstation.\nmackup does the same for any supported application.\nUninstall\nYou can revert all your files to their original state.\n# Just run this\nmackup uninstall\nThis will remove the symlinks and copy back the files from the Mackup folder in\nDropbox to their original places in your home. The Mackup folder and the files\nin it stay put, so that any other computer also running Mackup is unaffected.\nSupported Storages\n\nDropbox\nGoogle Drive\nCopy\niCloud\nAnything able to sync a folder (e.g. Git)\n\nSee the README file in the doc directory for more info.\nUnsupported Storages\n\nBox: No longer supported is it ignores dotfiles, see\nhttps:\/\/github.com\/lra\/mackup\/issues\/807.\n\nSupported Applications\n\n1Password 4\n2Do\nAck\nAdium\nAdobe Camera Raw\nAdobe Illustrator CC\nAdobe Photoshop CC\nAdobe Photoshop Lightroom CC\naerc\nAirmail\nAlacritty\nAmethyst\nAncient Domains of Mystery\nAndroid Studio\nAnsible\nAppCleaner\nHocus Focus\nAppCode\nApple Music\nApptivate\nArara\naria2c\nArm\nArtistic Style\nasciinema\nasdf version manager\nAspell\nAtlantis\nAtom\nAudacious\nAusKey\nAutokey\nAwareness\nAWS Command Line Interface\nBartender\nBash it\nBash\nBat\nBc\nBeatport Pro\nBeets\nBetterSnapTool\nBetterTouchTool\nBibDesk\nBillings Pro Server Admin\nBitBar\nBitchx\nBlackfire\nBlender\nBoto\nBoxer\nBrackets\nBrave\nBump\nBundler\nByobu\nCaffeine\nCalibre\nCapture One\nCartographica\nCerebro\nCharles\nCheat\nChef\nChicken\nChoosy\nchunkwm\nCider\nClashX\nClasp\nClementine\nCLion\nClipMenu\nClipy\nCloudApp\nCoda 2\nColloquy\nColorSchemer Studio 2\nColorSlurp\nColorSync\nComposer\nConcentrate\nConky\nConsular\nControlPlane\nCopyQ\nCoRD\nCotEditor\nCtags\ncVim\nCyberduck\nDaisyDisk\nDataGrip\nDash\nDay-O\nDbVisualizer\nDeal Alert\nDeepin-dde-dock\nDeepin-dde-file-manager\nDeepin-Terminal\nDefault Folder X\nDevil's Pie 2\nDevil's Pie\ndig\nDivvy\nDocker\nDolphin\nDoom Emacs\nDouble Commander\nDoxie\nDraft\nDroplr\nDropzone 3\nDrush\nEditorConfig\nElectrum\nEmacs\nEnjoyable\nEnvironmental Station Alpha\neqMac2\nESLint\nespanso\nExercism\nExpanDrive\nFactorio\nFantastical\nfasd\nfastlane\nFeeds\nFileZilla\nFinicky\nFish\nFisher\nFlexGet\nFlux\nFocus\nFontconfig\nFontExplorer X\nForge\nForkLift\nFranz\nGas Mask\ngdb\nGear Player\nGeekTool\nGHCi\nGhostwriter\nGimp\nGit Hooks\nGit\nGitbox\nGitKraken\nGitUp\nGmail Notifr\nGMVault\nGnome SSH Tunnel Manager\nGnuPG\nGo2Shell\nGoLand\nGoldendict\nGoodSync\nGoShare\nGradle\nGrandTotal 3\ngrsync\nHammerspoon\nHandBrake\nHands Off!\nHazel\nHero Lab\nHeroku\nHexChat\nHexels\nHomebridge\nHomebrew\nHoudini\nHstr\nHtop\nHTTPie\nhub\nHyper.app\nHyperDock\nHyperSwitch\ni2cssh\ni3\nIdeaVim\nIINA\nInkscape\nInsomnia\nIntelliJIDEA\nIPython\nIrssi\niStat Menus\nItsycal\niTerm2\niTermocil\niTunes Scripts\nJanus\nJitouch\nJoplin\njrnl\nJS Beautifier\nJSHint\nJulia\nJumpcut\nJupyter\nK9s\nKaggle\nKaleidoscope\nKarabiner Elements\nKarabiner\nKdenlive\nKeePassX\nKeepingYouAwake\nKeka\nKeybase\nKeyboard Maestro\nKeymo\nKeyRemap4MacBook\nKhd\nkitty\nKrew\nKubectl\nKwm\nLaTeXiT\nLaunchBar\nLedger\nLibreOffice\nLiftoff\nLight Table\nLimeChat\nLiquid Prompt\nLittleSnitch\nLivestreamer\nLollypop\nLuftrausers\nMacDive\nMacDown\nMacOSX\nMacVim\nMagic Launch\nMagicPrefs\nMagnet\nMaid\nMailmate\nMailplane\nmako\nMarked 2\nMarta\nMATLAB\nMaven\nMax\nMenuMeters\nMercurial\nMercuryMover\nMessages\nMicro\nMicrosoft Azure CLI\nMicrosoft Remote Desktop\nmitmproxy\nmkcert\nMonoDevelop\nMoom\nMou\nmpd\nMPlayerX\nMPS Youtube\nMPV\nMultitouch\nMusicBrainz Picard\nmycli\nmyrepos\nMySQL Workbench\nMySQL\nName Mangler\nNano\nNavicat\nncmpcpp\nneovim\nNethack\nNetlify\nnewsbeuter\nngrok\nNomacs\nNoSQLBooster for MongoDB\nnpm\nNushell\nnvALT\nnvpy\nOh My Fish\nOh My Tmux\nOh My Zsh\nOmniFocus\nOmniGraffle\nOpenbox\nOpenEmu\nOpenSSH\nPaintbrush\nPandoc\nPass\nPastebot\nPath Finder\nPDFjam\nPear\nPentadactyl\nPerl\nPhoenix\nPhoneView\nPhpStorm\nPidgin\nPIP\nPixelSnap\nPixelSnap 2\nPnpm\nPock\nPoedit\nPoetry\nPokerStars\nPopClip\nPopcorn-Time\nPostgreSQL\nPostico\nPow\nPowerlevel10k\nPowerline\nPowerline-shell\nPrezto\nProcessing\nProselint\nProxyChains NG\nProxyChains\nPunto Switcher\nPyCharm\nPyPI\nPyRadio\nQuerious\nQuicksilver\nQuitter\nQutebrowser\nR\nRails\nRanger\nRclone\nRectangle\nRedshift Scheduler\nRedshift\nRhythmbox\nRime\nripgrep\nRobomongo\nRofi\nRoyal TSX\nRStudio\nrTorrent\nRubocop\nRuby Version Manager\nRuby Version\nRuby\nRubyMine\nS3cmd\nSABnzbd\nSBCL\nSBT\nScenario\nScreen\nScreenhero\nScrivener\nScroll Reverser\nSecureCRT\nSecure Pipes\nSeil\nSelfControl\nSequel Pro\nShiftIt\nShifty\nShimo\nShowyEdge\nSHSH Blobs\nShuttle\nSizeUp\nskhd\nSkim\nSkitch\nSlate\nSlic3r\nSlogger\nSmartGit\nSmooth Mouse\nSoulver\nSourceTree\nSpaceLauncher\nSpacemacs\nSpaceVim\nSpark\nSpectacle\nSpectrwm\nSplice\nSpotify Notifications\nSpotify\nStarship\nStartupizer2\nStata\nStay\nStoryist\nSublime Merge\nSublime Text\nSubversion\nSuperDuper!\nSurge\nSway\nSwinsian\nT\nTablePlus\nTaskPaper\nTaskwarrior\nTeamocil\nTelegram for macOS\nTerminal\nTerminator\ntermite\nTextExpander\nTextMate\nTextual\nTig\nTilix\nTimeout\ntint2\nTinyFugue\nTmux\nTmuxp\nTmuxinator\nTodo.txt CLI\nToothFairy\nTotalSpaces2\nTower\nTransmission\nTransmit\nTripMode\nTunnelblick\ntvnamer\nTwitterrific\nTypinator\nTypora\nuTorrent\nulauncher\nVentrilo\nVerdaccio\nVersions\nVim\nVimperator\nViscosity\nVisual Studio Code\nVisual Studio Code - Insiders\nVisual Studio Code - OSS\nVSCodium\nVisual Studio for Mac\nVLC\nVolt\nWakatime\nwaybar\nWebStorm\nWget\nWhatsApp Web\nWireshark 2\nWitch\nWordGrinder\nWordPress WP-CLI\nWorkrave\nX11\nXee\nXamarin Studio\nXBindKeys\nXchat\nXcode\nXEmacs\nXLD\nXonsh\nXtraFinder\nyabai\nyarn\nYummy FTP\nzabbix-cli\nzathura\nZsh\n\u00dcbersicht\n\nCan you support application X\nWe can with your help ;)\nPersonalization & configuration\nHave an application that shouldn't be generally supported but that you use?\nOr a cool file you want to sync?\n\nCreate a ~\/.mackup directory to sync an application or any file or directory\n\nWhy did you do this\nYesterday, I had a talk with Zach Zaro, complaining\nabout the pain it is to reconfigure our Macbook each time we get a new one or\ninstall from scratch. That's a talk we have already had months ago.\nI change my workstation every X months. Each time I either lose my apps'\nconfigurations, or I just waste a bunch of hours getting setup like I was on my\nold box. I also spend a lot of time reconfiguring the same stuff again on all my\nworkstations (home, work).\nBoring...\nSome people tried to solve the problem on the application layer, like Github's Boxen,\nbut it solves a different problem, from my point of view. I don't spend a lot\nof time installing or downloading stuff. I spend time configuring it.\nFor years, I've used a personal shell script that was copying known config\nfiles into Subversion, Git or Dropbox, and linked them into my home. But I felt\na lot of us had the same problem: Making a more generic tool could help others\nand I could get help from others to support more apps in the tool.\nSo here comes Mackup, the little tool that will sync all your application\nconfigs to Dropbox (or Google Drive, or anything).\nAnd it's GPL, of course.\nWhat platforms are supported\n\nOS X\nGNU\/Linux\n\nWhat's up with the weird name\nMackup is just a portmanteau of Mac and Backup. It is simple, short, and easy to\nremember, and it corresponds with the whole idea of Mackup: the simpler \u2013 the better!\n(And I suck at naming stuff, but who doesn't.)\nWhere can I find more information\nIn the doc directory.\n","143":"\nChatterBot\nChatterBot is a machine-learning based conversational dialog engine build in\nPython which makes it possible to generate responses based on collections of\nknown conversations. The language independent design of ChatterBot allows it\nto be trained to speak any language.\n\n\n\n\n\n\n\n\n\nAn example of typical input would be something like this:\n\nuser: Good morning! How are you doing?\nbot:  I am doing very well, thank you for asking.\nuser: You're welcome.\nbot: Do you like hats?\n\nHow it works\nAn untrained instance of ChatterBot starts off with no knowledge of how to communicate. Each time a user enters a statement, the library saves the text that they entered and the text that the statement was in response to. As ChatterBot receives more input the number of responses that it can reply and the accuracy of each response in relation to the input statement increase. The program selects the closest matching response by searching for the closest matching known statement that matches the input, it then returns the most likely response to that statement based on how frequently each response is issued by the people the bot communicates with.\nInstallation\nThis package can be installed from PyPi by running:\npip install chatterbot\n\nBasic Usage\nfrom chatterbot import ChatBot\nfrom chatterbot.trainers import ChatterBotCorpusTrainer\n\nchatbot = ChatBot('Ron Obvious')\n\n# Create a new trainer for the chatbot\ntrainer = ChatterBotCorpusTrainer(chatbot)\n\n# Train the chatbot based on the english corpus\ntrainer.train(\"chatterbot.corpus.english\")\n\n# Get a response to an input statement\nchatbot.get_response(\"Hello, how are you today?\")\n\nTraining data\nChatterBot comes with a data utility module that can be used to train chat bots.\nAt the moment there is training data for over a dozen languages in this module.\nContributions of additional training data or training data\nin other languages would be greatly appreciated. Take a look at the data files\nin the chatterbot-corpus\npackage if you are interested in contributing.\nfrom chatterbot.trainers import ChatterBotCorpusTrainer\n\n# Create a new trainer for the chatbot\ntrainer = ChatterBotCorpusTrainer(chatbot)\n\n# Train based on the english corpus\ntrainer.train(\"chatterbot.corpus.english\")\n\n# Train based on english greetings corpus\ntrainer.train(\"chatterbot.corpus.english.greetings\")\n\n# Train based on the english conversations corpus\ntrainer.train(\"chatterbot.corpus.english.conversations\")\n\nCorpus contributions are welcome! Please make a pull request.\nDocumentation\nView the documentation\nfor ChatterBot on Read the Docs.\nTo build the documentation yourself using Sphinx, run:\nsphinx-build -b html docs\/ build\/\n\nExamples\nFor examples, see the examples\ndirectory in this project's git repository.\nThere is also an example Django project using ChatterBot, as well as an example Flask project using ChatterBot.\nHistory\nSee release notes for changes https:\/\/github.com\/gunthercox\/ChatterBot\/releases\nDevelopment pattern for contributors\n\nCreate a fork of\nthe main ChatterBot repository on GitHub.\nMake your changes in a branch named something different from master, e.g. create\na new branch my-pull-request.\nCreate a pull request.\nPlease follow the Python style guide for PEP-8.\nUse the projects built-in automated testing.\nto help make sure that your contribution is free from errors.\n\nLicense\nChatterBot is licensed under the BSD 3-clause license.\n","144":"Gooey\nTurn (almost) any Python 2 or 3 Console Program into a GUI application with one line\n\n\n\nSupport this project\n\n\n\nTable of Contents\n\nGooey\nTable of contents\nLatest Update\nQuick Start\n\nInstallation Instructions\nUsage\nExamples\n\n\nWhat It Is\nWhy Is It\nWho is this for\nHow does it work\nInternationalization\nGlobal Configuration\nLayout Customization\nRun Modes\n\nFull\/Advanced\nBasic\nNo Config\n\n\nMenus\nInput Validation\nUsing Dynamic Values\nShowing Progress\n\nElapsed \/ Remaining Time\n\n\nCustomizing Icons\nPackaging\nScreenshots\nContributing\nImage Credits\n\n\nQuick Start\nInstallation instructions\nThe easiest way to install Gooey is via pip\npip install Gooey \n\nAlternatively, you can install Gooey by cloning the project to your local directory\ngit clone https:\/\/github.com\/chriskiehl\/Gooey.git\n\nrun setup.py\npython setup.py install\n\nNOTE: Python 2 users must manually install WxPython! Unfortunately, this cannot be done as part of the pip installation and should be manually downloaded from the wxPython website.\nUsage\nGooey is attached to your code via a simple decorator on whichever method has your argparse declarations (usually main).\nfrom gooey import Gooey\n\n@Gooey      <--- all it takes! :)\ndef main():\n  parser = ArgumentParser(...)\n  # rest of code\n\nDifferent styling and functionality can be configured by passing arguments into the decorator.\n# options\n@Gooey(advanced=Boolean,          # toggle whether to show advanced config or not \n       language=language_string,  # Translations configurable via json\n       auto_start=True,           # skip config screens all together\n       target=executable_cmd,     # Explicitly set the subprocess executable arguments\n       program_name='name',       # Defaults to script name\n       program_description,       # Defaults to ArgParse Description\n       default_size=(610, 530),   # starting size of the GUI\n       required_cols=1,           # number of columns in the \"Required\" section\n       optional_cols=2,           # number of columns in the \"Optional\" section\n       dump_build_config=False,   # Dump the JSON Gooey uses to configure itself\n       load_build_config=None,    # Loads a JSON Gooey-generated configuration\n       monospace_display=False)   # Uses a mono-spaced font in the output screen\n)\ndef main():\n  parser = ArgumentParser(...)\n  # rest of code\n\nSee: How does it Work section for details on each option.\nGooey will do its best to choose sensible widget defaults to display in the GUI. However, if more fine tuning is desired, you can use the drop-in replacement GooeyParser in place of ArgumentParser. This lets you control which widget displays in the GUI. See: GooeyParser\nfrom gooey import Gooey, GooeyParser\n\n@Gooey\ndef main():\n  parser = GooeyParser(description=\"My Cool GUI Program!\") \n  parser.add_argument('Filename', widget=\"FileChooser\")\n  parser.add_argument('Date', widget=\"DateChooser\")\n  ...\n\nExamples\nGooey downloaded and installed? Great! Wanna see it in action? Head over the the Examples Repository to download a few ready-to-go example scripts. They'll give you a quick tour of all Gooey's various layouts, widgets, and features.\nDirect Download\nWhat is it?\nGooey converts your Console Applications into end-user-friendly GUI applications. It lets you focus on building robust, configurable programs in a familiar way, all without having to worry about how it will be presented to and interacted with by your average user.\nWhy?\nBecause as much as we love the command prompt, the rest of the world looks at it like an ugly relic from the early '80s. On top of that, more often than not programs need to do more than just one thing, and that means giving options, which previously meant either building a GUI, or trying to explain how to supply arguments to a Console Application. Gooey was made to (hopefully) solve those problems. It makes programs easy to use, and pretty to look at!\nWho is this for?\nIf you're building utilities for yourself, other programmers, or something which produces a result that you want to capture and pipe over to another console application (e.g. *nix philosophy utils), Gooey probably isn't the tool for you. However, if you're building 'run and done,' around-the-office-style scripts, things that shovel bits from point A to point B, or simply something that's targeted at a non-programmer, Gooey is the perfect tool for the job. It lets you build as complex of an application as your heart desires all while getting the GUI side for free.\nHow does it work?\nGooey is attached to your code via a simple decorator on whichever method has your argparse declarations.\n@Gooey\ndef my_run_func():\n  parser = ArgumentParser(...)\n  # rest of code\n\nAt run-time, it parses your Python script for all references to ArgumentParser. (The older optparse is currently not supported.) These references are then extracted, assigned a component type based on the 'action' they provide, and finally used to assemble the GUI.\nMappings:\nGooey does its best to choose sensible defaults based on the options it finds. Currently, ArgumentParser._actions are mapped to the following WX components.\n\n\n\nParser Action\nWidget\nExample\n\n\n\n\nstore\nTextCtrl\n\n\n\nstore_const\nCheckBox\n\n\n\nstore_true\nCheckBox\n\n\n\nstore_False\nCheckBox\n\n\n\nappend\nTextCtrl\n\n\n\ncount\nDropDown \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\nMutually Exclusive Group\nRadioGroup\n\n\n\nchoice \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nDropDown\n\n\n\n\nGooeyParser\nIf the above defaults aren't cutting it, you can control the exact widget type by using the drop-in ArgumentParser replacement GooeyParser. This gives you the additional keyword argument widget, to which you can supply the name of the component you want to display. Best part? You don't have to change any of your argparse code to use it. Drop it in, and you're good to go.\nExample:\nfrom argparse import ArgumentParser\n....\n\ndef main(): \n    parser = ArgumentParser(description=\"My Cool Gooey App!\")\n    parser.add_argument('filename', help=\"name of the file to process\") \n\nGiven then above, Gooey would select a normal TextField as the widget type like this:\n\n\n\nHowever, by dropping in GooeyParser and supplying a widget name, you can display a much more user friendly FileChooser\nfrom gooey import GooeyParser\n....\n\ndef main(): \n    parser = GooeyParser(description=\"My Cool Gooey App!\")\n    parser.add_argument('filename', help=\"name of the file to process\", widget='FileChooser') \n\n\nCustom Widgets:\n\n\n\nWidget\nExample\n\n\n\n\nDirChooser, FileChooser, MultiFileChooser, FileSaver, MultiFileSaver\n\n\n\nDateChooser\/TimeChooser   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n Please note that for both of these widgets the values passed to the application will always be in ISO format while localized values may appear in some parts of the GUI depending on end-user settings.\n\n\nPasswordField\n\n\n\nListbox\n\n\n\nBlockCheckbox\n  The default InlineCheck box can look less than ideal if a large help text block is present. BlockCheckbox moves the text block to the normal position and provides a short-form block_label for display next to the control. Use gooey_options.checkbox_label to control the label text\n\n\nColourChooser   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\nFilterableDropdown\n\n\n\n\nInternationalization\n\nGooey is international ready and easily ported to your host language. Languages are controlled via an argument to the Gooey decorator.\n@Gooey(language='russian')\ndef main(): \n    ... \n\nAll program text is stored externally in json files. So adding new language support is as easy as pasting a few key\/value pairs in the gooey\/languages\/ directory.\nThanks to some awesome contributers, Gooey currently comes pre-stocked with over 18 different translations!\nWant to add another one? Submit a pull request!\n\nGlobal Configuration\nJust about everything in Gooey's overall look and feel can be customized by passing arguments to the decorator.\n\n\n\nParameter\nSummary\n\n\n\n\nencoding\nText encoding to use when displaying characters (default: 'utf-8')\n\n\nuse_legacy_titles\nRewrites the default argparse group name from \"Positional\" to \"Required\". This is primarily for retaining backward compatibility with previous versions of Gooey (which had poor support\/awareness of groups and did its own naive bucketing of arguments).\n\n\nadvanced\nToggles whether to show the 'full' configuration screen, or a simplified version\n\n\nauto_start\nSkips the configuration all together and runs the program immediately\n\n\nlanguage\nTells Gooey which language set to load from the gooey\/languages directory.\n\n\ntarget\nTells Gooey how to re-invoke itself. By default Gooey will find python, but this allows you to specify the program (and arguments if supplied).\n\n\nsuppress_gooey_flag\nShould be set when using a custom target. Prevent Gooey from injecting additional CLI params\n\n\nprogram_name\nThe name displayed in the title bar of the GUI window. If not supplied, the title defaults to the script name pulled from sys.argv[0].\n\n\nprogram_description\nSets the text displayed in the top panel of the Settings screen. Defaults to the description pulled from ArgumentParser.\n\n\ndefault_size\nInitial size of the window\n\n\nfullscreen\nstart Gooey in fullscreen mode\n\n\nrequired_cols\nControls how many columns are in the Required Arguments section  \u26a0\ufe0f Deprecation notice: See Group Parameters for modern layout controls\n\n\noptional_cols\nControls how many columns are in the Optional Arguments section  \u26a0\ufe0f Deprecation notice: See Group Parameters for modern layout controls\n\n\ndump_build_config\nSaves a json copy of its build configuration on disk for reuse\/editing\n\n\nload_build_config\nLoads a json copy of its build configuration from disk\n\n\nmonospace_display\nUses a mono-spaced font in the output screen  \u26a0\ufe0f Deprecation notice: See Group Parameters for modern font configuration\n\n\nimage_dir\nPath to the directory in which Gooey should look for custom images\/icons\n\n\nlanguage_dir\nPath to the directory in which Gooey should look for custom languages files\n\n\ndisable_stop_button\nDisable the Stop button when running\n\n\nshow_stop_warning\nDisplays a warning modal before allowing the user to force termination of your program\n\n\nforce_stop_is_error\nToggles whether an early termination by the shows the success or error screen\n\n\nshow_success_modal\nToggles whether or not to show a summary modal after a successful run\n\n\nshow_failure_modal\nToggles whether or not to show a summary modal on failure\n\n\nshow_restart_button\nToggles whether or not to show the restart button at the end of execution\n\n\nrun_validators\nControls whether or not to have Gooey perform validation before calling your program\n\n\npoll_external_updates\n(Experimental!) When True, Gooey will call your code with a gooey-seed-ui CLI argument and use the response to fill out dynamic values in the UI (See: Using Dynamic Values)\n\n\nuse_cmd_args\nSubstitute any command line arguments provided at run time for the default values specified in the Gooey configuration\n\n\nreturn_to_config\nWhen True, Gooey will return to the configuration settings window upon successful run\n\n\nprogress_regex\nA text regex used to pattern match runtime progress information. See: Showing Progress for a detailed how-to\n\n\nprogress_expr\nA python expression applied to any matches found via the progress_regex. See: Showing Progress for a detailed how-to\n\n\nhide_progress_msg\nOption to hide textual progress updates which match the progress_regex. See: Showing Progress for a detailed how-to\n\n\ndisable_progress_bar_animation\nDisable the progress bar\n\n\ntiming_options\nThis contains the options for displaying time remaining and elapsed time, to be used with progress_regex and progress_expr. Elapsed \/ Remaining Time. Contained as a dictionary with the options show_time_remaining and hide_time_remaining_on_complete. Eg: timing_options={'show_time_remaining':True,'hide_time_remaining_on_complete':True}\n\n\nshow_time_remaining\nDisable the time remaining text see Elapsed \/ Remaining Time\n\n\nhide_time_remaining_on_complete\nHide time remaining on complete screen see Elapsed \/ Remaining Time\n\n\nrequires_shell\nControls whether or not the shell argument is used when invoking your program. More info here\n\n\nnavigation\nSets the \"navigation\" style of Gooey's top level window. Options:   TABBEDSIDEBAR   \n\n\nsidebar_title\n Controls the heading title above the SideBar's navigation pane. Defaults to: \"Actions\"\n\n\nshow_sidebar\nShow\/Hide the sidebar in when navigation mode == SIDEBAR\n\n\nbody_bg_color\nHEX value of the main Gooey window\n\n\nheader_bg_color\nHEX value of the header background\n\n\nheader_height\nheight in pixels of the header\n\n\nheader_show_title\nShow\/Hide the header title\n\n\nheader_show_subtitle\nShow\/Hide the header subtitle\n\n\nfooter_bg_color\nHEX value of the Footer background\n\n\nsidebar_bg_color\nHEX value of the Sidebar's background\n\n\nterminal_panel_color\nHEX value of the terminal's panel\n\n\nterminal_font_color\nHEX value of the font displayed in Gooey's terminal\n\n\nterminal_font_family\nName of the Font Family to use in the terminal\n\n\nterminal_font_weight\nWeight of the font (constants.FONTWEIGHT_NORMAL, constants.FONTWEIGHT_XXX)\n\n\nterminal_font_size\nPoint size of the font displayed in the terminal\n\n\nerror_color\nHEX value of the text displayed when a validation error occurs\n\n\nrichtext_controls\nSwitch on\/off the console support for terminal control sequences (limited support for font weight and color). Defaults to : False. See docs for additional details\n\n\nmenus\nShow custom menu groups and items (see: Menus\n\n\nclear_before_run\nWhen true, previous output will be cleared from the terminal when running program again\n\n\n\nLayout Customization\nYou can achieve fairly flexible layouts with Gooey by using a few simple customizations.\nAt the highest level, you have several overall layout options controllable via various arguments to the Gooey decorator.\n\n\n\nshow_sidebar=True\nshow_sidebar=False\nnavigation='TABBED'\ntabbed_groups=True\n\n\n\n\n\n\n\n\n\n\n\nGrouping Inputs\nBy default, if you're using Argparse with Gooey, your inputs will be split into two buckets: positional and optional. However, these aren't always the most descriptive groups to present to your user. You can arbitrarily bucket inputs into logic groups and customize the layout of each.\nWith argparse this is done via add_argument_group()\n\nparser = ArgumentParser()\nsearch_group = parser.add_argument_group(\n    \"Search Options\", \n    \"Customize the search options\"\n)\n\nYou can add arguments to the group as normal\nsearch_group.add_argument(\n    '--query', \n    help='Base search string'\n) \n\nWhich will display them as part of the group within the UI.\nRun Modes\nGooey has a handful of presentation modes so you can tailor its layout to your content type and user's level or experience.\nAdvanced\nThe default view is the \"full\" or \"advanced\" configuration screen. It has two different layouts depending on the type of command line interface it's wrapping. For most applications, the flat layout will be the one to go with, as its layout matches best to the familiar CLI schema of a primary command followed by many options (e.g. Curl, FFMPEG).\nOn the other side is the Column Layout. This one is best suited for CLIs that have multiple paths or are made up of multiple little tools each with their own arguments and options (think: git). It displays the primary paths along the left column, and their corresponding arguments in the right. This is a great way to package a lot of varied functionality into a single app.\n\n\n\nBoth views present each action in the Argument Parser as a unique GUI component. It makes it ideal for presenting the program to users which are unfamiliar with command line options and\/or Console Programs in general. Help messages are displayed along side each component to make it as clear as possible which each widget does.\nSetting the layout style:\nCurrently, the layouts can't be explicitly specified via a parameter (on the TODO!). The layouts are built depending on whether or not there are subparsers used in your code base. So, if you want to trigger the Column Layout, you'll need to add a subparser to your argparse code.\nIt can be toggled via the advanced parameter in the Gooey decorator.\n@gooey(advanced=True)\ndef main():\n    # rest of code   \n\n\nBasic\nThe basic view is best for times when the user is familiar with Console Applications, but you still want to present something a little more polished than a simple terminal. The basic display is accessed by setting the advanced parameter in the gooey decorator to False.\n@gooey(advanced=False)\ndef main():\n    # rest of code  \n\n\n\n\n\nNo Config\nNo Config pretty much does what you'd expect: it doesn't show a configuration screen. It hops right to the display section and begins execution of the host program. This is the one for improving the appearance of little one-off scripts.\n\n\n\n\nMenus\n\n\nAdded 1.0.2\n\nYou can add a Menu Bar to the top of Gooey with customized menu groups and items.\nMenus are specified on the main @Gooey decorator as a list of maps.\n@Gooey(menu=[{}, {}, ...])\n\nEach map is made up of two key\/value pairs\n\nname - the name for this menu group\nitems - the individual menu items within this group\n\nYou can have as many menu groups as you want. They're passed as a list to the menu argument on the @Gooey decorator.\n@Gooey(menu=[{'name': 'File', 'items: []},\n             {'name': 'Tools', 'items': []},\n             {'name': 'Help', 'items': []}])\n\nIndividual menu items in a group are also just maps of key \/ value pairs. Their exact key set varies based on their type, but two keys will always be present:\n\ntype - this controls the behavior that will be attached to the menu item as well as the keys it needs specified\nmenuTitle - the name for this MenuItem\n\nCurrently, three types of menu options are supported:\n\nAboutDialog\nMessageDialog\nLink\n\n\nAbout Dialog is your run-of-the-mill About Dialog. It displays program information such as name, version, and license info in a standard native AboutBox.\nSchema\n\nname - (optional)\ndescription - (optional)\nversion - (optional)\ncopyright - (optional)\nlicense - (optional)\nwebsite - (optional)\ndeveloper - (optional)\n\nExample:\n{\n    'type': 'AboutDialog',\n    'menuTitle': 'About',\n    'name': 'Gooey Layout Demo',\n    'description': 'An example of Gooey\\'s layout flexibility',\n    'version': '1.2.1',\n    'copyright': '2018',\n    'website': 'https:\/\/github.com\/chriskiehl\/Gooey',\n    'developer': 'http:\/\/chriskiehl.com\/',\n    'license': 'MIT'\n}\n\n\nMessageDialog is a generic informational dialog box. You can display anything from small alerts, to long-form informational text to the user.\nSchema:\n\nmessage - (required) the text to display in the body of the modal\ncaption - (optional) the caption in the title bar of the modal\n\nExample:\n{\n    'type': 'MessageDialog',\n    'menuTitle': 'Information',\n    'message': 'Hey, here is some cool info for ya!',\n    'caption': 'Stuff you should know'\n}\nLink is for sending the user to an external website. This will spawn their default browser at the URL you specify.\nSchema:\n\nurl - (required) - the fully qualified URL to visit\n\nExample:\n{\n    'type': 'Link',\n    'menuTitle': 'Visit Out Site',\n    'url': 'http:\/\/www.example.com'\n}\nA full example:\nTwo menu groups (\"File\" and \"Help\") with four menu items between them.\n@Gooey(\n    program_name='Advanced Layout Groups',\n    menu=[{\n        'name': 'File',\n        'items': [{\n                'type': 'AboutDialog',\n                'menuTitle': 'About',\n                'name': 'Gooey Layout Demo',\n                'description': 'An example of Gooey\\'s layout flexibility',\n                'version': '1.2.1',\n                'copyright': '2018',\n                'website': 'https:\/\/github.com\/chriskiehl\/Gooey',\n                'developer': 'http:\/\/chriskiehl.com\/',\n                'license': 'MIT'\n            }, {\n                'type': 'MessageDialog',\n                'menuTitle': 'Information',\n                'caption': 'My Message',\n                'message': 'I am demoing an informational dialog!'\n            }, {\n                'type': 'Link',\n                'menuTitle': 'Visit Our Site',\n                'url': 'https:\/\/github.com\/chriskiehl\/Gooey'\n            }]\n        },{\n        'name': 'Help',\n        'items': [{\n            'type': 'Link',\n            'menuTitle': 'Documentation',\n            'url': 'https:\/\/www.readthedocs.com\/foo'\n        }]\n    }]\n)\n\nInput Validation\n\n\n\u26a0\ufe0f\nNote! This functionality is experimental. Its API may be changed or removed altogether. Feedback\/thoughts on this feature is welcome and encouraged!\n\nGooey can optionally do some basic pre-flight validation on user input. Internally, it uses these validator functions to check for the presence of required arguments. However, by using GooeyParser, you can extend these functions with your own validation rules. This allows Gooey to show much, much more user friendly feedback before it hands control off to your program.\nWriting a validator:\nValidators are specified as part of the gooey_options map available to GooeyParser. It's a simple map structure made up of a root key named validator and two internal pairs:\n\ntest The inner body of the validation test you wish to perform\nmessage the error message that should display given a validation failure\n\ne.g.\ngooey_options={\n    'validator':{\n        'test': 'len(user_input) > 3',\n        'message': 'some helpful message'\n    }\n}\n\nThe test function\nYour test function can be made up of any valid Python expression. It receives the variable user_input as an argument against which to perform its validation. Note that all values coming from Gooey are in the form of a string, so you'll have to cast as needed in order to perform your validation.\nFull Code Example\nfrom gooey.python_bindings.gooey_decorator import Gooey\nfrom gooey.python_bindings.gooey_parser import GooeyParser\n\n@Gooey\ndef main():\n    parser = GooeyParser(description='Example validator')\n    parser.add_argument(\n        'secret',\n        metavar='Super Secret Number',\n        help='A number specifically between 2 and 14',\n        gooey_options={\n            'validator': {\n                'test': '2 <= int(user_input) <= 14',\n                'message': 'Must be between 2 and 14'\n            }\n        })\n\n    args = parser.parse_args()\n\n    print(\"Cool! Your secret number is: \", args.secret)\n\n\nWith the validator in place, Gooey can present the error messages next to the relevant input field if any validators fail.\n\nUsing Dynamic Values\n\n\u26a0\ufe0f\nNote! This functionality is experimental. Its API may be changed or removed altogether. Feedback on this feature is welcome and encouraged!\n\nGooey's Choice style fields (Dropdown, Listbox) can be fed a dynamic set of values at runtime by enabling the poll_external_updates option. This will cause Gooey to request updated values from your program every time the user visits the Configuration page. This can be used to, for instance, show the result of a previous execution on the config screen without requiring that the user restart the program.\nHow does it work?\n\nAt runtime, whenever the user hits the Configuration screen, Gooey will call your program with a single CLI argument: gooey-seed-ui. This is a request to your program for updated values for the UI. In response to this, on stdout, your program should return a JSON string mapping cli-inputs to a list of options.\nFor example, assuming a setup where you have a dropdown that lists user files:\n ...\n parser.add_argument(\n        '--load',\n        metavar='Load Previous Save',\n        help='Load a Previous save file',\n        dest='filename',\n        widget='Dropdown',\n        choices=list_savefiles(),\n    )\n\nHere the input we want to populate is --load. So, in response to the gooey-seed-ui request, you would return a JSON string with --load as the key, and a list of strings that you'd like to display to the user as the value. e.g.\n{\"--load\": [\"Filename_1.txt\", \"filename_2.txt\", ..., \"filename_n.txt]}\n\nCheckout the full example code in the Examples Repository. Or checkout a larger example in the silly little tool that spawned this feature: SavingOverIt.\n\nShowing Progress\n\nGiving visual progress feedback with Gooey is easy! If you're already displaying textual progress updates, you can tell Gooey to hook into that existing output in order to power its Progress Bar.\nFor simple cases, output strings which resolve to a numeric representation of the completion percentage (e.g. Progress 83%) can be pattern matched and turned into a progress bar status with a simple regular expression (e.g. @Gooey(progress_regex=r\"^progress: (\\d+)%$\")).\nFor more complicated outputs, you can pass in a custom evaluation expression (progress_expr) to transform regular expression matches as needed.\nOutput strings which satisfy the regular expression can be hidden from the console via the hide_progress_msg parameter (e.g. @Gooey(progress_regex=r\"^progress: (\\d+)%$\", hide_progress_msg=True).\nRegex and Processing Expression\n@Gooey(progress_regex=r\"^progress: (?P<current>\\d+)\/(?P<total>\\d+)$\",\n       progress_expr=\"current \/ total * 100\")\nProgram Output:\nprogress: 1\/100\nprogress: 2\/100\nprogress: 3\/100\n...\n\nThere are lots of options for telling Gooey about progress as your program is running. Checkout the Gooey Examples repository for more detailed usage and examples!\nElapsed \/ Remaining Time\nGooey also supports tracking elapsed \/ remaining time when progress is used! This is done in a similar manner to that of the project tqdm. This can be enabled with timing_options, the timing_options argument takes in a dictionary with the keys show_time_remaining and hide_time_remaining_on_complete. The default behavior is True for show_time_remaining and False for hide_time_remaining_on_complete. This will only work when progress_regex and progress_expr are used.\n@Gooey(progress_regex=r\"^progress: (?P<current>\\d+)\/(?P<total>\\d+)$\",\n       progress_expr=\"current \/ total * 100\",\n       timing_options = {\n        'show_time_remaining':True,\n        'hide_time_remaining_on_complete':True,\n    })\n\n\nCustomizing Icons\nGooey comes with a set of six default icons. These can be overridden with your own custom images\/icons by telling Gooey to search additional directories when initializing. This is done via the image_dir argument to the Gooey decorator.\n@Gooey(program_name='Custom icon demo', image_dir='\/path\/to\/my\/image\/directory')\ndef main():\n    # rest of program\n\nImages are discovered by Gooey based on their filenames. So, for example, in order to supply a custom configuration icon, simply place an image with the filename config_icon.png in your images directory. These are the filenames which can be overridden:\n\nprogram_icon.png\nsuccess_icon.png\nrunning_icon.png\nloading_icon.gif\nconfig_icon.png\nerror_icon.png\n\nPackaging\nThanks to some awesome contributers, packaging Gooey as an executable is super easy.\nThe tl;dr pyinstaller version is to drop this build.spec into the root directory of your application. Edit its contents so that the application and name are relevant to your project, then execute pyinstaller build.spec to bundle your app into a ready-to-go executable.\nDetailed step by step instructions can be found here.\nScreenshots\n\n\n\nFlat Layout\nColumn Layout\nSuccess Screen\nError Screen\nWarning Dialog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Groups\nTabbed Groups\nTabbed Navigation\nSidebar Navigation\nInput Validation\n\n\n\n\n\n\n\n\n\n\n\n\n\nWanna help?\nCode, translation, documentation, or graphics? All pull requests are welcome. Just make sure to checkout the contributing guidelines first.\n","145":"\nWalle 2.0 - \u5b98\u65b9\u4e3b\u9875\n\n\n\n\n\u5b57\u8282\u8df3\u52a8\u5185\u63a8\uff1aToB Lark \u62db\u8058\u5927\u6570\u636e\u7814\u53d1\u3001\u6570\u636e\u5206\u6790\u5e08\uff0c\u673a\u4f1a\u6781\u4f73\uff0c\u8bf7\u52ff\u9519\u8fc7\u3002\u8bf7\u5404\u4f4d\u670b\u53cb\u6269\u6563\u4e0b\u6709\u9700\u8981\u7684\u540c\u5b66\uff0c\u76f4\u8fbe\u5185\u63a8\u94fe\u63a5\uff0c\u5e2e\u52a9\u5185\u63a8\uff0c\u541b\u5b50\u6210\u4eba\u4e4b\u7f8e\uff0c\u8c22\u8c22\u3002\n\u529f\u80fd\u5f3a\u5927\uff0c\u4e14\u514d\u8d39\u5f00\u6e90\u7684walle-web \u74e6\u529b\u7ec8\u4e8e\u66f4\u65b02.0.0\u4e86\uff01\uff01\uff01\nwalle \u8ba9\u7528\u6237\u4ee3\u7801\u53d1\u5e03\u7ec8\u4e8e\u53ef\u4ee5\u4e0d\u53ea\u80fd\u9009\u62e9 jenkins\uff01\u652f\u6301\u5404\u79cdweb\u4ee3\u7801\u53d1\u5e03\uff0cphp\u3001java\u3001python\u3001go\u7b49\u4ee3\u7801\u7684\u53d1\u5e03\u3001\u56de\u6eda\u53ef\u4ee5\u901a\u8fc7web\u6765\u4e00\u952e\u5b8c\u6210\u3002walle \u4e00\u4e2a\u53ef\u81ea\u7531\u914d\u7f6e\u9879\u76ee\uff0c\u66f4\u4eba\u6027\u5316\uff0c\u9ad8\u989c\u503c\uff0c\u652f\u6301git\u3001\u591a\u7528\u6237\u3001\u591a\u8bed\u8a00\u3001\u591a\u9879\u76ee\u3001\u591a\u73af\u5883\u540c\u65f6\u90e8\u7f72\u7684\u5f00\u6e90\u4e0a\u7ebf\u90e8\u7f72\u7cfb\u7edf\u3002\n2.0.0 \u5360\u7528\u4e86\u6211\u51e0\u4e4e\u6240\u6709\u4e1a\u4f59\u65f6\u95f4\uff0c\u7cbe\u529b\u4e0e\u91d1\u94b1\u4ed8\u51fa\u6362\u5404\u4f4d\u4f7f\u7528\u6536\u76ca\uff0c\u671b\u5404\u4f4d\u559c\u6b22\u4e0d\u541d\u987a\u624b star \u4ee5\u793a\u652f\u6301\uff0c\u9879\u76ee\u66f4\u597d\u4ea6\u53cd\u9988\u4e88\u4f60\u3002\u76ee\u524d 2.0.0 \u5df2\u7ecf\u53d1\u5e03\uff0c\u8bf7\u4fdd\u6301\u5173\u6ce8\uff0c\u6211\u4f1a\u5728\u516c\u4f17\u53f7\u66f4\u65b0\uff08\u5728\u6700\u4e0b\u9762\uff09\u3002\n\u6709\u63a8\u5e7f\u8d44\u6e90\uff08\u5f00\u6e90\u6587\u7ae0\u63a8\u8350\u3001\u5927\u4f1a\u5206\u4eab\uff09\u7684\u540c\u5b66\uff0c\u8bf7\u5fae\u4fe1\u8054\u7cfb\u6211\uff0c\u5f3a\u70c8\u9700\u8981\u5e2e\u52a9\u3002\u53e6\u5916\uff0c\u8001\u7248\u672c\u5df2\u8fc1\u79fb\u5230 walle 1.x \u7684\u540c\u5b66\u52a1\u5fc5\u4e0d\u8981\u518d\u66f4\u65b0\u4e86\uff0c\u4e24\u4e2a\u7248\u672c\u4e0d\u517c\u5bb9\nFeature\n\n\u7c7bgitlab\u7684RESTful API\uff0c\u7c7bgitlab\u7684\u6743\u9650\u6a21\u578b\u3002\u5c06\u6765\u6253\u901agitlab\uff0c\u826f\u5fc3\u7684\u60ca\u559c\n\u7a7a\u95f4\u7ba1\u7406\u3002\u610f\u5473\u7740\u6709\u72ec\u7acb\u7684\u7a7a\u95f4\u8d44\u6e90\uff1a\u73af\u5883\u7ba1\u7406\u3001\u7528\u6237\u7ec4\u3001\u9879\u76ee\u3001\u670d\u52a1\u5668\u7b49\n\u7070\u5ea6\u53d1\u5e03\u3002\u547c\u58f0\u4e0d\u65ad\uff0c\u7ec8\u4e8e\u6765\u4e86\n\u9879\u76ee\u7ba1\u7406\u3002Deploy\u3001Release\u7684\u524d\u7f6e\u53ca\u540e\u7f6ehook\uff0c\u81ea\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\uff1b\u81ea\u5e26\u68c0\u6d4b\u3001\u590d\u5236\u529f\u80fd\uff0c\u90fd\u8d34\u5fc3\u5230\u8fd9\u79cd\u7a0b\u5ea6\u4e86\nwebsocket \u5b9e\u65f6\u5c55\u793a\u90e8\u7f72\u4e2d\u7684 shell console\uff0c\u8ddf\u771f\u7684\u7ec8\u7aef\u957f\u5f97\u4e00\u6837\u3002\n\u5b8c\u5584\u7684\u901a\u77e5\u673a\u5236\u3002\u90ae\u4ef6\u3001\u9489\u9489\n\u5168\u65b0\u7684UI\uff0c\u6211\u81ea\u5df1\u90fd\u88ab\u9707\u64bc\u5230\u4e86\uff0c\u5982\u4e1d\u822c\u6d41\u7545\n\nArchitecture\n\n\nPreview\n\n\n\n\n\nInstallation\n\u5feb\u901f\u5b89\u88c5 | \u5b89\u88c5\u9519\u8bef | \u5e38\u89c1\u9519\u8bef\u6392\u89e3\nRoadmap\n\n \u9884\u89c8\u7248  2018-12-02\n\n\u5b89\u88c5\u6587\u6863\u3001\u524d\u540e\u7aef\u4ee3\u7801\u3001Data Migration\n\n\n Alpha 2018-12-09\n\n\u4f7f\u7528\u6587\u6863\u3001Trouble Shooting\u3001\u516c\u4f17\u53f7\u66f4\u65b0\n\n\n Beta 2018-12-23 \ud83c\udf85\u5723\u8bde\u591c\u524d\u5915\n\n\u9489\u9489\/\u90ae\u4ef6\u6d88\u606f\u901a\u77e5\n\u63a5\u53d7\u5b98\u7f51logo\u4f01\u4e1a\u7684Trouble Shooting\n\n\n 2.0.0  2018-12-30 1\ufe0f\u20e3\u5143\u65e6\u524d\u5915\n\n\u9879\u76ee\u68c0\u6d4b\u3001\u590d\u5236\n\u4efb\u52a1\u7684\u56de\u6eda\nreleased tag\u3001\u4f7f\u7528\u6587\u6863\nDocker \u955c\u50cf\nJava\u914d\u7f6e\u6a21\u677f\nPHP\u914d\u7f6e\u6a21\u677f\ngithub 5000 star\n\n\n 2.0.1  2019-01-13\n\n\u9879\u76ee\u914d\u7f6e\u6dfb\u52a0\u81ea\u5b9a\u4e49\u53d8\u91cf\nPython 3.7+\u517c\u5bb9\n\n\n2.1.0  2019-03-22\n\n\u8d85\u7ba1\u6743\u9650\u5b8c\u5584\nDashboard 1.0\uff08\u5168\u65b0\u7684\u73a9\u6cd5\uff0c\u6b22\u8fce\u63d0issue\uff09\n3\u670824\u65e5\u5f00\u6e90\u4e2d\u56fd\u82cf\u5dde\u6e90\u521b\u4f1a-\u5f00\u6e90\u7efc\u5408\u6280\u672f\u4e3b\u9898\u300a\u5f00\u6e90\u6784\u5efa\u591a\u7a7a\u95f4\u53ef\u89c6\u5316\u4e00\u952e\u90e8\u7f72Devops\u5e73\u53f0\u300b\n\n\n2.2.0  2019-04-22\n\nwebhook (gitlab)\n\u4e0a\u7ebf\u65f6\u95f4\u8bb0\u5f55\u3001\u547d\u4ee4\u4e0e\u7ed3\u679c\u62c6\u5206\u3001\u5b9e\u65f6console\n\u5bbf\u4e3b\u673a\u8d44\u6e90\u76d1\u63a7\n\n\n2.3.0  2019-05-27\n\n\u63d2\u4ef6\u5316\uff1amaven\u3001npm\npipeline\u5f0f\n\n\n2.4.0  2019-06-17\n\ni18n \u56fd\u9645\u5316\n\n\n2.5.0  2019-07-29\n\n\u4e0a\u7ebf\u5355Diff\n\u6d88\u606f\u901a\u77e5\u5b9a\u5236\u5316\uff1a\u9489\u9489\u3001\u90ae\u4ef6\u3001\u4f01\u4e1a\u5fae\u4fe1\n\n\n2.6.0  2019-08-19\n\n\u6279\u91cf\u7ba1\u7406\u670d\u52a1\u5668\n\u8de8\u7a7a\u95f4\u590d\u5236\u9879\u76ee\nApp\u6253\u5305\u5e73\u53f0\nDashboard 2.0\n\n\n\u66f4\u591a\u9700\u6c42\u6536\u96c6\u4e2d\n\nDiscussing\n\nsubmit issue\n\n\u52fe\u642d\u4e0b\n\u5199\u5f00\u6e90\u662f\u6211\u7684\u4e1a\u4f59\u7231\u597d\uff0c\u5927\u6570\u636e\u5e73\u53f0\u548c\u8425\u9500\u6280\u672f\u624d\u662f\u4e3b\u4e1a\uff0c\u65e0\u8bba\u54ea\u4e2a\u90fd\u6b22\u8fce\u4ea4\u6d41\u3002\n\u4eba\u8109\u4e5f\u662f\u4e00\u9879\u91cd\u8981\u80fd\u529b\uff0c\u8bf7\u5907\u6ce8\u59d3\u540d@\u516c\u53f8\uff0c\u8c22\u8c22\uff1a\uff09\n\n\n\n\n\n\n\n\n\u65b0\u7684\u60ca\u559c\n\u540e\u7eed\u66f4\u65b0\u548c\u89e3\u5256\u8ba8\u8bba\u3001\u4ee5\u53cawalle\u6709\u8da3\u7684\u4eba\u548c\u4e8b\uff0c\u5c06\u4f1a\u653e\u5230\u516c\u4f17\u53f7\uff1awalle-web\uff0c\u6668\u95f4\u9664\u4e86\u5199\u5f00\u6e90\uff0c\u4e5f\u4f1a\u5199\u5343\u5b57\u6587\uff0c\u5173\u6ce8\u4e0d\u8ff7\u8def\uff1a\uff09\n\n\u6253\u8d4f\u4f5c\u8005\u676f\u5496\u5561\n\u4f60\u4e5f\u4e0d\u4e00\u5b9a\u8981\u8d5e\u8d4f\uff0c\u82b8\u82b8\u4f17\u751f\uff0c\u76f8\u9047\u76f8\u8bc6\u662f\u4e00\u79cd\u7f18\u4efd\u3002\u4e0d\u8fc7\u53ef\u4ee5\u7ed9\u70b9\u4e2astar\uff0c\u6216\u8005\u5173\u6ce8\u516c\u4f17\u53f7\uff0c\u54c8\n\nCode Visualization\n\u611f\u8c22gitviscode\u7ec4\u7ec7\u5236\u4f5c\u7684commit history\u89c6\u9891\uff0c\u8bb0\u5f55\u4ece15\u5e74\u840c\u82bd\u53d1\u5c55\uff0c\u6709\u90a3\u4e48\u591a\u5f00\u53d1\u8005\u52a0\u5165\u5b8c\u5584\u30021'50\u7684\u65f6\u5019\uff0c\u4ee5\u4e3a\u9879\u76ee\u90fd\u505c\u6b62\u66f4\u65b0\u4e86\uff0c\u7136\u540e\u7a81\u7136\u5982\u70df\u82b1\u7efd\u653e\u7684\u611f\u89c9\uff0c\u6211\u4ed6\u5988\u90fd\u611f\u52a8\u5f97\u8981\u54ed\u4e86\n\nhttps:\/\/www.youtube.com\/watch?v=AIir52mETMY\n","146":"Async http client\/server framework\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Features\n\nSupports both client and server side of HTTP protocol.\nSupports both client and server Web-Sockets out-of-the-box and avoids\nCallback Hell.\nProvides Web-server with middlewares and plugable routing.\n\n\nGetting started\n\nClient\nTo get something from the web:\nimport aiohttp\nimport asyncio\n\nasync def main():\n\n    async with aiohttp.ClientSession() as session:\n        async with session.get('http:\/\/python.org') as response:\n\n            print(\"Status:\", response.status)\n            print(\"Content-type:\", response.headers['content-type'])\n\n            html = await response.text()\n            print(\"Body:\", html[:15], \"...\")\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\nThis prints:\nStatus: 200\nContent-type: text\/html; charset=utf-8\nBody: <!doctype html> ...\n\nComing from requests ? Read why we need so many lines.\n\nServer\nAn example using a simple server:\n# examples\/server_simple.py\nfrom aiohttp import web\n\nasync def handle(request):\n    name = request.match_info.get('name', \"Anonymous\")\n    text = \"Hello, \" + name\n    return web.Response(text=text)\n\nasync def wshandle(request):\n    ws = web.WebSocketResponse()\n    await ws.prepare(request)\n\n    async for msg in ws:\n        if msg.type == web.WSMsgType.text:\n            await ws.send_str(\"Hello, {}\".format(msg.data))\n        elif msg.type == web.WSMsgType.binary:\n            await ws.send_bytes(msg.data)\n        elif msg.type == web.WSMsgType.close:\n            break\n\n    return ws\n\n\napp = web.Application()\napp.add_routes([web.get('\/', handle),\n                web.get('\/echo', wshandle),\n                web.get('\/{name}', handle)])\n\nif __name__ == '__main__':\n    web.run_app(app)\n\nDocumentation\nhttps:\/\/aiohttp.readthedocs.io\/\n\nDemos\nhttps:\/\/github.com\/aio-libs\/aiohttp-demos\n\nExternal links\n\nThird party libraries\nBuilt with aiohttp\nPowered by aiohttp\n\nFeel free to make a Pull Request for adding your link to these pages!\n\nCommunication channels\naio-libs discourse group: https:\/\/aio-libs.discourse.group\ngitter chat https:\/\/gitter.im\/aio-libs\/Lobby\nWe support Stack Overflow.\nPlease add aiohttp tag to your question there.\n\nRequirements\n\nPython >= 3.6\nasync-timeout\nattrs\nchardet\nmultidict\nyarl\n\nOptionally you may install the cChardet and aiodns libraries (highly\nrecommended for sake of speed).\n\nLicense\naiohttp is offered under the Apache 2 license.\n\nKeepsafe\nThe aiohttp community would like to thank Keepsafe\n(https:\/\/www.getkeepsafe.com) for its support in the early days of\nthe project.\n\nSource code\nThe latest developer version is available in a GitHub repository:\nhttps:\/\/github.com\/aio-libs\/aiohttp\n\nBenchmarks\nIf you are interested in efficiency, the AsyncIO community maintains a\nlist of benchmarks on the official wiki:\nhttps:\/\/github.com\/python\/asyncio\/wiki\/Benchmarks\n","147":"Horovod\n\n\n\n\n\n\n\n\n\n\n\n\n\nHorovod is a distributed deep learning training framework for TensorFlow, Keras, PyTorch, and Apache MXNet.\nThe goal of Horovod is to make distributed deep learning fast and easy to use.\nHorovod is hosted by the LF AI Foundation (LF AI). If you are a company that is deeply\ncommitted to using open source technologies in artificial intelligence, machine, and deep learning, and want to support\nthe communities of open source projects in these domains, consider joining the LF AI Foundation. For details\nabout who's involved and how Horovod plays a role, read the LF AI announcement.\n\n\n\n\nContents\n\nDocumentation\nWhy Horovod?\nInstall\nConcepts\nSupported frameworks\nUsage\nRunning Horovod\nGloo\nmpi4py\nInference\nTensor Fusion\nHorovod Timeline\nAutomated Performance Tuning\nGuides\nTroubleshooting\nCitation\nPublications\nReferences\nMailing lists\n\n\n\n\n\n\nDocumentation\n\nLatest Release\nmaster\n\n\n\n\n\nWhy Horovod?\nThe primary motivation for this project is to make it easy to take a single-GPU training script and successfully scale\nit to train across many GPUs in parallel. This has two aspects:\n\nHow much modification does one have to make to a program to make it distributed, and how easy is it to run it?\nHow much faster would it run in distributed mode?\n\nInternally at Uber we found the MPI model to be much more straightforward and require far less code changes than previous\nsolutions such as Distributed TensorFlow with parameter servers. Once a training script has been written for scale with\nHorovod, it can run on a single-GPU, multiple-GPUs, or even multiple hosts without any further code changes.\nSee the Usage section for more details.\nIn addition to being easy to use, Horovod is fast. Below is a chart representing the benchmark that was done on 128\nservers with 4 Pascal GPUs each connected by RoCE-capable 25 Gbit\/s network:\n\nHorovod achieves 90% scaling efficiency for both Inception V3 and ResNet-101, and 68% scaling efficiency for VGG-16.\nSee Benchmarks to find out how to reproduce these numbers.\nWhile installing MPI and NCCL itself may seem like an extra hassle, it only needs to be done once by the team dealing\nwith infrastructure, while everyone else in the company who builds the models can enjoy the simplicity of training them at\nscale.\n\nInstall\nTo install Horovod:\n\nInstall CMake\n\n\nIf you've installed TensorFlow from PyPI, make sure that the g++-4.8.5 or g++-4.9 is installed.\nIf you've installed PyTorch from PyPI, make sure that the g++-4.9 or above is installed.\nIf you've installed either package from Conda, make sure that the gxx_linux-64 Conda package is installed.\n\n\n\nInstall the horovod pip package.\nTo run on CPUs:\n$ pip install horovod\nTo run on GPUs with NCCL:\n$ HOROVOD_GPU_OPERATIONS=NCCL pip install horovod\n\n\nFor more details on installing Horovod with GPU support, read Horovod on GPU.\nFor the full list of Horovod installation options, read the Installation Guide.\nIf you want to use MPI, read Horovod with MPI.\nIf you want to use Conda, read Building a Conda environment with GPU support for Horovod.\nIf you want to use Docker, read Horovod in Docker.\nTo compile Horovod from source, follow the instructions in the Contributor Guide.\n\nConcepts\nHorovod core principles are based on MPI concepts such as size, rank,\nlocal rank, allreduce, allgather and, broadcast. See this page for more details.\n\nSupported frameworks\nSee these pages for Horovod examples and best practices:\n\nHorovod with TensorFlow\nHorovod with Keras\nHorovod with PyTorch\nHorovod with MXNet\n\n\nUsage\nTo use Horovod, make the following additions to your program:\n\nRun hvd.init() to initialize Horovod.\n\n\nPin each GPU to a single process to avoid resource contention.\nWith the typical setup of one GPU per process, set this to local rank. The first process on\nthe server will be allocated the first GPU, the second process will be allocated the second GPU, and so forth.\n\n\n\nScale the learning rate by the number of workers.\nEffective batch size in synchronous distributed training is scaled by the number of workers.\nAn increase in learning rate compensates for the increased batch size.\n\n\n\nWrap the optimizer in hvd.DistributedOptimizer.\nThe distributed optimizer delegates gradient computation to the original optimizer, averages gradients using allreduce or allgather, and then applies those averaged gradients.\n\n\n\nBroadcast the initial variable states from rank 0 to all other processes.\nThis is necessary to ensure consistent initialization of all workers when training is started with random weights or restored from a checkpoint.\n\n\n\nModify your code to save checkpoints only on worker 0 to prevent other workers from corrupting them.\n\nExample using TensorFlow v1 (see the examples directory for full training examples):\nimport tensorflow as tf\nimport horovod.tensorflow as hvd\n\n\n# Initialize Horovod\nhvd.init()\n\n# Pin GPU to be used to process local rank (one GPU per process)\nconfig = tf.ConfigProto()\nconfig.gpu_options.visible_device_list = str(hvd.local_rank())\n\n# Build model...\nloss = ...\nopt = tf.train.AdagradOptimizer(0.01 * hvd.size())\n\n# Add Horovod Distributed Optimizer\nopt = hvd.DistributedOptimizer(opt)\n\n# Add hook to broadcast variables from rank 0 to all other processes during\n# initialization.\nhooks = [hvd.BroadcastGlobalVariablesHook(0)]\n\n# Make training operation\ntrain_op = opt.minimize(loss)\n\n# Save checkpoints only on worker 0 to prevent other workers from corrupting them.\ncheckpoint_dir = '\/tmp\/train_logs' if hvd.rank() == 0 else None\n\n# The MonitoredTrainingSession takes care of session initialization,\n# restoring from a checkpoint, saving to a checkpoint, and closing when done\n# or an error occurs.\nwith tf.train.MonitoredTrainingSession(checkpoint_dir=checkpoint_dir,\n                                       config=config,\n                                       hooks=hooks) as mon_sess:\n  while not mon_sess.should_stop():\n    # Perform synchronous training.\n    mon_sess.run(train_op)\n\nRunning Horovod\nThe example commands below show how to run distributed training.\nSee Run Horovod for more details, including RoCE\/InfiniBand tweaks and tips for dealing with hangs.\n\nTo run on a machine with 4 GPUs:\n$ horovodrun -np 4 -H localhost:4 python train.py\n\nTo run on 4 machines with 4 GPUs each:\n$ horovodrun -np 16 -H server1:4,server2:4,server3:4,server4:4 python train.py\n\nTo run using Open MPI without the horovodrun wrapper, see Running Horovod with Open MPI.\n\nTo run in Docker, see Horovod in Docker.\n\nTo run in Kubernetes, see Kubeflow, MPI Operator, Helm Chart, FfDL, and Polyaxon.\n\nTo run on Spark, see Horovod on Spark.\n\nTo run on Ray, see Horovod on Ray.\n\nTo run in Singularity, see Singularity.\n\nTo run in a LSF HPC cluster (e.g. Summit), see LSF.\n\n\n\nGloo\nGloo is an open source collective communications library developed by Facebook.\nGloo comes included with Horovod, and allows users to run Horovod without requiring MPI to be installed.\nFor environments that have support both MPI and Gloo, you can choose to use Gloo at runtime by passing the --gloo argument to horovodrun:\n$ horovodrun --gloo -np 2 python train.py\n\nmpi4py\nHorovod supports mixing and matching Horovod collectives with other MPI libraries, such as mpi4py,\nprovided that the MPI was built with multi-threading support.\nYou can check for MPI multi-threading support by querying the hvd.mpi_threads_supported() function.\nimport horovod.tensorflow as hvd\n\n# Initialize Horovod\nhvd.init()\n\n# Verify that MPI multi-threading is supported.\nassert hvd.mpi_threads_supported()\n\nfrom mpi4py import MPI\nassert hvd.size() == MPI.COMM_WORLD.Get_size()\nYou can also initialize Horovod with an mpi4py sub-communicator, in which case each sub-communicator\nwill run an independent Horovod training.\nfrom mpi4py import MPI\nimport horovod.tensorflow as hvd\n\n# Split COMM_WORLD into subcommunicators\nsubcomm = MPI.COMM_WORLD.Split(color=MPI.COMM_WORLD.rank % 2,\n                               key=MPI.COMM_WORLD.rank)\n\n# Initialize Horovod\nhvd.init(comm=subcomm)\n\nprint('COMM_WORLD rank: %d, Horovod rank: %d' % (MPI.COMM_WORLD.rank, hvd.rank()))\n\nInference\nLearn how to optimize your model for inference and remove Horovod operations from the graph here.\n\nTensor Fusion\nOne of the unique things about Horovod is its ability to interleave communication and computation coupled with the ability\nto batch small allreduce operations, which results in improved performance. We call this batching feature Tensor Fusion.\nSee here for full details and tweaking instructions.\n\nHorovod Timeline\nHorovod has the ability to record the timeline of its activity, called Horovod Timeline.\n\nUse Horovod timeline to analyze Horovod performance.\nSee here for full details and usage instructions.\n\nAutomated Performance Tuning\nSelecting the right values to efficiently make use of Tensor Fusion and other advanced Horovod features can involve\na good amount of trial and error. We provide a system to automate this performance optimization process called\nautotuning, which you can enable with a single command line argument to horovodrun.\nSee here for full details and usage instructions.\n\nGuides\n\nRun distributed training in Microsoft Azure using Batch AI and Horovod.\nDistributed model training using Horovod.\n\nSend us links to any user guides you want to publish on this site\n\nTroubleshooting\nSee Troubleshooting and submit a ticket\nif you can't find an answer.\n\nCitation\nPlease cite Horovod in your publications if it helps your research:\n@article{sergeev2018horovod,\n  Author = {Alexander Sergeev and Mike Del Balso},\n  Journal = {arXiv preprint arXiv:1802.05799},\n  Title = {Horovod: fast and easy distributed deep learning in {TensorFlow}},\n  Year = {2018}\n}\n\n\nPublications\n1. Sergeev, A., Del Balso, M. (2017) Meet Horovod: Uber\u2019s Open Source Distributed Deep Learning Framework for TensorFlow.\nRetrieved from https:\/\/eng.uber.com\/horovod\/\n2. Sergeev, A. (2017) Horovod - Distributed TensorFlow Made Easy. Retrieved from\nhttps:\/\/www.slideshare.net\/AlexanderSergeev4\/horovod-distributed-tensorflow-made-easy\n3. Sergeev, A., Del Balso, M. (2018) Horovod: fast and easy distributed deep learning in TensorFlow. Retrieved from\narXiv:1802.05799\n\nReferences\nThe Horovod source code was based off the Baidu tensorflow-allreduce\nrepository written by Andrew Gibiansky and Joel Hestness. Their original work is described in the article\nBringing HPC Techniques to Deep Learning.\n\nMailing lists\nSubscribe to Horovod Announce and\nHorovod Technical-Discuss to stay up to date.\n","148":"\n\n\nFastPhotoStyle\nLicense\nCopyright (C) 2018 NVIDIA Corporation.  All rights reserved.\nLicensed under the CC BY-NC-SA 4.0 license (https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/legalcode).\n\nWhat's new\n\n\n\nDate\nNews\n\n\n\n\n2018-07-25\nMigrate to pytorch 0.4.0. For pytorch 0.3.0 user, check out FastPhotoStyle for pytorch 0.3.0.\n\n\n\nAdd a tutorial showing 3 ways of using the FastPhotoStyle algorithm.\n\n\n2018-07-10\nOur paper is accepted by the ECCV 2018 conference!!!\n\n\n\nAbout\nGiven a content photo and a style photo, the code can transfer the style of the style photo to the content photo. The details of the algorithm behind the code is documented in our arxiv paper. Please cite the paper if this code repository is used in your publications.\nA Closed-form Solution to Photorealistic Image Stylization \nYijun Li (UC Merced), Ming-Yu Liu (NVIDIA), Xueting Li (UC Merced), Ming-Hsuan Yang (NVIDIA, UC Merced), Jan Kautz (NVIDIA) \nEuropean Conference on Computer Vision (ECCV), 2018 \nTutorial\nPlease check out the tutorial.\n","149":"Newspaper3k: Article scraping & curation\n\n\n\n\n\nInspired by requests for its simplicity and powered by lxml for its speed:\n\n\"Newspaper is an amazing python library for extracting & curating articles.\"\n-- tweeted by Kenneth Reitz, Author of requests\n\"Newspaper delivers Instapaper style article extraction.\" -- The Changelog\n\nNewspaper is a Python3 library! Or, view our deprecated and buggy Python2 branch\n\nA Glance:\n>>> from newspaper import Article\n\n>>> url = 'http:\/\/fox13now.com\/2013\/12\/30\/new-year-new-laws-obamacare-pot-guns-and-drones\/'\n>>> article = Article(url)\n>>> article.download()\n\n>>> article.html\n'<!DOCTYPE HTML><html itemscope itemtype=\"http:\/\/...'\n>>> article.parse()\n\n>>> article.authors\n['Leigh Ann Caldwell', 'John Honway']\n\n>>> article.publish_date\ndatetime.datetime(2013, 12, 30, 0, 0)\n\n>>> article.text\n'Washington (CNN) -- Not everyone subscribes to a New Year's resolution...'\n\n>>> article.top_image\n'http:\/\/someCDN.com\/blah\/blah\/blah\/file.png'\n\n>>> article.movies\n['http:\/\/youtube.com\/path\/to\/link.com', ...]\n>>> article.nlp()\n\n>>> article.keywords\n['New Years', 'resolution', ...]\n\n>>> article.summary\n'The study shows that 93% of people ...'\n>>> import newspaper\n\n>>> cnn_paper = newspaper.build('http:\/\/cnn.com')\n\n>>> for article in cnn_paper.articles:\n>>>     print(article.url)\nhttp:\/\/www.cnn.com\/2013\/11\/27\/justice\/tucson-arizona-captive-girls\/\nhttp:\/\/www.cnn.com\/2013\/12\/11\/us\/texas-teen-dwi-wreck\/index.html\n...\n\n>>> for category in cnn_paper.category_urls():\n>>>     print(category)\n\nhttp:\/\/lifestyle.cnn.com\nhttp:\/\/cnn.com\/world\nhttp:\/\/tech.cnn.com\n...\n\n>>> cnn_article = cnn_paper.articles[0]\n>>> cnn_article.download()\n>>> cnn_article.parse()\n>>> cnn_article.nlp()\n...\n>>> from newspaper import fulltext\n\n>>> html = requests.get(...).text\n>>> text = fulltext(html)\nNewspaper can extract and detect languages seamlessly.\nIf no language is specified, Newspaper will attempt to auto detect a language.\n>>> from newspaper import Article\n>>> url = 'http:\/\/www.bbc.co.uk\/zhongwen\/simp\/chinese_news\/2012\/12\/121210_hongkong_politics.shtml'\n\n>>> a = Article(url, language='zh') # Chinese\n\n>>> a.download()\n>>> a.parse()\n\n>>> print(a.text[:150])\n\u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\n\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\n\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\n\u610f\u56fe\u548c\u52a8\u673a\u3002 \u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\n\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n\n>>> print(a.title)\n\u6e2f\u7279\u9996\u6881\u632f\u82f1\u5c31\u4f4f\u5b85\u8fdd\u5efa\u4e8b\u4ef6\u9053\u6b49\nIf you are certain that an entire news source is in one language, go ahead and use the same api :)\n>>> import newspaper\n>>> sina_paper = newspaper.build('http:\/\/www.sina.com.cn\/', language='zh')\n\n>>> for category in sina_paper.category_urls():\n>>>     print(category)\nhttp:\/\/health.sina.com.cn\nhttp:\/\/eladies.sina.com.cn\nhttp:\/\/english.sina.com\n...\n\n>>> article = sina_paper.articles[0]\n>>> article.download()\n>>> article.parse()\n\n>>> print(article.text)\n\u65b0\u6d6a\u6b66\u6c49\u6c7d\u8f66\u7efc\u5408 \u968f\u7740\u6c7d\u8f66\u5e02\u573a\u7684\u65e5\u8d8b\u6210\u719f\uff0c\n\u4f20\u7edf\u7684\u201c\u96c6\u5168\u5bb6\u4e4b\u529b\u62b1\u5f97\u7231\u8f66\u5f52\u201d\u7684\u5168\u989d\u8d2d\u8f66\u6a21\u5f0f\u5df2\u7136\u8fc7\u65f6\uff0c\n\u53e6\u4e00\u79cd\u8f7b\u677e\u7684\u65b0\u5174 \u8f66\u6a21\u5f0f\u2015\u2015\u91d1\u878d\u8d2d\u8f66\u6b63\u9010\u6b65\u6210\u4e3a\u65f6\u4e0b\u6d88\u8d39\u8005\u8d2d\n\u4e70\u7231\u8f66\u6700\u4e3a\u65f6\u5c1a\u7684\u6d88\u8d39\u7406\u5ff5\uff0c\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u65b0\u9896\u7684\u8d2d\u8f66\n\u6a21\u5f0f\u65e2\u80fd\u5728\u77ed\u671f\u5185\n...\n\n>>> print(article.title)\n\u4e24\u5e74\u53cc\u514d0\u624b\u7eed0\u5229\u7387 \u79d1\u9c81\u5179\u6380\u80cc\u91d1\u878d\u8f7b\u677e\u8d2d_\u6b66\u6c49\u8f66\u5e02_\u6b66\u6c49\u6c7d\n\u8f66\u7f51_\u65b0\u6d6a\u6c7d\u8f66_\u65b0\u6d6a\u7f51\n\nSupport our library\nIt takes only one click\n\nDocs\nCheck out The Docs for full and detailed guides using newspaper.\nInterested in adding a new language for us? Refer to: Docs - Adding new languages\n\nFeatures\n\nMulti-threaded article download framework\nNews url identification\nText extraction from html\nTop image extraction from html\nAll image extraction from html\nKeyword extraction from text\nSummary extraction from text\nAuthor extraction from text\nGoogle trending terms extraction\nWorks in 10+ languages (English, Chinese, German, Arabic, ...)\n\n>>> import newspaper\n>>> newspaper.languages()\n\nYour available languages are:\ninput code      full name\n\n  ar              Arabic\n  be              Belarusian\n  bg              Bulgarian\n  da              Danish\n  de              German\n  el              Greek\n  en              English\n  es              Spanish\n  et              Estonian\n  fa              Persian\n  fi              Finnish\n  fr              French\n  he              Hebrew\n  hi              Hindi\n  hr              Croatian\n  hu              Hungarian\n  id              Indonesian\n  it              Italian\n  ja              Japanese\n  ko              Korean\n  lt              Lithuanian\n  mk              Macedonian\n  nb              Norwegian (Bokm\u00e5l)\n  nl              Dutch\n  no              Norwegian\n  pl              Polish\n  pt              Portuguese\n  ro              Romanian\n  ru              Russian\n  sl              Slovenian\n  sr              Serbian\n  sv              Swedish\n  sw              Swahili\n  th              Thai\n  tr              Turkish\n  uk              Ukrainian\n  vi              Vietnamese\n  zh              Chinese\n\nGet it now\nRun \u2705 pip3 install newspaper3k \u2705\nNOT \u26d4 pip3 install newspaper \u26d4\nOn python3 you must install newspaper3k, not newspaper. newspaper is our python2 library.\nAlthough installing newspaper is simple with pip, you will\nrun into fixable issues if you are trying to install on ubuntu.\nIf you are on Debian \/ Ubuntu, install using the following:\n\nInstall pip3 command needed to install newspaper3k package:\n$ sudo apt-get install python3-pip\n\n\nPython development version, needed for Python.h:\n$ sudo apt-get install python-dev\n\n\nlxml requirements:\n$ sudo apt-get install libxml2-dev libxslt-dev\n\n\nFor PIL to recognize .jpg images:\n$ sudo apt-get install libjpeg-dev zlib1g-dev libpng12-dev\n\n\n\nNOTE: If you find problem installing libpng12-dev, try installing libpng-dev.\n\nDownload NLP related corpora:\n$ curl https:\/\/raw.githubusercontent.com\/codelucas\/newspaper\/master\/download_corpora.py | python3\n\n\nInstall the distribution via pip:\n$ pip3 install newspaper3k\n\n\n\nIf you are on OSX, install using the following, you may use both homebrew or macports:\n$ brew install libxml2 libxslt\n\n$ brew install libtiff libjpeg webp little-cms2\n\n$ pip3 install newspaper3k\n\n$ curl https:\/\/raw.githubusercontent.com\/codelucas\/newspaper\/master\/download_corpora.py | python3\n\nOtherwise, install with the following:\nNOTE: You will still most likely need to install the following libraries via your package manager\n\nPIL: libjpeg-dev zlib1g-dev libpng12-dev\nlxml: libxml2-dev libxslt-dev\nPython Development version: python-dev\n\n$ pip3 install newspaper3k\n\n$ curl https:\/\/raw.githubusercontent.com\/codelucas\/newspaper\/master\/download_corpora.py | python3\n\n\nDonations\nYour donations are greatly appreciated! They will free me up to work on this project more,\nto take on things like: adding new features, bug-fix support, addressing concerns with the library.\n\nMy PayPal link: https:\/\/www.paypal.me\/codelucas\nMy Venmo handle: @Lucas-Ou-Yang\n\n\nDevelopment\nIf you'd like to contribute and hack on the newspaper project, feel free to clone\na development version of this repository locally:\ngit clone git:\/\/github.com\/codelucas\/newspaper.git\n\nOnce you have a copy of the source, you can embed it in your Python package,\nor install it into your site-packages easily:\n$ pip3 install -r requirements.txt\n$ python3 setup.py install\n\nFeel free to give our testing suite a shot, everything is mocked!:\n$ python3 tests\/unit_tests.py\n\nPlanning on tweaking our full-text algorithm? Add the fulltext parameter:\n$ python3 tests\/unit_tests.py fulltext\n\n\nDemo\nView a working online demo here: http:\/\/newspaper-demo.herokuapp.com\nThis is another working online demo: http:\/\/newspaper.chinazt.cc\/\n\nLICENSE\nAuthored and maintained by Lucas Ou-Yang.\nParse.ly sponsored some work on newspaper, specifically focused on\nautomatic extraction.\nNewspaper uses a lot of python-goose's parsing code. View their license here.\nPlease feel free to email & contact me if you run into issues or just would like\nto talk about the future of this library and news extraction in general!\n","150":"\n\n\n\n\n\n\n\n\n\nFairseq(-py) is a sequence modeling toolkit that allows researchers and\ndevelopers to train custom models for translation, summarization, language\nmodeling and other text generation tasks.\nWe provide reference implementations of various sequence modeling papers:\nList of implemented papers\n\nConvolutional Neural Networks (CNN)\n\nLanguage Modeling with Gated Convolutional Networks (Dauphin et al., 2017)\nConvolutional Sequence to Sequence Learning (Gehring et al., 2017)\nClassical Structured Prediction Losses for Sequence to Sequence Learning (Edunov et al., 2018)\nHierarchical Neural Story Generation (Fan et al., 2018)\nwav2vec: Unsupervised Pre-training for Speech Recognition (Schneider et al., 2019)\n\n\nLightConv and DynamicConv models\n\nPay Less Attention with Lightweight and Dynamic Convolutions (Wu et al., 2019)\n\n\nLong Short-Term Memory (LSTM) networks\n\nEffective Approaches to Attention-based Neural Machine Translation (Luong et al., 2015)\n\n\nTransformer (self-attention) networks\n\nAttention Is All You Need (Vaswani et al., 2017)\nScaling Neural Machine Translation (Ott et al., 2018)\nUnderstanding Back-Translation at Scale (Edunov et al., 2018)\nAdaptive Input Representations for Neural Language Modeling (Baevski and Auli, 2018)\nLexically constrained decoding with dynamic beam allocation (Post & Vilar, 2018)\nTransformer-XL: Attentive Language Models Beyond a Fixed-Length Context\nMixture Models for Diverse Machine Translation: Tricks of the Trade (Shen et al., 2019)\nRoBERTa: A Robustly Optimized BERT Pretraining Approach (Liu et al., 2019)\nFacebook FAIR's WMT19 News Translation Task Submission (Ng et al., 2019)\nJointly Learning to Align and Translate with Transformer Models (Garg et al., 2019)\nMultilingual Denoising Pre-training for Neural Machine Translation (Liu et at., 2020)\nNeural Machine Translation with Byte-Level Subwords (Wang et al., 2020)\nUnsupervised Quality Estimation for Neural Machine Translation (Fomicheva et al., 2020)\nwav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations (Baevski et al., 2020)\nGenerating Medical Reports from Patient-Doctor Conversations Using Sequence-to-Sequence Models (Enarvi et al., 2020)\nLinformer: Self-Attention with Linear Complexity (Wang et al., 2020)\nCross-lingual Retrieval for Iterative Self-Supervised Training (Tran et al., 2020)\nDeep Transformers with Latent Depth (Li et al., 2020)\n\n\nNon-autoregressive Transformers\n\nNon-Autoregressive Neural Machine Translation (Gu et al., 2017)\nDeterministic Non-Autoregressive Neural Sequence Modeling by Iterative Refinement (Lee et al. 2018)\nInsertion Transformer: Flexible Sequence Generation via Insertion Operations (Stern et al. 2019)\nMask-Predict: Parallel Decoding of Conditional Masked Language Models (Ghazvininejad et al., 2019)\nLevenshtein Transformer (Gu et al., 2019)\n\n\nFinetuning\n\nBetter Fine-Tuning by Reducing Representational Collapse (Aghajanyan et al. 2020)\n\n\n\n\nWhat's New:\n\nNovember 2020: Adopted the Hydra configuration framework\n\nsee documentation explaining how to use it for new and existing projects\n\n\nNovember 2020: fairseq 0.10.0 released\nOctober 2020: Added R3F\/R4F (Better Fine-Tuning) code\nOctober 2020: Deep Transformer with Latent Depth code released\nOctober 2020: Added CRISS models and code\nSeptember 2020: Added Linformer code\nSeptember 2020: Added pointer-generator networks\nAugust 2020: Added lexically constrained decoding\nAugust 2020: wav2vec2 models and code released\nJuly 2020: Unsupervised Quality Estimation code released\n\nPrevious updates\n\nMay 2020: Follow fairseq on Twitter\nApril 2020: Monotonic Multihead Attention code released\nApril 2020: Quant-Noise code released\nApril 2020: Initial model parallel support and 11B parameters unidirectional LM released\nMarch 2020: Byte-level BPE code released\nFebruary 2020: mBART model and code released\nFebruary 2020: Added tutorial for back-translation\nDecember 2019: fairseq 0.9.0 released\nNovember 2019: VizSeq released (a visual analysis toolkit for evaluating fairseq models)\nNovember 2019: CamemBERT model and code released\nNovember 2019: BART model and code released\nNovember 2019: XLM-R models and code released\nSeptember 2019: Nonautoregressive translation code released\nAugust 2019: WMT'19 models released\nJuly 2019: fairseq relicensed under MIT license\nJuly 2019: RoBERTa models and code released\nJune 2019: wav2vec models and code released\n\n\nFeatures:\n\nmulti-GPU training on one machine or across multiple machines (data and model parallel)\nfast generation on both CPU and GPU with multiple search algorithms implemented:\n\nbeam search\nDiverse Beam Search (Vijayakumar et al., 2016)\nsampling (unconstrained, top-k and top-p\/nucleus)\nlexically constrained decoding (Post & Vilar, 2018)\n\n\ngradient accumulation enables training with large mini-batches even on a single GPU\nmixed precision training (trains faster with less GPU memory on NVIDIA tensor cores)\nextensible: easily register new models, criterions, tasks, optimizers and learning rate schedulers\nflexible configuration based on Hydra allowing a combination of code, command-line and file based configuration\n\nWe also provide pre-trained models for translation and language modeling\nwith a convenient torch.hub interface:\nen2de = torch.hub.load('pytorch\/fairseq', 'transformer.wmt19.en-de.single_model')\nen2de.translate('Hello world', beam=5)\n# 'Hallo Welt'\nSee the PyTorch Hub tutorials for translation\nand RoBERTa for more examples.\nRequirements and Installation\n\nPyTorch version >= 1.5.0\nPython version >= 3.6\nFor training new models, you'll also need an NVIDIA GPU and NCCL\nTo install fairseq and develop locally:\n\ngit clone https:\/\/github.com\/pytorch\/fairseq\ncd fairseq\npip install --editable .\/\n\n# on MacOS:\n# CFLAGS=\"-stdlib=libc++\" pip install --editable .\/\n\n# to install the latest stable release (0.10.0)\n# pip install fairseq==0.10.0\n\nFor faster training install NVIDIA's apex library:\n\ngit clone https:\/\/github.com\/NVIDIA\/apex\ncd apex\npip install -v --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" \\\n  --global-option=\"--deprecated_fused_adam\" --global-option=\"--xentropy\" \\\n  --global-option=\"--fast_multihead_attn\" .\/\n\nFor large datasets install PyArrow: pip install pyarrow\nIf you use Docker make sure to increase the shared memory size either with --ipc=host or --shm-size\nas command line options to nvidia-docker run .\n\nGetting Started\nThe full documentation contains instructions\nfor getting started, training new models and extending fairseq with new model\ntypes and tasks.\nPre-trained models and examples\nWe provide pre-trained models and pre-processed, binarized test sets for several tasks listed below,\nas well as example training and evaluation commands.\n\nTranslation: convolutional and transformer models are available\nLanguage Modeling: convolutional and transformer models are available\n\nWe also have more detailed READMEs to reproduce results from specific papers:\n\nCross-lingual Retrieval for Iterative Self-Supervised Training (Tran et al., 2020)\nwav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations (Baevski et al., 2020)\nUnsupervised Quality Estimation for Neural Machine Translation (Fomicheva et al., 2020)\nTraining with Quantization Noise for Extreme Model Compression ({Fan*, Stock*} et al., 2020)\nNeural Machine Translation with Byte-Level Subwords (Wang et al., 2020)\nMultilingual Denoising Pre-training for Neural Machine Translation (Liu et at., 2020)\nReducing Transformer Depth on Demand with Structured Dropout (Fan et al., 2019)\nJointly Learning to Align and Translate with Transformer Models (Garg et al., 2019)\nLevenshtein Transformer (Gu et al., 2019)\nFacebook FAIR's WMT19 News Translation Task Submission (Ng et al., 2019)\nRoBERTa: A Robustly Optimized BERT Pretraining Approach (Liu et al., 2019)\nwav2vec: Unsupervised Pre-training for Speech Recognition (Schneider et al., 2019)\nMixture Models for Diverse Machine Translation: Tricks of the Trade (Shen et al., 2019)\nPay Less Attention with Lightweight and Dynamic Convolutions (Wu et al., 2019)\nUnderstanding Back-Translation at Scale (Edunov et al., 2018)\nClassical Structured Prediction Losses for Sequence to Sequence Learning (Edunov et al., 2018)\nHierarchical Neural Story Generation (Fan et al., 2018)\nScaling Neural Machine Translation (Ott et al., 2018)\nConvolutional Sequence to Sequence Learning (Gehring et al., 2017)\nLanguage Modeling with Gated Convolutional Networks (Dauphin et al., 2017)\n\nJoin the fairseq community\n\nTwitter: https:\/\/twitter.com\/fairseq\nFacebook page: https:\/\/www.facebook.com\/groups\/fairseq.users\nGoogle group: https:\/\/groups.google.com\/forum\/#!forum\/fairseq-users\n\nLicense\nfairseq(-py) is MIT-licensed.\nThe license applies to the pre-trained models as well.\nCitation\nPlease cite as:\n@inproceedings{ott2019fairseq,\n  title = {fairseq: A Fast, Extensible Toolkit for Sequence Modeling},\n  author = {Myle Ott and Sergey Edunov and Alexei Baevski and Angela Fan and Sam Gross and Nathan Ng and David Grangier and Michael Auli},\n  booktitle = {Proceedings of NAACL-HLT 2019: Demonstrations},\n  year = {2019},\n}\n","151":"ungoogled-chromium\nA lightweight approach to removing Google web service dependency\nHelp is welcome! See the docs\/contributing.md document for more information.\nObjectives\nIn descending order of significance (i.e. most important objective first):\n\nungoogled-chromium is Google Chromium, sans dependency on Google web services.\nungoogled-chromium retains the default Chromium experience as closely as possible. Unlike other Chromium forks that have their own visions of a web browser, ungoogled-chromium is essentially a drop-in replacement for Chromium.\nungoogled-chromium features tweaks to enhance privacy, control, and transparency. However, almost all of these features must be manually activated or enabled. For more details, see Feature Overview.\n\nIn scenarios where the objectives conflict, the objective of higher significance should take precedence.\nContent Overview\n\nObjectives\nMotivation and Philosophy\nFeature Overview\nDownloads\nSource Code\nFAQ\nBuilding Instructions\nDesign Documentation\nContributing, Reporting, Contacting\nCredits\nRelated Projects\nLicense\n\nMotivation and Philosophy\nWithout signing in to a Google Account, Chromium does pretty well in terms of security and privacy. However, Chromium still has some dependency on Google web services and binaries. In addition, Google designed Chromium to be easy and intuitive for users, which means they compromise on transparency and control of internal operations.\nungoogled-chromium addresses these issues in the following ways:\n\nRemove all remaining background requests to any web services while building and running the browser\nRemove all code specific to Google web services\nRemove all uses of pre-made binaries from the source code, and replace them with user-provided alternatives when possible.\nDisable features that inhibit control and transparency, and add or modify features that promote them (these changes will almost always require manual activation or enabling).\n\nThese features are implemented as configuration flags, patches, and custom scripts. For more details, consult the Design Documentation.\nFeature Overview\nThis section overviews the features of ungoogled-chromium. For more detailed information, it is best to consult the source code.\nContents of this section:\n\nKey Features\nEnhancing Features\nBorrowed Features\nSupported Platforms and Distributions\n\nKey Features\nThese are the core features introduced by ungoogled-chromium.\n\nDisable functionality specific to Google domains (e.g. Google Host Detector, Google URL Tracker, Google Cloud Messaging, Google Hotwording, etc.)\n\nThis includes disabling Safe Browsing. Consult the FAQ for the rationale.\n\n\nBlock internal requests to Google at runtime. This feature is a fail-safe measure for the above, in case Google changes or introduces new components that our patches do not disable. This feature is implemented by replacing many Google web domains in the source code with non-existent alternatives ending in qjz9zk (known as domain substitution; see docs\/design.md for details), then modifying Chromium to block its own requests with such domains. In other words, no connections are attempted to the qjz9zk domain.\nStrip binaries from the source code (known as binary pruning; see docs\/design.md for details)\nAdd many new command-line switches and chrome:\/\/flags entries to configure disabled-by-default features. See docs\/flags.md for the exhaustive list.\n\nEnhancing Features\nThese are the non-essential features introduced by ungoogled-chromium.\n\nAdd Suggestions URL text field in the search engine editor (chrome:\/\/settings\/searchEngines) for customizing search engine suggestions.\nAdd more URL schemes allowed to save page schemes.\nAdd Omnibox search provider \"No Search\" to allow disabling of searching\nAdd a custom cross-platform build configuration and packaging wrapper for Chromium. It currently supports many Linux distributions, macOS, and Windows. (See docs\/design.md for details on the system.)\nForce all pop-ups into tabs\nDisable automatic formatting of URLs in Omnibox (e.g. stripping http:\/\/, hiding certain parameters)\nDisable intranet redirect detector (extraneous DNS requests)\n\nThis breaks captive portal detection, but captive portals still work.\n\n\n(Iridium Browser feature change) Prevent URLs with the trk: scheme from connecting to the Internet\n\nAlso prevents any URLs with the top-level domain qjz9zk (as used in domain substitution) from attempting a connection.\n\n\n(Iridium and Inox feature change) Prevent pinging of IPv6 address when detecting the availability of IPv6. See the --set-ipv6-probe-false flag above to adjust the behavior instead.\n(Windows-specific) Do not set the Zone Identifier on downloaded files\n\nBorrowed Features\nIn addition to the features introduced by ungoogled-chromium, ungoogled-chromium selectively borrows many features from the following projects (in approximate order of significance):\n\nInox patchset\nBromite\nDebian\nIridium Browser\n\nSupported Platforms and Distributions\nSee docs\/platforms.md for a list of supported platforms.\nOther platforms are discussed and tracked in this repository's Issue Tracker. Learn more about using the Issue Tracker under the section Contributing, Reporting, Contacting.\nDownloads\nDownload binaries from here\nNOTE: These binaries are provided by anyone who are willing to build and submit them. Because these binaries are not necessarily reproducible, authenticity cannot be guaranteed; In other words, there is always a non-zero probability that these binaries may have been tampered with. In the unlikely event that this has happened to you, please report it in a new issue.\nThese binaries are known as contributor binaries.\nAlso, ungoogled-chromium is available in several software repositories:\n\nAndroid: Available via a custom F-Droid repo. See instructions in ungoogled-chromium-android\nArch: Available in AUR as ungoogled-chromium\nDebian & Ubuntu: Available in OBS, find your distribution specific instructions in the Installing section\nFedora: Available in RPM Fusion as chromium-browser-privacy\nGentoo: Available in ::pf4public overlay as ungoogled-chromium ebuild\nGNU Guix: Available as ungoogled-chromium\nmacOS: Available in Homebrew as eloston-chromium. Just run brew cask fetch eloston-chromium and brew cask install eloston-chromium. Chromium will appear in your \/Applications directory.\nNixOS\/nixpkgs: Available as ungoogled-chromium\n\nSource Code\nThis repository only contains the common code for all platforms; it does not contain all the configuration and scripts necessary to build ungoogled-chromium. Most users will want to use platform-specific repos, where all the remaining configuration and scripts are provided for specific platforms:\nFind the repo for a specific platform here.\nIf you wish to include ungoogled-chromium code in your own build process, consider using the tags in this repo. These tags follow the format {chromium_version}-{revision} where\n\nchromium_version is the version of Chromium used in x.x.x.x format, and\nrevision is a number indicating the version of ungoogled-chromium for the corresponding Chromium version.\n\nAdditionally, most platform-specific repos extend their tag scheme upon this one.\nBuilding the source code: See docs\/building.md\nMirrors\nList of mirrors:\n\nCodeberg: main repo and ungoogled-software\n\nFAQ\nSee the frequently-asked questions (FAQ) on the Wiki\nBuilding Instructions\nSee docs\/building.md\nDesign Documentation\nSee docs\/design.md\nContributing, Reporting, Contacting\n\nFor reporting and contacting, see SUPPORT.md\nFor contributing (e.g. how to help, submitting changes, criteria for new features), see docs\/contributing.md\nIf you have some small contributions that don't fit our criteria, consider adding them to ungoogled-software\/contrib or our Wiki instead.\n\nCredits\n\nThe Chromium Project\nInox patchset\nDebian\nBromite\nIridium Browser\nThe users for testing and debugging, contributing code, providing feedback, or simply using ungoogled-chromium in some capacity.\n\nRelated Projects\nList of known projects that fork or use changes from ungoogled-chromium:\n\nBromite (Borrows some patches. Features builds for Android)\nppc64le fork (Fork with changes to build for ppc64le CPUs)\n\nLicense\nBSD-3-clause. See LICENSE\n","152":"aws-cli\n\n\n\nThis package provides a unified command line interface to Amazon Web\nServices.\nJump to:\n\nGetting Started\nGetting Help\nMore Resources\n\n\nGetting Started\nThis README is for the AWS CLI version 1. If you are looking for\ninformation about the AWS CLI version 2, please visit the v2\nbranch.\n\nRequirements\nThe aws-cli package works on Python versions:\n\n2.7.x and greater\n3.4.x and greater\n3.5.x and greater\n3.6.x and greater\n3.7.x and greater\n3.8.x and greater\n\nOn 10\/09\/2019 support for Python 2.6 and Python 3.3 was deprecated and\nsupport was dropped on 01\/10\/2020. To avoid disruption, customers using\nthe AWS CLI on Python 2.6 or 3.3 will need to upgrade their version of\nPython or pin the version of the AWS CLI in use prior to 01\/10\/2020. For\nmore information, see this blog\npost.\nAttention!\nWe recommend that all customers regularly monitor the Amazon Web\nServices Security Bulletins\nwebsite for\nany important security bulletins related to aws-cli.\n\nInstallation\nThe safest way to install the AWS CLI is to use\npip in a virtualenv:\n$ python -m pip install awscli\n\nor, if you are not installing in a virtualenv, to install globally:\n$ sudo python -m pip install awscli\n\nor for your user:\n$ python -m pip install --user awscli\n\nIf you have the aws-cli package installed and want to upgrade to the\nlatest version you can run:\n$ python -m pip install --upgrade awscli\n\nThis will install the aws-cli package as well as all dependencies.\n\nNote\nOn macOS, if you see an error regarding the version of six that\ncame with distutils in El Capitan, use the --ignore-installed\noption:\n\n$ sudo python -m pip install awscli --ignore-installed six\n\nOn Linux and Mac OS, the AWS CLI can be installed using a bundled\ninstaller.\nThe AWS CLI can also be installed on Windows via an MSI\nInstaller.\nIf you want to run the develop branch of the AWS CLI, see the\nDevelopment Version section of\nthe contributing guide.\nSee the\ninstallation\nsection of the AWS CLI User Guide for more information.\n\nConfiguration\nBefore using the AWS CLI, you need to configure your AWS credentials.\nYou can do this in several ways:\n\nConfiguration command\nEnvironment variables\nShared credentials file\nConfig file\nIAM Role\n\nThe quickest way to get started is to run the aws configure command:\n$ aws configure\nAWS Access Key ID: MYACCESSKEY\nAWS Secret Access Key: MYSECRETKEY\nDefault region name [us-west-2]: us-west-2\nDefault output format [None]: json\n\nTo use environment variables, do the following:\n$ export AWS_ACCESS_KEY_ID=<access_key>\n$ export AWS_SECRET_ACCESS_KEY=<secret_key>\n\nTo use the shared credentials file, create an INI formatted file like\nthis:\n[default]\naws_access_key_id=MYACCESSKEY\naws_secret_access_key=MYSECRETKEY\n\n[testing]\naws_access_key_id=MYACCESKEY\naws_secret_access_key=MYSECRETKEY\n\nand place it in ~\/.aws\/credentials (or in\n%UserProfile%\\.aws\/credentials on Windows). If you wish to place the\nshared credentials file in a different location than the one specified\nabove, you need to tell aws-cli where to find it. Do this by setting the\nappropriate environment variable:\n$ export AWS_SHARED_CREDENTIALS_FILE=\/path\/to\/shared_credentials_file\n\nTo use a config file, create an INI formatted file like this:\n[default]\naws_access_key_id=<default access key>\naws_secret_access_key=<default secret key>\n# Optional, to define default region for this profile.\nregion=us-west-1\n\n[profile testing]\naws_access_key_id=<testing access key>\naws_secret_access_key=<testing secret key>\nregion=us-west-2\n\nand place it in ~\/.aws\/config (or in %UserProfile%\\.aws\\config\non Windows). If you wish to place the config file in a different\nlocation than the one specified above, you need to tell the AWS CLI\nwhere to find it. Do this by setting the appropriate environment\nvariable:\n$ export AWS_CONFIG_FILE=\/path\/to\/config_file\n\nAs you can see, you can have multiple profiles defined in both the\nshared credentials file and the configuration file. You can then specify\nwhich profile to use by using the --profile option. If no profile is\nspecified the default profile is used.\nIn the config file, except for the default profile, you must prefix\neach config section of a profile group with profile. For example, if\nyou have a profile named \"testing\" the section header would be\n[profile testing].\nThe final option for credentials is highly recommended if you are using\nthe AWS CLI on an EC2 instance. IAM\nRoles\nare a great way to have credentials installed automatically on your\ninstance. If you are using IAM Roles, the AWS CLI will find and use them\nautomatically.\nIn addition to credentials, a number of other variables can be\nconfigured either with environment variables, configuration file\nentries, or both. See the AWS Tools and SDKs Shared Configuration and\nCredentials Reference\nGuide\nfor more information.\nFor more information about configuration options, please refer to the\nAWS CLI Configuration Variables\ntopic.\nYou can access this topic from the AWS CLI as well by running\naws help config-vars.\n\nBasic Commands\nAn AWS CLI command has the following structure:\n$ aws <command> <subcommand> [options and parameters]\n\nFor example, to list S3 buckets, the command would be:\n$ aws s3 ls\n\nTo view help documentation, use one of the following:\n$ aws help\n$ aws <command> help\n$ aws <command> <subcommand> help\n\nTo get the version of the AWS CLI:\n$ aws --version\n\nTo turn on debugging output:\n$ aws --debug <command> <subcommand>\n\nYou can read more information on the Using the AWS\nCLI\nchapter of the AWS CLI User Guide.\n\nCommand Completion\nThe aws-cli package includes a command completion feature for Unix-like\nsystems. This feature is not automatically installed so you need to\nconfigure it manually. To learn more, read the AWS CLI Command\ncompletion\ntopic.\n\nGetting Help\nThe best way to interact with our team is through GitHub. You can open\nan issue and\nchoose from one of our templates for guidance, bug reports, or feature\nrequests.\nYou may find help from the community on Stack\nOverflow with the tag\naws-cli or on\nthe AWS Discussion Forum for\nCLI. If you\nhave a support plan with AWS Premium\nSupport, you can also create\na new support case.\nPlease check for open similar\nissues before opening\nanother one.\nThe AWS CLI implements AWS service APIs. For general issues regarding\nthe services or their limitations, you may find the Amazon Web Services\nDiscussion Forums helpful.\n\nMore Resources\n\nChangelog\nAWS CLI\nDocumentation\nAWS CLI User\nGuide\nAWS CLI Command\nReference\nAmazon Web Services Discussion\nForums\nAWS Support\n\n","153":"StyleGAN \u2014 Official TensorFlow Implementation\n\n\n\n\n\nPicture: These people are not real \u2013 they were produced by our generator that allows control over different aspects of the image.\nThis repository contains the official TensorFlow implementation of the following paper:\n\nA Style-Based Generator Architecture for Generative Adversarial Networks\nTero Karras (NVIDIA), Samuli Laine (NVIDIA), Timo Aila (NVIDIA)\nhttps:\/\/arxiv.org\/abs\/1812.04948\nAbstract: We propose an alternative generator architecture for generative adversarial networks, borrowing from style transfer literature. The new architecture leads to an automatically learned, unsupervised separation of high-level attributes (e.g., pose and identity when trained on human faces) and stochastic variation in the generated images (e.g., freckles, hair), and it enables intuitive, scale-specific control of the synthesis. The new generator improves the state-of-the-art in terms of traditional distribution quality metrics, leads to demonstrably better interpolation properties, and also better disentangles the latent factors of variation. To quantify interpolation quality and disentanglement, we propose two new, automated methods that are applicable to any generator architecture. Finally, we introduce a new, highly varied and high-quality dataset of human faces.\n\nFor business inquiries, please contact researchinquiries@nvidia.com\nFor press and other inquiries, please contact Hector Marinez at hmarinez@nvidia.com\n\u2605\u2605\u2605 NEW: StyleGAN2 is available at https:\/\/github.com\/NVlabs\/stylegan2 \u2605\u2605\u2605\nResources\nMaterial related to our paper is available via the following links:\n\nPaper: https:\/\/arxiv.org\/abs\/1812.04948\nVideo: https:\/\/youtu.be\/kSLJriaOumA\nCode: https:\/\/github.com\/NVlabs\/stylegan\nFFHQ: https:\/\/github.com\/NVlabs\/ffhq-dataset\n\nAdditional material can be found on Google Drive:\n\n\n\nPath\nDescription\n\n\n\n\nStyleGAN\nMain folder.\n\n\n\u251c\u00a0 stylegan-paper.pdf\nHigh-quality version of the paper PDF.\n\n\n\u251c\u00a0 stylegan-video.mp4\nHigh-quality version of the result video.\n\n\n\u251c\u00a0 images\nExample images produced using our generator.\n\n\n\u2502\u00a0 \u251c\u00a0 representative-images\nHigh-quality images to be used in articles, blog posts, etc.\n\n\n\u2502\u00a0 \u2514\u00a0 100k-generated-images\n100,000 generated images for different amounts of truncation.\n\n\n\u2502\u00a0 \u2002\u2002 \u251c\u00a0 ffhq-1024x1024\nGenerated using Flickr-Faces-HQ dataset at 1024\u00d71024.\n\n\n\u2502\u00a0 \u2002\u2002 \u251c\u00a0 bedrooms-256x256\nGenerated using LSUN Bedroom dataset at 256\u00d7256.\n\n\n\u2502\u00a0 \u2002\u2002 \u251c\u00a0 cars-512x384\nGenerated using LSUN Car dataset at 512\u00d7384.\n\n\n\u2502\u00a0 \u2002\u2002 \u2514\u00a0 cats-256x256\nGenerated using LSUN Cat dataset at 256\u00d7256.\n\n\n\u251c\u00a0 videos\nExample videos produced using our generator.\n\n\n\u2502\u00a0 \u2514\u00a0 high-quality-video-clips\nIndividual segments of the result video as high-quality MP4.\n\n\n\u251c\u00a0 ffhq-dataset\nRaw data for the Flickr-Faces-HQ dataset.\n\n\n\u2514\u00a0 networks\nPre-trained networks as pickled instances of dnnlib.tflib.Network.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-ffhq-1024x1024.pkl\nStyleGAN trained with Flickr-Faces-HQ dataset at 1024\u00d71024.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-celebahq-1024x1024.pkl\nStyleGAN trained with CelebA-HQ dataset at 1024\u00d71024.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-bedrooms-256x256.pkl\nStyleGAN trained with LSUN Bedroom dataset at 256\u00d7256.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-cars-512x384.pkl\nStyleGAN trained with LSUN Car dataset at 512\u00d7384.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-cats-256x256.pkl\nStyleGAN trained with LSUN Cat dataset at 256\u00d7256.\n\n\n\u2002\u2002 \u2514\u00a0 metrics\nAuxiliary networks for the quality and disentanglement metrics.\n\n\n\u2002\u2002 \u2002\u2002 \u251c\u00a0 inception_v3_features.pkl\nStandard Inception-v3 classifier that outputs a raw feature vector.\n\n\n\u2002\u2002 \u2002\u2002 \u251c\u00a0 vgg16_zhang_perceptual.pkl\nStandard LPIPS metric to estimate perceptual similarity.\n\n\n\u2002\u2002 \u2002\u2002 \u251c\u00a0 celebahq-classifier-00-male.pkl\nBinary classifier trained to detect a single attribute of CelebA-HQ.\n\n\n\u2002\u2002 \u2002\u2002 \u2514\u00a0\u22ef\nPlease see the file listing for remaining networks.\n\n\n\nLicenses\nAll material, excluding the Flickr-Faces-HQ dataset, is made available under Creative Commons BY-NC 4.0 license by NVIDIA Corporation. You can use, redistribute, and adapt the material for non-commercial purposes, as long as you give appropriate credit by citing our paper and indicating any changes that you've made.\nFor license information regarding the FFHQ dataset, please refer to the Flickr-Faces-HQ repository.\ninception_v3_features.pkl and inception_v3_softmax.pkl are derived from the pre-trained Inception-v3 network by Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, and Zbigniew Wojna. The network was originally shared under Apache 2.0 license on the TensorFlow Models repository.\nvgg16.pkl and vgg16_zhang_perceptual.pkl are derived from the pre-trained VGG-16 network by Karen Simonyan and Andrew Zisserman. The network was originally shared under Creative Commons BY 4.0 license on the Very Deep Convolutional Networks for Large-Scale Visual Recognition project page.\nvgg16_zhang_perceptual.pkl is further derived from the pre-trained LPIPS weights by Richard Zhang, Phillip Isola, Alexei A. Efros, Eli Shechtman, and Oliver Wang. The weights were originally shared under BSD 2-Clause \"Simplified\" License on the PerceptualSimilarity repository.\nSystem requirements\n\nBoth Linux and Windows are supported, but we strongly recommend Linux for performance and compatibility reasons.\n64-bit Python 3.6 installation. We recommend Anaconda3 with numpy 1.14.3 or newer.\nTensorFlow 1.10.0 or newer with GPU support.\nOne or more high-end NVIDIA GPUs with at least 11GB of DRAM. We recommend NVIDIA DGX-1 with 8 Tesla V100 GPUs.\nNVIDIA driver 391.35 or newer, CUDA toolkit 9.0 or newer, cuDNN 7.3.1 or newer.\n\nUsing pre-trained networks\nA minimal example of using a pre-trained StyleGAN generator is given in pretrained_example.py. When executed, the script downloads a pre-trained StyleGAN generator from Google Drive and uses it to generate an image:\n> python pretrained_example.py\nDownloading https:\/\/drive.google.com\/uc?id=1MEGjdvVpUsu1jB4zrXZN7Y4kBBOzizDQ .... done\n\nGs                              Params    OutputShape          WeightShape\n---                             ---       ---                  ---\nlatents_in                      -         (?, 512)             -\n...\nimages_out                      -         (?, 3, 1024, 1024)   -\n---                             ---       ---                  ---\nTotal                           26219627\n\n> ls results\nexample.png # https:\/\/drive.google.com\/uc?id=1UDLT_zb-rof9kKH0GwiJW_bS9MoZi8oP\n\nA more advanced example is given in generate_figures.py. The script reproduces the figures from our paper in order to illustrate style mixing, noise inputs, and truncation:\n> python generate_figures.py\nresults\/figure02-uncurated-ffhq.png     # https:\/\/drive.google.com\/uc?id=1U3r1xgcD7o-Fd0SBRpq8PXYajm7_30cu\nresults\/figure03-style-mixing.png       # https:\/\/drive.google.com\/uc?id=1U-nlMDtpnf1RcYkaFQtbh5oxnhA97hy6\nresults\/figure04-noise-detail.png       # https:\/\/drive.google.com\/uc?id=1UX3m39u_DTU6eLnEW6MqGzbwPFt2R9cG\nresults\/figure05-noise-components.png   # https:\/\/drive.google.com\/uc?id=1UQKPcvYVeWMRccGMbs2pPD9PVv1QDyp_\nresults\/figure08-truncation-trick.png   # https:\/\/drive.google.com\/uc?id=1ULea0C12zGlxdDQFNLXOWZCHi3QNfk_v\nresults\/figure10-uncurated-bedrooms.png # https:\/\/drive.google.com\/uc?id=1UEBnms1XMfj78OHj3_cx80mUf_m9DUJr\nresults\/figure11-uncurated-cars.png     # https:\/\/drive.google.com\/uc?id=1UO-4JtAs64Kun5vIj10UXqAJ1d5Ir1Ke\nresults\/figure12-uncurated-cats.png     # https:\/\/drive.google.com\/uc?id=1USnJc14prlu3QAYxstrtlfXC9sDWPA-W\n\nThe pre-trained networks are stored as standard pickle files on Google Drive:\n# Load pre-trained network.\nurl = 'https:\/\/drive.google.com\/uc?id=1MEGjdvVpUsu1jB4zrXZN7Y4kBBOzizDQ' # karras2019stylegan-ffhq-1024x1024.pkl\nwith dnnlib.util.open_url(url, cache_dir=config.cache_dir) as f:\n    _G, _D, Gs = pickle.load(f)\n    # _G = Instantaneous snapshot of the generator. Mainly useful for resuming a previous training run.\n    # _D = Instantaneous snapshot of the discriminator. Mainly useful for resuming a previous training run.\n    # Gs = Long-term average of the generator. Yields higher-quality results than the instantaneous snapshot.\n\nThe above code downloads the file and unpickles it to yield 3 instances of dnnlib.tflib.Network. To generate images, you will typically want to use Gs \u2013 the other two networks are provided for completeness. In order for pickle.load() to work, you will need to have the dnnlib source directory in your PYTHONPATH and a tf.Session set as default. The session can initialized by calling dnnlib.tflib.init_tf().\nThere are three ways to use the pre-trained generator:\n\n\nUse Gs.run() for immediate-mode operation where the inputs and outputs are numpy arrays:\n# Pick latent vector.\nrnd = np.random.RandomState(5)\nlatents = rnd.randn(1, Gs.input_shape[1])\n\n# Generate image.\nfmt = dict(func=tflib.convert_images_to_uint8, nchw_to_nhwc=True)\nimages = Gs.run(latents, None, truncation_psi=0.7, randomize_noise=True, output_transform=fmt)\n\nThe first argument is a batch of latent vectors of shape [num, 512]. The second argument is reserved for class labels (not used by StyleGAN). The remaining keyword arguments are optional and can be used to further modify the operation (see below). The output is a batch of images, whose format is dictated by the output_transform argument.\n\n\nUse Gs.get_output_for() to incorporate the generator as a part of a larger TensorFlow expression:\nlatents = tf.random_normal([self.minibatch_per_gpu] + Gs_clone.input_shape[1:])\nimages = Gs_clone.get_output_for(latents, None, is_validation=True, randomize_noise=True)\nimages = tflib.convert_images_to_uint8(images)\nresult_expr.append(inception_clone.get_output_for(images))\n\nThe above code is from metrics\/frechet_inception_distance.py. It generates a batch of random images and feeds them directly to the Inception-v3 network without having to convert the data to numpy arrays in between.\n\n\nLook up Gs.components.mapping and Gs.components.synthesis to access individual sub-networks of the generator. Similar to Gs, the sub-networks are represented as independent instances of dnnlib.tflib.Network:\nsrc_latents = np.stack(np.random.RandomState(seed).randn(Gs.input_shape[1]) for seed in src_seeds)\nsrc_dlatents = Gs.components.mapping.run(src_latents, None) # [seed, layer, component]\nsrc_images = Gs.components.synthesis.run(src_dlatents, randomize_noise=False, **synthesis_kwargs)\n\nThe above code is from generate_figures.py. It first transforms a batch of latent vectors into the intermediate W space using the mapping network and then turns these vectors into a batch of images using the synthesis network. The dlatents array stores a separate copy of the same w vector for each layer of the synthesis network to facilitate style mixing.\n\n\nThe exact details of the generator are defined in training\/networks_stylegan.py (see G_style, G_mapping, and G_synthesis). The following keyword arguments can be specified to modify the behavior when calling run() and get_output_for():\n\n\ntruncation_psi and truncation_cutoff control the truncation trick that that is performed by default when using Gs (\u03c8=0.7, cutoff=8). It can be disabled by setting truncation_psi=1 or is_validation=True, and the image quality can be further improved at the cost of variation by setting e.g. truncation_psi=0.5. Note that truncation is always disabled when using the sub-networks directly. The average w needed to manually perform the truncation trick can be looked up using Gs.get_var('dlatent_avg').\n\n\nrandomize_noise determines whether to use re-randomize the noise inputs for each generated image (True, default) or whether to use specific noise values for the entire minibatch (False). The specific values can be accessed via the tf.Variable instances that are found using [var for name, var in Gs.components.synthesis.vars.items() if name.startswith('noise')].\n\n\nWhen using the mapping network directly, you can specify dlatent_broadcast=None to disable the automatic duplication of dlatents over the layers of the synthesis network.\n\n\nRuntime performance can be fine-tuned via structure='fixed' and dtype='float16'. The former disables support for progressive growing, which is not needed for a fully-trained generator, and the latter performs all computation using half-precision floating point arithmetic.\n\n\nPreparing datasets for training\nThe training and evaluation scripts operate on datasets stored as multi-resolution TFRecords. Each dataset is represented by a directory containing the same image data in several resolutions to enable efficient streaming. There is a separate *.tfrecords file for each resolution, and if the dataset contains labels, they are stored in a separate file as well. By default, the scripts expect to find the datasets at datasets\/<NAME>\/<NAME>-<RESOLUTION>.tfrecords. The directory can be changed by editing config.py:\nresult_dir = 'results'\ndata_dir = 'datasets'\ncache_dir = 'cache'\n\nTo obtain the FFHQ dataset (datasets\/ffhq), please refer to the Flickr-Faces-HQ repository.\nTo obtain the CelebA-HQ dataset (datasets\/celebahq), please refer to the Progressive GAN repository.\nTo obtain other datasets, including LSUN, please consult their corresponding project pages. The datasets can be converted to multi-resolution TFRecords using the provided dataset_tool.py:\n> python dataset_tool.py create_lsun datasets\/lsun-bedroom-full ~\/lsun\/bedroom_lmdb --resolution 256\n> python dataset_tool.py create_lsun_wide datasets\/lsun-car-512x384 ~\/lsun\/car_lmdb --width 512 --height 384\n> python dataset_tool.py create_lsun datasets\/lsun-cat-full ~\/lsun\/cat_lmdb --resolution 256\n> python dataset_tool.py create_cifar10 datasets\/cifar10 ~\/cifar10\n> python dataset_tool.py create_from_images datasets\/custom-dataset ~\/custom-images\n\nTraining networks\nOnce the datasets are set up, you can train your own StyleGAN networks as follows:\n\nEdit train.py to specify the dataset and training configuration by uncommenting or editing specific lines.\nRun the training script with python train.py.\nThe results are written to a newly created directory results\/<ID>-<DESCRIPTION>.\nThe training may take several days (or weeks) to complete, depending on the configuration.\n\nBy default, train.py is configured to train the highest-quality StyleGAN (configuration F in Table 1) for the FFHQ dataset at 1024\u00d71024 resolution using 8 GPUs. Please note that we have used 8 GPUs in all of our experiments. Training with fewer GPUs may not produce identical results \u2013 if you wish to compare against our technique, we strongly recommend using the same number of GPUs.\nExpected training times for the default configuration using Tesla V100 GPUs:\n\n\n\nGPUs\n1024\u00d71024\n512\u00d7512\n256\u00d7256\n\n\n\n\n1\n41 days 4 hours\n24 days 21 hours\n14 days 22 hours\n\n\n2\n21 days 22 hours\n13 days 7 hours\n9 days 5 hours\n\n\n4\n11 days 8 hours\n7 days 0 hours\n4 days 21 hours\n\n\n8\n6 days 14 hours\n4 days 10 hours\n3 days 8 hours\n\n\n\nEvaluating quality and disentanglement\nThe quality and disentanglement metrics used in our paper can be evaluated using run_metrics.py. By default, the script will evaluate the Fr\u00e9chet Inception Distance (fid50k) for the pre-trained FFHQ generator and write the results into a newly created directory under results. The exact behavior can be changed by uncommenting or editing specific lines in run_metrics.py.\nExpected evaluation time and results for the pre-trained FFHQ generator using one Tesla V100 GPU:\n\n\n\nMetric\nTime\nResult\nDescription\n\n\n\n\nfid50k\n16 min\n4.4159\nFr\u00e9chet Inception Distance using 50,000 images.\n\n\nppl_zfull\n55 min\n664.8854\nPerceptual Path Length for full paths in Z.\n\n\nppl_wfull\n55 min\n233.3059\nPerceptual Path Length for full paths in W.\n\n\nppl_zend\n55 min\n666.1057\nPerceptual Path Length for path endpoints in Z.\n\n\nppl_wend\n55 min\n197.2266\nPerceptual Path Length for path endpoints in W.\n\n\nls\n10 hours\nz: 165.0106w: 3.7447\nLinear Separability in Z and W.\n\n\n\nPlease note that the exact results may vary from run to run due to the non-deterministic nature of TensorFlow.\nAcknowledgements\nWe thank Jaakko Lehtinen, David Luebke, and Tuomas Kynk\u00e4\u00e4nniemi for in-depth discussions and helpful comments; Janne Hellsten, Tero Kuosmanen, and Pekka J\u00e4nis for compute infrastructure and help with the code release.\n","154":"\n\n\nJAX: Autograd and XLA \nQuickstart\n| Transformations\n| Install guide\n| Neural net libraries\n| Change logs\n| Reference docs\n| Code search\nNews: JAX tops largest-scale MLPerf Training 0.7 benchmarks!\nWhat is JAX?\nJAX is Autograd and\nXLA,\nbrought together for high-performance machine learning research.\nWith its updated version of Autograd,\nJAX can automatically differentiate native\nPython and NumPy functions. It can differentiate through loops, branches,\nrecursion, and closures, and it can take derivatives of derivatives of\nderivatives. It supports reverse-mode differentiation (a.k.a. backpropagation)\nvia grad as well as forward-mode differentiation,\nand the two can be composed arbitrarily to any order.\nWhat\u2019s new is that JAX uses\nXLA\nto compile and run your NumPy programs on GPUs and TPUs. Compilation happens\nunder the hood by default, with library calls getting just-in-time compiled and\nexecuted. But JAX also lets you just-in-time compile your own Python functions\ninto XLA-optimized kernels using a one-function API,\njit. Compilation and automatic differentiation can be\ncomposed arbitrarily, so you can express sophisticated algorithms and get\nmaximal performance without leaving Python. You can even program multiple GPUs\nor TPU cores at once using pmap, and\ndifferentiate through the whole thing.\nDig a little deeper, and you'll see that JAX is really an extensible system for\ncomposable function transformations. Both\ngrad and jit\nare instances of such transformations. Others are\nvmap for automatic vectorization and\npmap for single-program multiple-data (SPMD)\nparallel programming of multiple accelerators, with more to come.\nThis is a research project, not an official Google product. Expect bugs and\nsharp edges.\nPlease help by trying it out, reporting\nbugs, and letting us know what you\nthink!\nimport jax.numpy as jnp\nfrom jax import grad, jit, vmap\n\ndef predict(params, inputs):\n  for W, b in params:\n    outputs = jnp.dot(inputs, W) + b\n    inputs = jnp.tanh(outputs)\n  return outputs\n\ndef logprob_fun(params, inputs, targets):\n  preds = predict(params, inputs)\n  return jnp.sum((preds - targets)**2)\n\ngrad_fun = jit(grad(logprob_fun))  # compiled gradient evaluation function\nperex_grads = jit(vmap(grad_fun, in_axes=(None, 0, 0)))  # fast per-example grads\nContents\n\nQuickstart: Colab in the Cloud\nTransformations\nCurrent gotchas\nInstallation\nNeural net libraries\nCiting JAX\nReference documentation\n\nQuickstart: Colab in the Cloud\nJump right in using a notebook in your browser, connected to a Google Cloud GPU.\nHere are some starter notebooks:\n\nThe basics: NumPy on accelerators, grad for differentiation, jit for compilation, and vmap for vectorization\nTraining a Simple Neural Network, with TensorFlow Dataset Data Loading\n\nJAX now runs on Cloud TPUs. To try out the preview, see the Cloud TPU\nColabs.\nFor a deeper dive into JAX:\n\nThe Autodiff Cookbook, Part 1: easy and powerful automatic differentiation in JAX\nCommon gotchas and sharp edges\nSee the full list of\nnotebooks.\n\nYou can also take a look at the mini-libraries in\njax.experimental,\nlike stax for building neural\nnetworks\nand optimizers for first-order stochastic\noptimization,\nor the examples.\nTransformations\nAt its core, JAX is an extensible system for transforming numerical functions.\nHere are four of primary interest: grad, jit, vmap, and pmap.\nAutomatic differentiation with grad\nJAX has roughly the same API as Autograd.\nThe most popular function is\ngrad\nfor reverse-mode gradients:\nfrom jax import grad\nimport jax.numpy as jnp\n\ndef tanh(x):  # Define a function\n  y = jnp.exp(-2.0 * x)\n  return (1.0 - y) \/ (1.0 + y)\n\ngrad_tanh = grad(tanh)  # Obtain its gradient function\nprint(grad_tanh(1.0))   # Evaluate it at x = 1.0\n# prints 0.4199743\nYou can differentiate to any order with grad.\nprint(grad(grad(grad(tanh)))(1.0))\n# prints 0.62162673\nFor more advanced autodiff, you can use\njax.vjp for\nreverse-mode vector-Jacobian products and\njax.jvp for\nforward-mode Jacobian-vector products. The two can be composed arbitrarily with\none another, and with other JAX transformations. Here's one way to compose those\nto make a function that efficiently computes full Hessian\nmatrices:\nfrom jax import jit, jacfwd, jacrev\n\ndef hessian(fun):\n  return jit(jacfwd(jacrev(fun)))\nAs with Autograd, you're free to use\ndifferentiation with Python control structures:\ndef abs_val(x):\n  if x > 0:\n    return x\n  else:\n    return -x\n\nabs_val_grad = grad(abs_val)\nprint(abs_val_grad(1.0))   # prints 1.0\nprint(abs_val_grad(-1.0))  # prints -1.0 (abs_val is re-evaluated)\nSee the reference docs on automatic\ndifferentiation\nand the JAX Autodiff\nCookbook\nfor more.\nCompilation with jit\nYou can use XLA to compile your functions end-to-end with\njit,\nused either as an @jit decorator or as a higher-order function.\nimport jax.numpy as jnp\nfrom jax import jit\n\ndef slow_f(x):\n  # Element-wise ops see a large benefit from fusion\n  return x * x + x * 2.0\n\nx = jnp.ones((5000, 5000))\nfast_f = jit(slow_f)\n%timeit -n10 -r3 fast_f(x)  # ~ 4.5 ms \/ loop on Titan X\n%timeit -n10 -r3 slow_f(x)  # ~ 14.5 ms \/ loop (also on GPU via JAX)\nYou can mix jit and grad and any other JAX transformation however you like.\nUsing jit puts constraints on the kind of Python control flow\nthe function can use; see\nthe Gotchas\nNotebook\nfor more.\nAuto-vectorization with vmap\nvmap is\nthe vectorizing map.\nIt has the familiar semantics of mapping a function along array axes, but\ninstead of keeping the loop on the outside, it pushes the loop down into a\nfunction\u2019s primitive operations for better performance.\nUsing vmap can save you from having to carry around batch dimensions in your\ncode. For example, consider this simple unbatched neural network prediction\nfunction:\ndef predict(params, input_vec):\n  assert input_vec.ndim == 1\n  for W, b in params:\n    output_vec = jnp.dot(W, input_vec) + b  # `input_vec` on the right-hand side!\n    input_vec = jnp.tanh(output_vec)\n  return output_vec\nWe often instead write jnp.dot(inputs, W) to allow for a batch dimension on the\nleft side of inputs, but we\u2019ve written this particular prediction function to\napply only to single input vectors. If we wanted to apply this function to a\nbatch of inputs at once, semantically we could just write\nfrom functools import partial\npredictions = jnp.stack(list(map(partial(predict, params), input_batch)))\nBut pushing one example through the network at a time would be slow! It\u2019s better\nto vectorize the computation, so that at every layer we\u2019re doing matrix-matrix\nmultiplies rather than matrix-vector multiplies.\nThe vmap function does that transformation for us. That is, if we write\nfrom jax import vmap\npredictions = vmap(partial(predict, params))(input_batch)\n# or, alternatively\npredictions = vmap(predict, in_axes=(None, 0))(params, input_batch)\nthen the vmap function will push the outer loop inside the function, and our\nmachine will end up executing matrix-matrix multiplications exactly as if we\u2019d\ndone the batching by hand.\nIt\u2019s easy enough to manually batch a simple neural network without vmap, but\nin other cases manual vectorization can be impractical or impossible. Take the\nproblem of efficiently computing per-example gradients: that is, for a fixed set\nof parameters, we want to compute the gradient of our loss function evaluated\nseparately at each example in a batch. With vmap, it\u2019s easy:\nper_example_gradients = vmap(partial(grad(loss), params))(inputs, targets)\nOf course, vmap can be arbitrarily composed with jit, grad, and any other\nJAX transformation! We use vmap with both forward- and reverse-mode automatic\ndifferentiation for fast Jacobian and Hessian matrix calculations in\njax.jacfwd, jax.jacrev, and jax.hessian.\nSPMD programming with pmap\nFor parallel programming of multiple accelerators, like multiple GPUs, use\npmap.\nWith pmap you write single-program multiple-data (SPMD) programs, including\nfast parallel collective communication operations. Applying pmap will mean\nthat the function you write is compiled by XLA (similarly to jit), then\nreplicated and executed in parallel across devices.\nHere's an example on an 8-GPU machine:\nfrom jax import random, pmap\nimport jax.numpy as jnp\n\n# Create 8 random 5000 x 6000 matrices, one per GPU\nkeys = random.split(random.PRNGKey(0), 8)\nmats = pmap(lambda key: random.normal(key, (5000, 6000)))(keys)\n\n# Run a local matmul on each device in parallel (no data transfer)\nresult = pmap(lambda x: jnp.dot(x, x.T))(mats)  # result.shape is (8, 5000, 5000)\n\n# Compute the mean on each device in parallel and print the result\nprint(pmap(jnp.mean)(result))\n# prints [1.1566595 1.1805978 ... 1.2321935 1.2015157]\nIn addition to expressing pure maps, you can use fast collective communication\noperations\nbetween devices:\nfrom functools import partial\nfrom jax import lax\n\n@partial(pmap, axis_name='i')\ndef normalize(x):\n  return x \/ lax.psum(x, 'i')\n\nprint(normalize(jnp.arange(4.)))\n# prints [0.         0.16666667 0.33333334 0.5       ]\nYou can even nest pmap functions for more\nsophisticated communication patterns.\nIt all composes, so you're free to differentiate through parallel computations:\nfrom jax import grad\n\n@pmap\ndef f(x):\n  y = jnp.sin(x)\n  @pmap\n  def g(z):\n    return jnp.cos(z) * jnp.tan(y.sum()) * jnp.tanh(x).sum()\n  return grad(lambda w: jnp.sum(g(w)))(x)\n\nprint(f(x))\n# [[ 0.        , -0.7170853 ],\n#  [-3.1085174 , -0.4824318 ],\n#  [10.366636  , 13.135289  ],\n#  [ 0.22163185, -0.52112055]]\n\nprint(grad(lambda x: jnp.sum(f(x)))(x))\n# [[ -3.2369726,  -1.6356447],\n#  [  4.7572474,  11.606951 ],\n#  [-98.524414 ,  42.76499  ],\n#  [ -1.6007166,  -1.2568436]]\nWhen reverse-mode differentiating a pmap function (e.g. with grad), the\nbackward pass of the computation is parallelized just like the forward pass.\nSee the SPMD\nCookbook\nand the SPMD MNIST classifier from scratch\nexample\nfor more.\nCurrent gotchas\nFor a more thorough survey of current gotchas, with examples and explanations,\nwe highly recommend reading the Gotchas\nNotebook.\nSome standouts:\n\nJAX transformations only work on pure functions, which don't have side-effects and respect referential transparency (i.e. object identity testing with is isn't preserved). If you use a JAX transformation on an impure Python function, you might see an error like Exception: Can't lift Traced...  or Exception: Different traces at same level.\nIn-place mutating updates of\narrays, like x[i] += y, aren't supported, but there are functional alternatives. Under a jit, those functional alternatives will reuse buffers in-place automatically.\nRandom numbers are\ndifferent, but for good reasons.\nIf you're looking for convolution\noperators,\nthey're in the jax.lax package.\nJAX enforces single-precision (32-bit, e.g. float32) values by default, and\nto enable\ndouble-precision\n(64-bit, e.g. float64) one needs to set the jax_enable_x64 variable at\nstartup (or set the environment variable JAX_ENABLE_X64=True).\nSome of NumPy's dtype promotion semantics involving a mix of Python scalars\nand NumPy types aren't preserved, namely np.add(1, np.array([2], np.float32)).dtype is float64 rather than float32.\nSome transformations, like jit, constrain how you can use Python control\nflow.\nYou'll always get loud errors if something goes wrong. You might have to use\njit's static_argnums\nparameter,\nstructured control flow\nprimitives\nlike\nlax.scan,\nor just use jit on smaller subfunctions.\n\nInstallation\nJAX is written in pure Python, but it depends on XLA, which needs to be\ninstalled as the jaxlib package. Use the following instructions to install a\nbinary package with pip, or to build JAX from source.\nWe support installing or building jaxlib on Linux (Ubuntu 16.04 or later) and\nmacOS (10.12 or later) platforms. Windows users can use JAX on CPU via the\nWindows Subsystem for Linux.\nWe're not currently working on native Windows support, but contributions are\nwelcome (see #438).\npip installation\nTo install a CPU-only version, which might be useful for doing local\ndevelopment on a laptop, you can run\npip install --upgrade pip\npip install --upgrade jax jaxlib  # CPU-only version\nOn Linux, it is often necessary to first update pip to a version that supports\nmanylinux2010 wheels.\nIf you want to install JAX with both CPU and GPU support, using existing CUDA\nand CUDNN7 installations on your machine (for example, preinstalled on your\ncloud VM), you can run\npip install --upgrade pip\npip install --upgrade jax jaxlib==0.1.57+cuda110 -f https:\/\/storage.googleapis.com\/jax-releases\/jax_releases.html\nThe jaxlib version must correspond to the version of the existing CUDA\ninstallation you want to use, with cuda110 for CUDA 11.0, cuda102 for CUDA\n10.2, and cuda101 for CUDA 10.1. You can find your\nCUDA version with: install path:\nnvcc --version\nNote that some GPU functionality expects the CUDA installation to be at\n\/usr\/local\/cuda-X.X, where X.X should be replaced with the CUDA version number\n(e.g. cuda-10.2). If CUDA is installed elsewhere on your system, you can either\ncreate a symlink:\nsudo ln -s \/path\/to\/cuda \/usr\/local\/cuda-X.X\nOr set the following environment variable before importing JAX:\nXLA_FLAGS=--xla_gpu_cuda_data_dir=\/path\/to\/cuda\nPlease let us know on the issue tracker\nif you run into any errors or problems with the prebuilt wheels.\nBuilding JAX from source\nSee Building JAX from\nsource.\nNeural network libraries\nMultiple Google research groups develop and share libraries for training neural\nnetworks in JAX. If you want a fully featured library for neural network\ntraining with examples and how-to guides, try\nFlax. Another option is\nTrax, a combinator-based framework focused on\nease-of-use and end-to-end single-command examples, especially for sequence\nmodels and reinforcement learning. Finally,\nObjax is a minimalist object-oriented\nframework with a PyTorch-like interface.\nDeepMind has open-sourced an ecosystem of libraries around JAX including\nHaiku for neural network modules,\nOptax for gradient processing and\noptimization, RLax for RL algorithms, and\nchex for reliable code and testing.\nCiting JAX\nTo cite this repository:\n@software{jax2018github,\n  author = {James Bradbury and Roy Frostig and Peter Hawkins and Matthew James Johnson and Chris Leary and Dougal Maclaurin and Skye Wanderman-Milne},\n  title = {{JAX}: composable transformations of {P}ython+{N}um{P}y programs},\n  url = {http:\/\/github.com\/google\/jax},\n  version = {0.2.5},\n  year = {2018},\n}\n\nIn the above bibtex entry, names are in alphabetical order, the version number\nis intended to be that from jax\/version.py, and\nthe year corresponds to the project's open-source release.\nA nascent version of JAX, supporting only automatic differentiation and\ncompilation to XLA, was described in a paper that appeared at SysML\n2018. We're currently working on\ncovering JAX's ideas and capabilities in a more comprehensive and up-to-date\npaper.\nReference documentation\nFor details about the JAX API, see the\nreference documentation.\nFor getting started as a JAX developer, see the\ndeveloper documentation.\n","155":"\n\nThe lightweight PyTorch wrapper for high-performance AI research.\nScale your models, not the boilerplate.\n\n\nWebsite \u2022\n  Key Features \u2022\n  How To Use \u2022\n  Docs \u2022\n  Examples \u2022\n  Community \u2022\n  Grid AI \u2022\n  Licence\n\n\n\n\n\n\n\n\n\n\n\n\n\n*Codecov is > 90%+ but build delays may show less\n\nPyTorch Lightning is just organized PyTorch\nLightning disentangles PyTorch code to decouple the science from the engineering.\n\n\nLightning Philosophy\nLightning is designed with these principles in mind:\nPrinciple 1: Enable maximal flexibility.\nPrinciple 2: Abstract away unecessary boilerplate, but make it accessible when needed.\nPrinciple 3: Systems should be self-contained (ie: optimizers, computation code, etc).\nPrinciple 4: Deep learning code should be organized into 4 distinct categories.\n\nResearch code (the LightningModule).\nEngineering code (you delete, and is handled by the Trainer).\nNon-essential research code (logging, etc... this goes in Callbacks).\nData (use PyTorch Dataloaders or organize them into a LightningDataModule).\n\nOnce you do this, you can train on multiple-GPUs, TPUs, CPUs and even in 16-bit precision without changing your code!\nGet started with our 2 step guide\n\nInference\nLightning is also designed for the fast inference AI researchers and production teams need to scale up things like BERT and self-supervised learning.\nLightning can automatically export to ONNX or TorchScript for those cases.\n\nTrending contributors\n\n\n\n\n\n\n\n\n\nContinuous Integration\n\n\n\nSystem \/ PyTorch ver.\n1.3 (min. req.)*\n1.4\n1.5\n1.6\n1.7 (latest)\n1.8 (nightly)\n\n\n\n\nConda py3.7 [linux]\n\n\n\n\n\n\n\n\nLinux py3.7 [GPUs**]\n-\n-\n-\n\n-\n-\n\n\nLinux py3.7 [TPUs***]\n-\n-\n-\n\n-\n-\n\n\nLinux py3.6 \/ py3.7 \/ py3.8\n\n-\n-\n-\n\n-\n\n\nOSX py3.6 \/ py3.7\n-\n\n-\n-\n\n-\n\n\nWindows py3.6 \/ py3.7 \/ py3.8\n\n-\n-\n-\n\n-\n\n\n\n\n* torch>=1.4 is the minimal pytorch version for Python 3.8\n** tests run on two NVIDIA K80\n*** tests run on Google GKE TPUv2\/3\nTPU w\/ py3.6\/py3.7 means we support Colab and Kaggle env.\n\n\nHow To Use\nStep 0: Install\nSimple installation from PyPI\npip install pytorch-lightning\nFrom Conda\nconda install pytorch-lightning -c conda-forge\nInstall bleeding-edge (no guarantees)\npip install git+https:\/\/github.com\/PytorchLightning\/pytorch-lightning.git@master --upgrade\nStep 0: Add these imports\nimport os\nimport torch\nfrom torch import nn\nimport torch.nn.functional as F\nfrom torchvision.datasets import MNIST\nfrom torch.utils.data import DataLoader, random_split\nfrom torchvision import transforms\nimport pytorch_lightning as pl\nStep 1: Define a LightningModule (nn.Module subclass)\nA LightningModule defines a full system (ie: a GAN, autoencoder, BERT or a simple Image Classifier).\nclass LitAutoEncoder(pl.LightningModule):\n\n    def __init__(self):\n        super().__init__()\n        self.encoder = nn.Sequential(nn.Linear(28 * 28, 128), nn.ReLU(), nn.Linear(128, 3))\n        self.decoder = nn.Sequential(nn.Linear(3, 128), nn.ReLU(), nn.Linear(128, 28 * 28))\n    \n    def forward(self, x):\n        # in lightning, forward defines the prediction\/inference actions\n        embedding = self.encoder(x)\n        return embedding\n\n    def training_step(self, batch, batch_idx):\n        # training_step defined the train loop. It is independent of forward\n        x, y = batch\n        x = x.view(x.size(0), -1)\n        z = self.encoder(x)\n        x_hat = self.decoder(z)\n        loss = F.mse_loss(x_hat, x)\n        self.log('train_loss', loss)\n        return loss\n\n    def configure_optimizers(self):\n        optimizer = torch.optim.Adam(self.parameters(), lr=1e-3)\n        return optimizer\nNote: Training_step defines the training loop. Forward defines how the LightningModule behaves during inference\/prediction.\nStep 2: Train!\ndataset = MNIST(os.getcwd(), download=True, transform=transforms.ToTensor())\ntrain, val = random_split(dataset, [55000, 5000])\n\nautoencoder = LitAutoEncoder()\ntrainer = pl.Trainer()\ntrainer.fit(autoencoder, DataLoader(train), DataLoader(val))\nAnd without changing a single line of code, you could run on GPUs\/TPUs\n# 8 GPUs\ntrainer = Trainer(max_epochs=1, gpus=8)\n\n# 256 GPUs\ntrainer = Trainer(max_epochs=1, gpus=8, num_nodes=32)\n\n# TPUs\ntrainer = Trainer(tpu_cores=8)\nAnd even export for production via onnx or torchscript\n# torchscript\nautoencoder = LitAutoEncoder()\ntorch.jit.save(autoencoder.to_torchscript(), \"model.pt\") \n\n# onnx\nwith tempfile.NamedTemporaryFile(suffix='.onnx', delete=False) as tmpfile:\n    autoencoder = LitAutoEncoder()\n    input_sample = torch.randn((1, 64))\n    autoencoder.to_onnx(tmpfile.name, input_sample, export_params=True)\n    os.path.isfile(tmpfile.name)\nFor advanced users, you can still own complex training loops\nclass LitAutoEncoder(pl.LightningModule):\n    def training_step(self, batch, batch_idx, opt_idx):\n        (opt_a, opt_b) = self.optimizers()\n        \n        loss_a = ...\n        self.manual_backward(loss_a, opt_a)\n        opt_a.step()\n        opt_a.zero_grad()\n        \n        loss_b = ...\n        self.manual_backward(loss_b, opt_b, retain_graph=True)\n        self.manual_backward(loss_b, opt_b)\n        opt_b.step()\n        opt_b.zero_grad()\n\nKey Features\n\nScale your models to run on any hardware (CPU, GPUs, TPUs) without changing your model\nMaking code more readable by decoupling the research code from the engineering\nEasier to reproduce\nLess error prone by automating most of the training loop and tricky engineering\nKeeps all the flexibility (LightningModules are still PyTorch modules), but removes a ton of boilerplate\nLightning has out-of-the-box integration with the popular logging\/visualizing frameworks (Tensorboard, MLFlow, Neptune.ai, Comet.ml, Wandb).\nTested rigorously with every new PR. We test every combination of PyTorch and Python supported versions, every OS, multi GPUs and even TPUs.\nMinimal running speed overhead (about 300 ms per epoch compared with pure PyTorch).\n\nLightning automates 40+ parts of DL\/ML research\n\nGPU training\nDistributed GPU (cluster) training\nTPU training\nEarlyStopping\nLogging\/Visualizing\nCheckpointing\nExperiment management\nFull list here\n\n\nExamples\nHello world\nMNIST hello world\nMNIST on TPUs\nContrastive Learning\nBYOL\nCPC v2\nMoco v2\nSIMCLR\nNLP\nBERT\nGPT-2\nReinforcement Learning\nDQN\nDueling-DQN\nReinforce\nVision\nGAN\nClassic ML\nLogistic Regression\nLinear Regression\n\nCommunity\nThe lightning community is maintained by\n\n16 core contributors who are all a mix of professional engineers, Research Scientists, Ph.D. students from top AI labs.\n280+ community contributors.\n\nLightning is also part of the PyTorch ecosystem which requires projects to have solid testing, documentation and support.\nAsking for help\nIf you have any questions please:\n\nRead the docs.\nLook it up in our forum (or add a new question)\nSearch through the issues.\nJoin our slack.\nAsk on stackoverflow with the tag pytorch-lightning.\n\nFunding\nBuilding open-source software with only a few part-time people is hard!\nWe're venture funded\nand backed by some of the top VC funds in the world, Index Ventures, Bain Capital Ventures, First Minute Capital.\nTheir funding ensures we can continue to build awesome tooling like Grid, give you around the clock support,\nhire a full-time staff, attend conferences, and move faster through implementing features you request.\nTo supercharge your research and production work, visit our Grid.ai platform\n\nGrid AI\nGrid AI is our native platform for training models at scale on the cloud!\nSign up for early access here\nTo use grid, take your regular command:\n    python my_model.py --learning_rate 1e-6 --layers 2 --gpus 4\n\nAnd change it to use the grid train command:\n    grid train --grid_gpus 4 my_model.py --learning_rate 'uniform(1e-6, 1e-1, 20)' --layers '[2, 4, 8, 16]'\n\nThe above command will launch (20 * 4) experiments each running on 4 GPUs (320 GPUs!) - by making ZERO changes to\nyour code.\n\nLicence\nPlease observe the Apache 2.0 license that is listed in this repository. In addition\nthe Lightning framework is Patent Pending.\nBibTeX\nIf you want to cite the framework feel free to use this (but only if you loved it \ud83d\ude0a):\n@article{falcon2019pytorch,\n  title={PyTorch Lightning},\n  author={Falcon, WA},\n  journal={GitHub. Note: https:\/\/github.com\/PyTorchLightning\/pytorch-lightning},\n  volume={3},\n  year={2019}\n}\n","156":"imgaug\nThis python library helps you with augmenting images for your machine learning projects.\nIt converts a set of input images into a new, much larger set of slightly altered images.\n\n\n\n\n\n\u00a0\nImage\nHeatmaps\nSeg. Maps\nKeypoints\nBounding Boxes,Polygons\n\n\nOriginal Input\n\n\n\n\n\n\n\nGauss. Noise+\u00a0Contrast+\u00a0Sharpen\n\n\n\n\n\n\n\nAffine\n\n\n\n\n\n\n\nCrop+\u00a0Pad\n\n\n\n\n\n\n\nFliplr+\u00a0Perspective\n\n\n\n\n\n\n\nMore (strong) example augmentations of one input image:\n\nTable of Contents\n\nFeatures\nInstallation\nDocumentation\nRecent Changes\nExample Images\nCode Examples\nCitation\n\n\nFeatures\n\nMany augmentation techniques\n\nE.g. affine transformations, perspective transformations, contrast changes, gaussian noise, dropout of regions, hue\/saturation changes, cropping\/padding, blurring, ...\nOptimized for high performance\nEasy to apply augmentations only to some images\nEasy to apply augmentations in random order\n\n\nSupport for\n\nImages (full support for uint8, for other dtypes see documentation)\nHeatmaps (float32), Segmentation Maps (int), Masks (bool)\n\nMay be smaller\/larger than their corresponding images. No extra lines of code needed for e.g. crop.\n\n\nKeypoints\/Landmarks (int\/float coordinates)\nBounding Boxes (int\/float coordinates)\nPolygons (int\/float coordinates)\nLine Strings (int\/float coordinates)\n\n\nAutomatic alignment of sampled random values\n\nExample: Rotate image and segmentation map on it by the same value sampled from uniform(-10\u00b0, 45\u00b0). (0 extra lines of code.)\n\n\nProbability distributions as parameters\n\nExample: Rotate images by values sampled from uniform(-10\u00b0, 45\u00b0).\nExample: Rotate images by values sampled from ABS(N(0, 20.0))*(1+B(1.0, 1.0))\", where ABS(.) is the absolute function, N(.) the gaussian distribution and B(.) the beta distribution.\n\n\nMany helper functions\n\nExample: Draw heatmaps, segmentation maps, keypoints, bounding boxes, ...\nExample: Scale segmentation maps, average\/max pool of images\/maps, pad images to aspect\nratios (e.g. to square them)\nExample: Convert keypoints to distance maps, extract pixels within bounding boxes from images, clip polygon to the image plane, ...\n\n\nSupport for augmentation on multiple CPU cores\n\n\nInstallation\nThe library supports python 2.7 and 3.4+.\nInstallation: Anaconda\nTo install the library in anaconda, perform the following commands:\nconda config --add channels conda-forge\nconda install imgaug\nYou can deinstall the library again via conda remove imgaug.\nInstallation: pip\nThen install imgaug either via pypi (can lag behind the github version):\npip install imgaug\nor install the latest version directly from github:\npip install git+https:\/\/github.com\/aleju\/imgaug.git\nFor more details, see the install guide\nTo deinstall the library, just execute pip uninstall imgaug.\n\nDocumentation\nExample jupyter notebooks:\n\nLoad and Augment an Image\nMulticore Augmentation\nAugment and work with: Keypoints\/Landmarks,\nBounding Boxes,\nPolygons,\nLine Strings,\nHeatmaps,\nSegmentation Maps\n\nMore notebooks: imgaug-doc\/notebooks.\nExample ReadTheDocs pages:\n\nQuick example code on how to use the library\nOverview of all Augmenters\nAPI\n\nMore RTD documentation: imgaug.readthedocs.io.\nAll documentation related files of this project are hosted in the\nrepository imgaug-doc.\n\nRecent Changes\n\n0.4.0: Added new augmenters, changed backend to batchwise augmentation,\nsupport for numpy 1.18 and python 3.8.\n0.3.0: Reworked segmentation map augmentation, adapted to numpy 1.17+\nrandom number sampling API, several new augmenters.\n0.2.9: Added polygon augmentation, added line string augmentation,\nsimplified augmentation interface.\n0.2.8: Improved performance, dtype support and multicore augmentation.\n\nSee changelogs\/ for more details.\n\nExample Images\nThe images below show examples for most augmentation techniques.\nValues written in the form (a, b) denote a uniform distribution,\ni.e. the value is randomly picked from the interval [a, b].\nLine strings are supported by (almost) all augmenters, but are not explicitly\nvisualized here.\n\nmeta\n\nIdentity\nChannelShuffle\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\nSee also: Sequential, SomeOf, OneOf, Sometimes, WithChannels, Lambda, AssertLambda, AssertShape, RemoveCBAsByOutOfImageFraction, ClipCBAsToImagePlanes\n\narithmetic\n\nAdd\nAdd(per_channel=True)\nAdditiveGaussianNoise\nAdditiveGaussianNoise(per_channel=True)\nMultiply\n\n\n\n\n\n\n\n\n\nCutout\nDropout\nCoarseDropout(p=0.2)\nCoarseDropout(p=0.2, per_channel=True)\nDropout2d\n\n\n\n\n\n\n\n\n\nSaltAndPepper\nCoarseSaltAndPepper(p=0.2)\nInvert\nSolarize\nJpegCompression\n\n\n\n\n\n\n\n\n\n\n\nSee also: AddElementwise, AdditiveLaplaceNoise, AdditivePoissonNoise, MultiplyElementwise, TotalDropout, ReplaceElementwise, ImpulseNoise, Salt, Pepper, CoarseSalt, CoarsePepper, Solarize\n\nartistic\n\nCartoon\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\nblend\n\nBlendAlphawith EdgeDetect(1.0)\nBlendAlphaSimplexNoisewith EdgeDetect(1.0)\nBlendAlphaFrequencyNoisewith EdgeDetect(1.0)\nBlendAlphaSomeColorswith RemoveSaturation(1.0)\nBlendAlphaRegularGridwith Multiply((0.0, 0.5))\n\n\n\n\n\n\n\n\n\n\n\nSee also: BlendAlphaMask, BlendAlphaElementwise, BlendAlphaVerticalLinearGradient, BlendAlphaHorizontalLinearGradient, BlendAlphaSegMapClassIds, BlendAlphaBoundingBoxes, BlendAlphaCheckerboard, SomeColorsMaskGen, HorizontalLinearGradientMaskGen, VerticalLinearGradientMaskGen, RegularGridMaskGen, CheckerboardMaskGen, SegMapClassIdsMaskGen, BoundingBoxesMaskGen, InvertMaskGen\n\nblur\n\nGaussianBlur\nAverageBlur\nMedianBlur\nBilateralBlur(sigma_color=250,sigma_space=250)\nMotionBlur(angle=0)\n\n\n\n\n\n\n\n\n\nMotionBlur(k=5)\nMeanShiftBlur\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\ncollections\n\nRandAugment\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\ncolor\n\nMultiplyAndAddToBrightness\nMultiplyHueAndSaturation\nMultiplyHue\nMultiplySaturation\nAddToHueAndSaturation\n\n\n\n\n\n\n\n\n\nGrayscale\nRemoveSaturation\nChangeColorTemperature\nKMeansColorQuantization(to_colorspace=RGB)\nUniformColorQuantization(to_colorspace=RGB)\n\n\n\n\n\n\n\n\n\n\n\nSee also: WithColorspace, WithBrightnessChannels, MultiplyBrightness, AddToBrightness, WithHueAndSaturation, AddToHue, AddToSaturation, ChangeColorspace, Posterize\n\ncontrast\n\nGammaContrast\nGammaContrast(per_channel=True)\nSigmoidContrast(cutoff=0.5)\nSigmoidContrast(gain=10)\nLogContrast\n\n\n\n\n\n\n\n\n\nLinearContrast\nAllChannels-HistogramEqualization\nHistogramEqualization\nAllChannelsCLAHE\nCLAHE\n\n\n\n\n\n\n\n\n\n\n\nSee also: Equalize\n\nconvolutional\n\nSharpen(alpha=1)\nEmboss(alpha=1)\nEdgeDetect\nDirectedEdgeDetect(alpha=1)\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\nSee also: Convolve\n\n\ndebug\n\nSee also: SaveDebugImageEveryNBatches\n\nedges\n\nCanny\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\nflip\n\nFliplr\nFlipud\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\nSee also: HorizontalFlip, VerticalFlip\n\ngeometric\n\nAffine\nAffine: Modes\n\u00a0\n\n\n\n\n\u00a0\n\n\nAffine: cval\nPiecewiseAffine\n\u00a0\n\n\n\n\n\u00a0\n\n\nPerspectiveTransform\nElasticTransformation(sigma=1.0)\n\u00a0\n\n\n\n\n\u00a0\n\n\nElasticTransformation(sigma=4.0)\nRot90\n\u00a0\n\n\n\n\n\u00a0\n\n\nWithPolarWarping+Affine\nJigsaw(5x5 grid)\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\nSee also: ScaleX, ScaleY, TranslateX, TranslateY, Rotate\n\nimgcorruptlike\n\nGlassBlur\nDefocusBlur\nZoomBlur\nSnow\nSpatter\n\n\n\n\n\n\n\n\n\n\n\nSee also: GaussianNoise, ShotNoise, ImpulseNoise, SpeckleNoise, GaussianBlur, MotionBlur, Fog, Frost, Contrast, Brightness, Saturate, JpegCompression, Pixelate, ElasticTransform\n\npillike\n\nAutocontrast\nEnhanceColor\nEnhanceSharpness\nFilterEdgeEnhanceMore\nFilterContour\n\n\n\n\n\n\n\n\n\n\n\nSee also: Solarize, Posterize, Equalize, EnhanceContrast, EnhanceBrightness, FilterBlur, FilterSmooth, FilterSmoothMore, FilterEdgeEnhance, FilterFindEdges, FilterEmboss, FilterSharpen, FilterDetail, Affine\n\npooling\n\nAveragePooling\nMaxPooling\nMinPooling\nMedianPooling\n\u00a0\n\n\n\n\n\n\n\u00a0\n\nsegmentation\n\nSuperpixels(p_replace=1)\nSuperpixels(n_segments=100)\nUniformVoronoi\nRegularGridVoronoi: rows\/cols(p_drop_points=0)\nRegularGridVoronoi: p_drop_points(n_rows=n_cols=30)\n\n\n\n\n\n\n\n\n\nRegularGridVoronoi: p_replace(n_rows=n_cols=16)\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\nSee also: Voronoi, RelativeRegularGridVoronoi, RegularGridPointsSampler, RelativeRegularGridPointsSampler, DropoutPointsSampler, UniformPointsSampler, SubsamplingPointsSampler\n\nsize\n\nCropAndPad\nCrop\n\u00a0\n\n\n\n\n\u00a0\n\n\nPad\nPadToFixedSize(height'=height+32,width'=width+32)\n\u00a0\n\n\n\n\n\u00a0\n\n\nCropToFixedSize(height'=height-32,width'=width-32)\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\nSee also: Resize, CropToMultiplesOf, PadToMultiplesOf, CropToPowersOf, PadToPowersOf, CropToAspectRatio, PadToAspectRatio, CropToSquare, PadToSquare, CenterCropToFixedSize, CenterPadToFixedSize, CenterCropToMultiplesOf, CenterPadToMultiplesOf, CenterCropToPowersOf, CenterPadToPowersOf, CenterCropToAspectRatio, CenterPadToAspectRatio, CenterCropToSquare, CenterPadToSquare, KeepSizeByResize\n\nweather\n\nFastSnowyLandscape(lightness_multiplier=2.0)\nClouds\nFog\nSnowflakes\nRain\n\n\n\n\n\n\n\n\n\n\n\nSee also: CloudLayer, SnowflakesLayer, RainLayer\n\n\n\nCode Examples\nExample: Simple Training Setting\nA standard machine learning situation.\nTrain on batches of images and augment each batch via crop, horizontal\nflip (\"Fliplr\") and gaussian blur:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\ndef load_batch(batch_idx):\n    # dummy function, implement this\n    # Return a numpy array of shape (N, height, width, #channels)\n    # or a list of (height, width, #channels) arrays (may have different image\n    # sizes).\n    # Images should be in RGB for colorspace augmentations.\n    # (cv2.imread() returns BGR!)\n    # Images should usually be in uint8 with values from 0-255.\n    return np.zeros((128, 32, 32, 3), dtype=np.uint8) + (batch_idx % 255)\n\ndef train_on_images(images):\n    # dummy function, implement this\n    pass\n\n# Pipeline:\n# (1) Crop images from each side by 1-16px, do not resize the results\n#     images back to the input size. Keep them at the cropped size.\n# (2) Horizontally flip 50% of the images.\n# (3) Blur images using a gaussian kernel with sigma between 0.0 and 3.0.\nseq = iaa.Sequential([\n    iaa.Crop(px=(1, 16), keep_size=False),\n    iaa.Fliplr(0.5),\n    iaa.GaussianBlur(sigma=(0, 3.0))\n])\n\nfor batch_idx in range(100):\n    images = load_batch(batch_idx)\n    images_aug = seq(images=images)  # done by the library\n    train_on_images(images_aug)\nExample: Very Complex Augmentation Pipeline\nApply a very heavy augmentation pipeline to images (used to create the image\nat the very top of this readme):\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\n# random example images\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# Sometimes(0.5, ...) applies the given augmenter in 50% of all cases,\n# e.g. Sometimes(0.5, GaussianBlur(0.3)) would blur roughly every second image.\nsometimes = lambda aug: iaa.Sometimes(0.5, aug)\n\n# Define our sequence of augmentation steps that will be applied to every image\n# All augmenters with per_channel=0.5 will sample one value _per image_\n# in 50% of all cases. In all other cases they will sample new values\n# _per channel_.\n\nseq = iaa.Sequential(\n    [\n        # apply the following augmenters to most images\n        iaa.Fliplr(0.5), # horizontally flip 50% of all images\n        iaa.Flipud(0.2), # vertically flip 20% of all images\n        # crop images by -5% to 10% of their height\/width\n        sometimes(iaa.CropAndPad(\n            percent=(-0.05, 0.1),\n            pad_mode=ia.ALL,\n            pad_cval=(0, 255)\n        )),\n        sometimes(iaa.Affine(\n            scale={\"x\": (0.8, 1.2), \"y\": (0.8, 1.2)}, # scale images to 80-120% of their size, individually per axis\n            translate_percent={\"x\": (-0.2, 0.2), \"y\": (-0.2, 0.2)}, # translate by -20 to +20 percent (per axis)\n            rotate=(-45, 45), # rotate by -45 to +45 degrees\n            shear=(-16, 16), # shear by -16 to +16 degrees\n            order=[0, 1], # use nearest neighbour or bilinear interpolation (fast)\n            cval=(0, 255), # if mode is constant, use a cval between 0 and 255\n            mode=ia.ALL # use any of scikit-image's warping modes (see 2nd image from the top for examples)\n        )),\n        # execute 0 to 5 of the following (less important) augmenters per image\n        # don't execute all of them, as that would often be way too strong\n        iaa.SomeOf((0, 5),\n            [\n                sometimes(iaa.Superpixels(p_replace=(0, 1.0), n_segments=(20, 200))), # convert images into their superpixel representation\n                iaa.OneOf([\n                    iaa.GaussianBlur((0, 3.0)), # blur images with a sigma between 0 and 3.0\n                    iaa.AverageBlur(k=(2, 7)), # blur image using local means with kernel sizes between 2 and 7\n                    iaa.MedianBlur(k=(3, 11)), # blur image using local medians with kernel sizes between 2 and 7\n                ]),\n                iaa.Sharpen(alpha=(0, 1.0), lightness=(0.75, 1.5)), # sharpen images\n                iaa.Emboss(alpha=(0, 1.0), strength=(0, 2.0)), # emboss images\n                # search either for all edges or for directed edges,\n                # blend the result with the original image using a blobby mask\n                iaa.SimplexNoiseAlpha(iaa.OneOf([\n                    iaa.EdgeDetect(alpha=(0.5, 1.0)),\n                    iaa.DirectedEdgeDetect(alpha=(0.5, 1.0), direction=(0.0, 1.0)),\n                ])),\n                iaa.AdditiveGaussianNoise(loc=0, scale=(0.0, 0.05*255), per_channel=0.5), # add gaussian noise to images\n                iaa.OneOf([\n                    iaa.Dropout((0.01, 0.1), per_channel=0.5), # randomly remove up to 10% of the pixels\n                    iaa.CoarseDropout((0.03, 0.15), size_percent=(0.02, 0.05), per_channel=0.2),\n                ]),\n                iaa.Invert(0.05, per_channel=True), # invert color channels\n                iaa.Add((-10, 10), per_channel=0.5), # change brightness of images (by -10 to 10 of original value)\n                iaa.AddToHueAndSaturation((-20, 20)), # change hue and saturation\n                # either change the brightness of the whole image (sometimes\n                # per channel) or change the brightness of subareas\n                iaa.OneOf([\n                    iaa.Multiply((0.5, 1.5), per_channel=0.5),\n                    iaa.FrequencyNoiseAlpha(\n                        exponent=(-4, 0),\n                        first=iaa.Multiply((0.5, 1.5), per_channel=True),\n                        second=iaa.LinearContrast((0.5, 2.0))\n                    )\n                ]),\n                iaa.LinearContrast((0.5, 2.0), per_channel=0.5), # improve or worsen the contrast\n                iaa.Grayscale(alpha=(0.0, 1.0)),\n                sometimes(iaa.ElasticTransformation(alpha=(0.5, 3.5), sigma=0.25)), # move pixels locally around (with random strengths)\n                sometimes(iaa.PiecewiseAffine(scale=(0.01, 0.05))), # sometimes move parts of the image around\n                sometimes(iaa.PerspectiveTransform(scale=(0.01, 0.1)))\n            ],\n            random_order=True\n        )\n    ],\n    random_order=True\n)\nimages_aug = seq(images=images)\nExample: Augment Images and Keypoints\nAugment images and keypoints\/landmarks on the same images:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\npoints = [\n    [(10.5, 20.5)],  # points on first image\n    [(50.5, 50.5), (60.5, 60.5), (70.5, 70.5)]  # points on second image\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\n# augment keypoints and images\nimages_aug, points_aug = seq(images=images, keypoints=points)\n\nprint(\"Image 1 center\", np.argmax(images_aug[0, 64, 64:64+6, 0]))\nprint(\"Image 2 center\", np.argmax(images_aug[1, 64, 64:64+6, 0]))\nprint(\"Points 1\", points_aug[0])\nprint(\"Points 2\", points_aug[1])\nNote that all coordinates in imgaug are subpixel-accurate, which is\nwhy x=0.5, y=0.5 denotes the center of the top left pixel.\nExample: Augment Images and Bounding Boxes\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\nbbs = [\n    [ia.BoundingBox(x1=10.5, y1=15.5, x2=30.5, y2=50.5)],\n    [ia.BoundingBox(x1=10.5, y1=20.5, x2=50.5, y2=50.5),\n     ia.BoundingBox(x1=40.5, y1=75.5, x2=70.5, y2=100.5)]\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\nimages_aug, bbs_aug = seq(images=images, bounding_boxes=bbs)\nExample: Augment Images and Polygons\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\npolygons = [\n    [ia.Polygon([(10.5, 10.5), (50.5, 10.5), (50.5, 50.5)])],\n    [ia.Polygon([(0.0, 64.5), (64.5, 0.0), (128.0, 128.0), (64.5, 128.0)])]\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\nimages_aug, polygons_aug = seq(images=images, polygons=polygons)\nExample: Augment Images and LineStrings\nLineStrings are similar to polygons, but are not closed, may intersect with\nthemselves and don't have an inner area.\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\nls = [\n    [ia.LineString([(10.5, 10.5), (50.5, 10.5), (50.5, 50.5)])],\n    [ia.LineString([(0.0, 64.5), (64.5, 0.0), (128.0, 128.0), (64.5, 128.0),\n                    (128.0, 0.0)])]\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\nimages_aug, ls_aug = seq(images=images, line_strings=ls)\nExample: Augment Images and Heatmaps\nHeatmaps are dense float arrays with values between 0.0 and 1.0.\nThey can be used e.g. when training models to predict facial landmark\nlocations. Note that the heatmaps here have lower height and width than the\nimages. imgaug handles that case automatically. The crop pixel amounts will\nbe halved for the heatmaps.\nimport numpy as np\nimport imgaug.augmenters as iaa\n\n# Standard scenario: You have N RGB-images and additionally 21 heatmaps per\n# image. You want to augment each image and its heatmaps identically.\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\nheatmaps = np.random.random(size=(16, 64, 64, 1)).astype(np.float32)\n\nseq = iaa.Sequential([\n    iaa.GaussianBlur((0, 3.0)),\n    iaa.Affine(translate_px={\"x\": (-40, 40)}),\n    iaa.Crop(px=(0, 10))\n])\n\nimages_aug, heatmaps_aug = seq(images=images, heatmaps=heatmaps)\nExample: Augment Images and Segmentation Maps\nThis is similar to heatmaps, but the dense arrays have dtype int32.\nOperations such as resizing will automatically use nearest neighbour\ninterpolation.\nimport numpy as np\nimport imgaug.augmenters as iaa\n\n# Standard scenario: You have N=16 RGB-images and additionally one segmentation\n# map per image. You want to augment each image and its heatmaps identically.\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\nsegmaps = np.random.randint(0, 10, size=(16, 64, 64, 1), dtype=np.int32)\n\nseq = iaa.Sequential([\n    iaa.GaussianBlur((0, 3.0)),\n    iaa.Affine(translate_px={\"x\": (-40, 40)}),\n    iaa.Crop(px=(0, 10))\n])\n\nimages_aug, segmaps_aug = seq(images=images, segmentation_maps=segmaps)\nExample: Visualize Augmented Images\nQuickly show example results of your augmentation sequence:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\nseq = iaa.Sequential([iaa.Fliplr(0.5), iaa.GaussianBlur((0, 3.0))])\n\n# Show an image with 8*8 augmented versions of image 0 and 8*8 augmented\n# versions of image 1. Identical augmentations will be applied to\n# image 0 and 1.\nseq.show_grid([images[0], images[1]], cols=8, rows=8)\nExample: Visualize Augmented Non-Image Data\nimgaug contains many helper function, among these functions to quickly\nvisualize augmented non-image results, such as bounding boxes or heatmaps.\nimport numpy as np\nimport imgaug as ia\n\nimage = np.zeros((64, 64, 3), dtype=np.uint8)\n\n# points\nkps = [ia.Keypoint(x=10.5, y=20.5), ia.Keypoint(x=60.5, y=60.5)]\nkpsoi = ia.KeypointsOnImage(kps, shape=image.shape)\nimage_with_kps = kpsoi.draw_on_image(image, size=7, color=(0, 0, 255))\nia.imshow(image_with_kps)\n\n# bbs\nbbsoi = ia.BoundingBoxesOnImage([\n    ia.BoundingBox(x1=10.5, y1=20.5, x2=50.5, y2=30.5)\n], shape=image.shape)\nimage_with_bbs = bbsoi.draw_on_image(image)\nimage_with_bbs = ia.BoundingBox(\n    x1=50.5, y1=10.5, x2=100.5, y2=16.5\n).draw_on_image(image_with_bbs, color=(255, 0, 0), size=3)\nia.imshow(image_with_bbs)\n\n# polygons\npsoi = ia.PolygonsOnImage([\n    ia.Polygon([(10.5, 20.5), (50.5, 30.5), (10.5, 50.5)])\n], shape=image.shape)\nimage_with_polys = psoi.draw_on_image(\n    image, alpha_points=0, alpha_face=0.5, color_lines=(255, 0, 0))\nia.imshow(image_with_polys)\n\n# heatmaps\nhms = ia.HeatmapsOnImage(np.random.random(size=(32, 32, 1)).astype(np.float32),\n                         shape=image.shape)\nimage_with_hms = hms.draw_on_image(image)\nia.imshow(image_with_hms)\nLineStrings and segmentation maps support similar methods as shown above.\nExample: Using Augmenters Only Once\nWhile the interface is adapted towards re-using instances of augmenters\nmany times, you are also free to use them only once. The overhead to\ninstantiate the augmenters each time is usually negligible.\nfrom imgaug import augmenters as iaa\nimport numpy as np\n\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# always horizontally flip each input image\nimages_aug = iaa.Fliplr(1.0)(images=images)\n\n# vertically flip each input image with 90% probability\nimages_aug = iaa.Flipud(0.9)(images=images)\n\n# blur 50% of all images using a gaussian kernel with a sigma of 3.0\nimages_aug = iaa.Sometimes(0.5, iaa.GaussianBlur(3.0))(images=images)\nExample: Multicore Augmentation\nImages can be augmented in background processes using the\nmethod augment_batches(batches, background=True), where batches is\na list\/generator of\nimgaug.augmentables.batches.UnnormalizedBatch\nor\nimgaug.augmentables.batches.Batch.\nThe following example augments a list of image batches in the background:\nimport skimage.data\nimport imgaug as ia\nimport imgaug.augmenters as iaa\nfrom imgaug.augmentables.batches import UnnormalizedBatch\n\n# Number of batches and batch size for this example\nnb_batches = 10\nbatch_size = 32\n\n# Example augmentation sequence to run in the background\naugseq = iaa.Sequential([\n    iaa.Fliplr(0.5),\n    iaa.CoarseDropout(p=0.1, size_percent=0.1)\n])\n\n# For simplicity, we use the same image here many times\nastronaut = skimage.data.astronaut()\nastronaut = ia.imresize_single_image(astronaut, (64, 64))\n\n# Make batches out of the example image (here: 10 batches, each 32 times\n# the example image)\nbatches = []\nfor _ in range(nb_batches):\n    batches.append(UnnormalizedBatch(images=[astronaut] * batch_size))\n\n# Show the augmented images.\n# Note that augment_batches() returns a generator.\nfor images_aug in augseq.augment_batches(batches, background=True):\n    ia.imshow(ia.draw_grid(images_aug.images_aug, cols=8))\nIf you need more control over the background augmentation, e.g. to set\nseeds, control the number of used CPU cores or constraint the memory usage,\nsee the corresponding\nmulticore augmentation notebook\nor the API about\nAugmenter.pool()\nand\nimgaug.multicore.Pool.\nExample: Probability Distributions as Parameters\nMost augmenters support using tuples (a, b) as a shortcut to denote\nuniform(a, b) or lists [a, b, c] to denote a set of allowed values from\nwhich one will be picked randomly. If you require more complex probability\ndistributions (e.g. gaussians, truncated gaussians or poisson distributions)\nyou can use stochastic parameters from imgaug.parameters:\nimport numpy as np\nfrom imgaug import augmenters as iaa\nfrom imgaug import parameters as iap\n\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# Blur by a value sigma which is sampled from a uniform distribution\n# of range 10.1 <= x < 13.0.\n# The convenience shortcut for this is: GaussianBlur((10.1, 13.0))\nblurer = iaa.GaussianBlur(10 + iap.Uniform(0.1, 3.0))\nimages_aug = blurer(images=images)\n\n# Blur by a value sigma which is sampled from a gaussian distribution\n# N(1.0, 0.1), i.e. sample a value that is usually around 1.0.\n# Clip the resulting value so that it never gets below 0.1 or above 3.0.\nblurer = iaa.GaussianBlur(iap.Clip(iap.Normal(1.0, 0.1), 0.1, 3.0))\nimages_aug = blurer(images=images)\nThere are many more probability distributions in the library, e.g. truncated\ngaussian distribution, poisson distribution or beta distribution.\nExample: WithChannels\nApply an augmenter only to specific image channels:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\n# fake RGB images\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# add a random value from the range (-30, 30) to the first two channels of\n# input images (e.g. to the R and G channels)\naug = iaa.WithChannels(\n  channels=[0, 1],\n  children=iaa.Add((-30, 30))\n)\n\nimages_aug = aug(images=images)\n\nCitation\nIf this library has helped you during your research, feel free to cite it:\n@misc{imgaug,\n  author = {Jung, Alexander B.\n            and Wada, Kentaro\n            and Crall, Jon\n            and Tanaka, Satoshi\n            and Graving, Jake\n            and Reinders, Christoph\n            and Yadav, Sarthak\n            and Banerjee, Joy\n            and Vecsei, G\u00e1bor\n            and Kraft, Adam\n            and Rui, Zheng\n            and Borovec, Jirka\n            and Vallentin, Christian\n            and Zhydenko, Semen\n            and Pfeiffer, Kilian\n            and Cook, Ben\n            and Fern\u00e1ndez, Ismael\n            and De Rainville, Fran\u00e7ois-Michel\n            and Weng, Chi-Hung\n            and Ayala-Acevedo, Abner\n            and Meudec, Raphael\n            and Laporte, Matias\n            and others},\n  title = {{imgaug}},\n  howpublished = {\\url{https:\/\/github.com\/aleju\/imgaug}},\n  year = {2020},\n  note = {Online; accessed 01-Feb-2020}\n}\n","157":"speedtest-cli\nCommand line interface for testing internet bandwidth using\nspeedtest.net\n\n\n\n\n\n\n\nVersions\nspeedtest-cli works with Python 2.4-3.7\n\n\n\nInstallation\n\npip \/ easy_install\npip install speedtest-cli\n\nor\neasy_install speedtest-cli\n\n\nGithub\npip install git+https:\/\/github.com\/sivel\/speedtest-cli.git\n\nor\ngit clone https:\/\/github.com\/sivel\/speedtest-cli.git\ncd speedtest-cli\npython setup.py install\n\n\nJust download (Like the way it used to be)\nwget -O speedtest-cli https:\/\/raw.githubusercontent.com\/sivel\/speedtest-cli\/master\/speedtest.py\nchmod +x speedtest-cli\n\nor\ncurl -Lo speedtest-cli https:\/\/raw.githubusercontent.com\/sivel\/speedtest-cli\/master\/speedtest.py\nchmod +x speedtest-cli\n\n\nUsage\n$ speedtest-cli -h\nusage: speedtest-cli [-h] [--no-download] [--no-upload] [--single] [--bytes]\n                     [--share] [--simple] [--csv]\n                     [--csv-delimiter CSV_DELIMITER] [--csv-header] [--json]\n                     [--list] [--server SERVER] [--exclude EXCLUDE]\n                     [--mini MINI] [--source SOURCE] [--timeout TIMEOUT]\n                     [--secure] [--no-pre-allocate] [--version]\n\nCommand line interface for testing internet bandwidth using speedtest.net.\n--------------------------------------------------------------------------\nhttps:\/\/github.com\/sivel\/speedtest-cli\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --no-download         Do not perform download test\n  --no-upload           Do not perform upload test\n  --single              Only use a single connection instead of multiple. This\n                        simulates a typical file transfer.\n  --bytes               Display values in bytes instead of bits. Does not\n                        affect the image generated by --share, nor output from\n                        --json or --csv\n  --share               Generate and provide a URL to the speedtest.net share\n                        results image, not displayed with --csv\n  --simple              Suppress verbose output, only show basic information\n  --csv                 Suppress verbose output, only show basic information\n                        in CSV format. Speeds listed in bit\/s and not affected\n                        by --bytes\n  --csv-delimiter CSV_DELIMITER\n                        Single character delimiter to use in CSV output.\n                        Default \",\"\n  --csv-header          Print CSV headers\n  --json                Suppress verbose output, only show basic information\n                        in JSON format. Speeds listed in bit\/s and not\n                        affected by --bytes\n  --list                Display a list of speedtest.net servers sorted by\n                        distance\n  --server SERVER       Specify a server ID to test against. Can be supplied\n                        multiple times\n  --exclude EXCLUDE     Exclude a server from selection. Can be supplied\n                        multiple times\n  --mini MINI           URL of the Speedtest Mini server\n  --source SOURCE       Source IP address to bind to\n  --timeout TIMEOUT     HTTP timeout in seconds. Default 10\n  --secure              Use HTTPS instead of HTTP when communicating with\n                        speedtest.net operated servers\n  --no-pre-allocate     Do not pre allocate upload data. Pre allocation is\n                        enabled by default to improve upload performance. To\n                        support systems with insufficient memory, use this\n                        option to avoid a MemoryError\n  --version             Show the version number and exit\n\n\nPython API\nSee the wiki.\n\nInconsistency\nIt is not a goal of this application to be a reliable latency reporting tool.\nLatency reported by this tool should not be relied on as a value indicative of ICMP\nstyle latency. It is a relative value used for determining the lowest latency server\nfor performing the actual speed test against.\nThere is the potential for this tool to report results inconsistent with Speedtest.net.\nThere are several concepts to be aware of that factor into the potential inconsistency:\n\nSpeedtest.net has migrated to using pure socket tests instead of HTTP based tests\nThis application is written in Python\nDifferent versions of Python will execute certain parts of the code faster than others\nCPU and Memory capacity and speed will play a large part in inconsistency between\nSpeedtest.net and even other machines on the same network\n\nIssues relating to inconsistencies will be closed as wontfix and without\nadditional reason or context.\n","158":"DeepCreamPy\nDecensoring Hentai with Deep Neural Networks.\n\n\n\n\n\n\nA deep learning-based tool to automatically replace censored artwork in hentai with plausible reconstructions.\nBefore DeepCreamPy can be used, the user must color censored regions in their hentai green with an image editing program like GIMP or Photoshop. DeepCreamPy takes the green colored images as input, and a neural network automatically fills in the censored regions.\nYou can download the latest release for Windows 64-bit here.\nFor users interested in compiling DeepCreamPy themselves, DeepCreamPy can run on Windows, Mac, and Linux.\nPlease before you open a new issue check closed issues and check the table of contents.\n\n\n\nFeatures\n\nDecensoring images of any size\nDecensoring of ANY shaped censor (e.g. black lines, pink hearts, etc.)\nDecensoring of mosaic decensors\nLimited support for decensoring black and white\/monochrome images\nGenerate multiple variations of decensors from the same image\n\nLimitations\nThe decensorship is for color hentai images that have minor to moderate censorship of the penis or vagina. If a vagina or penis is completely censored out, decensoring will be ineffective.\nIt does NOT work with:\n\nHentai with screentones (e.g. printed hentai)\nReal life porn\nCensorship of nipples\nCensorship of anus\nAnimated gifs\/videos\n\nTable of Contents\nSetup:\n\nRunning latest Window 64-bit release\nRunning code yourself\n\nUsage:\n\nDecensoring tutorial\nTroubleshooting for installing\nTroubleshooting for poor quality decensors\n\nMiscellaneous:\n\nFAQ\n\nTo do\n\nResolve all Tensorflow compatibility problems\nFinish the user interface\nAdd error log\n\nFollow me on Twitter @deeppomf (NSFW Tweets) for project updates.\nContributions\nIf you want to make a pull request to DeepCreamPy, you must first sign our Contributor License Agreement (the \"CLA\"). Then I can accept your pull requests.\nSpecial thanks to ccppoo, IAmTheRedSpy, 0xb8, deniszh, Smethan, harjitmoe, itsVale, StartleStars, and SoftArmpit for their contributions!\nLicense\nSource code and official releases\/binaries are distributed under the GNU Affero General Public License v3.0.\nAcknowledgements\nExample mermaid image by Shurajo & AVALANCHE Game Studio under CC BY 3.0 License. The example image is modified from the original, which can be found here.\nNeural network code is modified from Forty-lock's project PEPSI, which is the official implementation of the paper PEPSI : Fast Image Inpainting With Parallel Decoding Network. PEPSI is licensed under the MIT license.\nTraining data is modified from gwern's project Danbooru2017: A Large-Scale Crowdsourced and Tagged Anime Illustration Dataset and other sources.\nSee ACKNOWLEDGEMENTS.md for full license text of these projects.\nDonations\nIf you like the work I do, you can donate to me via Paypal. The funds go towards keeping me alive. \n","159":"Rasa Open Source\n\n\n\n\n\n\n\n\n\n\nRasa is an open source machine learning framework to automate text-and voice-based conversations. With Rasa, you can build contextual assistants on:\n\nFacebook Messenger\nSlack\nGoogle Hangouts\nWebex Teams\nMicrosoft Bot Framework\nRocket.Chat\nMattermost\nTelegram\nTwilio\nYour own custom conversational channels\n\nor voice assistants as:\n\nAlexa Skills\nGoogle Home Actions\n\nRasa helps you build contextual assistants capable of having layered conversations with\nlots of back-and-forth. In order for a human to have a meaningful exchange with a contextual\nassistant, the assistant needs to be able to use context to build on things that were previously\ndiscussed \u2013 Rasa enables you to build assistants that can do this in a scalable way.\nThere's a lot more background information in this\nblog post.\n\n\n\nWhat does Rasa do? \ud83e\udd14\nCheck out our Website\n\n\nI'm new to Rasa \ud83d\ude04\nGet Started with Rasa\n\n\nI'd like to read the detailed docs \ud83e\udd13\nRead The Docs\n\n\nI'm ready to install Rasa \ud83d\ude80\nInstallation\n\n\nI want to learn how to use Rasa \ud83d\ude80\nTutorial\n\n\nI have a question \u2753\nRasa Community Forum\n\n\nI would like to contribute \ud83e\udd17\nHow to Contribute\n\n\n\nWhere to get help\nThere is extensive documentation in the Rasa Docs.\nMake sure to select the correct version so you are looking at\nthe docs for the version you installed.\nPlease use Rasa Community Forum for quick answers to\nquestions.\nREADME Contents:\n\nHow to contribute\nDevelopment Internals\nLicense\n\nHow to contribute\nWe are very happy to receive and merge your contributions into this repository!\nTo contribute via pull request, follow these steps:\n\nCreate an issue describing the feature you want to work on (or\nhave a look at the contributor board)\nWrite your code, tests and documentation, and format them with black\nCreate a pull request describing your changes\n\nFor more detailed instructions on how to contribute code, check out these code contributor guidelines.\nYou can find more information about how to contribute to Rasa (in lots of\ndifferent ways!) on our website..\nYour pull request will be reviewed by a maintainer, who will get\nback to you about any necessary changes or questions. You will\nalso be asked to sign a\nContributor License Agreement.\nDevelopment Internals\nInstalling Poetry\nRasa uses Poetry for packaging and dependency management. If you want to build it from source,\nyou have to install Poetry first. This is how it can be done:\ncurl -sSL https:\/\/raw.githubusercontent.com\/python-poetry\/poetry\/master\/get-poetry.py | python\nThere are several other ways to install Poetry. Please, follow\nthe official guide to see all possible options.\nManaging environments\nThe official Poetry guide suggests to use\npyenv or any other similar tool to easily switch between Python versions.\nThis is how it can be done:\npyenv install 3.7.6\npyenv local 3.7.6  # Activate Python 3.7.6 for the current project\nBy default, Poetry will try to use the currently activated Python version to create the virtual environment\nfor the current project automatically. You can also create and activate a virtual environment manually \u2014 in this\ncase, Poetry should pick it up and use it to install the dependencies. For example:\npython -m venv .venv\nsource .venv\/bin\/activate\nYou can make sure that the environment is picked up by executing\npoetry env info\nBuilding from source\nTo install dependencies and rasa itself in editable mode execute\nmake install\nRunning and changing the documentation\nFirst of all, install all the required dependencies:\nmake install install-docs\nAfter the installation has finished, you can run and view the documentation\nlocally using:\nmake livedocs\nIt should open a new tab with the local version of the docs in your browser;\nif not, visit http:\/\/localhost:3000 in your browser.\nYou can now change the docs locally and the web page will automatically reload\nand apply your changes.\nRunning the Tests\nIn order to run the tests, make sure that you have the development requirements installed:\nmake prepare-tests-ubuntu # Only on Ubuntu and Debian based systems\nmake prepare-tests-macos  # Only on macOS\nThen, run the tests:\nmake test\nThey can also be run at multiple jobs to save some time:\nJOBS=[n] make test\nWhere [n] is the number of jobs desired. If omitted, [n] will be automatically chosen by pytest.\nResolving merge conflicts\nPoetry doesn't include any solution that can help to resolve merge conflicts in\nthe lock file poetry.lock by default.\nHowever, there is a great tool called poetry-merge-lock.\nHere is how you can install it:\npip install poetry-merge-lock\nJust execute this command to resolve merge conflicts in poetry.lock automatically:\npoetry-merge-lock\nSteps to release a new version\nReleasing a new version is quite simple, as the packages are build and distributed by GitHub Actions.\nTerminology:\n\npatch release (third version part increases): 1.1.2 -> 1.1.3\nminor release (second version part increases): 1.1.3 -> 1.2.0\nmajor release (first version part increases): 1.2.0 -> 2.0.0\n\nRelease steps:\n\nMake sure all dependencies are up to date (especially Rasa SDK)\n\nFor Rasa SDK that means first creating a new Rasa SDK release (make sure the version numbers between the new Rasa and Rasa SDK releases match)\nOnce the tag with the new Rasa SDK release is pushed and the package appears on pypi, the dependency in the rasa repository can be resolved (see below).\n\n\nSwitch to the branch you want to cut the release from (master in case of a major \/ minor, the current feature branch for patch releases)\n\nUpdate the rasa-sdk entry in pyproject.toml with the new release version and run poetry update. This creates a new poetry.lock file with all dependencies resolved.\nCommit the changes with git commit -am \"bump rasa-sdk dependency\" but do not push them. They will be automatically picked up by the following step.\n\n\nRun make release\nCreate a PR against master or the release branch (e.g. 1.2.x)\nOnce your PR is merged, tag a new release (this SHOULD always happen on master or release branches), e.g. using\ngit tag 1.2.0 -m \"next release\"\ngit push origin 1.2.0\nGitHub will build this tag and push a package to pypi\nIf this is a minor release, a new release branch should be created pointing to the same commit as the tag to allow for future patch releases, e.g.\ngit checkout -b 1.2.x\ngit push origin 1.2.x\n\n\nCode Style\nTo ensure a standardized code style we use the formatter black.\nTo ensure our type annotations are correct we use the type checker pytype.\nIf your code is not formatted properly or doesn't type check, GitHub will fail to build.\nFormatting\nIf you want to automatically format your code on every commit, you can use pre-commit.\nJust install it via pip install pre-commit and execute pre-commit install in the root folder.\nThis will add a hook to the repository, which reformats files on every commit.\nIf you want to set it up manually, install black via poetry install.\nTo reformat files execute\nmake formatter\n\nType Checking\nIf you want to check types on the codebase, install mypy using poetry install.\nTo check the types execute\nmake types\n\nDeploying documentation updates\nWe use Docusaurus v2 to build docs for tagged versions and for the master branch.\nThe static site that gets built is pushed to the documentation branch of this repo.\nWe host the site on netlify. On master branch builds (see .github\/workflows\/documentation.yml), we push the built docs to\nthe documentation branch. Netlify automatically re-deploys the docs pages whenever there is a change to that branch.\nLicense\nLicensed under the Apache License, Version 2.0.\nCopyright 2020 Rasa Technologies GmbH. Copy of the license.\nA list of the Licenses of the dependencies of the project can be found at\nthe bottom of the\nLibraries Summary.\n","160":"TuShare\nTushare Pro\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u8bbf\u95ee\u65b0\u7684\u5b98\u7f51\u4e86\u89e3\u548c\u67e5\u8be2\u6570\u636e\u63a5\u53e3\uff01 https:\/\/tushare.pro\nTuShare\u662f\u5b9e\u73b0\u5bf9\u80a1\u7968\/\u671f\u8d27\u7b49\u91d1\u878d\u6570\u636e\u4ece\u6570\u636e\u91c7\u96c6\u3001\u6e05\u6d17\u52a0\u5de5 \u5230 \u6570\u636e\u5b58\u50a8\u8fc7\u7a0b\u7684\u5de5\u5177\uff0c\u6ee1\u8db3\u91d1\u878d\u91cf\u5316\u5206\u6790\u5e08\u548c\u5b66\u4e60\u6570\u636e\u5206\u6790\u7684\u4eba\u5728\u6570\u636e\u83b7\u53d6\u65b9\u9762\u7684\u9700\u6c42\uff0c\u5b83\u7684\u7279\u70b9\u662f\u6570\u636e\u8986\u76d6\u8303\u56f4\u5e7f\uff0c\u63a5\u53e3\u8c03\u7528\u7b80\u5355,\u54cd\u5e94\u5feb\u901f\u3002\n\n\u6b22\u8fce\u5173\u6ce8\u626b\u63cfTuShare\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u201c\u6316\u5730\u5154\u201d\uff0c\u66f4\u591a\u8d44\u6e90\u548c\u4fe1\u606f\u4e0e\u60a8\u5206\u4eab\u3002\u53e6\u5916\uff0c\u7531\u4e8etushare\u5b98\u7f51\u5728\u91cd\u65b0\u8bbe\u8ba1\u548c\u5f00\u53d1\uff0c\u6700\u65b0\u63a5\u53e3\u7684\u4f7f\u7528\u6587\u6863\u90fd\u4f1a\u5728\u6316\u5730\u5154\u516c\u4f17\u53f7\u53d1\u5e03\uff0c\u6240\u4ee5\uff0c\u8bf7\u626b\u7801\u5173\u6ce8\uff0c\u8c22\u8c22\uff01\n\nQQ\u4ea4\u6d41\u7fa4\uff1a\n\n\u4e00\u7fa4\uff08\u5df2\u6ee1\uff09\uff1a14934432\n\u4e8c\u7fa4\uff08\u4ed8\u8d39\u9ad8\u7ea7\u7528\u6237\u7fa4\uff0c\u53ef\u83b7\u5f97\u66f4\u591a\u652f\u6301\u53ca\u53c2\u4e0e\u5708\u5b50\u6d3b\u52a8\uff09\uff1a658562506\n\u4e09\u7fa4\uff08\u514d\u8d39\uff09\uff1a665480579\n\u56db\u7fa4 (\u514d\u8d39) \uff1a527416821\n\nDependencies\npython 2.x\/3.x\npandas\nInstallation\n\n\u65b9\u5f0f1\uff1apip install tushare\n\u65b9\u5f0f2\uff1apython setup.py install\n\u65b9\u5f0f3\uff1a\u8bbf\u95eehttps:\/\/pypi.python.org\/pypi\/tushare\/\u4e0b\u8f7d\u5b89\u88c5\n\nUpgrade\npip install tushare --upgrade\n\nQuick Start\nExample 1. \u83b7\u53d6\u4e2a\u80a1\u5386\u53f2\u4ea4\u6613\u6570\u636e\uff08\u5305\u62ec\u5747\u7ebf\u6570\u636e\uff09\uff1a\nimport tushare as ts\n\nts.get_hist_data('600848') #\u4e00\u6b21\u6027\u83b7\u53d6\u5168\u90e8\u6570\u636e\n\u53e6\u5916\uff0c\u53c2\u8003get_k_data\u51fd\u6570\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u65e5\u671f \uff0c\u5f00\u76d8\u4ef7\uff0c \u6700\u9ad8\u4ef7\uff0c \u6536\u76d8\u4ef7\uff0c \u6700\u4f4e\u4ef7\uff0c \u6210\u4ea4\u91cf\uff0c \u4ef7\u683c\u53d8\u52a8 \uff0c\u6da8\u8dcc\u5e45\uff0c5\u65e5\u5747\u4ef7\uff0c10\u65e5\u5747\u4ef7\uff0c20\u65e5\u5747\u4ef7\uff0c5\u65e5\u5747\u91cf\uff0c10\u65e5\u5747\u91cf\uff0c20\u65e5\u5747\u91cf\uff0c\u6362\u624b\u7387\n\n\t\t\t open    high   close     low     volume    p_change  ma5 \\\ndate                                                                     \n2012-01-11   6.880   7.380   7.060   6.880   14129.96     2.62   7.060   \n2012-01-12   7.050   7.100   6.980   6.900    7895.19    -1.13   7.020   \n2012-01-13   6.950   7.000   6.700   6.690    6611.87    -4.01   6.913   \n2012-01-16   6.680   6.750   6.510   6.480    2941.63    -2.84   6.813   \n2012-01-17   6.660   6.880   6.860   6.460    8642.57     5.38   6.822   \n2012-01-18   7.000   7.300   6.890   6.880   13075.40     0.44   6.788   \n2012-01-19   6.690   6.950   6.890   6.680    6117.32     0.00   6.770   \n2012-01-20   6.870   7.080   7.010   6.870    6813.09     1.74   6.832 \n\n\t\t\t ma10    ma20      v_ma5     v_ma10     v_ma20     turnover  \ndate                                                                  \n2012-01-11   7.060   7.060   14129.96   14129.96   14129.96     0.48  \n2012-01-12   7.020   7.020   11012.58   11012.58   11012.58     0.27  \n2012-01-13   6.913   6.913    9545.67    9545.67    9545.67     0.23  \n2012-01-16   6.813   6.813    7894.66    7894.66    7894.66     0.10  \n2012-01-17   6.822   6.822    8044.24    8044.24    8044.24     0.30  \n2012-01-18   6.833   6.833    7833.33    8882.77    8882.77     0.45  \n2012-01-19   6.841   6.841    7477.76    8487.71    8487.71     0.21  \n2012-01-20   6.863   6.863    7518.00    8278.38    8278.38     0.23  \n\n\u8bbe\u5b9a\u5386\u53f2\u6570\u636e\u7684\u65f6\u95f4\uff1a\nts.get_hist_data('600848',start='2015-01-05',end='2015-01-09')\n\n\t\t\topen    high   close     low    volume   p_change     ma5    ma10 \\  \ndate                                                                            \n2015-01-05  11.160  11.390  11.260  10.890  46383.57     1.26  11.156  11.212   \n2015-01-06  11.130  11.660  11.610  11.030  59199.93     3.11  11.182  11.155   \n2015-01-07  11.580  11.990  11.920  11.480  86681.38     2.67  11.366  11.251   \n2015-01-08  11.700  11.920  11.670  11.640  56845.71    -2.10  11.516  11.349   \n2015-01-09  11.680  11.710  11.230  11.190  44851.56    -3.77  11.538  11.363   \n \t\t\tma20     v_ma5    v_ma10     v_ma20 \t turnover  \ndate                                                        \n2015-01-05  11.198  58648.75  68429.87   97141.81     1.59  \n2015-01-06  11.382  54854.38  63401.05   98686.98     2.03  \n2015-01-07  11.543  55049.74  61628.07  103010.58     2.97  \n2015-01-08  11.647  57268.99  61376.00  105823.50     1.95  \n2015-01-09  11.682  58792.43  60665.93  107924.27     1.54  \n\n\u590d\u6743\u5386\u53f2\u6570\u636e\n\u83b7\u53d6\u5386\u53f2\u590d\u6743\u6570\u636e\uff0c\u5206\u4e3a\u524d\u590d\u6743\u548c\u540e\u590d\u6743\u6570\u636e\uff0c\u63a5\u53e3\u63d0\u4f9b\u80a1\u7968\u4e0a\u5e02\u4ee5\u6765\u6240\u6709\u5386\u53f2\u6570\u636e\uff0c\u9ed8\u8ba4\u4e3a\u524d\u590d\u6743\u3002\u5982\u679c\u4e0d\u8bbe\u5b9a\u5f00\u59cb\u548c\u7ed3\u675f\u65e5\u671f\uff0c\u5219\u8fd4\u56de\u8fd1\u4e00\u5e74\u7684\u590d\u6743\u6570\u636e\uff0c\u4ece\u6027\u80fd\u4e0a\u8003\u8651\uff0c\u63a8\u8350\u8bbe\u5b9a\u5f00\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f\uff0c\u800c\u4e14\u6700\u597d\u4e0d\u8981\u8d85\u8fc7\u4e00\u5e74\u4ee5\u4e0a\uff0c\u83b7\u53d6\u5230\u6570\u636e\u540e\uff0c\u8bf7\u53ca\u65f6\u5728\u672c\u5730\u5b58\u50a8\u3002\nts.get_h_data('002337') #\u524d\u590d\u6743\nts.get_h_data('002337',autype='hfq') #\u540e\u590d\u6743\nts.get_h_data('002337',autype=None) #\u4e0d\u590d\u6743\nts.get_h_data('002337',start='2015-01-01',end='2015-03-16') #\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u7684\u524d\u590d\u6743\u6570\u636e\n\nExample 2. \u4e00\u6b21\u6027\u83b7\u53d6\u6700\u8fd1\u4e00\u4e2a\u65e5\u4ea4\u6613\u65e5\u6240\u6709\u80a1\u7968\u7684\u4ea4\u6613\u6570\u636e\uff08\u7ed3\u679c\u663e\u793a\u901f\u5ea6\u53d6\u51b3\u4e8e\u7f51\u901f\uff09\nts.get_today_all()\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u4ee3\u7801\uff0c\u540d\u79f0\uff0c\u6da8\u8dcc\u5e45\uff0c\u73b0\u4ef7\uff0c\u5f00\u76d8\u4ef7\uff0c\u6700\u9ad8\u4ef7\uff0c\u6700\u4f4e\u4ef7\uff0c\u6700\u65e5\u6536\u76d8\u4ef7\uff0c\u6210\u4ea4\u91cf\uff0c\u6362\u624b\u7387\n\n\t  code    name     changepercent  trade   open   high    low  settlement \\  \n0     002738  \u4e2d\u77ff\u8d44\u6e90         10.023  19.32  19.32  19.32  19.32       17.56   \n1     300410  \u6b63\u4e1a\u79d1\u6280         10.022  25.03  25.03  25.03  25.03       22.75   \n2     002736  \u56fd\u4fe1\u8bc1\u5238         10.013  16.37  16.37  16.37  16.37       14.88   \n3     300412  \u8fe6\u5357\u79d1\u6280         10.010  31.54  31.54  31.54  31.54       28.67   \n4     300411  \u91d1\u76fe\u80a1\u4efd         10.007  29.68  29.68  29.68  29.68       26.98   \n5     603636  \u5357\u5a01\u8f6f\u4ef6         10.006  38.15  38.15  38.15  38.15       34.68   \n6     002664  \u4fe1\u8d28\u7535\u673a         10.004  30.68  29.00  30.68  28.30       27.89   \n7     300367  \u4e1c\u65b9\u7f51\u529b         10.004  86.76  78.00  86.76  77.87       78.87   \n8     601299  \u4e2d\u56fd\u5317\u8f66         10.000  11.44  11.44  11.44  11.29       10.40   \n9     601880   \u5927\u8fde\u6e2f         10.000   5.72   5.34   5.72   5.22        5.20   \n10    000856  \u5180\u4e1c\u88c5\u5907         10.000   8.91   8.18   8.91   8.18        8.10  \n\t\tvolume  \t turnoverratio  \n0        375100        1.25033  \n1         85800        0.57200  \n2       1058925        0.08824  \n3         69400        0.51791  \n4        252220        1.26110  \n5       1374630        5.49852  \n6       6448748        9.32700  \n7       2025030        6.88669  \n8     433453523        4.28056  \n9     323469835        9.61735  \n10     25768152       19.51090  \n\nExample 3. \u83b7\u53d6\u5386\u53f2\u5206\u7b14\u6570\u636e\nimport tushare as ts\n\ndf = ts.get_tick_data('600848',date='2014-01-09')\ndf.head(10)\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u6210\u4ea4\u65f6\u95f4\u3001\u6210\u4ea4\u4ef7\u683c\u3001\u4ef7\u683c\u53d8\u52a8\uff0c\u6210\u4ea4\u624b\u3001\u6210\u4ea4\u91d1\u989d(\u5143)\uff0c\u4e70\u5356\u7c7b\u578b\n\nOut[3]: \n \t time  \t\tprice change  volume  amount  type\n0    15:00:00   6.05     --       8    4840   \u5356\u76d8\n1    14:59:55   6.05     --      50   30250   \u5356\u76d8\n2    14:59:35   6.05     --      20   12100   \u5356\u76d8\n3    14:59:30   6.05  -0.01     165   99825   \u5356\u76d8\n4    14:59:20   6.06   0.01       4    2424   \u4e70\u76d8\n5    14:59:05   6.05  -0.01       2    1210   \u5356\u76d8\n6    14:58:55   6.06     --       4    2424   \u4e70\u76d8\n7    14:58:45   6.06     --       2    1212   \u4e70\u76d8\n8    14:58:35   6.06   0.01       2    1212   \u4e70\u76d8\n9    14:58:25   6.05  -0.01      20   12100   \u5356\u76d8\n10   14:58:05   6.06     --       5    3030   \u4e70\u76d8\n\nExample 4. \u83b7\u53d6\u5b9e\u65f6\u4ea4\u6613\u6570\u636e(Realtime Quotes Data)\ndf = ts.get_realtime_quotes('000581') #Single stock symbol\ndf[['code','name','price','bid','ask','volume','amount','time']]\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u540d\u79f0\u3001\u5f00\u76d8\u4ef7\u3001\u6628\u4ef7\u3001\u73b0\u4ef7\u3001\u6700\u9ad8\u3001\u6700\u4f4e\u3001\u4e70\u5165\u4ef7\u3001\u5356\u51fa\u4ef7\u3001\u6210\u4ea4\u91cf\u3001\u6210\u4ea4\u91d1\u989d...more in docs\n\n   code    name     price  bid    ask    volume   amount        time\n0  000581  \u5a01\u5b5a\u9ad8\u79d1  31.15  31.14  31.15  8183020  253494991.16  11:30:36 \n\n\u8bf7\u6c42\u591a\u4e2a\u80a1\u7968\u65b9\u6cd5\uff08\u4e00\u6b21\u6700\u597d\u4e0d\u8981\u8d85\u8fc730\u4e2a\uff09\uff1a\nts.get_realtime_quotes(['600848','000980','000981']) #symbols from a list\nts.get_realtime_quotes(df['code'].tail(10)) #from a Series\n\n\u66f4\u591a\u6587\u6863\nhttps:\/\/tushare.pro\nhttp:\/\/tushare.org\/\nChange Logs\n1.2.17 2018\/11\/24\n\nPro\u7248\u589e\u52a0\u671f\u8d27\u6570\u636e\nPro\u7248\u589e\u52a0A\u80a1\u5468\/\u6708\u6570\u636e\nPro\u7248\u589e\u52a0\u901a\u7528\u884c\u60c5pro_bar\u63a5\u53e3\u80a1\u7968\/\u57fa\u91d1\/\u671f\u8d27\/\u6570\u636e\u8d27\u5e01\u884c\u60c5\u7684\u652f\u6301\uff0c\u540c\u65f6\u652f\u6301\u80a1\u7968\u7684\u590d\u6743\u884c\u60c5\n\n1.2.15 2018\/10\/15\n\n\u589e\u52a0\u901a\u7528\u884c\u60c5pro_bar\u63a5\u53e3\n\u4f18\u5316set_token\u529f\u80fd\n\n1.2.12 2018\/08\/10\n\n\u53d1\u5e03Pro\u7248\u7b2c\u4e00\u7a3f\n\u53d1\u5e03Pro\u7f51\u7ad9\uff0chttps:\/\/tushare.pro\n\n1.0.5 2017\/11\/12\n\n\u65b0\u589e\u53ef\u8f6c\u503a\u6570\u636e\n\u589e\u52a0\u957f\u8fde\u63a5\u5173\u95ed\u51fd\u6570\n\u4fee\u590d\u90e8\u5206bug\n\n1.0.2 2017\/10\/29\n\n\u65b0\u589ebar\u63a5\u53e3\uff0c\u652f\u6301\u66f4\u7a33\u5b9a\u7684\u80a1\u7968\u3001ETF\u3001\u671f\u8d27\u671f\u6743\u3001\u6e2f\u80a1\u3001\u4e2d\u6982\u80a1\u7b49\u54c1\u79cd\n\u65b0\u589etick\u63a5\u53e3\uff0c\u652f\u6301\u4ee5\u4e0a\u54c1\u79cd\u7684\u6210\u4ea4\u6570\u636e\n\u65b0\u589e\u6caa\u6df1\u6e2f\u901a\u6bcf\u65e5\u8d44\u91d1\u6d41\u5411\u6570\u636e\n\u4fee\u590d\u4e86\u90e8\u5206bug\n\n0.9.2 2017\/09\/13\n\n\u65b0\u589e\u6570\u636e\u8d27\u5e01\u884c\u60c5\u6570\u636e\u63a5\u53e3,\u540c\u65f6\u652f\u6301\u706b\u5e01\u3001okcoin\u3001\u4e2d\u56fd\u6bd4\u7279\u5e01\n\u90e8\u5206bug\u4fee\u590d\n\n0.8.8 2017\/08\/29\n\n\u65b0\u589e\u5206\u7ea2\u9001\u80a1\u6570\u636e\uff08\u5305\u542b\u5386\u53f2\uff09\n\u65b0\u589eget_day_all\u63a5\u53e3\n\u65b0\u589eBDI\u63a5\u53e3\n\n0.8.0 2017\/06\/05\n\n\u65b0\u589e\u671f\u8d27\u884c\u60c5\u6570\u636e6\u4e2a\u63a5\u53e3\uff0c\u611f\u8c22debugo\u8d21\u732e\u4ee3\u7801\n\u4fee\u590d\u90e8\u5206bug\n\n0.7.6 2017\/05\/16\n\nget_today_all\u63a5\u53e3\u6570\u636e\u8865\u9f50\nforecast_data mac\u4e0b\u7f16\u7801\u95ee\u9898\u4fee\u590d\n\n0.7.0 2017\/03\/12\n\nget_today_all\u63a5\u53e3\u63d0\u901f\n\u7248\u672c\u7d2f\u79ef\u66f4\u65b0\n\n0.6.2 2016\/12\/03\n\n\u65b0\u589e\u5341\u5927\u80a1\u4e1c\u548c\u5341\u5927\u6d41\u901a\u80a1\u63a5\u53e3 top10_holders\n\u65b0\u589e\u5168\u7403\u5b9e\u65f6\u6307\u6570\u5217\u8868\u63a5\u53e3 global_realtime\n\u4fee\u590d\u90e8\u5206bug\n\n0.6.1 2016\/11\/22\n\n\u4fee\u6b63get_k_databug\n\u4fee\u6b63\u5b9e\u76d8\u4ea4\u6613\u767b\u5f55\u95ee\u9898\n\n0.5.6 2016\/11\/06\n\n\u65b0\u589e\u5168\u65b0\u884c\u60c5\u6570\u636e\u63a5\u53e3get_k_data(\u8bf7\u5173\u6ce8tushare\u516c\u4f17\u53f7\u201c\u6316\u5730\u5154\u201d\u540e\u67e5\u770b\u5386\u53f2\u6587\u7ae0\u300a\u5168\u65b0\u7684\u514d\u8d39\u884c\u60c5\u6570\u636e\u63a5\u53e3\u300b)\n\u4fee\u590d\u7a0b\u5e8f\u548c\u6587\u6863bug\n\n0.5.1 2016\/10\/16\n\n\u65b0\u589e\u5b9e\u76d8\u4ea4\u6613\u63a5\u53e3\n\u4fee\u590dbug\n\n0.4.9 2016\/03\/26\n\n\u65b0\u589e\u7533\u4e07\u884c\u4e1a\u5206\u7c7bget_industry_classified(standard='sw')\n\u65b0\u589e\u4ea4\u6613\u65e5\u5386trade_cal()\n\u4fee\u590dbug\n\n0.4.3 2015\/12\/24\n\n\u65b0\u589e\u7535\u5f71\u7968\u623f\u6570\u636e\n\u4fee\u590d\u90e8\u5206bug\n\n0.4.1 2015\/11\/27\n\n\u65b0\u589esina\u5927\u5355\u6570\u636e\n\u4fee\u6539\u5f53\u65e5\u5206\u7b14bug\n\u6df1\u5e02\u878d\u8d44\u878d\u5238\u6570\u636e\u4fee\u590d\n\n0.3.9 2015\/10\/13\n\n\u65b0\u589e\u671f\u6743\u9690\u542b\u6ce2\u52a8\u7387\u6570\u636e\n\u4fee\u590d\u6307\u6570\u6210\u4efd\u53ca\u6743\u91cd\u63a5\u53e3\u95ee\u9898\n\n0.3.8 2015\/09\/19\n\n\u6caa\u6df1300\u6210\u4efd\u80a1\u548c\u6743\u91cd\u63a5\u53e3\u95ee\u9898\u4fee\u590d\n\u5176\u5b83bug\u7684\u4fee\u590d\n\n0.3.5 2015\/07\/27\n\n\u90e8\u5206\u4ee3\u7801\u4fee\u6b63\n\n0.3.4 2015\/06\/15\n\n\n\u65b0\u589e\u2018\u9f99\u864e\u699c\u2019\u6a21\u5757\n\n\u6bcf\u65e5\u9f99\u864e\u699c\u5217\u8868\n\u4e2a\u80a1\u4e0a\u699c\u7edf\u8ba1\n\u8425\u4e1a\u90e8\u4e0a\u699c\u7edf\u8ba1\n\u9f99\u864e\u699c\u673a\u6784\u5e2d\u4f4d\u8ffd\u8e2a\n\u9f99\u864e\u699c\u673a\u6784\u5e2d\u4f4d\u6210\u4ea4\u660e\u7ec6\n\n\n\n\u4fee\u6539get_h_data\u6570\u636e\u7c7b\u578b\u4e3afloat\n\n\n\u4fee\u6539get_index\u63a5\u53e3\u9057\u6f0f\u7684open\u5217\n\n\n\u5408\u5e76GitHub\u4e0a\u63d0\u4ea4\u7684bug\u4fee\u590d\n\n\n0.2.8 2015\/04\/28\n\n\u65b0\u589e\u5927\u76d8\u6307\u6570\u5b9e\u65f6\u884c\u60c5\u5217\u8868\n\u65b0\u589e\u5927\u76d8\u6307\u6570\u5386\u53f2\u884c\u60c5\u6570\u636e\uff08\u5168\u90e8\uff09\n\u65b0\u589e\u7ec8\u6b62\u4e0a\u5e02\u516c\u53f8\u5217\u8868\uff08\u9000\u5e02\uff09\n\u65b0\u589e\u6682\u505c\u4e0a\u5e02\u516c\u53f8\u5217\u8868\n\u4fee\u6b63\u878d\u8d44\u878d\u5238\u660e\u7ec6\u65e0\u65e5\u671f\u7684\u7f3a\u9677\n\u4fee\u6b63get_h_data\u90e8\u5206bug\n\n0.2.6\n\n\u65b0\u589e\u6caa\u5e02\u878d\u8d44\u878d\u5238\u5217\u8868\n\u65b0\u589e\u6caa\u5e02\u878d\u8d44\u878d\u5238\u660e\u7ec6\u5217\u8868\n\u65b0\u589e\u6df1\u5e02\u878d\u8d44\u878d\u5238\u5217\u8868\n\u65b0\u589e\u6df1\u5e02\u878d\u8d44\u878d\u5238\u660e\u7ec6\u5217\u8868\n\u4fee\u6b63\u590d\u6743\u6570\u636e\u6570\u636e\u6e90\u51fa\u73b0null\u9020\u6210\u5f02\u5e38\u95ee\u9898\uff08\u5bf9\u5927\u7ea6300\u4e2a\u80a1\u7968\u6709\u5f71\u54cd\uff09\n\n0.2.5 2015\/04\/16\n\n\u5b8c\u6210python2.x\u548cpython3.x\u517c\u5bb9\u6027\u652f\u6301\n\u90e8\u5206\u7b97\u6cd5\u4f18\u5316\u548c\u4ee3\u7801\u91cd\u6784\n\u65b0\u589e\u4e2d\u8bc1500\u6210\u4efd\u80a1\n\u65b0\u589e\u5f53\u65e5\u5206\u7b14\u4ea4\u6613\u660e\u7ec6\n\u4fee\u6b63\u5206\u914d\u9884\u6848\uff08\u9ad8\u9001\u8f6c\uff09bug\n\n0.2.3 2015\/04\/11\n\n\u65b0\u589e\u201c\u65b0\u6d6a\u80a1\u5427\u201d\u6d88\u606f\u548c\u70ed\u5ea6\n\u65b0\u589e\u65b0\u80a1\u4e0a\u5e02\u6570\u636e\n\u4fee\u6b63\u201c\u57fa\u672c\u9762\u201d\u6a21\u5757\u4e2d\u6570\u636e\u91cd\u590d\u7684\u95ee\u9898\n\u4fee\u6b63\u5386\u53f2\u6570\u636e\u7f3a\u5c11\u4e00\u5217column\uff08\u6570\u636e\u6765\u6e90\u95ee\u9898\uff09\u7684bug\n\n0.2.0 2015\/03\/17\n\n\u65b0\u589e\u5386\u53f2\u590d\u6743\u6570\u636e\u63a5\u53e3\n\u65b0\u589e\u5373\u65f6\u6eda\u52a8\u65b0\u95fb\u3001\u4fe1\u606f\u5730\u96f7\u6570\u636e\n\u65b0\u589e\u6caa\u6df1300\u6307\u6570\u6210\u80a1\u4efd\u53ca\u52a8\u6001\u6743\u91cd\u3001\n\u65b0\u589e\u4e0a\u8bc150\u6307\u6570\u6210\u4efd\u80a1\n\u4fee\u6539\u5386\u53f2\u884c\u60c5\u6570\u636e\u7c7b\u578b\u4e3afloat\n\n0.1.9 2015\/02\/06\n\n\u589e\u52a0\u5206\u7c7b\u6570\u636e\n\u589e\u52a0\u6570\u636e\u5b58\u50a8\u793a\u4f8b\n\n0.1.6 2015\/01\/27\n\n\u589e\u52a0\u4e86\u91cd\u70b9\u6307\u6570\u7684\u5386\u53f2\u548c\u5b9e\u65f6\u884c\u60c5\n\u66f4\u65b0docs\n\n0.1.5 2015\/01\/26\n\n\u589e\u52a0\u57fa\u672c\u9762\u6570\u636e\u63a5\u53e3\n\u53d1\u5e03\u4e00\u7248\u4f7f\u7528\u624b\u518c\uff0c\u5f00\u901aTuShare docs\u7f51\u7ad9\n\n0.1.3 2015\/01\/13\n\n\u589e\u52a0\u5b9e\u65f6\u4ea4\u6613\u6570\u636e\u7684\u83b7\u53d6\nDone for crawling Realtime Quotes data\n\n0.1.1 2015\/01\/11\n\n\u589e\u52a0tick\u6570\u636e\u7684\u83b7\u53d6\n\n0.1.0 2014\/12\/01\n\n\u521b\u5efa\u7b2c\u4e00\u4e2a\u7248\u672c\n\u5b9e\u73b0\u4e2a\u80a1\u5386\u53f2\u6570\u636e\u7684\u83b7\u53d6\n\n","161":"\n\n\npyecharts\n\nPython \u2764\ufe0f ECharts = pyecharts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnglish README\n\ud83d\udce3 \u7b80\u4ecb\nApache ECharts (incubating) \u662f\u4e00\u4e2a\u7531\u767e\u5ea6\u5f00\u6e90\u7684\u6570\u636e\u53ef\u89c6\u5316\uff0c\u51ed\u501f\u7740\u826f\u597d\u7684\u4ea4\u4e92\u6027\uff0c\u7cbe\u5de7\u7684\u56fe\u8868\u8bbe\u8ba1\uff0c\u5f97\u5230\u4e86\u4f17\u591a\u5f00\u53d1\u8005\u7684\u8ba4\u53ef\u3002\u800c Python \u662f\u4e00\u95e8\u5bcc\u6709\u8868\u8fbe\u529b\u7684\u8bed\u8a00\uff0c\u5f88\u9002\u5408\u7528\u4e8e\u6570\u636e\u5904\u7406\u3002\u5f53\u6570\u636e\u5206\u6790\u9047\u4e0a\u6570\u636e\u53ef\u89c6\u5316\u65f6\uff0cpyecharts \u8bde\u751f\u4e86\u3002\n\u2728 \u7279\u6027\n\n\u7b80\u6d01\u7684 API \u8bbe\u8ba1\uff0c\u4f7f\u7528\u5982\u4e1d\u6ed1\u822c\u6d41\u7545\uff0c\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n\u56ca\u62ec\u4e86 30+ \u79cd\u5e38\u89c1\u56fe\u8868\uff0c\u5e94\u6709\u5c3d\u6709\n\u652f\u6301\u4e3b\u6d41 Notebook \u73af\u5883\uff0cJupyter Notebook \u548c JupyterLab\n\u53ef\u8f7b\u677e\u96c6\u6210\u81f3 Flask\uff0cSanic\uff0cDjango \u7b49\u4e3b\u6d41 Web \u6846\u67b6\n\u9ad8\u5ea6\u7075\u6d3b\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u8f7b\u677e\u642d\u914d\u51fa\u7cbe\u7f8e\u7684\u56fe\u8868\n\u8be6\u7ec6\u7684\u6587\u6863\u548c\u793a\u4f8b\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u66f4\u5feb\u7684\u4e0a\u624b\u9879\u76ee\n\u591a\u8fbe 400+ \u5730\u56fe\u6587\u4ef6\uff0c\u5e76\u4e14\u652f\u6301\u539f\u751f\u767e\u5ea6\u5730\u56fe\uff0c\u4e3a\u5730\u7406\u6570\u636e\u53ef\u89c6\u5316\u63d0\u4f9b\u5f3a\u6709\u529b\u7684\u652f\u6301\n\n\u23f3 \u7248\u672c\nv0.5.x \u548c V1 \u95f4\u4e0d\u517c\u5bb9\uff0cV1 \u662f\u4e00\u4e2a\u5168\u65b0\u7684\u7248\u672c\uff0c\u8be6\u89c1 ISSUE#892\uff0cISSUE#1033\u3002\nV0.5.x\n\n\u652f\u6301 Python2.7\uff0c3.4+\n\n\u7ecf\u5f00\u53d1\u56e2\u961f\u51b3\u5b9a\uff0c0.5.x \u7248\u672c\u5c06\u4e0d\u518d\u8fdb\u884c\u7ef4\u62a4\uff0c0.5.x \u7248\u672c\u4ee3\u7801\u4f4d\u4e8e 05x \u5206\u652f\uff0c\u6587\u6863\u4f4d\u4e8e 05x-docs.pyecharts.org\u3002\nV1\n\n\u4ec5\u652f\u6301 Python3.6+\n\n\u65b0\u7248\u672c\u7cfb\u5217\u5c06\u4ece v1.0.0 \u5f00\u59cb\uff0c\u6587\u6863\u4f4d\u4e8e pyecharts.org\uff1b\u793a\u4f8b\u4f4d\u4e8e gallery.pyecharts.org\n\ud83d\udd30 \u5b89\u88c5\npip \u5b89\u88c5\n# \u5b89\u88c5 v1 \u4ee5\u4e0a\u7248\u672c\n$ pip install pyecharts -U\n\n# \u5982\u679c\u9700\u8981\u5b89\u88c5 0.5.11 \u7248\u672c\u7684\u5f00\u53d1\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528\n# pip install pyecharts==0.5.11\n\u6e90\u7801\u5b89\u88c5\n# \u5b89\u88c5 v1 \u4ee5\u4e0a\u7248\u672c\n$ git clone https:\/\/github.com\/pyecharts\/pyecharts.git\n# \u5982\u679c\u9700\u8981\u5b89\u88c5 0.5.11 \u7248\u672c\uff0c\u8bf7\u4f7f\u7528 git clone https:\/\/github.com\/pyecharts\/pyecharts.git -b v05x\n$ cd pyecharts\n$ pip install -r requirements.txt\n$ python setup.py install\n\ud83d\udcdd \u4f7f\u7528\n\u672c\u5730\u73af\u5883\n\u751f\u6210 HTML\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\n# V1 \u7248\u672c\u5f00\u59cb\u652f\u6301\u94fe\u5f0f\u8c03\u7528\nbar = (\n    Bar()\n    .add_xaxis([\"\u886c\u886b\", \"\u6bdb\u8863\", \"\u9886\u5e26\", \"\u88e4\u5b50\", \"\u98ce\u8863\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\n    .add_yaxis(\"\u5546\u5bb6A\", [114, 55, 27, 101, 125, 27, 105])\n    .add_yaxis(\"\u5546\u5bb6B\", [57, 134, 137, 129, 145, 60, 49])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u67d0\u5546\u573a\u9500\u552e\u60c5\u51b5\"))\n)\nbar.render()\n\n# \u4e0d\u4e60\u60ef\u94fe\u5f0f\u8c03\u7528\u7684\u5f00\u53d1\u8005\u4f9d\u65e7\u53ef\u4ee5\u5355\u72ec\u8c03\u7528\u65b9\u6cd5\nbar = Bar()\nbar.add_xaxis([\"\u886c\u886b\", \"\u6bdb\u8863\", \"\u9886\u5e26\", \"\u88e4\u5b50\", \"\u98ce\u8863\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\nbar.add_yaxis(\"\u5546\u5bb6A\", [114, 55, 27, 101, 125, 27, 105])\nbar.add_yaxis(\"\u5546\u5bb6B\", [57, 134, 137, 129, 145, 60, 49])\nbar.set_global_opts(title_opts=opts.TitleOpts(title=\"\u67d0\u5546\u573a\u9500\u552e\u60c5\u51b5\"))\nbar.render()\n\n\n\n\u751f\u6210\u56fe\u7247\nfrom snapshot_selenium import snapshot as driver\n\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.render import make_snapshot\n\n\ndef bar_chart() -> Bar:\n    c = (\n        Bar()\n        .add_xaxis([\"\u886c\u886b\", \"\u6bdb\u8863\", \"\u9886\u5e26\", \"\u88e4\u5b50\", \"\u98ce\u8863\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\n        .add_yaxis(\"\u5546\u5bb6A\", [114, 55, 27, 101, 125, 27, 105])\n        .add_yaxis(\"\u5546\u5bb6B\", [57, 134, 137, 129, 145, 60, 49])\n        .reversal_axis()\n        .set_series_opts(label_opts=opts.LabelOpts(position=\"right\"))\n        .set_global_opts(title_opts=opts.TitleOpts(title=\"Bar-\u6d4b\u8bd5\u6e32\u67d3\u56fe\u7247\"))\n    )\n    return c\n\n# \u9700\u8981\u5b89\u88c5 snapshot-selenium \u6216\u8005 snapshot-phantomjs\nmake_snapshot(driver, bar_chart().render(), \"bar.png\")\n\n\n\nNotebook \u73af\u5883\nJupyter Notebook\n\nJupyterLab\n\nWeb \u6846\u67b6\n\n\ud83d\udd16 Demo\n\nDemo \u4ee3\u7801\u4f4d\u4e8e example \u6587\u4ef6\u5939\u4e0b\uff0c\u6b22\u8fce\u53c2\u8003 pyecharts \u753b\u5eca pyecharts-gallery\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u66f4\u591a\u8be6\u7ec6\u6587\u6863\uff0c\u8bf7\u8bbf\u95ee\n\n\u4e2d\u6587\u6587\u6863\nEnglish Documentation\n\u793a\u4f8b Example\n\n\u26cf \u4ee3\u7801\u8d28\u91cf\n\u5355\u5143\u6d4b\u8bd5\n$ pip install -r test\/requirements.txt\n$ make\n\u96c6\u6210\u6d4b\u8bd5\n\u4f7f\u7528 Travis CI \u548c AppVeyor \u6301\u7eed\u96c6\u6210\u73af\u5883\u3002\n\u4ee3\u7801\u89c4\u8303\n\u4f7f\u7528 flake8, Codecov \u4ee5\u53ca pylint \u63d0\u5347\u4ee3\u7801\u8d28\u91cf\u3002\n\ud83d\ude09 Author\npyecharts \u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4f4d\u5f00\u53d1\u8005\u5f00\u53d1\u7ef4\u62a4\n\n@chenjiandongx\n@chfw\n@kinegratii\n@sunhailin-Leo\n\n\u66f4\u591a\u8d21\u732e\u8005\u4fe1\u606f\u53ef\u4ee5\u8bbf\u95ee pyecharts\/graphs\/contributors\n\ud83d\udc8c \u6350\u8d60\n\u5f00\u53d1\u548c\u7ef4\u62a4 pyecharts \u82b1\u8d39\u4e86\u6211\u5de8\u5927\u7684\u5fc3\u529b\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u9879\u76ee\u5e2e\u52a9\u5230\u60a8\uff0c\u8bf7\u8ba4\u771f\u8003\u8651\u8bf7\u4f5c\u8005\u559d\u4e00\u676f\u5496\u5561 \ud83d\ude04\n\n\n\n\u5fae\u4fe1\u4e8c\u7ef4\u7801\n\u652f\u4ed8\u5b9d\u4e8c\u7ef4\u7801\n\n\n\n\n\n\n\n\n\n\u5982\u679c\u5176\u4ed6\u5f00\u53d1\u8005\u5e2e\u52a9\u5230\u4e86\u60a8\uff0c\u4e5f\u53ef\u4ee5\u8bf7\u4ed6\u4eec\u559d\u5496\u5561 \u6350\u8d60\u901a\u9053\n\ud83d\udca1 \u8d21\u732e\n\u671f\u5f85\u80fd\u6709\u66f4\u591a\u7684\u5f00\u53d1\u8005\u53c2\u4e0e\u5230 pyecharts \u7684\u5f00\u53d1\u4e2d\u6765\uff0c\u6211\u4eec\u4f1a\u4fdd\u8bc1\u5c3d\u5feb Reivew PR \u5e76\u4e14\u53ca\u65f6\u56de\u590d\u3002\u4f46\u63d0\u4ea4 PR \u8bf7\u786e\u4fdd\n\n\u901a\u8fc7\u6240\u6709\u5355\u5143\u6d4b\u8bd5\uff0c\u5982\u82e5\u662f\u65b0\u529f\u80fd\uff0c\u8bf7\u4e3a\u5176\u65b0\u589e\u5355\u5143\u6d4b\u8bd5\n\u9075\u5b88\u5f00\u53d1\u89c4\u8303\uff0c\u4f7f\u7528 black \u4ee5\u53ca isort \u683c\u5f0f\u5316\u4ee3\u7801\uff08$ pip install -r requirements-dev.txt\uff09\n\u5982\u82e5\u9700\u8981\uff0c\u8bf7\u66f4\u65b0\u76f8\u5bf9\u5e94\u7684\u6587\u6863\n\n\u6211\u4eec\u4e5f\u975e\u5e38\u6b22\u8fce\u5f00\u53d1\u8005\u80fd\u4e3a pyecharts \u63d0\u4f9b\u66f4\u591a\u7684\u793a\u4f8b\uff0c\u5171\u540c\u6765\u5b8c\u5584\u6587\u6863\uff0c\u6587\u6863\u9879\u76ee\u4f4d\u4e8e pyecharts\/website\n\ud83d\udcc3 License\nMIT \u00a9chenjiandongx\n","162":"kitty - the fast, featureful, GPU based, terminal emulator\n\nSee https:\/\/sw.kovidgoyal.net\/kitty\/\n\n\n\n","163":"\nopenage: a volunteer project to create a free engine clone of the Genie Engine used by Age of Empires, Age of Empires II (HD) and Star Wars: Galactic Battlegrounds, comparable to projects like OpenMW, OpenRA,  OpenSAGE, OpenTTD and OpenRCT2. At the moment we focus our efforts on the integration of Age of Empires II, while being primarily aimed at POSIX platforms such as GNU\/Linux.\nopenage uses the original game assets (such as sounds and graphics), but (for obvious reasons) doesn't ship them.\nTo play, you require an original AoE II: TC or AoE II: HD installation\n(via Wine or Steam-Linux).\n\n\n\n\nContact\n\n\n\nContact\nWhere?\n\n\n\n\nIssue Tracker\nSFTtech\/openage\n\n\nDevelopment Blog\nblog.openage.dev\n\n\nForum\n \/r\/openage\n\n\nMatrix Chat\n#sfttech:matrix.org\n\n\nIRC Chat\nirc.freenode.net #sfttech\n\n\nMoney Sink\n\n\n\n\nTechnical foundation\n\n\n\nTechnology\nComponent\n\n\n\n\nC++17\nEngine core\n\n\nPython3\nScripting, media conversion, in-game console, code generation\n\n\nQt5\nGraphical user interface\n\n\nCython\nGlue code\n\n\nCMake\nBuild system\n\n\nOpenGL3.3\nRendering, shaders\n\n\nSDL2\nCross-platform Audio\/Input\/Window handling\n\n\nOpus\nAudio codec\n\n\nnyan\nContent Configuration and Modding\n\n\nHumans\nMixing together all of the above\n\n\n\nGoals\n\nFully authentic look and feel\n\nThis can only be approximated, since the behaviour of the original game is mostly undocumented,\nand guessing\/experimenting can only get you this close\nWe will not implement useless artificial limitations (max 30 selectable units...)\n\n\nAn easily-moddable content format: nyan yet another notation\nAn integrated Python console and API, comparable to blender\nAI scripting in Python, you can use machine learning\n\nhere is some additional literature\n\n\nRe-creating free game assets\nMultiplayer (obviously)\nMatchmaking and ranking with a haskell masterserver\nOptionally, improvements over the original game\nAwesome infrastructure such as our own Kevin CI service\n\nBut beware, for sanity reasons:\n\nNo network compatibility with the original game.\nYou really wanna have the same problems again?\nNo binary compatibility with the original game.\nA one-way script to convert maps\/savegames\/missions to openage is planned though.\n\nCurrent State of the Project\nImportant notice: Gameplay is currently non-functional as the internal simulation is replaced by a more sophisticated implementation. You also might experience errors when running a build. Gameplay will return in a later update. Detailed explanations can be found in this blog post.\n\n\nWhat features are currently implemented?\n\nSee status page.\n\n\n\nWhat's the plan?\n\nSee doc\/milestones.md. We also have lists of crazy xor good ideas and a technical overview for requested features.\n\n\n\nInstallation Packages\nSupported Platforms: Linux, Windows 10, MacOS X 10.14\n\n\nFor Linux check at repology if your distribution has any packages available or here for any future updates on *.deb and AppImage packages.\n\n\nFor Windows check our release page for the latest installer or here for nightly builds.\n\n\nNOTE: If you have any problems starting conversion or starting openage take a look into the package instructions and our troubleshooting guide.\n\n\nNOTE: For MacOSX we currently don't have any packages.\n\n\n\n\nQuickstart\n\n\n\nOperating System\nBuild status\n\n\n\n\nDebian Sid\nTodo: Kevin #11\n\n\nmacOS\n\n\n\nWindows 10 - x64\n\n\n\n\n\n\nHow do I get this to run on my box?\n\nSee doc\/building.md.\n\n\n\nI compiled everything. Now how do I run it?\n\nExecute bin\/run.\nThe convert script will transform original assets into openage formats, which are a lot saner and more moddable.\nUse your brain and react to the things you'll see.\n\n\n\nWaaaaaah! It\n\nsegfaults\nprints error messages I don't want to read\nate my dog\n\n\n\nAll of those are features, not bugs.\nTo turn them off, use .\/run --dont-segfault --no-errors --dont-eat-dog.\nIf this still does not help, try our troubleshooting guide, the contact section\nor the bug tracker.\nContributing\nYou might ask yourself now \"Yeah, this sounds cool and all, but how do I participate\nand get famous contribute useful features?\".\nFortunately for you, there is a lot to do and we are very grateful for help.\nWhere do I start?\n\nThe engine has several core parts that need help.\nYou can look at the project related issues and find something for you, for example:\n\nAsset Converter: Converts whatever properietary format used by a Age of Empires 2 into\nopen formats. Written mostly in Python 3. There are a lot of TODOs and beginner issues available\nright now, so it's a good place to get your feet wet.\nGame simulation: Also known as the gameplay implementation. Written in C++, using the\nEntity-Component-System paradigm in addition to an event-driven simulation.\nDocumentation: We not only document code, but also anything technical about the Genie engine\nand its games. If you like documenting file formats\nor thouroughly investigating game mechanics,\nthen this might be the right place to start.\n\n\nCheck the issues labelled with good first issues. These are tasks that you can start right away\nand don't require much previous knowledge.\nAsk us in the chat. Someone there could need\nhelp with something.\nYou can also take the initiative and fix a bug you found, create an issue for discussion or\nimplement a feature that we never though of, but always wanted.\n\nOk, I found something. What now?\n\nTell us, if you haven't already. Chances are that we have additional information\nand directions.\nRead the docs. They will answer most \"administrative\"\nquestions like what code style is used and how the engine core parts are connected.\nRead the code and get familiar with the engine component you want to work with.\nDo not hesitate to ask us for help if you do not understand something.\n\nHow do I contribute my features\/changes?\n\nRead the contributing guide.\nYou can upload work in progress (WIP) revisions or drafts of your contribution to get feedback or support.\nTell us (again) when you want us to review your work.\n\nI want to help, but I'm not a programmer...\nThen openage might be a good reason to become one! We have many issues and tasks for beginners. You\njust have to ask and we'll find something. Alternatively, lurking is also allowed.\n\nCheers, happy hecking.\nDevelopment Process\nWhat does openage development look like in practice?\n\nextensive synchronization!\ndoc\/development.md.\n\nHow can I help?\n\ndoc\/contributing.md.\n\nAll documentation is also in this repo:\n\nCode documentation is embedded in the sources for Doxygen (see doc readme).\nHave a look at the doc directory. This folder tends to get outdated when code changes.\n\nLicense\nGNU GPLv3 or later; see copying.md and legal\/GPLv3.\nI know that probably nobody is ever gonna look at the copying.md file,\nbut if you want to contribute code to openage, please take the time to\nskim through it and add yourself to the authors list.\n","164":"Pelican  \n \n\nPelican is a static site generator, written in Python.\n\nWrite content in reStructuredText or Markdown using your editor of choice\nIncludes a simple command line tool to (re)generate site files\nEasy to interface with version control systems and web hooks\nCompletely static output is simple to host anywhere\n\n\nFeatures\nPelican currently supports:\n\nChronological content (e.g., articles, blog posts) as well as static pages\nIntegration with external services (e.g., Google Analytics and Disqus)\nSite themes (created using Jinja2 templates)\nPublication of articles in multiple languages\nGeneration of Atom and RSS feeds\nSyntax highlighting via Pygments\nImporting existing content from WordPress, Dotclear, and other services\nFast rebuild times due to content caching and selective output writing\n\nCheck out Pelican's documentation for further information.\n\nHow to get help, contribute, or provide feedback\nSee our contribution submission and feedback guidelines.\n\nSource code\nPelican's source code is hosted on GitHub. If you feel like hacking,\ntake a look at Pelican's internals.\n\nWhy the name \"Pelican\"?\n\"Pelican\" is an anagram of calepin, which means \"notebook\" in French.\n","165":"$ click_\nClick is a Python package for creating beautiful command line interfaces\nin a composable way with as little code as necessary. It's the \"Command\nLine Interface Creation Kit\". It's highly configurable but comes with\nsensible defaults out of the box.\nIt aims to make the process of writing command line tools quick and fun\nwhile also preventing any frustration caused by the inability to\nimplement an intended CLI API.\nClick in three points:\n\nArbitrary nesting of commands\nAutomatic help page generation\nSupports lazy loading of subcommands at runtime\n\n\nInstalling\nInstall and update using pip:\n$ pip install -U click\n\n\nA Simple Example\nimport click\n\n@click.command()\n@click.option(\"--count\", default=1, help=\"Number of greetings.\")\n@click.option(\"--name\", prompt=\"Your name\", help=\"The person to greet.\")\ndef hello(count, name):\n    \"\"\"Simple program that greets NAME for a total of COUNT times.\"\"\"\n    for _ in range(count):\n        click.echo(f\"Hello, {name}!\")\n\nif __name__ == '__main__':\n    hello()\n$ python hello.py --count=3\nYour name: Click\nHello, Click!\nHello, Click!\nHello, Click!\n\n\nDonate\nThe Pallets organization develops and supports Click and other popular\npackages. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, please\ndonate today.\n\nLinks\n\nWebsite: https:\/\/palletsprojects.com\/p\/click\/\nDocumentation: https:\/\/click.palletsprojects.com\/\nReleases: https:\/\/pypi.org\/project\/click\/\nCode: https:\/\/github.com\/pallets\/click\nIssue tracker: https:\/\/github.com\/pallets\/click\/issues\nTest status: https:\/\/dev.azure.com\/pallets\/click\/_build\nOfficial chat: https:\/\/discord.gg\/t6rrQZH\n\n","166":"\u6700\u5b8c\u5584\u7684 iOS \u7ffb\u5899\u89c4\u5219\n\u505c\u6b62\u66f4\u65b0\u516c\u544a\n\u7ef4\u62a4\u8be5\u9879\u76ee\u5df2\u82b1\u8d39\u4e86\u6211\u8fc7\u591a\u7684\u65f6\u95f4\uff0c\u800c\u751f\u6d3b\u4e2d\u503c\u5f97\u82b1\u8d39\u65f6\u95f4\u7684\u4e1c\u897f\u592a\u591a\uff0c\u6240\u4ee5\u4ece\u5373\u65e5\u8d77\u505c\u6b62\u66f4\u65b0\u8be5\u9879\u76ee\u3002\n\u8be5\u89c4\u5219\u76ee\u524d\u4f1a\u5b9a\u671f\u4ece\u4e0a\u6e38\uff08GFWList\u3001EasyList \u7b49\uff09\u83b7\u53d6\u66f4\u65b0\uff0c\u5e76\u7531\u673a\u5668\u4eba\u81ea\u52a8\u62fc\u88c5\u6784\u5efa\u65b0\u7248\u53d1\u5e03\u3002\u4f46\u624b\u52a8\u7f16\u5199\u7684\u90e8\u5206\u6211\u4e0d\u4f1a\u53bb\u66f4\u65b0\uff0c\u4ea6\u4e0d\u4f1a\u63a8\u51fa\u65b0\u7248\u89c4\u5219\u3002\n\n\u8fd9\u91cc\u662f\u4e00\u7cfb\u5217\u597d\u7528\u7684\u7ffb\u5899\u89c4\u5219\uff0c\u9488\u5bf9 Shadowrocket \u5f00\u53d1\uff0c\u652f\u6301\u5e7f\u544a\u8fc7\u6ee4\u3002\u89c4\u5219\u5b9a\u4e49\u4e86\u54ea\u4e9b\u7f51\u7ad9\u53ef\u4ee5\u76f4\u8fde\uff0c\u54ea\u4e9b\u5fc5\u987b\u8d70\u4ee3\u7406\uff0c\u89c4\u5219\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u65e0\u6cd5\u63d0\u4f9b\u7ffb\u5899\u529f\u80fd\u3002\u4f7f\u7528 Python \u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\u548c\u6a21\u677f\u5b9a\u671f\u81ea\u52a8\u751f\u6210\uff0c\u5e76\u4e14\u4f7f\u7528\u5f00\u6e90\u7684\u529b\u91cf\uff0c\u96c6\u4f17\u4eba\u4e4b\u529b\u9010\u6e10\u5b8c\u5584\u3002\n\u6b63\u5728\u4f7f\u7528\u624b\u673a\u6d4f\u89c8\u672c\u9875\u9762\u7684\u7528\u6237 \u8bf7\u70b9\u51fb\u8fd9\u91cc\uff0c\u67e5\u770b\u5b8c\u6574\u7684\u8bf4\u660e\u6587\u6863\u3002\n\u672c\u89c4\u5219\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a\n\n\u9ed1\u540d\u5355\u7531\u6700\u65b0\u7248 GFWList \u81ea\u52a8\u8f6c\u6362\uff1b\u767d\u540d\u5355\u9488\u5bf9\u5168\u7403 top500 \u7ad9\u70b9\u7684\u8fde\u901a\u60c5\u51b5\u5b9a\u671f\u81ea\u52a8\u751f\u6210\u3002\n\u81ea\u52a8\u8f6c\u6362\u6700\u65b0\u7248\u672c\u7684 EasyList, Eaylist China, \u4e58\u98ce\u89c4\u5219 \u4e3a SR \u89c4\u5219\uff0c\u5168\u9762\u53bb\u9664\u5e7f\u544a\u4e14\u53bb\u9664\u91cd\u590d\u3002\n\u4e5f\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u5e7f\u544a\u8fc7\u6ee4\u89c4\u5219\uff0c\u9488\u5bf9 iOS \u7aef\u7684\u7f51\u9875\u5e7f\u544a\u3001App \u5e7f\u544a\u548c\u89c6\u9891\u5e7f\u544a\u3002\uff08\u5e38\u89c1\u5e7f\u544a\u8fc7\u6ee4\u6548\u679c\u7edf\u8ba1\uff09\n\u63d0\u4f9b\u591a\u4e2a\u89c4\u5219\u6587\u4ef6\u8ba9\u5927\u5bb6\u81ea\u7531\u9009\u62e9\u6216\u8005\u81ea\u7531\u5207\u6362\u4f7f\u7528\u3002\n\u4e13\u95e8\u9488\u5bf9 ShadowRocket \u5f00\u53d1\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e0e SR \u7684\u517c\u5bb9\u6027\u3002\n\n\u89c4\u5219\u5217\u8868\n\n\n\n\n\u89c4\u5219\n\u89c4\u5b9a\u4ee3\u7406\u7684\u7f51\u7ad9\n\u89c4\u5b9a\u76f4\u8fde\u7684\u7f51\u7ad9\n\n\n\n\n\u9ed1\u540d\u5355\u89c4\u5219 + \u53bb\u5e7f\u544a\n\u88ab\u5899\u7684\u7f51\u7ad9\uff08GFWList\uff09\n\u6b63\u5e38\u7684\u7f51\u7ad9\n\n\n\u9ed1\u540d\u5355\u89c4\u5219\n\n\n\n\n\u767d\u540d\u5355\u89c4\u5219 + \u53bb\u5e7f\u544a\n\u5176\u4ed6\u7f51\u7ad9\ntop500 \u7f51\u7ad9\u4e2d\u53ef\u76f4\u8fde\u7684\u7f51\u7ad9\u3001\u4e2d\u56fd\u7f51\u7ad9\n\n\n\u767d\u540d\u5355\u89c4\u5219\n\n\n\n\n\u56fd\u5185\u5916\u5212\u5206 + \u53bb\u5e7f\u544a\n\u56fd\u5916\u7f51\u7ad9\n\u4e2d\u56fd\u7f51\u7ad9\n\n\n\u56fd\u5185\u5916\u5212\u5206\n\n\n\n\n\u5168\u5c40\u76f4\u8fde + \u53bb\u5e7f\u544a\n\/\n\u5168\u90e8\n\n\n\u5168\u5c40\u4ee3\u7406 + \u53bb\u5e7f\u544a\n\u5168\u90e8\n\/\n\n\n\u56de\u56fd\u89c4\u5219 + \u53bb\u5e7f\u544a\n\u4e2d\u56fd\u7f51\u7ad9\n\u56fd\u5916\u7f51\u7ad9\n\n\n\u56de\u56fd\u89c4\u5219\n\n\n\n\n\n\n\u4ee5\u4e0a\u6240\u6709\u89c4\u5219\uff0c\u5c40\u57df\u7f51\u5185\u8bf7\u6c42\u5747\u76f4\u8fde\u3002\n\u53ef\u4ee5\u4e0b\u8f7d\u591a\u4e2a\u89c4\u5219\u5207\u6362\u4f7f\u7528\u3002\n\n\u89c4\u5219\u4f7f\u7528\u65b9\u6cd5\n\u5728 ShadowRocket \u5e94\u7528\u4e2d\uff0c\u8fdb\u5165 [\u914d\u7f6e] \u9875\u9762\uff0c\u70b9\u51fb\u626b\u63cf\u4e8c\u7ef4\u7801\u7684\u6309\u94ae\u6dfb\u52a0\u89c4\u5219\u3002\u518d\u6fc0\u6d3b\u6dfb\u52a0\u7684\u89c4\u5219\u6587\u4ef6\u5373\u53ef\u3002\n\u6700\u597d\u8ba9 ShadowRocket \u65ad\u5f00\u5e76\u91cd\u65b0\u8fde\u63a5\u4e00\u6b21\uff0c\u4ee5\u786e\u4fdd\u65b0\u7684\u89c4\u5219\u6587\u4ef6\u751f\u6548\u3002\n\u8bf7\u4fdd\u62a4\u597d\u81ea\u5df1\n\u8c37\u6b4c\u4e2d\u82f1\u6587\u7684\u641c\u7d22\u4f53\u9a8c\u90fd\u4f18\u4e8e\u767e\u5ea6\uff0c\u800c\u5237\u7f8e\u5267\u3001ins \u8ffd\u661f\u3001\u53bb\u63a8\u7279\u770b\u770b\u7279\u6717\u666e\u4e5f\u90fd\u633a\u6709\u610f\u601d\u3002\u4f46\u662f\uff0c\u968f\u7740\u770b\u5230\u7684\u4eba\u548c\u4e8b\u8d8a\u591a\uff0c\u6211\u8d8a\u53d1\u60f3\u8981\u5728\u8fd9\u91cc\u8bf4\u4e00\u4e9b\u8bdd\uff0c\u544a\u8beb\u8def\u8fc7\u7684\u5404\u4f4d\uff1a\n\u8bf7\u52a1\u5fc5\u4fdd\u62a4\u597d\u81ea\u5df1 \u6211\u4eec\u81ea\u8ba4\u4e3a\u6253\u7834\u4e86\u4fe1\u606f\u7684\u58c1\u5792\uff0c\u5176\u5b9e\u6253\u7834\u7684\u662f\u4fdd\u62a4\u6211\u4eec\u7684\u5c4f\u969c\u3002\u56e0\u4e3a\u5916\u7f51\u771f\u7684\u5b58\u5728\u5f88\u591a\u8bef\u5bfc\u6027\u8a00\u8bba\uff0c\u6765\u81ea\u5404\u4e2a\u5229\u76ca\u96c6\u56e2\u5bf9\u4e2d\u56fd\u7f51\u6c11\u75af\u72c2\u6d17\u8111\uff0c\u4ed6\u4eec\u5f80\u5f80\u8fd8\u559c\u6b22\u4ee5\u5e73\u7b49\u81ea\u7531\u7b49\u65d7\u53f7\u81ea\u79f0\uff0c\u4f46\u4ed4\u7ec6\u60f3\u60f3\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f\u6211\u53ea\u77e5\u9053\u7f8e\u56fd\u662f\u6700\u5584\u4e8e\u8fd0\u7528\u8206\u8bba\u7684\u56fd\u5bb6\uff0c\u4f1a\u7ed3\u5408\u5927\u6570\u636e\u6f5c\u79fb\u9ed8\u5316\u5730\u6539\u53d8\u4f60\u7684\u89c2\u5ff5\u3002\u5982\u679c\u5927\u5bb6\u5728\u4e0a\u7f51\u8fc7\u7a0b\u4e2d\u4e0d\u7ecf\u610f\u770b\u5230\u4e86\u67d0\u4e9b\u89c2\u70b9\uff0c\u52a1\u5fc5\u4fdd\u7559\u81ea\u5df1\u72ec\u7acb\u601d\u8003\u7684\u80fd\u529b\uff0c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u5bb9\u6613\u88ab\u5e26\u504f\u7684\u4eba\uff0c\u5219\u5efa\u8bae\u56de\u5230\u5c4f\u969c\u4e4b\u4e2d\u3002\n\u672c\u89c4\u5219\u53ea\u63d0\u4f9b\u7ed9\u5927\u5bb6\u7528\u4e8e\u66f4\u4fbf\u6377\u5730\u5b66\u4e60\u548c\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u662f\u5bf9\u4e0a\u8ff0\u89c2\u70b9\u6301\u53cd\u5bf9\u610f\u89c1\u7684\u6781\u7aef\u653f\u6cbb\u4eba\u58eb\uff0c\u6216\u8005\u5df2\u88ab\u6d17\u8111\uff0c\u8bf7\u7acb\u5373\u79bb\u5f00\uff0c\u672c\u9879\u76ee\u4e0d\u5bf9\u4f60\u5f00\u653e\u3002\n\u4e00\u4e9b\u63a8\u8350\u7684\u7f51\u7ad9\n\u529f\u592b\u7ffb\u5899\u7f51 \ud83c\udf6d\n\u6211\u6700\u7ec8\u9009\u62e9\u7684\u8282\u70b9\u63d0\u4f9b\u5546\u3002\u7a33\u5b9a\u3001\u4ef7\u683c\u9002\u4e2d\u3002\u8282\u70b9\u904d\u5e03\u5168\u7403\uff0c\u5176\u4e2d\u9999\u6e2f\u8282\u70b9\u7684\u901f\u5ea6\u4ee4\u4eba\u6ee1\u610f\u3002\n\u6b22\u8fce\u5927\u5bb6\u901a\u8fc7\u6211\u7684\u9080\u8bf7\u94fe\u63a5\u524d\u53bb\u4f7f\u7528\u3002\nIP111\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684 IP \u67e5\u8be2\u7f51\u7ad9\uff0c\u652f\u6301\u540c\u65f6\u67e5\u8be2\u4f60\u7684\u5883\u5185\u5883\u5916 IP\uff0c\u4ee5\u53ca\u8c37\u6b4c IP\u3002\nwikiHow\n\u5982\u4f55\u5e2e\u52a9\u5fc3\u788e\u7684\u670b\u53cb\uff1f\u5982\u4f55\u7ed9\u540a\u6247\u52a0\u6cb9\uff1f\u4f60\u60f3\u77e5\u9053\u7684\u4e00\u5207\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u7b54\u6848\uff0c\u6700\u5173\u952e\u662f\u91c7\u7528\u6f2b\u753b\u7684\u65b9\u5f0f\u633a\u6709\u610f\u601d\u3002\nGoogle Photos\n\u8c37\u6b4c\u4e91\u76f8\u518c\u63d0\u4f9b\u65e0\u9650\u7a7a\u95f4\u4fdd\u5b58\u624b\u673a\u4e2d\u7684\u65e5\u5e38\u7167\u7247\uff0c\u5e76\u4e14\u4f1a\u5bf9\u7167\u7247\u667a\u80fd\u5206\u7c7b\uff0c\u4f53\u9a8c\u5f88\u597d\u3002\nhttps:\/\/hzy.pw\/\n\u6211\u662f\u4e00\u540d\u5927\u5b66\u751f\uff0c\u6c89\u8ff7\u6280\u672f\u65e0\u6cd5\u81ea\u62d4\u3002\u8fd9\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u4f1a\u5206\u4eab\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f\u548c\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u6b22\u8fce\u6765\u901b\u901b~\n\u5e38\u89c1\u95ee\u9898\n\n\u4e0a\u5343\u884c\u7684\u4ee3\u7406\u89c4\u5219\uff0c\u4f1a\u5bf9\u4e0a\u7f51\u901f\u5ea6\u4ea7\u751f\u5f71\u54cd\u5417\uff1f\n\n\n\u4e0d\u4f1a\u7684\u3002\n\u6211\u4e4b\u524d\u4e5f\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6bcf\u6b21\u7f51\u7edc\u6570\u636e\u5305\u7ecf\u8fc7\u90fd\u4f1a\u6267\u884c\u4e00\u6b21\u7684\u89c4\u5219\u6587\u4ef6\uff0c\u9010\u884c\u5339\u914d\u89c4\u5219\uff0c\u6240\u4ee5\u9700\u8981\u5c3d\u53ef\u80fd\u7cbe\u7b80\u3002\u4f46\u540e\u6765\u548c SR \u4f5c\u8005\u4ea4\u6d41\u540e\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u8bef\u533a\uff0cSR \u5728\u6bcf\u6b21\u52a0\u8f7d\u89c4\u5219\u65f6\u90fd\u4f1a\u751f\u6210\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e3b\u673a\u540d\u4ece\u540e\u5f80\u524d\u7684\u6709\u9650\u72b6\u6001\u673a DFA\uff0c\u5e76\u4e0d\u662f\u9010\u884c\u5339\u914d\uff0c\u5e76\u4e14\u5bf9\u6bcf\u6b21\u7684\u5339\u914d\u7ed3\u679c\u8fd8\u6709\u4e2a\u54c8\u5e0c\u7f13\u5b58\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c2000 \u884c\u7684\u89c4\u5219\u548c 50 \u884c\u7684\u89c4\u5219\u5728 SR \u4e2d\u5747\u4e3a\u540c\u4e00\u91cf\u7ea7\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\u3002\n\n\n\u4f60\u63d0\u4f9b\u4e86\u8fd9\u4e48\u591a\u89c4\u5219\uff0c\u5982\u4f55\u9009\u62e9\u9002\u5408\u6211\u7684\uff1f\n\n\n\u6700\u5e38\u7528\u7684\u89c4\u5219\u662f\u9ed1\u540d\u5355\u548c\u767d\u540d\u5355\u3002\u533a\u522b\u5728\u4e8e\u5bf9\u5f85 \u672a\u77e5\u7f51\u7ad9 \u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\uff0c\u9ed1\u540d\u5355\u9ed8\u8ba4\u76f4\u8fde\uff0c\u800c\u767d\u540d\u5355\u5219\u9ed8\u8ba4\u4f7f\u7528\u4ee3\u7406\u3002\u5982\u679c\u4f60\u9009\u62e9\u6050\u60e7\u75c7\u7206\u53d1\uff0c\u90a3\u5c31\u4e24\u4e2a\u90fd\u4e0b\u8f7d\u597d\u4e86\uff0c\u9ed1\u767d\u540d\u5355\u5207\u6362\u4f7f\u7528\uff0c\u5929\u4e0b\u65e0\u5fe7\u3002\n\n\n\u4f60\u63d0\u4f9b\u4e86\u8fd9\u4e48\u591a\u89c4\u5219\uff0c\u5374\u6ca1\u6709\u6211\u60f3\u8981\u7684 o(>.<)o\n\n\n\u6709\u4efb\u4f55\u5efa\u8bae\u6216\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb\u6211\u3002\n\n\n\u5e7f\u544a\u8fc7\u6ee4\u4e0d\u5b8c\u5168\uff1f\n\n\n\u8be5\u89c4\u5219\u5e76\u4e0d\u4fdd\u8bc1 100% \u8fc7\u6ee4\u6240\u6709\u7684\u5e7f\u544a\uff0c\u5c24\u5176\u662f\u89c6\u9891\u5e7f\u544a\uff0c\u4e0e\u7f51\u9875\u5e7f\u544a\u4e0d\u540c\u7684\u662f\uff0c\u4f18\u9177\u7b49 App \u6bcf\u6b21\u5347\u7ea7\u90fd\u6709\u53ef\u80fd\u66f4\u6362\u4e00\u6b21\u5e7f\u544a\u7b56\u7565\uff0c\u56e0\u6b64\u96be\u4ee5\u4fdd\u8bc1\u5176\u5e7f\u544a\u5c4f\u853d\u7684\u5b9e\u65f6\u6709\u6548\u6027\u3002\n\n\u95ee\u9898\u53cd\u9988\n\u4efb\u4f55\u95ee\u9898\u6b22\u8fce\u5728 Issues \u4e2d\u53cd\u9988\uff0c\u5982\u679c\u6ca1\u6709\u8d26\u53f7\u53ef\u4ee5\u53bb \u6211\u7684\u7f51\u7ad9 \u4e2d\u7559\u8a00\u3002\n\u4f60\u7684\u53cd\u9988\u4f1a\u8ba9\u6b64\u89c4\u5219\u53d8\u5f97\u66f4\u52a0\u5b8c\u7f8e\u3002\n\u5982\u4f55\u8d21\u732e\u4ee3\u7801\uff1f\n\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9 factory \u76ee\u5f55 \u4e0b\u7684 3 \u4e2a manual_*.txt \u6587\u4ef6\u505a\u5bf9\u5e94\u4fee\u6539\u5373\u53ef\u3002\n\u6350\u52a9\n\u672c\u9879\u76ee\u4e0d\u63a5\u53d7\u4efb\u4f55\u5f62\u5f0f\u7684\u6350\u52a9\uff0c\u56e0\u4e3a\u81ea\u7531\u5730\u4e0a\u7f51\u672c\u6765\u5c31\u662f\u5927\u5bb6\u7684\u6743\u5229\uff0c\u6ca1\u6709\u5fc5\u8981\u4e3a\u6b64\u4ed8\u51fa\u66f4\u591a\u7684\u4ee3\u4ef7\u3002\n\u4f46\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7ffb\u5899\u89c4\u5219\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u5bf9\u7f51\u7ad9\u6709\u6240\u9057\u6f0f\uff0c\u9700\u8981\u5927\u5bb6\u6765\u5171\u540c\u5b8c\u5584\uff0c\u5f53\u53d1\u73b0\u4e0d\u597d\u7528\u7684\u5730\u65b9\u65f6\uff0c\u8bf7\u6253\u5f00 SR \u7684\u65e5\u5fd7\u529f\u80fd\uff0c\u68c0\u67e5\u4e00\u4e0b\u662f\u54ea\u4e00\u4e2a\u88ab\u5899\u7684\u57df\u540d\u8d70\u4e86\u76f4\u8fde\uff0c\u6216\u8005\u662f\u54ea\u4e00\u4e2a\u53ef\u4ee5\u76f4\u8fde\u7684\u57df\u540d\u8d70\u4e86\u4ee3\u7406\u3002\n\u5c06\u9700\u8981\u4fee\u6539\u7684\u4fe1\u606f\u53cd\u9988\u7ed9\u6211\uff0c\u5927\u5bb6\u7684\u52aa\u529b\u4f1a\u8ba9\u8fd9\u4e2a\u89c4\u5219\u8d8a\u6765\u8d8a\u5b8c\u5584\uff01\n\n\u9ed1\u540d\u5355\u8fc7\u6ee4 + \u5e7f\u544a\n\u9ed1\u540d\u5355\u4e2d\u5305\u542b\u4e86\u5883\u5916\u7f51\u7ad9\u4e2d\u65e0\u6cd5\u8bbf\u95ee\u7684\u90a3\u4e9b\uff0c\u5bf9\u4e0d\u786e\u5b9a\u7684\u7f51\u7ad9\u5219\u9ed8\u8ba4\u76f4\u8fde\u3002\n\n\u4ee3\u7406\uff1a\u88ab\u5899\u7684\u7f51\u7ad9\uff08GFWList\uff09\n\u76f4\u8fde\uff1a\u6b63\u5e38\u7684\u7f51\u7ad9\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXs\n\n\u767d\u540d\u5355\u8fc7\u6ee4 + \u5e7f\u544a\n\u767d\u540d\u5355\u4e2d\u5305\u542b\u4e86\u5883\u5916\u7f51\u7ad9\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u7684\u90a3\u4e9b\uff0c\u5bf9\u4e0d\u786e\u5b9a\u7684\u7f51\u7ad9\u5219\u9ed8\u8ba4\u4ee3\u7406\u3002\n\n\u76f4\u8fde\uff1atop500 \u7f51\u7ad9\u4e2d\u53ef\u76f4\u8fde\u7684\u5883\u5916\u7f51\u7ad9\u3001\u4e2d\u56fd\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u9ed8\u8ba4\u4ee3\u7406\u5176\u4f59\u7684\u6240\u6709\u5883\u5916\u7f51\u7ad9\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXo\n\n\u9ed1\u540d\u5355\u8fc7\u6ee4\n\u73b0\u5728\u5f88\u591a\u6d4f\u89c8\u5668\u90fd\u81ea\u5e26\u4e86\u5e7f\u544a\u8fc7\u6ee4\u529f\u80fd\uff0c\u800c\u5e7f\u544a\u8fc7\u6ee4\u7684\u89c4\u5219\u5176\u5b9e\u8f83\u4e3a\u81c3\u80bf\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u5168\u5c40\u5730\u8fc7\u6ee4 App \u5185\u7f6e\u5e7f\u544a\u548c\u89c6\u9891\u5e7f\u544a\uff0c\u53ef\u4ee5\u9009\u62e9\u8fd9\u4e2a\u4e0d\u5e26\u5e7f\u544a\u8fc7\u6ee4\u7684\u7248\u672c\u3002\n\n\u4ee3\u7406\uff1a\u88ab\u5899\u7684\u7f51\u7ad9\uff08GFWList\uff09\n\u76f4\u8fde\uff1a\u6b63\u5e38\u7684\u7f51\u7ad9\n\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXS\n\n\u767d\u540d\u5355\u8fc7\u6ee4\n\u73b0\u5728\u5f88\u591a\u6d4f\u89c8\u5668\u90fd\u81ea\u5e26\u4e86\u5e7f\u544a\u8fc7\u6ee4\u529f\u80fd\uff0c\u800c\u5e7f\u544a\u8fc7\u6ee4\u7684\u89c4\u5219\u5176\u5b9e\u8f83\u4e3a\u81c3\u80bf\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u5168\u5c40\u5730\u8fc7\u6ee4 App \u5185\u7f6e\u5e7f\u544a\u548c\u89c6\u9891\u5e7f\u544a\uff0c\u53ef\u4ee5\u9009\u62e9\u8fd9\u4e2a\u4e0d\u5e26\u5e7f\u544a\u8fc7\u6ee4\u7684\u7248\u672c\u3002\n\n\u76f4\u8fde\uff1atop500 \u7f51\u7ad9\u4e2d\u53ef\u76f4\u8fde\u7684\u5883\u5916\u7f51\u7ad9\u3001\u4e2d\u56fd\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u9ed8\u8ba4\u4ee3\u7406\u5176\u4f59\u7684\u6240\u6709\u5883\u5916\u7f51\u7ad9\n\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXh\n\n\u56fd\u5185\u5916\u5212\u5206 + \u5e7f\u544a\n\u56fd\u5185\u5916\u5212\u5206\uff0c\u5bf9\u4e2d\u56fd\u7f51\u7ad9\u76f4\u8fde\uff0c\u5916\u56fd\u7f51\u7ad9\u4ee3\u7406\u3002\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\u3002\u56fd\u5916\u7f51\u7ad9\u603b\u662f\u8d70\u4ee3\u7406\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6e2f\u6fb3\u53f0\u7f51\u7ad9\uff0c\u901f\u5ea6\u53cd\u800c\u4f1a\u6bd4\u76f4\u8fde\u66f4\u5feb\u3002\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1k\n\n\u56fd\u5185\u5916\u5212\u5206\n\u56fd\u5185\u5916\u5212\u5206\uff0c\u5bf9\u4e2d\u56fd\u7f51\u7ad9\u76f4\u8fde\uff0c\u5916\u56fd\u7f51\u7ad9\u4ee3\u7406\u3002\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\u3002\u56fd\u5916\u7f51\u7ad9\u603b\u662f\u8d70\u4ee3\u7406\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6e2f\u6fb3\u53f0\u7f51\u7ad9\uff0c\u901f\u5ea6\u53cd\u800c\u4f1a\u6bd4\u76f4\u8fde\u66f4\u5feb\u3002\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1q\n\n\u76f4\u8fde\u53bb\u5e7f\u544a\n\u5982\u679c\u4f60\u60f3\u5c06 SR \u4f5c\u4e3a iOS \u5168\u5c40\u53bb\u5e7f\u544a\u5de5\u5177\uff0c\u8fd9\u4e2a\u89c4\u5219\u4f1a\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002\n\n\u76f4\u8fde\uff1a\u6240\u6709\u8bf7\u6c42\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1m\n\n\u4ee3\u7406\u53bb\u5e7f\u544a\n\u5982\u679c\u4f60\u60f3\u5c06 SR \u4f5c\u4e3a iOS \u5168\u5c40\u53bb\u5e7f\u544a + \u5168\u5c40\u7ffb\u5899\u5de5\u5177\uff0c\u8fd9\u4e2a\u89c4\u5219\u4f1a\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002\n\n\u76f4\u8fde\uff1a\u5c40\u57df\u7f51\u8bf7\u6c42\n\u4ee3\u7406\uff1a\u5176\u4f59\u6240\u6709\u8bf7\u6c42\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI13\n\n\u56de\u56fd\u89c4\u5219\n\u63d0\u4f9b\u7ed9\u6d77\u5916\u534e\u4fa8\u4f7f\u7528\uff0c\u53ef\u4ee5\u56de\u5230\u5899\u5185\uff0c\u4eab\u53d7\u56fd\u5185\u7684\u4e00\u4e9b\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\n\u76f4\u8fde\uff1a\u56fd\u5916\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u4e2d\u56fd\u7f51\u7ad9\n\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1s\n\n\u56de\u56fd\u89c4\u5219 + \u5e7f\u544a\n\u63d0\u4f9b\u7ed9\u6d77\u5916\u534e\u4fa8\u4f7f\u7528\uff0c\u53ef\u4ee5\u56de\u5230\u5899\u5185\uff0c\u4eab\u53d7\u56fd\u5185\u7684\u4e00\u4e9b\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\n\u76f4\u8fde\uff1a\u56fd\u5916\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u4e2d\u56fd\u7f51\u7ad9\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1Z\n\n","167":"\n\nIntroduction\nSovereign is a set of Ansible playbooks that you can use to build and maintain your own personal cloud based entirely on open source software, so you\u2019re in control.\nIf you\u2019ve never used Ansible before, you might find these playbooks useful to learn from, since they show off a fair bit of what the tool can do.\nThe original author's background and motivations might be of interest. tl;dr: frustrations with Google Apps and concerns about privacy and long-term support.\nSovereign offers useful cloud services while being reasonably secure and low-maintenance. Use it to set up your server, SSH in every couple weeks, but mostly forget about it.\nServices Provided\nWhat do you get if you point Sovereign at a server? All kinds of good stuff!\n\nIMAP over SSL via Dovecot, complete with full text search provided by Solr.\nPOP3 over SSL, also via Dovecot\nSMTP over SSL via Postfix, including a nice set of DNSBLs to discard spam before it ever hits your filters.\nVirtual domains for your email, backed by PostgreSQL.\nSpam fighting via Rspamd.\nMail server verification using DKIM and DMARC so the Internet knows your mailserver is legit.\nSecure on-disk storage for email and more via EncFS.\nWebmail via Roundcube.\nMobile push notifications via Z-Push.\nEmail client automatic configuration.\nJabber\/XMPP instant messaging via Prosody.\nAn RSS Reader via Selfoss.\nCalDAV and CardDAV to keep your calendars and contacts in sync, via ownCloud.\nYour own private storage cloud via ownCloud.\nYour own VPN server via OpenVPN.\nAn IRC bouncer via ZNC.\nMonit to keep everything running smoothly (and alert you when it\u2019s not).\ncollectd to collect system statistics.\nWeb hosting (ex: for your blog) via Apache.\nFirewall management via Uncomplicated Firewall (ufw).\nIntrusion prevention via fail2ban and rootkit detection via rkhunter.\nSSH configuration preventing root login and insecure password authentication\nRFC6238 two-factor authentication compatible with Google Authenticator and various hardware tokens\nNightly backups to Tarsnap.\nGit hosting via cgit and gitolite.\nRead-it-later via Wallabag\nA bunch of nice-to-have tools like mosh and htop that make life with a server a little easier.\n\nDon\u2019t want one or more of the above services? Comment out the relevant role in site.yml. Or get more granular and comment out the associated include: directive in one of the playbooks.\nUsage\nWhat You\u2019ll Need\n\nA VPS (or bare-metal server if you wanna ball hard). My VPS is hosted at Linode. You\u2019ll probably want at least 512 MB of RAM between Apache, Solr, and PostgreSQL. Mine has 1024.\n64-bit Debian 8.3 or an equivalent Linux distribution. (You can use whatever distro you want, but deviating from Debian will require more tweaks to the playbooks. See Ansible\u2019s different packaging modules.)\nA Tarsnap account with some credit in it. You could comment this out if you want to use a different backup service. Consider paying your hosting provider for backups or using an additional backup service for redundancy.\n\nYou do not need to acquire an SSL certificate.  The SSL certificates you need will be obtained from Let's Encrypt automatically when you deploy your server.\nInstallation\nOn the remote server\nThe following steps are done on the remote server by sshing into it and running these commands.\n1. Install required packages e.g aptitude is required on Debian\napt-get install sudo python\n\n2. Get a Tarsnap machine key\nIf you haven\u2019t already, download and install Tarsnap, or use brew install tarsnap if you use Homebrew.\nCreate a new machine key for your server:\ntarsnap-keygen --keyfile roles\/tarsnap\/files\/decrypted_tarsnap.key --user me@example.com --machine example.com\n\nDownload a copy of this key and keep it somewhere safe!  There's no point having backups if you can't retrieve them when needed.\n3. Prep the server\nFor goodness sake, change the root password:\npasswd\n\nCreate a user account for Ansible to do its thing through:\nuseradd deploy\npasswd deploy\nmkdir \/home\/deploy\n\nAuthorize your ssh key if you want passwordless ssh login (optional):\nmkdir \/home\/deploy\/.ssh\nchmod 700 \/home\/deploy\/.ssh\nnano \/home\/deploy\/.ssh\/authorized_keys\nchmod 400 \/home\/deploy\/.ssh\/authorized_keys\nchown deploy:deploy \/home\/deploy -R\necho 'deploy ALL=(ALL) NOPASSWD: ALL' > \/etc\/sudoers.d\/deploy\n\nYour new account will be automatically set up for passwordless sudo. Or you can just add your deploy user to the sudo group.\nadduser deploy sudo\n\nOn your local machine\nAnsible (the tool setting up your server) runs locally on your computer and sends commands to the remote server. Download this repository somewhere on your machine, either through Clone or Download > Download ZIP above, wget, or git as below\ngit clone https:\/\/github.com\/sovereign\/sovereign.git\n\n4. Configure your installation\nModify the settings in the group_vars\/sovereign folder to your liking. If you want to see how they\u2019re used in context, just search for the corresponding string.\nAll of the variables in group_vars\/sovereign must be set for sovereign to function.\nFor Git hosting, copy your public key into place:\ncp ~\/.ssh\/id_rsa.pub roles\/git\/files\/gitolite.pub\n\nFinally, replace the host.example.net in the file hosts. If your SSH daemon listens on a non-standard port, add a colon and the port number after the IP address. In that case you also need to add your custom port to the task Set firewall rules for web traffic and SSH in the file roles\/common\/tasks\/ufw.yml.\n5. Set up DNS\nIf you\u2019ve just bought a new domain name, point it at Linode\u2019s DNS Manager or similar. Most VPS services (and even some domain registrars) offer a managed DNS service that you can use for this at no charge. If you\u2019re using an existing domain that\u2019s already managed elsewhere, you can probably just modify a few records.\nCreate A or CNAME records which point to your server's IP address:\n\nexample.com\nmail.example.com\nwww.example.com (for Web hosting)\nautoconfig.example.com (for email client automatic configuration)\nread.example.com (for Wallabag)\nnews.example.com (for Selfoss)\ncloud.example.com (for ownCloud)\ngit.example.com (for cgit)\n\n6. Run the Ansible Playbooks\nFirst, make sure you\u2019ve got Ansible 1.9.3+ installed.\nTo run the whole dang thing:\nansible-playbook -i .\/hosts --ask-sudo-pass site.yml\n\nIf you chose to make a passwordless sudo deploy user, you can omit the --ask-sudo-pass argument.\nTo run just one or more piece, use tags. I try to tag all my includes for easy isolated development. For example, to focus in on your firewall setup:\nansible-playbook -i .\/hosts --tags=ufw site.yml\n\nYou might find that it fails at one point or another. This is probably because something needs to be done manually, usually because there\u2019s no good way of automating it. Fortunately, all the tasks are clearly named so you should be able to find out where it stopped. I\u2019ve tried to add comments where manual intervention is necessary.\nThe dependencies tag just installs dependencies, performing no other operations. The tasks associated with the dependencies tag do not rely on the user-provided settings that live in group_vars\/sovereign. Running the playbook with the dependencies tag is particularly convenient for working with Docker images.\n7. Finish DNS set-up\nCreate an MX record for example.com which assigns mail.example.com as the domain\u2019s mail server.\nTo ensure your emails pass DKIM checks you need to add a txt record. The name field will be default._domainkey.EXAMPLE.COM. The value field contains the public key used by DKIM. The exact value needed can be found in the file \/var\/lib\/rspamd\/dkim\/EXAMPLE.COM.default.txt. It will look something like this:\nv=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDKKAQfMwKVx+oJripQI+Ag4uTwYnsXKjgBGtl7Tk6UMTUwhMqnitqbR\/ZQEZjcNolTkNDtyKZY2Z6LqvM4KsrITpiMbkV1eX6GKczT8Lws5KXn+6BHCKULGdireTAUr3Id7mtjLrbi\/E3248Pq0Zs39hkDxsDcve12WccjafJVwIDAQAB\n\nFor DMARC you'll also need to add a txt record. The name field should be _dmarc.EXAMPLE.COM and the value should be v=DMARC1; p=none. More info on DMARC can be found here.\nSet up SPF and reverse DNS as per this post. Make sure to validate that it\u2019s all working, for example, by sending an email to check-auth@verifier.port25.com and reviewing the report that will be emailed back to you.\n8. Miscellaneous Configuration\nSign in to the ZNC web interface and set things up to your liking. It isn\u2019t exposed through the firewall, so you must first set up an SSH tunnel:\nssh deploy@example.com -L 6643:localhost:6643\n\nThen proceed to http:\/\/localhost:6643 in your web browser.\nSimilarly, to access the server monitoring page, use another SSH tunnel:\nssh deploy@example.com -L 2812:localhost:2812\n\nAgain proceeding to http:\/\/localhost:2812 in your web browser.\nFinally, sign into ownCloud with a new administrator account to set it\nup. You should select PostgreSQL as the configuration backend. Use\nowncloud as the database user and the database name. For the\ndatabase password ansible has created a set of random passwords for\neach service and stores them in your local folder secret, use the\none in the file owncloud_db_password.\nHow To Use Your New Personal Cloud\nWe\u2019re collecting known-good client setups on our wiki.\nTroubleshooting\nIf you run into an errors, please check the wiki page. If the problem you encountered, is not listed, please go ahead and create an issue. If you already have a bugfix and\/or workaround, just put them in the issue and the wiki page.\nReboots\nYou will need to manually enter the password for any encrypted volumes on reboot. This is not Sovereign-specific, but rather a function of how EncFS works. This will necessitate SSHing into your machine after reboot, or accessing it via a console interface if one is available to you. Once you're in, run this:\nencfs \/encrypted \/decrypted --public\n\nIt is possible that some daemons may need to be restarted after you enter your password for the encrypted volume(s). Some services may stall out while looking for resources that will only be available once the \/decrypted volume is available and visible to daemon user accounts.\nIRC\nAsk questions and provide feedback in #sovereign on Freenode.\n","168":"Note\nThis README.md documents the process of creating a Virtual Hackintosh\nsystem.\nNote: All blobs and resources included in this repository are re-derivable (all\ninstructions are included!).\n\ud83d\udc9a Looking for commercial support with this stuff? I am available\nover email for a chat for commercial support options only.\nLooking for Big Sur support? See these notes.\nWorking with Proxmox and macOS? See Nick's blog for sure.\nYes, we support offline macOS installations now \ud83c\udf89\nContributing Back\nThis project can always use your help, time and attention. I am looking for\nhelp (pull-requests!) with the following work items:\n\n\nCreate full installation (ISO) image without requiring an existing macOS\nphysical\/virtual installation.\n\n\nDocumentation around running macOS on popular cloud providers (Hetzner, GCP,\nAWS). See the Is This Legal? section and associated references.\n\n\nTest accel=hvf flag on QEMU + macOS Mojave on MacBook Pro.\n\n\nDocument (share) how you use this project to build + test open-source\nprojects \/ get your stuff done.\n\n\nDocument how to use this project for iOS development.\n\n\nDocument how to use this project for XNU kernel debugging and development.\n\n\nDocument the process to create and reuse VM snapshots. Instantaneous macOS\nboots would be nice this way.\n\n\nDocument the process to launch a bunch of headless macOS VMs (build farm).\n\n\nDocument usage of munki to deploy software\nto such a build farm.\n\n\nEnable VNC + SSH support out of the box or more easily.\n\n\nBetter support + docs for AMD Ryzen.\n\n\nRobustness improvements are always welcome!\n\n\n(Not so) crazy idea - automate the macOS installation via OpenCV.\n\n\nRequirements\n\n\nA modern Linux distribution. E.g. Ubuntu 20.04 LTS 64-bit or later.\n\n\nQEMU >= 4.2.0\n\n\nA CPU with Intel VT-x \/ AMD SVM support is required\n\n\nA CPU with SSE4.1 support is required for >= macOS Sierra\n\n\nA CPU with AVX2 support is required for >= macOS Mojave\n\n\nNote: Older AMD CPU(s) are known to be problematic. AMD FX-8350 works but\nPhenom II X3 720 does not. Ryzen processors work just fine.\nInstallation Preparation\n\n\nKVM may need the following tweak on the host machine to work.\n$ echo 1 | sudo tee \/sys\/module\/kvm\/parameters\/ignore_msrs\n\nTo make this change permanent, you may use the following command.\n$ sudo cp kvm.conf \/etc\/modprobe.d\/kvm.conf\n\n\n\nInstall QEMU and other packages.\nsudo apt-get install qemu uml-utilities virt-manager git wget libguestfs-tools -y\n\nThis step may need to be adapted for your Linux distribution.\n\n\nClone this repository on your QEMU system. Files from this repository are\nused in the following steps.\ncd ~\n\ngit clone --depth 1 https:\/\/github.com\/kholia\/OSX-KVM.git\n\ncd OSX-KVM\n\n\n\nFetch macOS installer.\n.\/fetch-macOS.py\n\nYou can choose your desired macOS version here. After executing this step,\nyou should have the BaseSystem.dmg file in the current folder.\nSample run:\n$ .\/fetch-macOS.py\n #    ProductID    Version   Post Date  Title\n 1    061-26578    10.14.5  2019-10-14  macOS Mojave\n 2    061-26589    10.14.6  2019-10-14  macOS Mojave\n 3    041-91758    10.13.6  2019-10-19  macOS High Sierra\n 4    041-88800    10.14.4  2019-10-23  macOS Mojave\n 5    041-90855    10.13.5  2019-10-23  Install macOS High Sierra Beta\n 6    061-86291    10.15.3  2020-03-23  macOS Catalina\n 7    001-04366    10.15.4  2020-05-04  macOS Catalina\n 8    001-15219    10.15.5  2020-06-15  macOS Catalina\n 9    001-36735    10.15.6  2020-08-06  macOS Catalina\n10    001-36801    10.15.6  2020-08-12  macOS Catalina\n11    001-51042    10.15.7  2020-09-24  macOS Catalina\n12    001-57224    10.15.7  2020-10-27  macOS Catalina\n13    001-68446    10.15.7  2020-11-11  macOS Catalina\n14    001-79699     11.0.1  2020-11-12  macOS Big Sur\n\nChoose a product to download (1-14): 14\n\nAttention: Modern NVIDIA GPUs are supported on HighSierra but not on later\nversions (yet).\nNext, convert this file into a usable format.\nqemu-img convert BaseSystem.dmg -O raw BaseSystem.img\n\n\n\nCreate a virtual HDD image where macOS will be installed. If you change the\nname of the disk image from mac_hdd.img to something else, the boot scripts\nwill need to be updated to point to the new image name.\nqemu-img create -f qcow2 mac_hdd_ng.img 128G\n\nNOTE: Create this HDD image file on a fast SSD\/NVMe disk for best results.\n\n\nNow you are ready to install macOS \ud83d\ude80\n\n\nInstallation\n\n\nCLI method (primary). Just run the OpenCore-Boot.sh script to start the\ninstallation process.\n.\/OpenCore-Boot.sh\n\nNote: This same script works for Big Sur, Catalina, Mojave, and High Sierra.\nIf you are new to installing macOS, see the older README for\nhelp.\n\n\nYou are all set! \ud83d\ude4c\n\n\n(OPTIONAL) Use this macOS VM disk with libvirt (virt-manager \/ virsh stuff).\n\n\nEdit macOS-libvirt-Catalina.xml file and change the various file paths (search\nfor CHANGEME strings in that file). The following command should do the\ntrick usually.\nsed -i \"s\/CHANGEME\/$USER\/g\" macOS-libvirt-Catalina.xml\n\nvirt-xml-validate macOS-libvirt-Catalina.xml\n\n\n\nCreate a VM by running the following command.\nvirsh --connect qemu:\/\/\/system define macOS-libvirt-Catalina.xml\n\n\nLaunch virt-manager and start the macOS virtual machine.\nNote: You may need to run sudo ip link delete tap0 command before\nvirt-manager is able to start the macOS VM.\n\n\n\n\nSetting Expectations Right\nNice job on setting up a Virtual Hackintosh system! Such a system can be used\nfor a variety of purposes (e.g. software builds, testing, reversing work), and\nit may be all you need, along with some tweaks documented in this repository.\nHowever, such a system lacks graphical acceleration, a reliable sound sub-system,\nUSB (3) functionality and other similar things. To enable these things, take a\nlook at our notes. We would like to resume our testing and\ndocumentation work around this area. Please reach out to us\nif you are able to fund this area of work.\nIt is possible to have 'beyond-native-apple-hw' performance but it does require\nwork, patience, and a bit of luck (perhaps?).\nPost-Installation\n\n\nSee networking notes to setup guest networking.\nI have the following commands present in \/etc\/rc.local.\n#!\/usr\/bin\/env bash\n\nsudo ip tuntap add dev tap0 mode tap\nsudo ip link set tap0 up promisc on\nsudo ip link set dev virbr0 up\nsudo ip link set dev tap0 master virbr0\n\nThis has been enough for me so far.\nNote: You may need to enable the rc.local functionality manually on modern Ubuntu versions.\n\n\nTo get sound on your virtual Mac, see the \"Virtual Sound Device\" in notes.\n\n\nTo passthrough GPUs and other devices, see these notes.\n\n\nNeed a different resolution? Check out the notes included in this repository.\n\n\nTo generate your own SMBIOS, use GenSMBIOS.\n\n\nIs This Legal?\nThe \"secret\" Apple OSK string is widely available on the Internet. It is also included in a public court document available here. I am not a lawyer but it seems that Apple's attempt(s) to get the OSK string treated as a trade secret did not work out. Due to these reasons, the OSK string is freely included in this repository.\nPlease review the 'Legality of Hackintoshing' documentation bits from Dortania's OpenCore Install Guide.\nGabriel Somlo also has some thoughts on the legal aspects involved in running macOS under QEMU\/KVM.\nMotivation\nMy aim is to enable macOS based educational tasks, builds + testing, kernel\ndebugging, reversing, and macOS security research in an easy, reproducible\nmanner without getting 'invested' in Apple's closed ecosystem (too heavily).\nThese Virtual Hackintosh systems are not intended to replace the genuine\nphysical macOS systems.\nPersonally speaking, this repository has been a way for me to 'exit' the Apple\necosystem. It has helped me to test and compare the interoperability of Canon CanoScan LiDE 120 scanner, and Brother HL-2250DN laser printer. And these\ndevices now work decently enough on modern versions of Ubuntu (Yay for free\nsoftware). Also, a long time back, I had to completely wipe my (then) brand new\nMacBook Pro (Retina, 15-inch, Late 2013) and install Xubuntu on it - as the\nOS X kernel kept crashing on it!\nBackstory: I was a (poor) student in Canada once and Apple made my work on cracking Apple Keychains a lot harder than it needed to be.\n","169":"\n\nstanford-tensorflow-tutorials\nThis repository contains code examples for the course CS 20: TensorFlow for Deep Learning Research. \nIt will be updated as the class progresses. \nDetailed syllabus and lecture notes can be found here.\nFor this course, I use python3.6 and TensorFlow 1.4.1.\nFor the code and notes of the previous year's course, please see the folder 2017 and the website https:\/\/web.stanford.edu\/class\/cs20si\/2017\nFor setup instruction and the list of dependencies, please see the setup folder of this repository.\n","170":"\n\n\n\n\n\n\n\nbeets\nBeets is the media library management system for obsessive music geeks.\nThe purpose of beets is to get your music collection right once and for all.\nIt catalogs your collection, automatically improving its metadata as it goes.\nIt then provides a bouquet of tools for manipulating and accessing your music.\nHere's an example of beets' brainy tag corrector doing its thing:\n$ beet import ~\/music\/ladytron\nTagging:\n    Ladytron - Witching Hour\n(Similarity: 98.4%)\n * Last One Standing      -> The Last One Standing\n * Beauty                 -> Beauty*2\n * White Light Generation -> Whitelightgenerator\n * All the Way            -> All the Way...\n\nBecause beets is designed as a library, it can do almost anything you can\nimagine for your music collection. Via plugins, beets becomes a panacea:\n\nFetch or calculate all the metadata you could possibly need: album art,\nlyrics, genres, tempos, ReplayGain levels, or acoustic\nfingerprints.\nGet metadata from MusicBrainz, Discogs, and Beatport. Or guess\nmetadata using songs' filenames or their acoustic fingerprints.\nTranscode audio to any format you like.\nCheck your library for duplicate tracks and albums or for albums that\nare missing tracks.\nClean up crufty tags left behind by other, less-awesome tools.\nEmbed and extract album art from files' metadata.\nBrowse your music library graphically through a Web browser and play it in any\nbrowser that supports HTML5 Audio.\nAnalyze music files' metadata from the command line.\nListen to your library with a music player that speaks the MPD protocol\nand works with a staggering variety of interfaces.\n\nIf beets doesn't do what you want yet, writing your own plugin is\nshockingly simple if you know a little Python.\n\nInstall\nYou can install beets by typing pip install beets.\nBeets has also been packaged in the software repositories of several distributions.\nCheck out the Getting Started guide for more information.\n\nContribute\nThank you for considering contributing to beets! Whether you're a programmer or not, you should be able to find all the info you need at CONTRIBUTING.rst.\n\nRead More\nLearn more about beets at its Web site. Follow @b33ts on Twitter for\nnews and updates.\n\nContact\n\nEncountered a bug you'd like to report or have an idea for a new feature? Check out our issue tracker! If your issue or feature hasn't already been reported, please open a new ticket and we'll be in touch with you shortly. If you'd like to vote on a feature\/bug, simply give a \ud83d\udc4d on issues you'd like to see prioritized over others.\nNeed help\/support, would like to start a discussion, or would just like to introduce yourself to the team? Check out our forums!\n\n\nAuthors\nBeets is by Adrian Sampson with a supporting cast of thousands.\n","171":"\n\n\n\n\nWagtail is an open source content management system built on Django, with a strong community and commercial support. It's focused on user experience, and offers precise control for designers and developers.\n\nFeatures\n\nA fast, attractive interface for authors\nComplete control over front-end design and structure\nScales to millions of pages and thousands of editors\nFast out of the box, cache-friendly when you need it\nContent API for 'headless' sites with de-coupled front-end\nRuns on a Raspberry Pi or a multi-datacenter cloud platform\nStreamField encourages flexible content without compromising structure\nPowerful, integrated search, using Elasticsearch or PostgreSQL\nExcellent support for images and embedded content\nMulti-site and multi-language ready\nEmbraces and extends Django\n\nFind out more at wagtail.io.\nGetting started\nWagtail works with Python 3, on any platform.\nTo get started with Wagtail, run the following in a virtual environment:\npip install wagtail\nwagtail start mysite\ncd mysite\npip install -r requirements.txt\npython manage.py migrate\npython manage.py createsuperuser\npython manage.py runserver\nFor detailed installation and setup docs, see docs.wagtail.io.\nWho\u2019s using it?\nWagtail is used by NASA, Google, Oxfam, the NHS, Mozilla, MIT, the Red Cross, Salesforce, NBC, BMW, and the US and UK governments. Add your own Wagtail site to madewithwagtail.org.\nDocumentation\ndocs.wagtail.io is the full reference for Wagtail, and includes guides for developers, designers and editors, alongside release notes and our roadmap.\nCompatibility\n(If you are reading this on GitHub, the details here may not be indicative of the current released version - please see Compatible Django \/ Python versions in the Wagtail documentation.)\nWagtail supports:\n\nDjango 2.2.x, 3.0.x and 3.1.x\nPython 3.6, 3.7, 3.8 and 3.9\nPostgreSQL, MySQL and SQLite as database backends\n\nPrevious versions of Wagtail additionally supported Python 2.7 and Django 1.x.\n\nCommunity Support\nThere is an active community of Wagtail users and developers responding to questions on Stack Overflow. When posting questions, please read Stack Overflow's advice on how to ask questions and remember to tag your question \"wagtail\".\nFor topics and discussions that do not fit Stack Overflow's question and answer format, we have a Slack workspace and a Wagtail Support mailing list. Please respect the time and effort of volunteers by not asking the same question in multiple places.\nWe maintain a curated list of third party packages, articles and other resources at Awesome Wagtail.\nCommercial Support\nWagtail is sponsored by Torchbox. If you need help implementing or hosting Wagtail, please contact us: hello@torchbox.com. See also madewithwagtail.org\/developers\/ for expert Wagtail developers around the world.\nSecurity\nWe take the security of Wagtail, and related packages we maintain, seriously. If you have found a security issue with any of our projects please email us at security@wagtail.io so we can work together to find and patch the issue. We appreciate responsible disclosure with any security related issues, so please contact us first before creating a Github issue.\nIf you want to send an encrypted email (optional), the public key ID for security@wagtail.io is 0x6ba1e1a86e0f8ce8, and this public key is available from most commonly-used keyservers.\nRelease schedule\nFeature releases of Wagtail are released every three months. Selected releases are designated as Long Term Support (LTS) releases, and will receive maintenance updates for an extended period to address any security and data-loss related issues. For dates of past and upcoming releases and support periods, see Release Schedule.\nNightly releases\nTo try out the latest features before a release, we also create builds from master every night. You can find instructions on how to install the latest nightly release at https:\/\/releases.wagtail.io\/nightly\/index.html\nContributing\nIf you're a Python or Django developer, fork the repo and get stuck in! We have several developer focused channels on the Slack workspace.\nYou might like to start by reviewing the contributing guidelines and checking issues with the good first issue label.\nWe also welcome translations for Wagtail's interface. Translation work should be submitted through Transifex.\nLicense\nBSD\nThanks\nWe thank the following organisations for their services used in Wagtail's development:\n\nBrowserStack provides the project with free access to their live web-based browser testing tool, and automated Selenium cloud testing.\n\nSquash provides the project with free test environments for reviewing pull requests.\n\n\n\n\n\n\n\n\n","172":"\n\nSaleor Commerce\n\n\nCustomer-centric e-commerce on a modern stack\n\n\n  A headless, GraphQL-first e-commerce platform delivering ultra-fast, dynamic, personalized shopping experiences. Beautiful online stores, anywhere, on any device.\n\n\n\n  Join our active, engaged community: \nWebsite\n | \nBlog\n | \nTwitter\n | \nGitter\n | \nSpectrum\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nWhat makes Saleor special?\nFeatures\nInstallation\nDocumentation\nDemo\nContributing\nTranslations\nYour feedback\nLicense\n\nWhat makes Saleor special?\nSaleor is a rapidly-growing open source e-commerce platform that has served high-volume companies from branches like publishing and apparel since 2012. Based on Python and Django, the latest major update introduces a modular front end powered by a GraphQL API and written with React and TypeScript.\nFeatures\n\nPWA: End users can shop offline for better sales and shopping experiences\nGraphQL API: Access all data from any web or mobile client using the latest technology\nHeadless commerce: Build mobile apps, customize storefronts and externalize processes\nUX and UI: Designed for a user experience that rivals even the top commercial platforms\nDashboard: Administrators have total control of users, processes, and products\nOrders: A comprehensive system for orders, dispatch, and refunds\nCart: Advanced payment and tax options, with full control over discounts and promotions\nPayments: Flexible API architecture allows integration of any payment method. It comes with Braintree support out of the box.\nGeo-adaptive: Automatic localized pricing. Over 20 local languages. Localized checkout experience by country.\nSEO: Packed with features that get stores to a wider audience\nCloud: Optimized for deployments using Docker\nAnalytics: Server-side Google Analytics to report e-commerce metrics without affecting privacy\n\nSaleor is free and always will be.\nHelp us out\u2026 If you love free stuff and great software, give us a star! \ud83c\udf1f\n\n\nInstallation\nSaleor requires Python 3.8, Node.js 10.0+, PostgreSQL and OS-specific dependency tools.\nSee the Saleor docs for step-by-step installation and deployment instructions.\nNote:\nThe master branch is the development version of Saleor and it may be unstable. To use the latest stable version, download it from the Releases page or switch to a release tag.\nThe current stable version is 2.11 and you should use this version for all three components:\n\nSaleor: https:\/\/github.com\/mirumee\/saleor\/releases\/tag\/2.11.1\nDashboard: https:\/\/github.com\/mirumee\/saleor-dashboard\/releases\/tag\/2.11.1\nStorefront: https:\/\/github.com\/mirumee\/saleor-storefront\/releases\/tag\/2.11.0\n\nDocumentation\nSaleor documentation is available here: docs.saleor.io\nTo contribute, please see the mirumee\/saleor-docs repository.\nSaleor Platform\nThe easiest way to run all components of Saleor (API, storefront and dashboard) together on your local machine is to use the saleor-platform project. Go to that repository for instructions on how to use it.\nView saleor-platform\nStorefront\nFor PWA, single-page storefront go to the saleor-storefront repository.\nView storefront demo\nDashboard\nFor dashboard go to the saleor-dashboard repository.\nView dashboard demo\nDemo\nWant to see Saleor in action?\nView Storefront | View Dashboard (admin area)\nOr launch the demo on a free Heroku instance.\n\nLogin credentials: admin@example.com\/admin\nContributing\nWe love your contributions and do our best to provide you with mentorship and support. If you are looking for an issue to tackle, take a look at issues labeled Help Wanted.\nIf nothing grabs your attention, check our roadmap or come up with your feature. Just drop us a line or open an issue and we\u2019ll work out how to handle it.\nGet more details in our Contributing Guide.\nLegacy views\nIf you're interested in using the old version of Saleor, go the legacy-views repository. It contains the 2.9.0 release, which includes Django-based views and HTML templates of Storefront 1.0 and Dashboard 1.0. Note: this version of Saleor is no longer officially maintained.\nYour feedback\nDo you use Saleor as an e-commerce platform?\nFill out this short survey and help us grow. It will take just a minute, but mean a lot!\nTake a survey\nLicense\nDisclaimer: Everything you see here is open and free to use as long as you comply with the license. There are no hidden charges. We promise to do our best to fix bugs and improve the code.\nSome situations do call for extra code; we can cover exotic use cases or build you a custom e-commerce appliance.\nCrafted with \u2764\ufe0f by Mirumee Software\nhello@mirumee.com\n","173":"Mail-in-a-Box\nBy @JoshData and contributors.\nMail-in-a-Box helps individuals take back control of their email by defining a one-click, easy-to-deploy SMTP+everything else server: a mail server in a box.\nPlease see https:\/\/mailinabox.email for the project's website and setup guide!\n\nOur goals are to:\n\nMake deploying a good mail server easy.\nPromote decentralization, innovation, and privacy on the web.\nHave automated, auditable, and idempotent configuration.\nNot make a totally unhackable, NSA-proof server.\nNot make something customizable by power users.\n\nAdditionally, this project has a Code of Conduct, which supersedes the goals above. Please review it when joining our community.\nIn The Box\nMail-in-a-Box turns a fresh Ubuntu 18.04 LTS 64-bit machine into a working mail server by installing and configuring various components.\nIt is a one-click email appliance. There are no user-configurable setup options. It \"just works.\"\nThe components installed are:\n\nSMTP (postfix), IMAP (Dovecot), CardDAV\/CalDAV (Nextcloud), and Exchange ActiveSync (z-push) servers\nWebmail (Roundcube), mail filter rules (thanks to Roundcube and Dovecot), and email client autoconfig settings (served by nginx)\nSpam filtering (spamassassin) and greylisting (postgrey)\nDNS (nsd4) with SPF, DKIM (OpenDKIM), DMARC, DNSSEC, DANE TLSA, MTA-STS, and SSHFP policy records automatically set\nTLS certificates are automatically provisioned using Let's Encrypt for protecting https and all of the other services on the box\nBackups (duplicity), firewall (ufw), intrusion protection (fail2ban), and basic system monitoring (munin)\n\nIt also includes system management tools:\n\nComprehensive health monitoring that checks each day that services are running, ports are open, TLS certificates are valid, and DNS records are correct\nA control panel for adding\/removing mail users, aliases, custom DNS records, configuring backups, etc.\nAn API for all of the actions on the control panel\n\nIt also supports static website hosting since the box is serving HTTPS anyway. (To serve a website for your domains elsewhere, just add a custom DNS \"A\" record in you Mail-in-a-Box's control panel to point domains to another server.)\nFor more information on how Mail-in-a-Box handles your privacy, see the security details page.\nInstallation\nSee the setup guide for detailed, user-friendly instructions.\nFor experts, start with a completely fresh (really, I mean it) Ubuntu 18.04 LTS 64-bit machine. On the machine...\nClone this repository:\n$ git clone https:\/\/github.com\/mail-in-a-box\/mailinabox\n$ cd mailinabox\n\nOptional: Download Josh's PGP key and then verify that the sources were signed\nby him:\n$ curl -s https:\/\/keybase.io\/joshdata\/key.asc | gpg --import\ngpg: key C10BDD81: public key \"Joshua Tauberer <jt@occams.info>\" imported\n\n$ git verify-tag v0.51\ngpg: Signature made ..... using RSA key ID C10BDD81\ngpg: Good signature from \"Joshua Tauberer <jt@occams.info>\"\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 5F4C 0E73 13CC D744 693B  2AEA B920 41F4 C10B DD81\n\nYou'll get a lot of warnings, but that's OK. Check that the primary key fingerprint matches the\nfingerprint in the key details at https:\/\/keybase.io\/joshdata\nand on his personal homepage. (Of course, if this repository has been compromised you can't trust these instructions.)\nCheckout the tag corresponding to the most recent release:\n$ git checkout v0.51\n\nBegin the installation.\n$ sudo setup\/start.sh\n\nFor help, DO NOT contact Josh directly --- I don't do tech support by email or tweet (no exceptions).\nPost your question on the discussion forum instead, where maintainers and Mail-in-a-Box users may be able to help you.\nNote that while we want everything to \"just work,\" we can't control the rest of the Internet. Other mail services might block or spam-filter email sent from your Mail-in-a-Box.\nThis is a challenge faced by everyone who runs their own mail server, with or without Mail-in-a-Box. See our discussion forum for tips about that.\nContributing and Development\nMail-in-a-Box is an open source project. Your contributions and pull requests are welcome. See CONTRIBUTING to get started.\nThe Acknowledgements\nThis project was inspired in part by the \"NSA-proof your email in 2 hours\" blog post by Drew Crawford, Sovereign by Alex Payne, and conversations with @shevski, @konklone, and @GregElin.\nMail-in-a-Box is similar to iRedMail and Modoboa.\nThe History\n\nIn 2007 I wrote a relatively popular Mozilla Thunderbird extension that added client-side SPF and DKIM checks to mail to warn users about possible phishing: add-on page, source.\nIn August 2013 I began Mail-in-a-Box by combining my own mail server configuration with the setup in \"NSA-proof your email in 2 hours\" and making the setup steps reproducible with bash scripts.\nMail-in-a-Box was a semifinalist in the 2014 Knight News Challenge, but it was not selected as a winner.\nMail-in-a-Box hit the front page of Hacker News in April 2014, September 2014, May 2015, and November 2016.\nFastCompany mentioned Mail-in-a-Box a roundup of privacy projects on June 26, 2015.\n\n","174":"Reinforcement Learning: An Introduction\n\nPython replication for Sutton & Barto's book Reinforcement Learning: An Introduction (2nd Edition)\n\nIf you have any confusion about the code or want to report a bug, please open an issue instead of emailing me directly, and unfortunately I do not have exercise answers for the book.\n\nContents\nChapter 1\n\nTic-Tac-Toe\n\nChapter 2\n\nFigure 2.1: An exemplary bandit problem from the 10-armed testbed\nFigure 2.2: Average performance of epsilon-greedy action-value methods on the 10-armed testbed\nFigure 2.3: Optimistic initial action-value estimates\nFigure 2.4: Average performance of UCB action selection on the 10-armed testbed\nFigure 2.5: Average performance of the gradient bandit algorithm\nFigure 2.6: A parameter study of the various bandit algorithms\n\nChapter 3\n\nFigure 3.2: Grid example with random policy\nFigure 3.5: Optimal solutions to the gridworld example\n\nChapter 4\n\nFigure 4.1: Convergence of iterative policy evaluation on a small gridworld\nFigure 4.2: Jack\u2019s car rental problem\nFigure 4.3: The solution to the gambler\u2019s problem\n\nChapter 5\n\nFigure 5.1: Approximate state-value functions for the blackjack policy\nFigure 5.2: The optimal policy and state-value function for blackjack found by Monte Carlo ES\nFigure 5.3: Weighted importance sampling\nFigure 5.4: Ordinary importance sampling with surprisingly unstable estimates\n\nChapter 6\n\nExample 6.2: Random walk\nFigure 6.2: Batch updating\nFigure 6.3: Sarsa applied to windy grid world\nFigure 6.4: The cliff-walking task\nFigure 6.6: Interim and asymptotic performance of TD control methods\nFigure 6.7: Comparison of Q-learning and Double Q-learning\n\nChapter 7\n\nFigure 7.2: Performance of n-step TD methods on 19-state random walk\n\nChapter 8\n\nFigure 8.2: Average learning curves for Dyna-Q agents varying in their number of planning steps\nFigure 8.4: Average performance of Dyna agents on a blocking task\nFigure 8.5: Average performance of Dyna agents on a shortcut task\nExample 8.4: Prioritized sweeping significantly shortens learning time on the Dyna maze task\nFigure 8.7: Comparison of efficiency of expected and sample updates\nFigure 8.8: Relative efficiency of different update distributions\n\nChapter 9\n\nFigure 9.1: Gradient Monte Carlo algorithm on the 1000-state random walk task\nFigure 9.2: Semi-gradient n-steps TD algorithm on the 1000-state random walk task\nFigure 9.5: Fourier basis vs polynomials on the 1000-state random walk task\nFigure 9.8: Example of feature width\u2019s effect on initial generalization and asymptotic accuracy\nFigure 9.10: Single tiling and multiple tilings on the 1000-state random walk task\n\nChapter 10\n\nFigure 10.1: The cost-to-go function for Mountain Car task in one run\nFigure 10.2: Learning curves for semi-gradient Sarsa on Mountain Car task\nFigure 10.3: One-step vs multi-step performance of semi-gradient Sarsa on the Mountain Car task\nFigure 10.4: Effect of the alpha and n on early performance of n-step semi-gradient Sarsa\nFigure 10.5: Differential semi-gradient Sarsa on the access-control queuing task\n\nChapter 11\n\nFigure 11.2: Baird's Counterexample\nFigure 11.6: The behavior of the TDC algorithm on Baird\u2019s counterexample\nFigure 11.7: The behavior of the ETD algorithm in expectation on Baird\u2019s counterexample\n\nChapter 12\n\nFigure 12.3: Off-line \u03bb-return algorithm on 19-state random walk\nFigure 12.6: TD(\u03bb) algorithm on 19-state random walk\nFigure 12.8: True online TD(\u03bb) algorithm on 19-state random walk\nFigure 12.10: Sarsa(\u03bb) with replacing traces on Mountain Car\nFigure 12.11: Summary comparison of Sarsa(\u03bb) algorithms on Mountain Car\n\nChapter 13\n\nExample 13.1: Short corridor with switched actions\nFigure 13.1: REINFORCE on the short-corridor grid world\nFigure 13.2: REINFORCE with baseline on the short-corridor grid-world\n\nEnvironment\n\npython 3.6\nnumpy\nmatplotlib\nseaborn\ntqdm\n\nUsage\n\nAll files are self-contained\n\npython any_file_you_want.py\n\nContribution\nIf you want to contribute some missing examples or fix some bugs, feel free to open an issue or make a pull request.\nFollowing are missing figures\/examples:\n\nFigure 12.14: The effect of \u03bb\n\n","175":"\n\n\n\n\n\nA very simple framework for state-of-the-art NLP. Developed by Humboldt University of Berlin and friends.\n\nIMPORTANT: (30.08.2020) We moved our models to a new server. Please update your Flair to the newest version!\n\n\nFlair is:\n\n\nA powerful NLP library. Flair allows you to apply our state-of-the-art natural language processing (NLP)\nmodels to your text, such as named entity recognition (NER), part-of-speech tagging (PoS),\nsense disambiguation and classification, with support for a rapidly growing number of languages.\n\n\nA biomedical NER library. Flair has special support for biomedical data with\nstate-of-the-art models for biomedical NER and support for over 32 biomedical datasets.\n\n\nA text embedding library. Flair has simple interfaces that allow you to use and combine different word and\ndocument embeddings, including our proposed Flair embeddings, BERT embeddings and ELMo embeddings.\n\n\nA PyTorch NLP framework. Our framework builds directly on PyTorch, making it easy to\ntrain your own models and experiment with new approaches using Flair embeddings and classes.\n\n\nNow at version 0.6.1!\nComparison with State-of-the-Art\nFlair outperforms the previous best methods on a range of NLP tasks:\n\n\n\nTask\nLanguage\nDataset\nFlair\nPrevious best\n\n\n\n\nNamed Entity Recognition\nEnglish\nConll-03\n93.18 (F1)\n92.22 (Peters et al., 2018)\n\n\nNamed Entity Recognition\nEnglish\nOntonotes\n89.3 (F1)\n86.28 (Chiu et al., 2016)\n\n\nEmerging Entity Detection\nEnglish\nWNUT-17\n49.49 (F1)\n45.55 (Aguilar et al., 2018)\n\n\nPart-of-Speech tagging\nEnglish\nWSJ\n97.85\n97.64 (Choi, 2016)\n\n\nChunking\nEnglish\nConll-2000\n96.72 (F1)\n96.36 (Peters et al., 2017)\n\n\nNamed Entity Recognition\nGerman\nConll-03\n88.27 (F1)\n78.76 (Lample et al., 2016)\n\n\nNamed Entity Recognition\nGerman\nGermeval\n84.65 (F1)\n79.08 (H\u00e4nig et al, 2014)\n\n\nNamed Entity Recognition\nDutch\nConll-02\n92.38 (F1)\n81.74 (Lample et al., 2016)\n\n\nNamed Entity Recognition\nPolish\nPolEval-2018\n86.6 (F1)  (Borchmann et al., 2018)\n85.1 (PolDeepNer)\n\n\n\nHere's how to reproduce these numbers using Flair. You can also find detailed evaluations and discussions in our papers:\n\n\nContextual String Embeddings for Sequence Labeling.\nAlan Akbik, Duncan Blythe and Roland Vollgraf.\n27th International Conference on Computational Linguistics, COLING 2018.\n\n\nPooled Contextualized Embeddings for Named Entity Recognition.\nAlan Akbik, Tanja Bergmann and Roland Vollgraf.\n2019 Annual Conference of the North American Chapter of the Association for Computational Linguistics, NAACL 2019.\n\n\nFLAIR: An Easy-to-Use Framework for State-of-the-Art NLP.\nAlan Akbik, Tanja Bergmann, Duncan Blythe, Kashif Rasul, Stefan Schweter and Roland Vollgraf.\n2019 Annual Conference of the North American Chapter of the Association for Computational Linguistics (Demonstrations), NAACL 2019.\n\n\nQuick Start\nRequirements and Installation\nThe project is based on PyTorch 1.1+ and Python 3.6+, because method signatures and type hints are beautiful.\nIf you do not have Python 3.6, install it first. Here is how for Ubuntu 16.04.\nThen, in your favorite virtual environment, simply do:\npip install flair\n\nExample Usage\nLet's run named entity recognition (NER) over an example sentence. All you need to do is make a Sentence, load\na pre-trained model and use it to predict tags for the sentence:\nfrom flair.data import Sentence\nfrom flair.models import SequenceTagger\n\n# make a sentence\nsentence = Sentence('I love Berlin .')\n\n# load the NER tagger\ntagger = SequenceTagger.load('ner')\n\n# run NER over sentence\ntagger.predict(sentence)\nDone! The Sentence now has entity annotations. Print the sentence to see what the tagger found.\nprint(sentence)\nprint('The following NER tags are found:')\n\n# iterate over entities and print\nfor entity in sentence.get_spans('ner'):\n    print(entity)\nThis should print:\nSentence: \"I love Berlin .\" - 4 Tokens\n\nThe following NER tags are found:\n\nSpan [3]: \"Berlin\"   [\u2212 Labels: LOC (0.9992)]\nTutorials\nWe provide a set of quick tutorials to get you started with the library:\n\nTutorial 1: Basics\nTutorial 2: Tagging your Text\nTutorial 3: Embedding Words\nTutorial 4: List of All Word Embeddings\nTutorial 5: Embedding Documents\nTutorial 6: Loading a Dataset\nTutorial 7: Training a Model\nTutorial 8: Training your own Flair Embeddings\nTutorial 9: Training a Zero Shot Text Classifier (TARS)\n\nThe tutorials explain how the base NLP classes work, how you can load pre-trained models to tag your\ntext, how you can embed your text with different word or document embeddings, and how you can train your own\nlanguage models, sequence labeling models, and text classification models. Let us know if anything is unclear.\nThere is also a dedicated landing page for our biomedical NER and datasets with\ninstallation instructions and tutorials.\nThere are also good third-party articles and posts that illustrate how to use Flair:\n\nHow to build a text classifier with Flair\nHow to build a microservice with Flair and Flask\nA docker image for Flair\nGreat overview of Flair functionality and how to use in Colab\nVisualisation tool for highlighting the extracted entities\nPractical approach of State-of-the-Art Flair in Named Entity Recognition\nBenchmarking NER algorithms\nTraining a Flair text classifier on Google Cloud Platform (GCP) and serving predictions on GCP\n\nCiting Flair\nPlease cite the following paper when using Flair:\n@inproceedings{akbik2018coling,\n  title={Contextual String Embeddings for Sequence Labeling},\n  author={Akbik, Alan and Blythe, Duncan and Vollgraf, Roland},\n  booktitle = {{COLING} 2018, 27th International Conference on Computational Linguistics},\n  pages     = {1638--1649},\n  year      = {2018}\n}\n\nIf you use the pooled version of the Flair embeddings (PooledFlairEmbeddings), please cite:\n@inproceedings{akbik2019naacl,\n  title={Pooled Contextualized Embeddings for Named Entity Recognition},\n  author={Akbik, Alan and Bergmann, Tanja and Vollgraf, Roland},\n  booktitle = {{NAACL} 2019, 2019 Annual Conference of the North American Chapter of the Association for Computational Linguistics},\n  pages     = {724\u2013728},\n  year      = {2019}\n}\n\nContact\nPlease email your questions or comments to Alan Akbik.\nContributing\nThanks for your interest in contributing! There are many ways to get involved;\nstart with our contributor guidelines and then\ncheck these open issues for specific tasks.\nFor contributors looking to get deeper into the API we suggest cloning the repository and checking out the unit\ntests for examples of how to call methods. Nearly all classes and methods are documented, so finding your way around\nthe code should hopefully be easy.\nRunning unit tests locally\nYou need Pipenv for this:\npipenv install --dev && pipenv shell\npytest tests\/\nTo run integration tests execute:\npytest --runintegration tests\/\nThe integration tests will train small models.\nAfterwards, the trained model will be loaded for prediction.\nTo also run slow tests, such as loading and using the embeddings provided by flair, you should execute:\npytest --runslow tests\/\nLicense\nThe MIT License (MIT)\nFlair is licensed under the following MIT license: The MIT License (MIT) Copyright \u00a9 2018 Zalando SE, https:\/\/tech.zalando.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","176":"The GAN Zoo\n\nEvery week, new GAN papers are coming out and it's hard to keep track of them all, not to mention the incredibly creative ways in which researchers are naming these GANs! So, here's a list of what started as a fun activity compiling all named GANs!\n\nYou can also check out the same data in a tabular format with functionality to filter by year or do a quick search by title here.\nContributions are welcome. Add links through pull requests in gans.tsv file in the same format or create an issue to lemme know something I missed or to start a discussion.\nCheck out Deep Hunt - my weekly AI newsletter for this repo as blogpost and follow me on Twitter.\n\n3D-ED-GAN - Shape Inpainting using 3D Generative Adversarial Network and Recurrent Convolutional Networks\n3D-GAN - Learning a Probabilistic Latent Space of Object Shapes via 3D Generative-Adversarial Modeling (github)\n3D-IWGAN - Improved Adversarial Systems for 3D Object Generation and Reconstruction (github)\n3D-PhysNet - 3D-PhysNet: Learning the Intuitive Physics of Non-Rigid Object Deformations\n3D-RecGAN - 3D Object Reconstruction from a Single Depth View with Adversarial Learning (github)\nABC-GAN - ABC-GAN: Adaptive Blur and Control for improved training stability of Generative Adversarial Networks (github)\nABC-GAN - GANs for LIFE: Generative Adversarial Networks for Likelihood Free Inference\nAC-GAN - Conditional Image Synthesis With Auxiliary Classifier GANs\nacGAN - Face Aging With Conditional Generative Adversarial Networks\nACGAN - Coverless Information Hiding Based on Generative adversarial networks\nacGAN - On-line Adaptative Curriculum Learning for GANs\nACtuAL - ACtuAL: Actor-Critic Under Adversarial Learning\nAdaGAN - AdaGAN: Boosting Generative Models\nAdaptive GAN - Customizing an Adversarial Example Generator with Class-Conditional GANs\nAdvEntuRe - AdvEntuRe: Adversarial Training for Textual Entailment with Knowledge-Guided Examples\nAdvGAN - Generating adversarial examples with adversarial networks\nAE-GAN - AE-GAN: adversarial eliminating with GAN\nAE-OT - Latent Space Optimal Transport for Generative Models\nAEGAN - Learning Inverse Mapping by Autoencoder based Generative Adversarial Nets\nAF-DCGAN - AF-DCGAN: Amplitude Feature Deep Convolutional GAN for Fingerprint Construction in Indoor Localization System\nAffGAN - Amortised MAP Inference for Image Super-resolution\nAIM - Generating Informative and Diverse Conversational Responses via Adversarial Information Maximization\nAL-CGAN - Learning to Generate Images of Outdoor Scenes from Attributes and Semantic Layouts\nALI - Adversarially Learned Inference (github)\nAlignGAN - AlignGAN: Learning to Align Cross-Domain Images with Conditional Generative Adversarial Networks\nAlphaGAN - AlphaGAN: Generative adversarial networks for natural image matting\nAM-GAN - Activation Maximization Generative Adversarial Nets\nAmbientGAN - AmbientGAN: Generative models from lossy measurements (github)\nAMC-GAN - Video Prediction with Appearance and Motion Conditions\nAnoGAN - Unsupervised Anomaly Detection with Generative Adversarial Networks to Guide Marker Discovery\nAPD - Adversarial Distillation of Bayesian Neural Network Posteriors\nAPE-GAN - APE-GAN: Adversarial Perturbation Elimination with GAN\nARAE - Adversarially Regularized Autoencoders for Generating Discrete Structures (github)\nARDA - Adversarial Representation Learning for Domain Adaptation\nARIGAN - ARIGAN: Synthetic Arabidopsis Plants using Generative Adversarial Network\nArtGAN - ArtGAN: Artwork Synthesis with Conditional Categorial GANs\nASDL-GAN - Automatic Steganographic Distortion Learning Using a Generative Adversarial Network\nATA-GAN - Attention-Aware Generative Adversarial Networks (ATA-GANs)\nAttention-GAN - Attention-GAN for Object Transfiguration in Wild Images\nAttGAN - Arbitrary Facial Attribute Editing: Only Change What You Want (github)\nAttnGAN - AttnGAN: Fine-Grained Text to Image Generation with Attentional Generative Adversarial Networks (github)\nAVID - AVID: Adversarial Visual Irregularity Detection\nB-DCGAN - B-DCGAN:Evaluation of Binarized DCGAN for FPGA\nb-GAN - Generative Adversarial Nets from a Density Ratio Estimation Perspective\nBAGAN - BAGAN: Data Augmentation with Balancing GAN\nBayesian GAN - Deep and Hierarchical Implicit Models\nBayesian GAN - Bayesian GAN (github)\nBCGAN - Bayesian Conditional Generative Adverserial Networks\nBCGAN - Bidirectional Conditional Generative Adversarial networks\nBEAM - Boltzmann Encoded Adversarial Machines\nBEGAN - BEGAN: Boundary Equilibrium Generative Adversarial Networks\nBEGAN-CS - Escaping from Collapsing Modes in a Constrained Space\nBellman GAN - Distributional Multivariate Policy Evaluation and Exploration with the Bellman GAN\nBGAN - Binary Generative Adversarial Networks for Image Retrieval (github)\nBi-GAN - Autonomously and Simultaneously Refining Deep Neural Network Parameters by a Bi-Generative Adversarial Network Aided Genetic Algorithm\nBicycleGAN - Toward Multimodal Image-to-Image Translation (github)\nBiGAN - Adversarial Feature Learning\nBinGAN - BinGAN: Learning Compact Binary Descriptors with a Regularized GAN\nBourGAN - BourGAN: Generative Networks with Metric Embeddings\nBranchGAN - Branched Generative Adversarial Networks for Multi-Scale Image Manifold Learning\nBRE - Improving GAN Training via Binarized Representation Entropy (BRE) Regularization (github)\nBridgeGAN - Generative Adversarial Frontal View to Bird View Synthesis\nBS-GAN - Boundary-Seeking Generative Adversarial Networks\nBubGAN - BubGAN: Bubble Generative Adversarial Networks for Synthesizing Realistic Bubbly Flow Images\nBWGAN - Banach Wasserstein GAN\nC-GAN  - Face Aging with Contextual Generative Adversarial Nets \nC-RNN-GAN - C-RNN-GAN: Continuous recurrent neural networks with adversarial training (github)\nCA-GAN - Composition-aided Sketch-realistic Portrait Generation\nCaloGAN - CaloGAN: Simulating 3D High Energy Particle Showers in Multi-Layer Electromagnetic Calorimeters with Generative Adversarial Networks (github)\nCAN - CAN: Creative Adversarial Networks, Generating Art by Learning About Styles and Deviating from Style Norms\nCapsGAN - CapsGAN: Using Dynamic Routing for Generative Adversarial Networks\nCapsuleGAN - CapsuleGAN: Generative Adversarial Capsule Network \nCatGAN - Unsupervised and Semi-supervised Learning with Categorical Generative Adversarial Networks\nCatGAN - CatGAN: Coupled Adversarial Transfer for Domain Generation\nCausalGAN - CausalGAN: Learning Causal Implicit Generative Models with Adversarial Training\nCC-GAN - Semi-Supervised Learning with Context-Conditional Generative Adversarial Networks (github)\ncd-GAN - Conditional Image-to-Image Translation\nCDcGAN - Simultaneously Color-Depth Super-Resolution with Conditional Generative Adversarial Network\nCE-GAN - Deep Learning for Imbalance Data Classification using Class Expert Generative Adversarial Network\nCFG-GAN - Composite Functional Gradient Learning of Generative Adversarial Models\nCGAN - Conditional Generative Adversarial Nets\nCGAN - Controllable Generative Adversarial Network\nChekhov GAN - An Online Learning Approach to Generative Adversarial Networks\nciGAN - Conditional Infilling GANs for Data Augmentation in Mammogram Classification\nCinCGAN - Unsupervised Image Super-Resolution using Cycle-in-Cycle Generative Adversarial Networks\nCipherGAN - Unsupervised Cipher Cracking Using Discrete GANs\nClusterGAN - ClusterGAN : Latent Space Clustering in Generative Adversarial Networks\nCM-GAN - CM-GANs: Cross-modal Generative Adversarial Networks for Common Representation Learning\nCoAtt-GAN - Are You Talking to Me? Reasoned Visual Dialog Generation through Adversarial Learning\nCoGAN - Coupled Generative Adversarial Networks\nComboGAN - ComboGAN: Unrestrained Scalability for Image Domain Translation (github)\nConceptGAN - Learning Compositional Visual Concepts with Mutual Consistency\nConditional cycleGAN - Conditional CycleGAN for Attribute Guided Face Image Generation\nconstrast-GAN - Generative Semantic Manipulation with Contrasting GAN\nContext-RNN-GAN - Contextual RNN-GANs for Abstract Reasoning Diagram Generation\nCorrGAN - Correlated discrete data generation using adversarial training\nCoulomb GAN - Coulomb GANs: Provably Optimal Nash Equilibria via Potential Fields\nCover-GAN - Generative Steganography with Kerckhoffs' Principle based on Generative Adversarial Networks\ncowboy - Defending Against Adversarial Attacks by Leveraging an Entire GAN\nCR-GAN - CR-GAN: Learning Complete Representations for Multi-view Generation\nCram\u00e8r GAN  - The Cramer Distance as a Solution to Biased Wasserstein Gradients\nCross-GAN - Crossing Generative Adversarial Networks for Cross-View Person Re-identification\ncrVAE-GAN - Channel-Recurrent Variational Autoencoders\nCS-GAN - Improving Neural Machine Translation with Conditional Sequence Generative Adversarial Nets\nCSG - Speech-Driven Expressive Talking Lips with Conditional Sequential Generative Adversarial Networks\nCT-GAN - CT-GAN: Conditional Transformation Generative Adversarial Network for Image Attribute Modification\nCVAE-GAN - CVAE-GAN: Fine-Grained Image Generation through Asymmetric Training\nCycleGAN - Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks (github)\nD-GAN - Differential Generative Adversarial Networks: Synthesizing Non-linear Facial Variations with Limited Number of Training Data\nD-WCGAN - I-vector Transformation Using Conditional Generative Adversarial Networks for Short Utterance Speaker Verification\nD2GAN - Dual Discriminator Generative Adversarial Nets\nD2IA-GAN - Tagging like Humans: Diverse and Distinct Image Annotation\nDA-GAN  - DA-GAN: Instance-level Image Translation by Deep Attention Generative Adversarial Networks (with Supplementary Materials)\nDADA - DADA: Deep Adversarial Data Augmentation for Extremely Low Data Regime Classification\nDAGAN - Data Augmentation Generative Adversarial Networks\nDAN - Distributional Adversarial Networks\nDBLRGAN - Adversarial Spatio-Temporal Learning for Video Deblurring\nDCGAN - Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks (github)\nDE-GAN - Generative Adversarial Networks with Decoder-Encoder Output Noise\nDeblurGAN - DeblurGAN: Blind Motion Deblurring Using Conditional Adversarial Networks (github)\nDeepFD - Learning to Detect Fake Face Images in the Wild\nDefense-GAN - Defense-GAN: Protecting Classifiers Against Adversarial Attacks Using Generative Models  (github)\nDefo-Net - Defo-Net: Learning Body Deformation using Generative Adversarial Networks\nDeliGAN - DeLiGAN : Generative Adversarial Networks for Diverse and Limited Data (github)\nDF-GAN - Learning Disentangling and Fusing Networks for Face Completion Under Structured Occlusions\nDialogWAE - DialogWAE: Multimodal Response Generation with Conditional Wasserstein Auto-Encoder\nDiscoGAN - Learning to Discover Cross-Domain Relations with Generative Adversarial Networks\nDistanceGAN - One-Sided Unsupervised Domain Mapping\nDM-GAN - Dual Motion GAN for Future-Flow Embedded Video Prediction\nDMGAN - Disconnected Manifold Learning for Generative Adversarial Networks\nDNA-GAN - DNA-GAN: Learning Disentangled Representations from Multi-Attribute Images\nDOPING - DOPING: Generative Data Augmentation for Unsupervised Anomaly Detection with GAN\ndp-GAN - Differentially Private Releasing via Deep Generative Model\nDP-GAN - DP-GAN: Diversity-Promoting Generative Adversarial Network for Generating Informative and Diversified Text \nDPGAN  - Differentially Private Generative Adversarial Network \nDR-GAN - Representation Learning by Rotating Your Faces\nDRAGAN - How to Train Your DRAGAN (github)\nDropout-GAN - Dropout-GAN: Learning from a Dynamic Ensemble of Discriminators\nDRPAN - Discriminative Region Proposal Adversarial Networks for High-Quality Image-to-Image Translation\nDSH-GAN - Deep Semantic Hashing with Generative Adversarial Networks\nDSP-GAN - Depth Structure Preserving Scene Image Generation\nDTLC-GAN - Generative Adversarial Image Synthesis with Decision Tree Latent Controller\nDTN - Unsupervised Cross-Domain Image Generation\nDTR-GAN - DTR-GAN: Dilated Temporal Relational Adversarial Network for Video Summarization\nDualGAN - DualGAN: Unsupervised Dual Learning for Image-to-Image Translation\nDualing GAN - Dualing GANs\nDVGAN - Human Motion Modeling using DVGANs\nDynamics Transfer GAN - Dynamics Transfer GAN: Generating Video by Transferring Arbitrary Temporal Dynamics from a Source Video to a Single Target Image\nE-GAN - Evolutionary Generative Adversarial Networks\nEAR - Generative Model for Heterogeneous Inference\nEBGAN - Energy-based Generative Adversarial Network\necGAN - eCommerceGAN : A Generative Adversarial Network for E-commerce\nED\/\/GAN - Stabilizing Training of Generative Adversarial Networks through Regularization\nEditable GAN - Editable Generative Adversarial Networks: Generating and Editing Faces Simultaneously\nEGAN - Enhanced Experience Replay Generation for Efficient Reinforcement Learning\nEL-GAN - EL-GAN: Embedding Loss Driven Generative Adversarial Networks for Lane Detection\nELEGANT - ELEGANT: Exchanging Latent Encodings with GAN for Transferring Multiple Face Attributes\nEnergyWGAN - Energy-relaxed Wassertein GANs (EnergyWGAN): Towards More Stable and High Resolution Image Generation\nESRGAN - ESRGAN: Enhanced Super-Resolution Generative Adversarial Networks\nExGAN - Eye In-Painting with Exemplar Generative Adversarial Networks\nExposureGAN - Exposure: A White-Box Photo Post-Processing Framework (github)\nExprGAN - ExprGAN: Facial Expression Editing with Controllable Expression Intensity\nf-CLSWGAN - Feature Generating Networks for Zero-Shot Learning\nf-GAN - f-GAN: Training Generative Neural Samplers using Variational Divergence Minimization\nFairGAN - FairGAN: Fairness-aware Generative Adversarial Networks\nFairness GAN - Fairness GAN\nFakeGAN - Detecting Deceptive Reviews using Generative Adversarial Networks\nFBGAN - Feedback GAN (FBGAN) for DNA: a Novel Feedback-Loop Architecture for Optimizing Protein Functions\nFBGAN - Featurized Bidirectional GAN: Adversarial Defense via Adversarially Learned Semantic Inference\nFC-GAN - Fast-converging Conditional Generative Adversarial Networks for Image Synthesis\nFF-GAN - Towards Large-Pose Face Frontalization in the Wild\nFGGAN - Adversarial Learning for Fine-grained Image Search\nFictitious GAN - Fictitious GAN: Training GANs with Historical Models\nFIGAN - Frame Interpolation with Multi-Scale Deep Loss Functions and Generative Adversarial Networks\nFila-GAN - Synthesizing Filamentary Structured Images with GANs\nFirst Order GAN  - First Order Generative Adversarial Networks  (github)\nFisher GAN - Fisher GAN\nFlow-GAN - Flow-GAN: Bridging implicit and prescribed learning in generative models\nFrankenGAN - rankenGAN: Guided Detail Synthesis for Building Mass-Models Using Style-Synchonized GANs\nFSEGAN - Exploring Speech Enhancement with Generative Adversarial Networks for Robust Speech Recognition\nFTGAN - Hierarchical Video Generation from Orthogonal Information: Optical Flow and Texture\nFusedGAN - Semi-supervised FusedGAN for Conditional Image Generation\nFusionGAN - Learning to Fuse Music Genres with Generative Adversarial Dual Learning\nFusionGAN - Generating a Fusion Image: One's Identity and Another's Shape\nG2-GAN - Geometry Guided Adversarial Facial Expression Synthesis\nGAAN - Generative Adversarial Autoencoder Networks\nGAF - Generative Adversarial Forests for Better Conditioned Adversarial Learning\nGAGAN - GAGAN: Geometry-Aware Generative Adverserial Networks\nGAIA - Generative adversarial interpolative autoencoding: adversarial training on latent space interpolations encourage convex latent distributions\nGAIN  - GAIN: Missing Data Imputation using Generative Adversarial Nets\nGAMN - Generative Adversarial Mapping Networks\nGAN - Generative Adversarial Networks (github)\nGAN Lab - GAN Lab: Understanding Complex Deep Generative Models using Interactive Visual Experimentation\nGAN Q-learning - GAN Q-learning\nGAN-AD - Anomaly Detection with Generative Adversarial Networks for Multivariate Time Series\nGAN-ATV - A Novel Approach to Artistic Textual Visualization via GAN\nGAN-CLS - Generative Adversarial Text to Image Synthesis (github)\nGAN-RS - Towards Qualitative Advancement of Underwater Machine Vision with Generative Adversarial Networks\nGAN-SD - Virtual-Taobao: Virtualizing Real-world Online Retail Environment for Reinforcement Learning\nGAN-sep - GANs for Biological Image Synthesis (github)\nGAN-VFS - Generative Adversarial Network-based Synthesis of Visible Faces from Polarimetric Thermal Faces\nGAN-Word2Vec - Adversarial Training of Word2Vec for Basket Completion\nGANAX - GANAX: A Unified MIMD-SIMD Acceleration for Generative Adversarial Networks\nGANCS - Deep Generative Adversarial Networks for Compressed Sensing Automates MRI\nGANDI - Guiding the search in continuous state-action spaces by learning an action sampling distribution from off-target samples\nGANG - GANGs: Generative Adversarial Network Games\nGANG - Beyond Local Nash Equilibria for Adversarial Networks\nGANosaic - GANosaic: Mosaic Creation with Generative Texture Manifolds\nGANVO - GANVO: Unsupervised Deep Monocular Visual Odometry and Depth Estimation with Generative Adversarial Networks\nGAP - Context-Aware Generative Adversarial Privacy\nGAP - Generative Adversarial Privacy\nGATS - Sample-Efficient Deep RL with Generative Adversarial Tree Search\nGAWWN - Learning What and Where to Draw (github)\nGC-GAN - Geometry-Contrastive Generative Adversarial Network for Facial Expression Synthesis\nGcGAN - Geometry-Consistent Adversarial Networks for One-Sided Unsupervised Domain Mapping\nGeneGAN - GeneGAN: Learning Object Transfiguration and Attribute Subspace from Unpaired Data (github)\nGeoGAN - Generating Instance Segmentation Annotation by Geometry-guided GAN \nGeometric GAN - Geometric GAN\nGIN - Generative Invertible Networks (GIN): Pathophysiology-Interpretable Feature Mapping and Virtual Patient Generation\nGLCA-GAN - Global and Local Consistent Age Generative Adversarial Networks \nGM-GAN - Gaussian Mixture Generative Adversarial Networks for Diverse Datasets, and the Unsupervised Clustering of Images\nGMAN - Generative Multi-Adversarial Networks\nGMM-GAN - Towards Understanding the Dynamics of Generative Adversarial Networks\nGoGAN - Gang of GANs: Generative Adversarial Networks with Maximum Margin Ranking\nGONet - GONet: A Semi-Supervised Deep Learning Approach For Traversability Estimation\nGP-GAN - GP-GAN: Towards Realistic High-Resolution Image Blending (github)\nGP-GAN - GP-GAN: Gender Preserving GAN for Synthesizing Faces from Landmarks\nGPU - A generative adversarial framework for positive-unlabeled classification\nGRAN - Generating images with recurrent adversarial networks (github)\nGraphical-GAN - Graphical Generative Adversarial Networks\nGraphSGAN - Semi-supervised Learning on Graphs with Generative Adversarial Nets\nGraspGAN - Using Simulation and Domain Adaptation to Improve Efficiency of Deep Robotic Grasping\nGT-GAN - Deep Graph Translation\nHAN - Chinese Typeface Transformation with Hierarchical Adversarial Network\nHAN - Bidirectional Learning for Robust Neural Networks\nHiGAN - Exploiting Images for Video Recognition with Hierarchical Generative Adversarial Networks\nHP-GAN - HP-GAN: Probabilistic 3D human motion prediction via GAN\nHR-DCGAN - High-Resolution Deep Convolutional Generative Adversarial Networks\nhredGAN - Multi-turn Dialogue Response Generation in an Adversarial Learning framework\nIAN - Neural Photo Editing with Introspective Adversarial Networks (github)\nIcGAN - Invertible Conditional GANs for image editing (github)\nID-CGAN - Image De-raining Using a Conditional Generative Adversarial Network\nIdCycleGAN - Face Translation between Images and Videos using Identity-aware CycleGAN\nIFcVAEGAN - Conditional Autoencoders with Adversarial Information Factorization\niGAN - Generative Visual Manipulation on the Natural Image Manifold (github)\nIGMM-GAN - Coupled IGMM-GANs for deep multimodal anomaly detection in human mobility data\nImproved GAN - Improved Techniques for Training GANs (github)\nIn2I - In2I : Unsupervised Multi-Image-to-Image Translation Using Generative Adversarial Networks\nInfoGAN - InfoGAN: Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets (github)\nIntroVAE - IntroVAE: Introspective Variational Autoencoders for Photographic Image Synthesis\nIR2VI - IR2VI: Enhanced Night Environmental Perception by Unsupervised Thermal Image Translation\nIRGAN - IRGAN: A Minimax Game for Unifying Generative and Discriminative Information Retrieval models\nIRGAN - Generative Adversarial Nets for Information Retrieval: Fundamentals and Advances\nISGAN - Invisible Steganography via Generative Adversarial Network\nISP-GPM - Inner Space Preserving Generative Pose Machine\nIterative-GAN - Two Birds with One Stone: Iteratively Learn Facial Attributes with GANs (github)\nIterGAN - IterGANs: Iterative GANs to Learn and Control 3D Object Transformation\nIVE-GAN - IVE-GAN: Invariant Encoding Generative Adversarial Networks\niVGAN - Towards an Understanding of Our World by GANing Videos in the Wild (github)\nIWGAN - On Unifying Deep Generative Models\nJointGAN - JointGAN: Multi-Domain Joint Distribution Learning with Generative Adversarial Nets\nJR-GAN - JR-GAN: Jacobian Regularization for Generative Adversarial Networks\nKBGAN - KBGAN: Adversarial Learning for Knowledge Graph Embeddings\nKGAN - KGAN: How to Break The Minimax Game in GAN\nl-GAN - Representation Learning and Adversarial Generation of 3D Point Clouds\nLAC-GAN - Grounded Language Understanding for Manipulation Instructions Using GAN-Based Classification\nLAGAN - Learning Particle Physics by Example: Location-Aware Generative Adversarial Networks for Physics Synthesis\nLAPGAN - Deep Generative Image Models using a Laplacian Pyramid of Adversarial Networks (github)\nLB-GAN - Load Balanced GANs for Multi-view Face Image Synthesis\nLBT - Learning Implicit Generative Models by Teaching Explicit Ones\nLCC-GAN - Adversarial Learning with Local Coordinate Coding\nLD-GAN - Linear Discriminant Generative Adversarial Networks\nLDAN - Label Denoising Adversarial Network (LDAN) for Inverse Lighting of Face Images\nLeakGAN - Long Text Generation via Adversarial Training with Leaked Information\nLeGAN - Likelihood Estimation for Generative Adversarial Networks\nLGAN - Global versus Localized Generative Adversarial Nets\nLipizzaner - Towards Distributed Coevolutionary GANs\nLR-GAN - LR-GAN: Layered Recursive Generative Adversarial Networks for Image Generation\nLS-GAN - Loss-Sensitive Generative Adversarial Networks on Lipschitz Densities\nLSGAN - Least Squares Generative Adversarial Networks\nM-AAE - Mask-aware Photorealistic Face Attribute Manipulation\nMAD-GAN - Multi-Agent Diverse Generative Adversarial Networks\nMAGAN - MAGAN: Margin Adaptation for Generative Adversarial Networks\nMAGAN - MAGAN: Aligning Biological Manifolds\nMalGAN - Generating Adversarial Malware Examples for Black-Box Attacks Based on GAN\nMaliGAN - Maximum-Likelihood Augmented Discrete Generative Adversarial Networks\nmanifold-WGAN - Manifold-valued Image Generation with Wasserstein Adversarial Networks\nMARTA-GAN - Deep Unsupervised Representation Learning for Remote Sensing Images\nMaskGAN - MaskGAN: Better Text Generation via Filling in the ______ \nMC-GAN - Multi-Content GAN for Few-Shot Font Style Transfer (github)\nMC-GAN - MC-GAN: Multi-conditional Generative Adversarial Network for Image Synthesis\nMcGAN - McGan: Mean and Covariance Feature Matching GAN\nMD-GAN - Learning to Generate Time-Lapse Videos Using Multi-Stage Dynamic Generative Adversarial Networks\nMDGAN - Mode Regularized Generative Adversarial Networks\nMedGAN - Generating Multi-label Discrete Electronic Health Records using Generative Adversarial Networks\nMedGAN - MedGAN: Medical Image Translation using GANs\nMEGAN - MEGAN: Mixture of Experts of Generative Adversarial Networks for Multimodal Image Generation\nMelanoGAN - MelanoGANs: High Resolution Skin Lesion Synthesis with GANs\nmemoryGAN - Memorization Precedes Generation: Learning Unsupervised GANs with Memory Networks\nMeRGAN - Memory Replay GANs: learning to generate images from new categories without forgetting\nMGAN - Precomputed Real-Time Texture Synthesis with Markovian Generative Adversarial Networks (github)\nMGGAN - Multi-Generator Generative Adversarial Nets\nMGGAN - MGGAN: Solving Mode Collapse using Manifold Guided Training\nMIL-GAN - Multimodal Storytelling via Generative Adversarial Imitation Learning\nMinLGAN - Anomaly Detection via Minimum Likelihood Generative Adversarial Networks\nMIX+GAN - Generalization and Equilibrium in Generative Adversarial Nets (GANs)\nMIXGAN - MIXGAN: Learning Concepts from Different Domains for Mixture Generation\nMLGAN - Metric Learning-based Generative Adversarial Network\nMMC-GAN - A Multimodal Classifier Generative Adversarial Network for Carry and Place Tasks from Ambiguous Language Instructions\nMMD-GAN - MMD GAN: Towards Deeper Understanding of Moment Matching Network (github)\nMMGAN - MMGAN: Manifold Matching Generative Adversarial Network for Generating Images\nMoCoGAN - MoCoGAN: Decomposing Motion and Content for Video Generation (github)\nModified GAN-CLS - Generate the corresponding Image from Text Description using Modified GAN-CLS Algorithm\nModularGAN - Modular Generative Adversarial Networks\nMolGAN - MolGAN: An implicit generative model for small molecular graphs\nMPM-GAN - Message Passing Multi-Agent GANs\nMS-GAN - Temporal Coherency based Criteria for Predicting Video Frames using Deep Multi-stage Generative Adversarial Networks\nMTGAN - MTGAN: Speaker Verification through Multitasking Triplet Generative Adversarial Networks\nMuseGAN - MuseGAN: Symbolic-domain Music Generation and Accompaniment with Multi-track Sequential Generative Adversarial Networks\nMV-BiGAN - Multi-view Generative Adversarial Networks\nN2RPP - N2RPP: An Adversarial Network to Rebuild Plantar Pressure for ACLD Patients\nNAN - Understanding Humans in Crowded Scenes: Deep Nested Adversarial Learning and A New Benchmark for Multi-Human Parsing\nNCE-GAN - Dihedral angle prediction using generative adversarial networks\nND-GAN - Novelty Detection with GAN\nNetGAN - NetGAN: Generating Graphs via Random Walks\nOCAN - One-Class Adversarial Nets for Fraud Detection\nOptionGAN - OptionGAN: Learning Joint Reward-Policy Options using Generative Adversarial Inverse Reinforcement Learning\nORGAN - Objective-Reinforced Generative Adversarial Networks (ORGAN) for Sequence Generation Models \nORGAN - 3D Reconstruction of Incomplete Archaeological Objects Using a Generative Adversary Network\nOT-GAN - Improving GANs Using Optimal Transport\nPacGAN - PacGAN: The power of two samples in generative adversarial networks\nPAN - Perceptual Adversarial Networks for Image-to-Image Transformation\nPassGAN - PassGAN: A Deep Learning Approach for Password Guessing\nPD-WGAN - Primal-Dual Wasserstein GAN\nPerceptual GAN - Perceptual Generative Adversarial Networks for Small Object Detection\nPGAN - Probabilistic Generative Adversarial Networks\nPGD-GAN - Solving Linear Inverse Problems Using GAN Priors: An Algorithm with Provable Guarantees\nPGGAN - Patch-Based Image Inpainting with Generative Adversarial Networks\nPIONEER - Pioneer Networks: Progressively Growing Generative Autoencoder\nPip-GAN - Pipeline Generative Adversarial Networks for Facial Images Generation with Multiple Attributes\npix2pix - Image-to-Image Translation with Conditional Adversarial Networks (github)\npix2pixHD - High-Resolution Image Synthesis and Semantic Manipulation with Conditional GANs (github)\nPixelGAN - PixelGAN Autoencoders\nPM-GAN - PM-GANs: Discriminative Representation Learning for Action Recognition Using Partial-modalities\nPN-GAN - Pose-Normalized Image Generation for Person Re-identification\nPOGAN - Perceptually Optimized Generative Adversarial Network for Single Image Dehazing\nPose-GAN - The Pose Knows: Video Forecasting by Generating Pose Futures\nPP-GAN - Privacy-Protective-GAN for Face De-identification\nPPAN - Privacy-Preserving Adversarial Networks\nPPGN - Plug & Play Generative Networks: Conditional Iterative Generation of Images in Latent Space\nPrGAN - 3D Shape Induction from 2D Views of Multiple Objects\nProGanSR - A Fully Progressive Approach to Single-Image Super-Resolution\nProgressive GAN - Progressive Growing of GANs for Improved Quality, Stability, and Variation (github)\nPS-GAN - Pedestrian-Synthesis-GAN: Generating Pedestrian Data in Real Scene and Beyond\nPSGAN - Learning Texture Manifolds with the Periodic Spatial GAN\nPSGAN - PSGAN: A Generative Adversarial Network for Remote Sensing Image Pan-Sharpening\nPS\u00b2-GAN - High-Quality Facial Photo-Sketch Synthesis Using Multi-Adversarial Networks\nRadialGAN - RadialGAN: Leveraging multiple datasets to improve target-specific predictive models using Generative Adversarial Networks \nRaGAN - The relativistic discriminator: a key element missing from standard GAN\nRAN - RAN4IQA: Restorative Adversarial Nets for No-Reference Image Quality Assessment (github)\nRankGAN - Adversarial Ranking for Language Generation \nRCGAN - Real-valued (Medical) Time Series Generation with Recurrent Conditional GANs\nReConNN - Reconstruction of Simulation-Based Physical Field with Limited Samples by Reconstruction Neural Network\nRecycle-GAN - Recycle-GAN: Unsupervised Video Retargeting\nRefineGAN - Compressed Sensing MRI Reconstruction with Cyclic Loss in Generative Adversarial Networks\nReGAN - ReGAN: RE[LAX|BAR|INFORCE] based Sequence Generation using GANs (github)\nRegCGAN - Unpaired Multi-Domain Image Generation via Regularized Conditional GANs\nRenderGAN - RenderGAN: Generating Realistic Labeled Data\nResembled GAN - Resembled Generative Adversarial Networks: Two Domains with Similar Attributes\nResGAN - Generative Adversarial Network based on Resnet for Conditional Image Restoration\nRNN-WGAN - Language Generation with Recurrent Generative Adversarial Networks without Pre-training (github)\nRoCGAN - Robust Conditional Generative Adversarial Networks\nRPGAN - Stabilizing GAN Training with Multiple Random Projections (github)\nRTT-GAN - Recurrent Topic-Transition GAN for Visual Paragraph Generation\nRWGAN - Relaxed Wasserstein with Applications to GANs\nSAD-GAN - SAD-GAN: Synthetic Autonomous Driving using Generative Adversarial Networks\nSAGA - Generative Adversarial Learning for Spectrum Sensing\nSAGAN - Self-Attention Generative Adversarial Networks\nSalGAN - SalGAN: Visual Saliency Prediction with Generative Adversarial Networks (github)\nSAM - Sample-Efficient Imitation Learning via Generative Adversarial Nets\nsAOG - Deep Structured Generative Models\nSAR-GAN - Generating High Quality Visible Images from SAR Images Using CNNs\nSBADA-GAN - From source to target and back: symmetric bi-directional adaptive GAN\nScarGAN - ScarGAN: Chained Generative Adversarial Networks to Simulate Pathological Tissue on Cardiovascular MR Scans\nSCH-GAN - SCH-GAN: Semi-supervised Cross-modal Hashing by Generative Adversarial Network \nSD-GAN - Semantically Decomposing the Latent Spaces of Generative Adversarial Networks\nSdf-GAN - Sdf-GAN: Semi-supervised Depth Fusion with Multi-scale Adversarial Networks\nSEGAN - SEGAN: Speech Enhancement Generative Adversarial Network\nSeGAN - SeGAN: Segmenting and Generating the Invisible\nSegAN - SegAN: Adversarial Network with Multi-scale L1 Loss for Medical Image Segmentation\nSem-GAN - Sem-GAN: Semantically-Consistent Image-to-Image Translation\nSeqGAN - SeqGAN: Sequence Generative Adversarial Nets with Policy Gradient (github)\nSeUDA - Semantic-Aware Generative Adversarial Nets for Unsupervised Domain Adaptation in Chest X-ray Segmentation\nSG-GAN - Semantic-aware Grad-GAN for Virtual-to-Real Urban Scene Adaption (github)\nSG-GAN - Sparsely Grouped Multi-task Generative Adversarial Networks for Facial Attribute Manipulation\nSGAN - Texture Synthesis with Spatial Generative Adversarial Networks\nSGAN - Stacked Generative Adversarial Networks (github)\nSGAN - Steganographic Generative Adversarial Networks\nSGAN - SGAN: An Alternative Training of Generative Adversarial Networks\nSGAN - CT Image Enhancement Using Stacked Generative Adversarial Networks and Transfer Learning for Lesion Segmentation Improvement\nsGAN  - Generative Adversarial Training for MRA Image Synthesis Using Multi-Contrast MRI\nSiftingGAN - SiftingGAN: Generating and Sifting Labeled Samples to Improve the Remote Sensing Image Scene Classification Baseline in vitro\nSiGAN - SiGAN: Siamese Generative Adversarial Network for Identity-Preserving Face Hallucination\nSimGAN - Learning from Simulated and Unsupervised Images through Adversarial Training\nSisGAN - Semantic Image Synthesis via Adversarial Learning\nSketcher-Refiner GAN - Learning Myelin Content in Multiple Sclerosis from Multimodal MRI through Adversarial Training\nSketchGAN - Adversarial Training For Sketch Retrieval\nSketchyGAN - SketchyGAN: Towards Diverse and Realistic Sketch to Image Synthesis\nSkip-Thought GAN - Generating Text through Adversarial Training using Skip-Thought Vectors\nSL-GAN - Semi-Latent GAN: Learning to generate and modify facial images from attributes\nSLSR - Sparse Label Smoothing for Semi-supervised Person Re-Identification\nSN-DCGAN - Generative Adversarial Networks for Unsupervised Object Co-localization\nSN-GAN - Spectral Normalization for Generative Adversarial Networks (github)\nSN-PatchGAN - Free-Form Image Inpainting with Gated Convolution\nSobolev GAN - Sobolev GAN\nSocial GAN - Social GAN: Socially Acceptable Trajectories with Generative Adversarial Networks\nSoftmax GAN - Softmax GAN\nSoPhie - SoPhie: An Attentive GAN for Predicting Paths Compliant to Social and Physical Constraints\nspeech-driven animation GAN - End-to-End Speech-Driven Facial Animation with Temporal GANs\nSpike-GAN - Synthesizing realistic neural population activity patterns using Generative Adversarial Networks\nSplitting GAN - Class-Splitting Generative Adversarial Networks\nSR-CNN-VAE-GAN - Semi-Recurrent CNN-based VAE-GAN for Sequential Data Generation (github)\nSRGAN - Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network\nSRPGAN - SRPGAN: Perceptual Generative Adversarial Network for Single Image Super Resolution\nSS-GAN - Semi-supervised Conditional GANs\nss-InfoGAN - Guiding InfoGAN with Semi-Supervision\nSSGAN - SSGAN: Secure Steganography Based on Generative Adversarial Networks\nSSL-GAN - Semi-Supervised Learning with Context-Conditional Generative Adversarial Networks\nST-CGAN - Stacked Conditional Generative Adversarial Networks for Jointly Learning Shadow Detection and Shadow Removal\nST-GAN - Style Transfer Generative Adversarial Networks: Learning to Play Chess Differently\nST-GAN - ST-GAN: Spatial Transformer Generative Adversarial Networks for Image Compositing\nStackGAN - StackGAN: Text to Photo-realistic Image Synthesis with Stacked Generative Adversarial Networks (github)\nStainGAN - StainGAN: Stain Style Transfer for Digital Histological Images\nStarGAN - StarGAN: Unified Generative Adversarial Networks for Multi-Domain Image-to-Image Translation (github)\nStarGAN-VC - StarGAN-VC: Non-parallel many-to-many voice conversion with star generative adversarial networks \nSteinGAN - Learning Deep Energy Models: Contrastive Divergence vs. Amortized MLE\nStepGAN - Improving Conditional Sequence Generative Adversarial Networks by Stepwise Evaluation\nSuper-FAN - Super-FAN: Integrated facial landmark localization and super-resolution of real-world low resolution faces in arbitrary poses with GANs\nSVSGAN - SVSGAN: Singing Voice Separation via Generative Adversarial Network\nSWGAN - Solving Approximate Wasserstein GANs to Stationarity\nSyncGAN - SyncGAN: Synchronize the Latent Space of Cross-modal Generative Adversarial Networks\nS^2GAN - Generative Image Modeling using Style and Structure Adversarial Networks\nT2Net - T2Net: Synthetic-to-Realistic Translation for Solving Single-Image Depth Estimation Tasks\ntable-GAN - Data Synthesis based on Generative Adversarial Networks\nTAC-GAN - TAC-GAN - Text Conditioned Auxiliary Classifier Generative Adversarial Network (github)\nTAN - Outline Colorization through Tandem Adversarial Networks\ntcGAN - Cross-modal Hallucination for Few-shot Fine-grained Recognition\nTD-GAN - Task Driven Generative Modeling for Unsupervised Domain Adaptation: Application to X-ray Image Segmentation\ntempCycleGAN - Improving Surgical Training Phantoms by Hyperrealism: Deep Unpaired Image-to-Image Translation from Real Surgeries\ntempoGAN - tempoGAN: A Temporally Coherent, Volumetric GAN for Super-resolution Fluid Flow\nTequilaGAN - TequilaGAN: How to easily identify GAN samples\nText2Shape - Text2Shape: Generating Shapes from Natural Language by Learning Joint Embeddings\ntextGAN - Generating Text via Adversarial Training\nTextureGAN - TextureGAN: Controlling Deep Image Synthesis with Texture Patches\nTGAN - Temporal Generative Adversarial Nets\nTGAN - Tensorizing Generative Adversarial Nets\nTGAN - Tensor-Generative Adversarial Network with Two-dimensional Sparse Coding: Application to Real-time Indoor Localization\nTGANs-C - To Create What You Tell: Generating Videos from Captions\ntiny-GAN - Analysis of Nonautonomous Adversarial Systems\nTP-GAN - Beyond Face Rotation: Global and Local Perception GAN for Photorealistic and Identity Preserving Frontal View Synthesis\nTreeGAN - TreeGAN: Syntax-Aware Sequence Generation with Generative Adversarial Networks\nTriple-GAN - Triple Generative Adversarial Nets\ntripletGAN - TripletGAN: Training Generative Model with Triplet Loss\nTV-GAN - TV-GAN: Generative Adversarial Network Based Thermal to Visible Face Recognition\nTwin-GAN - Twin-GAN -- Unpaired Cross-Domain Image Translation with Weight-Sharing GANs\nUGACH - Unsupervised Generative Adversarial Cross-modal Hashing\nUGAN - Enhancing Underwater Imagery using Generative Adversarial Networks\nUnim2im - Unsupervised Image-to-Image Translation with Generative Adversarial Networks  (github)\nUNIT - Unsupervised Image-to-image Translation Networks (github)\nUnrolled GAN - Unrolled Generative Adversarial Networks (github)\nUT-SCA-GAN - Spatial Image Steganography Based on Generative Adversarial Network\nUV-GAN - UV-GAN: Adversarial Facial UV Map Completion for Pose-invariant Face Recognition\nVA-GAN - Visual Feature Attribution using Wasserstein GANs\nVAC+GAN  - Versatile Auxiliary Classifier with Generative Adversarial Network (VAC+GAN), Multi Class Scenarios\nVAE-GAN - Autoencoding beyond pixels using a learned similarity metric\nVariGAN - Multi-View Image Generation from a Single-View\nVAW-GAN - Voice Conversion from Unaligned Corpora using Variational Autoencoding Wasserstein Generative Adversarial Networks\nVEEGAN - VEEGAN: Reducing Mode Collapse in GANs using Implicit Variational Learning (github)\nVGAN - Generating Videos with Scene Dynamics (github)\nVGAN - Generative Adversarial Networks as Variational Training of Energy Based Models (github)\nVGAN - Text Generation Based on Generative Adversarial Nets with Latent Variable\nViGAN - Image Generation and Editing with Variational Info Generative Adversarial Networks\nVIGAN - VIGAN: Missing View Imputation with Generative Adversarial Networks\nVoiceGAN - Voice Impersonation using Generative Adversarial Networks \nVOS-GAN - VOS-GAN: Adversarial Learning of Visual-Temporal Dynamics for Unsupervised Dense Prediction in Videos\nVRAL - Variance Regularizing Adversarial Learning\nWaterGAN - WaterGAN: Unsupervised Generative Network to Enable Real-time Color Correction of Monocular Underwater Images\nWaveGAN - Synthesizing Audio with Generative Adversarial Networks \nWaveletGLCA-GAN - Global and Local Consistent Wavelet-domain Age Synthesis\nweGAN - Generative Adversarial Nets for Multiple Text Corpora\nWGAN - Wasserstein GAN (github)\nWGAN-CLS - Text to Image Synthesis Using Generative Adversarial Networks\nWGAN-GP - Improved Training of Wasserstein GANs (github)\nWGAN-L1 - Subsampled Turbulence Removal Network\nWS-GAN - Weakly Supervised Generative Adversarial Networks for 3D Reconstruction \nX-GANs - X-GANs: Image Reconstruction Made Easy for Extreme Cases\nXGAN - XGAN: Unsupervised Image-to-Image Translation for many-to-many Mappings\nZipNet-GAN - ZipNet-GAN: Inferring Fine-grained Mobile Traffic Patterns via a Generative Adversarial Neural Network\n\u03b1-GAN - Variational Approaches for Auto-Encoding Generative Adversarial Networks (github)\n\u03b2-GAN - Annealed Generative Adversarial Networks\n\u0394-GAN - Triangle Generative Adversarial Networks\n\n","177":"Fast Style Transfer in TensorFlow\nAdd styles from famous paintings to any photo in a fraction of a second! You can even style videos!\n\n\n\n\n\n\nIt takes 100ms on a 2015 Titan X to style the MIT Stata Center (1024\u00d7680) like Udnie, by Francis Picabia.\n\nOur implementation is based off of a combination of Gatys' A Neural Algorithm of Artistic Style, Johnson's Perceptual Losses for Real-Time Style Transfer and Super-Resolution, and Ulyanov's Instance Normalization.\nSponsorship\nPlease consider sponsoring my work on this project!\nLicense\nCopyright (c) 2016 Logan Engstrom. Contact me for commercial use (or rather any use that is not academic research) (email: engstrom at my university's domain dot edu). Free for research use, as long as proper attribution is given and this copyright notice is retained.\nVideo Stylization\nHere we transformed every frame in a video, then combined the results. Click to go to the full demo on YouTube! The style here is Udnie, as above.\n\n\n\n\n\nSee how to generate these videos here!\nImage Stylization\nWe added styles from various paintings to a photo of Chicago. Click on thumbnails to see full applied style images.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImplementation Details\nOur implementation uses TensorFlow to train a fast style transfer network. We use roughly the same transformation network as described in Johnson, except that batch normalization is replaced with Ulyanov's instance normalization, and the scaling\/offset of the output tanh layer is slightly different. We use a loss function close to the one described in Gatys, using VGG19 instead of VGG16 and typically using \"shallower\" layers than in Johnson's implementation (e.g. we use relu1_1 rather than relu1_2). Empirically, this results in larger scale style features in transformations.\nVitual Environment Setup (Anaconda) - Windows\/Linux\nTested on\n\n\n\nSpec\n\n\n\n\n\nOperating System\nWindows 10 Home\n\n\nGPU\nNvidia GTX 2080 TI\n\n\nCUDA Version\n11.0\n\n\nDriver Version\n445.75\n\n\n\nStep 1\uff1aInstall Anaconda\nhttps:\/\/docs.anaconda.com\/anaconda\/install\/\nStep 2\uff1aBuild a virtual environment\nRun the following commands in sequence in Anaconda Prompt:\nconda create -n tf-gpu tensorflow-gpu=2.1.0\nconda activate tf-gpu\nconda install jupyterlab\njupyter lab\n\nRun the following command in the notebook or just conda install the package:\n!pip install moviepy==1.0.2\n\nFollow the commands below to use fast-style-transfer\nDocumentation\nTraining Style Transfer Networks\nUse style.py to train a new style transfer network. Run python style.py to view all the possible parameters. Training takes 4-6 hours on a Maxwell Titan X. More detailed documentation here. Before you run this, you should run setup.sh. Example usage:\npython style.py --style path\/to\/style\/img.jpg \\\n  --checkpoint-dir checkpoint\/path \\\n  --test path\/to\/test\/img.jpg \\\n  --test-dir path\/to\/test\/dir \\\n  --content-weight 1.5e1 \\\n  --checkpoint-iterations 1000 \\\n  --batch-size 20\n\nEvaluating Style Transfer Networks\nUse evaluate.py to evaluate a style transfer network. Run python evaluate.py to view all the possible parameters. Evaluation takes 100 ms per frame (when batch size is 1) on a Maxwell Titan X. More detailed documentation here. Takes several seconds per frame on a CPU. Models for evaluation are located here. Example usage:\npython evaluate.py --checkpoint path\/to\/style\/model.ckpt \\\n  --in-path dir\/of\/test\/imgs\/ \\\n  --out-path dir\/for\/results\/\n\nStylizing Video\nUse transform_video.py to transfer style into a video. Run python transform_video.py to view all the possible parameters. Requires ffmpeg. More detailed documentation here. Example usage:\npython transform_video.py --in-path path\/to\/input\/vid.mp4 \\\n  --checkpoint path\/to\/style\/model.ckpt \\\n  --out-path out\/video.mp4 \\\n  --device \/gpu:0 \\\n  --batch-size 4\n\nRequirements\nYou will need the following to run the above:\n\nTensorFlow 0.11.0\nPython 2.7.9, Pillow 3.4.2, scipy 0.18.1, numpy 1.11.2\nIf you want to train (and don't want to wait for 4 months):\n\nA decent GPU\nAll the required NVIDIA software to run TF on a GPU (cuda, etc)\n\n\nffmpeg 3.1.3 if you want to stylize video\n\nCitation\n  @misc{engstrom2016faststyletransfer,\n    author = {Logan Engstrom},\n    title = {Fast Style Transfer},\n    year = {2016},\n    howpublished = {\\url{https:\/\/github.com\/lengstrom\/fast-style-transfer\/}},\n    note = {commit xxxxxxx}\n  }\n\nAttributions\/Thanks\n\nThis project could not have happened without the advice (and GPU access) given by Anish Athalye.\n\nThe project also borrowed some code from Anish's Neural Style\n\n\nSome readme\/docs formatting was borrowed from Justin Johnson's Fast Neural Style\nThe image of the Stata Center at the very beginning of the README was taken by Juan Paulo\n\nRelated Work\n\nMichael Ramos ported this network to use CoreML on iOS\n\n","178":"\nNeural Doodle\n\nUse a deep neural network to borrow the skills of real artists and turn your two-bit doodles into masterpieces! This project is an implementation of Semantic Style Transfer (Champandard, 2016), based on the Neural Patches algorithm (Li, 2016). Read more about the motivation in this in-depth article and watch this workflow video for inspiration.\nThe doodle.py script generates a new image by using one, two, three or four images as inputs depending what you're trying to do: the original style and its annotation, and a target content image (optional) with its annotation (a.k.a. your doodle). The algorithm extracts annotated patches from the style image, and incrementally transfers them over to the target image based on how closely they match.\nNOTE: Making a #NeuralDoodle is a skill. The parameters in the script were adjusted to work well by default and with the examples below. For new images, you may need to adjust values and modify on your input data too. It takes practice, but you can reach almost photo-realistic results if you iterate! (Ask for advice here or see examples.)\n\nExamples & Usage\nInstallation\nTroubleshooting\nFrequent Questions\n\nIMPORTANT: This project is possible thanks to the nucl.ai Conference on Creative AI, July 18-20. Join us in Vienna!\n\n \n \n\n\n\n1. Examples & Usage\nThe main script is called doodle.py, which you can run with Python 3.4+ (see setup below).  The --device argument that lets you specify which GPU or CPU to use. For the samples above, here are the performance results:\n\nGPU Rendering \u2014 Assuming you have CUDA setup and enough on-board RAM, the process should complete in 3 to 8 minutes, even with twice the iteration count.\nCPU Rendering \u2014 This will take hours and hours, even up to 12h on older hardware. To match quality it'd take twice the time. Do multiple runs in parallel!\n\nThe default is to use cpu, if you have NVIDIA card setup with CUDA already try gpu0. On the CPU, you can also set environment variable to OMP_NUM_THREADS=4, but we've found the speed improvements to be minimal.\n\n1.a) Image Analogy\nThe algorithm is built for style transfer, but can also generate image analogies that we call a #NeuralDoodle; use the hashtag if you post your images!  Example files are included in the #\/samples\/ folder. Execute with these commands:\n# Synthesize a coastline as if painted by Monet. This uses \"*_sem.png\" masks for both images.\npython3 doodle.py --style samples\/Monet.jpg --output samples\/Coastline.png \\\n                  --device=cpu --iterations=40\n\n# Generate a scene around a lake in the style of a Renoir painting.\npython3 doodle.py --style samples\/Renoir.jpg --output samples\/Landscape.png \\\n                  --device=gpu0 --iterations=80\nNotice the Renoir results look a little better than the Monet. Some rotational variations of the source image could improve the quality of the arch outline in particular.\n\n1.b) Style Transfer\nIf you want to transfer the style given a source style with annotations, and a target content image with annotations, you can use the following command lines.  In all cases, the semantic map is loaded and used if it's found under the *_sem.png filename that matches the input file.\n# Synthesize a portrait of Seth Johnson like a Gogh portrait. This uses \"*_sem.png\" masks for both images.\npython3 doodle.py --style samples\/Gogh.jpg --content samples\/Seth.png \\\n                  --output SethAsGogh.png --device=cpu --phases=4 --iterations=40\n\n# Generate what a photo of Vincent van Gogh would look like, using Seth's portrait as reference.\npython3 doodle.py --style samples\/Seth.jpg --content samples\/Gogh.png \\\n                  --output GoghAsSeth.png --device=gpu0 --phases=4 --iterations=80\nTo perform regular style transfer without semantic annotations, simply delete or rename the files with the semantic maps.  The photo is originally by Seth Johnson, and the concept for this style transfer by Kyle McDonald.\n\n\n1.c) Texture Synthesis\nFor synthesizing bitmap textures, you only need an input style without anotations and without target output.  In this case, you simply specify one input style image and the output file as follows:\n# First synthesis uses a darker noise pattern as seed.\npython3 doodle.py --style samples\/Wall.jpg --output Wall.png\\\n                  --seed=noise --seed-range=0:128 --iterations=50 --phases=3\n\n# Second synthesis uses a lighter noise pattern as seed.\npython3 doodle.py --style samples\/Wall.jpg --output Wall.png\\\n                  --seed=noise --seed-range=192:255 --iterations=50 --phases=3\nYou can also control the output resolution using --output-size=512x512 parameter\u2014which also depends on the memory you have available. By default the size will be the same as the style image.\n\n\n1.d) Script Parameters\nYou can configure the algorithm using the following parameters. Type python3 doodle.py --help for the full list of options, or see the source code.\n\n--style-weight=50.0 \u2014 Weight of style relative to content.\n--style-layers=3_1,4_1 \u2014 The layers to match style patches.\n--semantic-weight=1.0 \u2014 Global weight of semantics vs. features.\n--smoothness=1.0 \u2014 Weight of image smoothing scheme.\n--seed=noise \u2014 Seed image path, \"noise\" or \"content\".\n--print-every=10 \u2014 How often to log statistics to stdout.\n--save-every=10 \u2014 How frequently to save PNG into frames.\n\n\n2. Installation & Setup\n\n\n2.a) Using Docker Image (recommended)\nThe easiest way to get up-and-running is to install Docker. Then, you should be able to downloand and run the pre-built image using the docker command line tool.  Find out more about the alexjc\/neural-doodle image on its Docker Hub page.\nThe easiest way to run the script from the docker image is to setup an easy access command called doodle. This will automatically:\n\nMount the frames folder from current directory into the instance for visualization.\nExpose the samples folder from the current directory so the script can access files!\n\nThis is how you can do it in your terminal console on OSX or Linux:\n# Setup the alias. Put this in your .bash_rc or .zshrc file so it's available at startup.\nalias doodle=\"docker run -v $(pwd)\/samples:\/nd\/samples -v $(pwd)\/frames:\/nd\/frames \\\n                         -it alexjc\/neural-doodle\"\n\n# Now run any of the examples above using this alias, without the `.py` extension.\ndoodle --help\nIf you want to run on your NVIDIA GPU, you can instead use the image alexjc\/neural-doodle:gpu which comes with CUDA and CUDNN pre-installed in the image.  See the scripts in docker\/*.sh for how to setup your host machine. (advanced)\n\n2.b) Manual Installation (optional)\nThis project requires Python 3.4+ and you'll also need numpy and scipy (numerical computing libraries) as well as python3-dev installed system-wide.  If you want more detailed instructions, follow these:\n\nLinux Installation of Lasagne (intermediate)\nMac OSX Installation of Lasagne (advanced)\nWindows Installation of Lasagne (expert)\n\nAfterward fetching the repository, you can run the following commands from your terminal to setup a local environment:\n# Create a local environment for Python 3.x to install dependencies here.\npython3 -m venv pyvenv --system-site-packages\n\n# If you're using bash, make this the active version of Python.\nsource pyvenv\/bin\/activate\n\n# Setup the required dependencies simply using the PIP module.\npython3 -m pip install --ignore-installed -r requirements.txt\nAfter this, you should have scikit-image, theano and lasagne installed in your virtual environment.  You'll also need to download this pre-trained neural network (VGG19, 80Mb) and put it in the same folder as the script to run. Once you're done you can just delete the #\/pyvenv\/ folder.\n\n\n3. Troubleshooting Problems\n\nIt's running out of GPU Ram, throwing MemoryError. Help!\nYou'll need a good NVIDIA card with CUDA to run this software on GPU, ideally 2Gb \/ 4Gb or better still, 8Gb to 12Gb for larger resolutions.  The code does work on CPU by default, so use that as fallback since you likely have more system RAM!\nTo improve memory consumption, you can also install NVIDIA's cudnn library version 3.0 or 4.0. This allows convolutional neural networks to run faster and save space in GPU RAM.\nFIX: Use --device=cpu to use main system memory.\n\nHow much GPU is being used? It doesn't seem very fast...\nFirst make sure CUDA is installed correctly and environment variables are set, then reinstall theano.  If everything is setup correctly, the GPU should be used regularly as the gradient calculations are offloaded. If you run NVIDIA's monitoring tool it looks something like this:\nThe third column is the utilitazition of compute resources, and the fourth column is the use of memory.  If memory is under-used you can increase resolution!  If compute is under allocated too you can try running multiple scripts in parallel!\nFIX: Run nvidia-smi dmon and check the sm column.\n\nCan't install or Unable to find pgen, not compiling formal grammar.\nThere's a Python extension compiler called Cython, and it's missing or inproperly installed. Try getting it directly from the system package manager rather than PIP.\nFIX: sudo apt-get install cython3\n\nNotImplementedError: AbstractConv2d theano optimization failed.\nThis happens when you're running without a GPU, and the CPU libraries were not found (e.g. libblas).  The neural network expressions cannot be evaluated by Theano and it's raising an exception.\nFIX: sudo apt-get install libblas-dev libopenblas-dev\n\nTypeError: max_pool_2d() got an unexpected keyword argument 'mode'\nYou need to install Lasagne and Theano directly from the versions specified in requirements.txt, rather than from the PIP versions.  These alternatives are older and don't have the required features.\nFIX: python3 -m pip install -r requirements.txt\n\nValueError: unknown locale: UTF-8\nIt seems your terminal is misconfigured and not compatible with the way Python treats locales. You may need to change this in your .bash_rc or other startup script. Alternatively, this command will fix it once for this shell instance.\nFIX: export LC_ALL=en_US.UTF-8\n\nERROR: The optimization diverged and NaNs were encountered.\nIt's possible there's a platform bug in the underlying libraries or compiler, which has been reported on MacOS El Capitan.  It's not clear how to fix it, but you can try to disable optimizations to prevent the bug. (See Issue #8.)\nFIX: Use --safe-mode flag to disable optimizations.\n\n4. Frequent Questions\n\nQ: When will this be possible in realtime? I want it as filter!\nRelated algorithms have shown this is possible in realtime\u2014if you're willing to accept slightly lower quality:\n\nTexture Networks: Feed-forward Synthesis of Textures and Stylized Images\nPerceptual Losses for Real-Time Style Transfer and Super-Resolution\nPrecomputed Real-Time Texture Synthesis with Markovian Generative Adversarial Networks\n\nThis project is not designed for real-time use, the focus is on quality.  The code in this repository is ideal for training realtime capable networks.\n\nQ: Is there an application for this? I want to download it!\nThere are many online services that provide basic style transfer with neural networks. We run @DeepForger, a Twitter & Facebook bot with web interface, that can take your requests too.  It takes time to make forgeries, so there's a queue... be patient!\n\n\n \n \n","179":"\n\n\n\nTFLearn: Deep learning library featuring a higher-level API for TensorFlow.\nTFlearn is a modular and transparent deep learning library built on top of Tensorflow.  It was designed to provide a higher-level API to TensorFlow in order to facilitate and speed-up experimentations, while remaining fully transparent and compatible with it.\nTFLearn features include:\n\nEasy-to-use and understand high-level API for implementing deep neural networks, with tutorial and examples.\nFast prototyping through highly modular built-in neural network layers, regularizers, optimizers, metrics...\nFull transparency over Tensorflow. All functions are built over tensors and can be used independently of TFLearn.\nPowerful helper functions to train any TensorFlow graph, with support of multiple inputs, outputs and optimizers.\nEasy and beautiful graph visualization, with details about weights, gradients, activations and more...\nEffortless device placement for using multiple CPU\/GPU.\n\nThe high-level API currently supports most of recent deep learning models, such as Convolutions, LSTM, BiRNN, BatchNorm, PReLU, Residual networks, Generative networks... In the future, TFLearn is also intended to stay up-to-date with latest deep learning techniques.\nNote: Latest TFLearn (v0.5) is only compatible with TensorFlow v2.0 and over.\nOverview\n# Classification\ntflearn.init_graph(num_cores=8, gpu_memory_fraction=0.5)\n\nnet = tflearn.input_data(shape=[None, 784])\nnet = tflearn.fully_connected(net, 64)\nnet = tflearn.dropout(net, 0.5)\nnet = tflearn.fully_connected(net, 10, activation='softmax')\nnet = tflearn.regression(net, optimizer='adam', loss='categorical_crossentropy')\n\nmodel = tflearn.DNN(net)\nmodel.fit(X, Y)\n# Sequence Generation\nnet = tflearn.input_data(shape=[None, 100, 5000])\nnet = tflearn.lstm(net, 64)\nnet = tflearn.dropout(net, 0.5)\nnet = tflearn.fully_connected(net, 5000, activation='softmax')\nnet = tflearn.regression(net, optimizer='adam', loss='categorical_crossentropy')\n\nmodel = tflearn.SequenceGenerator(net, dictionary=idx, seq_maxlen=100)\nmodel.fit(X, Y)\nmodel.generate(50, temperature=1.0)\nThere are many more examples available here.\nCompatibility\nTFLearn is based on the original tensorflow v1 graph API. When using TFLearn, make sure to import tensorflow that way:\nimport tflearn\nimport tensorflow.compat.v1 as tf\n\nInstallation\nTensorFlow Installation\nTFLearn requires Tensorflow (version 2.0+) to be installed.\nTo install TensorFlow, simply run:\npip install tensorflow\n\nor, with GPU-support:\npip install tensorflow-gpu\n\nFor more details see TensorFlow installation instructions\nTFLearn Installation\nTo install TFLearn, the easiest way is to run\nFor the bleeding edge version (recommended):\npip install git+https:\/\/github.com\/tflearn\/tflearn.git\nFor the latest stable version:\npip install tflearn\nOtherwise, you can also install from source by running (from source folder):\npython setup.py install\n\nFor more details, please see the Installation Guide.\n\nGetting Started\nSee Getting Started with TFLearn to learn about TFLearn basic functionalities or start browsing TFLearn Tutorials.\nExamples\nThere are many neural network implementation available, see Examples.\nDocumentation\nhttp:\/\/tflearn.org\/doc_index\nModel Visualization\nGraph\n\nLoss & Accuracy (multiple runs)\n\nLayers\n\nContributions\nThis is the first release of TFLearn, if you find any bug, please report it in the GitHub issues section.\nImprovements and requests for new features are more than welcome! Do not hesitate to twist and tweak TFLearn, and send pull-requests.\nFor more info: Contribute to TFLearn.\nLicense\nMIT License\n"},"top_code":{"0":"\n\nJavaScript\n91.3%\n","1":"\n\nJavaScript\n97.7%\n","2":"\n\nJavaScript\n95.0%\n","3":"\n\nJavaScript\n46.7%\n","4":"\n\nJavaScript\n100.0%\n","5":"\n\nJavaScript\n100.0%\n","6":"\n\nJavaScript\n46.4%\n","7":"\n\nJavaScript\n100.0%\n","8":"\n\nJavaScript\n98.3%\n","9":"\n\nJavaScript\n92.5%\n","10":"\n\nJavaScript\n55.2%\n","11":"\n\nJavaScript\n100.0%\n","12":"\n\nJavaScript\n99.2%\n","13":"\n\nJavaScript\n67.1%\n","14":"\n\nJavaScript\n65.3%\n","15":"\n\nJavaScript\n98.1%\n","16":"\n\nJavaScript\n69.9%\n","17":"\n\nJavaScript\n99.8%\n","18":"\n\nJavaScript\n66.5%\n","19":"\n\nJavaScript\n93.8%\n","20":"\n\nJavaScript\n57.2%\n","21":"\n\nJavaScript\n88.9%\n","22":"\n\nJavaScript\n61.7%\n","23":"\n\nJavaScript\n99.7%\n","24":"\n\nJavaScript\n100.0%\n","25":"\n\nJavaScript\n95.9%\n","26":"\n\nJavaScript\n57.4%\n","27":"\n\nJavaScript\n81.8%\n","28":"\n\nJavaScript\n87.2%\n","29":"\n\nJavaScript\n62.9%\n","30":"\n\nJavaScript\n69.8%\n","31":"\n\nJavaScript\n80.7%\n","32":"\n\nJavaScript\n100.0%\n","33":"\n\nJavaScript\n54.8%\n","34":"\n\nJavaScript\n46.0%\n","35":"\n\nJavaScript\n99.7%\n","36":"\n\nJavaScript\n94.7%\n","37":"\n\nJavaScript\n86.1%\n","38":"\n\nJavaScript\n100.0%\n","39":"\n\nJavaScript\n98.1%\n","40":"\n\nJavaScript\n16.3%\n","41":"\n\nJavaScript\n59.3%\n","42":"\n\nJavaScript\n37.8%\n","43":"\n\nJavaScript\n98.7%\n","44":"\n\nJavaScript\n82.6%\n","45":"\n\nJavaScript\n71.9%\n","46":"\n\nJavaScript\n96.5%\n","47":"\n\nJavaScript\n88.0%\n","48":"\n\nJavaScript\n98.4%\n","49":"\n\nJavaScript\n42.6%\n","50":"\n\nJavaScript\n100.0%\n","51":"\n\nJavaScript\n98.4%\n","52":"\n\nJavaScript\n77.2%\n","53":"\n\nJavaScript\n88.5%\n","54":"\n\nJavaScript\n93.2%\n","55":"\n\nJavaScript\n100.0%\n","56":"\n\nJavaScript\n81.8%\n","57":"\n\nJavaScript\n97.0%\n","58":"\n\nJavaScript\n68.5%\n","59":"\n\nJavaScript\n83.6%\n","60":"\n\nJavaScript\n100.0%\n","61":"\n\nJavaScript\n83.9%\n","62":"\n\nJavaScript\n100.0%\n","63":"\n\nJavaScript\n100.0%\n","64":"\n\nJavaScript\n99.6%\n","65":"\n\nJavaScript\n95.1%\n","66":"\n\nJavaScript\n54.3%\n","67":"\n\nJavaScript\n93.2%\n","68":"\n\nJavaScript\n99.7%\n","69":"\n\nJavaScript\n92.6%\n","70":"\n\nJavaScript\n59.9%\n","71":"\n\nJavaScript\n99.7%\n","72":"\n\nJavaScript\n96.7%\n","73":"\n\nJavaScript\n100.0%\n","74":"\n\nJavaScript\n82.7%\n","75":"\n\nJavaScript\n77.3%\n","76":"\n\nJavaScript\n55.9%\n","77":"\n\nJavaScript\n99.0%\n","78":"\n\nJavaScript\n93.6%\n","79":"\n\nJavaScript\n100.0%\n","80":"\n\nJavaScript\n56.0%\n","81":"\n\nJavaScript\n96.5%\n","82":"\n\nJavaScript\n60.2%\n","83":"\n\nJavaScript\n77.2%\n","84":"\n\nJavaScript\n80.6%\n","85":"\n\nJavaScript\n95.6%\n","86":"\n\nJavaScript\n74.0%\n","87":"\n\nJavaScript\n94.9%\n","88":"\n\nJavaScript\n94.1%\n","89":"\n\nJavaScript\n76.9%\n","90":"\n\nPython\n82.0%\n","91":"\n\nPython\n99.9%\n","92":"\n\nPython\n90.3%\n","93":"\n\nPython\n99.9%\n","94":"\n\nPython\n54.6%\n","95":"\n\nPython\n91.0%\n","96":"\n\nPython\n100.0%\n","97":"\n\nPython\n87.0%\n","98":"\n\nPython\n66.8%\n","99":"\n\nPython\n48.3%\n","100":"\n\nPython\n99.0%\n","101":"\n\nPython\n77.3%\n","102":"\n\nPython\n83.0%\n","103":"\n\nPython\n62.3%\n","104":"\n\nPython\n95.7%\n","105":"\n\nPython\n88.7%\n","106":"\n\nPython\n100.0%\n","107":"\n\nPython\n99.9%\n","108":"\n\nPython\n96.4%\n","109":"\n\nPython\n100.0%\n","110":"\n\nPython\n100.0%\n","111":"\n\nPython\n99.9%\n","112":"\n\nPython\n100.0%\n","113":"\n\nPython\n91.5%\n","114":"\n\nPython\n90.5%\n","115":"\n\nPython\n90.9%\n","116":"\n\nPython\n49.8%\n","117":"\n\nPython\n100.0%\n","118":"\n\nPython\n98.8%\n","119":"\n\nPython\n94.6%\n","120":"\n\nPython\n62.9%\n","121":"\n\nPython\n93.3%\n","122":"\n\nPython\n58.0%\n","123":"\n\nPython\n95.3%\n","124":"\n\nPython\n100.0%\n","125":"\n\nPython\n99.8%\n","126":"\n\nPython\n98.1%\n","127":"\n\nPython\n100.0%\n","128":"\n\nPython\n99.7%\n","129":"\n\nPython\n92.8%\n","130":"\n\nPython\n99.9%\n","131":"\n\nPython\n99.2%\n","132":"\n\nPython\n99.4%\n","133":"\n\nPython\n99.2%\n","134":"\n\nPython\n65.3%\n","135":"\n\nPython\n71.4%\n","136":"\n\nPython\n96.7%\n","137":"\n\nPython\n100.0%\n","138":"\n\nPython\n93.7%\n","139":"\n\nPython\n51.5%\n","140":"\n\nPython\n95.2%\n","141":"\n\nPython\n62.9%\n","142":"\n\nPython\n99.3%\n","143":"\n\nPython\n100.0%\n","144":"\n\nPython\n100.0%\n","145":"\n\nPython\n96.0%\n","146":"\n\nPython\n99.6%\n","147":"\n\nPython\n66.1%\n","148":"\n\nPython\n96.0%\n","149":"\n\nPython\n100.0%\n","150":"\n\nPython\n97.8%\n","151":"\n\nPython\n97.8%\n","152":"\n\nPython\n100.0%\n","153":"\n\nPython\n100.0%\n","154":"\n\nPython\n91.7%\n","155":"\n\nPython\n90.5%\n","156":"\n\nPython\n100.0%\n","157":"\n\nPython\n95.8%\n","158":"\n\nPython\n100.0%\n","159":"\n\nPython\n99.7%\n","160":"\n\nPython\n100.0%\n","161":"\n\nPython\n97.9%\n","162":"\n\nPython\n52.6%\n","163":"\n\nPython\n61.2%\n","164":"\n\nPython\n90.9%\n","165":"\n\nPython\n100.0%\n","166":"\n\nPython\n97.2%\n","167":"\n\nPython\n45.9%\n","168":"\n\nPython\n48.5%\n","169":"\n\nPython\n100.0%\n","170":"\n\nPython\n95.4%\n","171":"\n\nPython\n81.8%\n","172":"\n\nPython\n95.8%\n","173":"\n\nPython\n53.8%\n","174":"\n\nPython\n100.0%\n","175":"\n\nPython\n100.0%\n","176":"\n\nPython\n100.0%\n","177":"\n\nPython\n99.3%\n","178":"\n\nPython\n96.3%\n","179":"\n\nPython\n100.0%\n"}}