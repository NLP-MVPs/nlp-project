{"body":{"0":"\n\n\n\n\nfreeCodeCamp.org's open-source codebase and curriculum\nfreeCodeCamp.org is a friendly community where you can learn to code for free. It is run by a donor-supported 501(c)(3) nonprofit to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.\nOur full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.\nTable of Contents\n\nCertifications\nThe Learning Platform\nReporting Bugs and Issues\nReporting Security Issues and Responsible Disclosure\nContributing\nPlatform, Build and Deployment Status\nLicense\n\nCertifications\nfreeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.\nEach of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.\nYou can pull in these test suites through freeCodeCamp's CDN. This means you can build these projects on websites like CodePen and Glitch - or even on your local computer's development environment.\nOnce you\u2019ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or r\u00e9sum\u00e9. And when your prospective employers or freelance clients click that link, they\u2019ll see a verified certification specific to you.\nThe one exception to this is if we discover violations of our Academic Honesty Policy. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.\nHere are our ten core certifications:\n1. Responsive Web Design Certification\n\nBasic HTML and HTML5\nBasic CSS\nApplied Visual Design\nApplied Accessibility\nResponsive Web Design Principles\nCSS Flexbox\nCSS Grid\n\n\nProjects: Tribute Page, Survey Form, Product Landing Page, Technical Documentation Page, Personal Portfolio Webpage\n\n2. JavaScript Algorithms and Data Structures Certification\n\nBasic JavaScript\nES6\nRegular Expressions\nDebugging\nBasic Data Structures\nAlgorithm Scripting\nObject-Oriented Programming\nFunctional Programming\nIntermediate Algorithm Scripting\n\n\nProjects: Palindrome Checker, Roman Numeral Converter, Caesar's Cipher, Telephone Number Validator, Cash Register\n\n3. Front End Libraries Certification\n\nBootstrap\njQuery\nSass\nReact\nRedux\nReact and Redux\n\n\nProjects:  Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, 25 + 5 Clock\n\n4. Data Visualization Certification\n\nData Visualization with D3\nJSON APIs and Ajax\n\n\nProjects:  Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram\n\n5. APIs and Microservices Certification\n\nManaging Packages with Npm\nBasic Node and Express\nMongoDB and Mongoose\n\n\nProjects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice\n\n6. Quality Assurance Certification\n\nQuality Assurance and Testing with Chai\nAdvanced Node and Express\n\n\nProjects:  Metric-Imperial Converter, Issue Tracker, Personal Library, Sudoku Solver, American British Translator\n\n7. Scientific Computing with Python Certification\n\nIntroduction to Python for Everybody\n\n\nProjects: Arithmetic Formatter, Time Calculator, Budget App, Polygon Area Calculator, Probability Calculator\n\n8. Data Analysis with Python Certification\n\nData Analysis with Python Course\nNumPy\n\n\nProjects: Mean-Variance-Standard Deviation Calculator, Demographic Data Analyzer, Medical Data Visualizer, Page View Time Series Visualizer, Sea Level Predictor\n\n9. Information Security Certification\n\nInformation Security with HelmetJS\nPython for Penetration Testing\n\n\nProjects:  Stock Price Checker, Anonymous Message Board, Port Scanner, SHA-1 Password Cracker, Secure Real Time Multiplayer Game \n\n10. Machine Learning with Python Certification\n\nTensorFlow\nHow Neural Networks Work\n\n\nProjects: Rock Paper Scissors, Cat and Dog Image Classifier, Book Recommendation Engine using KNN, Linear Regression Health Costs Calculator, Neural Network SMS Text Classifier\n\nLegacy Full Stack Development Certification\nOnce you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Libraries, Data Visualization, APIs and Microservices, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools.\nLegacy Certifications\nWe also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.\n\nLegacy Front End Development Certification\nLegacy Data Visualization Certification\nLegacy Back End Development Certification\nLegacy Information Security and Quality Assurance Certification\n\nThe Learning Platform\nThis code is running live at freeCodeCamp.org.\nOur community also has:\n\nA forum where you can usually get programming help or project feedback within hours.\nA YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies.\nA technical publication with thousands of programming tutorials and articles about math and computer science.\nA Discord chat room where you can hang out and talk with developers and people who are learning to code.\n\n\nJoin the community here.\n\nReporting Bugs and Issues\nIf you think you've found a bug, first read the how to report a bug article and follow its instructions.\nIf you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.\nReporting Security Issues and Responsible Disclosure\nIf you think you have found a vulnerability, please report responsibly. Don't create GitHub issues for security issues. Instead, please send an email to security@freecodecamp.org and we'll look into it immediately.\nWe appreciate any responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users. While we do not offer any bounties or swags at the moment, we'll be happy to list your name in our Hall of Fame for security researchers.\nContributing\nThe freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome any and all contributions to the community and are excited to welcome you aboard.\n\nPlease follow these steps to contribute.\n\nPlatform, Build and Deployment Status\nThe general platform status for all our applications is available at status.freecodecamp.org. The build and deployment status for the code is available in our DevOps Guide.\nLicense\nCopyright \u00a9 2020 freeCodeCamp.org\nThe content of this repository is bound by the following licenses:\n\nThe computer software is licensed under the BSD-3-Clause license.\nThe learning resources in the \/curriculum directory including their subdirectories thereon are licensed under the CC-BY-SA-4.0 license.\n\n","1":"\n\n\n\n\n\n\n\n\n\n\nSupporting Vue.js\nVue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. If you'd like to join them, please consider:\n\nBecome a backer or sponsor on Patreon.\nBecome a backer or sponsor on Open Collective.\nOne-time donation via PayPal or crypto-currencies.\n\nWhat's the difference between Patreon and OpenCollective?\nFunds donated via Patreon go directly to support Evan You's full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name\/logo will receive proper recognition and exposure by donating on either platform.\nSpecial Sponsors\n\n\n\n\n\nPlatinum Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlatinum Sponsors (China)\n\n\n\n\n\n\n\n\n\n\n\nGold Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors via Open Collective\nPlatinum\n\n\nGold\n\n\n\n\n\n\nIntroduction\nVue (pronounced \/vju\u02d0\/, like view) is a progressive framework for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.\nBrowser Compatibility\nVue.js supports all browsers that are ES5-compliant (IE8 and below are not supported).\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nvue-router\n\nSingle-page application routing\n\n\nvuex\n\nLarge-scale state management\n\n\nvue-cli\n\nProject scaffolding\n\n\nvue-loader\n\nSingle File Component (*.vue file) loader for webpack\n\n\nvue-server-renderer\n\nServer-side rendering support\n\n\nvue-class-component\n\nTypeScript decorator for a class-based API\n\n\nvue-rx\n\nRxJS integration\n\n\nvue-devtools\n\nBrowser DevTools extension\n\n\n\nDocumentation\nTo check out live examples and docs, visit vuejs.org.\nQuestions\nFor questions and support please use the official forum or community chat. The issue list of this repo is exclusively for bug reports and feature requests.\nIssues\nPlease make sure to read the Issue Reporting Checklist before opening an issue. Issues not conforming to the guidelines may be closed immediately.\nChangelog\nDetailed changes for each release are documented in the release notes.\nStay In Touch\n\nTwitter\nBlog\nJob Board\n\nContribution\nPlease make sure to read the Contributing Guide before making a pull request. If you have a Vue-related project\/component\/tool, add it with a pull request to this curated list!\nThank you to all the people who already contributed to Vue!\n\nLicense\nMIT\nCopyright (c) 2013-present, Yuxi (Evan) You\n","2":"React \u00b7    \nReact is a JavaScript library for building user interfaces.\n\nDeclarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\nComponent-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\nLearn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.\n\nLearn how to use React in your own project.\nInstallation\nReact has been designed for gradual adoption from the start, and you can use as little or as much React as you need:\n\nUse Online Playgrounds to get a taste of React.\nAdd React to a Website as a <script> tag in one minute.\nCreate a New React App if you're looking for a powerful JavaScript toolchain.\n\nYou can use React as a <script> tag from a CDN, or as a react package on npm.\nDocumentation\nYou can find the React documentation on the website.\nCheck out the Getting Started page for a quick overview.\nThe documentation is divided into several sections:\n\nTutorial\nMain Concepts\nAdvanced Guides\nAPI Reference\nWhere to Get Support\nContributing Guide\n\nYou can improve it by sending pull requests to this repository.\nExamples\nWe have several examples on the website. Here is the first one to get you started:\nfunction HelloMessage({ name }) {\n  return <div>Hello {name}<\/div>;\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" \/>,\n  document.getElementById('container')\n);\nThis example will render \"Hello Taylor\" into a container on the page.\nYou'll notice that we used an HTML-like syntax; we call it JSX. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a <script> tag, read this section on integrating JSX; otherwise, the recommended JavaScript toolchains handle it automatically.\nContributing\nThe main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.\nGood First Issues\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.\nLicense\nReact is MIT licensed.\n","3":"\n\n\n\n\nBootstrap\n\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  \nExplore Bootstrap docs \u00bb\n\n\nReport bug\n  \u00b7\n  Request feature\n  \u00b7\n  Themes\n  \u00b7\n  Blog\n\nBootstrap 4\nOur default branch is for development of our upcoming Bootstrap 5 release. Head to the v4-dev branch to view the readme, documentation, and source code for Bootstrap 4.\nTable of contents\n\nQuick start\nStatus\nWhat's included\nBugs and feature requests\nDocumentation\nContributing\nCommunity\nVersioning\nCreators\nThanks\nCopyright and license\n\nQuick start\nSeveral quick start options are available:\n\nDownload the latest release\nClone the repo: git clone https:\/\/github.com\/twbs\/bootstrap.git\nInstall with npm: npm install bootstrap@next\nInstall with yarn: yarn add bootstrap@next\nInstall with Composer: composer require twbs\/bootstrap:5.0.0-alpha3\nInstall with NuGet: CSS: Install-Package bootstrap Sass: Install-Package bootstrap.sass\n\nRead the Getting started page for information on the framework contents, templates and examples, and more.\nStatus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's included\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\nbootstrap\/\n\u2514\u2500\u2500 dist\/\n    \u251c\u2500\u2500 css\/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js\/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n\nWe provide compiled CSS and JS (bootstrap.*), as well as compiled and minified CSS and JS (bootstrap.min.*). source maps (bootstrap.*.map) are available for use with certain browsers' developer tools. Bundled JS files (bootstrap.bundle.js and minified bootstrap.bundle.min.js) include Popper.\nBugs and feature requests\nHave a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, please open a new issue.\nDocumentation\nBootstrap's documentation, included in this repo in the root directory, is built with Hugo and publicly hosted on GitHub Pages at https:\/\/v5.getbootstrap.com\/. The docs may also be run locally.\nDocumentation search is powered by Algolia's DocSearch. Working on our search? Be sure to set debug: true in site\/assets\/js\/src\/search.js file.\nRunning documentation locally\n\nRun npm install to install the Node.js dependencies, including Hugo (the site builder).\nRun npm run test (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\nFrom the root \/bootstrap directory, run npm run docs-serve in the command line.\nOpen http:\/\/localhost:9001\/ in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its documentation.\nDocumentation for previous releases\nYou can find all our previous releases docs on https:\/\/v5.getbootstrap.com\/docs\/versions\/.\nPrevious releases and their documentation are also available for download.\nContributing\nPlease read through our contributing guidelines. Included are directions for opening issues, coding standards, and notes on development.\nMoreover, if your pull request contains JavaScript patches or features, you must include relevant unit tests. All HTML and CSS should conform to the Code Guide, maintained by Mark Otto.\nEditor preferences are available in the editor config for easy use in common text editors. Read more and download plugins at https:\/\/editorconfig.org\/.\nCommunity\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\nFollow @getbootstrap on Twitter.\nRead and subscribe to The Official Bootstrap Blog.\nJoin the official Slack room.\nChat with fellow Bootstrappers in IRC. On the irc.freenode.net server, in the ##bootstrap channel.\nImplementation help may be found at Stack Overflow (tagged bootstrap-5).\nDevelopers should use the keyword bootstrap on packages which modify or add to the functionality of Bootstrap when distributing through npm or similar delivery mechanisms for maximum discoverability.\n\nVersioning\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we adhere to those rules whenever possible.\nSee the Releases section of our GitHub project for changelogs for each release version of Bootstrap. Release announcement posts on the official Bootstrap blog contain summaries of the most noteworthy changes made in each release.\nCreators\nMark Otto\n\nhttps:\/\/twitter.com\/mdo\nhttps:\/\/github.com\/mdo\n\nJacob Thornton\n\nhttps:\/\/twitter.com\/fat\nhttps:\/\/github.com\/fat\n\nThanks\n\n\n\nThanks to BrowserStack for providing the infrastructure that allows us to test in real browsers!\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nCopyright and license\nCode and documentation copyright 2011\u20132020 the Bootstrap Authors and Twitter, Inc. Code released under the MIT License. Docs released under Creative Commons.\n","4":"Airbnb JavaScript Style Guide() {\nA mostly reasonable approach to JavaScript\n\nNote: this guide assumes you are using Babel, and requires that you use babel-preset-airbnb or the equivalent. It also assumes you are installing shims\/polyfills in your app, with airbnb-browser-shims or the equivalent.\n\n\n\n\nThis guide is available in other languages too. See Translation\nOther Style Guides\n\nES5 (Deprecated)\nReact\nCSS-in-JavaScript\nCSS & Sass\nRuby\n\nTable of Contents\n\nTypes\nReferences\nObjects\nArrays\nDestructuring\nStrings\nFunctions\nArrow Functions\nClasses & Constructors\nModules\nIterators and Generators\nProperties\nVariables\nHoisting\nComparison Operators & Equality\nBlocks\nControl Statements\nComments\nWhitespace\nCommas\nSemicolons\nType Casting & Coercion\nNaming Conventions\nAccessors\nEvents\njQuery\nECMAScript 5 Compatibility\nECMAScript 6+ (ES 2015+) Styles\nStandard Library\nTesting\nPerformance\nResources\nIn the Wild\nTranslation\nThe JavaScript Style Guide Guide\nChat With Us About JavaScript\nContributors\nLicense\nAmendments\n\nTypes\n\n\n\n1.1 Primitives: When you access a primitive type you work directly on its value.\n\nstring\nnumber\nboolean\nnull\nundefined\nsymbol\nbigint\n\nconst foo = 1;\nlet bar = foo;\n\nbar = 9;\n\nconsole.log(foo, bar); \/\/ => 1, 9\n\nSymbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers\/environments that don\u2019t support them natively.\n\n\n\n\n\n\n1.2 Complex: When you access a complex type you work on a reference to its value.\n\nobject\narray\nfunction\n\nconst foo = [1, 2];\nconst bar = foo;\n\nbar[0] = 9;\n\nconsole.log(foo[0], bar[0]); \/\/ => 9, 9\n\n\n\u2b06 back to top\nReferences\n\n\n\n2.1 Use const for all of your references; avoid using var. eslint: prefer-const, no-const-assign\n\nWhy? This ensures that you can\u2019t reassign your references, which can lead to bugs and difficult to comprehend code.\n\n\/\/ bad\nvar a = 1;\nvar b = 2;\n\n\/\/ good\nconst a = 1;\nconst b = 2;\n\n\n\n\n\n2.2 If you must reassign references, use let instead of var. eslint: no-var\n\nWhy? let is block-scoped rather than function-scoped like var.\n\n\/\/ bad\nvar count = 1;\nif (true) {\n  count += 1;\n}\n\n\/\/ good, use the let.\nlet count = 1;\nif (true) {\n  count += 1;\n}\n\n\n\n\n\n2.3 Note that both let and const are block-scoped.\n\/\/ const and let only exist in the blocks they are defined in.\n{\n  let a = 1;\n  const b = 1;\n}\nconsole.log(a); \/\/ ReferenceError\nconsole.log(b); \/\/ ReferenceError\n\n\n\u2b06 back to top\nObjects\n\n\n\n3.1 Use the literal syntax for object creation. eslint: no-new-object\n\/\/ bad\nconst item = new Object();\n\n\/\/ good\nconst item = {};\n\n\n\n\n\n3.2 Use computed property names when creating objects with dynamic property names.\n\nWhy? They allow you to define all the properties of an object in one place.\n\nfunction getKey(k) {\n  return `a key named ${k}`;\n}\n\n\/\/ bad\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n};\nobj[getKey('enabled')] = true;\n\n\/\/ good\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n  [getKey('enabled')]: true,\n};\n\n\n\n\n\n3.3 Use object method shorthand. eslint: object-shorthand\n\/\/ bad\nconst atom = {\n  value: 1,\n\n  addValue: function (value) {\n    return atom.value + value;\n  },\n};\n\n\/\/ good\nconst atom = {\n  value: 1,\n\n  addValue(value) {\n    return atom.value + value;\n  },\n};\n\n\n\n\n\n3.4 Use property value shorthand. eslint: object-shorthand\n\nWhy? It is shorter and descriptive.\n\nconst lukeSkywalker = 'Luke Skywalker';\n\n\/\/ bad\nconst obj = {\n  lukeSkywalker: lukeSkywalker,\n};\n\n\/\/ good\nconst obj = {\n  lukeSkywalker,\n};\n\n\n\n\n\n3.5 Group your shorthand properties at the beginning of your object declaration.\n\nWhy? It\u2019s easier to tell which properties are using the shorthand.\n\nconst anakinSkywalker = 'Anakin Skywalker';\nconst lukeSkywalker = 'Luke Skywalker';\n\n\/\/ bad\nconst obj = {\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  lukeSkywalker,\n  episodeThree: 3,\n  mayTheFourth: 4,\n  anakinSkywalker,\n};\n\n\/\/ good\nconst obj = {\n  lukeSkywalker,\n  anakinSkywalker,\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  episodeThree: 3,\n  mayTheFourth: 4,\n};\n\n\n\n\n\n3.6 Only quote properties that are invalid identifiers. eslint: quote-props\n\nWhy? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.\n\n\/\/ bad\nconst bad = {\n  'foo': 3,\n  'bar': 4,\n  'data-blah': 5,\n};\n\n\/\/ good\nconst good = {\n  foo: 3,\n  bar: 4,\n  'data-blah': 5,\n};\n\n\n\n\n\n3.7 Do not call Object.prototype methods directly, such as hasOwnProperty, propertyIsEnumerable, and isPrototypeOf. eslint: no-prototype-builtins\n\nWhy? These methods may be shadowed by properties on the object in question - consider { hasOwnProperty: false } - or, the object may be a null object (Object.create(null)).\n\n\/\/ bad\nconsole.log(object.hasOwnProperty(key));\n\n\/\/ good\nconsole.log(Object.prototype.hasOwnProperty.call(object, key));\n\n\/\/ best\nconst has = Object.prototype.hasOwnProperty; \/\/ cache the lookup once, in module scope.\nconsole.log(has.call(object, key));\n\/* or *\/\nimport has from 'has'; \/\/ https:\/\/www.npmjs.com\/package\/has\nconsole.log(has(object, key));\n\n\n\n\n\n3.8 Prefer the object spread operator over Object.assign to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: prefer-object-spread\n\/\/ very bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign(original, { c: 3 }); \/\/ this mutates `original` \u0ca0_\u0ca0\ndelete copy.a; \/\/ so does this\n\n\/\/ bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign({}, original, { c: 3 }); \/\/ copy => { a: 1, b: 2, c: 3 }\n\n\/\/ good\nconst original = { a: 1, b: 2 };\nconst copy = { ...original, c: 3 }; \/\/ copy => { a: 1, b: 2, c: 3 }\n\nconst { a, ...noA } = copy; \/\/ noA => { b: 2, c: 3 }\n\n\n\u2b06 back to top\nArrays\n\n\n\n4.1 Use the literal syntax for array creation. eslint: no-array-constructor\n\/\/ bad\nconst items = new Array();\n\n\/\/ good\nconst items = [];\n\n\n\n\n\n4.2 Use Array#push instead of direct assignment to add items to an array.\nconst someStack = [];\n\n\/\/ bad\nsomeStack[someStack.length] = 'abracadabra';\n\n\/\/ good\nsomeStack.push('abracadabra');\n\n\n\n\n\n4.3 Use array spreads ... to copy arrays.\n\/\/ bad\nconst len = items.length;\nconst itemsCopy = [];\nlet i;\n\nfor (i = 0; i < len; i += 1) {\n  itemsCopy[i] = items[i];\n}\n\n\/\/ good\nconst itemsCopy = [...items];\n\n\n\n\n\n\n4.4 To convert an iterable object to an array, use spreads ... instead of Array.from.\nconst foo = document.querySelectorAll('.foo');\n\n\/\/ good\nconst nodes = Array.from(foo);\n\n\/\/ best\nconst nodes = [...foo];\n\n\n\n\n\n4.5 Use Array.from for converting an array-like object to an array.\nconst arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };\n\n\/\/ bad\nconst arr = Array.prototype.slice.call(arrLike);\n\n\/\/ good\nconst arr = Array.from(arrLike);\n\n\n\n\n\n4.6 Use Array.from instead of spread ... for mapping over iterables, because it avoids creating an intermediate array.\n\/\/ bad\nconst baz = [...foo].map(bar);\n\n\/\/ good\nconst baz = Array.from(foo, bar);\n\n\n\n\n\n4.7 Use return statements in array method callbacks. It\u2019s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following 8.2. eslint: array-callback-return\n\/\/ good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\/\/ good\n[1, 2, 3].map((x) => x + 1);\n\n\/\/ bad - no returned value means `acc` becomes undefined after the first iteration\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n});\n\n\/\/ good\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n  return flatten;\n});\n\n\/\/ bad\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  } else {\n    return false;\n  }\n});\n\n\/\/ good\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  }\n\n  return false;\n});\n\n\n\n\n\n4.8 Use line breaks after open and before close array brackets if an array has multiple lines\n\/\/ bad\nconst arr = [\n  [0, 1], [2, 3], [4, 5],\n];\n\nconst objectInArray = [{\n  id: 1,\n}, {\n  id: 2,\n}];\n\nconst numberInArray = [\n  1, 2,\n];\n\n\/\/ good\nconst arr = [[0, 1], [2, 3], [4, 5]];\n\nconst objectInArray = [\n  {\n    id: 1,\n  },\n  {\n    id: 2,\n  },\n];\n\nconst numberInArray = [\n  1,\n  2,\n];\n\n\n\u2b06 back to top\nDestructuring\n\n\n\n5.1 Use object destructuring when accessing and using multiple properties of an object. eslint: prefer-destructuring\n\nWhy? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.\n\n\/\/ bad\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n\n  return `${firstName} ${lastName}`;\n}\n\n\/\/ good\nfunction getFullName(user) {\n  const { firstName, lastName } = user;\n  return `${firstName} ${lastName}`;\n}\n\n\/\/ best\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\n\n\n\n\n\n5.2 Use array destructuring. eslint: prefer-destructuring\nconst arr = [1, 2, 3, 4];\n\n\/\/ bad\nconst first = arr[0];\nconst second = arr[1];\n\n\/\/ good\nconst [first, second] = arr;\n\n\n\n\n\n5.3 Use object destructuring for multiple return values, not array destructuring.\n\nWhy? You can add new properties over time or change the order of things without breaking call sites.\n\n\/\/ bad\nfunction processInput(input) {\n  \/\/ then a miracle occurs\n  return [left, right, top, bottom];\n}\n\n\/\/ the caller needs to think about the order of return data\nconst [left, __, top] = processInput(input);\n\n\/\/ good\nfunction processInput(input) {\n  \/\/ then a miracle occurs\n  return { left, right, top, bottom };\n}\n\n\/\/ the caller selects only the data they need\nconst { left, top } = processInput(input);\n\n\n\u2b06 back to top\nStrings\n\n\n\n6.1 Use single quotes '' for strings. eslint: quotes\n\/\/ bad\nconst name = \"Capt. Janeway\";\n\n\/\/ bad - template literals should contain interpolation or newlines\nconst name = `Capt. Janeway`;\n\n\/\/ good\nconst name = 'Capt. Janeway';\n\n\n\n\n\n6.2 Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.\n\nWhy? Broken strings are painful to work with and make code less searchable.\n\n\/\/ bad\nconst errorMessage = 'This is a super long error that was thrown because \\\nof Batman. When you stop to think about how Batman had anything to do \\\nwith this, you would get nowhere \\\nfast.';\n\n\/\/ bad\nconst errorMessage = 'This is a super long error that was thrown because ' +\n  'of Batman. When you stop to think about how Batman had anything to do ' +\n  'with this, you would get nowhere fast.';\n\n\/\/ good\nconst errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';\n\n\n\n\n\n6.3 When programmatically building up strings, use template strings instead of concatenation. eslint: prefer-template template-curly-spacing\n\nWhy? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.\n\n\/\/ bad\nfunction sayHi(name) {\n  return 'How are you, ' + name + '?';\n}\n\n\/\/ bad\nfunction sayHi(name) {\n  return ['How are you, ', name, '?'].join();\n}\n\n\/\/ bad\nfunction sayHi(name) {\n  return `How are you, ${ name }?`;\n}\n\n\/\/ good\nfunction sayHi(name) {\n  return `How are you, ${name}?`;\n}\n\n\n\n\n6.4 Never use eval() on a string, it opens too many vulnerabilities. eslint: no-eval\n\n\n\n\n6.5 Do not unnecessarily escape characters in strings. eslint: no-useless-escape\n\nWhy? Backslashes harm readability, thus they should only be present when necessary.\n\n\/\/ bad\nconst foo = '\\'this\\' \\i\\s \\\"quoted\\\"';\n\n\/\/ good\nconst foo = '\\'this\\' is \"quoted\"';\nconst foo = `my name is '${name}'`;\n\n\n\u2b06 back to top\nFunctions\n\n\n\n7.1 Use named function expressions instead of function declarations. eslint: func-style\n\nWhy? Function declarations are hoisted, which means that it\u2019s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function\u2019s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it\u2019s time to extract it to its own module! Don\u2019t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error\u2019s call stack. (Discussion)\n\n\/\/ bad\nfunction foo() {\n  \/\/ ...\n}\n\n\/\/ bad\nconst foo = function () {\n  \/\/ ...\n};\n\n\/\/ good\n\/\/ lexical name distinguished from the variable-referenced invocation(s)\nconst short = function longUniqueMoreDescriptiveLexicalFoo() {\n  \/\/ ...\n};\n\n\n\n\n\n7.2 Wrap immediately invoked function expressions in parentheses. eslint: wrap-iife\n\nWhy? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.\n\n\/\/ immediately-invoked function expression (IIFE)\n(function () {\n  console.log('Welcome to the Internet. Please follow me.');\n}());\n\n\n\n\n7.3 Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: no-loop-func\n\n\n\n\n7.4 Note: ECMA-262 defines a block as a list of statements. A function declaration is not a statement.\n\/\/ bad\nif (currentUser) {\n  function test() {\n    console.log('Nope.');\n  }\n}\n\n\/\/ good\nlet test;\nif (currentUser) {\n  test = () => {\n    console.log('Yup.');\n  };\n}\n\n\n\n\n\n7.5 Never name a parameter arguments. This will take precedence over the arguments object that is given to every function scope.\n\/\/ bad\nfunction foo(name, options, arguments) {\n  \/\/ ...\n}\n\n\/\/ good\nfunction foo(name, options, args) {\n  \/\/ ...\n}\n\n\n\n\n\n7.6 Never use arguments, opt to use rest syntax ... instead. eslint: prefer-rest-params\n\nWhy? ... is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like arguments.\n\n\/\/ bad\nfunction concatenateAll() {\n  const args = Array.prototype.slice.call(arguments);\n  return args.join('');\n}\n\n\/\/ good\nfunction concatenateAll(...args) {\n  return args.join('');\n}\n\n\n\n\n\n7.7 Use default parameter syntax rather than mutating function arguments.\n\/\/ really bad\nfunction handleThings(opts) {\n  \/\/ No! We shouldn\u2019t mutate function arguments.\n  \/\/ Double bad: if opts is falsy it'll be set to an object which may\n  \/\/ be what you want but it can introduce subtle bugs.\n  opts = opts || {};\n  \/\/ ...\n}\n\n\/\/ still bad\nfunction handleThings(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  \/\/ ...\n}\n\n\/\/ good\nfunction handleThings(opts = {}) {\n  \/\/ ...\n}\n\n\n\n\n\n7.8 Avoid side effects with default parameters.\n\nWhy? They are confusing to reason about.\n\nvar b = 1;\n\/\/ bad\nfunction count(a = b++) {\n  console.log(a);\n}\ncount();  \/\/ 1\ncount();  \/\/ 2\ncount(3); \/\/ 3\ncount();  \/\/ 3\n\n\n\n\n\n7.9 Always put default parameters last. eslint: default-param-last\n\/\/ bad\nfunction handleThings(opts = {}, name) {\n  \/\/ ...\n}\n\n\/\/ good\nfunction handleThings(name, opts = {}) {\n  \/\/ ...\n}\n\n\n\n\n\n7.10 Never use the Function constructor to create a new function. eslint: no-new-func\n\nWhy? Creating a function in this way evaluates a string similarly to eval(), which opens vulnerabilities.\n\n\/\/ bad\nvar add = new Function('a', 'b', 'return a + b');\n\n\/\/ still bad\nvar subtract = Function('a', 'b', 'return a - b');\n\n\n\n\n\n7.11 Spacing in a function signature. eslint: space-before-function-paren space-before-blocks\n\nWhy? Consistency is good, and you shouldn\u2019t have to add or remove a space when adding or removing a name.\n\n\/\/ bad\nconst f = function(){};\nconst g = function (){};\nconst h = function() {};\n\n\/\/ good\nconst x = function () {};\nconst y = function a() {};\n\n\n\n\n\n7.12 Never mutate parameters. eslint: no-param-reassign\n\nWhy? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.\n\n\/\/ bad\nfunction f1(obj) {\n  obj.key = 1;\n}\n\n\/\/ good\nfunction f2(obj) {\n  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;\n}\n\n\n\n\n\n7.13 Never reassign parameters. eslint: no-param-reassign\n\nWhy? Reassigning parameters can lead to unexpected behavior, especially when accessing the arguments object. It can also cause optimization issues, especially in V8.\n\n\/\/ bad\nfunction f1(a) {\n  a = 1;\n  \/\/ ...\n}\n\nfunction f2(a) {\n  if (!a) { a = 1; }\n  \/\/ ...\n}\n\n\/\/ good\nfunction f3(a) {\n  const b = a || 1;\n  \/\/ ...\n}\n\nfunction f4(a = 1) {\n  \/\/ ...\n}\n\n\n\n\n\n7.14 Prefer the use of the spread operator ... to call variadic functions. eslint: prefer-spread\n\nWhy? It\u2019s cleaner, you don\u2019t need to supply a context, and you can not easily compose new with apply.\n\n\/\/ bad\nconst x = [1, 2, 3, 4, 5];\nconsole.log.apply(console, x);\n\n\/\/ good\nconst x = [1, 2, 3, 4, 5];\nconsole.log(...x);\n\n\/\/ bad\nnew (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));\n\n\/\/ good\nnew Date(...[2016, 8, 5]);\n\n\n\n\n\n7.15 Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: function-paren-newline\n\/\/ bad\nfunction foo(bar,\n             baz,\n             quux) {\n  \/\/ ...\n}\n\n\/\/ good\nfunction foo(\n  bar,\n  baz,\n  quux,\n) {\n  \/\/ ...\n}\n\n\/\/ bad\nconsole.log(foo,\n  bar,\n  baz);\n\n\/\/ good\nconsole.log(\n  foo,\n  bar,\n  baz,\n);\n\n\n\u2b06 back to top\nArrow Functions\n\n\n\n8.1 When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: prefer-arrow-callback, arrow-spacing\n\nWhy? It creates a version of the function that executes in the context of this, which is usually what you want, and is a more concise syntax.\n\n\nWhy not? If you have a fairly complicated function, you might move that logic out into its own named function expression.\n\n\/\/ bad\n[1, 2, 3].map(function (x) {\n  const y = x + 1;\n  return x * y;\n});\n\n\/\/ good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.2 If the function body consists of a single statement returning an expression without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a return statement. eslint: arrow-parens, arrow-body-style\n\nWhy? Syntactic sugar. It reads well when multiple functions are chained together.\n\n\/\/ bad\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  `A string containing the ${nextNumber}.`;\n});\n\n\/\/ good\n[1, 2, 3].map((number) => `A string containing the ${number + 1}.`);\n\n\/\/ good\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  return `A string containing the ${nextNumber}.`;\n});\n\n\/\/ good\n[1, 2, 3].map((number, index) => ({\n  [index]: number,\n}));\n\n\/\/ No implicit return with side effects\nfunction foo(callback) {\n  const val = callback();\n  if (val === true) {\n    \/\/ Do something if callback returns true\n  }\n}\n\nlet bool = false;\n\n\/\/ bad\nfoo(() => bool = true);\n\n\/\/ good\nfoo(() => {\n  bool = true;\n});\n\n\n\n\n\n8.3 In case the expression spans over multiple lines, wrap it in parentheses for better readability.\n\nWhy? It shows clearly where the function starts and ends.\n\n\/\/ bad\n['get', 'post', 'put'].map((httpMethod) => Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n);\n\n\/\/ good\n['get', 'post', 'put'].map((httpMethod) => (\n  Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n));\n\n\n\n\n\n8.4 Always include parentheses around arguments for clarity and consistency. eslint: arrow-parens\n\nWhy? Minimizes diff churn when adding or removing arguments.\n\n\/\/ bad\n[1, 2, 3].map(x => x * x);\n\n\/\/ good\n[1, 2, 3].map((x) => x * x);\n\n\/\/ bad\n[1, 2, 3].map(number => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n\/\/ good\n[1, 2, 3].map((number) => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n\/\/ bad\n[1, 2, 3].map(x => {\n  const y = x + 1;\n  return x * y;\n});\n\n\/\/ good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.5 Avoid confusing arrow function syntax (=>) with comparison operators (<=, >=). eslint: no-confusing-arrow\n\/\/ bad\nconst itemHeight = (item) => item.height <= 256 ? item.largeSize : item.smallSize;\n\n\/\/ bad\nconst itemHeight = (item) => item.height >= 256 ? item.largeSize : item.smallSize;\n\n\/\/ good\nconst itemHeight = (item) => (item.height <= 256 ? item.largeSize : item.smallSize);\n\n\/\/ good\nconst itemHeight = (item) => {\n  const { height, largeSize, smallSize } = item;\n  return height <= 256 ? largeSize : smallSize;\n};\n\n\n\n\n\n8.6 Enforce the location of arrow function bodies with implicit returns. eslint: implicit-arrow-linebreak\n\/\/ bad\n(foo) =>\n  bar;\n\n(foo) =>\n  (bar);\n\n\/\/ good\n(foo) => bar;\n(foo) => (bar);\n(foo) => (\n   bar\n)\n\n\n\u2b06 back to top\nClasses & Constructors\n\n\n\n9.1 Always use class. Avoid manipulating prototype directly.\n\nWhy? class syntax is more concise and easier to reason about.\n\n\/\/ bad\nfunction Queue(contents = []) {\n  this.queue = [...contents];\n}\nQueue.prototype.pop = function () {\n  const value = this.queue[0];\n  this.queue.splice(0, 1);\n  return value;\n};\n\n\/\/ good\nclass Queue {\n  constructor(contents = []) {\n    this.queue = [...contents];\n  }\n  pop() {\n    const value = this.queue[0];\n    this.queue.splice(0, 1);\n    return value;\n  }\n}\n\n\n\n\n\n9.2 Use extends for inheritance.\n\nWhy? It is a built-in way to inherit prototype functionality without breaking instanceof.\n\n\/\/ bad\nconst inherits = require('inherits');\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents);\n}\ninherits(PeekableQueue, Queue);\nPeekableQueue.prototype.peek = function () {\n  return this.queue[0];\n};\n\n\/\/ good\nclass PeekableQueue extends Queue {\n  peek() {\n    return this.queue[0];\n  }\n}\n\n\n\n\n\n9.3 Methods can return this to help with method chaining.\n\/\/ bad\nJedi.prototype.jump = function () {\n  this.jumping = true;\n  return true;\n};\n\nJedi.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nconst luke = new Jedi();\nluke.jump(); \/\/ => true\nluke.setHeight(20); \/\/ => undefined\n\n\/\/ good\nclass Jedi {\n  jump() {\n    this.jumping = true;\n    return this;\n  }\n\n  setHeight(height) {\n    this.height = height;\n    return this;\n  }\n}\n\nconst luke = new Jedi();\n\nluke.jump()\n  .setHeight(20);\n\n\n\n\n\n9.4 It\u2019s okay to write a custom toString() method, just make sure it works successfully and causes no side effects.\nclass Jedi {\n  constructor(options = {}) {\n    this.name = options.name || 'no name';\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  toString() {\n    return `Jedi - ${this.getName()}`;\n  }\n}\n\n\n\n\n\n9.5 Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: no-useless-constructor\n\/\/ bad\nclass Jedi {\n  constructor() {}\n\n  getName() {\n    return this.name;\n  }\n}\n\n\/\/ bad\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n  }\n}\n\n\/\/ good\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n    this.name = 'Rey';\n  }\n}\n\n\n\n\n\n9.6 Avoid duplicate class members. eslint: no-dupe-class-members\n\nWhy? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.\n\n\/\/ bad\nclass Foo {\n  bar() { return 1; }\n  bar() { return 2; }\n}\n\n\/\/ good\nclass Foo {\n  bar() { return 1; }\n}\n\n\/\/ good\nclass Foo {\n  bar() { return 2; }\n}\n\n\n\n\n\n9.7 Class methods should use this or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: class-methods-use-this\n\/\/ bad\nclass Foo {\n  bar() {\n    console.log('bar');\n  }\n}\n\n\/\/ good - this is used\nclass Foo {\n  bar() {\n    console.log(this.bar);\n  }\n}\n\n\/\/ good - constructor is exempt\nclass Foo {\n  constructor() {\n    \/\/ ...\n  }\n}\n\n\/\/ good - static methods aren't expected to use this\nclass Foo {\n  static bar() {\n    console.log('bar');\n  }\n}\n\n\n\u2b06 back to top\nModules\n\n\n\n10.1 Always use modules (import\/export) over a non-standard module system. You can always transpile to your preferred module system.\n\nWhy? Modules are the future, let\u2019s start using the future now.\n\n\/\/ bad\nconst AirbnbStyleGuide = require('.\/AirbnbStyleGuide');\nmodule.exports = AirbnbStyleGuide.es6;\n\n\/\/ ok\nimport AirbnbStyleGuide from '.\/AirbnbStyleGuide';\nexport default AirbnbStyleGuide.es6;\n\n\/\/ best\nimport { es6 } from '.\/AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.2 Do not use wildcard imports.\n\nWhy? This makes sure you have a single default export.\n\n\/\/ bad\nimport * as AirbnbStyleGuide from '.\/AirbnbStyleGuide';\n\n\/\/ good\nimport AirbnbStyleGuide from '.\/AirbnbStyleGuide';\n\n\n\n\n\n10.3 And do not export directly from an import.\n\nWhy? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.\n\n\/\/ bad\n\/\/ filename es6.js\nexport { es6 as default } from '.\/AirbnbStyleGuide';\n\n\/\/ good\n\/\/ filename es6.js\nimport { es6 } from '.\/AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.4 Only import from a path in one place.\neslint: no-duplicate-imports\n\nWhy? Having multiple lines that import from the same path can make code harder to maintain.\n\n\/\/ bad\nimport foo from 'foo';\n\/\/ \u2026 some other imports \u2026 \/\/\nimport { named1, named2 } from 'foo';\n\n\/\/ good\nimport foo, { named1, named2 } from 'foo';\n\n\/\/ good\nimport foo, {\n  named1,\n  named2,\n} from 'foo';\n\n\n\n\n\n10.5 Do not export mutable bindings.\neslint: import\/no-mutable-exports\n\nWhy? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.\n\n\/\/ bad\nlet foo = 3;\nexport { foo };\n\n\/\/ good\nconst foo = 3;\nexport { foo };\n\n\n\n\n\n10.6 In modules with a single export, prefer default export over named export.\neslint: import\/prefer-default-export\n\nWhy? To encourage more files that only ever export one thing, which is better for readability and maintainability.\n\n\/\/ bad\nexport function foo() {}\n\n\/\/ good\nexport default function foo() {}\n\n\n\n\n\n10.7 Put all imports above non-import statements.\neslint: import\/first\n\nWhy? Since imports are hoisted, keeping them all at the top prevents surprising behavior.\n\n\/\/ bad\nimport foo from 'foo';\nfoo.init();\n\nimport bar from 'bar';\n\n\/\/ good\nimport foo from 'foo';\nimport bar from 'bar';\n\nfoo.init();\n\n\n\n\n\n10.8 Multiline imports should be indented just like multiline array and object literals.\neslint: object-curly-newline\n\nWhy? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.\n\n\/\/ bad\nimport {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';\n\n\/\/ good\nimport {\n  longNameA,\n  longNameB,\n  longNameC,\n  longNameD,\n  longNameE,\n} from 'path';\n\n\n\n\n\n10.9 Disallow Webpack loader syntax in module import statements.\neslint: import\/no-webpack-loader-syntax\n\nWhy? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in webpack.config.js.\n\n\/\/ bad\nimport fooSass from 'css!sass!foo.scss';\nimport barCss from 'style!css!bar.css';\n\n\/\/ good\nimport fooSass from 'foo.scss';\nimport barCss from 'bar.css';\n\n\n\n\n\n10.10 Do not include JavaScript filename extensions\neslint: import\/extensions\n\nWhy? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you're importing in every consumer.\n\n\/\/ bad\nimport foo from '.\/foo.js';\nimport bar from '.\/bar.jsx';\nimport baz from '.\/baz\/index.jsx';\n\n\/\/ good\nimport foo from '.\/foo';\nimport bar from '.\/bar';\nimport baz from '.\/baz';\n\n\n\u2b06 back to top\nIterators and Generators\n\n\n\n11.1 Don\u2019t use iterators. Prefer JavaScript\u2019s higher-order functions instead of loops like for-in or for-of. eslint: no-iterator no-restricted-syntax\n\nWhy? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.\n\n\nUse map() \/ every() \/ filter() \/ find() \/ findIndex() \/ reduce() \/ some() \/ ... to iterate over arrays, and Object.keys() \/ Object.values() \/ Object.entries() to produce arrays so you can iterate over objects.\n\nconst numbers = [1, 2, 3, 4, 5];\n\n\/\/ bad\nlet sum = 0;\nfor (let num of numbers) {\n  sum += num;\n}\nsum === 15;\n\n\/\/ good\nlet sum = 0;\nnumbers.forEach((num) => {\n  sum += num;\n});\nsum === 15;\n\n\/\/ best (use the functional force)\nconst sum = numbers.reduce((total, num) => total + num, 0);\nsum === 15;\n\n\/\/ bad\nconst increasedByOne = [];\nfor (let i = 0; i < numbers.length; i++) {\n  increasedByOne.push(numbers[i] + 1);\n}\n\n\/\/ good\nconst increasedByOne = [];\nnumbers.forEach((num) => {\n  increasedByOne.push(num + 1);\n});\n\n\/\/ best (keeping it functional)\nconst increasedByOne = numbers.map((num) => num + 1);\n\n\n\n\n\n11.2 Don\u2019t use generators for now.\n\nWhy? They don\u2019t transpile well to ES5.\n\n\n\n\n\n\n11.3 If you must use generators, or if you disregard our advice, make sure their function signature is spaced properly. eslint: generator-star-spacing\n\nWhy? function and * are part of the same conceptual keyword - * is not a modifier for function, function* is a unique construct, different from function.\n\n\/\/ bad\nfunction * foo() {\n  \/\/ ...\n}\n\n\/\/ bad\nconst bar = function * () {\n  \/\/ ...\n};\n\n\/\/ bad\nconst baz = function *() {\n  \/\/ ...\n};\n\n\/\/ bad\nconst quux = function*() {\n  \/\/ ...\n};\n\n\/\/ bad\nfunction*foo() {\n  \/\/ ...\n}\n\n\/\/ bad\nfunction *foo() {\n  \/\/ ...\n}\n\n\/\/ very bad\nfunction\n*\nfoo() {\n  \/\/ ...\n}\n\n\/\/ very bad\nconst wat = function\n*\n() {\n  \/\/ ...\n};\n\n\/\/ good\nfunction* foo() {\n  \/\/ ...\n}\n\n\/\/ good\nconst foo = function* () {\n  \/\/ ...\n};\n\n\n\u2b06 back to top\nProperties\n\n\n\n12.1 Use dot notation when accessing properties. eslint: dot-notation\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\n\/\/ bad\nconst isJedi = luke['jedi'];\n\n\/\/ good\nconst isJedi = luke.jedi;\n\n\n\n\n\n12.2 Use bracket notation [] when accessing properties with a variable.\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\nfunction getProp(prop) {\n  return luke[prop];\n}\n\nconst isJedi = getProp('jedi');\n\n\n\n\n\n12.3 Use exponentiation operator ** when calculating exponentiations. eslint: no-restricted-properties.\n\/\/ bad\nconst binary = Math.pow(2, 10);\n\n\/\/ good\nconst binary = 2 ** 10;\n\n\n\u2b06 back to top\nVariables\n\n\n\n13.1 Always use const or let to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: no-undef prefer-const\n\/\/ bad\nsuperPower = new SuperPower();\n\n\/\/ good\nconst superPower = new SuperPower();\n\n\n\n\n\n13.2 Use one const or let declaration per variable or assignment. eslint: one-var\n\nWhy? It\u2019s easier to add new variable declarations this way, and you never have to worry about swapping out a ; for a , or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.\n\n\/\/ bad\nconst items = getItems(),\n    goSportsTeam = true,\n    dragonball = 'z';\n\n\/\/ bad\n\/\/ (compare to above, and try to spot the mistake)\nconst items = getItems(),\n    goSportsTeam = true;\n    dragonball = 'z';\n\n\/\/ good\nconst items = getItems();\nconst goSportsTeam = true;\nconst dragonball = 'z';\n\n\n\n\n\n13.3 Group all your consts and then group all your lets.\n\nWhy? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.\n\n\/\/ bad\nlet i, len, dragonball,\n    items = getItems(),\n    goSportsTeam = true;\n\n\/\/ bad\nlet i;\nconst items = getItems();\nlet dragonball;\nconst goSportsTeam = true;\nlet len;\n\n\/\/ good\nconst goSportsTeam = true;\nconst items = getItems();\nlet dragonball;\nlet i;\nlet length;\n\n\n\n\n\n13.4 Assign variables where you need them, but place them in a reasonable place.\n\nWhy? let and const are block scoped and not function scoped.\n\n\/\/ bad - unnecessary function call\nfunction checkName(hasName) {\n  const name = getName();\n\n  if (hasName === 'test') {\n    return false;\n  }\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n\/\/ good\nfunction checkName(hasName) {\n  if (hasName === 'test') {\n    return false;\n  }\n\n  const name = getName();\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n\n\n\n\n13.5 Don\u2019t chain variable assignments. eslint: no-multi-assign\n\nWhy? Chaining variable assignments creates implicit global variables.\n\n\/\/ bad\n(function example() {\n  \/\/ JavaScript interprets this as\n  \/\/ let a = ( b = ( c = 1 ) );\n  \/\/ The let keyword only applies to variable a; variables b and c become\n  \/\/ global variables.\n  let a = b = c = 1;\n}());\n\nconsole.log(a); \/\/ throws ReferenceError\nconsole.log(b); \/\/ 1\nconsole.log(c); \/\/ 1\n\n\/\/ good\n(function example() {\n  let a = 1;\n  let b = a;\n  let c = a;\n}());\n\nconsole.log(a); \/\/ throws ReferenceError\nconsole.log(b); \/\/ throws ReferenceError\nconsole.log(c); \/\/ throws ReferenceError\n\n\/\/ the same applies for `const`\n\n\n\n\n\n13.6 Avoid using unary increments and decrements (++, --). eslint no-plusplus\n\nWhy? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like num += 1 instead of num++ or num ++. Disallowing unary increment and decrement statements also prevents you from pre-incrementing\/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.\n\n\/\/ bad\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum++;\n--num;\n\nlet sum = 0;\nlet truthyCount = 0;\nfor (let i = 0; i < array.length; i++) {\n  let value = array[i];\n  sum += value;\n  if (value) {\n    truthyCount++;\n  }\n}\n\n\/\/ good\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum += 1;\nnum -= 1;\n\nconst sum = array.reduce((a, b) => a + b, 0);\nconst truthyCount = array.filter(Boolean).length;\n\n\n\n\n\n13.7 Avoid linebreaks before or after = in an assignment. If your assignment violates max-len, surround the value in parens. eslint operator-linebreak.\n\nWhy? Linebreaks surrounding = can obfuscate the value of an assignment.\n\n\/\/ bad\nconst foo =\n  superLongLongLongLongLongLongLongLongFunctionName();\n\n\/\/ bad\nconst foo\n  = 'superLongLongLongLongLongLongLongLongString';\n\n\/\/ good\nconst foo = (\n  superLongLongLongLongLongLongLongLongFunctionName()\n);\n\n\/\/ good\nconst foo = 'superLongLongLongLongLongLongLongLongString';\n\n\n\n\n\n13.8 Disallow unused variables. eslint: no-unused-vars\n\nWhy? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.\n\n\/\/ bad\n\nvar some_unused_var = 42;\n\n\/\/ Write-only variables are not considered as used.\nvar y = 10;\ny = 5;\n\n\/\/ A read for a modification of itself is not considered as used.\nvar z = 0;\nz = z + 1;\n\n\/\/ Unused function arguments.\nfunction getX(x, y) {\n    return x;\n}\n\n\/\/ good\n\nfunction getXPlusY(x, y) {\n  return x + y;\n}\n\nvar x = 1;\nvar y = a + 2;\n\nalert(getXPlusY(x, y));\n\n\/\/ 'type' is ignored even if unused because it has a rest property sibling.\n\/\/ This is a form of extracting an object that omits the specified keys.\nvar { type, ...coords } = data;\n\/\/ 'coords' is now the 'data' object without its 'type' property.\n\n\n\u2b06 back to top\nHoisting\n\n\n\n14.1 var declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. const and let declarations are blessed with a new concept called Temporal Dead Zones (TDZ). It\u2019s important to know why typeof is no longer safe.\n\/\/ we know this wouldn\u2019t work (assuming there\n\/\/ is no notDefined global variable)\nfunction example() {\n  console.log(notDefined); \/\/ => throws a ReferenceError\n}\n\n\/\/ creating a variable declaration after you\n\/\/ reference the variable will work due to\n\/\/ variable hoisting. Note: the assignment\n\/\/ value of `true` is not hoisted.\nfunction example() {\n  console.log(declaredButNotAssigned); \/\/ => undefined\n  var declaredButNotAssigned = true;\n}\n\n\/\/ the interpreter is hoisting the variable\n\/\/ declaration to the top of the scope,\n\/\/ which means our example could be rewritten as:\nfunction example() {\n  let declaredButNotAssigned;\n  console.log(declaredButNotAssigned); \/\/ => undefined\n  declaredButNotAssigned = true;\n}\n\n\/\/ using const and let\nfunction example() {\n  console.log(declaredButNotAssigned); \/\/ => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned); \/\/ => throws a ReferenceError\n  const declaredButNotAssigned = true;\n}\n\n\n\n\n\n14.2 Anonymous function expressions hoist their variable name, but not the function assignment.\nfunction example() {\n  console.log(anonymous); \/\/ => undefined\n\n  anonymous(); \/\/ => TypeError anonymous is not a function\n\n  var anonymous = function () {\n    console.log('anonymous function expression');\n  };\n}\n\n\n\n\n\n14.3 Named function expressions hoist the variable name, not the function name or the function body.\nfunction example() {\n  console.log(named); \/\/ => undefined\n\n  named(); \/\/ => TypeError named is not a function\n\n  superPower(); \/\/ => ReferenceError superPower is not defined\n\n  var named = function superPower() {\n    console.log('Flying');\n  };\n}\n\n\/\/ the same is true when the function name\n\/\/ is the same as the variable name.\nfunction example() {\n  console.log(named); \/\/ => undefined\n\n  named(); \/\/ => TypeError named is not a function\n\n  var named = function named() {\n    console.log('named');\n  };\n}\n\n\n\n\n\n14.4 Function declarations hoist their name and the function body.\nfunction example() {\n  superPower(); \/\/ => Flying\n\n  function superPower() {\n    console.log('Flying');\n  }\n}\n\n\nFor more information refer to JavaScript Scoping & Hoisting by Ben Cherry.\n\n\n\u2b06 back to top\nComparison Operators & Equality\n\n\n15.1 Use === and !== over == and !=. eslint: eqeqeq\n\n\n\n\n15.2 Conditional statements such as the if statement evaluate their expression using coercion with the ToBoolean abstract method and always follow these simple rules:\n\nObjects evaluate to true\nUndefined evaluates to false\nNull evaluates to false\nBooleans evaluate to the value of the boolean\nNumbers evaluate to false if +0, -0, or NaN, otherwise true\nStrings evaluate to false if an empty string '', otherwise true\n\nif ([0] && []) {\n  \/\/ true\n  \/\/ an array (even an empty one) is an object, objects will evaluate to true\n}\n\n\n\n\n\n15.3 Use shortcuts for booleans, but explicit comparisons for strings and numbers.\n\/\/ bad\nif (isValid === true) {\n  \/\/ ...\n}\n\n\/\/ good\nif (isValid) {\n  \/\/ ...\n}\n\n\/\/ bad\nif (name) {\n  \/\/ ...\n}\n\n\/\/ good\nif (name !== '') {\n  \/\/ ...\n}\n\n\/\/ bad\nif (collection.length) {\n  \/\/ ...\n}\n\n\/\/ good\nif (collection.length > 0) {\n  \/\/ ...\n}\n\n\n\n\n15.4 For more information see Truth Equality and JavaScript by Angus Croll.\n\n\n\n\n15.5 Use braces to create blocks in case and default clauses that contain lexical declarations (e.g. let, const, function, and class). eslint: no-case-declarations\n\nWhy? Lexical declarations are visible in the entire switch block but only get initialized when assigned, which only happens when its case is reached. This causes problems when multiple case clauses attempt to define the same thing.\n\n\/\/ bad\nswitch (foo) {\n  case 1:\n    let x = 1;\n    break;\n  case 2:\n    const y = 2;\n    break;\n  case 3:\n    function f() {\n      \/\/ ...\n    }\n    break;\n  default:\n    class C {}\n}\n\n\/\/ good\nswitch (foo) {\n  case 1: {\n    let x = 1;\n    break;\n  }\n  case 2: {\n    const y = 2;\n    break;\n  }\n  case 3: {\n    function f() {\n      \/\/ ...\n    }\n    break;\n  }\n  case 4:\n    bar();\n    break;\n  default: {\n    class C {}\n  }\n}\n\n\n\n\n\n15.6 Ternaries should not be nested and generally be single line expressions. eslint: no-nested-ternary\n\/\/ bad\nconst foo = maybe1 > maybe2\n  ? \"bar\"\n  : value1 > value2 ? \"baz\" : null;\n\n\/\/ split into 2 separated ternary expressions\nconst maybeNull = value1 > value2 ? 'baz' : null;\n\n\/\/ better\nconst foo = maybe1 > maybe2\n  ? 'bar'\n  : maybeNull;\n\n\/\/ best\nconst foo = maybe1 > maybe2 ? 'bar' : maybeNull;\n\n\n\n\n\n15.7 Avoid unneeded ternary statements. eslint: no-unneeded-ternary\n\/\/ bad\nconst foo = a ? a : b;\nconst bar = c ? true : false;\nconst baz = c ? false : true;\n\n\/\/ good\nconst foo = a || b;\nconst bar = !!c;\nconst baz = !c;\n\n\n\n\n\n15.8 When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: +, -, and ** since their precedence is broadly understood. We recommend enclosing \/ and * in parentheses because their precedence can be ambiguous when they are mixed.\neslint: no-mixed-operators\n\nWhy? This improves readability and clarifies the developer\u2019s intention.\n\n\/\/ bad\nconst foo = a && b < 0 || c > 0 || d + 1 === 0;\n\n\/\/ bad\nconst bar = a ** b - 5 % d;\n\n\/\/ bad\n\/\/ one may be confused into thinking (a || b) && c\nif (a || b && c) {\n  return d;\n}\n\n\/\/ bad\nconst bar = a + b \/ c * d;\n\n\/\/ good\nconst foo = (a && b < 0) || c > 0 || (d + 1 === 0);\n\n\/\/ good\nconst bar = a ** b - (5 % d);\n\n\/\/ good\nif (a || (b && c)) {\n  return d;\n}\n\n\/\/ good\nconst bar = a + (b \/ c) * d;\n\n\n\u2b06 back to top\nBlocks\n\n\n\n16.1 Use braces with all multiline blocks. eslint: nonblock-statement-body-position\n\/\/ bad\nif (test)\n  return false;\n\n\/\/ good\nif (test) return false;\n\n\/\/ good\nif (test) {\n  return false;\n}\n\n\/\/ bad\nfunction foo() { return false; }\n\n\/\/ good\nfunction bar() {\n  return false;\n}\n\n\n\n\n\n16.2 If you\u2019re using multiline blocks with if and else, put else on the same line as your if block\u2019s closing brace. eslint: brace-style\n\/\/ bad\nif (test) {\n  thing1();\n  thing2();\n}\nelse {\n  thing3();\n}\n\n\/\/ good\nif (test) {\n  thing1();\n  thing2();\n} else {\n  thing3();\n}\n\n\n\n\n\n16.3 If an if block always executes a return statement, the subsequent else block is unnecessary. A return in an else if block following an if block that contains a return can be separated into multiple if blocks. eslint: no-else-return\n\/\/ bad\nfunction foo() {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\n\/\/ bad\nfunction cats() {\n  if (x) {\n    return x;\n  } else if (y) {\n    return y;\n  }\n}\n\n\/\/ bad\nfunction dogs() {\n  if (x) {\n    return x;\n  } else {\n    if (y) {\n      return y;\n    }\n  }\n}\n\n\/\/ good\nfunction foo() {\n  if (x) {\n    return x;\n  }\n\n  return y;\n}\n\n\/\/ good\nfunction cats() {\n  if (x) {\n    return x;\n  }\n\n  if (y) {\n    return y;\n  }\n}\n\n\/\/ good\nfunction dogs(x) {\n  if (x) {\n    if (z) {\n      return y;\n    }\n  } else {\n    return z;\n  }\n}\n\n\n\u2b06 back to top\nControl Statements\n\n\n\n17.1 In case your control statement (if, while etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.\n\nWhy? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.\n\n\/\/ bad\nif ((foo === 123 || bar === 'abc') && doesItLookGoodWhenItBecomesThatLong() && isThisReallyHappening()) {\n  thing1();\n}\n\n\/\/ bad\nif (foo === 123 &&\n  bar === 'abc') {\n  thing1();\n}\n\n\/\/ bad\nif (foo === 123\n  && bar === 'abc') {\n  thing1();\n}\n\n\/\/ bad\nif (\n  foo === 123 &&\n  bar === 'abc'\n) {\n  thing1();\n}\n\n\/\/ good\nif (\n  foo === 123\n  && bar === 'abc'\n) {\n  thing1();\n}\n\n\/\/ good\nif (\n  (foo === 123 || bar === 'abc')\n  && doesItLookGoodWhenItBecomesThatLong()\n  && isThisReallyHappening()\n) {\n  thing1();\n}\n\n\/\/ good\nif (foo === 123 && bar === 'abc') {\n  thing1();\n}\n\n\n\n\n\n17.2 Don't use selection operators in place of control statements.\n\/\/ bad\n!isRunning && startRunning();\n\n\/\/ good\nif (!isRunning) {\n  startRunning();\n}\n\n\n\u2b06 back to top\nComments\n\n\n\n18.1 Use \/** ... *\/ for multiline comments.\n\/\/ bad\n\/\/ make() returns a new element\n\/\/ based on the passed in tag name\n\/\/\n\/\/ @param {String} tag\n\/\/ @return {Element} element\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\/\/ good\n\/**\n * make() returns a new element\n * based on the passed-in tag name\n *\/\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\n\n\n\n18.2 Use \/\/ for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it\u2019s on the first line of a block.\n\/\/ bad\nconst active = true;  \/\/ is current tab\n\n\/\/ good\n\/\/ is current tab\nconst active = true;\n\n\/\/ bad\nfunction getType() {\n  console.log('fetching type...');\n  \/\/ set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\/\/ good\nfunction getType() {\n  console.log('fetching type...');\n\n  \/\/ set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\/\/ also good\nfunction getType() {\n  \/\/ set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\n\n\n\n18.3 Start all comments with a space to make it easier to read. eslint: spaced-comment\n\/\/ bad\n\/\/is current tab\nconst active = true;\n\n\/\/ good\n\/\/ is current tab\nconst active = true;\n\n\/\/ bad\n\/**\n *make() returns a new element\n *based on the passed-in tag name\n *\/\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\/\/ good\n\/**\n * make() returns a new element\n * based on the passed-in tag name\n *\/\nfunction make(tag) {\n\n  \/\/ ...\n\n  return element;\n}\n\n\n\n\n18.4 Prefixing your comments with FIXME or TODO helps other developers quickly understand if you\u2019re pointing out a problem that needs to be revisited, or if you\u2019re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are FIXME: -- need to figure this out or TODO: -- need to implement.\n\n\n\n\n18.5 Use \/\/ FIXME: to annotate problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    \/\/ FIXME: shouldn\u2019t use a global here\n    total = 0;\n  }\n}\n\n\n\n\n\n18.6 Use \/\/ TODO: to annotate solutions to problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    \/\/ TODO: total should be configurable by an options param\n    this.total = 0;\n  }\n}\n\n\n\u2b06 back to top\nWhitespace\n\n\n\n19.1 Use soft tabs (space character) set to 2 spaces. eslint: indent\n\/\/ bad\nfunction foo() {\n\u2219\u2219\u2219\u2219let name;\n}\n\n\/\/ bad\nfunction bar() {\n\u2219let name;\n}\n\n\/\/ good\nfunction baz() {\n\u2219\u2219let name;\n}\n\n\n\n\n\n19.2 Place 1 space before the leading brace. eslint: space-before-blocks\n\/\/ bad\nfunction test(){\n  console.log('test');\n}\n\n\/\/ good\nfunction test() {\n  console.log('test');\n}\n\n\/\/ bad\ndog.set('attr',{\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n\/\/ good\ndog.set('attr', {\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n\n\n\n\n19.3 Place 1 space before the opening parenthesis in control statements (if, while etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: keyword-spacing\n\/\/ bad\nif(isJedi) {\n  fight ();\n}\n\n\/\/ good\nif (isJedi) {\n  fight();\n}\n\n\/\/ bad\nfunction fight () {\n  console.log ('Swooosh!');\n}\n\n\/\/ good\nfunction fight() {\n  console.log('Swooosh!');\n}\n\n\n\n\n\n19.4 Set off operators with spaces. eslint: space-infix-ops\n\/\/ bad\nconst x=y+5;\n\n\/\/ good\nconst x = y + 5;\n\n\n\n\n\n19.5 End files with a single newline character. eslint: eol-last\n\/\/ bad\nimport { es6 } from '.\/AirbnbStyleGuide';\n  \/\/ ...\nexport default es6;\n\/\/ bad\nimport { es6 } from '.\/AirbnbStyleGuide';\n  \/\/ ...\nexport default es6;\u21b5\n\u21b5\n\/\/ good\nimport { es6 } from '.\/AirbnbStyleGuide';\n  \/\/ ...\nexport default es6;\u21b5\n\n\n\n\n\n19.6 Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which\nemphasizes that the line is a method call, not a new statement. eslint: newline-per-chained-call no-whitespace-before-property\n\/\/ bad\n$('#items').find('.selected').highlight().end().find('.open').updateCount();\n\n\/\/ bad\n$('#items').\n  find('.selected').\n    highlight().\n    end().\n  find('.open').\n    updateCount();\n\n\/\/ good\n$('#items')\n  .find('.selected')\n    .highlight()\n    .end()\n  .find('.open')\n    .updateCount();\n\n\/\/ bad\nconst leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)\n    .attr('width', (radius + margin) * 2).append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n\/\/ good\nconst leds = stage.selectAll('.led')\n    .data(data)\n  .enter().append('svg:svg')\n    .classed('led', true)\n    .attr('width', (radius + margin) * 2)\n  .append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n\/\/ good\nconst leds = stage.selectAll('.led').data(data);\n\n\n\n\n\n19.7 Leave a blank line after blocks and before the next statement.\n\/\/ bad\nif (foo) {\n  return bar;\n}\nreturn baz;\n\n\/\/ good\nif (foo) {\n  return bar;\n}\n\nreturn baz;\n\n\/\/ bad\nconst obj = {\n  foo() {\n  },\n  bar() {\n  },\n};\nreturn obj;\n\n\/\/ good\nconst obj = {\n  foo() {\n  },\n\n  bar() {\n  },\n};\n\nreturn obj;\n\n\/\/ bad\nconst arr = [\n  function foo() {\n  },\n  function bar() {\n  },\n];\nreturn arr;\n\n\/\/ good\nconst arr = [\n  function foo() {\n  },\n\n  function bar() {\n  },\n];\n\nreturn arr;\n\n\n\n\n\n19.8 Do not pad your blocks with blank lines. eslint: padded-blocks\n\/\/ bad\nfunction bar() {\n\n  console.log(foo);\n\n}\n\n\/\/ bad\nif (baz) {\n\n  console.log(qux);\n} else {\n  console.log(foo);\n\n}\n\n\/\/ bad\nclass Foo {\n\n  constructor(bar) {\n    this.bar = bar;\n  }\n}\n\n\/\/ good\nfunction bar() {\n  console.log(foo);\n}\n\n\/\/ good\nif (baz) {\n  console.log(qux);\n} else {\n  console.log(foo);\n}\n\n\n\n\n\n19.9 Do not use multiple blank lines to pad your code. eslint: no-multiple-empty-lines\n\/\/ bad\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n\n\n    this.email = email;\n\n\n    this.setAge(birthday);\n  }\n\n\n  setAge(birthday) {\n    const today = new Date();\n\n\n    const age = this.getAge(today, birthday);\n\n\n    this.age = age;\n  }\n\n\n  getAge(today, birthday) {\n    \/\/ ..\n  }\n}\n\n\/\/ good\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n    this.email = email;\n    this.setAge(birthday);\n  }\n\n  setAge(birthday) {\n    const today = new Date();\n    const age = getAge(today, birthday);\n    this.age = age;\n  }\n\n  getAge(today, birthday) {\n    \/\/ ..\n  }\n}\n\n\n\n\n\n19.10 Do not add spaces inside parentheses. eslint: space-in-parens\n\/\/ bad\nfunction bar( foo ) {\n  return foo;\n}\n\n\/\/ good\nfunction bar(foo) {\n  return foo;\n}\n\n\/\/ bad\nif ( foo ) {\n  console.log(foo);\n}\n\n\/\/ good\nif (foo) {\n  console.log(foo);\n}\n\n\n\n\n\n19.11 Do not add spaces inside brackets. eslint: array-bracket-spacing\n\/\/ bad\nconst foo = [ 1, 2, 3 ];\nconsole.log(foo[ 0 ]);\n\n\/\/ good\nconst foo = [1, 2, 3];\nconsole.log(foo[0]);\n\n\n\n\n\n19.12 Add spaces inside curly braces. eslint: object-curly-spacing\n\/\/ bad\nconst foo = {clark: 'kent'};\n\n\/\/ good\nconst foo = { clark: 'kent' };\n\n\n\n\n\n19.13 Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per above, long strings are exempt from this rule, and should not be broken up. eslint: max-len\n\nWhy? This ensures readability and maintainability.\n\n\/\/ bad\nconst foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy;\n\n\/\/ bad\n$.ajax({ method: 'POST', url: 'https:\/\/airbnb.com\/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.'));\n\n\/\/ good\nconst foo = jsonData\n  && jsonData.foo\n  && jsonData.foo.bar\n  && jsonData.foo.bar.baz\n  && jsonData.foo.bar.baz.quux\n  && jsonData.foo.bar.baz.quux.xyzzy;\n\n\/\/ good\n$.ajax({\n  method: 'POST',\n  url: 'https:\/\/airbnb.com\/',\n  data: { name: 'John' },\n})\n  .done(() => console.log('Congratulations!'))\n  .fail(() => console.log('You have failed this city.'));\n\n\n\n\n\n19.14 Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: block-spacing\n\/\/ bad\nfunction foo() {return true;}\nif (foo) { bar = 0;}\n\n\/\/ good\nfunction foo() { return true; }\nif (foo) { bar = 0; }\n\n\n\n\n\n19.15 Avoid spaces before commas and require a space after commas. eslint: comma-spacing\n\/\/ bad\nvar foo = 1,bar = 2;\nvar arr = [1 , 2];\n\n\/\/ good\nvar foo = 1, bar = 2;\nvar arr = [1, 2];\n\n\n\n\n\n19.16 Enforce spacing inside of computed property brackets. eslint: computed-property-spacing\n\/\/ bad\nobj[foo ]\nobj[ 'foo']\nvar x = {[ b ]: a}\nobj[foo[ bar ]]\n\n\/\/ good\nobj[foo]\nobj['foo']\nvar x = { [b]: a }\nobj[foo[bar]]\n\n\n\n\n\n19.17 Avoid spaces between functions and their invocations. eslint: func-call-spacing\n\/\/ bad\nfunc ();\n\nfunc\n();\n\n\/\/ good\nfunc();\n\n\n\n\n\n19.18 Enforce spacing between keys and values in object literal properties. eslint: key-spacing\n\/\/ bad\nvar obj = { foo : 42 };\nvar obj2 = { foo:42 };\n\n\/\/ good\nvar obj = { foo: 42 };\n\n\n\n\n19.19 Avoid trailing spaces at the end of lines. eslint: no-trailing-spaces\n\n\n\n\n19.20 Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: no-multiple-empty-lines\n\/\/ bad - multiple empty lines\nvar x = 1;\n\n\nvar y = 2;\n\n\/\/ bad - 2+ newlines at end of file\nvar x = 1;\nvar y = 2;\n\n\n\/\/ bad - 1+ newline(s) at beginning of file\n\nvar x = 1;\nvar y = 2;\n\n\/\/ good\nvar x = 1;\nvar y = 2;\n\n\n\u2b06 back to top\nCommas\n\n\n\n20.1 Leading commas: Nope. eslint: comma-style\n\/\/ bad\nconst story = [\n    once\n  , upon\n  , aTime\n];\n\n\/\/ good\nconst story = [\n  once,\n  upon,\n  aTime,\n];\n\n\/\/ bad\nconst hero = {\n    firstName: 'Ada'\n  , lastName: 'Lovelace'\n  , birthYear: 1815\n  , superPower: 'computers'\n};\n\n\/\/ good\nconst hero = {\n  firstName: 'Ada',\n  lastName: 'Lovelace',\n  birthYear: 1815,\n  superPower: 'computers',\n};\n\n\n\n\n\n20.2 Additional trailing comma: Yup. eslint: comma-dangle\n\nWhy? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don\u2019t have to worry about the trailing comma problem in legacy browsers.\n\n\/\/ bad - git diff without trailing comma\nconst hero = {\n     firstName: 'Florence',\n-    lastName: 'Nightingale'\n+    lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing']\n};\n\n\/\/ good - git diff with trailing comma\nconst hero = {\n     firstName: 'Florence',\n     lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing'],\n};\n\/\/ bad\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully'\n};\n\nconst heroes = [\n  'Batman',\n  'Superman'\n];\n\n\/\/ good\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully',\n};\n\nconst heroes = [\n  'Batman',\n  'Superman',\n];\n\n\/\/ bad\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf\n) {\n  \/\/ does nothing\n}\n\n\/\/ good\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n) {\n  \/\/ does nothing\n}\n\n\/\/ good (note that a comma must not appear after a \"rest\" element)\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n) {\n  \/\/ does nothing\n}\n\n\/\/ bad\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf\n);\n\n\/\/ good\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n);\n\n\/\/ good (note that a comma must not appear after a \"rest\" element)\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n);\n\n\n\u2b06 back to top\nSemicolons\n\n\n\n21.1 Yup. eslint: semi\n\nWhy? When JavaScript encounters a line break without a semicolon, it uses a set of rules called Automatic Semicolon Insertion to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.\n\n\/\/ bad - raises exception\nconst luke = {}\nconst leia = {}\n[luke, leia].forEach((jedi) => jedi.father = 'vader')\n\n\/\/ bad - raises exception\nconst reaction = \"No! That\u2019s impossible!\"\n(async function meanwhileOnTheFalcon() {\n  \/\/ handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  \/\/ ...\n}())\n\n\/\/ bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!\nfunction foo() {\n  return\n    'search your feelings, you know it to be foo'\n}\n\n\/\/ good\nconst luke = {};\nconst leia = {};\n[luke, leia].forEach((jedi) => {\n  jedi.father = 'vader';\n});\n\n\/\/ good\nconst reaction = \"No! That\u2019s impossible!\";\n(async function meanwhileOnTheFalcon() {\n  \/\/ handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  \/\/ ...\n}());\n\n\/\/ good\nfunction foo() {\n  return 'search your feelings, you know it to be foo';\n}\nRead more.\n\n\n\u2b06 back to top\nType Casting & Coercion\n\n\n22.1 Perform type coercion at the beginning of the statement.\n\n\n\n\n22.2 Strings: eslint: no-new-wrappers\n\/\/ => this.reviewScore = 9;\n\n\/\/ bad\nconst totalScore = new String(this.reviewScore); \/\/ typeof totalScore is \"object\" not \"string\"\n\n\/\/ bad\nconst totalScore = this.reviewScore + ''; \/\/ invokes this.reviewScore.valueOf()\n\n\/\/ bad\nconst totalScore = this.reviewScore.toString(); \/\/ isn\u2019t guaranteed to return a string\n\n\/\/ good\nconst totalScore = String(this.reviewScore);\n\n\n\n\n\n22.3 Numbers: Use Number for type casting and parseInt always with a radix for parsing strings. eslint: radix no-new-wrappers\n\nWhy? The parseInt function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is undefined or 0, it is assumed to be 10 except when the number begins with the character pairs 0x or 0X, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.\n\nconst inputValue = '4';\n\n\/\/ bad\nconst val = new Number(inputValue);\n\n\/\/ bad\nconst val = +inputValue;\n\n\/\/ bad\nconst val = inputValue >> 0;\n\n\/\/ bad\nconst val = parseInt(inputValue);\n\n\/\/ good\nconst val = Number(inputValue);\n\n\/\/ good\nconst val = parseInt(inputValue, 10);\n\n\n\n\n\n22.4 If for whatever reason you are doing something wild and parseInt is your bottleneck and need to use Bitshift for performance reasons, leave a comment explaining why and what you\u2019re doing.\n\/\/ good\n\/**\n * parseInt was the reason my code was slow.\n * Bitshifting the String to coerce it to a\n * Number made it a lot faster.\n *\/\nconst val = inputValue >> 0;\n\n\n\n\n\n22.5 Note: Be careful when using bitshift operations. Numbers are represented as 64-bit values, but bitshift operations always return a 32-bit integer (source). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. Discussion. Largest signed 32-bit Int is 2,147,483,647:\n2147483647 >> 0; \/\/ => 2147483647\n2147483648 >> 0; \/\/ => -2147483648\n2147483649 >> 0; \/\/ => -2147483647\n\n\n\n\n\n22.6 Booleans: eslint: no-new-wrappers\nconst age = 0;\n\n\/\/ bad\nconst hasAge = new Boolean(age);\n\n\/\/ good\nconst hasAge = Boolean(age);\n\n\/\/ best\nconst hasAge = !!age;\n\n\n\u2b06 back to top\nNaming Conventions\n\n\n\n23.1 Avoid single letter names. Be descriptive with your naming. eslint: id-length\n\/\/ bad\nfunction q() {\n  \/\/ ...\n}\n\n\/\/ good\nfunction query() {\n  \/\/ ...\n}\n\n\n\n\n\n23.2 Use camelCase when naming objects, functions, and instances. eslint: camelcase\n\/\/ bad\nconst OBJEcttsssss = {};\nconst this_is_my_object = {};\nfunction c() {}\n\n\/\/ good\nconst thisIsMyObject = {};\nfunction thisIsMyFunction() {}\n\n\n\n\n\n23.3 Use PascalCase only when naming constructors or classes. eslint: new-cap\n\/\/ bad\nfunction user(options) {\n  this.name = options.name;\n}\n\nconst bad = new user({\n  name: 'nope',\n});\n\n\/\/ good\nclass User {\n  constructor(options) {\n    this.name = options.name;\n  }\n}\n\nconst good = new User({\n  name: 'yup',\n});\n\n\n\n\n\n23.4 Do not use trailing or leading underscores. eslint: no-underscore-dangle\n\nWhy? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean \u201cprivate\u201d, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won\u2019t count as breaking, or that tests aren\u2019t needed. tl;dr: if you want something to be \u201cprivate\u201d, it must not be observably present.\n\n\/\/ bad\nthis.__firstName__ = 'Panda';\nthis.firstName_ = 'Panda';\nthis._firstName = 'Panda';\n\n\/\/ good\nthis.firstName = 'Panda';\n\n\/\/ good, in environments where WeakMaps are available\n\/\/ see https:\/\/kangax.github.io\/compat-table\/es6\/#test-WeakMap\nconst firstNames = new WeakMap();\nfirstNames.set(this, 'Panda');\n\n\n\n\n\n23.5 Don\u2019t save references to this. Use arrow functions or Function#bind.\n\/\/ bad\nfunction foo() {\n  const self = this;\n  return function () {\n    console.log(self);\n  };\n}\n\n\/\/ bad\nfunction foo() {\n  const that = this;\n  return function () {\n    console.log(that);\n  };\n}\n\n\/\/ good\nfunction foo() {\n  return () => {\n    console.log(this);\n  };\n}\n\n\n\n\n\n23.6 A base filename should exactly match the name of its default export.\n\/\/ file 1 contents\nclass CheckBox {\n  \/\/ ...\n}\nexport default CheckBox;\n\n\/\/ file 2 contents\nexport default function fortyTwo() { return 42; }\n\n\/\/ file 3 contents\nexport default function insideDirectory() {}\n\n\/\/ in some other file\n\/\/ bad\nimport CheckBox from '.\/checkBox'; \/\/ PascalCase import\/export, camelCase filename\nimport FortyTwo from '.\/FortyTwo'; \/\/ PascalCase import\/filename, camelCase export\nimport InsideDirectory from '.\/InsideDirectory'; \/\/ PascalCase import\/filename, camelCase export\n\n\/\/ bad\nimport CheckBox from '.\/check_box'; \/\/ PascalCase import\/export, snake_case filename\nimport forty_two from '.\/forty_two'; \/\/ snake_case import\/filename, camelCase export\nimport inside_directory from '.\/inside_directory'; \/\/ snake_case import, camelCase export\nimport index from '.\/inside_directory\/index'; \/\/ requiring the index file explicitly\nimport insideDirectory from '.\/insideDirectory\/index'; \/\/ requiring the index file explicitly\n\n\/\/ good\nimport CheckBox from '.\/CheckBox'; \/\/ PascalCase export\/import\/filename\nimport fortyTwo from '.\/fortyTwo'; \/\/ camelCase export\/import\/filename\nimport insideDirectory from '.\/insideDirectory'; \/\/ camelCase export\/import\/directory name\/implicit \"index\"\n\/\/ ^ supports both insideDirectory.js and insideDirectory\/index.js\n\n\n\n\n\n23.7 Use camelCase when you export-default a function. Your filename should be identical to your function\u2019s name.\nfunction makeStyleGuide() {\n  \/\/ ...\n}\n\nexport default makeStyleGuide;\n\n\n\n\n\n23.8 Use PascalCase when you export a constructor \/ class \/ singleton \/ function library \/ bare object.\nconst AirbnbStyleGuide = {\n  es6: {\n  },\n};\n\nexport default AirbnbStyleGuide;\n\n\n\n\n\n23.9 Acronyms and initialisms should always be all uppercased, or all lowercased.\n\nWhy? Names are for readability, not to appease a computer algorithm.\n\n\/\/ bad\nimport SmsContainer from '.\/containers\/SmsContainer';\n\n\/\/ bad\nconst HttpRequests = [\n  \/\/ ...\n];\n\n\/\/ good\nimport SMSContainer from '.\/containers\/SMSContainer';\n\n\/\/ good\nconst HTTPRequests = [\n  \/\/ ...\n];\n\n\/\/ also good\nconst httpRequests = [\n  \/\/ ...\n];\n\n\/\/ best\nimport TextMessageContainer from '.\/containers\/TextMessageContainer';\n\n\/\/ best\nconst requests = [\n  \/\/ ...\n];\n\n\n\n\n\n23.10 You may optionally uppercase a constant only if it (1) is exported, (2) is a const (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.\n\nWhy? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.\n\n\nWhat about all const variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.\nWhat about exported objects? - Uppercase at the top level of export (e.g. EXPORTED_OBJECT.key) and maintain that all nested properties do not change.\n\n\/\/ bad\nconst PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';\n\n\/\/ bad\nexport const THING_TO_BE_CHANGED = 'should obviously not be uppercased';\n\n\/\/ bad\nexport let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';\n\n\/\/ ---\n\n\/\/ allowed but does not supply semantic value\nexport const apiKey = 'SOMEKEY';\n\n\/\/ better in most cases\nexport const API_KEY = 'SOMEKEY';\n\n\/\/ ---\n\n\/\/ bad - unnecessarily uppercases key while adding no semantic value\nexport const MAPPING = {\n  KEY: 'value'\n};\n\n\/\/ good\nexport const MAPPING = {\n  key: 'value'\n};\n\n\n\u2b06 back to top\nAccessors\n\n\n24.1 Accessor functions for properties are not required.\n\n\n\n\n24.2 Do not use JavaScript getters\/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use getVal() and setVal('hello').\n\/\/ bad\nclass Dragon {\n  get age() {\n    \/\/ ...\n  }\n\n  set age(value) {\n    \/\/ ...\n  }\n}\n\n\/\/ good\nclass Dragon {\n  getAge() {\n    \/\/ ...\n  }\n\n  setAge(value) {\n    \/\/ ...\n  }\n}\n\n\n\n\n\n24.3 If the property\/method is a boolean, use isVal() or hasVal().\n\/\/ bad\nif (!dragon.age()) {\n  return false;\n}\n\n\/\/ good\nif (!dragon.hasAge()) {\n  return false;\n}\n\n\n\n\n\n24.4 It\u2019s okay to create get() and set() functions, but be consistent.\nclass Jedi {\n  constructor(options = {}) {\n    const lightsaber = options.lightsaber || 'blue';\n    this.set('lightsaber', lightsaber);\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n\n  get(key) {\n    return this[key];\n  }\n}\n\n\n\u2b06 back to top\nEvents\n\n\n\n25.1 When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a \"hash\") instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:\n\/\/ bad\n$(this).trigger('listingUpdated', listing.id);\n\n\/\/ ...\n\n$(this).on('listingUpdated', (e, listingID) => {\n  \/\/ do something with listingID\n});\nprefer:\n\/\/ good\n$(this).trigger('listingUpdated', { listingID: listing.id });\n\n\/\/ ...\n\n$(this).on('listingUpdated', (e, data) => {\n  \/\/ do something with data.listingID\n});\n\n\n\u2b06 back to top\njQuery\n\n\n\n26.1 Prefix jQuery object variables with a $.\n\/\/ bad\nconst sidebar = $('.sidebar');\n\n\/\/ good\nconst $sidebar = $('.sidebar');\n\n\/\/ good\nconst $sidebarBtn = $('.sidebar-btn');\n\n\n\n\n\n26.2 Cache jQuery lookups.\n\/\/ bad\nfunction setSidebar() {\n  $('.sidebar').hide();\n\n  \/\/ ...\n\n  $('.sidebar').css({\n    'background-color': 'pink',\n  });\n}\n\n\/\/ good\nfunction setSidebar() {\n  const $sidebar = $('.sidebar');\n  $sidebar.hide();\n\n  \/\/ ...\n\n  $sidebar.css({\n    'background-color': 'pink',\n  });\n}\n\n\n\n\n26.3 For DOM queries use Cascading $('.sidebar ul') or parent > child $('.sidebar > ul'). jsPerf\n\n\n\n\n26.4 Use find with scoped jQuery object queries.\n\/\/ bad\n$('ul', '.sidebar').hide();\n\n\/\/ bad\n$('.sidebar').find('ul').hide();\n\n\/\/ good\n$('.sidebar ul').hide();\n\n\/\/ good\n$('.sidebar > ul').hide();\n\n\/\/ good\n$sidebar.find('ul').hide();\n\n\n\u2b06 back to top\nECMAScript 5 Compatibility\n\n\n27.1 Refer to Kangax\u2019s ES5 compatibility table.\n\n\u2b06 back to top\n\nECMAScript 6+ (ES 2015+) Styles\n\n\n28.1 This is a collection of links to the various ES6+ features.\n\n\nArrow Functions\nClasses\nObject Shorthand\nObject Concise\nObject Computed Properties\nTemplate Strings\nDestructuring\nDefault Parameters\nRest\nArray Spreads\nLet and Const\nExponentiation Operator\nIterators and Generators\nModules\n\n\n\n\n28.2 Do not use TC39 proposals that have not reached stage 3.\n\nWhy? They are not finalized, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.\n\n\n\n\u2b06 back to top\nStandard Library\nThe Standard Library\ncontains utilities that are functionally broken but remain for legacy reasons.\n\n\n\n29.1 Use Number.isNaN instead of global isNaN.\neslint: no-restricted-globals\n\nWhy? The global isNaN coerces non-numbers to numbers, returning true for anything that coerces to NaN.\nIf this behavior is desired, make it explicit.\n\n\/\/ bad\nisNaN('1.2'); \/\/ false\nisNaN('1.2.3'); \/\/ true\n\n\/\/ good\nNumber.isNaN('1.2.3'); \/\/ false\nNumber.isNaN(Number('1.2.3')); \/\/ true\n\n\n\n\n\n29.2 Use Number.isFinite instead of global isFinite.\neslint: no-restricted-globals\n\nWhy? The global isFinite coerces non-numbers to numbers, returning true for anything that coerces to a finite number.\nIf this behavior is desired, make it explicit.\n\n\/\/ bad\nisFinite('2e3'); \/\/ true\n\n\/\/ good\nNumber.isFinite('2e3'); \/\/ false\nNumber.isFinite(parseInt('2e3', 10)); \/\/ true\n\n\n\u2b06 back to top\nTesting\n\n\n\n30.1 Yup.\nfunction foo() {\n  return true;\n}\n\n\n\n\n30.2 No, but seriously:\n\nWhichever testing framework you use, you should be writing tests!\nStrive to write many small pure functions, and minimize where mutations occur.\nBe cautious about stubs and mocks - they can make your tests more brittle.\nWe primarily use mocha and jest at Airbnb. tape is also used occasionally for small, separate modules.\n100% test coverage is a good goal to strive for, even if it\u2019s not always practical to reach it.\nWhenever you fix a bug, write a regression test. A bug fixed without a regression test is almost certainly going to break again in the future.\n\n\n\n\u2b06 back to top\nPerformance\n\nOn Layout & Web Performance\nString vs Array Concat\nTry\/Catch Cost In a Loop\nBang Function\njQuery Find vs Context, Selector\ninnerHTML vs textContent for script text\nLong String Concatenation\nAre JavaScript functions like map(), reduce(), and filter() optimized for traversing arrays?\nLoading...\n\n\u2b06 back to top\nResources\nLearning ES6+\n\nLatest ECMA spec\nExploringJS\nES6 Compatibility Table\nComprehensive Overview of ES6 Features\n\nRead This\n\nStandard ECMA-262\n\nTools\n\nCode Style Linters\n\nESlint - Airbnb Style .eslintrc\nJSHint - Airbnb Style .jshintrc\n\n\nNeutrino Preset - @neutrinojs\/airbnb\n\nOther Style Guides\n\nGoogle JavaScript Style Guide\nGoogle JavaScript Style Guide (Old)\njQuery Core Style Guidelines\nPrinciples of Writing Consistent, Idiomatic JavaScript\nStandardJS\n\nOther Styles\n\nNaming this in nested functions - Christian Johansen\nConditional Callbacks - Ross Allen\nPopular JavaScript Coding Conventions on GitHub - JeongHoon Byun\nMultiple var statements in JavaScript, not superfluous - Ben Alman\n\nFurther Reading\n\nUnderstanding JavaScript Closures - Angus Croll\nBasic JavaScript for the impatient programmer - Dr. Axel Rauschmayer\nYou Might Not Need jQuery - Zack Bloom & Adam Schwartz\nES6 Features - Luke Hoban\nFrontend Guidelines - Benjamin De Cock\n\nBooks\n\nJavaScript: The Good Parts - Douglas Crockford\nJavaScript Patterns - Stoyan Stefanov\nPro JavaScript Design Patterns - Ross Harmes and Dustin Diaz\nHigh Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders\nMaintainable JavaScript - Nicholas C. Zakas\nJavaScript Web Applications - Alex MacCaw\nPro JavaScript Techniques - John Resig\nSmashing Node.js: JavaScript Everywhere - Guillermo Rauch\nSecrets of the JavaScript Ninja - John Resig and Bear Bibeault\nHuman JavaScript - Henrik Joreteg\nSuperhero.js - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy\nJSBooks - Julien Bouquillon\nThird Party JavaScript - Ben Vinegar and Anton Kovalyov\nEffective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman\nEloquent JavaScript - Marijn Haverbeke\nYou Don\u2019t Know JS: ES6 & Beyond - Kyle Simpson\n\nBlogs\n\nJavaScript Weekly\nJavaScript, JavaScript...\nBocoup Weblog\nAdequately Good\nNCZOnline\nPerfection Kills\nBen Alman\nDmitry Baranovskiy\nnettuts\n\nPodcasts\n\nJavaScript Air\nJavaScript Jabber\n\n\u2b06 back to top\nIn the Wild\nThis is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.\n\n123erfasst: 123erfasst\/javascript\n3blades: 3Blades\n4Catalyzer: 4Catalyzer\/javascript\nAan Zee: AanZee\/javascript\nAdult Swim: adult-swim\/javascript\nAirbnb: airbnb\/javascript\nAltSchool: AltSchool\/javascript\nApartmint: apartmint\/javascript\nAscribe: ascribe\/javascript\nAvalara: avalara\/javascript\nAvant: avantcredit\/javascript\nAxept: axept\/javascript\nBashPros: BashPros\/javascript\nBillabong: billabong\/javascript\nBisk: bisk\nBonhomme: bonhommeparis\/javascript\nBrainshark: brainshark\/javascript\nCaseNine: CaseNine\/javascript\nCerner: Cerner\nChartboost: ChartBoost\/javascript-style-guide\nCoeur d'Alene Tribe: www.cdatribe-nsn.gov\nComparaOnline: comparaonline\/javascript\nCompass Learning: compasslearning\/javascript-style-guide\nDailyMotion: dailymotion\/javascript\nDoSomething: DoSomething\/eslint-config\nDigitpaint digitpaint\/javascript\nDrupal: www.drupal.org\nEcosia: ecosia\/javascript\nEvernote: evernote\/javascript-style-guide\nEvolution Gaming: evolution-gaming\/javascript\nEvozonJs: evozonjs\/javascript\nExactTarget: ExactTarget\/javascript\nExpensify Expensify\/Style-Guide\nFlexberry: Flexberry\/javascript-style-guide\nGawker Media: gawkermedia\nGeneral Electric: GeneralElectric\/javascript\nGeneration Tux: GenerationTux\/javascript\nGoodData: gooddata\/gdc-js-style\nGreenChef: greenchef\/javascript\nGrooveshark: grooveshark\/javascript\nGrupo-Abraxas: Grupo-Abraxas\/javascript\nHappeo: happeo\/javascript\nHoney: honeyscience\/javascript\nHow About We: howaboutwe\/javascript\nHuballin: huballin\nHubSpot: HubSpot\/javascript\nHyper: hyperoslo\/javascript-playbook\nInterCity Group: intercitygroup\/javascript-style-guide\nJam3: Jam3\/Javascript-Code-Conventions\nJeopardyBot: kesne\/jeopardy-bot\nJSSolutions: JSSolutions\/javascript\nKaplan Komputing: kaplankomputing\/javascript\nKickorStick: kickorstick\nKinetica Solutions: kinetica\/javascript\nLEINWAND: LEINWAND\/javascript\nLonely Planet: lonelyplanet\/javascript\nM2GEN: M2GEN\/javascript\nMighty Spring: mightyspring\/javascript\nMinnPost: MinnPost\/javascript\nMitocGroup: MitocGroup\/javascript\nModCloth: modcloth\/javascript\nMoney Advice Service: moneyadviceservice\/javascript\nMuber: muber\nNational Geographic: natgeo\nNimbl3: nimbl3\/javascript\nNullDev: NullDevCo\/JavaScript-Styleguide\nNulogy: nulogy\/javascript\nOrange Hill Development: orangehill\/javascript\nOrion Health: orionhealth\/javascript\nOutBoxSoft: OutBoxSoft\/javascript\nPeerby: Peerby\/javascript\nPier 1: Pier1\/javascript\nQotto: Qotto\/javascript-style-guide\nRazorfish: razorfish\/javascript-style-guide\nreddit: reddit\/styleguide\/javascript\nReact: facebook.github.io\/react\/contributing\/how-to-contribute.html#style-guide\nREI: reidev\/js-style-guide\nRipple: ripple\/javascript-style-guide\nSainsbury\u2019s Supermarkets: jsainsburyplc\nSeekingAlpha: seekingalpha\/javascript-style-guide\nShutterfly: shutterfly\/javascript\nSourcetoad: sourcetoad\/javascript\nSpringload: springload\nStratoDem Analytics: stratodem\/javascript\nSteelKiwi Development: steelkiwi\/javascript\nStudentSphere: studentsphere\/javascript\nSwoopApp: swoopapp\/javascript\nSysGarage: sysgarage\/javascript-style-guide\nSyzygy Warsaw: syzygypl\/javascript\nTarget: target\/javascript\nTerra: terra\nTheLadders: TheLadders\/javascript\nThe Nerdery: thenerdery\/javascript-standards\nTomify: tomprats\nTraitify: traitify\/eslint-config-traitify\nT4R Technology: T4R-Technology\/javascript\nUrbanSim: urbansim\nVoxFeed: VoxFeed\/javascript-style-guide\nWeBox Studio: weboxstudio\/javascript\nWeggo: Weggo\/javascript\nZillow: zillow\/javascript\nZocDoc: ZocDoc\/javascript\n\n\u2b06 back to top\nTranslation\nThis style guide is also available in other languages:\n\n Brazilian Portuguese: armoucar\/javascript-style-guide\n Bulgarian: borislavvv\/javascript\n Catalan: fpmweb\/javascript-style-guide\n Chinese (Simplified): lin-123\/javascript\n Chinese (Traditional): jigsawye\/javascript\n French: nmussy\/javascript-style-guide\n German: timofurrer\/javascript-style-guide\n Italian: sinkswim\/javascript-style-guide\n Japanese: mitsuruog\/javascript-style-guide\n Korean: ParkSB\/javascript-style-guide\n Russian: leonidlebedev\/javascript-airbnb\n Spanish: paolocarrasco\/javascript-style-guide\n Thai: lvarayut\/javascript-style-guide\n Turkish: eraycetinay\/javascript\n Ukrainian: ivanzusko\/javascript\n Vietnam: dangkyokhoang\/javascript-style-guide\n\nThe JavaScript Style Guide Guide\n\nReference\n\nChat With Us About JavaScript\n\nFind us on gitter.\n\nContributors\n\nView Contributors\n\nLicense\n(The MIT License)\nCopyright (c) 2012 Airbnb\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\u2b06 back to top\nAmendments\nWe encourage you to fork this guide and change the rules to fit your team\u2019s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.\n};\n","5":"D3: Data-Driven Documents\n\nD3 (or D3.js) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.\nResources\n\nIntroduction\nAPI Reference\nReleases\nExamples\nWiki\n\nInstalling\nIf you use npm, npm install d3. Otherwise, download the latest release. The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from d3js.org, CDNJS, or unpkg. For example:\n<script src=\"https:\/\/d3js.org\/d3.v6.js\"><\/script>\nFor the minified version:\n<script src=\"https:\/\/d3js.org\/d3.v6.min.js\"><\/script>\nYou can also use the standalone D3 microlibraries. For example, d3-selection:\n<script src=\"https:\/\/d3js.org\/d3-selection.v2.js\"><\/script>\nD3 is written using ES2015 modules. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:\nimport {scaleLinear} from \"d3-scale\";\nOr import everything into a namespace (here, d3):\nimport * as d3 from \"d3\";\nIn Node:\nconst d3 = require(\"d3\");\nYou can also require individual modules and combine them into a d3 object using Object.assign:\nconst d3 = Object.assign({}, require(\"d3-format\"), require(\"d3-geo\"), require(\"d3-geo-projection\"));\n","6":"\n\n    React Native\n  \n\n\nLearn once, write anywhere:\n  Build mobile apps with React.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\n \u00b7 \nLearn the Basics\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \nCommunity\n \u00b7 \nSupport\n\nReact Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\nDeclarative. React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\nComponent-Based. Build encapsulated components that manage their state, then compose them to make complex UIs.\nDeveloper Velocity. See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\nPortability. Reuse code across iOS, Android, and other platforms.\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our ecosystem overview.\nContents\n\nRequirements\nBuilding your first React Native app\nDocumentation\nUpgrading\nHow to Contribute\nCode of Conduct\nLicense\n\n\ud83d\udccb Requirements\nReact Native apps may target iOS 10.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like Expo can be used to work around this.\n\ud83c\udf89 Building your first React Native app\nFollow the Getting Started guide. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\nTrying out React Native\nCreating a New Application\nAdding React Native to an Existing Application\n\n\ud83d\udcd6 Documentation\nThe full documentation for React Native can be found on our website.\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the React documentation.\nThe source for the React Native documentation and website is hosted on a separate repo, @facebook\/react-native-website.\n\ud83d\ude80 Upgrading\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the Upgrading Guide for instructions.\nReact Native releases are discussed in the React Native Community, @react-native-community\/react-native-releases.\n\ud83d\udc4f How to Contribute\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our Contributing Guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\nOpen Source Roadmap\nYou can learn more about our vision for React Native in the Roadmap.\nGood First Issues\nWe have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\nDiscussions\nLarger discussions and proposals are discussed in @react-native-community\/discussions-and-proposals.\n\ud83d\udcc4 License\nReact Native is MIT licensed, as found in the LICENSE file.\nReact Native documentation is Creative Commons licensed, as found in the LICENSE-docs file.\n","7":"JavaScript Algorithms and Data Structures\n\n\nThis repository contains JavaScript based examples of many\npopular algorithms and data structures.\nEach algorithm and data structure has its own separate README\nwith related explanations and links for further reading (including ones\nto YouTube videos).\nRead this in other languages:\n\u7b80\u4f53\u4e2d\u6587,\n\u7e41\u9ad4\u4e2d\u6587,\n\ud55c\uad6d\uc5b4,\n\u65e5\u672c\u8a9e,\nPolski,\nFran\u00e7ais,\nEspa\u00f1ol,\nPortugu\u00eas,\nT\u00fcrk\n\u261d Note that this project is meant to be used for learning and researching purposes\nonly and it is not meant to be used for production.\nData Structures\nA data structure is a particular way of organizing and storing data in a computer so that it can\nbe accessed and modified efficiently. More precisely, a data structure is a collection of data\nvalues, the relationships among them, and the functions or operations that can be applied to\nthe data.\nB - Beginner, A - Advanced\n\nB Linked List\nB Doubly Linked List\nB Queue\nB Stack\nB Hash Table\nB Heap - max and min heap versions\nB Priority Queue\nA Trie\nA Tree\n\nA Binary Search Tree\nA AVL Tree\nA Red-Black Tree\nA Segment Tree - with min\/max\/sum range queries examples\nA Fenwick Tree (Binary Indexed Tree)\n\n\nA Graph (both directed and undirected)\nA Disjoint Set\nA Bloom Filter\n\nAlgorithms\nAn algorithm is an unambiguous specification of how to solve a class of problems. It is\na set of rules that precisely define a sequence of operations.\nB - Beginner, A - Advanced\nAlgorithms by Topic\n\nMath\n\nB Bit Manipulation - set\/get\/update\/clear bits, multiplication\/division by two, make negative etc.\nB Factorial\nB Fibonacci Number - classic and closed-form versions\nB Primality Test (trial division method)\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Least Common Multiple (LCM)\nB Sieve of Eratosthenes - finding all prime numbers up to any given limit\nB Is Power of Two - check if the number is power of two (naive and bitwise algorithms)\nB Pascal's Triangle\nB Complex Number - complex numbers and basic operations with them\nB Radian & Degree - radians to degree and backwards conversion\nB Fast Powering\nA Integer Partition\nA Square Root - Newton's method\nA Liu Hui \u03c0 Algorithm - approximate \u03c0 calculations based on N-gons\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nSets\n\nB Cartesian Product - product of multiple sets\nB Fisher\u2013Yates Shuffle - random permutation of a finite sequence\nA Power Set - all subsets of a set (bitwise and backtracking solutions)\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\nA Longest Common Subsequence (LCS)\nA Longest Increasing Subsequence\nA Shortest Common Supersequence (SCS)\nA Knapsack Problem - \"0\/1\" and \"Unbound\" ones\nA Maximum Subarray - \"Brute Force\" and \"Dynamic Programming\" (Kadane's) versions\nA Combination Sum - find all combinations that form specific sum\n\n\nStrings\n\nB Hamming Distance - number of positions at which the symbols are different\nA Levenshtein Distance - minimum edit distance between two sequences\nA Knuth\u2013Morris\u2013Pratt Algorithm (KMP Algorithm) - substring search (pattern matching)\nA Z Algorithm - substring search (pattern matching)\nA Rabin Karp Algorithm - substring search\nA Longest Common Substring\nA Regular Expression Matching\n\n\nSearches\n\nB Linear Search\nB Jump Search (or Block Search) - search in sorted array\nB Binary Search - search in sorted array\nB Interpolation Search - search in uniformly distributed sorted array\n\n\nSorting\n\nB Bubble Sort\nB Selection Sort\nB Insertion Sort\nB Heap Sort\nB Merge Sort\nB Quicksort - in-place and non-in-place implementations\nB Shellsort\nB Counting Sort\nB Radix Sort\n\n\nLinked Lists\n\nB Straight Traversal\nB Reverse Traversal\n\n\nTrees\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\n\n\nGraphs\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\nB Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Dijkstra Algorithm - finding shortest paths to all graph vertices from single vertex\nA Bellman-Ford Algorithm - finding shortest paths to all graph vertices from single vertex\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Detect Cycle - for both directed and undirected graphs (DFS and Disjoint Set based versions)\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Topological Sorting - DFS method\nA Articulation Points - Tarjan's algorithm (DFS based)\nA Bridges - DFS based algorithm\nA Eulerian Path and Eulerian Circuit - Fleury's algorithm - Visit every edge exactly once\nA Hamiltonian Cycle - Visit every vertex exactly once\nA Strongly Connected Components - Kosaraju's algorithm\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\n\n\nCryptography\n\nB Polynomial Hash - rolling hash function based on polynomial\nB Caesar Cipher - simple substitution cipher\n\n\nMachine Learning\n\nB NanoNeuron - 7 simple JS functions that illustrate how machines can actually learn (forward\/backward propagation)\n\n\nUncategorized\n\nB Tower of Hanoi\nB Square Matrix Rotation - in-place algorithm\nB Jump Game - backtracking, dynamic programming (top-down + bottom-up) and greedy examples\nB Unique Paths - backtracking, dynamic programming and Pascal's Triangle based examples\nB Rain Terraces - trapping rain water problem (dynamic programming and brute force versions)\nB Recursive Staircase - count the number of ways to reach to the top (4 solutions)\nA N-Queens Problem\nA Knight's Tour\n\n\n\nAlgorithms by Paradigm\nAn algorithmic paradigm is a generic method or approach which underlies the design of a class\nof algorithms. It is an abstraction higher than the notion of an algorithm, just as an\nalgorithm is an abstraction higher than a computer program.\n\nBrute Force - look at all the possibilities and selects the best solution\n\nB Linear Search\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Maximum Subarray\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nGreedy - choose the best option at the current time, without any consideration for the future\n\nB Jump Game\nA Unbound Knapsack Problem\nA Dijkstra Algorithm - finding shortest path to all graph vertices\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\n\n\nDivide and Conquer - divide the problem into smaller parts and then solve those parts\n\nB Binary Search\nB Tower of Hanoi\nB Pascal's Triangle\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Merge Sort\nB Quicksort\nB Tree Depth-First Search (DFS)\nB Graph Depth-First Search (DFS)\nB Jump Game\nB Fast Powering\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\n\n\nDynamic Programming - build up a solution using previously found sub-solutions\n\nB Fibonacci Number\nB Jump Game\nB Unique Paths\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Levenshtein Distance - minimum edit distance between two sequences\nA Longest Common Subsequence (LCS)\nA Longest Common Substring\nA Longest Increasing Subsequence\nA Shortest Common Supersequence\nA 0\/1 Knapsack Problem\nA Integer Partition\nA Maximum Subarray\nA Bellman-Ford Algorithm - finding shortest path to all graph vertices\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Regular Expression Matching\n\n\nBacktracking - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test\nif it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a\ndifferent path of finding a solution. Normally the DFS traversal of state-space is being used.\n\nB Jump Game\nB Unique Paths\nB Power Set - all subsets of a set\nA Hamiltonian Cycle - Visit every vertex exactly once\nA N-Queens Problem\nA Knight's Tour\nA Combination Sum - find all combinations that form specific sum\n\n\nBranch & Bound - remember the lowest-cost solution found at each stage of the backtracking\nsearch, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of\na least-cost solution to the problem, in order to discard partial solutions with costs larger than the\nlowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space\ntree is being used.\n\nHow to use this repository\nInstall all dependencies\nnpm install\n\nRun ESLint\nYou may want to run it to check code quality.\nnpm run lint\n\nRun all tests\nnpm test\n\nRun tests by name\nnpm test -- 'LinkedList'\n\nPlayground\nYou may play with data-structures and algorithms in .\/src\/playground\/playground.js file and write\ntests for it in .\/src\/playground\/__test__\/playground.test.js.\nThen just simply run the following command to test if your playground code works as expected:\nnpm test -- 'playground'\n\nUseful Information\nReferences\n\u25b6 Data Structures and Algorithms on YouTube\nBig O Notation\nBig O notation is used to classify algorithms according to how their running time or space requirements grow as the input size grows.\nOn the chart below you may find most common orders of growth of algorithms specified in Big O notation.\n\nSource: Big O Cheat Sheet.\nBelow is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.\n\n\n\nBig O Notation\nComputations for 10 elements\nComputations for 100 elements\nComputations for 1000 elements\n\n\n\n\nO(1)\n1\n1\n1\n\n\nO(log N)\n3\n6\n9\n\n\nO(N)\n10\n100\n1000\n\n\nO(N log N)\n30\n600\n9000\n\n\nO(N^2)\n100\n10000\n1000000\n\n\nO(2^N)\n1024\n1.26e+29\n1.07e+301\n\n\nO(N!)\n3628800\n9.3e+157\n4.02e+2567\n\n\n\nData Structure Operations Complexity\n\n\n\nData Structure\nAccess\nSearch\nInsertion\nDeletion\nComments\n\n\n\n\nArray\n1\nn\nn\nn\n\n\n\nStack\nn\nn\n1\n1\n\n\n\nQueue\nn\nn\n1\n1\n\n\n\nLinked List\nn\nn\n1\nn\n\n\n\nHash Table\n-\nn\nn\nn\nIn case of perfect hash function costs would be O(1)\n\n\nBinary Search Tree\nn\nn\nn\nn\nIn case of balanced tree costs would be O(log(n))\n\n\nB-Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nRed-Black Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nAVL Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nBloom Filter\n-\n1\n1\n-\nFalse positives are possible while searching\n\n\n\nArray Sorting Algorithms Complexity\n\n\n\nName\nBest\nAverage\nWorst\nMemory\nStable\nComments\n\n\n\n\nBubble sort\nn\nn2\nn2\n1\nYes\n\n\n\nInsertion sort\nn\nn2\nn2\n1\nYes\n\n\n\nSelection sort\nn2\nn2\nn2\n1\nNo\n\n\n\nHeap sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\n1\nNo\n\n\n\nMerge sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\nn\nYes\n\n\n\nQuick sort\nn\u00a0log(n)\nn\u00a0log(n)\nn2\nlog(n)\nNo\nQuicksort is usually done in-place with O(log(n)) stack space\n\n\nShell sort\nn\u00a0log(n)\ndepends on gap sequence\nn\u00a0(log(n))2\n1\nNo\n\n\n\nCounting sort\nn + r\nn + r\nn + r\nn + r\nYes\nr - biggest number in array\n\n\nRadix sort\nn * k\nn * k\nn * k\nn + k\nYes\nk - length of longest key\n\n\n\nSupporting the project\nYou may support this project via \u2764\ufe0f\ufe0f GitHub or \u2764\ufe0f\ufe0f Patreon.\n","8":"Create React App  \n\nCreate React apps with no build configuration.\n\nCreating an App \u2013 How to create a new app.\nUser Guide \u2013 How to develop apps bootstrapped with Create React App.\n\nCreate React App works on macOS, Windows, and Linux.\nIf something doesn\u2019t work, please file an issue.\nIf you have questions or need help, please ask in GitHub Discussions.\nQuick Overview\nnpx create-react-app my-app\ncd my-app\nnpm start\nIf you've previously installed create-react-app globally via npm install -g create-react-app, we recommend you uninstall the package using npm uninstall -g create-react-app or yarn global remove create-react-app to ensure that npx always uses the latest version.\n(npx comes with npm 5.2+ and higher, see instructions for older npm versions)\nThen open http:\/\/localhost:3000\/ to see your app.\nWhen you\u2019re ready to deploy to production, create a minified bundle with npm run build.\n\n\n\nGet Started Immediately\nYou don\u2019t need to install or configure tools like webpack or Babel.\nThey are preconfigured and hidden so that you can focus on the code.\nCreate a project, and you\u2019re good to go.\nCreating an App\nYou\u2019ll need to have Node 8.16.0 or Node 10.16.0 or later version on your local development machine (but it\u2019s not required on the server). You can use nvm (macOS\/Linux) or nvm-windows to switch Node versions between different projects.\nTo create a new app, you may choose one of the following methods:\nnpx\nnpx create-react-app my-app\n(npx is a package runner tool that comes with npm 5.2+ and higher, see instructions for older npm versions)\nnpm\nnpm init react-app my-app\nnpm init <initializer> is available in npm 6+\nYarn\nyarn create react-app my-app\nyarn create <starter-kit-package> is available in Yarn 0.25+\nIt will create a directory called my-app inside the current folder.\nInside that directory, it will generate the initial project structure and install the transitive dependencies:\nmy-app\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 manifest.json\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 App.css\n    \u251c\u2500\u2500 App.js\n    \u251c\u2500\u2500 App.test.js\n    \u251c\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.js\n    \u251c\u2500\u2500 logo.svg\n    \u2514\u2500\u2500 serviceWorker.js\n    \u2514\u2500\u2500 setupTests.js\n\nNo configuration or complicated folder structures, only the files you need to build your app.\nOnce the installation is done, you can open your project folder:\ncd my-app\nInside the newly created project, you can run some built-in commands:\nnpm start or yarn start\nRuns the app in development mode.\nOpen http:\/\/localhost:3000 to view it in the browser.\nThe page will automatically reload if you make changes to the code.\nYou will see the build errors and lint warnings in the console.\n\n\n\nnpm test or yarn test\nRuns the test watcher in an interactive mode.\nBy default, runs tests related to files changed since the last commit.\nRead more about testing.\nnpm run build or yarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed.\nUser Guide\nYou can find detailed instructions on using Create React App and many tips in its documentation.\nHow to Update to New Versions?\nPlease refer to the User Guide for this and other information.\nPhilosophy\n\n\nOne Dependency: There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.\n\n\nNo Configuration Required: You don't need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.\n\n\nNo Lock-In: You can \u201ceject\u201d to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.\n\n\nWhat\u2019s Included?\nYour environment will have everything you need to build a modern single-page React app:\n\nReact, JSX, ES6, TypeScript and Flow syntax support.\nLanguage extras beyond ES6 like the object spread operator.\nAutoprefixed CSS, so you don\u2019t need -webkit- or other prefixes.\nA fast interactive unit test runner with built-in support for coverage reporting.\nA live development server that warns about common mistakes.\nA build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.\nAn offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria. (Note: Using the service worker is opt-in as of react-scripts@2.0.0 and higher)\nHassle-free updates for the above tools with a single dependency.\n\nCheck out this guide for an overview of how these tools fit together.\nThe tradeoff is that these tools are preconfigured to work in a specific way. If your project needs more customization, you can \"eject\" and customize it, but then you will need to maintain this configuration.\nPopular Alternatives\nCreate React App is a great fit for:\n\nLearning React in a comfortable and feature-rich development environment.\nStarting new single-page React applications.\nCreating examples with React for your libraries and components.\n\nHere are a few common cases where you might want to try something else:\n\n\nIf you want to try React without hundreds of transitive build tool dependencies, consider using a single HTML file or an online sandbox instead.\n\n\nIf you need to integrate React code with a server-side template framework like Rails, Django or Symfony, or if you\u2019re not building a single-page app, consider using nwb, or Neutrino which are more flexible. For Rails specifically, you can use Rails Webpacker. For Symfony, try Symfony's webpack Encore.\n\n\nIf you need to publish a React component, nwb can also do this, as well as Neutrino's react-components preset.\n\n\nIf you want to do server rendering with React and Node.js, check out Next.js or Razzle. Create React App is agnostic of the backend, and only produces static HTML\/JS\/CSS bundles.\n\n\nIf your website is mostly static (for example, a portfolio or a blog), consider using Gatsby or Next.js. Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.\n\n\nFinally, if you need more customization, check out Neutrino and its React preset.\n\n\nAll of the above tools can work with little to no configuration.\nIf you prefer configuring the build yourself, follow this guide.\nReact Native\nLooking for something similar, but for React Native?\nCheck out Expo CLI.\nContributing\nWe'd love to have your helping hand on create-react-app! See CONTRIBUTING.md for more information on what we're looking for and how to get started.\nSupporting Create React App\nCreate React App is a community maintained project and all contributors are volunteers. If you'd like to support the future development of Create React App then please consider donating to our Open Collective.\nCredits\nThis project exists thanks to all the people who contribute.\n\nThanks to Netlify for hosting our documentation.\nAcknowledgements\nWe are grateful to the authors of existing related projects for their ideas and collaboration:\n\n@eanplatter\n@insin\n@mxstbr\n\nLicense\nCreate React App is open source software licensed as MIT. The Create React App logo is licensed  under a Creative Commons Attribution 4.0 International license.\n","9":"axios\n\n\n\n\n\n\n\n\nPromise based HTTP client for the browser and node.js\nTable of Contents\n\nFeatures\nBrowser Support\nInstalling\nExample\nAxios API\nRequest method aliases\nConcurrency (Deprecated)\nCreating an instance\nInstance methods\nRequest Config\nResponse Schema\nConfig Defaults\n\nGlobal axios defaults\nCustom instance defaults\nConfig order of precedence\n\n\nInterceptors\nHandling Errors\nCancellation\nUsing application\/x-www-form-urlencoded format\n\nBrowser\nNode.js\n\nQuery string\nForm data\n\n\n\n\nSemver\nPromises\nTypeScript\nResources\nCredits\nLicense\n\nFeatures\n\nMake XMLHttpRequests from the browser\nMake http requests from node.js\nSupports the Promise API\nIntercept request and response\nTransform request and response data\nCancel requests\nAutomatic transforms for JSON data\nClient side support for protecting against XSRF\n\nBrowser Support\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\n11 \u2714\n\n\n\n\nInstalling\nUsing npm:\n$ npm install axios\nUsing bower:\n$ bower install axios\nUsing yarn:\n$ yarn add axios\nUsing jsDelivr CDN:\n<script src=\"https:\/\/cdn.jsdelivr.net\/npm\/axios\/dist\/axios.min.js\"><\/script>\nUsing unpkg CDN:\n<script src=\"https:\/\/unpkg.com\/axios\/dist\/axios.min.js\"><\/script>\nExample\nnote: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense \/ autocomplete) while using CommonJS imports with require() use the following approach:\nconst axios = require('axios').default;\n\n\/\/ axios.<method> will now provide autocomplete and parameter typings\nPerforming a GET request\nconst axios = require('axios');\n\n\/\/ Make a request for a user with a given ID\naxios.get('\/user?ID=12345')\n  .then(function (response) {\n    \/\/ handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    \/\/ handle error\n    console.log(error);\n  })\n  .then(function () {\n    \/\/ always executed\n  });\n\n\/\/ Optionally the request above could also be done as\naxios.get('\/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .then(function () {\n    \/\/ always executed\n  });  \n\n\/\/ Want to use async\/await? Add the `async` keyword to your outer function\/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('\/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nNOTE: async\/await is part of ECMAScript 2017 and is not supported in Internet\nExplorer and older browsers, so use with caution.\n\nPerforming a POST request\naxios.post('\/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\nPerforming multiple concurrent requests\nfunction getUserAccount() {\n  return axios.get('\/user\/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('\/user\/12345\/permissions');\n}\n\nPromise.all([getUserAccount(), getUserPermissions()])\n  .then(function (results) {\n    const acct = results[0];\n    const perm = results[1];\n  });\naxios API\nRequests can be made by passing the relevant config to axios.\naxios(config)\n\/\/ Send a POST request\naxios({\n  method: 'post',\n  url: '\/user\/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n\/\/ GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'http:\/\/bit.ly\/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\naxios(url[, config])\n\/\/ Send a GET request (default method)\naxios('\/user\/12345');\nRequest method aliases\nFor convenience aliases have been provided for all supported request methods.\naxios.request(config)\naxios.get(url[, config])\naxios.delete(url[, config])\naxios.head(url[, config])\naxios.options(url[, config])\naxios.post(url[, data[, config]])\naxios.put(url[, data[, config]])\naxios.patch(url[, data[, config]])\nNOTE\nWhen using the alias methods url, method, and data properties don't need to be specified in config.\nConcurrency (Deprecated)\nPlease use Promise.all to replace the below functions.\nHelper functions for dealing with concurrent requests.\naxios.all(iterable)\naxios.spread(callback)\nCreating an instance\nYou can create a new instance of axios with a custom config.\naxios.create([config])\nconst instance = axios.create({\n  baseURL: 'https:\/\/some-domain.com\/api\/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\nInstance methods\nThe available instance methods are listed below. The specified config will be merged with the instance config.\naxios#request(config)\naxios#get(url[, config])\naxios#delete(url[, config])\naxios#head(url[, config])\naxios#options(url[, config])\naxios#post(url[, data[, config]])\naxios#put(url[, data[, config]])\naxios#patch(url[, data[, config]])\naxios#getUri([config])\nRequest Config\nThese are the available config options for making requests. Only the url is required. Requests will default to GET if method is not specified.\n{\n  \/\/ `url` is the server URL that will be used for the request\n  url: '\/user',\n\n  \/\/ `method` is the request method to be used when making the request\n  method: 'get', \/\/ default\n\n  \/\/ `baseURL` will be prepended to `url` unless `url` is absolute.\n  \/\/ It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  \/\/ to methods of that instance.\n  baseURL: 'https:\/\/some-domain.com\/api\/',\n\n  \/\/ `transformRequest` allows changes to the request data before it is sent to the server\n  \/\/ This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  \/\/ The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  \/\/ FormData or Stream\n  \/\/ You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    \/\/ Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  \/\/ `transformResponse` allows changes to the response data to be made before\n  \/\/ it is passed to then\/catch\n  transformResponse: [function (data) {\n    \/\/ Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  \/\/ `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  \/\/ `params` are the URL parameters to be sent with the request\n  \/\/ Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  \/\/ `paramsSerializer` is an optional function in charge of serializing `params`\n  \/\/ (e.g. https:\/\/www.npmjs.com\/package\/qs, http:\/\/api.jquery.com\/jquery.param\/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  \/\/ `data` is the data to be sent as the request body\n  \/\/ Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'\n  \/\/ When no `transformRequest` is set, must be of one of the following types:\n  \/\/ - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  \/\/ - Browser only: FormData, File, Blob\n  \/\/ - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  \/\/ syntax alternative to send data into the body\n  \/\/ method post\n  \/\/ only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  \/\/ `timeout` specifies the number of milliseconds before the request times out.\n  \/\/ If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, \/\/ default is `0` (no timeout)\n\n  \/\/ `withCredentials` indicates whether or not cross-site Access-Control requests\n  \/\/ should be made using credentials\n  withCredentials: false, \/\/ default\n\n  \/\/ `adapter` allows custom handling of requests which makes testing easier.\n  \/\/ Return a promise and supply a valid response (see lib\/adapters\/README.md).\n  adapter: function (config) {\n    \/* ... *\/\n  },\n\n  \/\/ `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  \/\/ This will set an `Authorization` header, overwriting any existing\n  \/\/ `Authorization` custom headers you have set using `headers`.\n  \/\/ Please note that only HTTP Basic auth is configurable through this parameter.\n  \/\/ For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  \/\/ `responseType` indicates the type of data that the server will respond with\n  \/\/ options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  \/\/   browser only: 'blob'\n  responseType: 'json', \/\/ default\n\n  \/\/ `responseEncoding` indicates encoding to use for decoding responses (Node.js only)\n  \/\/ Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', \/\/ default\n\n  \/\/ `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', \/\/ default\n\n  \/\/ `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', \/\/ default\n\n  \/\/ `onUploadProgress` allows handling of progress events for uploads\n  \/\/ browser only\n  onUploadProgress: function (progressEvent) {\n    \/\/ Do whatever you want with the native progress event\n  },\n\n  \/\/ `onDownloadProgress` allows handling of progress events for downloads\n  \/\/ browser only\n  onDownloadProgress: function (progressEvent) {\n    \/\/ Do whatever you want with the native progress event\n  },\n\n  \/\/ `maxContentLength` defines the max size of the http response content in bytes allowed in node.js\n  maxContentLength: 2000,\n\n  \/\/ `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed\n  maxBodyLength: 2000,\n\n  \/\/ `validateStatus` defines whether to resolve or reject the promise for a given\n  \/\/ HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  \/\/ or `undefined`), the promise will be resolved; otherwise, the promise will be\n  \/\/ rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; \/\/ default\n  },\n\n  \/\/ `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  \/\/ If set to 0, no redirects will be followed.\n  maxRedirects: 5, \/\/ default\n\n  \/\/ `socketPath` defines a UNIX Socket to be used in node.js.\n  \/\/ e.g. '\/var\/run\/docker.sock' to send requests to the docker daemon.\n  \/\/ Only either `socketPath` or `proxy` can be specified.\n  \/\/ If both are specified, `socketPath` is used.\n  socketPath: null, \/\/ default\n\n  \/\/ `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  \/\/ and https requests, respectively, in node.js. This allows options to be added like\n  \/\/ `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  \/\/ `proxy` defines the hostname and port of the proxy server.\n  \/\/ You can also define your proxy using the conventional `http_proxy` and\n  \/\/ `https_proxy` environment variables. If you are using environment variables\n  \/\/ for your proxy configuration, you can also define a `no_proxy` environment\n  \/\/ variable as a comma-separated list of domains that should not be proxied.\n  \/\/ Use `false` to disable proxies, ignoring environment variables.\n  \/\/ `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  \/\/ supplies credentials.\n  \/\/ This will set an `Proxy-Authorization` header, overwriting any existing\n  \/\/ `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  \/\/ `cancelToken` specifies a cancel token that can be used to cancel the request\n  \/\/ (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  }),\n\n  \/\/ `decompress` indicates whether or not the response body should be decompressed \n  \/\/ automatically. If set to `true` will also remove the 'content-encoding' header \n  \/\/ from the responses objects of all decompressed responses\n  \/\/ - Node only (XHR cannot turn off decompression)\n  decompress: true \/\/ default\n\n}\nResponse Schema\nThe response for a request contains the following information.\n{\n  \/\/ `data` is the response that was provided by the server\n  data: {},\n\n  \/\/ `status` is the HTTP status code from the server response\n  status: 200,\n\n  \/\/ `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  \/\/ `headers` the HTTP headers that the server responded with\n  \/\/ All header names are lower cased and can be accessed using the bracket notation.\n  \/\/ Example: `response.headers['content-type']`\n  headers: {},\n\n  \/\/ `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  \/\/ `request` is the request that generated this response\n  \/\/ It is the last ClientRequest instance in node.js (in redirects)\n  \/\/ and an XMLHttpRequest instance in the browser\n  request: {}\n}\nWhen using then, you will receive the response as follows:\naxios.get('\/user\/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\nWhen using catch, or passing a rejection callback as second parameter of then, the response will be available through the error object as explained in the Handling Errors section.\nConfig Defaults\nYou can specify config defaults that will be applied to every request.\nGlobal axios defaults\naxios.defaults.baseURL = 'https:\/\/api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application\/x-www-form-urlencoded';\nCustom instance defaults\n\/\/ Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https:\/\/api.example.com'\n});\n\n\/\/ Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nConfig order of precedence\nConfig will be merged with an order of precedence. The order is library defaults found in lib\/defaults.js, then defaults property of the instance, and finally config argument for the request. The latter will take precedence over the former. Here's an example.\n\/\/ Create an instance using the config defaults provided by the library\n\/\/ At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n\/\/ Override timeout default for the library\n\/\/ Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n\/\/ Override timeout for this request as it's known to take a long time\ninstance.get('\/longRequest', {\n  timeout: 5000\n});\nInterceptors\nYou can intercept requests or responses before they are handled by then or catch.\n\/\/ Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    \/\/ Do something before request is sent\n    return config;\n  }, function (error) {\n    \/\/ Do something with request error\n    return Promise.reject(error);\n  });\n\n\/\/ Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    \/\/ Any status code that lie within the range of 2xx cause this function to trigger\n    \/\/ Do something with response data\n    return response;\n  }, function (error) {\n    \/\/ Any status codes that falls outside the range of 2xx cause this function to trigger\n    \/\/ Do something with response error\n    return Promise.reject(error);\n  });\nIf you need to remove an interceptor later you can.\nconst myInterceptor = axios.interceptors.request.use(function () {\/*...*\/});\naxios.interceptors.request.eject(myInterceptor);\nYou can add interceptors to a custom instance of axios.\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {\/*...*\/});\nHandling Errors\naxios.get('\/user\/12345')\n  .catch(function (error) {\n    if (error.response) {\n      \/\/ The request was made and the server responded with a status code\n      \/\/ that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      \/\/ The request was made but no response was received\n      \/\/ `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      \/\/ http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      \/\/ Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\nUsing the validateStatus config option, you can define HTTP code(s) that should throw an error.\naxios.get('\/user\/12345', {\n  validateStatus: function (status) {\n    return status < 500; \/\/ Resolve only if the status code is less than 500\n  }\n})\nUsing toJSON you get an object with more information about the HTTP error.\naxios.get('\/user\/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\nCancellation\nYou can cancel a request using a cancel token.\n\nThe axios cancel token API is based on the withdrawn cancelable promises proposal.\n\nYou can create a cancel token using the CancelToken.source factory as shown below:\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('\/user\/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    \/\/ handle error\n  }\n});\n\naxios.post('\/user\/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n\/\/ cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\nYou can also create a cancel token by passing an executor function to the CancelToken constructor:\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('\/user\/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    \/\/ An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n\/\/ cancel the request\ncancel();\n\nNote: you can cancel several requests with the same cancel token.\n\nUsing application\/x-www-form-urlencoded format\nBy default, axios serializes JavaScript objects to JSON. To send data in the application\/x-www-form-urlencoded format instead, you can use one of the following options.\nBrowser\nIn a browser, you can use the URLSearchParams API as follows:\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('\/foo', params);\n\nNote that URLSearchParams is not supported by all browsers (see caniuse.com), but there is a polyfill available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the qs library:\nconst qs = require('qs');\naxios.post('\/foo', qs.stringify({ 'bar': 123 }));\nOr in another way (ES6),\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application\/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\nNode.js\nQuery string\nIn node.js, you can use the querystring module as follows:\nconst querystring = require('querystring');\naxios.post('http:\/\/something.com\/', querystring.stringify({ foo: 'bar' }));\nor 'URLSearchParams' from 'url module' as follows:\nconst url = require('url');\nconst params = new url.URLSearchParams({ foo: 'bar' });\naxios.post('http:\/\/something.com\/', params.toString());\nYou can also use the qs library.\nNOTE\nThe qs library is preferable if you need to stringify nested objects, as the querystring method has known issues with that use case (https:\/\/github.com\/nodejs\/node-v0.x-archive\/issues\/1665).\nForm data\nIn node.js, you can use the form-data library as follows:\nconst FormData = require('form-data');\n \nconst form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('\/foo\/bar.jpg'));\n\naxios.post('https:\/\/example.com', form, { headers: form.getHeaders() })\nAlternatively, use an interceptor:\naxios.interceptors.request.use(config => {\n  if (config.data instanceof FormData) {\n    Object.assign(config.headers, config.data.getHeaders());\n  }\n  return config;\n});\nSemver\nUntil axios reaches a 1.0 release, breaking changes will be released with a new minor version. For example 0.5.1, and 0.5.4 will have the same API, but 0.6.0 will have breaking changes.\nPromises\naxios depends on a native ES6 Promise implementation to be supported.\nIf your environment doesn't support ES6 Promises, you can polyfill.\nTypeScript\naxios includes TypeScript definitions.\nimport axios from 'axios';\naxios.get('\/user?ID=12345');\nResources\n\nChangelog\nUpgrade Guide\nEcosystem\nContributing Guide\nCode of Conduct\n\nCredits\naxios is heavily inspired by the $http service provided in Angular. Ultimately axios is an effort to provide a standalone $http-like service for use outside of Angular.\nLicense\nMIT\n","10":"\n\n\n\n\n\nNode.js is an open-source, cross-platform, JavaScript runtime environment. It\nexecutes JavaScript code outside of a browser. For more information on using\nNode.js, see the Node.js Website.\nThe Node.js project uses an open governance model. The\nOpenJS Foundation provides support for the project.\nThis project is bound by a Code of Conduct.\nTable of Contents\n\nSupport\nRelease Types\n\nDownload\n\nCurrent and LTS Releases\nNightly Releases\nAPI Documentation\n\n\nVerifying Binaries\n\n\nBuilding Node.js\nSecurity\nContributing to Node.js\nCurrent Project Team Members\n\nTSC (Technical Steering Committee)\nCollaborators\nRelease Keys\n\n\n\nSupport\nLooking for help? Check out the\ninstructions for getting support.\nRelease Types\n\nCurrent: Under active development. Code for the Current release is in the\nbranch for its major version number (for example,\nv10.x). Node.js releases a new\nmajor version every 6 months, allowing for breaking changes. This happens in\nApril and October every year. Releases appearing each October have a support\nlife of 8 months. Releases appearing each April convert to LTS (see below)\neach October.\nLTS: Releases that receive Long-term Support, with a focus on stability\nand security. Every even-numbered major version will become an LTS release.\nLTS releases receive 12 months of Active LTS support and a further 18 months\nof Maintenance. LTS release lines have alphabetically-ordered codenames,\nbeginning with v4 Argon. There are no breaking changes or feature additions,\nexcept in some special circumstances.\nNightly: Code from the Current branch built every 24-hours when there are\nchanges. Use with caution.\n\nCurrent and LTS releases follow Semantic Versioning. A\nmember of the Release Team signs each Current and LTS release.\nFor more information, see the\nRelease README.\nDownload\nBinaries, installers, and source tarballs are available at\nhttps:\/\/nodejs.org\/en\/download\/.\nCurrent and LTS Releases\nhttps:\/\/nodejs.org\/download\/release\/\nThe latest directory is an\nalias for the latest Current release. The latest-codename directory is an\nalias for the latest release from an LTS line. For example, the\nlatest-carbon directory\ncontains the latest Carbon (Node.js 8) release.\nNightly Releases\nhttps:\/\/nodejs.org\/download\/nightly\/\nEach directory name and filename contains a date (in UTC) and the commit\nSHA at the HEAD of the release.\nAPI Documentation\nDocumentation for the latest Current release is at https:\/\/nodejs.org\/api\/.\nVersion-specific documentation is available in each release directory in the\ndocs subdirectory. Version-specific documentation is also at\nhttps:\/\/nodejs.org\/download\/docs\/.\nVerifying Binaries\nDownload directories contain a SHASUMS256.txt file with SHA checksums for the\nfiles.\nTo download SHASUMS256.txt using curl:\n$ curl -O https:\/\/nodejs.org\/dist\/vx.y.z\/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nFor Current and LTS, the GPG detached signature of SHASUMS256.txt is in\nSHASUMS256.txt.sig. You can use it with gpg to verify the integrity of\nSHASUM256.txt. You will first need to import\nthe GPG keys of individuals authorized to create releases. To\nimport the keys:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\nSee the bottom of this README for a full script to import active release keys.\nNext, download the SHASUMS256.txt.sig for the release:\n$ curl -O https:\/\/nodejs.org\/dist\/vx.y.z\/SHASUMS256.txt.sig\nThen use gpg --verify SHASUMS256.txt.sig SHASUMS256.txt to verify\nthe file's signature.\nBuilding Node.js\nSee BUILDING.md for instructions on how to build Node.js from\nsource and a list of supported platforms.\nSecurity\nFor information on reporting security vulnerabilities in Node.js, see\nSECURITY.md.\nContributing to Node.js\n\nContributing to the project\nWorking Groups\nStrategic Initiatives\nTechnical values and prioritization\n\nCurrent Project Team Members\nFor information about the governance of the Node.js project, see\nGOVERNANCE.md.\nTSC (Technical Steering Committee)\n\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he\/him)\nBethGriggs -\nBeth Griggs <bgriggs@redhat.com> (she\/her)\nBridgeAR -\nRuben Bridgewater <ruben@bridgewater.de> (he\/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he\/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he\/him)\ncodebytere -\nShelley Vohr <codebytere@gmail.com> (she\/her)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he\/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she\/her)\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he\/him)\njasnell -\nJames M Snell <jasnell@gmail.com> (he\/him)\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she\/her)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he\/him)\nmhdawson -\nMichael Dawson <midawson@redhat.com> (he\/him)\nmmarchini -\nMary Marchini <oss@mmarchini.me> (she\/her)\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he\/him)\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he\/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\nTrott -\nRich Trott <rtrott@gmail.com> (he\/him)\n\nTSC Emeriti\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she\/her)\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he\/him)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com> (he\/they)\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he\/him)\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\nmscdex -\nBrian White <mscdex@mscdex.net>\nnebrius -\nBryan Hughes <bryan@nebri.us>\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he\/him)\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\nrvagg -\nRod Vagg <r@va.gg>\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he\/him)\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he\/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he\/him)\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\n\nCollaborators\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she\/her)\naduh95 -\nAntoine du Hamel <duhamelantoine1995@gmail.com> (he\/him)\nak239 -\nAleksei Koziatinskii <ak239spb@gmail.com>\nAndreasMadsen -\nAndreas Madsen <amwebdk@gmail.com> (he\/him)\nantsmartian -\nAnto Aravinth <anto.aravinth.cse@gmail.com> (he\/him)\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he\/him)\nAshCripps -\nAsh Cripps <acripps@redhat.com>\nbcoe -\nBen Coe <bencoe@gmail.com> (he\/him)\nbengl -\nBryan English <bryan@bryanenglish.com> (he\/him)\nbenjamingr -\nBenjamin Gruenbaum <benjamingr@gmail.com>\nBethGriggs -\nBeth Griggs <bgriggs@redhat.com> (she\/her)\nbmeck -\nBradley Farias <bradley.meck@gmail.com>\nbmeurer -\nBenedikt Meurer <benedikt.meurer@gmail.com>\nboneskull -\nChristopher Hiller <boneskull@boneskull.com> (he\/him)\nBridgeAR -\nRuben Bridgewater <ruben@bridgewater.de> (he\/him)\nbzoz -\nBartosz Sosnowski <bartosz@janeasystems.com>\ncclauss -\nChristian Clauss <cclauss@me.com> (he\/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he\/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he\/him)\ncodebytere -\nShelley Vohr <codebytere@gmail.com> (she\/her)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he\/him)\ndanielleadams -\nDanielle Adams <adamzdanielle@gmail.com> (she\/her)\ndavisjam -\nJamie Davis <davisjam@vt.edu> (he\/him)\nDerekNonGeneric -\nDerek Lewis <DerekNonGeneric@inf.is> (he\/him)\ndevnexen -\nDavid Carlier <devnexen@gmail.com>\ndevsnek -\nGus Caplan <me@gus.host> (they\/them)\nedsadr -\nAdrian Estrada <edsadr@gmail.com> (he\/him)\neugeneo -\nEugene Ostroukhov <eostroukhov@google.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he\/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she\/her)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com>  (he\/they)\nFlarna -\nGerhard St\u00f6bich <deb2001-github@yahoo.de>  (he\/they)\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngdams -\nGeorge Adams <george.adams@uk.ibm.com> (he\/him)\ngeek -\nWyatt Preul <wpreul@gmail.com>\ngengjiawen -\nJiawen Geng <technicalcute@gmail.com>\nGeoffreyBooth -\nGeoffrey Booth <webmaster@geoffreybooth.com> (he\/him)\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he\/him)\nguybedford -\nGuy Bedford <guybedford@gmail.com> (he\/him)\nHarshithaKP -\nHarshitha K P <harshitha014@gmail.com> (she\/her)\nhashseed -\nYang Guo <yangguo@chromium.org> (he\/him)\nhimself65 -\nZeyu Yang <himself65@outlook.com> (he\/him)\nhiroppy -\nYuta Hiroto <hello@hiroppy.me> (he\/him)\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nJacksonTian -\nJackson Tian <shyvo1987@gmail.com>\njasnell -\nJames M Snell <jasnell@gmail.com> (he\/him)\njdalton -\nJohn-David Dalton <john.david.dalton@gmail.com>\njkrems -\nJan Krems <jan.krems@gmail.com> (he\/him)\njoaocgreis -\nJo\u00e3o Reis <reis@janeasystems.com>\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she\/her)\njuanarbol -\nJuan Jos\u00e9 Arboleda <soyjuanarbol@gmail.com> (he\/him)\nJungMinu -\nMinwoo Jung <nodecorelab@gmail.com> (he\/him)\nlance -\nLance Ball <lball@redhat.com> (he\/him)\nlegendecas -\nChengzhong Wu <legendecas@gmail.com> (he\/him)\nLeko -\nShingo Inoue <leko.noor@gmail.com> (he\/him)\nlpinca -\nLuigi Pinca <luigipinca@gmail.com> (he\/him)\nlundibundi -\nDenys Otrishko <shishugi@gmail.com> (he\/him)\nmafintosh -\nMathias Buus <mathiasbuus@gmail.com> (he\/him)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he\/him)\nmhdawson -\nMichael Dawson <midawson@redhat.com> (he\/him)\nmildsunrise -\nAlba Mendez <me@alba.sh> (she\/her)\nmisterdjules -\nJulien Gilli <jgilli@nodejs.org>\nmmarchini -\nMary Marchini <oss@mmarchini.me> (she\/her)\nmscdex -\nBrian White <mscdex@mscdex.net>\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he\/him)\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he\/him)\noyyd -\nOuyang Yadong <oyydoibh@gmail.com> (he\/him)\npsmarshall -\nPeter Marshall <petermarshall@chromium.org> (he\/him)\npuzpuzpuz -\nAndrey Pechkurov <apechkurov@gmail.com> (he\/him)\nQard -\nStephen Belanger <admin@stephenbelanger.com> (he\/him)\nrefack -\nRefael Ackermann (\u05e8\u05e4\u05d0\u05dc \u05e4\u05dc\u05d7\u05d9) <refack@gmail.com> (he\/him\/\u05d4\u05d5\u05d0\/\u05d0\u05ea\u05d4)\nrexagod -\nPranshu Srivastava <rexagod@gmail.com> (he\/him)\nrichardlau -\nRichard Lau <rlau@redhat.com>\nrickyes -\nRicky Zhou <0x19951125@gmail.com> (he\/him)\nronag -\nRobert Nagy <ronagy@icloud.com>\nrubys -\nSam Ruby <rubys@intertwingly.net>\nruyadorno -\nRuy Adorno <ruyadorno@github.com> (he\/him)\nrvagg -\nRod Vagg <rod@vagg.org>\nryzokuken -\nUjjwal Sharma <ryzokuken@disroot.org> (he\/him)\nsaghul -\nSa\u00fal Ibarra Corretg\u00e9 <saghul@gmail.com>\nsantigimeno -\nSantiago Gimeno <santiago.gimeno@gmail.com>\nseishun -\nNikolai Vavilov <vvnicholas@gmail.com>\nshisama -\nMasashi Hirano <shisama07@gmail.com> (he\/him)\nsilverwind -\nRoman Reiss <me@silverwind.io>\nsrl295 -\nSteven R Loomis <srloomis@us.ibm.com>\nstarkwang -\nWeijia Wang <starkwang@126.com>\nsxa -\nStewart X Addison <sxa@redhat.com> (he\/him)\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he\/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he\/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\ntrivikr -\nTrivikram Kamat <trivikr.dev@gmail.com>\nTrott -\nRich Trott <rtrott@gmail.com> (he\/him)\nvdeturckheim -\nVladimir de Turckheim <vlad2t@hotmail.com> (he\/him)\nwatilde -\nDaijiro Wachi <daijiro.wachi@gmail.com> (he\/him)\nwatson -\nThomas Watson <w@tson.dk>\nXadillaX -\nKhaidi Chu <i@2333.moe> (he\/him)\nyhwang -\nYihong Wang <yh.wang@ibm.com>\nyorkie -\nYorkie Liu <yorkiefixer@gmail.com>\nyosuke-furukawa -\nYosuke Furukawa <yosuke.furukawa@gmail.com>\nZYSzys -\nYongsheng Zhang <zyszys98@gmail.com> (he\/him)\n\nCollaborator Emeriti\n\nandrasq -\nAndras <andras@kinvey.com>\nAnnaMag -\nAnna M. Kedzierska <anna.m.kedzierska@gmail.com>\naqrln -\nAlexey Orlenko <eaglexrlnk@gmail.com> (he\/him)\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nbrendanashworth -\nBrendan Ashworth <brendan.ashworth@me.com>\ncalvinmetcalf -\nCalvin Metcalf <calvin.metcalf@gmail.com>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nclaudiorodriguez -\nClaudio Rodriguez <cjrodr@yahoo.com>\nDavidCai1993 -\nDavid Cai <davidcai1993@yahoo.com> (he\/him)\ndigitalinfinity -\nHitesh Kanwathirtha <digitalinfinity@gmail.com> (he\/him)\neljefedelrodeodeljefe -\nRobert Jefe Lindstaedt <robert.lindstaedt@gmail.com>\nestliberitas -\nAlexander Makarenko <estliberitas@gmail.com>\nfiredfox -\nDaniel Wang <wangyang0123@gmail.com>\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he\/him)\nglentiki -\nGlen Keane <glenkeane.94@gmail.com> (he\/him)\niarna -\nRebecca Turner <me@re-becca.org>\nimran-iq -\nImran Iqbal <imran@imraniqbal.org>\nimyller -\nIlkka Myller <ilkka.myller@nodefield.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\nitaloacasas -\nItalo A. Casas <me@italoacasas.com> (he\/him)\njasongin -\nJason Ginchereau <jasongin@microsoft.com>\njbergstroem -\nJohan Bergstr\u00f6m <bugs@bergstroem.nu>\njhamhader -\nYuval Brik <yuval@brik.org.il>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\njulianduque -\nJulian Duque <julianduquej@gmail.com> (he\/him)\nkfarnung -\nKyle Farnung <kfarnung@microsoft.com> (he\/him)\nkunalspathak -\nKunal Pathak <kunal.pathak@microsoft.com>\nlucamaraschi -\nLuca Maraschi <luca.maraschi@gmail.com> (he\/him)\nlxe -\nAleksey Smolenchuk <lxe@lxe.co>\nmaclover7 -\nJon Moss <me@jonathanmoss.me> (he\/him)\nmatthewloring -\nMatthew Loring <mattloring@google.com>\nmicnic -\nNicu Micleu\u0219anu <micnic90@gmail.com> (he\/him)\nmikeal -\nMikeal Rogers <mikeal.rogers@gmail.com>\nmonsanto -\nChristopher Monsanto <chris@monsan.to>\nMoonBall -\nChen Gang <gangc.cxy@foxmail.com>\nnot-an-aardvark -\nTeddy Katz <teddy.katz@gmail.com> (he\/him)\nOlegas -\nOleg Elifantiev <oleg@elifantiev.ru>\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\nothiym23 -\nForrest L Norvell <ogd@aoaioxxysz.net> (he\/him)\npetkaantonov -\nPetka Antonov <petka_antonov@hotmail.com>\nphillipj -\nPhillip Johnsen <johphi@gmail.com>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\npmq20 -\nMinqi Pan <pmq2001@gmail.com>\nprincejwesley -\nPrince John Wesley <princejohnwesley@gmail.com>\nrlidwka -\nAlex Kocharin <alex@kocharin.ru>\nrmg -\nRyan Graham <r.m.graham@gmail.com>\nrobertkowalski -\nRobert Kowalski <rok@kowalski.gd>\nromankl -\nRoman Klauke <romaaan.git@gmail.com>\nronkorving -\nRon Korving <ron@ronkorving.nl>\nRReverser -\nIngvar Stepanyan <me@rreverser.com>\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\nsebdeckers -\nSebastiaan Deckers <sebdeckers83@gmail.com>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he\/him)\nstefanmb -\nStefan Budeanu <stefan@budeanu.com>\ntellnes -\nChristian Tellnes <christian@tellnes.no>\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he\/him)\nthlorenz -\nThorsten Lorenz <thlorenz@gmx.de>\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\ntunniclm -\nMike Tunnicliffe <m.j.tunnicliffe@gmail.com>\nvkurchatkin -\nVladimir Kurchatkin <vladimir.kurchatkin@gmail.com>\nvsemozhetbyt -\nVse Mozhet Byt <vsemozhetbyt@gmail.com> (he\/him)\nwhitlockjc -\nJeremy Whitlock <jwhitlock@apache.org>\n\nCollaborators follow the Collaborator Guide in\nmaintaining the Node.js project.\nTriagers\n\nPoojaDurgad -\nPooja Durgad <Pooja.D.P@ibm.com>\n\nRelease Keys\nPrimary GPG keys for Node.js Releasers (some Releasers sign with subkeys):\n\nBeth Griggs <bgriggs@redhat.com>\n4ED778F539E3634C779C87C6D7062848A1AB005C\nColin Ihrig <cjihrig@gmail.com>\n94AE36675C464D64BAFA68DD7434390BDBE9B9C5\nDanielle Adams <adamzdanielle@gmail.com>\n1C050899334244A8AF75E53792EF661D867B9DFA\nJames M Snell <jasnell@keybase.io>\n71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\nMicha\u00ebl Zasso <targos@protonmail.com>\n8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\nMyles Borins <myles.borins@gmail.com>\nC4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\nRichard Lau <rlau@redhat.com>\nC82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C\nRod Vagg <rod@vagg.org>\nDD8F2338BAE7501E3DD5AC78C273792F7D83545D\nRuben Bridgewater <ruben@bridgewater.de>\nA48C2BEE680E841632CD4E44F07496B3EB3C1762\nRuy Adorno <ruyadorno@hotmail.com>\n108F52B48DB57BB0CC439B2997B01419BD92F80A\nShelley Vohr <shelley.vohr@gmail.com>\nB9E2F5981AA6E0CD28160D9FF13993A75599653C\n\nTo import the full set of trusted release keys (including subkeys possibly used\nto sign releases):\ngpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C\ngpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5\ngpg --keyserver pool.sks-keyservers.net --recv-keys 1C050899334244A8AF75E53792EF661D867B9DFA\ngpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\ngpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\ngpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\ngpg --keyserver pool.sks-keyservers.net --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C\ngpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\ngpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762\ngpg --keyserver pool.sks-keyservers.net --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C\nSee the section above on Verifying Binaries for how to\nuse these keys to verify a downloaded file.\nOther keys used to sign some previous releases:\n\nChris Dickinson <christopher.s.dickinson@gmail.com>\n9554F04D7259F04124DE6B476D5A82AC7E37093B\nEvan Lucas <evanlucas@me.com>\nB9AE9905FFD7803F25714661B63B535A4C206CA9\nGibson Fahnestock <gibfahn@gmail.com>\n77984A986EBC2AA786BC0F66B01FBB92821C587A\nIsaac Z. Schlueter <i@izs.me>\n93C7E9E91B49E432C2F75674B0A78B0A6C481CF6\nItalo A. Casas <me@italoacasas.com>\n56730D5401028683275BD23C23EFEFE93C4CFFFE\nJeremiah Senkpiel <fishrock@keybase.io>\nFD3A5288F042B6850C66B31F09FE44734EB7990E\nJulien Gilli <jgilli@fastmail.fm>\n114F43EE0176B71C7BC219DD50A3051F888C628D\nTimothy J Fontaine <tjfontaine@gmail.com>\n7937DFD2AB06298B2293C3187D33FF9D0246406D\n\n","11":"\n30 seconds of code\n\nShort JavaScript code snippets for all your development needs\n\n\nVisit our website to view our snippet collection.\nUse the Search page to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.\nBrowse the JavaScript Snippet List to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.\nClick on each snippet card to view the whole snippet, including code, explanation and examples.\nYou can use the button on the right side of a snippet card to copy the code to clipboard.\nIf you like the project, give it a star. It means a lot to the people maintaining it.\n\nWant to contribute?\n\nIf you want to help us improve, take a minute to read the Contribution Guidelines first.\nUse the Snippet Template to add new snippets to the collection.\nIf you find a problem with a specific snippet, please open an issue.\nIf you find a problem with the website, please report it in the web repository.\n\nCredits & Sponsors\n\nThis repository is maintained by the 30-seconds organization on GitHub.\nAll snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.\nLogos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.\nOur website is powered by Netlify, Gatsby, Travis CI & GitHub.\n\n","12":"three.js\n\n\n\n\n\nJavaScript 3D library\nThe aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.\nExamples \u2014\nDocumentation \u2014\nWiki \u2014\nMigrating \u2014\nQuestions \u2014\nForum \u2014\nSlack \u2014\nDiscord\nUsage\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a WebGL renderer for the scene and camera, and it adds that viewport to the document.body element. Finally, it animates the cube within the scene for the camera.\nimport * as THREE from '.\/js\/three.module.js';\n\nlet camera, scene, renderer;\nlet geometry, material, mesh;\n\ninit();\nanimate();\n\nfunction init() {\n\n\tcamera = new THREE.PerspectiveCamera( 70, window.innerWidth \/ window.innerHeight, 0.01, 10 );\n\tcamera.position.z = 1;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\n\tmaterial = new THREE.MeshNormalMaterial();\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tdocument.body.appendChild( renderer.domElement );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.02;\n\n\trenderer.render( scene, camera );\n\n}\nIf everything went well, you should see this.\nCloning this repository\nCloning the repo with all its history results in a ~2GB download. If you don't need the whole history you can use the depth parameter to significantly reduce download size.\ngit clone --depth=1 https:\/\/github.com\/mrdoob\/three.js.git\nChange log\nReleases\n","13":"\n\nVersion 5 \u2013 the iconic SVG, font, and CSS framework\n\nThe internet's most popular icon toolkit has been redesigned and built from\nscratch. On top of this, features like icon font ligatures, an SVG framework,\nofficial NPM packages for popular frontend libraries like React, and access to\na new CDN.\nNot familiar with Font Awesome 5? Learn\nmore about our\nsuccessful Kickstarter and plan. You can also order Font Awesome\nPro which includes tons more icons directly\nfrom fontawesome.com.\nDocumentation\nLearn how to get started with Font Awesome and then dive deeper into other and advanced topics:\nUsing Font Awesome on the Web\n\nWith SVG with JavaScript\nWith web fonts with CSS\nUpgrading from version 4\nInstalling Font Awesome with a package manager\nDownloading + hosting Font Awesome yourself\nPerformance and security\nAccessibility\nTroubleshooting\n\nAdvanced Options & Techniques\n\nUsing CSS pseudo-elements\nSVG sprites\nThe Font Awesome API\nSVG symbols\nSVG JavaScript Core\nServer side rendering\n\nUsing Font Awesome on the Desktop\n\nGetting started\nUpgrading from version 4\nUsing ligatures\nUsing glyphs\nTroubleshooting\n\nWhere did Font Awesome 4 (or 3) go?\nNow that Font Awesome 5 has been released we are marking version 4 as\nend-of-life. We don't plan on releasing any further versions of the 4.x or 3.x.\nDocumentation is still available but it's moved to\nhttps:\/\/fontawesome.com\/v4.7.0 and\nhttps:\/\/fontawesome.com\/v3.2.1.\nThe Git repository for\nv4.7.0 and\nv3.2.1 can\nbe found in our GitHub releases.\nChange log\nWe'll keep track of each release in the CHANGELOG.md\nLooking for older versions of Font Awesome? Check the releases.\nUpgrading\nFrom time-to-time we'll have special upgrading instructions from one version to the next.\nCheck out the UPGRADING.md guide when you upgrade your dependencies.\nCode of conduct\nWe will behave ourselves if you behave yourselves. For more details see our\nCODE_OF_CONDUCT.md.\nContributing\nPlease read through our contributing guidelines.  Included\nare directions for opening issues.\nVersioning\nFont Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered\nwith the following format:\n<major>.<minor>.<patch>\nFor more information on SemVer, please visit http:\/\/semver.org.\nThe major version \"5\" is part of an umbrella release.  It includes many different types of files and technologies. Therefore\nwe deviate from normal SemVer in the following ways:\n\nAny release may update the design, look-and-feel, or branding of an existing\nicon\nWe will never intentionally release a patch version update that breaks\nbackward compatibility\nA minor release may include backward-incompatible changes but we will\nwrite clear upgrading instructions in UPGRADING.md\nA minor or patch release will never remove icons\nBug fixes will be addressed as patch releases unless they include backward\nincompatibility then they will be minor releases\n\nLicense\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\n\nIcons \u2014 CC BY 4.0 License\n\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.\n\n\nFonts \u2014 SIL OFL 1.1 License\n\nIn the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.\n\n\nCode \u2014 MIT License\n\nIn the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.\n\n\n\nAttribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\nTeam\n\nDave Gandy\nTravis Chase\nRob Madole\nBrian Talbot\nJory Raphael\nMike Wilkerson\nTrevor Chase\nJason Lundien\nJason Otero\nEdward Emanuel\nGeremia Taglialatela\n\n","14":"\n\n\nMaterial-UI\n\nReact components for faster and simpler web development. Build your own design system, or start with Material Design.\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nMaterial-UI is available as an npm package.\nStable channel v4\n\/\/ with npm\nnpm install @material-ui\/core\n\n\/\/ with yarn\nyarn add @material-ui\/core\nAlpha channel v5\n\/\/ with npm\nnpm install @material-ui\/core@next\n\n\/\/ with yarn\nyarn add @material-ui\/core@next\n\nOlder versions\n\nv3.x (Migration from v3 to v4)\nv0.x (Migration to v1)\n\n\nPlease note that @next will only point to pre-releases; to get the latest stable release use @latest instead.\nWho sponsors Material-UI?\nDiamond \ud83d\udc8e\n\n\n\n\nDiamond Sponsors are those who have pledged $1,500\/month or more to Material-UI.\nGold \ud83c\udfc6\nvia Patreon\n\n\n\n\nvia OpenCollective\n\n\n\n\nGold Sponsors are those who have pledged $500\/month or more to Material-UI.\nThere is more!\nSee the full list of our backers.\nUsage\nHere is a quick example to get you started, it's all you need:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui\/core\/Button';\n\nfunction App() {\n  return <Button variant=\"contained\">Hello World<\/Button>;\n}\n\nReactDOM.render(<App \/>, document.querySelector('#app'));\nYes, it's really all you need to get started as you can see in this live and interactive demo:\n\nQuestions\nFor how-to questions and other non-issues,\nplease use StackOverflow instead of GitHub issues.\nThere is a StackOverflow tag called \"material-ui\" that you can use to tag your questions.\nExamples\nAre you looking for an example project to get started?\nWe host some.\nDocumentation\nCheck out our documentation website.\nPremium Themes\nYou can find complete templates & themes in the Material-UI store.\nContributing\nRead the contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.\nNotice that contributions go far beyond pull requests and commits.\nAlthough we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of other contributions.\nChangelog\nIf you have recently updated, please read the changelog for details of what has changed.\nRoadmap\nThe future plans and high priority features and enhancements can be found in the roadmap file.\nLicense\nThis project is licensed under the terms of the\nMIT license.\nSponsoring services\nThese great services sponsor Material-UI's core infrastructure:\n\nGitHub allows us to host the Git repository.\n\nCircleCI allows us to run the test suite.\n\nNetlify allows us to distribute the documentation.\n\nCrowdIn allows us to translate the documentation.\n\nBrowserStack allows us to test in real browsers.\n\nCodeCov allows us to monitor the test coverage.\n","15":"AngularJS \nAngularJS lets you write client-side web applications as if you had a smarter browser.  It lets you\nuse good old HTML (or HAML, Jade\/Pug and friends!) as your template language and lets you extend HTML\u2019s\nsyntax to express your application\u2019s components clearly and succinctly.  It automatically\nsynchronizes data from your UI (view) with your JavaScript objects (model) through 2-way data\nbinding. To help you structure your application better and make it easy to test, AngularJS teaches\nthe browser how to do dependency injection and inversion of control.\nIt also helps with server-side communication, taming async callbacks with promises and deferred objects,\nand it makes client-side navigation and deep linking with hashbang urls or HTML5 pushState a\npiece of cake. Best of all? It makes development fun!\n\nOn July 1, 2018 AngularJS entered a 3 year Long Term Support period: Find out more\nLooking for the new Angular? Go here: https:\/\/github.com\/angular\/angular\n\n\nWeb site: https:\/\/angularjs.org\nTutorial: https:\/\/docs.angularjs.org\/tutorial\nAPI Docs: https:\/\/docs.angularjs.org\/api\nDeveloper Guide: https:\/\/docs.angularjs.org\/guide\nContribution guidelines: CONTRIBUTING.md\nCore Development: DEVELOPERS.md\nDashboard: https:\/\/dashboard.angularjs.org\n\nDocumentation\nGo to https:\/\/docs.angularjs.org\nContribute\nWe've set up a separate document for our\ncontribution guidelines.\nDevelop\nWe've set up a separate document for\ndevelopers.\n\nWhat to use AngularJS for and when to use it\nAngularJS is the next generation framework where each component is designed to work with every other\ncomponent in an interconnected way like a well-oiled machine. AngularJS is JavaScript MVC made easy\nand done right. (Well it is not really MVC, read on, to understand what this means.)\nMVC, no, MV* done the right way!\nMVC, short for Model-View-Controller, is a design pattern, i.e. how the code should be organized and\nhow the different parts of an application separated for proper readability and debugging. Model is\nthe data and the database. View is the user interface and what the user sees. Controller is the main\nlink between Model and View. These are the three pillars of major programming frameworks present on\nthe market today. On the other hand AngularJS works on MV*, short for Model-View-Whatever. The\nWhatever is AngularJS's way of telling that you may create any kind of linking between the Model\nand the View here.\nUnlike other frameworks in any programming language, where MVC, the three separate components, each\none has to be written and then connected by the programmer, AngularJS helps the programmer by asking\nhim\/her to just create these and everything else will be taken care of by AngularJS.\nInterconnection with HTML at the root level\nAngularJS uses HTML to define the user's interface. AngularJS also enables the programmer to write\nnew HTML tags (AngularJS Directives) and increase the readability and understandability of the HTML\ncode. Directives are AngularJS\u2019s way of bringing additional functionality to HTML. Directives\nachieve this by enabling us to invent our own HTML elements. This also helps in making the code DRY\n(Don't Repeat Yourself), which means once created, a new directive can be used anywhere within the\napplication.\nHTML is also used to determine the wiring of the app. Special attributes in the HTML determine where\nto load the app, which components or controllers to use for each element, etc. We specify \"what\"\ngets loaded, but not \"how\". This declarative approach greatly simplifies app development in a sort\nof WYSIWYG way. Rather than spending time on how the program flows and orchestrating the various\nmoving parts, we simply define what we want and AngularJS will take care of the dependencies.\nData Handling made simple\nData and Data Models in AngularJS are plain JavaScript objects and one can add and change properties\ndirectly on it and loop over objects and arrays at will.\nTwo-way Data Binding\nOne of AngularJS's strongest features. Two-way Data Binding means that if something changes in the\nModel, the change gets reflected in the View instantaneously, and the same happens the other way\naround. This is also referred to as Reactive Programming, i.e. suppose a = b + c is being\nprogrammed and after this, if the value of b and\/or c is changed then the value of a will be\nautomatically updated to reflect the change. AngularJS uses its \"scopes\" as a glue between the Model\nand View and makes these updates in one available for the other.\nLess Written Code and Easily Maintainable Code\nEverything in AngularJS is created to enable the programmer to end up writing less code that is\neasily maintainable and readable by any other new person on the team. Believe it or not, one can\nwrite a complete working two-way data binded application in less than 10 lines of code. Try and see\nfor yourself!\nTesting Ready\nAngularJS has Dependency Injection, i.e. it takes care of providing all the necessary dependencies\nto its controllers and services whenever required. This helps in making the AngularJS code ready for\nunit testing by making use of mock dependencies created and injected. This makes AngularJS more\nmodular and easily testable thus in turn helping a team create more robust applications.\n","16":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nVisit https:\/\/nextjs.org\/learn to get started with Next.js.\nDocumentation\nVisit https:\/\/nextjs.org\/docs to view the full documentation.\nWho is using Next.js?\nNext.js is used by the world's leading companies. Check out the Next.js Showcase to learn more.\nCommunity\nThe Next.js community can be found on GitHub Discussions, where you can ask questions, voice ideas, and share your projects.\nTo chat with other community members you can join the Next.js Discord.\nOur Code of Conduct applies to all Next.js community channels.\nContributing\nPlease see our contributing.md.\nAuthors\n\nArunoda Susiripala (@arunoda) \u2013 Vercel\nTim Neutkens (@timneutkens) \u2013 Vercel\nNaoyuki Kanezawa (@nkzawa) \u2013 Vercel\nTony Kovanen (@tonykovanen) \u2013 Vercel\nGuillermo Rauch (@rauchg) \u2013 Vercel\nDan Zajdband (@impronunciable) \u2013 Knight-Mozilla \/ Coral Project\n\n","17":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwebpack\n\n    webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.\n  \n\nTable of Contents\n\nInstall\nIntroduction\nConcepts\nContributing\nSupport\nCore Team\nSponsoring\nPremium Partners\nOther Backers and Sponsors\nGold Sponsors\nSilver Sponsors\nBronze Sponsors\nBackers\nSpecial Thanks\n\nInstall\nInstall with npm:\nnpm install --save-dev webpack\nInstall with yarn:\nyarn add webpack --dev\nIntroduction\nwebpack is a bundler for modules. The main purpose is to bundle JavaScript\nfiles for usage in a browser, yet it is also capable of transforming, bundling,\nor packaging just about any resource or asset.\nTL;DR\n\nBundles ES Modules, CommonJS, and AMD modules (even combined).\nCan create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).\nDependencies are resolved during compilation, reducing the runtime size.\nLoaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.\nHighly modular plugin system to do whatever else your application requires.\n\nGet Started\nCheck out webpack's quick Get Started guide and the other guides.\nBrowser Compatibility\nwebpack supports all browsers that are ES5-compliant (IE8 and below are not supported).\nwebpack also needs Promise for import() and require.ensure(). If you want to support older browsers, you will need to load a polyfill before using these expressions.\nConcepts\nPlugins\nwebpack has a rich plugin\ninterface. Most of the features\nwithin webpack itself use this plugin interface. This makes webpack very\nflexible.\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nmini-css-extract-plugin\n\n\nExtracts CSS into separate files. It creates a CSS file per JS file which contains CSS.\n\n\ncompression-webpack-plugin\n\n\nPrepares compressed versions of assets to serve them with Content-Encoding\n\n\ni18n-webpack-plugin\n\n\nAdds i18n support to your bundles\n\n\nhtml-webpack-plugin\n\n\nSimplifies creation of HTML files (index.html) to serve your bundles\n\n\nextract-text-webpack-plugin\n\n\nExtract text from a bundle, or bundles, into a separate file\n\n\n\nLoaders\nwebpack enables the use of loaders to preprocess files. This allows you to bundle\nany static resource way beyond JavaScript. You can easily write your own\nloaders using Node.js.\nLoaders are activated by using loadername! prefixes in require() statements,\nor are automatically applied via regex from your webpack configuration.\nFiles\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nraw-loader\n\n\nLoads raw content of a file (utf-8)\n\n\nval-loader\n\n\nExecutes code as module and considers exports as JS code\n\n\nurl-loader\n\n\nWorks like the file loader, but can return a Data Url if the file is smaller than a limit\n\n\nfile-loader\n\n\nEmits the file into the output folder and returns the (relative) url\n\n\n\nJSON\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads a JSON file (included by default)\n\n\n\n\n\nLoads and transpiles a JSON 5 file\n\n\n\n\n\nLoads and transpiles a CSON file\n\n\n\nTranspiling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<script>\n\n\nExecutes a JavaScript file once in global context (like in script tag), require()s are not parsed\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Babel\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Traceur\n\n\n\n\n\nLoads TypeScript like JavaScript\n\n\nawesome-typescript-loader\n\n\nAwesome TypeScript loader for webpack\n\n\n\n\n\nLoads CoffeeScript like JavaScript\n\n\n\nTemplating\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nExports HTML as string, requires references to static resources\n\n\n\n\n\nLoads Pug templates and returns a function\n\n\n\n\n\nCompiles Markdown to HTML\n\n\n\n\n\nLoads and transforms a HTML file using PostHTML\n\n\n\n\n\nCompiles Handlebars to HTML\n\n\n\nStyling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<style>\n\n\nAdd exports of a module as style to DOM\n\n\n\n\n\nLoads CSS file with resolved imports and returns CSS code\n\n\n\n\n\nLoads and compiles a LESS file\n\n\n\n\n\nLoads and compiles a Sass\/SCSS file\n\n\n\n\n\nLoads and compiles a Stylus file\n\n\n\n\n\nLoads and transforms a CSS\/SSS file using PostCSS\n\n\n\nLinting & Testing\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nTests with mocha (Browser\/NodeJS)\n\n\n\n\n\nPreLoader for linting code using ESLint\n\n\n\n\n\nPreLoader for linting code using JSHint\n\n\n\nFrameworks\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads and compiles Vue Components\n\n\n\n\n\nProcess HTML & CSS with preprocessor of choice and require() Web Components like first-class modules\n\n\n\n\n\nLoads and compiles Angular 2 Components\n\n\n\n\n\nRiot official webpack loader\n\n\n\nPerformance\nwebpack uses async I\/O and has multiple caching levels. This makes webpack fast\nand incredibly fast on incremental compilations.\nModule Formats\nwebpack supports ES2015+, CommonJS and AMD modules out of the box. It performs clever static\nanalysis on the AST of your code. It even has an evaluation engine to evaluate\nsimple expressions. This allows you to support most existing libraries out of the box.\nCode Splitting\nwebpack allows you to split your codebase into multiple chunks. Chunks are\nloaded asynchronously at runtime. This reduces the initial loading time.\nOptimizations\nwebpack can do many optimizations to reduce the output size of your\nJavaScript by deduplicating frequently used modules, minifying, and giving\nyou full control of what is loaded initially and what is loaded at runtime\nthrough code splitting. It can also make your code chunks cache\nfriendly by using hashes.\nContributing\nWe want contributing to webpack to be fun, enjoyable, and educational for anyone, and everyone. We have a vibrant ecosystem that spans beyond this single repo. We welcome you to check out any of the repositories in our organization or webpack-contrib organization which houses all of our loaders and plugins.\nContributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on webpack, we also are thrilled to receive a variety of other contributions including:\n\nDocumentation updates, enhancements, designs, or bugfixes\nSpelling or grammar fixes\nREADME.md corrections or redesigns\nAdding unit, or functional tests\nTriaging GitHub issues -- especially determining whether an issue still persists or is reproducible.\nSearching #webpack on twitter and helping someone else who needs help\nTeaching others how to contribute to one of the many webpack's repos!\nBlogging, speaking about, or creating tutorials about one of webpack's many features.\nHelping others in our webpack gitter channel.\n\nTo get started have a look at our documentation on contributing.\nIf you are worried or don't know where to start, you can always reach out to Sean Larkin (@TheLarkInn) on Twitter or simply submit an issue and a maintainer can help give you guidance!\nWe have also started a series on our Medium Publication called The Contributor's Guide to webpack. We welcome you to read it and post any questions or responses if you still need help.\nLooking to speak about webpack? We'd love to review your talk abstract\/CFP! You can email it to webpack [at] opencollective [dot] com and we can give pointers or tips!!!\nCreating your own plugins and loaders\nIf you create a loader or plugin, we would <3 for you to open source it, and put it on npm. We follow the x-loader, x-webpack-plugin naming convention.\nSupport\nWe consider webpack to be a low-level tool used not only individually but also layered beneath other awesome tools. Because of its flexibility, webpack isn't always the easiest entry-level solution, however we do believe it is the most powerful. That said, we're always looking for ways to improve and simplify the tool without compromising functionality. If you have any ideas on ways to accomplish this, we're all ears!\nIf you're just getting started, take a look at our new docs and concepts page. This has a high level overview that is great for beginners!!\nLooking for webpack 1 docs? Please check out the old wiki, but note that this deprecated version is no longer supported.\nIf you want to discuss something or just need help, here is our Gitter room where there are always individuals looking to help out!\nIf you are still having difficulty, we would love for you to post\na question to StackOverflow with the webpack tag. It is much easier to answer questions that include your webpack.config.js and relevant files! So if you can provide them, we'd be extremely grateful (and more likely to help you find the answer!)\nIf you are twitter savvy you can tweet #webpack with your question and someone should be able to reach out and help also.\nIf you have discovered a \ud83d\udc1c or have a feature suggestion, feel free to create an issue on Github.\nLicense\n\nCore Team\n\n\n\n\n\n\nTobias Koppers\nCore\n\nFounder of webpack\n\n\n\n\nJohannes Ewald\nLoaders & Plugins\n\nEarly adopter of webpack\n\n\n\n\nSean T. Larkin\nPublic Relations\n\nFounder of the core team\n\n\n\n\nKees Kluskens\nDevelopment\n\nSponsor\n\n\n\n\n\n\n\n\nSponsoring\nMost of the core team members, webpack contributors and contributors in the ecosystem do this open source work in their free time. If you use webpack for a serious task, and you'd like us to invest more time on it, please donate. This project increases your income\/productivity too. It makes development and applications faster and it reduces the required bandwidth.\nThis is how we use the donations:\n\nAllow the core team to work on webpack\nThank contributors if they invested a large amount of time in contributing\nSupport projects in the ecosystem that are of great value for users\nSupport projects that are voted most (work in progress)\nInfrastructure cost\nFees for money handling\n\nPremium Partners\n\n\n\n\nOther Backers and Sponsors\nBefore we started using OpenCollective, donations were made anonymously. Now that we have made the switch, we would like to acknowledge these sponsors (and the ones who continue to donate using OpenCollective). If we've missed someone, please send us a PR, and we'll add you to this list.\n\n\n\n\n\nGold Sponsors\nBecome a gold sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSilver Sponsors\nBecome a silver sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBronze Sponsors\nBecome a bronze sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackers\nBecome a backer and get your image on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecial Thanks to\n(In chronological order)\n\n@google for Google Web Toolkit (GWT), which aims to compile Java to JavaScript. It features a similar Code Splitting as webpack.\n@medikoo for modules-webmake, which is a similar project. webpack was born because I wanted Code Splitting for modules-webmake. Interestingly the Code Splitting issue is still open (thanks also to @Phoscur for the discussion).\n@substack for browserify, which is a similar project and source for many ideas.\n@jrburke for require.js, which is a similar project and source for many ideas.\n@defunctzombie for the browser-field spec, which makes modules available for node.js, browserify and webpack.\nEvery early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...\n@shama, @jhnns and @sokra for maintaining this project\nEveryone who has written a loader for webpack. You are the ecosystem...\nEveryone I forgot to mention here, but also influenced webpack.\n\n","18":"Node.js Best Practices\n\n\n\n\n\n  \n\n\n Follow us on Twitter! @nodepractices\n\nRead in a different language: CN, BR, RU, PL (ES, FR, HE, KR and TR in progress!)\n\nBuilt and maintained by our Steering Committee and Collaborators\nLatest Best Practices and News\n\n\n\u2705 New best practice: Bullet 6.8 by Josh Hemphill recommends \"Protect Users' Passwords\/Secrets using BCrypt or Script\". It contains an in-depth explanation about when and why each option suits a specific project. Don't miss this short guide with a brief overview of the various hashing options\n\n\n\ud83c\udf89 Node.js best practices reached 50k stars: Thank you to each and every contributor who helped turning this project into what it is today! We've got lots of plans for the time ahead, as we expand our ever-growing list of Node.js best practices even further\n\n\n\ud83d\udc33 Node.js + Docker best practices: We've just released the Docker with Node.js section which includes 15 bullets about better coding techniques with Docker\n\n\n\nWelcome! 3 Things You Ought To Know First\n1. You are reading dozens of the best Node.js articles - this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators\n2. It is the largest compilation, and it is growing every week - currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We'd love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our writing guidelines here\n3. Best practices have additional info - most bullets include a \ud83d\udd17Read More link that expands on the practice with code examples, quotes from selected blogs, and more information\n\nTable of Contents\n\nProject Structure Practices (5)\nError Handling Practices (11) \nCode Style Practices (12) \nTesting And Overall Quality Practices (13) \nGoing To Production Practices (19) \nSecurity Practices (25)\nPerformance Practices (2) (Work In Progress\ufe0f \u270d\ufe0f)\nDocker Practices (15)\n\n\n1. Project Structure Practices\n 1.1 Structure your solution by components\nTL;DR: The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit 'Read More' below to see examples of correct project structure\nOtherwise: When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It's also considered harder to scale-out when all the business units are not separated\n\ud83d\udd17 Read More: structure by components\n\n 1.2 Layer your components, keep the web layer within its boundaries\nTL;DR: Each component should contain 'layers' - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks\nOtherwise: App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc\n\ud83d\udd17 Read More: layer your app\n\n 1.3 Wrap common utilities as npm packages\nTL;DR: In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects\nOtherwise: You'll have to invent your deployment and the dependency wheel\n\ud83d\udd17 Read More: Structure by feature\n\n 1.4 Separate Express 'app' and 'server'\nTL;DR: Avoid the nasty habit of defining the entire Express app in a single huge file - separate your 'Express' definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components\nOtherwise: Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won't be a big pleasure to maintain hundreds of lines of code in a single file\n\ud83d\udd17 Read More: separate Express 'app' and 'server'\n\n 1.5 Use environment aware, secure and hierarchical config\nTL;DR: A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like rc, nconf, config, and convict.\nOtherwise: Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both\n\ud83d\udd17 Read More: configuration best practices\n\n\u2b06 Return to top\n2. Error Handling Practices\n 2.1 Use Async-Await or promises for async error handling\nTL;DR: Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch\nOtherwise: Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns\n\ud83d\udd17 Read More: avoiding callbacks\n\n 2.2 Use only the built-in Error object\nTL;DR: Many throw errors as a string or as some custom type \u2013 this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error \u2013 using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information\nOtherwise: When invoking some component, being uncertain which type of errors come in return \u2013 it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!\n\ud83d\udd17 Read More: using the built-in error object\n\n 2.3 Distinguish operational vs programmer errors\nTL;DR: Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application\nOtherwise: You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal \u2013 keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context\n\ud83d\udd17 Read More: operational vs programmer error\n\n 2.4 Handle errors centrally, not within a middleware\nTL;DR: Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in\nOtherwise: Not handling errors within a single place will lead to code duplication and probably to improperly handled errors\n\ud83d\udd17 Read More: handling errors in a centralized place\n\n 2.5 Document API errors using Swagger or GraphQL\nTL;DR: Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you're using GraphQL, you can utilize your schema and comments as well.\nOtherwise: An API client might decide to crash and restart only because it received back an error it couldn\u2019t understand. Note: the caller of your API might be you (very typical in a microservice environment)\n\ud83d\udd17 Read More: documenting API errors in Swagger or GraphQL\n\n 2.6 Exit the process gracefully when a stranger comes to town\nTL;DR: When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like Forever or PM2\nOtherwise: When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily\n\ud83d\udd17 Read More: shutting the process\n\n 2.7 Use a mature logger to increase error visibility\nTL;DR: A set of mature logging tools like Pino or Log4js, will speed-up error discovery and understanding. So forget about console.log\nOtherwise: Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late\n\ud83d\udd17 Read More: using a mature logger\n\n 2.8 Test error flows using your favorite test framework\nTL;DR: Whether professional automated QA or plain manual developer testing \u2013 Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha & Chai can handle this easily (see code examples within the \"Gist popup\")\nOtherwise: Without testing, whether automatically or manually, you can\u2019t rely on your code to return the right errors. Without meaningful errors \u2013 there\u2019s no error handling\n\ud83d\udd17 Read More: testing error flows\n\n 2.9 Discover errors and downtime using APM products\nTL;DR: Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing\nOtherwise: You might spend great effort on measuring API performance and downtimes, probably you\u2019ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX\n\ud83d\udd17 Read More: using APM products\n\n 2.10 Catch unhandled promise rejections\nTL;DR: Any exception thrown within a promise will get swallowed and discarded unless a developer didn\u2019t forget to explicitly handle it. Even if your code is subscribed to process.uncaughtException! Overcome this by registering to the event process.unhandledRejection\nOtherwise: Your errors will get swallowed and leave no trace. Nothing to worry about\n\ud83d\udd17 Read More: catching unhandled promise rejection\n\n 2.11 Fail fast, validate arguments using a dedicated library\nTL;DR: Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like ajv and Joi\nOtherwise: Consider this \u2013 your function expects a numeric argument \u201cDiscount\u201d which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?\n\ud83d\udd17 Read More: failing fast\n\n\u2b06 Return to top\n3. Code Style Practices\n 3.1 Use ESLint\nTL;DR: ESLint is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like prettier and beautify are more powerful in formatting the fix and work in conjunction with ESLint\nOtherwise: Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project's code style\n\ud83d\udd17 Read More: Using ESLint and Prettier\n\n 3.2 Node.js specific plugins\nTL;DR: On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like eslint-plugin-node, eslint-plugin-mocha and eslint-plugin-node-security\nOtherwise: Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early\n\n 3.3 Start a Codeblock's Curly Braces on the Same Line\nTL;DR: The opening curly braces of a code block should be on the same line as the opening statement\nCode Example\n\/\/ Do\nfunction someFunction() {\n  \/\/ code block\n}\n\n\/\/ Avoid\nfunction someFunction()\n{\n  \/\/ code block\n}\nOtherwise: Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:\n\ud83d\udd17 Read more: \"Why do results vary based on curly brace placement?\" (StackOverflow)\n\n 3.4 Separate your statements properly\nNo matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.\nTL;DR: Use ESLint to gain awareness about separation concerns. Prettier or Standardjs can automatically resolve these issues.\nOtherwise: As seen in the previous section, JavaScript's interpreter automatically adds a semicolon at the end of a statement if there isn't one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.\nCode example\n\/\/ Do\nfunction doThing() {\n    \/\/ ...\n}\n\ndoThing()\n\n\/\/ Do\n\nconst items = [1, 2, 3]\nitems.forEach(console.log)\n\n\/\/ Avoid \u2014 throws exception\nconst m = new Map()\nconst a = [1,2,3]\n[...m.values()].forEach(console.log)\n> [...m.values()].forEach(console.log)\n>  ^^^\n> SyntaxError: Unexpected token ...\n\n\/\/ Avoid \u2014 throws exception\nconst count = 2 \/\/ it tries to run 2(), but 2 is not a function\n(function doSomething() {\n  \/\/ do something amazing\n}())\n\/\/ put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs alltogether\n\ud83d\udd17 Read more: \"Semi ESLint rule\"\n\ud83d\udd17 Read more: \"No unexpected multiline ESLint rule\"\n\n 3.5 Name your functions\nTL;DR: Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you're looking at when checking a memory snapshot\nOtherwise: Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions\n\n 3.6 Use naming conventions for variables, constants, functions and classes\nTL;DR: Use lowerCamelCase when naming constants, variables and functions and UpperCamelCase (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables\/functions, and classes that require instantiation. Use descriptive names, but try to keep them short\nOtherwise: Javascript is the only language in the world that allows invoking a constructor (\"Class\") directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase\n3.6 Code Example\n\/\/ for class name we use UpperCamelCase\nclass SomeClassExample {}\n\n\/\/ for const names we use the const keyword and lowerCamelCase\nconst config = {\n  key: \"value\"\n};\n\n\/\/ for variables and functions names we use lowerCamelCase\nlet someVariableExample = \"value\";\nfunction doSomething() {}\n\n 3.7 Prefer const over let. Ditch the var\nTL;DR: Using const means that once a variable is assigned, it cannot be reassigned. Preferring const will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use let to declare it. Another important aspect of let is that a variable declared using it is only available in the block scope in which it was defined. var is function scoped, not block-scoped, and shouldn't be used in ES6 now that you have const and let at your disposal\nOtherwise: Debugging becomes way more cumbersome when following a variable that frequently changes\n\ud83d\udd17 Read more: JavaScript ES6+: var, let, or const? \n\n 3.8 Require modules first, not inside functions\nTL;DR: Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems\nOtherwise: Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function\n\n 3.9 Require modules by folders, as opposed to the files directly\nTL;DR: When developing a module\/library in a folder, place an index.js file that exposes the module's internals so every consumer will pass through it. This serves as an 'interface' to your module and eases future changes without breaking the contract\nOtherwise: Changing the internal structure of files or the signature may break the interface with clients\n3.9 Code example\n\/\/ Do\nmodule.exports.SMSProvider = require(\".\/SMSProvider\");\nmodule.exports.SMSNumberResolver = require(\".\/SMSNumberResolver\");\n\n\/\/ Avoid\nmodule.exports.SMSProvider = require(\".\/SMSProvider\/SMSProvider.js\");\nmodule.exports.SMSNumberResolver = require(\".\/SMSNumberResolver\/SMSNumberResolver.js\");\n\n 3.10 Use the === operator\nTL;DR: Prefer the strict equality operator === over the weaker abstract equality operator ==. == will compare two variables after converting them to a common type. There is no type conversion in ===, and both variables must be of the same type to be equal\nOtherwise: Unequal variables might return true when compared with the == operator\n3.10 Code example\n\"\" == \"0\"; \/\/ false\n0 == \"\"; \/\/ true\n0 == \"0\"; \/\/ true\n\nfalse == \"false\"; \/\/ false\nfalse == \"0\"; \/\/ true\n\nfalse == undefined; \/\/ false\nfalse == null; \/\/ false\nnull == undefined; \/\/ true\n\n\" \\t\\r\\n \" == 0; \/\/ true\nAll statements above will return false if used with ===\n\n 3.11 Use Async Await, avoid callbacks\nTL;DR: Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch\nOtherwise: Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow\n\ud83d\udd17Read more: Guide to async-await 1.0\n\n 3.12 Use arrow function expressions (=>)\nTL;DR: Though it's recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. this)\nOtherwise: Longer code (in ES5 functions) is more prone to bugs and cumbersome to read\n\ud83d\udd17 Read more: It\u2019s Time to Embrace Arrow Functions\n\n\u2b06 Return to top\n4. Testing And Overall Quality Practices\n 4.1 At the very least, write API (component) testing\nTL;DR: Most projects just don't have any automated testing due to short timetables or often the 'testing project' ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like Postman. Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc\nOtherwise: You may spend long days on writing unit tests to find out that you got only 20% system coverage\n\n 4.2 Include 3 parts in each test name\nTL;DR: Make the test speak at the requirements level so it's self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result\nOtherwise: A deployment just failed, a test named \u201cAdd product\u201d failed. Does this tell you what exactly is malfunctioning?\n\ud83d\udd17 Read More: Include 3 parts in each test name\n\n 4.3 Structure tests by the AAA pattern\nTL;DR: Structure your tests with 3 well-separated sections: Arrange, Act & Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan\nOtherwise: Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain\n\ud83d\udd17 Read More: Structure tests by the AAA pattern\n\n 4.4 Detect code issues with a linter\nTL;DR: Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check Section 3 on Code Style Practices\nOtherwise: You may let pass some anti-pattern and possible vulnerable code to your production environment.\n\n 4.5 Avoid global test fixtures and seeds, add data per-test\nTL;DR: To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records\nOtherwise: Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build\n\ud83d\udd17 Read More: Avoid global test fixtures\n\n 4.6 Constantly inspect for vulnerable dependencies\nTL;DR: Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as \ud83d\udd17 npm audit and \ud83d\udd17 snyk.io that can be invoked from your CI on every build\nOtherwise: Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious\n\n 4.7 Tag your tests\nTL;DR: Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha --grep 'sanity'\nOtherwise: Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests\n\n 4.8 Check your test coverage, it helps to identify wrong test patterns\nTL;DR: Code coverage tools like Istanbul\/NYC are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold\nOtherwise: There won't be any automated metric telling you when a large portion of your code is not covered by testing\n\n 4.9 Inspect for outdated packages\nTL;DR: Use your preferred tool (e.g. 'npm outdated' or npm-check-updates to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version\nOtherwise: Your production will run packages that have been explicitly tagged by their author as risky\n\n 4.10 Use production-like environment for e2e testing\nTL;DR: End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the Otherwise clause, this should mention docker-compose)\nOtherwise: Without docker-compose, teams must maintain a testing DB for each testing environment including developers' machines, keep all those DBs in sync so test results won't vary across environments\n\n 4.11 Refactor regularly using static analysis tools\nTL;DR: Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are Sonarqube (2,600+ stars) and Code Climate (1,500+ stars).\nOtherwise: With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix\n\ud83d\udd17 Read More: Refactoring!\n\n 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)\nTL;DR: Your continuous integration platform (CICD) will host all the quality tools (e.g test, lint) so it should come with a vibrant ecosystem of plugins. Jenkins used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like CircleCI and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it's a trade-off between robustness and speed - choose your side carefully\nOtherwise: Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup\n\ud83d\udd17 Read More: Choosing CI platform\n 4.13 Test your middlewares in isolation\nTL;DR: When a middleware holds some immense logic that spans many requests, it worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects\nOtherwise: A bug in Express middleware === a bug in all or most requests\n\ud83d\udd17 Read More: Test middlewares in isolation\n\n\u2b06 Return to top\n5. Going To Production Practices\n 5.1. Monitoring\nTL;DR: Monitoring is a game of finding out issues before customers do \u2013 obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click \u2018The Gist\u2019 below for an overview of the solutions\nOtherwise: Failure === disappointed customers. Simple\n\ud83d\udd17 Read More: Monitoring!\n\n 5.2. Increase transparency using smart logging\nTL;DR: Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted\nOtherwise: You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information\n\ud83d\udd17 Read More: Increase transparency using smart logging\n\n 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy\nTL;DR: Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use \u2018real\u2019 middleware services like nginx, HAproxy or cloud vendor services instead\nOtherwise: Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly\n\ud83d\udd17 Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy\n\n 5.4. Lock dependencies\nTL;DR: Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default \u2013 when you install packages at various environments it tries to fetch packages\u2019 latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use npm shrinkwrap. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default\nOtherwise: QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code\n\ud83d\udd17 Read More: Lock dependencies\n\n 5.5. Guard process uptime using the right tool\nTL;DR: The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today's \u2018dockerized\u2019 world, cluster management tools should be considered as well\nOtherwise: Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos\n\ud83d\udd17 Read More: Guard process uptime using the right tool\n\n 5.6. Utilize all CPU cores\nTL;DR: At its basic form, a Node app runs on a single CPU core while all others are left idling. It\u2019s your duty to replicate the Node process and utilize all CPUs \u2013 For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)\nOtherwise: Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)\n\ud83d\udd17 Read More: Utilize all CPU cores\n\n 5.7. Create a \u2018maintenance endpoint\u2019\nTL;DR: Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it\u2019s highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code\nOtherwise: You\u2019ll find that you\u2019re performing many \u201cdiagnostic deploys\u201d \u2013 shipping code to production only to extract some information for diagnostic purposes\n\ud83d\udd17 Read More: Create a \u2018maintenance endpoint\u2019\n\n 5.8. Discover errors and downtime using APM products\nTL;DR: Application monitoring and performance products (a.k.a APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-users side while suggesting the root cause\nOtherwise: You might spend great effort on measuring API performance and downtimes, probably you\u2019ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX\n\ud83d\udd17 Read More: Discover errors and downtime using APM products\n\n 5.9. Make your code production-ready\nTL;DR: Code with the end in mind, plan for production from day 1. This sounds a bit vague so I\u2019ve compiled a few development tips that are closely related to production maintenance (click Gist below)\nOtherwise: A world champion IT\/DevOps guy won\u2019t save a system that is badly written\n\ud83d\udd17 Read More: Make your code production-ready\n\n 5.10. Measure and guard the memory usage\nTL;DR: Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node\u2019s code \u2013 thus watching Node\u2019s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system\nOtherwise: Your process memory might leak a hundred megabytes a day like how it happened at Walmart\n\ud83d\udd17 Read More: Measure and guard the memory usage\n\n 5.11. Get your frontend assets out of Node\nTL;DR: Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model\nOtherwise: Your single Node thread will be busy streaming hundreds of html\/images\/angular\/react files instead of allocating all its resources for the task it was born for \u2013 serving dynamic content\n\ud83d\udd17 Read More: Get your frontend assets out of Node\n\n 5.12. Be stateless, kill your servers almost every day\nTL;DR: Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider \u2018killing\u2019 your servers periodically or use \u2018serverless\u2019 platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior\nOtherwise: Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server\n\ud83d\udd17 Read More: Be stateless, kill your Servers almost every day\n\n 5.13. Use tools that automatically detect vulnerabilities\nTL;DR: Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately\nOtherwise: Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious\n\ud83d\udd17 Read More: Use tools that automatically detect vulnerabilities\n\n 5.14. Assign a transaction id to each log statement\nTL;DR: Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Unfortunately, this is not easy to achieve in Node due to its async nature, see code examples inside\nOtherwise: Looking at a production error log without the context \u2013 what happened before \u2013 makes it much harder and slower to reason about the issue\n\ud83d\udd17 Read More: Assign \u2018TransactionId\u2019 to each log statement\n\n 5.15. Set NODE_ENV=production\nTL;DR: Set the environment variable NODE_ENV to \u2018production\u2019 or \u2018development\u2019 to flag whether production optimizations should get activated \u2013 many npm packages determine the current environment and optimize their code for production\nOtherwise: Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting NODE_ENV makes it slower by a factor of three!\n\ud83d\udd17 Read More: Set NODE_ENV=production\n\n 5.16. Design automated, atomic and zero-downtime deployments\nTL;DR: Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don\u2019t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment\nOtherwise: Long deployments -> production downtime & human-related error -> team unconfident in making deployment -> fewer deployments and features\n\n 5.17. Use an LTS release of Node.js\nTL;DR: Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements\nOtherwise: Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain\n\ud83d\udd17 Read More: Use an LTS release of Node.js\n\n 5.18. Don't route logs within the app\nTL;DR: Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to stdout using a logger utility and then let the execution environment (container, server, etc.) pipe the stdout stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).\nOtherwise: Application handling log routing === hard to scale, loss of logs, poor separation of concerns\n\ud83d\udd17 Read More: Log Routing\n\n 5.19. Install your packages with npm ci\nTL;DR: You have to be sure that production code uses the exact version of the packages you have tested it with. Run npm ci to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.\nOtherwise: QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.\n\ud83d\udd17 Read More: Use npm ci\n\n\u2b06 Return to top\n6. Security Best Practices\n\n\n\n 6.1. Embrace linter security rules\n \nTL;DR: Make use of security-related linter plugins such as eslint-plugin-security to catch security vulnerabilities and issues as early as possible, preferably while they're being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click 'Read more' below to see code examples that will get caught by a security linter\nOtherwise: What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories\n\ud83d\udd17 Read More: Lint rules\n\n 6.2. Limit concurrent requests using a middleware\n\nTL;DR: DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, rate-limiter-flexible package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. express-rate-limit)\nOtherwise: An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.\n\ud83d\udd17 Read More: Implement rate limiting\n\n 6.3 Extract secrets from config files or use packages to encrypt them\n \nTL;DR: Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes\/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit\/push hooks to prevent committing secrets accidentally\nOtherwise: Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).\n\ud83d\udd17 Read More: Secret management\n\n 6.4. Prevent query injection vulnerabilities with ORM\/ODM libraries\n\nTL;DR: To prevent SQL\/NoSQL injection and other malicious attacks, always make use of an ORM\/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. Sequelize, Knex, mongoose) have built-in protection against injection attacks.\nOtherwise: Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.\n\ud83d\udd17 Read More: Query injection prevention using ORM\/ODM libraries\n\n 6.5. Collection of generic security best practices\nTL;DR: This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.\n\ud83d\udd17 Read More: Common security best practices\n\n 6.6. Adjust the HTTP response headers for enhanced security\n\nTL;DR: Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like helmet.\nOtherwise: Attackers could perform direct attacks on your application's users, leading to huge security vulnerabilities\n\ud83d\udd17 Read More: Using secure headers in your application\n\n 6.7. Constantly and automatically inspect for vulnerable dependencies\n\nTL;DR: With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like npm audit or snyk to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.\nOtherwise: An attacker could detect your web framework and attack all its known vulnerabilities.\n\ud83d\udd17 Read More: Dependency security\n\n 6.8. Protect Users' Passwords\/Secrets using BCrypt or Script\n\nTL;DR: Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like bcrypt,scrypt, or worst case pbkdf2.\nOtherwise: Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.\n\ud83d\udd17 Read More: User Passwords\n\n 6.9. Escape HTML, JS and CSS output\n\nTL;DR: Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)\nOtherwise: An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients\n\ud83d\udd17 Read More: Escape output\n\n 6.10. Validate incoming JSON schemas\n \nTL;DR: Validate the incoming requests' body payload and ensure it meets expectations, fail fast if it doesn't. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as jsonschema or joi\nOtherwise: Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application\n\ud83d\udd17 Read More: Validate incoming JSON schemas\n\n 6.11. Support blacklisting JWTs\n\nTL;DR: When using JSON Web Tokens (for example, with Passport.js), by default there's no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there's no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blacklist of untrusted tokens that are validated on each request.\nOtherwise: Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.\n\ud83d\udd17 Read More: Blacklist JSON Web Tokens\n\n 6.12. Prevent brute-force attacks against authorization\n\nTL;DR: A simple and powerful technique is to limit authorization attempts using two metrics:\n\nThe first is number of consecutive failed attempts by the same user unique ID\/name and IP address.\nThe second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.\n\nOtherwise: An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application\n\ud83d\udd17 Read More: Login rate limiting\n\n 6.13. Run Node.js as non-root user\n\nTL;DR: There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It's recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user's behalf by invoking the container with the flag \"-u username\"\nOtherwise: An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)\n\ud83d\udd17 Read More: Run Node.js as non-root user\n\n 6.14. Limit payload size using a reverse-proxy or a middleware\n \nTL;DR: The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS\/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring express body parser to accept only small-size payloads\nOtherwise: Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks\n\ud83d\udd17 Read More: Limit payload size\n\n 6.15. Avoid JavaScript eval statements\n  \nTL;DR: eval is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is new Function constructor. setTimeout and setInterval should never be passed dynamic JavaScript code either.\nOtherwise: Malicious JavaScript code finds a way into text passed into eval or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.\n\ud83d\udd17 Read More: Avoid JavaScript eval statements\n\n 6.16. Prevent evil RegEx from overloading your single thread execution\n\nTL;DR: Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on \ud83d\udd25. For that reason, prefer third-party validation packages like validator.js instead of writing your own Regex patterns, or make use of safe-regex to detect vulnerable regex patterns\nOtherwise: Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular moment package was found vulnerable with malicious RegEx usage in November of 2017\n\ud83d\udd17 Read More: Prevent malicious RegEx\n\n 6.17. Avoid module loading using a variable\n  \nTL;DR: Avoid requiring\/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. fs.readFile()) or other sensitive resource access with dynamic variables originating from user input. Eslint-plugin-security linter can catch such patterns and warn early enough\nOtherwise: Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.\n\ud83d\udd17 Read More: Safe module loading\n\n 6.18. Run unsafe code in a sandbox\n  \nTL;DR: When tasked to run external code that is given at run-time (e.g. plugin), use any sort of 'sandbox' execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. cluster.fork()), serverless environment or dedicated npm packages that act as a sandbox\nOtherwise: A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables\n\ud83d\udd17 Read More: Run unsafe code in a sandbox\n\n 6.19. Take extra care when working with child processes\n  \nTL;DR: Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using child_process.execFile which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.\nOtherwise: Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.\n\ud83d\udd17 Read More: Be cautious when working with child processes\n\n 6.20. Hide error details from clients\n\nTL;DR: An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details\nOtherwise: Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace\n\ud83d\udd17 Read More: Hide error details from client\n\n 6.21. Configure 2FA for npm or Yarn\n\nTL;DR: Any step in the development chain should be protected with MFA (multi-factor authentication), npm\/Yarn are a sweet opportunity for attackers who can get their hands on some developer's password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.\nOtherwise: Have you heard about the eslint developer whose password was hijacked?\n\n 6.22. Modify session middleware settings\n\nTL;DR: Each web framework and technology has its known weaknesses\u200a-\u200atelling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the X-Powered-By header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)\nOtherwise: Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities\n\ud83d\udd17 Read More: Cookie and session security\n\n 6.23. Avoid DOS attacks by explicitly setting when a process should crash\n\nTL;DR: The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error\u200a-\u200aunless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There's no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)\nOtherwise: This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests\u200a-\u200aa handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease\n\n 6.24. Prevent unsafe redirects\n\nTL;DR: Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.\nOtherwise: If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.\n\ud83d\udd17 Read More: Prevent unsafe redirects\n\n 6.25. Avoid publishing secrets to the npm registry\n\nTL;DR: Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An .npmignore file can be used to blacklist specific files or folders, or the files array in package.json can act as a whitelist.\nOtherwise: Your project's API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.\n\ud83d\udd17 Read More: Avoid publishing secrets\n\n\u2b06 Return to top\n7. Draft: Performance Best Practices\nOur contributors are working on this section. Would you like to join?\n\n 7.1. Don't block the event loop\nTL;DR: Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.\nOtherwise: As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. 3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back\n\ud83d\udd17 Read More: Do not block the event loop\n\n 7.2. Prefer native JS methods over user-land utils like Lodash\nTL;DR: It's often more penalising to use utility libraries like lodash and underscore over native methods as it leads to unneeded dependencies and slower performance.\nBear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it's now about 50% more performant than utility libraries.\nOtherwise: You'll have to maintain less performant projects where you could have simply used what was already available or dealt with a few more lines in exchange of a few more files.\n\ud83d\udd17 Read More: Native over user land utils\n\n\u2b06 Return to top\n8. Docker Best Practices\n\ud83c\udfc5 Many thanks to Bret Fisher from whom we learned many of the following practices\n\n 8.1 Use multi-stage builds for leaner and more secure Docker images\nTL;DR: Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what's necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.\nOtherwise: Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.\nExample Dockerfile for multi-stage builds\nFROM node:14.4.0 AS build\n\nCOPY . .\nRUN npm ci && npm run build\n\nFROM node:slim-14.4.0\n\nUSER node\nEXPOSE 8080\n\nCOPY --from=build \/home\/node\/app\/dist \/home\/node\/app\/package.json \/home\/node\/app\/package-lock.json .\/\nRUN npm ci --production\n\nCMD [ \"node\", \"dist\/app.js\" ]\n\ud83d\udd17 Read More: Use multi-stage builds\n\n 8.2. Bootstrap using 'node' command, avoid npm start\nTL;DR: use CMD ['node','server.js'] to start your app, avoid using npm scripts which don't pass OS signals to the code. This prevents problems with child-process, signal handling, graceful shutdown and having zombie processes.\nOtherwise: When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and\/or data.\nRead More: Bootstrap container using node command, avoid npm start\n\n 8.3. Let the Docker runtime handle replication and uptime\nTL;DR: When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes\nOtherwise: Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance\n\ud83d\udd17 Read More: Let the Docker orchestrator restart and replicate processes\n\n 8.4. Use .dockerignore to prevent leaking secrets\nTL;DR: Include a .dockerignore file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker\nOtherwise: Common personal secret files like .env, .aws and .npmrc will be shared with anybody with access to the image (e.g. Docker repository)\n\ud83d\udd17 Read More: Use .dockerignore\n\n 8.5. Clean-up dependencies before production\nTL;DR: Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running npm ci --production\nOtherwise: Many of the infamous npm security breaches were found within development packages (e.g. eslint-scope)\n\ud83d\udd17 Read More: Remove development dependencies\n\n 8.6. Shutdown smartly and gracefully\nTL;DR: Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources\nOtherwise: Dying immediately means not responding to thousands of disappointed users\n\ud83d\udd17 Read More: Graceful shutdown\n\n 8.7. Set memory limits using both Docker and v8\nTL;DR: Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the --v8's flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8's old space memory to be a just bit less than the container limit\nOtherwise: The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8's limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources\n\ud83d\udd17 Read More: Set memory limits using Docker only\n\n 8.8. Plan for efficient caching\nTL;DR: Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.\nOtherwise: Docker build will be very long and consume lot of resources even when making tiny changes\n\ud83d\udd17 Read More: Leverage caching to reduce build times\n\n 8.9. Use explicit image reference, avoid latest tag\nTL;DR: Specify an explicit image digest or versioned label, never refer to latest. Developers are often led to believe that specifying the latest tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.\nIn addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.\nOtherwise: A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.\n\ud83d\udd17 Read More: Understand image tags and use the \"latest\" tag with caution\n\n 8.10. Prefer smaller Docker base images\nTL;DR: Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.\nOtherwise: Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.\n\ud83d\udd17 Read More: Prefer smaller images\n\n 8.11. Clean-out build-time secrets, avoid secrets in args\nTL;DR: Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like .npmrc and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces\nOtherwise: Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus\n\ud83d\udd17 Read More: Clean-out build-time secrets\n\n 8.12. Scan images for multi layers of vulnerabilities\nTL;DR: Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI\/CD plugins\nOtherwise: Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications\n\ud83d\udd17 Read More: Generic Docker practices\n\n 8.13 Clean NODE_MODULE cache\nTL;DR: After installing dependencies in a container remove the local cache. It doesn't make any sense to duplicate the dependencies for faster future installs since there won't be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off\nOtherwise: The image that will get shipped to production will weigh 30% more due to files that will never get used\n\ud83d\udd17 Read More: Clean NODE_MODULE cache\n\n 8.14. Generic Docker practices\nTL;DR: This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.\n\ud83d\udd17 Read More: Generic Docker practices\n\n 8.15. Lint your Dockerfile\nTL;DR: Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.\nOtherwise: Mistakenely the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.\n\ud83d\udd17 Read More: Lint your Dockerfile\n\n\u2b06 Return to top\nMilestones\nTo maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our milestones and join the working groups if you want to contribute to this project\n\nTranslations\nAll translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!\nCompleted translations\n\n Brazilian Portuguese - Courtesy of Marcelo Melo\n Chinese - Courtesy of Matt Jin\n Russian - Courtesy of Alex Ivanov\n Polish - Courtesy of Michal Biesiada\n\nTranslations in progress\n\n French (Discussion)\n Hebrew (Discussion)\n Korean - Courtesy of Sangbeom Han (Discussion)\n Spanish (Discussion)\n Turkish (Discussion)\n\n\nSteering Committee\nMeet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our Github projects.\n\nYoni Goldberg\n\n\nIndependent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at goldbergyoni.com. Reach Yoni at @goldbergyoni or me@goldbergyoni.com\n\n\nBruno Scheufler\n\n\ud83d\udcbb full-stack web engineer, Node.js & GraphQL enthusiast\n\n\nKyle Martin\n\n\nFull Stack Developer & Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.\n\n\nKevyn Bruyere\n\nIndependent full-stack developer with a taste for Ops and automation.\n\nSteering Committee Emeriti\n\nSagir Khan\n\n\n\nDeep specialist in JavaScript and its ecosystem \u2014 React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS\/JSON in any layer of the system \u2014 building products using the web platform for the world\u2019s most recognized brands. Individual Member of the Node.js Foundation.\n\nCollaborators\nThank you to all our collaborators! \ud83d\ude4f\nOur collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our contributor guidelines \ud83c\udf89\n\n\n\n\n\n\n\n\n\nIdo Richter (Founder)\nKeith Holliday\n\n\n\nCollaborator Emeriti\n\n\n\n\n\n\n\n\nRefael Ackermann\n\n\n\n\nContributing\nIf you've ever wanted to contribute to open source, now is your chance! See the contributing docs for more information.\nContributors \u2728\nThanks goes to these wonderful people who have contributed to this repository!\n\n\nKevin Rambaud\ud83d\udd8b\nMichael Fine\ud83d\udd8b\nShreya Dahal\ud83d\udd8b\nMatheus Cruz Rocha\ud83d\udd8b\nYog Mehta\ud83d\udd8b\nKudakwashe Paradzayi\ud83d\udd8b\nt1st3\ud83d\udd8b\n\n\nmulijordan1976\ud83d\udd8b\nMatan Kushner\ud83d\udd8b\nFabio Hiroki\ud83d\udd8b\nJames Sumners\ud83d\udd8b\nDan Gamble\ud83d\udd8b\nPJ Trainor\ud83d\udd8b\nRemek Ambroziak\ud83d\udd8b\n\n\nYoni Jah\ud83d\udd8b\nMisha Khokhlov\ud83d\udd8b\nEvgeny Orekhov\ud83d\udd8b\n-\ud83d\udd8b\nIsaac Halvorson\ud83d\udd8b\nVedran Kara\u010di\u0107\ud83d\udd8b\nlallenlowe\ud83d\udd8b\n\n\nNathan Wells\ud83d\udd8b\nPaulo Reis\ud83d\udd8b\nsyzer\ud83d\udd8b\nDavid Sancho\ud83d\udd8b\nRobert Manolea\ud83d\udd8b\nXavier Ho\ud83d\udd8b\nAaron\ud83d\udd8b\n\n\nJan Charles Maghirang Adona\ud83d\udd8b\nAllen\ud83d\udd8b\nLeonardo Villela\ud83d\udd8b\nMicha\u0142 Za\u0142\u0119cki\ud83d\udd8b\nChris Nicola\ud83d\udd8b\nAlejandro Corredor\ud83d\udd8b\ncwar\ud83d\udd8b\n\n\nYuwei\ud83d\udd8b\nUtkarsh Bhatt\ud83d\udd8b\nDuarte Mendes\ud83d\udd8b\nJason Kim\ud83d\udd8b\nMitja O.\ud83d\udd8b\nSandro Miguel Marques\ud83d\udd8b\nGabe\ud83d\udd8b\n\n\nRon Gross\ud83d\udd8b\nValeri Karpov\ud83d\udd8b\nSergio Bernal\ud83d\udd8b\nNikola Telkedzhiev\ud83d\udd8b\nVitor Godoy\ud83d\udd8b\nManish Saraan\ud83d\udd8b\nSangbeom Han\ud83d\udd8b\n\n\nblackmatch\ud83d\udd8b\nJoe Reeve\ud83d\udd8b\nRyan Busby\ud83d\udd8b\nIman Mohamadi\ud83d\udd8b\nSergii Paryzhskyi\ud83d\udd8b\nKapil Patel\ud83d\udd8b\n\u8ff7\u6e21\ud83d\udd8b\n\n\nHozefa\ud83d\udd8b\nEthan\ud83d\udd8b\nSam\ud83d\udd8b\nArlind\ud83d\udd8b\nTeddy Toussaint\ud83d\udd8b\nLewis\ud83d\udd8b\nGabriel Lidenor \ud83d\udd8b\n\n\nRoman\ud83d\udd8b\nFrancozeira\ud83d\udd8b\nInvvard\ud83d\udd8b\nR\u00f4mulo Garofalo\ud83d\udd8b\nTho Q Luong\ud83d\udd8b\nBurak Shen\ud83d\udd8b\nMartin Muzatko\ud83d\udd8b\n\n\nJared Collier\ud83d\udd8b\nHilton Meyer\ud83d\udd8b\nChangJoo Park(\ubc15\ucc3d\uc8fc)\ud83d\udd8b\nMasahiro Sakaguchi\ud83d\udd8b\nKeith Holliday\ud83d\udd8b\ncoreyc\ud83d\udd8b\nMaximilian Berkmann\ud83d\udd8b\n\n\nDouglas Mariano Valero\ud83d\udd8b\nMarcelo Melo\ud83d\udd8b\nMehmet Perk\ud83d\udd8b\nryan ouyang\ud83d\udd8b\nShabeer\ud83d\udd8b\nEduard Kyvenko\ud83d\udd8b\nDeyvison Rocha\ud83d\udd8b\n\n\nGeorge Mamer\ud83d\udd8b\nKonstantinos Leimonis\ud83d\udd8b\nOliver Lluberes\ud83c\udf0d\nTien Do\ud83d\udd8b\nRanvir Singh\ud83d\udd8b\nVadim Nicolaev\ud83d\udd8b\nGerman Gamboa Gonzalez\ud83d\udd8b\n\n\nHafez\ud83d\udd8b\nChandiran\ud83d\udd8b\nVinayaSathyanarayana\ud83d\udd8b\nKim Kern\ud83d\udd8b\nKenneth Freitas\ud83d\udd8b\nsonge\ud83d\udd8b\nKirill Shekhovtsov\ud83d\udd8b\n\n\nSerge\ud83d\udd8b\nkeyrwinz\ud83d\udd8b\nDmitry Nikitenko\ud83d\udd8b\nbushuai\ud83d\udc40 \ud83d\udd8b\nBenjamin Gruenbaum\ud83d\udd8b\nEzequiel\ud83c\udf0d\nJuan Jos\u00e9 Rodr\u00edguez\ud83c\udf0d\n\n\nOr Bin\ud83d\udd8b\nAndreo Vieira\ud83d\udd8b\nMichael Solomon\ud83d\udd8b\nJimmy Callin\ud83d\udd8b\nSiddharth\ud83d\udd8b\nRyan Smith\ud83d\udd8b\nTom Boettger\ud83d\udd8b\n\n\nJoaqu\u00edn Ormaechea\ud83c\udf0d\ndfrzuz\ud83c\udf0d\nVictor Homyakov\ud83d\udd8b\nJosh\ud83d\udd8b \ud83d\udee1\ufe0f\nAlec Francis\ud83d\udd8b\narjun6610\ud83d\udd8b\nJan Osch\ud83d\udd8b\n\n\nThiago Rotondo Sampaio\ud83c\udf0d\n\n\n","19":"jQuery \u2014 New Wave JavaScript\n\n\nContribution Guides\nIn the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:\n\nGetting Involved\nCore Style Guide\nWriting Code for jQuery Foundation Projects\n\nEnvironments in which to use jQuery\n\nBrowser support\njQuery also supports Node, browser extensions, and other non-browser environments.\n\nWhat you need to build your own jQuery\nTo build jQuery, you need to have the latest Node.js\/npm and git 1.7 or later. Earlier versions might work, but are not supported.\nFor Windows, you have to download and install git and Node.js.\nmacOS users should install Homebrew. Once Homebrew is installed, run brew install git to install git,\nand brew install node to install Node.js.\nLinux\/BSD users should use their appropriate package managers to install git and Node.js, or build from source\nif you swing that way. Easy-peasy.\nHow to build your own jQuery\nFirst, clone the jQuery git repo.\nThen, enter the jquery directory and run the build script:\ncd jquery && npm run build\nThe built version of jQuery will be put in the dist\/ subdirectory, along with the minified copy and associated map file.\nIf you want to create custom build or help with jQuery development, it would be better to install grunt command line interface as a global package:\nnpm install -g grunt-cli\n\nMake sure you have grunt installed by testing:\ngrunt -V\n\nNow by running the grunt command, in the jquery directory, you can build a full version of jQuery, just like with an npm run build command:\ngrunt\n\nThere are many other tasks available for jQuery Core:\ngrunt -help\n\nModules\nSpecial builds can be created that exclude subsets of jQuery functionality.\nThis allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.\nFor example, an app that only used JSONP for $.ajax() and did not need to calculate offsets or positions of elements could exclude the offset and ajax\/xhr modules.\nAny module may be excluded except for core, and selector. To exclude a module, pass its path relative to the src folder (without the .js extension).\nSome example modules that can be excluded are:\n\najax: All AJAX functionality: $.ajax(), $.get(), $.post(), $.ajaxSetup(), .load(), transports, and ajax event shorthands such as .ajaxStart().\najax\/xhr: The XMLHTTPRequest AJAX transport only.\najax\/script: The <script> AJAX transport only; used to retrieve scripts.\najax\/jsonp: The JSONP AJAX transport only; depends on the ajax\/script transport.\ncss: The .css() method. Also removes all modules depending on css (including effects, dimensions, and offset).\ncss\/showHide:  Non-animated .show(), .hide() and .toggle(); can be excluded if you use classes or explicit .css() calls to set the display property. Also removes the effects module.\ndeprecated: Methods documented as deprecated but not yet removed.\ndimensions: The .width() and .height() methods, including inner- and outer- variations.\neffects: The .animate() method and its shorthands such as .slideUp() or .hide(\"slow\").\nevent: The .on() and .off() methods and all event functionality.\nevent\/trigger: The .trigger() and .triggerHandler() methods.\noffset: The .offset(), .position(), .offsetParent(), .scrollLeft(), and .scrollTop() methods.\nwrap: The .wrap(), .wrapAll(), .wrapInner(), and .unwrap() methods.\ncore\/ready: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with jQuery() will simply be called immediately. However, jQuery(document).ready() will not be a function and .on(\"ready\", ...) or similar will not be triggered.\ndeferred: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. Note that modules that depend on jQuery.Deferred(AJAX, effects, core\/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (grunt custom:-deferred,-ajax,-effects,-core\/ready).\nexports\/global: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.\nexports\/amd: Exclude the AMD definition.\n\nThe build process shows a message for each dependent module it excludes or includes.\nAMD name\nAs an option, you can set the module name for jQuery's AMD definition. By default, it is set to \"jquery\", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply set the \"amd\" option:\ngrunt custom --amd=\"custom-name\"\nOr, to define anonymously, set the name to an empty string.\ngrunt custom --amd=\"\"\nCustom Build Examples\nTo create a custom build, first check out the version:\ngit pull; git checkout VERSION\nWhere VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:\nnpm install\nCreate the custom build using the grunt custom option, listing the modules to be excluded.\nExclude all ajax functionality:\ngrunt custom:-ajax\nExcluding css removes modules depending on CSS: effects, offset, dimensions.\ngrunt custom:-css\nExclude a bunch of modules:\ngrunt custom:-ajax\/jsonp,-css,-deprecated,-dimensions,-effects,-offset,-wrap\nThere is also a special alias to generate a build with the same configuration as the official jQuery Slim build is generated:\ngrunt custom:slim\nFor questions or requests regarding custom builds, please start a thread on the Developing jQuery Core section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process.\nRunning the Unit Tests\nMake sure you have the necessary dependencies:\nnpm install\nStart grunt watch or npm start to auto-build jQuery as you work:\ngrunt watch\nRun the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the \"test\" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:\n\nWindows: WAMP download\nMac: MAMP download\nLinux: Setting up LAMP\nMongoose (most platforms)\n\nBuilding to a different directory\nTo copy the built jQuery files from \/dist to another directory:\ngrunt && grunt dist:\/path\/to\/special\/location\/\nWith this example, the output files would be:\n\/path\/to\/special\/location\/jquery.js\n\/path\/to\/special\/location\/jquery.min.js\nTo add a permanent copy destination, create a file in dist\/ called \".destination.json\". Inside the file, paste and customize the following:\n{\n  \"\/Absolute\/path\/to\/other\/destination\": true\n}\nAdditionally, both methods can be combined.\nEssential Git\nAs the source code is handled by the Git version control system, it's useful to know some features used.\nCleaning\nIf you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):\ngit reset --hard upstream\/master\ngit clean -fdx\nRebasing\nFor feature\/topic branches, you should always use the --rebase flag to git pull, or if you are usually handling many temporary \"to be in a github pull request\" branches, run the following to automate this:\ngit config branch.autosetuprebase local\n(see man git-config for more information)\nHandling merge conflicts\nIf you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature\ngit mergetool. Even though the default tool xxdiff looks awful\/old, it's rather useful.\nThe following are some commands that can be used there:\n\nCtrl + Alt + M - automerge as much as possible\nb - jump to next merge conflict\ns - change the order of the conflicted lines\nu - undo a merge\nleft mouse button - mark a block to be the winner\nmiddle mouse button - mark a line to be the winner\nCtrl + S - save\nCtrl + Q - quit\n\nQUnit Reference\nTest methods\nexpect( numAssertions );\nstop();\nstart();\nNote: QUnit's eventual addition of an argument to stop\/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.\nTest assertions\nok( value, [message] );\nequal( actual, expected, [message] );\nnotEqual( actual, expected, [message] );\ndeepEqual( actual, expected, [message] );\nnotDeepEqual( actual, expected, [message] );\nstrictEqual( actual, expected, [message] );\nnotStrictEqual( actual, expected, [message] );\nthrows( block, [expected], [message] );\nTest Suite Convenience Methods Reference (See test\/data\/testinit.js)\nReturns an array of elements with the given IDs\nq( ... );\nExample:\nq(\"main\", \"foo\", \"bar\");\n\n=> [ div#main, span#foo, input#bar ]\nAsserts that a selection matches the given IDs\nt( testName, selector, [ \"array\", \"of\", \"ids\" ] );\nExample:\nt(\"Check for something\", \"\/\/[a]\", [\"foo\", \"bar\"]);\nFires a native DOM event without going through jQuery\nfireNative( node, eventType )\nExample:\nfireNative( jQuery(\"#elem\")[0], \"click\" );\nAdd random number to url to stop caching\nurl( \"some\/url\" );\nExample:\nurl(\"index.html\");\n\n=> \"data\/index.html?10538358428943\"\n\n\nurl(\"mock.php?foo=bar\");\n\n=> \"data\/mock.php?foo=bar&10538358345554\"\nRun tests in an iframe\nSome tests may require a document other than the standard test fixture, and\nthese can be run in a separate iframe. The actual test code and assertions\nremain in jQuery's main test files; only the minimal test fixture markup\nand setup code should be placed in the iframe file.\ntestIframe( testName, fileName,\n  function testCallback(\n      assert, jQuery, window, document,\n\t  [ additional args ] ) {\n\t...\n  } );\nThis loads a page, constructing a url with fileName \".\/data\/\" + fileName.\nThe iframed page determines when the callback occurs in the test by\nincluding the \"\/test\/data\/iframeTest.js\" script and calling\nstartIframeTest( [ additional args ] ) when appropriate. Often this\nwill be after either document ready or window.onload fires.\nThe testCallback receives the QUnit assert object created by testIframe\nfor this test, followed by the global jQuery, window, and document from\nthe iframe. If the iframe code passes any arguments to startIframeTest,\nthey follow the document argument.\nQuestions?\nIf you have any questions, please feel free to ask on the\nDeveloping jQuery Core forum or in #jquery on irc.freenode.net.\n","20":"\n\n\n\n\n\n\n\nreveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free. Check out the live demo.\nThe framework comes with a broad range of features including nested slides, Markdown support, Auto-Animate, PDF export, speaker notes, LaTeX support, syntax highlighted code and much more.\n\nGet Started\n\nDocumentation\nThe full reveal.js documentation is available at revealjs.com.\nOnline Editor\nWant to create your presentation using a visual editor? Try the official reveal.js presentation platform for free at Slides.com. It's made by the same people behind reveal.js.\nLicense\nMIT licensed\nCopyright (C) 2011-2020 Hakim El Hattab, https:\/\/hakim.se\n","21":"Atom\n\n\n\nAtom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.\n\n\nVisit atom.io to learn more or visit the Atom forum.\nFollow @AtomEditor on Twitter for important\nannouncements.\nThis project adheres to the Contributor Covenant code of conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.\nDocumentation\nIf you want to read about using Atom or developing packages in Atom, the Atom Flight Manual is free and available online. You can find the source to the manual in atom\/flight-manual.atom.io.\nThe API reference for developing packages is also documented on Atom.io.\nInstalling\nPrerequisites\n\nGit\n\nmacOS\nDownload the latest Atom release.\nAtom will automatically update when a new release is available.\nWindows\nDownload the latest Atom installer. AtomSetup.exe is 32-bit. For 64-bit systems, download AtomSetup-x64.exe.\nAtom will automatically update when a new release is available.\nYou can also download atom-windows.zip (32-bit) or atom-x64-windows.zip (64-bit) from the releases page.\nThe .zip version will not automatically update.\nUsing Chocolatey? Run cinst Atom to install the latest version of Atom.\nLinux\nAtom is only available for 64-bit Linux systems.\nConfigure your distribution's package manager to install and update Atom by following the Linux installation instructions in the Flight Manual.  You will also find instructions on how to install Atom's official Linux packages without using a package repository, though you will not get automatic updates after installing Atom this way.\nArchive extraction\nAn archive is available for people who don't want to install atom as root.\nThis version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,\nbut should be compatible with other Linux distributions.\n\nInstall dependencies (on Ubuntu): sudo apt install git gconf2 gconf-service libgtk2.0-0 libudev1 libgcrypt20 libnotify4 libxtst6 libnss3 python3 gvfs-bin xdg-utils libcap2\n\n(If the python3 package isn't available, or is too old (Python 3 should be >= 3.5), either python2 or python (2.6 or 2.7) will work in its place.)\n\n\nDownload atom-amd64.tar.gz from the Atom releases page.\nRun tar xf atom-amd64.tar.gz in the directory where you want to extract the Atom folder.\nLaunch Atom using the installed atom command from the newly extracted directory.\n\nThe Linux version does not currently automatically update so you will need to\nrepeat these steps to upgrade to future releases.\nBuilding\n\nLinux\nmacOS\nWindows\n\nDiscussion\n\nDiscuss Atom on our forums\nChat about Atom on our Slack team -- instructions for joining\n\nLicense\nMIT\nWhen using the Atom or other GitHub logos, be sure to follow the GitHub logo guidelines.\n","22":"socket.io\n \n\n\n\n\n\n\nFeatures\nSocket.IO enables real-time bidirectional event-based communication. It consists of:\n\na Node.js server (this repository)\na Javascript client library for the browser (or a Node.js client)\n\nSome implementations in other languages are also available:\n\nJava\nC++\nSwift\nDart\n\nIts main features are:\nReliability\nConnections are established even in the presence of:\n\nproxies and load balancers.\npersonal firewall and antivirus software.\n\nFor this purpose, it relies on Engine.IO, which first establishes a long-polling connection, then tries to upgrade to better transports that are \"tested\" on the side, like WebSocket. Please see the Goals section for more information.\nAuto-reconnection support\nUnless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options here.\nDisconnection detection\nA heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore.\nThat functionality is achieved with timers set on both the server and the client, with timeout values (the pingInterval and pingTimeout parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the sticky-session requirement when using multiples nodes.\nBinary support\nAny serializable data structures can be emitted, including:\n\nArrayBuffer and Blob in the browser\nArrayBuffer and Buffer in Node.js\n\nSimple and convenient API\nSample code:\nio.on('connection', socket => {\n  socket.emit('request', \/* \u2026 *\/); \/\/ emit an event to the socket\n  io.emit('broadcast', \/* \u2026 *\/); \/\/ emit an event to all connected sockets\n  socket.on('reply', () => { \/* \u2026 *\/ }); \/\/ listen to the event\n});\nCross-browser\nBrowser support is tested in Sauce Labs:\n\nMultiplexing support\nIn order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several Namespaces, which will act as separate communication channels but will share the same underlying connection.\nRoom support\nWithin each Namespace, you can define arbitrary channels, called Rooms, that sockets can join and leave. You can then broadcast to any given room, reaching every socket that has joined it.\nThis is a useful feature to send notifications to a group of users, or to a given user connected on several devices for example.\nNote: Socket.IO is not a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds some metadata to each packet: the packet type, the namespace and the ack id when a message acknowledgement is needed. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a WebSocket server (like ws:\/\/echo.websocket.org) either. Please see the protocol specification here.\nInstallation\nnpm install socket.io\nHow to use\nThe following example attaches socket.io to a plain Node.JS\nHTTP server listening on port 3000.\nconst server = require('http').createServer();\nconst io = require('socket.io')(server);\nio.on('connection', client => {\n  client.on('event', data => { \/* \u2026 *\/ });\n  client.on('disconnect', () => { \/* \u2026 *\/ });\n});\nserver.listen(3000);\nStandalone\nconst io = require('socket.io')();\nio.on('connection', client => { ... });\nio.listen(3000);\nIn conjunction with Express\nStarting with 3.0, express applications have become request handler\nfunctions that you pass to http or http Server instances. You need\nto pass the Server to socket.io, and not the express application\nfunction. Also make sure to call .listen on the server, not the app.\nconst app = require('express')();\nconst server = require('http').createServer(app);\nconst io = require('socket.io')(server);\nio.on('connection', () => { \/* \u2026 *\/ });\nserver.listen(3000);\nIn conjunction with Koa\nLike Express.JS, Koa works by exposing an application as a request\nhandler function, but only by calling the callback method.\nconst app = require('koa')();\nconst server = require('http').createServer(app.callback());\nconst io = require('socket.io')(server);\nio.on('connection', () => { \/* \u2026 *\/ });\nserver.listen(3000);\nIn conjunction with Fastify\nTo integrate Socket.io in your Fastify application you just need to\nregister fastify-socket.io plugin. It will create a decorator\ncalled io.\nconst app = require('fastify')();\napp.register(require('fastify-socket.io'));\napp.io.on('connection', () => { \/* \u2026 *\/ });\napp.listen(3000);\nDocumentation\nPlease see the documentation here.\nThe source code of the website can be found here. Contributions are welcome!\nDebug \/ logging\nSocket.IO is powered by debug.\nIn order to see all the debug output, run your app with the environment variable\nDEBUG including the desired scope.\nTo see the output from all of Socket.IO's debugging scopes you can use:\nDEBUG=socket.io* node myapp\n\nTesting\nnpm test\n\nThis runs the gulp task test. By default the test will be run with the source code in lib directory.\nSet the environmental variable TEST_VERSION to compat to test the transpiled es5-compat version of the code.\nThe gulp task test will always transpile the source code into es5 and export to dist first before running the test.\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n","23":"\n\n    Simple yet flexible JavaScript charting for designers & developers\n\n\n\n\n\n\n\n\nDocumentation\n\nIntroduction\nGetting Started\nGeneral\nConfiguration\nCharts\nAxes\nDevelopers\nPopular Extensions\nSamples\n\nContributing\nInstructions on building and testing Chart.js can be found in the documentation. Before submitting an issue or a pull request, please take a moment to look over the contributing guidelines first. For support, please post questions on Stack Overflow with the chartjs tag.\nLicense\nChart.js is available under the MIT license.\n","24":"\nFast, unopinionated, minimalist web framework for node.\n\n\n\n\n\nconst express = require('express')\nconst app = express()\n\napp.get('\/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\nInstallation\nThis is a Node.js module available through the\nnpm registry.\nBefore installing, download and install Node.js.\nNode.js 0.10 or higher is required.\nIf this is a brand new project, make sure to create a package.json first with\nthe npm init command.\nInstallation is done using the\nnpm install command:\n$ npm install express\nFollow our installing guide\nfor more information.\nFeatures\n\nRobust routing\nFocus on high performance\nSuper-high test coverage\nHTTP helpers (redirection, caching, etc)\nView system supporting 14+ template engines\nContent negotiation\nExecutable for generating applications quickly\n\nDocs & Community\n\nWebsite and Documentation - [website repo]\n#express on freenode IRC\nGitHub Organization for Official Middleware & Modules\nVisit the Wiki\nGoogle Group for discussion\nGitter for support and discussion\n\nPROTIP Be sure to read Migrating from 3.x to 4.x as well as New features in 4.x.\nSecurity Issues\nIf you discover a security vulnerability in Express, please see Security Policies and Procedures.\nQuick Start\nThe quickest way to get started with express is to utilize the executable express(1) to generate an application as shown below:\nInstall the executable. The executable's major version will match Express's:\n$ npm install -g express-generator@4\nCreate the app:\n$ express \/tmp\/foo && cd \/tmp\/foo\nInstall dependencies:\n$ npm install\nStart the server:\n$ npm start\nView the website at: http:\/\/localhost:3000\nPhilosophy\nThe Express philosophy is to provide small, robust tooling for HTTP servers, making\nit a great solution for single page applications, websites, hybrids, or public\nHTTP APIs.\nExpress does not force you to use any specific ORM or template engine. With support for over\n14 template engines via Consolidate.js,\nyou can quickly craft your perfect framework.\nExamples\nTo view the examples, clone the Express repo and install the dependencies:\n$ git clone git:\/\/github.com\/expressjs\/express.git --depth 1\n$ cd express\n$ npm install\nThen run whichever example you want:\n$ node examples\/content-negotiation\nTests\nTo run the test suite, first install the dependencies, then run npm test:\n$ npm install\n$ npm test\nContributing\nContributing Guide\nPeople\nThe original author of Express is TJ Holowaychuk\nThe current lead maintainer is Douglas Christopher Wilson\nList of all contributors\nLicense\nMIT\n","25":"JSON Server  \nGet a full fake REST API with zero coding in less than 30 seconds (seriously)\nCreated with <3 for front-end developers who need a quick back-end for prototyping and mocking.\n\nEgghead.io free video tutorial - Creating demo APIs with json-server\nJSONPlaceholder - Live running version\nMy JSON Server - no installation required, use your own data\n\nSee also:\n\n\ud83d\udc36 husky - Git hooks made easy\n\ud83c\udfe8 hotel - developer tool with local .localhost domain and https out of the box\n\n\u00a0\nGold sponsors \ud83e\udd47\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\u00a0\nBecome a sponsor and have your company logo here\nTable of contents\n\nGetting started\nRoutes\n\nPlural routes\nSingular routes\nFilter\nPaginate\nSort\nSlice\nOperators\nFull-text search\nRelationships\nDatabase\nHomepage\n\n\nExtras\n\nStatic file server\nAlternative port\nAccess from anywhere\nRemote schema\nGenerate random data\nHTTPS\nAdd custom routes\nAdd middlewares\nCLI usage\nModule\n\nSimple example\nCustom routes example\nAccess control example\nCustom output example\nRewriter example\nMounting JSON Server on another endpoint example\nAPI\n\n\nDeployment\n\n\nLinks\n\nVideo\nArticles\nThird-party tools\n\n\nLicense\n\nGetting started\nInstall JSON Server\nnpm install -g json-server\n\nCreate a db.json file with some data\n{\n  \"posts\": [\n    { \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\n  ],\n  \"comments\": [\n    { \"id\": 1, \"body\": \"some comment\", \"postId\": 1 }\n  ],\n  \"profile\": { \"name\": \"typicode\" }\n}\nStart JSON Server\njson-server --watch db.json\nNow if you go to http:\/\/localhost:3000\/posts\/1, you'll get\n{ \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\nAlso when doing requests, it's good to know that:\n\nIf you make POST, PUT, PATCH or DELETE requests, changes will be automatically and safely saved to db.json using lowdb.\nYour request body JSON should be object enclosed, just like the GET output. (for example {\"name\": \"Foobar\"})\nId values are not mutable. Any id value in the body of your PUT or PATCH request will be ignored. Only a value set in a POST request will be respected, but only if not already taken.\nA POST, PUT or PATCH request should include a Content-Type: application\/json header to use the JSON in the request body. Otherwise it will return a 2XX status code, but without changes being made to the data.\n\nRoutes\nBased on the previous db.json file, here are all the default routes. You can also add other routes using --routes.\nPlural routes\nGET    \/posts\nGET    \/posts\/1\nPOST   \/posts\nPUT    \/posts\/1\nPATCH  \/posts\/1\nDELETE \/posts\/1\n\nSingular routes\nGET    \/profile\nPOST   \/profile\nPUT    \/profile\nPATCH  \/profile\n\nFilter\nUse . to access deep properties\nGET \/posts?title=json-server&author=typicode\nGET \/posts?id=1&id=2\nGET \/comments?author.name=typicode\n\nPaginate\nUse _page and optionally _limit to paginate returned data.\nIn the Link header you'll get first, prev, next and last links.\nGET \/posts?_page=7\nGET \/posts?_page=7&_limit=20\n\n10 items are returned by default\nSort\nAdd _sort and _order (ascending order by default)\nGET \/posts?_sort=views&_order=asc\nGET \/posts\/1\/comments?_sort=votes&_order=asc\n\nFor multiple fields, use the following format:\nGET \/posts?_sort=user,views&_order=desc,asc\n\nSlice\nAdd _start and _end or _limit (an X-Total-Count header is included in the response)\nGET \/posts?_start=20&_end=30\nGET \/posts\/1\/comments?_start=20&_end=30\nGET \/posts\/1\/comments?_start=20&_limit=10\n\nWorks exactly as Array.slice (i.e. _start is inclusive and _end exclusive)\nOperators\nAdd _gte or _lte for getting a range\nGET \/posts?views_gte=10&views_lte=20\n\nAdd _ne to exclude a value\nGET \/posts?id_ne=1\n\nAdd _like to filter (RegExp supported)\nGET \/posts?title_like=server\n\nFull-text search\nAdd q\nGET \/posts?q=internet\n\nRelationships\nTo include children resources, add _embed\nGET \/posts?_embed=comments\nGET \/posts\/1?_embed=comments\n\nTo include parent resource, add _expand\nGET \/comments?_expand=post\nGET \/comments\/1?_expand=post\n\nTo get or create nested resources (by default one level, add custom routes for more)\nGET  \/posts\/1\/comments\nPOST \/posts\/1\/comments\n\nDatabase\nGET \/db\n\nHomepage\nReturns default index file or serves .\/public directory\nGET \/\n\nExtras\nStatic file server\nYou can use JSON Server to serve your HTML, JS and CSS, simply create a .\/public directory\nor use --static to set a different static files directory.\nmkdir public\necho 'hello world' > public\/index.html\njson-server db.json\njson-server db.json --static .\/some-other-dir\nAlternative port\nYou can start JSON Server on other ports with the --port flag:\n$ json-server --watch db.json --port 3004\nAccess from anywhere\nYou can access your fake API from anywhere using CORS and JSONP.\nRemote schema\nYou can load remote schemas.\n$ json-server http:\/\/example.com\/file.json\n$ json-server http:\/\/jsonplaceholder.typicode.com\/db\nGenerate random data\nUsing JS instead of a JSON file, you can create data programmatically.\n\/\/ index.js\nmodule.exports = () => {\n  const data = { users: [] }\n  \/\/ Create 1000 users\n  for (let i = 0; i < 1000; i++) {\n    data.users.push({ id: i, name: `user${i}` })\n  }\n  return data\n}\n$ json-server index.js\nTip use modules like Faker, Casual, Chance or JSON Schema Faker.\nHTTPS\nThere are many ways to set up SSL in development. One simple way is to use hotel.\nAdd custom routes\nCreate a routes.json file. Pay attention to start every route with \/.\n{\n  \"\/api\/*\": \"\/$1\",\n  \"\/:resource\/:id\/show\": \"\/:resource\/:id\",\n  \"\/posts\/:category\": \"\/posts?category=:category\",\n  \"\/articles\\\\?id=:id\": \"\/posts\/:id\"\n}\nStart JSON Server with --routes option.\njson-server db.json --routes routes.json\nNow you can access resources using additional routes.\n\/api\/posts # \u2192 \/posts\n\/api\/posts\/1  # \u2192 \/posts\/1\n\/posts\/1\/show # \u2192 \/posts\/1\n\/posts\/javascript # \u2192 \/posts?category=javascript\n\/articles?id=1 # \u2192 \/posts\/1\nAdd middlewares\nYou can add your middlewares from the CLI using --middlewares option:\n\/\/ hello.js\nmodule.exports = (req, res, next) => {\n  res.header('X-Hello', 'World')\n  next()\n}\njson-server db.json --middlewares .\/hello.js\njson-server db.json --middlewares .\/first.js .\/second.js\nCLI usage\njson-server [options] <source>\n\nOptions:\n  --config, -c       Path to config file           [default: \"json-server.json\"]\n  --port, -p         Set port                                    [default: 3000]\n  --host, -H         Set host                             [default: \"localhost\"]\n  --watch, -w        Watch file(s)                                     [boolean]\n  --routes, -r       Path to routes file\n  --middlewares, -m  Paths to middleware files                           [array]\n  --static, -s       Set static files directory\n  --read-only, --ro  Allow only GET requests                           [boolean]\n  --no-cors, --nc    Disable Cross-Origin Resource Sharing             [boolean]\n  --no-gzip, --ng    Disable GZIP Content-Encoding                     [boolean]\n  --snapshots, -S    Set snapshots directory                      [default: \".\"]\n  --delay, -d        Add delay to responses (ms)\n  --id, -i           Set database id property (e.g. _id)         [default: \"id\"]\n  --foreignKeySuffix, --fks  Set foreign key suffix, (e.g. _id as in post_id)\n                                                                 [default: \"Id\"]\n  --quiet, -q        Suppress log messages from output                 [boolean]\n  --help, -h         Show help                                         [boolean]\n  --version, -v      Show version number                               [boolean]\n\nExamples:\n  json-server db.json\n  json-server file.js\n  json-server http:\/\/example.com\/db.json\n\nhttps:\/\/github.com\/typicode\/json-server\n\nYou can also set options in a json-server.json configuration file.\n{\n  \"port\": 3000\n}\nModule\nIf you need to add authentication, validation, or any behavior, you can use the project as a module in combination with other Express middlewares.\nSimple example\n$ npm install json-server --save-dev\n\/\/ server.js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n$ node server.js\nThe path you provide to the jsonServer.router function  is relative to the directory from where you launch your node process. If you run the above code from another directory, it\u2019s better to use an absolute path:\nconst path = require('path')\nconst router = jsonServer.router(path.join(__dirname, 'db.json'))\nFor an in-memory database, simply pass an object to jsonServer.router().\nPlease note also that jsonServer.router() can be used in existing Express projects.\nCustom routes example\nLet's say you want a route that echoes query parameters and another one that set a timestamp on every resource created.\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\n\/\/ Set default middlewares (logger, static, cors and no-cache)\nserver.use(middlewares)\n\n\/\/ Add custom routes before JSON Server router\nserver.get('\/echo', (req, res) => {\n  res.jsonp(req.query)\n})\n\n\/\/ To handle POST, PUT and PATCH you need to use a body-parser\n\/\/ You can use the one used by JSON Server\nserver.use(jsonServer.bodyParser)\nserver.use((req, res, next) => {\n  if (req.method === 'POST') {\n    req.body.createdAt = Date.now()\n  }\n  \/\/ Continue to JSON Server router\n  next()\n})\n\n\/\/ Use default router\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nAccess control example\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use((req, res, next) => {\n if (isAuthorized(req)) { \/\/ add your authorization logic here\n   next() \/\/ continue to JSON Server router\n } else {\n   res.sendStatus(401)\n }\n})\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nCustom output example\nTo modify responses, overwrite router.render method:\n\/\/ In this example, returned resources will be wrapped in a body property\nrouter.render = (req, res) => {\n  res.jsonp({\n    body: res.locals.data\n  })\n}\nYou can set your own status code for the response:\n\/\/ In this example we simulate a server side error response\nrouter.render = (req, res) => {\n  res.status(500).jsonp({\n    error: \"error message here\"\n  })\n}\nRewriter example\nTo add rewrite rules, use jsonServer.rewriter():\n\/\/ Add this before server.use(router)\nserver.use(jsonServer.rewriter({\n  '\/api\/*': '\/$1',\n  '\/blog\/:resource\/:id\/show': '\/:resource\/:id'\n}))\nMounting JSON Server on another endpoint example\nAlternatively, you can also mount the router on \/api.\nserver.use('\/api', router)\nAPI\njsonServer.create()\nReturns an Express server.\njsonServer.defaults([options])\nReturns middlewares used by JSON Server.\n\noptions\n\nstatic path to static files\nlogger enable logger middleware (default: true)\nbodyParser enable body-parser middleware (default: true)\nnoCors disable CORS (default: false)\nreadOnly accept only GET requests (default: false)\n\n\n\njsonServer.router([path|object])\nReturns JSON Server router.\nDeployment\nYou can deploy JSON Server. For example, JSONPlaceholder is an online fake API powered by JSON Server and running on Heroku.\nLinks\nVideo\n\nCreating Demo APIs with json-server on egghead.io\n\nArticles\n\nNode Module Of The Week - json-server\nng-admin: Add an AngularJS admin GUI to any RESTful API\nFast prototyping using Restangular and Json-server\nCreate a Mock REST API in Seconds for Prototyping your Frontend\nNo API? No Problem! Rapid Development via Mock APIs\nZero Code REST With json-server\n\nThird-party tools\n\nGrunt JSON Server\nDocker JSON Server\nJSON Server GUI\nJSON file generator\nJSON Server extension\n\nLicense\nMIT\nSupporters \u2728\n","26":"Awesome-Selfhosted\n \nSelf-hosting is the practice of locally hosting and managing applications instead of renting from SaaSS providers.\nThis is a list of Free Software network services and web applications which can be hosted locally. Non-Free software is listed on the Non-Free page.\nSee Contributing.\n\n\nList of Software\n\nAnalytics\nArchiving and Digital Preservation (DP)\nAutomation\nBlogging Platforms\nBookmarks and Link Sharing\nCalendaring and Contacts Management\nCommunication systems\n\nCustom communication systems\nEmail\n\nComplete solutions\nMail Transfer Agents\nMail Delivery Agents\nMailing lists and newsletters\nWebmail clients\n\n\nIRC\nSIP\/IPBX\nSocial Networks and Forums\nXMPP\n\nXMPP Servers\nXMPP Web Clients\n\n\n\n\nConference Management\nContent Management Systems (CMS)\n\nE-commerce\n\n\nDNS\nDocument Management\nE-books and Integrated Library Systems (ILS)\nFederated Identity\/Authentication\nFeed Readers\nFile Sharing and Synchronization\n\nDistributed filesystems\nFile transfer\/synchronization\nPeer-to-peer filesharing\nObject storage\/file servers\nSingle-click\/drag-n-drop upload\nWeb based file managers\n\n\nGames\nGateways and terminal sharing\nGroupware\nHuman Resources Management (HRM)\nInternet of Things (IoT)\nKnowledge Management Tools\nLearning and Courses\nMaps and Global Positioning System (GPS)\nMedia Streaming\n\nMultimedia Streaming\nAudio Streaming\nVideo Streaming\n\n\nMisc\/Other\nMoney, Budgeting and Management\nMonitoring\nNote-taking and Editors\nOffice Suites\nPassword Managers\nPastebins\nPersonal Dashboards\nPhoto and Video Galleries\nPolls and Events\n\nBooking and Scheduling\n\n\nProxy\nRead it Later Lists\nResource Planning\n\nEnterprise Resource Planning\n\n\nSearch Engines\nSoftware Development\n\nProject Management\nBug Trackers\nIDE\/Tools\nContinuous Integration\nUX testing\nFaaS\/Serverless\nAPI Management\nDocumentation Generators\nLocalization\n\n\nStatic site generators\nTask management\/To-do lists\nTicketing\nURL Shorteners\nVPN\nWeb servers\nWikis\n\n\nSelf-hosting Solutions\nList of Licenses\nExternal links\nContributing\nLicense\n\n\nAnalytics\n^        back to top        ^\nFor personal analytics\/dashboards, see Personal Dashboards\nFor everything else, see awesome-analytics\nArchiving and Digital Preservation (DP)\n^        back to top        ^\nSome Content Management System solutions also feature archiving and digital preservation.\n\nAccess to Memory (AtoM) - Web-based, open source application for standards-based archival description and access in a multilingual, multi-repository environment. (Demo, Source Code) AGPL-3.0-only PHP\nArchivematica - Mature digital preservation system designed to maintain standards-based, long-term access to collections of digital objects. (Demo, Source Code) AGPL-3.0-only Python\nArchiveBox - Self-hosted \"wayback machine\" that creates HTML & screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources. (Source Code) MIT Python\nArchivesSpace - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. (Demo, Source Code) ECL-2.0 Ruby\nCollective Access: Providence - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. (Source Code) GPL-3.0-only PHP\nCKAN - CKAN is a tool for making open data websites. (Source Code) AGPL-3.0 Python\n\nAutomation\n^        back to top        ^\nSee also Internet of Things (IoT)\n\nAccelerated Text - Automatically generate multiple natural language descriptions of your data varying in wording and structure. Apache-2.0 Java\nActiveWorkflow - An intelligent process and workflow automation platform based on software agents. MIT Ruby\nAlltube - Web interface for youtube-dl, a program to download videos and audio from more than 100 websites. (Source Code) GPL-3.0 PHP\nAmIUnique - Learn how identifiable you are on the Internet (browser fingerprinting tool). (Source Code) MIT Java\nBeehive - Flexible event and agent system, which allows you to create your own agents that perform automated tasks triggered by events and filters. AGPL-3.0 Go\nbetanin - Music organization man-in-the-middle of your torrent client and music player. Based on beets.io, similar to Sonarr and Radarr. GPL-3.0 Python\nCouchPotato - CouchPotato is an automatic Video Library Manager for Movies. Automatic torrent\/nzb searching, downloading, and processing at the qualities you want. (Source Code) GPL-3.0 Python\nEpisodes \u26a0 - Self Hosted TV show Episode tracker and recommender built using django, bootstrap4. MIT Python\nfeed2toot - Feed2toot parses a RSS feed, extracts the last entries and sends them to Mastodon. (Source Code) GPL-3.0 Python\nfeedmixer - FeedMixer is a WSGI (Python3) micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed(Returns Atom, RSS, or JSON). (Demo) WTFPL Python\nGekko - Gekko is a Bitcoin TA trading and backtesting bot which support multiple exchanges and cryptocurrencies. (Source Code) MIT Nodejs\nHeadphones - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent, Deluge and Blackhole. GPL-3.0 Python\nHealthchecks - Django app which listens for pings and sends alerts when pings are late. (Source Code) BSD-3-Clause Python\nhomebank-converter - Web app to convert an export bank file to compatible Homebank csv. (Demo) AGPL-3.0 HTML5\nHRConvert2 - Drag-and-drop file conversion server with session based authentication, automatic temporary file maintenance, and logging capability. GPL-3.0 PHP\nHuginn - Allows you to build agents that monitor and act on your behalf. MIT Ruby\nKibitzr - Lightweight personal web assistant with powerful integrations. (Source Code) MIT Python\nLazyLibrarian \u26a0 - LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. GPL-3.0 Python\nLeon - Open-source personal assistant who can live on your server. (Demo, Source Code) MIT Node.js\nLidarr - Lidarr is a music collection manager for Usenet and BitTorrent users. (Source Code) GPL-3.0 C#\nMedusa - Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. GPL-3.0 Python\nMeTube - Web GUI for youtube-dl, with playlist support. Allows downloading videos from dozens of websites. AGPL-3.0 Python\/Nodejs\/Docker\nn8n - Free node based Workflow Automation Tool. Easily automate tasks across different services. (Source Code) Apache-2.0 Nodejs\nnefarious - Web application that automates downloading Movies and TV Shows. GPL-3.0 Python\npyLoad - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. (Source Code) GPL-3.0 Python\nRadarr - Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent, \u00e0 la Couchpotato. (Source Code) GPL-3.0 C#\nStackStorm - StackStorm (aka \"IFTTT for Ops\") is event-driven automation for auto-remediation, security responses, troubleshooting, deployments, and more. Includes rules engine, workflow, 160 integration packs with 6000+ actions and ChatOps. (Source Code) Apache-2.0 Python\nSickRage - SickRage is an automatic Video Library Manager for TV Shows. Automatic torrent\/nzb searching, downloading, and processing at the qualities you want. (Source Code) GPL-3.0 Python\nSonarr - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. (Source Code) GPL-3.0 C#\n\u00b5Task - \u00b5Task is an automation engine that models and executes business processes declared in yaml. BSD-3-Clause Go\nTriggerHappy - Open source clone of IFTTT, a bridge between your internet services. (Source Code) BSD-3-Clause Python\nWebUI-aria2 - Interface to interact with the aria2 downloader. Very simple to use, just download and open index.html in any web browser. (Demo) MIT HTML5\nYoutubeDL-Material - Material Design inspired YouTube downloader, based on youtube-dl. Supports playlists, quality select, search, dark mode and much more, all with a clean and modern design. MIT Nodejs\nZenbot 3 - Zenbot is a lightweight, extendable, artificially intelligent trading bot for Bitcoin, Ether, Litecoin, and more. MIT Node.js\nZeroQueue - A low-code queue management system that lets you run scheduled jobs for anything. GPL-3.0 Node.js\n\nBlogging Platforms\n^        back to top        ^\nSee also Static Site Generators, Content Management Systems and WeblogMatrix\n\nAntville - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. (Source Code) Apache-2.0 Javascript\nBlog - Facebook-styled blog. Free, extremely lightweight, single-user and easy to install. (Demo) GPL-3.0 PHP\nBlogotext - Free blog-engine written in PHP and using SQLite. This offers you both an unmatched simplicity during installation and great performances. (Source Code) MIT PHP\nBludit \u26a0 - Simple application to build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. (Demo, Source Code) MIT PHP\nCadmus - Cadmus is an extremely lightweight, flat-file blogging platform powered by Markdown. MIT PHP\nCanvas - A Laravel publishing platform. (Source Code) MIT PHP\nChyrp Lite - Extra-awesome, extra-lightweight blog engine. (Source Code) BSD-3-Clause PHP\nDante Stories - Self hosted Medium platform built with Ruby on Rails. (Source Code) MIT Ruby\nDotclear - Take control over your blog. (Source Code) GPL-2.0 PHP\nFormtools - Powerful, flexible, free and open source PHP\/MySQL script to manage your forms and data. (Source Code) GPL-2.0 PHP\nGhost - Just a blogging platform. (Source Code) MIT Nodejs\nHexo - Fast, simple and powerful blog framework, powered by Node.js. (Source Code) MIT Nodejs\nHotglue - Freehand CMS which allows to construct websites directly in a web-browser. It uses flat files for storage and provides an intuitive GUI. (Demo, Source Code) GPL-3.0 PHP\nhtmly - Databaseless Blogging Platform (Flat-File Blog). (Demo, Source Code) GPL-2.0 PHP\nKnown - Single website for all your content. (Source Code) Apache-2.0 PHP\nPlume - Federated blogging engine, based on ActivityPub. (Source Code) AGPL-3.0 Rust\nPluXml - XML-based blog\/CMS platform. (Source Code) GPL-1.0 PHP\nPostleaf - Open source blogging platform with inline editing, handlebar templates, and a beautiful user interface. (Source Code) MIT Nodejs\n\nBookmarks and Link Sharing\n^        back to top        ^\n\ndyu\/bookmarks - Single-threaded\/process bookmark app powered by leveldb and uWebSockets. Supports importing from Delicious and Chrome. (Demo) Apache-2.0 Java\nEspial - An open-source, web-based bookmarking server. AGPL-3.0 Haskell\nFirefox Account Server - This is the monorepo for Firefox Accounts (formerly separated into Auth and Content). (Source Code) MPL-2.0 Nodejs, Java\n\nFirefox Sync Server - Sync Firefox bookmarks, passwords, history, tabs, preferences. MPL-2.0 Python\n\n\nGeekmarks - Personal bookmarking service focused on speed and organization using hierarchical tags. (Source Code) BSD-2-Clause Go\ngolinks - Web application that allows you to create smart bookmarks, commands and aliases by pointing your web browser's default search engine at a running instance. Similar to bunny1 or yubnub. (Demo) MIT Go\nlinkding - Minimal bookmark management with a fast and clean UI. Simple installation through Docker and can run on your Raspberry Pi. (Demo) MIT Docker\/Python\/Nodejs\nLobsters - Run your own link aggregation site. (Source Code) BSD-3-Clause Ruby\nNo Fuss Bookmarks - Very simple software and service to store bookmarks especially designed for hackers (that don't need fancy interfaces, but nice API). (Source Code) GPL-3.0 Python\nPinry - The tiling image board system for people who want to save, tag, and share images, videos, and webpages. (Source Code) BSD-2-Clause Python\nReminiscence - Self-Hosted Bookmark And Archive Manager. AGPL-3.0 Python\nShaarli - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. (Demo) Zlib PHP\nShiori - Simple bookmark manager built with Go. MIT Go\nunmark - Open source to do app for links. MIT PHP\nubookmark - LDAP enabled bookmarking service. (Demo, Source Code) GPL-2.0 Python\nxBrowserSync - Open source tool for syncing browser data between browsers and devices. (Source Code) MIT Nodejs\n\nCalendaring and Contacts Management\n^        back to top        ^\nSome Groupware solutions also feature calendar\/address book editing and synchronization.\nSee https:\/\/en.wikipedia.org\/wiki\/Comparison_of_CalDAV_and_CardDAV_implementations\nCalDAV or CardDAV servers\n\nBa\u00efkal - Lightweight CalDAV and CardDAV server based on sabre\/dav. (Source Code) GPL-3.0 PHP\nCalendarServer - Apple, Inc.'s standards-compliant server implementing the CalDAV and CardDAV protocols shipped with macOS Server. (Source Code) Apache-2.0 Python\ncalypso - Python-based CalDAV and CardDAV server, forked from Radicale. (Source Code) GPL-3.0 Python\nDAViCal - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. (Source Code) GPL-2.0 PHP\nDavis - A simple, dockerizable and fully translatable admin interface for sabre\/dav based on Symfony 5 and Bootstrap 4, largely inspired by Ba\u00efkal. MIT PHP\nDecSync CC - Serverless contacts, calendar synchronization using your own file syncing method i.e Syncthing, Nextcloud etc. (Source Code) GPL-3.0 Kotlin\nEteSync Server - End-to-end encrypted and journaled personal information server supporting calendar and contact data, offering its own clients. (Source Code) AGPL-3.0 Python\/Django\nRadicale - Simple calendar and contact server with extremely low administrative overhead. (Source Code) GPL-3.0 Python\nSabreDAV - Open source CardDAV, CalDAV, and WebDAV framework and server. (Source Code) MIT PHP\nXandikos - Open source CardDAV and CalDAV server with minimal administrative overhead, backed by a Git repository. (Source Code) GPL-3.0 Python\n\nCalDAV or CardDAV web-based clients\n\nAgenDAV - Multilanguage CalDAV web client with a rich AJAX interface and shared calendars support. (Source Code) GPL-3.0 PHP\nInfCloud - Open source CalDAV\/CardDAV web client implementation. (Demo, Source Code) AGPL-3.0 Javascript\nEteSync Web - EteSync's official Web-based client (i.e., their Web app). (Demo, Source Code) AGPL-3.0 Javascript\n\nCommunication systems\n^        back to top        ^\nCustom communication systems\n\nCentrifugo - Language-agnostic real-time messaging (Websocket or SockJS) server. (Demo) MIT Go\nCherry - Tiny webchat server. GPL-2.0 Go\nDarkwire.io - End-to-end encrypted instant web chat. (Source Code) MIT Nodejs\nFreenet - Anonymously share files, browse and publish \"freesites\" (web sites accessible only through Freenet) and chat on forums. (Source Code) GPL-2.0 Java\nFriends - P2P chat powered by the web. (Source Code) MIT Nodejs\nGNUnet - Free software framework for decentralized, peer-to-peer networking. (Source Code) GPL-3.0 C\nGotify - Self-hosted notification server with Android and CLI clients, similar to PushBullet. (Source Code, Clients) MIT Go\nHawkpost - HawkPost is a web app that lets you create unique links that you can share with a person that desires to send you important information but doesn't know how to encrypt it. The message is encrypted in their browser and sent to your email address. (Source Code) MIT Python\nJami - Free and universal communication platform which preserves the user's privacy and freedoms (formerly GNU Ring). (Source Code) GPL-3.0 C++\nJitsi Meet - Jitsi Meet is an OpenSource (MIT) WebRTC Javascript application that uses Jitsi Videobridge to provide high quality, scalable video conferences. (Source Code) MIT Javascript\nJitsi Video Bridge - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. (Source Code) Apache-2.0 Java\nKChat - PHP Based Live Chat Application. Apache-2.0 PHP\nLeapChat - Ephemeral, encrypted, in-browser chat rooms. AGPL-3.0 JavaScript\nLets-Chat - Self hosted chat suite written in Node. (Source Code) MIT Nodejs\nLibreNews - Decentralized and secure breaking news notification system. (Source Code) GPL-3.0 Python\nLive Helper Chat - Live Support chat for your website. (Source Code) Apache-2.0 PHP\nMattermost - Open-source, on-prem Slack-alternative. It can be integrated with Gitlab. (Source Code) AGPL-3.0\/Apache-2.0 Go\nMiAOU - Multi-room persistent chat server. (Source Code) MIT Nodejs\nMibew - Mibew Messenger is an open-source live support application written in PHP and MySQL. It enables one-on-one chat assistance in real-time directly from your website. (Demo, Source Code) Apache-2.0 PHP\nMumble - Low-latency, high quality voice\/text chat software. (Source Code, Clients) BSD-3-Clause C++\nNode-Chat - Not-so-basic open-source chat with admin features. MIT Nodejs\nOTS - One-Time-Secret sharing platform with a symmetric 256bit AES encryption in the browser. (Source Code) Apache-2.0 Go\nPapercups - An open source live customer chat web app written in Elixir. (Demo, Source Code) MIT Elixir\nPushBits - Self-hosted notification server for relaying push notifications via Matrix, similar to PushBullet and Gotify. ISC Go\nRallly - Rallly is a free collaborative scheduling service. (Source Code) CC-BY-SA-4.0 Nodejs\nRetroShare - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. (Source Code) GPL-2.0 \u0421++\nRocket.Chat - Teamchat solution similar to Gitter.im or Slack. (Source Code) MIT Nodejs\nShhh - Keep secrets out of emails or chat logs, share them using secure links with passphrase and expiration dates. MIT Python\nSpectrum 2 - Spectrum 2 is an open source instant messaging transport.  It allows users to chat together even when they are using different IM networks. (Source Code) GPL-3.0 C++\nSpreed - WebRTC audio\/video calls, conferencing server, and web client. (Source Code) AGPL-3.0 Go\nSynapse - Server for Matrix, an open standard for decentralized persistent communication. (Source Code) Apache-2.0 Python\n\nMatrix Console Web - Web client meant to be a showcase of Matrix capabilities, and reference implementation of the Matrix standard. (Source Code) Apache-2.0 Javascript\nElement - Fully-featured Matrix client for Web, iOS & Android. (Source Code) Apache-2.0 Javascript\n\n\nSyndie - Syndie is a libre system for operating distributed forums. CC0-1.0 Java\nTextBelt \u26a0 - Outgoing SMS API that uses carrier-specific gateways to deliver your text messages for free, and without ads. MIT Javascript\nTox - Distributed, secure messenger with audio and video chat capabilities. (Source Code) GPL-3.0 C\nTuber - Peer-to-peer video chat that works. (Source Code) MIT Javascript\nWBO -  A web Whiteboard to collaborate in real-time on schemas, drawings, and notes. (Demo) AGPL-3.0 Nodejs\/Docker\nZeroNet \u26a0 - Open, free, and uncensorable websites, using Bitcoin cryptography and BitTorrent network. (Source Code) GPL-2.0 Python\nZulip - Zulip is a powerful, open source group chat application. (Source Code) Apache-2.0\/Other Python\n\nEmail\n^        back to top        ^\nComplete solutions\nSimple deployment of a mail server, e.g. for inexperienced or impatient admins.\n\nAnonAddy - Open source email forwarding service for creating aliases. (Source Code) MIT PHP\ndocker-mailserver - Fullstack but simple mail server (smtp, imap, antispam, antivirus, etc.). Only configuration files, no SQL database. Keep it simple and versioned. Easy to deploy and upgrade. MIT Docker\nExcision Mail - Fullstack, security focused mailserver based on OpenSMTPD for OpenBSD using ansible. ISC Shell\/Ansible\nInboxen - Inboxen is a service that provides you with an infinite number of unique inboxes. (Source Code) GPL-3.0 Python\nhomebox - Suite of Ansible scripts to deploy a fully functional mail server on Debian. Unobtrusive and automatic as much as possible, focusing on stability and security. GPL-3.0 Shell\niRedMail - Full-featured mail server solution based on Postfix and Dovecot. (Source Code) GPL-3.0 Shell\nMailcow - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. (Source Code) GPL-2.0 Docker\/PHP\nMailu - Mailu is a simple yet full-featured mail server as a set of Docker images. (Demo, Source Code) MIT Docker\/Python\nMail-in-a-Box - Turns any Ubuntu server into a fully functional mail server with one command. (Source Code) CC0-1.0 Shell\nModoboa - Modoboa is a mail hosting and management platform including a modern and simplified Web User Interface. (Source Code) MIT Python\nPtorx - \ud83d\udce9\ud83d\udee1 Email privacy. Anonymously send and receive with alias forwarding. (Source Code) GPL-3.0 Node.js\nQmailtoaster - Stable, full-featured, easy-to-install mail server based on qmail. (Source Code) Multiple Linux\nSimpleLogin - Open source email alias solution to protect your email address. Comes with browser extensions and mobile apps. (Source Code) MIT Docker\/Python\nSimple NixOS Mailserver - Complete mailserver solution leveraging the Nix Ecosystem. GPL-3.0 Nix\nwildduck - Scalable no-SPOF IMAP\/POP3 mail server. (Source Code) EUPL-1.2 Node.js\n\nMail Transfer Agents\nMTAs \/ SMTP servers\n\nchasquid - SMTP (email) server with a focus on simplicity, security, and ease of operation. (Source Code) Apache-2.0 Go\nCourier MTA - Fast, scalable, enterprise mail\/groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. (Source Code) GPL-3.0 C\nExim - Message transfer agent (MTA) developed at the University of Cambridge. (Source Code) GPL-3.0 C\nHaraka - High-performance, pluginable SMTP server written in Javascript. (Source Code) MIT Javascript\nMailCatcher - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. (Source Code) MIT Ruby\nMaildrop - Disposable email SMTP server, also useful for development. MIT Scala\nMailHog - Small Golang executable which runs an SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. MIT Go\nOpenSMTPD - Secure SMTP server implementation from the OpenBSD project. (Source Code) ISC C\nPostfix - Fast, easy to administer, and secure Sendmail replacement. IPL-1.0 C\nQmail - Secure Sendmail replacement. (Source Code) CC0-1.0 C\nSendmail - Message transfer agent (MTA). Sendmail C\nSlimta - Mail Transfer Library built on Python. (Source Code) MIT Python\n\nMail Delivery Agents\nMDAs - IMAP\/POP3 software\n\nCyrus IMAP\/POP3 - Intended to be run on sealed servers, where normal users are not permitted to log in. (Source Code) BSD-3-Clause-Attribution C\nDovecot - IMAP and POP3 server written primarily with security in mind. (Source Code) MIT\/LGPL-2.1 C\nPiler - feature-rich open source email archiving solution. (Source Code) GPL-3.0 C\n\nMailing lists and Newsletters\nMailing lists servers and mass mailing software - one message to many recipients.\n\nDada Mail - Web-based list management system that can be used for announcement lists and\/or discussion lists. (Source Code) GPL-2.0 Perl\nListmonk - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. (Source Code) AGPL-3.0 Go\nMail For Good \u26a0 - Open source email campaign management tool for nonprofits. BSD-3-Clause Javascript\nMailman - The Gnu mailing list server. GPL-3.0 Python\nMailtrain - self hosted newsletter application built on Node.js (v5+) and MySQL (v5.5+ or MariaDB). (Source Code) GPL-3.0 Nodejs\nMailyHerald - Self-hosted Mailchimp alternative that you can easily integrate with your site. Helps you send and manage your application mailings. It supports email marketing and conducting the daily stream of notifications you send to your users. (Source Code) LGPL-3.0 Ruby\nMautic - Mautic is marketing automation software (email, social and more). (Source Code) GPL-3.0 PHP\nHyperKitty - Open source Django application to provide a web interface to access GNU Mailman v3 archives. (Demo, Source Code) GPL-3.0 Python\nphpList - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. (Source Code) AGPL-3.0 PHP\nPostal - Fully featured open source mail delivery platform for incoming and outgoing e-mail. MIT Ruby\nPostorius - Web user interface to access GNU Mailman. (Source Code) GPL-3.0 Python\nSchleuder - GPG-enabled mailing list manager with resending-capabilities. (Source Code) GPL-3.0 Ruby\nSympa - Mailing list manager. GPL-2.0 Perl\n\nWebmail clients\n\nAfterlogic WebMail Lite - Fast and easy-to-use webmail front-end for your existing IMAP mail server, Plesk or cPanel. (Demo, Source Code) AGPL-3.0 PHP\nCypht - Feed reader for your email accounts. (Source Code) GPL-2.0 PHP\nIMP - HORDE application that provides webmail access to IMAP and POP3 accounts. (Demo, Source Code) GPL-2.0 PHP\nIsotope Mail - Microservice based webmail client built with ReactJS and Spring. (Source Code) Apache-2.0 Docker\/Java\nMailCare - Open source disposable email address service. (Source Code) MIT PHP\nMailpile - Webmail client with search, filtering, encryption features and more. (Source Code) AGPL-3.0 Python\nRainLoop - Simple, modern and fast webmail with IMAP\/SMTP Support and multi accounting. (Demo, Source Code). AGPL-3.0 PHP\nRoundcube - Browser-based IMAP client with an application-like user interface. (Source Code) GPL-3.0 PHP\nSquirrelMail - Another browser-based IMAP client. (Source Code) GPL-2.0 PHP\n\nIRC\n^        back to top        ^\nIRC communication software\n\nConvos - Always online web IRC client. (Demo, Source Code) Artistic-2.0 Perl\nInspIRCd - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. (Source Code) GFDL-1.2-only C++\nDispatch - Self-hosted web IRC client written in Go. (Demo) MIT Go\nKiwi IRC - Responsive web IRC client with theming support. (Demo, Source Code) Apache-2.0 Nodejs\nngircd - Free, portable and lightweight Internet Relay Chat server for small or private networks. (Source Code) GPL-2.0 C\nOragono - Modern IRCv3 server written in Go, combining the features of an ircd, a services framework, and a bouncer. (Source Code) MIT Go\nThe Lounge - Self-hosted web IRC client. (Demo, Source Code) MIT Nodejs\nQuassel IRC - distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. (Source Code) GPL-2.0 C++\nRobust IRC - RobustIRC is IRC without netsplits. Distributed IRC server, based on RobustSession protocol. (Source Code) BSD-3-Clause Go\nTiny Tiny IRC - An open source AJAX-powered chat platform with support for IRC (Source Code). GPL-3.0 PHP\/Java\nWeechat - Fast, light and extensible chat client. GPL-3.0 C\n\nGlowing Bear - A web frontend for WeeChat. (Demo) GPL-3.0 JavaScript\n\n\nZNC - Advanced IRC bouncer. (Source Code) Apache-2.0 C++\n\nSIP\n^        back to top        ^\nSIP\/IPBX telephony software\n\nAsterisk - Easy to use but advanced IP PBX system, VoIP gateway and conference server. GPL-2.0 C\nASTPP - is an Open Source VoIP Billing Solution for Freeswitch. It supports prepaid and postpaid billing with call rating and credit control. It also provides many other features. (Source Code) AGPL-3.0 PHP\nFreepbx - Web-based open source GUI that controls and manages Asterisk. (Source Code) GPL-2.0 PHP\nFreeSWITCH - Scalable open source cross-platform telephony platform. (Source Code) MPL-2.0 C\nFusionPBX - Open source project that provides a customizable and flexible web interface to the very powerful and highly scalable multi-platform voice switch called FreeSWITCH. (Source Code) MPL-1.1 PHP\nHomer - Troubleshooting and monitoring VoIP calls. (Source Code) AGPL-3.0 Angular\/C\nKamailio - Modular SIP server (registrar\/proxy\/router\/etc). (Source Code) GPL-2.0 C\nKazoo - KAZOO is an open-source, highly scalable software platform designed to provide carrier-grade VoIP switch functions and features. (Source Code) MPL-1.1 Erlang\nOstel - Secure SIP telephony setup with ZRTP encryption. GPL-3.0 Ruby\nRoutr - A lightweight sip proxy, location server, and registrar for a reliable and scalable SIP infrastructure. (Demo, Source Code) MIT JavaScript\nSipXcom - Open source unified communications system. (Source Code) AGPL-3.0 Java\nSIP3 - VoIP troubleshooting and monitoring platform. (Demo, Source Code) Apache-2.0 Kotlin\nWazo - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. (Source Code) GPL-3.0 Python\n\nSocial Networks and Forums\n^        back to top        ^\n\nAbilian SBE - Open Source Collaboration and Social Networking framework and platform. LGPL-2.1 Python\nAnahita - Open Source Social Networking Framework and Platform. (Source Code) GPL-3.0 PHP\nbbPress - bbPress is forum software with a twist from the creators of WordPress. Easily setup discussion forums inside your WordPress.org powered site. (Source Code) GPL-2.0 PHP\nBootcamp - Enterprise social network. (Source Code) MIT Python\nBuddycloud - Tools, libraries, services and a community to build user-to-user, group and social messaging into your app. Saves time. Scales up. Supports you. (Source Code) Apache-2.0 Java\nBuddyPress - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. (Source Code) GPL-2.0 PHP\ncartulary - RSS reader, readability tool, article archiver, microblogger, social graph manager and reading list manager. CDDL-1.0 PHP\nCommento - Commento is a discussion platform that you can embed on your blog, news articles, and any place where you want your readers to add comments. MIT GO\nCoral - A better commenting experience from Vox Media. (Source Code) Apache-2.0 Nodejs\ndiaspora* - Distributed social networking server. (Demo, Source Code) AGPL-3.0 Ruby\nDiscourse - Advanced forum \/ community solution based on Ruby and JS. (Demo, Source Code) GPL-2.0 Ruby\ndyu\/comments - Real-time, markdown-enabled comment engine powered by leveldb. (Demo) Apache-2.0 Java\nEpochTalk - Next Generation Forum Software. MIT Nodejs\nElgg - Powerful open source social networking engine. (Source Code) GPL-2.0 PHP\nFlarum - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. (Source Code) MIT PHP\nflaskbb - FlaskBB is forum software written in Python using the microframework Flask. You can easily create new topics, posts and send other users private messages. It also includes basic administration and moderation tools. (Source Code) BSD-3-Clause Python\nFluxBB - Fast, light, user-friendly forum software for your website. (Source Code) GPL-2.0 PHP\nFriendica - Social Communication Server. (Source Code) AGPL-3.0 PHP\nGlosa - Open source commentary system easy to integrate with static pages. You can import from Disqus. GPL-3.0 Java\nGNU social - Social communication software for both public and private communications. (Source Code) AGPL-3.0 PHP\nGosora - Gosora is an ultra-fast and secure forum software written in Go that balances usability with functionality. (Source Code) GPL-3.0 Go\nHubzilla - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications\/social platform. (Source Code) MIT PHP\nHumHub - Flexible kit for private social networks. (Source Code) AGPL-3.0 PHP\nIsso - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. (Source Code) MIT Python\nLemmy - A link aggregator \/ reddit clone for the fediverse. Reddit alternative built in Rust. (Source Code) AGPL-3.0 Rust\nLoomio - Loomio is a collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. (Source Code) AGPL-3.0 Ruby\nMastodon - Federated microblogging server, an alternative to GNU social. (Source Code) AGPL-3.0 Ruby\nMisago - Misago is fully featured modern forum application that is fast, scalable and responsive. (Source Code) GPL-2.0 Python\nMisskey - Decentralized app-like microblogging server\/SNS for the Fediverse, using the ActivityPub protocol like GNU social and Mastodon. (Source Code) AGPL-3.0 Nodejs\nMovim - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. (Source Code) AGPL-3.0 PHP\nMyBB - Free, extensible forum software package. (Source Code) LGPL-3.0 PHP\nNodeBB - Node.js based forum software built for the modern web. (Source Code) GPL-3.0 Nodejs\nOrange Forum - Orange Forum is an easy to deploy forum that has minimal dependencies and uses very little javascript. (Source Code) BSD-3-Clause Go\nOSSN - Open Source Social Network (OSSN) is a social networking software written in PHP. It allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. (Source Code) GPL-2.0 PHP\nPatchwork - Decentralized messaging and sharing app built on top of Secure Scuttlebutt (SSB). AGPL-3.0-only NodeJS\nphpBB - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. (Source Code) GPL-2.0 PHP\nPixelFed - Pixelfed is an open-source, federated platform alternate to Instagram. (Source Code) AGPL-3.0 PHP\\HTML\\Vue\nPleroma - Federated microblogging server, Mastodon, GNU social, & ActivityPub compatible. (Source Code) AGPL-3.0 Elixir\nPPnet - Create and host your own social network. MIT Javascript\nPump.io - Stream server that does most of what people really want from a social network. (Source Code) Apache-2.0 Nodejs\nremark42 - A lightweight and simple comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments. (Demo, Source Code) MIT Go\nSatellity - Yet another open source forum written in Golang, React and PostgreSQL. (Source Code) MIT Go\nScoold - Stack Overflow in a JAR. An enterprise-ready Q&A platform with full-text search, SAML, LDAP integration and social login support. (Demo, Source Code) Apache-2.0 Java\nSimple Machines Forum - Free, professional grade software package that allows you to set up your own online community within minutes. (Source Code) BSD-3-Clause PHP\nSocialhome - Federated and decentralized profile builder and social network engine. (Demo, Source Code) AGPL-3.0 Python\nTalkyard - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack\/StackOverflow\/Discourse\/Reddit\/Disqus hybrid). (Demo, Source Code) AGPL-3.0 Scala\nTokumei - Anonymous microblogging platform. (Source Code) ISC rc\nThredded - Forums, feature-rich and simple. MIT Ruby\ntwister - Fully decentralized P2P microblogging platform leveraging the free software implementations of Bitcoin and BitTorrent protocols. (Source Code) MIT C++\ntwtxt.net - a Self-Hosted, Twitter\u2122-like Decentralised micro-logging platform. No ads, no tracking, your content, your data. (Source Code) MIT Go\n\nrss2twtxt - An RSS\/Atom feed aggregator command-line tool and web service that consumes RSS\/Atom and produces twtxt.net feeds for consumption by twtxt clients. (Demo) MIT Go\n\n\nVanilla Forums - Simple and flexible forum software. (Source Code) GPL-2.0 PHP\nZusam - Free and open-source way to self-host private forums for groups of friends or family. (Demo, Source Code) AGPL-3.0 PHP\n\nXMPP\n^        back to top        ^\nExtensible Messaging and Presence Protocol software\nXMPP Servers\n\nejabberd - XMPP instant messaging server. (Source Code) GPL-2.0 Erlang\nKontalk - Kontalk is an Open Source Messenger, similar to WhatsApp (app for android only currently), including end-to-end encryption, server is based on Tigase XMPP Server. (Source Code) GPL-3.0 Java\nMetronome IM - Fork of Prosody IM. (Source Code) MIT Lua\nMongooseIM - Mobile messaging platform with a focus on performance and scalability. (Source Code) GPL-2.0 Erlang\nOpenfire - Real time collaboration (RTC) server. (Source Code) Apache-2.0 Java\nProsody IM - Feature-rich and easy to configure XMPP server. (Source Code) MIT Lua\nTigase - XMPP server implementation in Java. GPL-3.0 Java\n\nXMPP Web Clients\n\nCandy - Multi user XMPP client written in Javascript. (Source Code) MIT Javascript\nConverse.js - Free and open-source XMPP chat client in your browser. (Source Code) MPL-2.0 Javascript\nJSXC - Real-time XMPP web chat application with video calls, file transfer and encrypted communication. There are also versions for Nextcloud\/Owncloud and SOGo. (Source Code) MIT Javascript\nSalut \u00e0 Toi - Multipurpose, multi frontend, libre and decentralized communication tool. (Source Code) AGPL-3.0 Python\n\nLibervia - Web frontend from Salut \u00e0 Toi. (Source Code) AGPL-3.0 Python\n\n\n\nConference Management\n^        back to top        ^\n\nBigBlueButton - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. (Demo, Source Code) LGPL-3.0 Java\nConference Organizing Distribution (COD) - Create conference and event websites built on top of Drupal. (Source Code) GPL-1.0 PHP\nfrab - web-based conference planning and management system. It helps to collect submissions, to manage talks and speakers and to create a schedule. (Source Code) MIT Ruby\nindico - A feature-rich event management system, made @ CERN, the place where the Web was born. (Demo, Source Code) MIT Python\nOpen Conference Systems (OCS) - is a free Web publishing tool that will create a complete Web presence for your scholarly conference. (Demo, Source Code) GPL-1.0 PHP\nOpenCFP - OpenCFP is a PHP-based conference talk submission system. MIT PHP\nOpenConferenceWare - An open source web application for supporting conference-like events. This customizable, general-purpose platform provides proposals, sessions, schedules, tracks, user profiles. (Source Code) MIT Ruby\nosem - Event management tailored to free Software conferences. (Demo, Source Code) MIT Ruby\npretalx - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. (Source Code) Apache-2.0 Python\n\nContent Management Systems (CMS)\n^        back to top        ^\nCMS are a practical way to setup a website with many features. CMS often come with third party plugins, themes and functionality that is easy to add and customize to your needs. See also Blogging Platforms and Static Site Generators\n\nAlfresco Community Edition - The open source Enterprise Content Management software that handles any type of content, allowing users to easily share and collaborate on content. (Source Code) LGPL-3.0 Java\nApostrophe - Node.js CMS with a focus on extensible in-context editing tools. (Demo, Source Code) MIT Nodejs\nb2evolution CMS - The most integrated CMS ever: b2evolution includes everything you need to build websites for publishing, sharing and interacting with your community. (Demo, Source Code) GPL-2.0 PHP\nBackdrop CMS - Comprehensive CMS for small to medium sized businesses and non-profits. (Source Code) GPL-2.0 PHP\nBigTree CMS - Straightforward, well documented, and capable written with PHP and MySQL. (Source Code) LGPL-2.1 PHP\nBolt CMS - Open source Content Management Tool, which strives to be as simple and straightforward as possible. (Demo, Source Code) MIT PHP\nCMS Made Simple - Open source content management system, faster and easier management of website contents, scalable for small businesses to large corporations. (Source Code) GPL-1.0 PHP\nCockpit - Simple Content Platform to manage any structured content. (Source Code) MIT PHP\nConcrete 5 CMS - Open source content management system. (Source Code) MIT PHP\nContao - Contao is a powerful open source CMS that allows you to create professional websites and scalable web applications. (Source Code) LGPL-3.0 PHP\nCouchCMS - Simple Open-Source CMS for designers. (Source Code) CPAL-1.0 PHP\nDirectus - Directus is a powerful and intuitive headless CMS for managing SQL databases with custom architectures. Built around a robust and extensible API, this decoupled content management framework is perfect for websites, apps, or multi-client projects. (Source Code) GPL-3.0 PHP\nDrupal - Advanced open source content management platform. (Source Code) GPL-2.0 PHP\neLabFTW - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators\u2026. (Demo, Source Code) AGPL-3.0 PHP\nExpressa - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. MIT Nodejs\nGetSimple CMS - The Simplest Content Management System. Ever. (Source Code) GPL-3.0 PHP\nJoomla! - Advanced Content Management System (CMS). (Source Code) GPL-2.0 PHP\nKeystoneJS - CMS and Web Application Platform. (Demo, Source Code) MIT Nodejs\nMODX - MODX is an advanced content management and publishing platform. The current version is called 'Revolution'. (Source Code) GPL-2.0 PHP\nNeos - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. (Source Code) GPL-3.0 PHP\nNoosfero - Noosfero is a web platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. AGPL-3.0 Ruby\noctober - Free, open-source, self-hosted CMS platform. (Source Code) MIT PHP\nOmeka - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. (Demo, Source Code) GPL-3.0 PHP\nPagekit - New modern CMS to create and share. (Source Code) MIT PHP\nPico - Stupidly simple, blazing fast, flat file CMS. (Source Code) MIT PHP\nPimcore - Multi-Channel Experience and Engagement Management Platform. (Source Code) GPL-3.0-or-later PHP\nPlone - Powerful open-source CMS system. (Source Code) ZPL-2.0 Python\nProcessWire - ProcessWire is an open source content management system (CMS) and web application framework aimed at the needs of designers, developers and their clients. (Source Code) MPL-2.0 PHP\nPropertyWebBuilder - Ultimate Ruby on Rails engine for creating real estate websites. (Demo, Source Code) MIT Ruby\nPublify - Simple but full featured web publishing software. (Source Code) MIT Ruby\nREDAXO - Simple, flexible and useful content management system (documentation only available in German). (Source Code) MIT PHP\nRedaxscript - Ultra lightweight CMS for MySQL, SQLite and PostgreSQL. (Demo, Source Code) GPL-3.0 PHP\nRoadiz -  Modern CMS based on a node system which can handle many types of services. (Source Code) MIT PHP\nSilverStripe - Easy to use CMS with powerful MVC framework underlying. (Demo, Source Code) BSD-3-Clause PHP\nSPIP - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. (Source Code) GPL-2.0 PHP\nSquidex - Headless CMS, based on MongoDB, CQRS and Event Sourcing. (Demo, Source Code) MIT .NET\nStrapi - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. (Source Code) MIT Nodejs\nSubrion - Subrion is a free open source content management system that allows you to build websites for any purpose. Yes, from blog to corporate mega portal. (Demo, Source Code) GPL-3.0 PHP\nTextpattern - Flexible, elegant and easy-to-use CMS. (Demo, Source Code) GPL-2.0 PHP\nTypemill - Author-friendly flat-file-cms with a visual markdown editor based on vue.js. (Source Code) MIT PHP\nTYPO3 - Powerful and advanced CMS with a large community. (Source Code) GPL-2.0 PHP\nUmbraco - The friendly CMS. Free and open source with an amazing community. (Source Code) MIT .NET\nWagtail - Django content management system focused on flexibility and user experience. (Source Code) BSD-3-Clause Python\nWonderCMS - WonderCMS is the smallest flat file CMS since 2008. (Demo, Source Code) MIT PHP\nWordPress - World's most-used blogging and CMS engine. (Source Code) GPL-2.0 PHP\nWriteFreely - Writing software for starting a minimalist, federated blog \u2014 or an entire community. (Source Code) AGPL-3.0 Go\n\nRecipe management\n\nOpenEats - Recipe management site that allows users to create, store, share and rate recipes, create grocery lists, and more. (Demo) MIT Python\nRecipes - Recipes is a Django application to manage, tag and search recipes using either built-in models or external storage providers hosting PDF's, Images or other files. MIT Python\n\nE-commerce\n\nAttendize - Ticket selling and event management platform. (Source Code) AAL PHP\nBagisto - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. (Demo, Source Code) MIT PHP\nCoreShop - CoreShop is a e-commerce plugin for Pimcore. (Source Code) GPL-3.0 PHP\nDrupal Commerce - Drupal Commerce is a popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. (Source Code) GPL-2.0 PHP\nMagento - Leading provider of open omnichannel innovation. (Demo, Source Code) OSL-3.0 PHP\nMicroweber - Drag and Drop CMS and online shop. (Demo, Source Code) Apache-2.0 PHP\nOpenBazaar - Decentralized marketplace using cryptocurrency. (Source Code) MIT Go\nOpenCart - Free open source shopping cart solution. (Source Code) GPL-3.0 PHP\nOpen Classifieds - Free open-source, self-hosted CMS for classifieds sites. (Source Code) GPL-3.0 PHP\nOpen Source POS - Open Source Point of Sale is a web based point of sale system. (Source Code) MIT PHP\nOXID eShop - OXID eShop is a flexible open source e-commerce software with a wide range of functionalities. (Demo, Source Code) GPL-3.0 PHP\nOpen Food Network - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. (Source Code) AGPL-3.0 Ruby\nPrestaShop - PrestaShop offers a free, open-source and fully scalable e-commerce solution. (Demo, Source Code) OSL-3.0 PHP\nPretix - Django based ticket sales platform for events. (Source Code) Apache-2.0 Python\nReaction Commerce - Customizable, real-time reactive, JavaScript commerce platform. (Source Code) GPL-3.0 Nodejs\nSaleor - Django based open-sourced e-commerce storefront. (Demo, Source Code) BSD-3-Clause Python\nSharetribe - An open source platform to create your own peer-to-peer marketplace, also available with SaaS model. (Source Code) MIT Ruby\nShuup - Django powered fully customizable open source e-commerce framework for small and large sites. (Source Code) AGPL-3.0 Python\nShopware Community Edition - PHP based open source e-commerce software made in Germany. (Demo, Source Code) MIT PHP\nSpree Commerce - Spree is a complete, modular & API-driven open source e-commerce solution for Ruby on Rails. (Demo, Source Code) BSD-3-Clause Ruby\nSylius - Symfony2 powered open source full-stack platform for eCommerce. (Demo, Source Code) MIT PHP\nThelia - Thelia is an open source and flexible e-commerce solution. (Demo, Source Code) LGPL-3.0 PHP\nWooCommerce - WordPress based e-commerce solution. (Source Code) GPL-3.0 PHP\n\nDNS\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#dns\n\nCoreDNS - Plugin driven DNS Server with support for proxying to Google's DNS-over-HTTPS. (Source Code) Apache-2.0 Go\nMaza ad blocking - Local ad blocker. Like Pi-hole but local and using your operating system. (Source Code) Apache-2.0 Bash\nnsupdate.info - nsupdate.info is a dynamic DNS service. (Demo, Source Code) BSD-3-Clause Python\nSPF Toolbox - Application to look up DNS records such as SPF, MX, Whois, and more. (Source Code) MIT PHP\n\nDocument Management\n^        back to top        ^\n\nCaseBox - Manage all your organization's information in one system. (Source Code) AGPL-3.0 PHP\/Java\nDOCAT - Host your docs. Simple. Versioned. Fancy. MIT Python\/docker\nDocspell - Auto-tagging document organizer and archive. (Source Code) GPL-3.0 Scala\/Java\nEdPaper - PDF organizer with users management. MIT PHP\nEveryDocs - A simple Document Management System for private use with basic functionality to organize your documents digitally. GPL-3.0 Ruby\nMayan EDMS - Free Open Source Electronic Document Management System. An electronic vault for your documents with preview generation, OCR, and automatic categorization among other features. (Source Code) Apache-2.0 Python\nPapermerge - Open Source Document Management System focused on scanned documents (electronic archives). Features file browsing in similar way to dropbox\/google drive. OCR, full text search, text overlay\/selection. (Source Code) Apache-2.0 Python\nPaperless - Scan, index, and archive all of your paper documents. GPL-3.0 Python\nTeedy - (Ex SismicsDocs) Lightweight document management system packed with all the features you can expect from big expensive solutions. (Source Code) GPL-2.0 Java\n\nE-books and Integrated Library Systems (ILS)\n^        back to top        ^\nSome Content Management System and Archiving and Digital Preservation solutions also overlap with library and institutional repository software.\nPersonal e-book management software.\n\nCalibre - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. (Demo, Source Code) GPL-3.0 Python\n\nBicBucStriim - Provides web-based access to your Calibre Library's e-book collection. (Source Code) MIT PHP\nCalibre Web - Web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. GPL-3.0 Python\nCOPS - Lightweight e-book server alternative to Calibre content server or Calibre2OPDS. (Demo, Source Code) GPL-2.0 PHP\nThe Epube - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. (Source Code) GPL-3.0 PHP\n\n\nKomga - Media server for comics\/mangas\/BDs with API and OPDS support, a modern web interface for exploring your libraries, as well as a web reader. (Source Code) MIT Java\/Docker\nMango - Manga server and web reader with a built-in MangaDex downloader. MIT Crystal\n\nEnterprise-class library management software.\n\nEvergreen - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. (Source Code) GPL-2.0 PL\/pgSQL\nKoha - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. (Demo, Source Code) GPL-3.0 Perl\nRERO ILS - Large-scale ILS that can be run as a service with consortial features, intended primarily for library networks. Includes most standard modules (circulation, acquisitions, cataloging,...) and a web-based public and professional interface. (Demo, Source Code) AGPL-3.0 Python\/Other\n\nInstitutional repository and digital library software.\n\nDSpace - Turnkey repository application providing durable access to digital resources. (Source Code) BSD-3-Clause Java\nEPrints - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. (Demo, Source Code) GPL-3.0 Perl\nFedora Commons Repository - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. (Source Code) Apache-2.0 Java\nIslandora - Drupal module for browsing and managing Fedora-based digital repositories. (Source Code) GPL-3.0 PHP\nSamvera Hyrax - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. (Source Code) Apache-2.0 Ruby\n\nFederated Identity\/Authentication\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#identity-management\nFeed Readers\n^        back to top        ^\n\nCommaFeed - Google Reader inspired self-hosted RSS reader. (Source Code) Apache-2.0 Java\nFeedbin - Simple, fast and nice looking RSS reader. (Source Code) MIT Ruby\nFeedHQ - FeedHQ is a web-based feed reader. (Source Code) BSD-3-Clause Python\nFreshRSS - Self-hostable RSS feed aggregator. (Demo, Source Code, Clients) AGPL-3.0 PHP\nJARR - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). (Demo, Source Code) AGPL-3.0 Python\nKriss Feed - Simple and smart (or stupid) feed reader. (Demo, Source Code) CC0-1.0 PHP\nLeed - Leed (for Light Feed) is a Free and minimalist RSS aggregator. (Source Code) AGPL-3.0 PHP\nLeselys - Your very elegant RSS reader. AGPL-3.0 Python\nLite-Reader - Read your feeds on your own machine with a simple and lite application. (Demo) BSD-3-Clause PHP\nMoonmoon - simple feed aggregator (planet like): it only aggregates feeds and spits them out in one single page. (Source Code) BSD-3-Clause PHP\nMiniflux - Miniflux 2 is a minimalist and open source news reader, written in Go and PostgreSQL. (Source Code) Apache-2.0 Go\nNewsBlur - NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument. (Source Code) MIT Python\nnewsdash - A news dashboard inspired by iGoogle and Netvibes. AGPL-3.0 NodeJS\nNewspipe - Newspipe is a web news reader. (Demo) AGPL-3.0 Python\nreader - A Python feed reader web app and library (so you can use it to build your own), with only standard library and pure-Python dependencies. BSD-3-Clause Python\nReader-Self - Self-hosted rss reader (php \/ mysql or sqlite) - Google Reader alternative. (Source Code) GPL-3.0 PHP\nRSS Monster - RSS Monster is an easy to use web-based RSS aggregator and reader compatible with the Fever API, created as an alternative for Google Reader. MIT PHP\nSelfoss - New multipurpose rss reader, live stream, mashup, aggregation web application. (Source Code) AGPL-3.0 PHP\nSismics Reader - Free and open source feeds reader, including all major Google Reader features. (Demo, Source Code) GPL-2.0 Java\nStringer - Work-in-progress self-hosted, anti-social RSS reader. MIT Ruby\nTemboz - Two-column feed reader emphasizing filtering capabilities to manage information overload. MIT Python\nTiny Tiny RSS - Open source web-based news feed (RSS\/Atom) reader and aggregator. (Demo, Source Code) GPL-3.0 PHP\n\ngritttt-rss - More features for Tiny Tiny RSS. (Source Code) BSD-2-Clause Python\nttrss-mobile - Mobile webapp for Tiny Tiny RSS. AGPL-3.0 Javascript\nttrss-reader - Light and responsive client for TTRSS. GPL-2.0 Javascript\n\n\nWinds \u26a0 - Open source and beautiful RSS reader built using React\/Redux\/Sails\/Node and Stream. It showcases personalized feeds powered by the Stream API. (Demo, Source Code) BSD-3-Clause Nodejs\n\nRSS\/Atom automation\n\nFeedpushr - Powerful RSS aggregator, able to transform and send articles to many outputs. Single binary, extensible with plugins. GPL-3.0 Go\nFull-Text RSS - Extract article content from news sites and blogs and convert RSS feeds that contain only extracts of stories to full-text feeds. Developed by FiveFilters.org. (Source Code) GPL-3.0 PHP\nPolitePol - Online tool for creation of RSS feeds for any web page. (Demo) MIT Python\nRSS Fulltext Proxy - Mirrors RSS feeds to return the full content of the items, extracted from the website. MIT NodeJS\nRSS Merger - PHP script which will take multiple RSS \/ Atom feeds as input and merge them into a single RSS feed. GPL-2.0 PHP\nRSS-Bridge - rss-bridge is a PHP project capable of generating ATOM feeds for websites which don't have one. Unlicense PHP\nRSS2EMail - Fetches RSS\/Atom-feeds and pushes new Content to any email-receiver, supports OPML. GPL-2.0 Python\nScreaming Liquid Tiger - Simple script to automatically generate valid RSS and Atom feeds from a list of media files in the same folder. MIT PHP\n\nFile Sharing and Synchronization\n^        back to top        ^\nSome Groupware solutions also feature file sharing and synchronization.\nDistributed filesystems\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#distributed-filesystems\nFile transfer\/synchronization\n\nGit Annex - File synchronization between computers, servers, external drives. (Source Code) GPL-3.0 Haskell\nKinto - Kinto is a minimalist JSON storage service with synchronisation and sharing abilities. (Source Code) Apache-2.0 Python\nmyDrive - Fully featured online storage solution, upload\/download files, photo\/video viewer, and more, all through the web client. (Demo) GPL-3.0 Node.js\nNextcloud - Access and share your files, calendars, contacts, mail and more from any device, on your terms. (Demo, Source Code) AGPL-3.0 PHP\nOpenSSH\/SFTP - Secure File Transfer Program. (Source Code) BSD-2-Clause C\nownCloud - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. (Source Code, Clients) AGPL-3.0 PHP\nPydio - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. (Source Code) AGPL-3.0 PHP\nSamba - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB\/CIFS protocol. (Source Code) GPL-3.0 C\nSeafile - File hosting and sharing solution primary for teams and organizations. (Source Code) GPL-2.0\/GPL-3.0\/AGPL-3.0\/Apache-2.0 C\nSparkleShare - Self hosted, instant, secure file sync. (Source Code) GPL-3.0 C#\nSyncany - Secure file sync software for arbitrary storage backends, an open-source cloud storage and filesharing application. Securely synchronize your files to any kind of storage. GPL-3.0 Java\nSyncthing - Syncthing is an open source peer-to-peer file synchronisation tool. (Source Code) MPL-2.0 Go\nUnison - Unison is a file-synchronization tool for OSX, Unix, and Windows. GPL-3.0 OCaml\nZ-Push - Implementation of Microsoft\u2019s ActiveSync protocol. (Source Code) AGPL-3.0 PHP\n\nPeer-to-peer filesharing\n\nbittorrent-tracker - Simple, robust, BitTorrent tracker (client and server) implementation. (Source Code) MIT Nodejs\ncloud-torrent - Torrent Web Client with HTTP retrievable or streamable downloaded files. AGPL-3.0 Go\nDat Project - Powerful decentralized file sharing applications built from a large ecosystem of modules. (Source Code) MIT Nodejs\nFilePizza - Peer-to-peer file transfers in your browser. (Source Code) BSD-3-Clause Nodejs\nSend - A file sharing experiment which allows you to send encrypted files to other users. (Clients) MPL-2.0 Nodejs\ninstant.io - Streaming file transfer over WebTorrent. (Demo) MIT Nodejs\nMagnetico - Magnetico is the first autonomous (self-hosted) BitTorrent DHT search engine suite that is designed for end-users. AGPL-3.0 Python\nMagnetissimo - Search engine that indexes all popular torrent sites. MIT Elixir\nOpentracker - Open and free bittorrent tracker. It aims for minimal resource usage and is intended to run at your wlan router. (Source Code) Beerware C\npeerflix-server - Downloads torrent files and provides a direct link download or a direct link stream. MIT Nodejs\nqBittorrent - Free cross-platform bittorrent client with a feature rich Web UI for remote access. (Source Code) GPL-2.0 C++\nrartracker - Complete private bittorrent tracker. WTFPL PHP\nTorrents.csv - A self-hostable torrent search engine. GPL-3.0 Rust\nTransmission - Fast, easy, Free Bittorrent client. (Source Code) GPL-3.0 C\n\nObject storage\/file servers\n\nMinio - Minio is an open source object storage server compatible with Amazon S3 APIs. (Source Code) Apache-2.0 Go\nZenko CloudServer - Zenko CloudServer, an open-source Node.js implementation of a server handling the Amazon S3 protocol. (Source Code) Apache-2.0 Nodejs\n\nSingle-click\/drag-n-drop upload\n\nBoZoN - Minimalist Drag and drop file sharing app. AGPL-3.0 PHP\nCoquelicot - Coquelicot is a \u201cone-click\u201d file sharing web application with a focus on protecting users\u2019 privacy. (Source Code) AGPL-3.0 Ruby\nelixire - Simple yet advanced screenshot uploading and link shortening service. (Source Code, Clients) AGPL-3.0 Python\nfibridge - Stream huge files out of your browser without having to upload. MIT Rust\nFileShelter - FileShelter is a self-hosted software that allows you to easily share files over the Internet. (Demo) GPL-3.0 C++\nFiles Sharing - Open Source and self-hosted files sharing application based on unique and temporary links. GPL-3.0 PHP\ngoploader - Easy file sharing with server-side encryption, curl\/httpie\/wget compliant. (Source Code) MIT Go\nimgpush - imgpush is a self-hosted file upload service that can easily be integrated into other webapps. MIT Python\nipfs.pics - ipfs.pics is a distributed image hosting website. AGPL-3.0 PHP\nJirafeau - Jirafeau is a web site permitting to upload a file in a simple way and give an unique link to it. (Demo) AGPL-3.0 PHP\nlinx-server - Simple file sharing and pastebin with API, auto-expiry, deletion keys, and web seed support. (Demo) GPL-3.0 Go\nlufi - Let's Upload that FIle, client-side encrypted. (Demo, Source Code) AGPL-3.0 Perl\nlutim - Let's Upload That Image. AGPL-3.0 Perl\nOnionShare - Securely and anonymously share a file of any size. GPL-2.0 Python\nPictShare - PictShare is a multi lingual, open source image hosting service with a simple resizing and upload API. (Source Code) Apache-2.0 PHP\nPlik - Plik is a scalable and friendly temporary file upload system. (Demo) MIT Go\nPomf - Simple file uploading and sharing, source for the now shut down site Pomf.se. MIT PHP\nProjectSend - Upload files and assign them to specific clients you create. Give access to those files to your clients. (Source Code) GPL-2.0 PHP\nPsiTransfer - Simple open source self-hosted file sharing solution with robust up-\/download-resume and password protection. BSD-2-Clause Nodejs\nShare - Simple yet advanced uploader - upload files, images and text with moderation tools for admins. Can be used for friends and family or just for you. Integration with ShareX and more. MIT Nodejs\nSharry - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. GPL-3.0 Scala\/Java\nUguu - Stores files and deletes after X amount of time. (Source Code) MIT PHP\nUp1 - Client-side Encrypted Image Host. MIT Nodejs\nuPste - Private file hosting application with an emphasis on serving technology communities. (Source Code) AGPL-3.0 PHP\nXBackBone - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). AGPL-3.0 PHP\nYouTransfer - YouTransfer is a simple but elegant self-hosted file transfer and sharing solution. (Demo, Source Code) Apache-2.0 Nodejs\n\nCommand-line file upload\n\nBeauties - Minimalist file sharing written in Go, to be used primarily from Unix shell (e.g. with curl). Can be built as a Debian package for easy install. MIT Go\ntransfer.sh - Easy file sharing from the command line. (Source Code) MIT Go\n\nWeb based file managers\n\nApaxy - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. (Source Code) Unlicense HTML\nDirectoryLister - Simple PHP based directory lister that lists a directory and all it's sub-directories and allows you to navigate there within. (Source Code) MIT PHP\nEncode Explorer - Encode Explorer is a single page file browser, it is simple and functional. (Demo, Source Code) MIT PHP\nexplorer - Highly-configurable directory listing made with nodejs. (Source Code) MIT Nodejs\nFilestash - A web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive . (Demo, Source Code) AGPL-3.0 Go\ngoBrowser - Simple http file browser. GPL-3.0 Go\nGossa - Gossa is a light and simple webserver for your files. MIT Go\nh5ai - Modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. (Demo, Source Code) MIT PHP\nIFM - Single script file manager. MIT PHP\nResourceSpace - ResourceSpace open source digital asset management software is the simple, fast, and free way to organise your digital assets. (Demo, Source Code) Other PHP\ns3server - Simple HTTP interface to index and browse files in a public S3 or Google Cloud Storage bucket. MIT Go\nSurfer - Simple static file server with webui to manage files. MIT Nodejs\nTagSpaces - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. (Demo, Source Code) AGPL-3.0 Javascript\n\nGames\n^        back to top        ^\nGames, game servers and control panels.\n\nA Dark Room - Minimalist text adventure game for your browser. (Demo) MPL-2.0 HTML5\nAgar.IO Clone - Agar.io clone written with Socket.IO and HTML5 canvas. MIT Nodejs\nbattlecraft - Fully distributed multiplayer browser game. Apache-2.0 Erlang\nelevatorsaga - The elevator programming game. (Source Code) MIT Javascript\nHextris - Fast paced HTML5 puzzle game inspired by Tetris. (Demo) GPL-3.0 HTML5\nLegend of the Green Dragon - Legend of the Green Dragon is a text-based RPG originally developed by Eric Stevens and JT Traub as a remake of and homage to the classic BBS Door game, Legend of the Red Dragon, by Seth Able Robinson. (Demo) AGPL-3.0 PHP\nLila - The forever free, adless and open source chess server powering lichess.org, with official iOS and Android client apps. (Source Code) AGPL-3.0 Scala\nMindustry - Factorio-like tower defense game. Build production chains to gather more resources, and build complex facilities. (Source Code) GPL-3.0 Java\nMinetest - An open source voxel game engine. Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. (Source Code) LGPL-2.1\/CC-BY-SA-3.0\/Other C++\nNet64+ \u26a0 - Net64 aka SM64O allows playing Super Mario 64 in an online multiplayer mode. Net64+ is the official continuation of the program and features an integrated server list. (Source Code, Clients) MIT Nodejs\nnode-virtual-gamepads - Turn your smartphone into a game controller, keyboard, or touchpad for a remote Linux OS machine. MIT Nodejs\/CoffeScript\nPosio - Geography multiplayer game. MIT Python\npiqueserver - Server for openspades, the first-person shooter in a destructible voxel world. (Clients) GPL-3.0 Python\/C++\nQuakeJS - QuakeJS is a port of ioquake3 to JavaScript that can be played in a browser. MIT Nodejs\nQuizmaster - A web-app for conducting a quiz, including a page for players to enter their answers. Apache-2.0 Scala\nRconCli - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. MIT Go\nSourceBans++ - Admin, ban, and communication management system for games running on the Source engine. (Source Code) CC-BY-SA-4.0 PHP\nTeeworlds - Open source 2D retro multiplayer shooter. (Source Code) BSD-3-Clause\/Other C++\nTournamentMango - TournamentMango is an open source tournament bracket and user management system. You can build an archive of players and keep track of all their scores over time as well as their regular characters, games, and aliases. MIT Javascript\n\nGateways and terminal sharing\n^        back to top        ^\n\nasciinema - Web app for hosting asciicasts. (Demo) Apache-2.0 Elixir\/Docker\nGateOne - Gate One is an HTML5 web-based terminal emulator and SSH client. (Source Code) AGPL-3.0 Python\nGuacamole - Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. (Source Code) Apache-2.0 Java\/C\nNeko - A self hosted virtual browser (rabb.it clone) that runs in Docker. Apache-2.0 Docker\/Go\noneye - Cloud software to access your data from everywhere with any browser. (Demo, Source Code) AGPL-3.0 PHP\nOS.js - Desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction. (Demo, Source Code) BSD-2-Clause Nodejs\nSshwifty - Sshwifty is a SSH and Telnet connector made for the Web. AGPL-3.0 Go\/Docker\ntmate - Instant terminal sharing. (Source Code) ISC C\n\nGroupware\n^        back to top        ^\n\nBlueMind - Groupware with email, calendar, addressbooks, exchange active sync, exchange \"mapi\" protocol support. (Source Code) AGPL-3.0 Java\nCitadel - Groupware including email, calendar\/scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. (Source Code) GPL-3.0 C\nCorteza - CRM including a unified workspace, enterprise messaging and a low code environment for rapidly and securely delivering records-based management solutions. (Demo, Source Code) Apache-2.0 Go\nCozy Cloud - Personal cloud where you can manage and sync your contact, files and calendars, and manage your budget with an app store full of community contributions. (Source Code) GPL-3.0 Nodejs\negroupware - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. (Source Code) GPL-2.0 PHP\nEspoCRM - CRM with a frontend designed as a single page application, and a REST API. (Demo, Source Code) GPL-3.0 PHP\nHorde - The Horde Project is about creating high quality Open Source applications and libraries, based on PHP and the Horde Framework. (Demo, Source Code) GPL-2.0 PHP\nHRCloud2 - Full-featured home hosted Cloud Drive, Personal Assistant, App Launcher, File Converter, Streamer, Share Tool and more. GPL-3.0 PHP\nKolab - Kolab community is a unified communication and collaboration system. (Source Code) GPL-2.0\/LGPL-2.1\/GPL-3.0 C++\/Python\/PHP\nKopano - Groupware suite including e-mail, calendars, tasks, todos and notes. Featuring a modern WebApp, DeskApp and mobile access over Z-Push\/ActiveSync. (Demo, Source Code) AGPL-3.0 C\/Python\/PHP\nOpenmeetings - Openmeetings provides video conferencing, instant messaging, white board, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. (Source Code) Apache-2.0 Java\nSOGo - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. (Demo, Source Code) LGPL-2.1 Objective-C\nSuiteCRM - The award-winning, enterprise-class open source CRM. (Source Code) AGPL-3.0 PHP\nTine 2.0 - Contacts, Calendar, Tasks, WebDAV, ActiveSync, VOIP, Mail-Client, CRM, Sales, Projects, Timetracker. (Demo, Source Code) AGPL-3.0\/Other PHP\nZimbra Collaboration - Email, calendar, collaboration server with Web interface and lots of integrations. (Source Code) GPL-2.0\/CPAL-1.0 Java\n\nHuman Resources Management (HRM)\n^        back to top        ^\n\nadmidio - Admidio is a free open source user management system for websites of organizations and groups. The system has a flexible role model so that it\u2019s possible to reflect the structure and permissions of your organization. (Demo, Source Code) GPL-2.0 PHP\nIceHrm - IceHrm employee management system allows companies to centralize confidential employee information. (Demo, Source Code) Apache-2.0 PHP\nOrangeHRM - OrangeHRM is a comprehensive HRM system that captures all the essential functionalities required for any enterprise. (Source Code) GPL-2.0 PHP\nSentrifugo - Sentrifugo is a HRM system that can be easily configured to meet your organizational needs. (Source Code) GPL-3.0 PHP\nTimeOff.Management - Simple yet powerful absence management software for small and medium size business. (Demo, Source Code) MIT Nodejs\n\nInternet Of Things (IoT)\n^        back to top        ^\n\nDeviceHive - Open Source IoT Platform with a wide range of integration options. (Demo, Source Code) Apache-2.0 Java\nDomoticz - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors\/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. (Source Code, Clients) GPL-3.0 C\/C++\nFHEM - FHEM is used to automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP\/IP directly. (Source Code) GPL-3.0 Perl\nGladys - Gladys is an open-source home assistant which runs on your Raspberry Pi. (Source Code) MIT Nodejs\nHome Assistant - Open-source home automation platform. (Demo, Source Code) MIT Python\nMozilla Gateway - Mozilla WebThings is Mozilla\u2019s open source implementation of the Web of Things, including the WebThings Gateway and the WebThings framework. (Source Code) MPL-2.0 NodeJS\nNode RED - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. (Source Code) Apache-2.0 Nodejs\nopenHAB - Vendor and technology agnostic open source software for home automation. (Demo, Source Code) EPL-2.0 Java\nThingsboard - Open-source IoT Platform - Device management, data collection, processing and visualization. (Demo, Source Code) Apache-2.0 Java\nThingspeak - Open source \u201cInternet of Things\u201d application and API to store and retrieve data from things using HTTP. (Demo, Source Code) GPL-3.0 Ruby\n\nKnowledge Management Tools\n^        back to top        ^\n\nMindmaps - Open source, offline capable, mind mapping application. (Demo) AGPL-3.0 HTML5\nMy Mind - Web application for creating and managing mind maps. (Demo) MIT Javascript\nWeaviate - A cloud-native, realtime vector search engine integrating scalable machine learning models (GraphQL and RESTful API's). (Demo) BSD-3-Clause Go\n\nLearning and Courses\n^        back to top        ^\n\nCanvas LMS - Canvas is the trusted, open-source learning management system (LMS) that is revolutionizing the way we educate. (Demo, Source Code) AGPL-3.0 Ruby\nChamilo LMS - Chamilo LMS allows you to create a virtual campus for the provision of online or semi-online training. (Source Code) GPL-3.0 PHP\nedX - The Open edX platform is open-source code that powers edX.org. (Source Code) AGPL-3.0 Python\nILIAS - ILIAS is the Learning Management System that can cope with anything you throw at it. (Demo, Source Code) GPL-3.0 PHP\nMahara - Open Source fully featured web application to build students electronic portfolio. (Source Code) GPL-3.0 PHP\nMoodle - Moodle is a learning and courses platform with one of the largest open source communities worldwide. (Demo, Source Code) GPL-3.0 PHP\nOpen eClass - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. (Demo, Source Code) GPL-2.0 PHP\nOpenOLAT - OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. (Demo, Source Code) Apache-2.0 Java\nRELATE - RELATE is a web-based courseware package, includes features such as: flexible rules, statistics, multi-course support, class calendar. (Source Code) MIT Python\nRosarioSIS - RosarioSIS, free Student Information System for school management. (Demo, Source Code) GPL-2.0 PHP\nSakai - The Sakai project provides a flexible and feature-rich environment for teaching, learning, research and other collaboration. (Demo, Source Code) ECL-2.0 Java\n\nMaps and Global Positioning System (GPS)\n^        back to top        ^\nSee also awesome-gis.\n\nGeo2tz - Get the timezone from geo coordinates (lat, lon). MIT Go\/Docker\nGraphHopper - Fast routing library and server using OpenStreetMap. (Source Code) Apache-2.0 Java\nHauk - Easy to setup location sharing platform that lets you temporarily share your location with anyone in real-time. (Demo) Apache-2.0 PHP\nMapBBCodeShare - Tool for sharing custom OSM maps. Support for annotated markers, polygons, lines, multi-format import\/export, multiple layers, shortlinks. (Demo) WTFPL\/Other PHP\nOpen Source Routing Machine (OSRM) - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and NodeJS wrapper. (Demo, Source Code) BSD-2-Clause C++\nNominatim - Server application for reverse geocoding (address -> coordinates) on OpenStreetMap data. (Source Code) GPL-2.0 C\nOpenGTS - Entry-level fleet tracking system. Supports variety of tracking devices and protocols. Comes with rich web-interface and reporting features. (Demo, Source Code) Apache-2.0 Java\nOpenStreetMap - Collaborative project to create a free editable map of the world. (Source Code, Clients) GPL-2.0 Ruby\nOpenTripPlanner - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. (Source Code) LGPL-3.0 Java\/JavaScript\nOrion - Powerful OwnTracks API-compliant location data visualization frontend for the web. (Demo) MIT Python\/Nodejs\nOwnTracks Recorder \u26a0 - Store and access data published by OwnTracks location tracking apps. GPL-2.0 C\/Lua\nTileServer GL - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. (Source Code) BSD-2-Clause Nodejs\nTileServer PHP - Serve map tiles from any PHP hosting. BSD-2-Clause PHP\nTraccar - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. (Demo, Source Code) Apache-2.0 Java\n\u03bclogger - Collect geolocation from users in real-time and display their GPS tracks on a website. (Demo) GPL-3.0 PHP\nuMap - Create maps with OpenStreetMap layers in a minute and embed them in your site. (Source Code) WTFPL Python\n\nMedia Streaming\n^        back to top        ^\nSee also https:\/\/en.wikipedia.org\/wiki\/List_of_streaming_media_systems, https:\/\/en.wikipedia.org\/wiki\/Comparison_of_streaming_media_systems\nMultimedia Streaming\n\nDarwin Streaming Server - High performance server for streaming QuickTime and MPEG-4 media over RTP and RTSP protocols. Originated as Apple\u2019s QTSS. (Source Code) APSL-2.0 C++\nGerbera - Gerbera is an UPnP Media Server. It allows you to stream your digital media throughout your home network and listen to\/watch it on a variety of UPnP compatible devices. (Source Code) GPL-2.0 C++\nhomehost \u26a0 - Self-hosted React + Redux app that streams your media collection (music, movies, books, podcasts, comics etc). MIT Nodejs\nIcecast 2 - streaming audio\/video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. (Source Code, Clients) GPL-2.0 C\nJellyfin - Media server for audio, video, books, comics, and photos with a sleek interface and robust transcoding capabilities. Almost all modern platforms have clients, including Roku, Android TV, iOS, Xbox, and Kodi. (Demo, Source Code) GPL-2.0 C#\nKaraoke Forever - Host awesome karaoke parties where everyone can easily find and queue songs from their phone's web browser. The player is also browser-based with support for MP3+G, MP4 and WebGL visualizations. (Source Code) ISC Nodejs\nLBRY - Is a secure, open, and community-run digital marketplace that aims to replace Youtube and Amazon. (Demo, Source Code, Clients) MIT PHP\nMistServer - Streaming media server that works well in any streaming environment. (Source Code) AGPL-3.0 C++\nNymphCast - NymphCast is a Chromecast alternative which turns your choice of Linux-capable hardware into an audio and video source for a television or powered speakers. (Source Code) BSD-3-Clause C++\nReadyMedia - Simple media server software, with the aim of being fully compliant with DLNA\/UPnP-AV clients. Formerly known as MiniDLNA. (Source Code) GPL-2.0 C\nRygel - Rygel is a UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. (Source Code) GPL-3.0 C\n\u00fcWave \u26a0 - \u00fcWave is a self-hosted collaborative listening platform. Users take turns playing media\u2014songs, talks, gameplay videos, or anything else\u2014from a variety of media sources like YouTube and SoundCloud. (Demo, Source Code) MIT Nodejs\n\nAudio Streaming\n\nAmpache - Web based audio\/video streaming application. (Demo, Source Code) AGPL-3.0 PHP\nAirsonic - Open-source web-based media streamer and jukebox. A fork of Subsonic's last open-source release, before it switched licenses. (Source Code, Clients) GPL-3.0 Java\nAzuraCast - A modern and accessible self-hosted web radio management suite. (Source Code) Apache-2.0 PHP\nAudioserve - Simple personal server to serve audio files from directories (audiobooks, music, podcasts...). Focused on simplicity and supports sync of play position between clients. MIT Rust\nBeets - Music library manager and MusicBrainz tagger (command-line and Web interface). (Source Code) MIT Python\nBlack Candy - Music streaming server built with Rails and Stimulus. MIT Ruby\nCompactd - Remote music player that supports adding content. MIT Nodejs\nFriendsRadio \u26a0 - Share music with your friends from Youtube and Soundcloud. (Demo) MIT Nodejs\nFunkwhale - Modern, web-based, convivial, multi-user and free music server. (Demo, Source Code) BSD-3-Clause Python\/Django\nGNU FM - Running music community websites, alternative to last.fm. (Source Code) AGPL-3.0 PHP\ngonic - Lightweight music streaming server. Subsonic compatible. GPL-3.0 Go\nGroove Basin - Music player server with a web-based user interface inspired by Amarok 1.4. MIT Nodejs\nkoel - Personal music streaming server that works. (Source Code) MIT PHP\nKooZic - Music server with powerful playlist features and Subsonic compatibility. (Demo, Source Code) LGPL-3.0\/MIT Python\nLibreTime - Simple, open source platform that lets you broadcast streaming radio on the web (fork of Airtime). (Source Code) AGPL-3.0 PHP\nLMS - Access your self-hosted music using a web interface. (Demo) GPL-3.0 C++\nmoOde Audio - Audiophile-quality music playback for the wonderful Raspberry Pi family of single board computers. (Source Code) GPL-3.0 PHP\nMopidy - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. (Source Code) Apache-2.0 Python\n\nMoped - Responsive HTML5 + Javascript client for the Mopidy music server. MIT HTML5\nMopidy MusicBox - Web Client for Mopidy Music Server. Apache-2.0 HTML5\nMopidy-Party - Mopidy web extension designed for party! Let your guests manage the sound. Apache-2.0 Python\n\n\nmpd - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. (Source Code, Clients) GPL-2.0 C++\n\nympd - Standalone MPD Web GUI written in C, utilizing Websockets and Bootstrap\/JS. (Source Code) GPL-2.0 C\n\n\nmStream - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. (Source Code) GPL-2.0 Nodejs\nmusikcube - Streaming audio server with Linux\/macOS\/Windows\/Android clients. (Source Code) BSD-3-Clause C++\nNavidrome Music Streamer - Modern Music Server and Streamer, compatible with Subsonic\/Airsonic. (Demo, Source Code, Clients) GPL-3.0 Go\/JavaScript\nPolaris - Music browsing and streaming application optimized for large music collections, ease of use and high performance. MIT Rust\nSnapcast - Synchronous multiroom audio server. GPL-3.0 C++\nSonerezh - Self-hosted, web-based application for stream your music, everywhere. (Demo, Source Code) GPL-3.0 PHP\nStretto - Music player with Youtube\/Soundcloud import and iTunes\/Spotify discovery. (Demo, Clients) MIT Nodejs\nVolumio - A free and open source linux distribution, designed and fine-tuned exclusively for music playback. (Source Code) GPL-3.0 NodeJS\n\nVideo Streaming\n\nBluecherry - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. (Source Code) GPL-2.0 PHP\ncrtmpserver - High performance RTMP\/RTSP streaming server. GPL-3.0 C++\nCyTube - CyTube is a web application providing media synchronization, chat, and more for an arbitrary number of channels. (Demo) MIT Nodejs\nHellowlol HTPC Manager fork - Fully responsive interface to manage all your favorite media on your HTPC. MIT Python\nInvidious - \u26a0 Invidious is an alternative front-end to YouTube. (Demo) AGPL-3.0 Crystal\nMyflix - Self-hosted, super lightweight Netflix alternative. MIT Shell\nOddworks - Oddworks is an open source video distribution platform built to destroy the barriers to streaming television with SDKs for Roku, Apple iOS\/tvOS, Google Android, and Amazon FireTV. MIT Nodejs\nOpen Streaming Platform - Self-Hosted alternative to Twitch and Youtube Live for live and on-demand video streaming. (Source Code) MIT Python\nPeerTube - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. (Source Code) AGPL-3.0 Nodejs\nRapidbay - Self-hosted torrent videostreaming service\/torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast\/AppleTV\/Smart TV. MIT Python\/Docker\nRestreamer - Restreamer allows you to do h.264 real-time video streaming on your website without a streaming provider. (Source Code) Apache-2.0 Nodejs\/Docker\nRadium - Synced stream and video playback with VOD capabilities utilizing HLS. Developed for movie nights but has many use cases. (Demo) MIT Nodejs\/Docker\nShinobiCE - Open Source CCTV software written in Node with both IP and local camera support. AGPL-3.0\/GPL-3.0 Nodejs\nStreama - Self hosted streaming media server. MIT Java\nSyncTube - Lightweight and very simple to setup CyTube alternative to watch videos with friends and chat. (Demo) MIT Nodejs\/Haxe\nTube - a Youtube-like (without censorship and features you don't need!) Video Sharing App written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and RSS feed. (Demo, Source Code) MIT Go\nVideoLAN Client (VLC) - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. (Source Code) Multiple C\nZoneminder - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. (Source Code) GPL-2.0 PHP\n\nMisc\/Other\n^        back to top        ^\n\n2FAuth - A web app to manage your Two-Factor Authentication (2FA) accounts and generate their security codes. (Demo) AGPL-3.0 PHP\n411 - Alert Management Web Application. MIT PHP\nAlertHub \u26a0 - AlertHub is a simple tool to get alerted from GitHub releases. MIT Nodejs\nAnchr - Anchr is a toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. (Source Code) GPL-3.0 Nodejs\nAnuko - Anuko provides simple time and project tracking on a selfhosted basis. (Demo, Source Code) Other PHP\nasciiflow - Flow Diagram Drawing Tool. (Source Code) GPL-3.0 Java\/JavaScript\nblynk - Platform with iOS and Android apps to control Arduino, ESP8266, Raspberry Pi and similar microcontroller boards over the Internet. (Source Code) AGPL-3.0 Java\nCachet - An open source status page system for everyone. (Demo, Source Code) BSD-3-Clause PHP\nCapRover - Build your own PaaS in a few minutes. (Demo, Source Code) Apache-2.0 Docker\/Nodejs\ncState - Static status page for hyperfast Hugo. Clean design, minimal JS, super light HTML\/CSS, high customization, optional admin panel, read-only API, IE8+. Best used with Netlify, Docker. (Demo) MIT Go\nCUPS - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. (Source Code) GPL-2.0 C\nCyberChef - Perform all manner of \"cyber\" operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. (Demo) Apache-2.0 JavaScript\nDigital-Currency - Create your own Self-Hosted Digital Currency. (Demo) GPL-3.0 Nodejs\nDomainMOD - Application to manage your domains and other internet assets in a central location. DomainMOD includes a Data Warehouse framework that allows you to import your WHM\/cPanel web server data so that you can view, export, and report on your data. (Demo, Source Code) GPL-3.0 PHP\nFlox \u26a0 - Self hosted movie, TV series and anime watch list with a 3-point rating system. Uses The Movie Database backend for information. (Demo) MIT PHP\nformspree \u26a0 - Just send your form to our URL and we'll forward it to your email. No PHP, Javascript or sign up required. (Demo, Source Code) AGPL-3.0 Python\nGeneWeb - GeneWeb is an open source genealogy software written in OCaml. It comes with a Web interface and can be used off-line or as a Web service. (Demo, Source Code) GPL-2.0 OCAML\ngraph-vl - Identity document verification using Machine Learning and GraphQL. MIT Python\nHow Secure Is My Password - Rather than just saying a password is \"weak\" or \"strong\", How Secure is My Password? lets your users know how long it would take someone to crack their password. (Demo) MIT Javascript\ngoogle-webfonts-helper \u26a0 - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. (Demo) MIT Nodejs\nytdl-webserver - Docker-ready webserver for downloading youtube videos. MIT Nodejs\nJournal - Simple journaling with encrypted entries and sharing capabilities. MIT Ruby\nKimai - Simple time and project tracking. (Demo, Source Code) GPL-3.0 PHP\nKing Phisher - King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. BSD-3-Clause Python\nMailyGo - MailyGo is a small tool written in Go that allows to send HTML forms, for example from static websites without a dynamic backend, via email. MIT Go\nMindsDB - MindsDB is an open source self hosted AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries. GPL-3.0 Python\nMonica - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. (Source Code) AGPL-3.0 PHP\nMusical Artifacts - Helping to catalog, preserve and free the artifacts you need to produce music. (Source Code) MIT Ruby\nnnmm - Super tiny pastebin\/url minifier \"microservice\". Beerware PHP\nNotica - Lets you send browser notifications from your terminal to your desktop or phone. No installation or registration is required. (Source Code) MIT Nodejs\nOmbi - A content request system for Plex\/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. (Source Code) GPL-2.0 C#\noTranscribe - Free web app to take the pain out of transcribing recorded interviews. (Source Code) MIT JavaScript\nPassCheck - A web application featuring some handy password tools, including a password generator, strength checker and HaveIBeenPwned breach checker. (Source Code) MIT JavaScript\nReactive Resume - A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. (Demo, Source Code) MIT Docker\/Nodejs\nReleaseBell - Send release notifications for starred Github repos. (Source Code) MIT Nodejs\nrevealjs - Framework for easily creating beautiful presentations using HTML. (Demo, Source Code) MIT JavaScript\nRevive Adserver - World's most popular free, open source ad serving system. Formerly known as OpenX Adserver and phpAdsNew. (Source Code) GPL-2.0-or-later PHP\nSANE Network Scanning - Allow remote clients to access image acquisition devices (scanners) available on the local host. (Source Code) GPL-2.0 C\nTeslaMate - A powerful data logger for Tesla vehicles. MIT Elixir\nTrello Burndown \u26a0 - Easy to use SCRUM burndown chart for Trello boards. MIT Go\/Docker\nViMbAdmin - Provides a web based virtual mailbox administration system to allow mail administrators to easily manage domains, mailboxes and aliases. (Demo, Source Code) GPL-3.0 PHP\nWeb fonts repository - Simple webfont hosting. Google Fonts alternative for your own fonts. MIT PHP\nwebtrees - Webtrees is the web's leading on-line collaborative genealogy application. (Demo, Source Code) GPL-3.0 PHP\n\nMoney, Budgeting and Management\n^        back to top        ^\nSee also https:\/\/github.com\/n1trux\/awesome-sysadmin#it-asset-management\n\nAkaunting - Akaunting is a free, online and open source accounting software designed for small businesses and freelancers. (Source Code) GPL-3.0 PHP\nBTCPay Server - A self-hosted Bitcoin and other cryptocurrencies payment processor. (Demo, Source Code) MIT C#\nBoodle - Simple accounting single-page application in Clojure and ClojureScript. EPL-1.0 Java\nBudget App - Budget App is an open source personal budgeting application. Apache-2.0 Java\nDot Ledger - Web-based personal finance management tool. (Demo, Source Code) Apache-2.0 Ruby\nEconomizzer - An easy and secure system for you to manage your personal money and achieve your goals, and can be accessed by computer, tablet or smartphone. (Demo, Source Code) MIT PHP\nExMoney - Self-hosted personal finance app. ISC Elixir\nFirefly III - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. (Demo, Source Code) AGPL-3.0 PHP\nFamily Accounting Tool - Web-based finance management tool for partners with partially shared expenses. Apache-2.0 Scala\nFava - Fava is the web frontend of Beancount, a text based double-entry accounting system. (Demo, Source Code) MIT Python\nGalette - Galette is a membership management web application towards non profit organizations. (Source Code) GPL-3.0 PHP\nGRR - Assets management and booking for small\/medium companies. (Source Code) GPL-2.0 PHP\nHospital Run - Hospital Run is offline enabled hospital management software. (Demo, Source Code) GPL-3.0 Nodejs\nInventaire - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. (Source Code) AGPL-3.0 Nodejs\nInvoice Ninja - Powerful tool to invoice clients online. (Demo, Source Code) AAL PHP\nInvoicePlane - Manage quotes, invoices, payments and customers for your small business. MIT PHP\nIHateMoney - Manage your shared expenses, easily. (Demo, Source Code) BSD-3-Clause Python\nKresus - Open source personal finance manager. (Demo, Source Code) MIT Nodejs\nOnTrack - A simple app to track spend and set goals. MIT Ruby\/React\nPartKeepr - PartKeepr is an electronic part inventory management software. It helps you to keep track of your available parts and assist you with re-ordering parts. (Demo, Source Code) GPL-3.0 PHP\nSilverStrike - Personal finance management made easy. (Demo, Source Code) MIT Python\/Django\nStockazNG - Asset Management System. MIT Python\n\nMonitoring\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#monitoring and https:\/\/github.com\/n1trux\/awesome-sysadmin#metric--metric-collection\nNote-taking and Editors\n^        back to top        ^\nSee also Wikis\n\nBulletNotes - Workflowy \/ Dynalist clone with Kanban (Trello) and Calendar functionality. Organize everything. (Source Code) MIT Nodejs\nBoostnote - The note-taking app for programmers that focuses on markdown, snippets, and customizability. (Source Code) GPL-3.0 JavaScript\nCodiMD - Realtime collaborative markdown notes on all platforms, formerly HackMD CE. (Source Code) AGPL-3.0 Node.js\nDailyNotes - App for taking notes and tracking tasks on a daily basis in Markdown. MIT Python\ndillinger - The last Markdown editor, ever. (Source Code) MIT Nodejs\nDnote - A simple command line notebook with multi-device sync and web interface. (Source Code) AGPL-3.0 Go\nDocPHT - With DocPHT you can take notes and quickly document anything and without the use of any database. (Demo, Source Code) MIT PHP\ndraw.io - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. (Source Code) Apache-2.0 JavaScript\nJoplin - Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. (Source Code) MIT Nodejs\nLeanote - Leanote, Not Just A Notepad! Open source cloud notepad. (Demo, Source Code) GPL-2.0 Go\nMarkdown Edit - Online markdown editor\/viewer. (Source Code) MIT HTML5\nMeemo - Personal notes stream with Markdown support. (Source Code) MIT Nodejs\nminimalist-web-notepad - Minimalist notepad.cc clone. (Demo) Apache-2.0 PHP\nMiniNote - Simple Markdown note-taking app with persistence. MIT Nodejs\nOpenNote - OpenNote was built to be an open web-based alternative to Microsoft OneNote (T) and EverNote. (Demo) MIT HTML5\nOverleaf - Web-based collaborative LaTeX editor. (Source Code) AGPL-3.0 Ruby\nPaperwork - OpenSource note-taking and archiving alternative to Evernote, Microsoft OneNote and Google Keep. (Source Code) MIT PHP\nPlainpad - A modern note taking application for the cloud, utilizing the best features of progressive web apps technology. (Demo, Source Code) GPL-3.0 PHP\nsavepad - Minimalist notepad based on notepad.cc. MIT PHP\nStandard Notes - Simple and private notes app. Protect your privacy while getting more done. That's Standard Notes. (Demo, Source Code) GPL-3.0 Ruby\nturndown - HTML to Markdown converter written in JavaScript. (Source Code) MIT Javascript\nTrilium Notes - Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. AGPL-3.0 Nodejs\nTurtl - Totally private personal database and note taking app. (Source Code) GPL-3.0 CommonLisp\nWreeto - Wreeto is an open source note-taking, knowledge management and wiki system built on top of Ruby on Rails framework. (Source Code) AGPL-3.0 Ruby\nWriting - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. (Source Code) MIT Javascript\n\nOffice Suites\n^        back to top        ^\n\n Collabora Online Development Edition - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. (Source Code) MPL-2.0 C++\nCryptPad - CryptPad is the zero knowledge realtime collaborative editor (rich-text, files, source-code, ...). (Source Code) AGPL-3.0 Nodejs\nEtherCalc - Web spreadsheet. (Source Code) CPAL-1.0\/Other Nodejs\nEtherpad - Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time. (Demo, Source Code) Apache-2.0 Nodejs\nInfinoted - Server for Gobby, a multi-platform collaborative text editor. (Source Code) MIT C++\nONLYOFFICE - Office suite that enables you to manage documents, projects, team and customer relations in one place. (Source Code) AGPL-3.0 Nodejs\nPHPOffice - PHPOffice contains libraries which permits to write and read files from most office suites. LGPL-3.0 PHP\nWebODF - Tools and libraries to view and edit Open Document Format (ODF) files. (Source Code) AGPL-3.0 HTML5\n\nPassword Managers\n^        back to top        ^\n\nBitwarden \u26a0 - Password manager with webapp, browser extension, and mobile app. (Source Code) AGPL-3.0 C#\nbitwarden_rs - Lightweight Bitwarden server API implementation written in Rust. GPL-3.0 Rust\nkeeweb - This webapp is a browser and desktop password manager compatible with KeePass databases. (Source Code) MIT HTML5\nPadloc - A modern, open source password manager for individuals and teams. (Source Code) GPL-3.0 Nodejs\nPassbolt - Password manager dedicated for managing passwords in a collaborative way on any Web server, using a MySQL database backend. (Source Code) AGPL-3.0 PHP\nPassIt - Simple password manage with sharing features by group and user, but no administration interface. (Demo, Source Code) AGPL-3.0 Python\nPassWall - Open source password manager. AGPL-3.0 Go\nPsono - A promising password managers fully featured for teams. (Demo, Source Code) Apache-2.0 Python\nShaark - All in one platform for your links, stories, passwords and albums. Built with Laravel and Vue.js. MIT PHP\nsysPass - Multiuser password management system. (Demo, Source Code) GPL-3.0 PHP\nTeampass - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared\/team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. (Source Code) GPL-3.0 PHP\n\nPastebins\n^        back to top        ^\n\n0bin - Client side encrypted pastebin. WTFPL Python\nbepasty - A pastebin for all kinds of files. (Source Code) BSD-2-Clause Python\nbin - a paste bin. WTFPL\/0BSD Rust\ncryptonote - Simple open source web application that lets users encrypt and share messages that can only be read once. (Source Code) MIT Ruby\nEdPaste - Self-hosted pastebin written in Laravel (PHP Framework). MIT PHP\nfiche - Command line pastebin, all you need is netcat. (Demo) MIT C\nfilite - A simple, light and standalone pastebin, URL shortener and file-sharing service. (Demo) MIT Rust\nFugacious - Open source short-term secure messaging (OSSSM). (Source Code) CC0-1.0 Ruby\nHastebin - Open source pastebin written in Node.js (This is a fork with extended maintenance). (Demo, Source Code) MIT Node.js\nmojopaste - Perl based pastebin. (Demo, Source Code) Artistic-2.0 Perl\nNoteHub - Free and Hassle-free Pastebin for Markdown Pages. Simple, clean, password provided, generated-short link. MIT Nodejs\nPaste - Paste is forked from the original source pastebin.com used before it was bought. (Source Code) GPL-3.0 PHP\npastebin - Simple pastebin service with convenient api and CLI. (Demo) MIT Go\npastebin - Simple, fast, feature-rich, standalone pastebin service. MIT Rust\npb - Lightweight pastebin (and url shortener) built using flask. GPL-3.0 Python\nPrivateBin - PrivateBin is a minimalist, opensource online pastebin\/discussion board where the server has zero knowledge of hosted data. (Demo, Source Code) Zlib PHP\nPurritoBin - Ultra fast, minimalistic, encrypted command line paste-bin, where the server has no knowledge of the paste data. ISC C++\nSharpPaste - Cross-platform C# pastebin with client-side AES-256 encryption that just works. MIT C#\/NancyFX\nSnibox - Code snippets manager with attractive tag-oriented interface. (Demo, Source Code) MIT Ruby\nsnipt - Long-term memory for coders. Share and store code snippets. MIT Python\nSocksBin - Simple and fast terminal based pastebin, with optional code highlighting. No specific client required, all you need is netcat. Demo. GPL-3.0 Python\nStikked - Advanced and beautiful pastebin. (Demo) GPL-3.0 PHP\nSup3rS3cretMes5age - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. MIT Go\nPasty - Pasty is a fast and lightweight code pasting server. (Demo) MIT Go\n\nPersonal Dashboards\n^        back to top        ^\nSee also Monitoring\n\nBaby Buddy - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. (Demo) BSD-2-Clause Python\nDashMachine - Another web application bookmark dashboard, with fun features. GPL-3.0 Python\nHabitica - Habit tracker app which treats your goals like a Role Playing Game. Previously called HabitRPG. (Source Code) GPL-3.0\/CC-BY-NC-SA-3.0\/CC-BY-SA-3.0 Nodejs\nHeimdall - Heimdall is an elegant solution to organise all your web applications. (Source Code) MIT PHP\nHiccup - A beautiful static homepage to get to your links and services quickly. It has built-in search, editing, PWA support and localstorage caching to easily organize your start page. (Source Code) MIT HTML5\nHomepage - Simple, standalone, self-hosted PHP page that is your window to your server and the web. MIT PHP\nHomer - A dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. Apache-2.0 HTML5\nOrganizr - Organizr aims to be your one stop shop for your Servers Frontend. GPL-3.0 PHP\nPersonal management system - Central point for managing personal data (billings, payments, job holidays, notes etc.). (Demo) MIT PHP\nsimple-dash - A simple, fully responsive Dashboard to forward to the services of your choice. (Demo) MIT Javascript\nTipboard - In-house, tasty, local dashboarding system. (Source Code) Apache-2.0 Python\nwger - Web-based personal workout, fitness and weight logger\/tracker. It can also be used as a simple gym management utility and offers a full REST API as well. (Demo, Source Code) AGPL-3.0 Python\n\nPhoto and Video Galleries\n^        back to top        ^\n\nChevereto Free - Powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. (Source Code) AGPL-3.0 PHP\nCoppermine - Multilingual photo gallery that integrates with various bulletin boards. Includes upload approval and password protected albums. (Demo, Source Code) GPL-3.0 PHP\nCumulusClips - Your own video sharing website with CumulusClips video sharing script. You can build a YouTube clone where users can upload, rate, comment on videos, and much more. (Demo) GPL-2.0 PHP\nFussel - Fussel is a static photo gallery generator. Easily generate a reactive gallery and host the optimized static folder of assets. MIT Python\nGallery CSS - Gallery.css is all CSS. Think: Simple, maintainable and understandable galleries without the use of Javascript. (Source Code) MIT CSS\nLychee - Open source grid and album based photo-management-system. (Source Code) MIT PHP\nMediagoblin - Free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. (Source Code) AGPL-3.0 Python\nOwnPhotos - Self hosted wannabe Google Photos clone, with a slight focus on cool graphs. MIT Python\nPhotato - Self-hosted photo gallery, accessible through a responsive WebUI. Directly uses and indexes a specific folder in the filesystem. AGPL-3.0 Java\nPhotofloat - Web 2.0 Photo Gallery Done Right via Static JSON and Dynamic Javascript. (Demo) GPL-2.0 Python\nPhotoLight - The easiest photo gallery there is. GPL-3.0 PHP\nPhotonix - A new web-based photo management application with object recognition, location awareness, color analysis and other ML algorithms. (Demo, Source Code) AGPL-3.0 Python\nPhotoPrism - Personal photo management powered by Go and Google TensorFlow.  Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. (Source Code) MIT Go\nPhoto Stream - Minimalist self-hosted photo stream. (Demo) MIT Ruby\nPhotoview - A simple and user-friendly Photo Gallery for personal servers. It is made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high resolution photos. (Demo) GPL-3.0 Go\nPiGallery 2 - A directory-first photo gallery website, with a rich UI, optimised for running on low resource servers. (Demo, Source Code) MIT Docker\/Nodejs\nPiwigo - Photo gallery software for the web, built by an active community of users and developers. (Demo, Source Code) GPL-2.0 PHP\nPlumi - Create your own sophisticated video-sharing site. (Source Code) GPL-2.0 Python\nQuru Image Server - High performance dynamically resizing image server offering directory based access control cropping, rotation, color management and other tools. (Demo, Source Code) AGPL-3.0 Python\nsigal - Yet another simple static gallery generator. MIT Python\nUberGallery - UberGallery is an easy to use, simple to manage, web photo gallery. UberGallery does not require a database and supports JPEG, GIF and PNG file types. Simply upload your images and UberGallery will automatically generate thumbnails and output HTML. (Source Code) MIT PHP\nZenphoto - Open-source gallery and CMS project. (Source Code) GPL-2.0 PHP\n\nPolls and Events\n^        back to top        ^\n\nCalagator - Event aggregator. (Source Code) MIT Ruby\nClerk - Simple event logger to keep track of periodic events, habits, etc. as they occur. GPL-3.0 PHP\ndudle - Online scheduling application. (Demo, Source Code) AGPL-3.0 Ruby\nFeedka \u26a0 - Open-source web application that can serve as a platform to get authentic, kindful, and constructive feedback from your friends, family, and co-workers. (Demo) AGPL-3.0 Ruby\nFider - Open source alternative to UserVoice for customer feedback. (Demo, Source Code) MIT Go\nFramadate - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. (Demo, Source Code) CECILL-B PHP\nhitobito - A web application to manage complex group hierarchies with members, events and a lot more. (Demo, Source Code) AGPL-3.0 Ruby\nJD Esurvey - Open source enterprise survey web application. (Source Code) AGPL-3.0 Java\nKy\u00e9l\u00e0 - Participation polls for group events. (Demo, Source Code) AGPL-3.0 PHP\nLimeSurvey - Feature-rich Open Source web based polling software. Supports extensive survey logic. (Demo, Source Code) GPL-2.0 PHP\nMeetable - Event aggregator. (Demo, Source Code) MIT PHP\nMobilizon - A federated tool that helps you find, create and organise events and groups. (Demo, Source Code) GPL-3.0 Elixir\nOpen Event Server - Enables organizers to manage events from concerts to conferences and meet-ups. GPL-3.0 Python\nPHPBack - The open source feedback system. (Demo, Source Code) GPL-3.0 PHP\n\nBooking and Scheduling\n\nAlf.io - The open source ticket reservation system. (Demo, Source Code) GPL-3.0 Java\nBooked - A web-based calendar and resource scheduling system that allows administered management of reservations on any number of resources. (Demo, Source Code) GPL-3.0 PHP\nEasy!Appointments - A highly customizable web application that allows your customers to book appointments with you via the web. (Demo, Source Code) GPL-3.0 PHP\n\nProxy\n^        back to top        ^\n\nhttp2-serverpush-proxy - Reverse proxy that helps to automatically utilize HTTP\/2.0's server push mechanism for static websites. Available as middleware and standalone application. MIT Nodejs\nimgproxy - Fast and secure standalone server for resizing and converting remote images. It works great when you need to resize multiple images on the fly without preparing a ton of cached resized images or re-doing it every time the design changes. MIT Go\/Docker\ninlets - Expose your local endpoints to the Internet - with a Kubernetes integration, Docker image and CLI available. MIT Go\/Docker\niodine - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. (Source Code) ISC C\nmicroproxy - lightweight non-caching HTTP\/HTTPS proxy server. MIT Go\nNginx Proxy Manager - Nginx Proxy Manager is an easy way to accomplish reverse proxying hosts with SSL termination. (Source Code) MIT Nodejs\/Docker\nPHP-Proxy - Web proxy script built specifically to be fast, easy to modify and to support video sites such as YouTube. (Demo, Source Code) MIT PHP\nPomerium - An identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. (Source Code) Apache-2.0 Go\nPound - Light-weight reverse proxy and load balancer for HTTP\/HTTPS. GPL-2.0 C\nPrivoxy - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. GPL-2.0 C\nRedbird - A modern reverse proxy for node that includes cluster, HTTP2, LetsEncrypt, and Docker support. BSD-2-Clause Javascript\nsish - Open source serveo\/ngrok alternative providing HTTP(S)\/WS(S)\/TCP tunnels to localhost using only SSH. MIT Go\nsocks5-proxy-server - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. Apache-2.0 NodeJS\nSOCKS5Engine - Lightweight & resource-efficient SOCKS5 proxy server, optimized for high-load. AGPL-3.0 Go\nSquid - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. (Source Code) GPL-2.0 C\nSwiperproxy - Lightning-fast, open source web proxy that is easy for you to run and customize. (Source Code) MIT Python\nTinyproxy - Light-weight HTTP\/HTTPS proxy daemon. (Source Code) GPL-2.0 C\nTraefik - Tr\u00e6f\u026ak is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos\/Marathon, \u2026) to manage its configuration automatically and dynamically. (Source Code) MIT Go\n\nRead it Later Lists\n^        back to top        ^\n\nNunux Keeper - Your personal content curation service. (Source Code) GPL-3.0 Nodejs\nReadflow - Lightweight news reader with modern interface and features: full-text search, automatic categorization, archiving, offline support, notifications... (Source Code) MIT Go\nWallabag - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. (Demo, Source Code) MIT PHP\n\nResource Planning\n^        back to top        ^\n\nfarmOS - Web-based farm record keeping application. (Source Code) GPL-2.0 PHP\ngrocy - ERP beyond your fridge - grocy is a web-based self-hosted groceries & household management solution for your home. (Demo, Source Code) MIT PHP\nTania - Tania is a free and open source farming management system for everyone. You can manage your areas, reservoirs, farm tasks, inventories, and the crop growing progress. Apache-2.0 Go\n\nEnterprise Resource Planning\n\nDolibarr - Dolibarr ERP CRM is a modern software package to manage your company or foundation activity (contacts, suppliers, invoices, orders, stocks, agenda, accounting, ...). (Demo, Source Code) GPL-3.0-or-later PHP\nERPNext - Free open source ERP system. (Demo, Source Code) GPL-3.0 Python\nLedgerSMB - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. (Demo, Source Code) GPL-2.0 Perl\nOdoo - Free open source ERP system. (Demo, Source Code) LGPL-3.0 Python\nOFBiz - FOSS enterprise resource planning system with a suite of business applications flexible enough to be used across any industry. (Source Code) Apache-2.0 Java\nOSPOS - Open Source Point of Sale is a web based point of sale system. (Demo, Source Code) MIT PHP\nTryton - Free open source business solution. (Demo, Source Code) GPL-3.0 Python\n\nSearch Engines\n^        back to top        ^\n\nAmbar - Document Search Engine (OCR, Store & Search). (Demo, Source Code) MIT Nodejs\/Python\nGigablast - open source search engine. (Source Code) Apache-2.0 C++\nMeiliSearch - Ultra relevant, instant and typo-tolerant full-text search API. (Source Code) MIT Rust\nSearx - Privacy-respecting, hackable metasearch engine. (Demo, Source Code) AGPL-3.0 Python\nsist2 - Lightning-fast file system indexer and search tool. (Demo) GPL-3.0 C\nTypesense - Blazing fast, typo-tolerant open source search engine optimized for developer happiness and ease of use. (Source Code) GPL-3.0 C++\nYacy - Peer based, decentralized search engine server. (Demo, Source Code) GPL-2.0 Java\n\nSoftware Development\n^        back to top        ^\nProject Management\nSee also Ticketing, Task management\/To-do lists, awesome-sysadmin\/Code Review\n\nBonobo Git Server - Set up your own self hosted git server on IIS for Windows. Manage users and have full control over your repositories with a nice user friendly graphical interface. (Source Code) MIT C#\nFossil - Distributed version control system featuring wiki and bug tracker. BSD-2-Clause-FreeBSD C\nGoodwork - Self hosted project management and collaboration tool powered by Laravel & VueJS. (Demo, Source Code) MIT PHP\nGitblit - Pure Java stack for managing, viewing, and serving Git repositories. (Source Code) Apache-2.0 Java\ngitbucket - Easily installable GitHub clone powered by Scala. (Source Code) Apache-2.0 Scala\/Java\nGitea - Community managed fork of Gogs, lightweight code hosting solution. (Demo, Source Code) MIT Go\nGitLab - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. (Demo, Source Code) MIT Ruby\nGitlist - Web-based git repository browser - GitList allows you to browse repositories using your favorite browser, viewing files under different revisions, commit history and diffs. (Source Code) BSD-3-Clause PHP\nGitolite - Gitolite allows you to setup git hosting on a central server, with fine-grained access control and many more powerful features. (Source Code) GPL-2.0 Perl\nGitPrep - Portable Github clone. (Demo, Source Code) Artistic-2.0 Perl\nGit WebUI - Standalone web based user interface for git repositories. Apache-2.0 Python\nGogs - Painless self-hosted Git Service written in Go. (Demo, Source Code) MIT Go\nKallithea - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. (Source Code) GPL-3.0 Python\nKlaus - Simple, easy-to-set-up Git web viewer that Just Works. ISC Python\nLavagna - Lavagna is an open-source issue\/project management tool designed for small teams. Lightweight, pure Java, easy to install, easy to use. (Source Code) GPL-3.0 Java\nLazylead \u26a0 - Eliminate the annoying work within ticketing systems (Jira, GitHub, Trello). Allows to automate daily actions like tickets fields verification, email notifications by JQL\/GQL, meeting requests to your (or teammates) calendar. (Source Code) MIT Ruby\nLeantime - Leantime is a lean project management system for small teams and startups helping to manage projects from ideation through delivery. (Source Code) GPL-2.0 PHP\nMicrogit - Git hosting service made in Crystal and Lucky. MIT Crystal\nOctobox \u26a0 - Take back control of your GitHub Notifications. (Source Code) AGPL-3.0 Ruby\nOpenProject - OpenProject is a web-based project management system. (Source Code) GPL-3.0 Ruby\nPagure - A lightweight, powerful, and flexible git-centric forge with features laying the foundation for federated and decentralized development. (Demo) GPL-2.0 Python\nPhabricator - Collection of web applications that help build better software. (Demo, Source Code) Apache-2.0 PHP\nPhproject - High performance full-featured project management system. (Demo, Source Code) GPL-3.0 PHP\nProjeQtOr - A complete, mature, multi-user project management system with extensive functionality for all phases of a project. (Demo, Source Code) AGPL-3.0 PHP\nRe:Backlogs - Project management and collaboration tool powered by Ruby on Rails & VueJS. (Demo) MIT Ruby\nRedmine - Redmine is a flexible project management web application. (Demo, Source Code) GPL-2.0 Ruby\nRhodeCode - RhodeCode is an open source platform for software development teams. It unifies and simplifies repository management for Git, Subversion, and Mercurial. (Demo, Source Code) AGPL-3.0 Python\nSCM Manager - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. (Source Code) BSD-3-Clause Java\nTaiga - Agile Project Management Tool based on the Kanban and Scrum methods. (Source Code) AGPL-3.0 Python\nTitra - Time-tracking solution for freelancers and small teams. (Demo, Source Code) GPL-3.0 JavaScript\nTrac - Trac is an enhanced wiki and issue tracking system for software development projects. BSD-3-Clause Python\nTuleap - Tuleap is a libre suite to plan, track, code and collaborate on software projects. (Source Code) GPL-2.0 PHP\nUVDesk - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. (Demo, Source Code) MIT PHP\nZenTao - An agile(scrum) project management system\/tool. (Demo, Source Code) ZPL-1.2 PHP\n\nBug Trackers\nSee Ticketing\nIDE\/Tools\n\nAtheos - Web-based IDE framework with a small footprint and minimal requirements, continued from Codiad. (Source Code) MIT PHP\nBabelfish - Self-hosted server for source code parsing. It can parse any file, in any supported language, extract an Abstract Syntax Tree from it, and convert it to a Universal Abstract Syntax Tree which can enable further analysis and transformation. GPL-3.0 Go\nCode-Server - Visual Studio Code in the browser, hosted on a remote server. (Source Code) MIT Nodejs\/Docker\nEclipse Che - Open source workspace server and cloud IDE. (Source Code) EPL-1.0 Docker\/Java\nGitpod - Online IDE for GitHub and GitLab. (Demo, Source Code) EPL-2.0 Go\/Docker\nHakatime - WakaTime server implementation with analytics dashboard. Unlicense Haskell\nHttPlaceholder - Quickly mock away any webservice using HttPlaceholder. HttPlaceholder lets you specify what the request should look like and what response needs to be returned. MIT C#\nICEcoder - ICEcoder is a web IDE \/ browser based code editor, which allows you to develop websites directly within the web browser. (Demo, Source Code) MIT PHP\nJS Bin - Open source collaborative web development debugging tool. (Source Code) MIT Nodejs\nJudge0 API - Open source API to compile and run source code. (Source Code) GPL-3.0 Ruby\nJupyterLab - Web-based environment for interactive and reproducible computing. (Demo, Source Code) BSD-3-Clause Python\/Docker\nKoding - The simplest way to manage your entire Dev Infrastructure. (Source Code) Apache-2.0 Nodejs\nML Workspace - All-in-one web-based IDE for machine learning and data science. Apache-2.0 Docker\nRegexr - RegExr is a HTML\/JS based tool for creating, testing, and learning about Regular Expressions. (Source Code) MIT Nodejs\nRequestBin - Inspect HTTP requests. Debug webhooks. MIT python\nRStudio Server - Web browser based IDE for R. (Source Code) AGPL-3.0 Java\/C++\nsourcegraph - Sourcegraph is a fast, open-source, fully-featured code search and navigation engine written in Go. (Source Code) Apache-2.0 Go\nWakapi - Tracking tool for coding statistics, compatible with WakaTime. GPL-3.0 Go\n\nContinuous Integration\nSee awesome-sysadmin\/Continuous Integration & Continuous Deployment\nUX testing\n\nUier - Codeless or low-code User Experience test editing and management using Selenium to perform testing or UI automation. Uier tends to be a free self hostable alternative to Applitools, Endtest, Ghost Inspector, Usetrace, Screenster and many others. Apache-2.0 Nodejs\nSelenoid - Lightweight Selenium hub implementation launching browsers within Docker containers. (Source Code) Apache-2.0 Go\n\nFaaS\/Serverless\nServerless computing on Wikipedia\n\nAppwrite - End to end backend server for web, native, and mobile developers \ud83d\ude80. (Source Code) BSD-3-Clause PHP\nfx - fx is a tool to help you do Function as a Service with painless on your own servers. MIT Go\nIronFunctions - The serverless microservices platform by iron.io. Apache-2.0 Go\nLocalStack - LocalStack is a fully functional local AWS cloud stack. This includes Lambda for serverless computation. (Source Code) Apache-2.0 Python\/Other\nOpenFaaS - Serverless Functions Made Simple for Docker & Kubernetes. (Source Code) MIT Go\nTrusted-CGI - Lightweight self-hosted lambda\/applications\/cgi\/serverless-functions platform. MIT Go\n\nAPI Management\n\nDreamFactory - Turns any SQL\/NoSQL\/Structured data into Restful API. (Source Code) Apache-2.0 PHP\nFusio - Open-source API management platform which helps to build and manage REST APIs. (Demo, Source Code) AGPL-3.0 PHP\nHapttic - Simple HTTP server that forwards all requests to a shell script to handle webhooks you receive. Apache-2.0 Go\nHasura - Fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events. (Source Code) Apache-2.0 Haskell\nHoppscotch - A free, fast and beautiful API request builder. (Source Code) MIT Nodejs\/Vue\/Nuxt\nKong - The World\u2019s Most Popular Open Source Microservice API Gateway and Platform. (Source Code) Apache-2.0 Lua\nKrakenD - Open source High-Performance API Gateway. (Source Code) Apache-2.0 Go\nPara - Flexible and modular backend framework\/server for object persistence, API development and authentication. (Source Code) Apache-2.0 Java\nPizzly - Open-source API Integrations Manager that provides everything a developer needs to interact with OAuth based APIs. MIT Nodejs\nTyk - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. (Source Code) MPL-2.0 Go\n\nDocumentation Generators\nSee also Static site generators\n\nDocstore - Static document hosting without any server-side processing, does not require you to recompile every time you change an article. Clone the repository and add articles in the text\/ directory to get started. (Source Code) BSD-3-Clause Javascript\nFlatdoc - Small Javascript file that fetches Markdown files and renders them as full pages. MIT Javascript\nmarkdown-tree - Serve a hierarchy \/ tree directory of markdown files. Use intended for small sites built in markdown. MIT Ruby\nRead the Docs - Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. (Demo, Source Code) MIT Python\n\nLocalization\n\nAccent - Open-source, self-hosted, developer-oriented translation tool. (Source Code) BSD-3-Clause Elixir\nPootle - Online translation and localization tool. (Source Code) GPL-3.0 Python\nTraduora - Translation management platform for teams. (Source Code) AGPL-3.0 Docker\/Nodejs\nWeblate - Web-based translation tool with tight version control integration. (Demo, Source Code) GPL-3.0 Python\nZanata - Web-based translation platform for translators, content creators and developers to manage localisation projects. (Source Code) GPL-2.0 Java\n\nStatic site generators\n^        back to top        ^\nSee https:\/\/staticsitegenerators.net and https:\/\/www.staticgen.com\nTask management\/To-do lists\n^        back to top        ^\nSee also Project Management and Ticketing.\n\nKanbana - Create boards to track users and projects from flat markdown files. Forked from Crepido. MIT Nodejs\nKanboard - Simple and open source visual task board. (Source Code) MIT PHP\nmyTinyTodo - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite\/MySQL. GTD compliant. (Demo, Source Code) GPL-2.0 PHP\nNullboard - Single-page minimalist kanban board; compact, highly readable and quick to use. (Demo) BSD-2-Clause Javascript\nPHP Task\/Todo list - Simple task\/todo list that uses a JSON text file for the tasks. MIT PHP\nPlanka - Open source Trello alternative. (Demo, Source Code) MIT Nodejs\nRestyaboard - Open source Trello-like kanban board. (Demo, Source Code) OSL-3.0 PHP\nTask Keeper - List editor for power users, backed by a self-hosted server. Apache-2.0 Scala\nTaskBoard - Kanban-inspired app for keeping track of things that need to get done. (Demo, Source Code) MIT PHP\nTaskfreak - Simple but efficient web based task manager written in PHP. GPL-3.0 PHP\nTasks - Simple tasks and notes manager written in PHP, jQuery and Bootstrap using a custom flat file database. MPL-2.0 PHP\nTasks - Kanban based to-do list manager written in Go. MIT Go\nTaskwarrior - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. (Source Code) MIT C++\nTinyissue - Simple Issue Tracking for Teams. MIT PHP\ntodo - Simple todo list manager. (Demo) MIT Go\ntodoMini - Mobile friendly zero-feature TODO list web app. Unix philosophy. (Demo, Source Code) GPL-3.0 PHP\/Java\nTracks - Web-based application to help you implement David Allen\u2019s Getting Things Done\u2122 methodology. (Source Code) GPL-2.0 Ruby\nVikunja - The to-do app to organize your life. (Demo, Source Code) GPL-3.0 Go\nVolition - Opinionated open-source task management. MIT Ruby\nWekan - Open-source Trello-like kanban. (Source Code) MIT Nodejs\n\nTicketing\n^        back to top        ^\nSee also Task management\/To-do lists and Project Management\n\nBugzilla - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. MPL-2.0 Perl\nBumpy Booby - Simple, responsive and highly customizable PHP bug tracking system. (Source Code) MIT PHP\nDiamanteDesk - DiamanteDesk is FREE Open Source easy-to-use help-desk solution. (Demo, Source Code) OSL-3.0 PHP\ndjango-todo - django-todo is a pluggable, multi-user, multi-group, multi-list todo and ticketing system - a reusable app designed to be dropped into any existing Django project. (Source Code) BSD-3-Clause Python\/Django\nErxes - Marketing, sales, and customer service platform designed to help businesses attract more engaged customers. (Demo, Source Code) GPL-3.0 Javascript\nFlyspray - Uncomplicated, web-based bug tracking system. (Source Code) GPL-2.0 PHP\nFreeScout - Open source clone of Help Scout: email-based customer support application, help desk and shared mailbox. AGPL-3.0 PHP\nHelpy - Helpy is a modern, open source helpdesk customer support application. Features include knowledgebase, community discussions and support tickets integrated with email. (Demo, Source Code) MIT Ruby\nHuBoard \u26a0 - Instant project management for your GitHub issues (Connects directly GitHub API). MIT Ruby\nMantisBT - Self hosted bug tracker, fits best for software development. (Demo, Source Code) GPL-2.0 PHP\nOpenSupports - Multi language ticket system with FAQ, role management, metrics and canned response features. (Demo, Source Code) GPL-3.0 PHP\nosTicket - Manage, organize and archive all your support requests and responses in one place. (Source Code) GPL-2.0 PHP\nOTRS - Trouble ticket system for assigning tickets to incoming queries and tracking further communications. (Source Code) AGPL-3.0 Perl\nRequest Tracker - An enterprise-grade issue tracking system. (Source Code) GPL-2.0 Perl\nSentry On-Premise - A powerful error tracking platform with wide language support and a robust API. (Source Code) BSD-3-Clause Python\/Django\nSIT - SCM-agnostic, file-based, offline-first, immutable issue tracker. (Source Code) MIT Apache-2.0 Rust\nTheBugGenie - friendly project management and issue tracking tool, with extensive user rights system. (Source Code) MPL-2.0 PHP\nZammad - Easy to use but powerful open-source support and ticketing system. (Source Code) AGPL-3.0 Ruby\n\nURL Shorteners\nBefore hosting one, please see shortcomings of URL shorteners.\n^        back to top        ^\n\ngShort - Privacy-friendly self-hosted URL shortener. (Demo) GPL-3.0 Go\nKutt - A modern URL shortener with support for custom domains. (Source Code) MIT Nodejs\nLink-shortener-bot \u26a0 - URL shortener using a Telegram Bot. (Demo) MIT Ruby\nliteshort - User-friendly, actually lightweight, and configurable URL shortener. (Demo) MIT Python\nLstu - Let's SHorten That Url - Lightweight URL shortener. WTFPL Perl\nPolr - Modern, minimalist, modular, and lightweight URL shortener. (Source Code) GPL-2.0 PHP\nreduc.io - URL shortener service written in Scala, using Akka-Http and Redis. MIT Scala\nReducePy - URL shortener service using Tornado and Redis runs on Docker and Kubernetes. MIT Python\nschort - No login, no javascript, just short links. (Demo) CC0-1.0 Python\nShlink - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. (Source Code, Clients) MIT PHP\nshorturl - Simple URL shortener with very tiny URLs. (Demo) MIT Go\nSimple-URL-Shortener - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. (Demo) MIT PHP\nSimply Shorten - A simple URL shortener that just shortens links. MIT Java\nurl-shortener \u26a0 - Shitty url shortener, emoji and AI powered. MIT Nodejs\nURL-Shortener - Make your long links short and only uses lowercase, so you can write and spell them faster. (Demo) GPL-3.0 PHP\nYOURLS - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. (Source Code) MIT PHP\n\nVPN\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#vpn\nWeb servers\n^        back to top        ^\nSee https:\/\/github.com\/n1trux\/awesome-sysadmin#web\nWikis\n^        back to top        ^\nSee also Documentation Generators, Wikimatrix, Wiki Engines on WikiIndex, List of wiki software on wikipedia, Comparison of wiki software on wikipedia.\n\nBookStack - BookStack is a simple, self-hosted, easy-to-use platform for organizing and storing information. It allows for documentation to be stored in a book like fashion. (Demo, Source Code) MIT PHP\nCowyo - Cowyo is a feature-rich wiki for minimalists. (Demo) MIT Go\ndjango-wiki - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. (Demo) GPL-3.0 Python\nDocumize - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL\/Percona. (Source Code) AGPL-3.0 Go\nDokuwiki - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain files, therefore no database is required. (Source Code) GPL-2.0 PHP\nGitit - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki's web interface. GPL-2.0 Haskell\nGollum - Simple, Git-powered wiki with a sweet API and local frontend. MIT Ruby\njingo - Git based wiki engine written for node.js, with a decent design, a search capability and good typography. MIT Nodejs\nMediawiki - MediaWiki is a free and open-source wiki software package written in PHP. It serves as the platform for Wikipedia and the other Wikimedia projects, used by hundreds of millions of people each month. (Demo, Source Code) GPL-2.0 PHP\nMoinMoin - Advanced, easy to use and extensible WikiEngine with a large community of users. (Source Code) GPL-2.0 Python\nOutline \u26a0 - An open, extensible, wiki for your team built using React and Node.js. (Source Code) BSD-3-Clause Nodejs\nPepperminty Wiki - Complete markdown-powered wiki contained in a single PHP file. (Demo) MPL-2.0 PHP\nPineDocs - Simple, fast, customizable and lightweight site for browsing files. GPL-3.0 PHP\nPmWiki - Wiki-based system for collaborative creation and maintenance of websites. GPL-3.0 PHP\nRaneto - Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase. MIT Nodejs\nTiddlyWiki - Reusable non-linear personal web notebook. (Source Code) BSD-3-Clause Nodejs\nTiki - Wiki CMS Groupware with the most built-in features. (Demo, Source Code) LGPL-2.1 PHP\nTWiki - TWiki is a Perl-based structured wiki application, typically used to run a collaboration platform, knowledge or document management system, a knowledge base, or team portal. (Demo, Source Code) GPL-1.0 Perl\nwiki - Simple Markdown based wiki engine. (Demo) MIT Go\nWiki.js - Modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown. (Demo) AGPL-3.0 Nodejs\nWiKiss - Wiki, simple to use and install. (Source Code) GPL-2.0 PHP\nXWiki - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. (Demo, Source Code) LGPL-2.1 Java\nZim - Graphical text editor used to maintain a collection of wiki pages. Each page can contain links to other pages, simple formatting and images. (Source Code) GPL-2.0 Python\n\nSelf-hosting Solutions\n^        back to top        ^\n\n1Backend - Self-host web apps, microservices and lambdas on your server. Advanced features enable service reuse and composition. AGPL-3.0 Go\nAnsible-NAS - Build a full-featured home server with this playbook and an Ubuntu box. MIT YAML\/Docker\nCharjaBox - Highly configurable Ansible based Homeserver setup using Docker. GPL-3.0 YAML\/Ansible\/Docker\nCloud Computer - A computer in the cloud that deploys with one click and makes applications accessible through a web browser. (Source Code) MIT Docker\nDietPi - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. (Source Code) GPL-2.0 Shell\nDockSTARTer - DockSTARTer helps you get started with home server apps running in Docker. (Source Code) MIT Shell\nDPlatform - Deploy self-hosted apps easily: simple, bloat-free, independent installation. (Source Code) MIT Shell\nFLAP - Low maintenance framework to manage self-hosted services. (Source Code) AGPL-3.0 Docker\/Shell\nFreedomBone - Home server configuration based on Debian. (Source Code) AGPL-3.0 Shell\nFreedomBox - Community project to develop, design and promote personal servers running free software for private, personal, communications. GPL-3.0 Python\/Other\nFreeNAS - Network-attached storage (NAS) software based on FreeBSD and the OpenZFS file system. Support for SMB, AFP, NFS, iSCSI, SSH, rsync and FTP\/TFTP protocols. Advanced features include full-disk encryption and plug-ins. (Source Code) BSD-3-Clause Python\/Other\nHomelabOS - Your very own offline-first privacy-centric open-source data-center. Deploy over 100 services with a few commands. (Source Code) MIT Docker\nNextCloudPi - Nextcloud preinstalled and preconfigured, with a text and web management interface and all the tools needed to self host private data. With installation images for Raspberry Pi, Odroid, Rock64, Docker, and a curl installer for Armbian\/Debian. (Source Code) GPL-2.0-or-later Bash\/PHP\nOpenMediaVault - OpenMediaVault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB\/CIFS, DAAP media server, RSync, BitTorrent client and many more. (Source Code) GPL-3.0 PHP\nPiratebox - DIY anonymous offline file-sharing and communications system built with free software and inexpensive off-the-shelf hardware. GPL-3.0 Python\/Other\nSandstorm - Personal server for running self-hosted apps easily and securely. (Demo, Source Code) Apache-2.0 C++\/Other\nsovereign - Set of Ansible playbooks to build and maintain your own private cloud: email, calendar, contacts, file sync, IRC bouncer, VPN, and more. GPL-3.0 YAML\/Other\nSyncloud - Your own online file storage, social network or email server. (Source Code) GPL-3.0 Python\/Other\nUBOS - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. GPL-3.0 Perl\/Other\nWikiSuite - The most comprehensive and integrated Free \/ Libre \/ Open Source enterprise software suite. (Source Code) Multiple ClearOS\nYunoHost - Server operating system aiming to make self-hosting accessible to everyone. (Demo, Source Code) AGPL-3.0 Python\/Other\n\n\nList of Licenses\n^        back to top        ^\n\n\u26a0  - Depends on a proprietary service outside the user's control\n0BSD - BSD Zero-Clause Licence\nAAL - Attribution Assurance License\nAGPL-3.0 - GNU Affero General Public License 3.0\nAGPL-3.0-only - GNU Affero General Public License 3.0 only\nApache-2.0 - Apache, Version 2.0\nAPSL-2.0 - Apple Public Source License, Version 2.0\nArtistic-2.0 - Artistic License Version 2.0\nBeerware - Beerware License\nBSD-2-Clause - BSD 2-clause \"Simplified\"\nBSD-2-Clause-FreeBSD - BSD 2-Clause FreeBSD License\nBSD-3-Clause - BSD 3-Clause \"New\" or \"Revised\"\nBSD-3-Clause-Attribution - BSD with attribution\nCC-BY-NC-SA-3.0 - Creative Commons Attribution-NonCommercial-ShareAlike 3.0 International License\nCC-BY-SA-3.0 - Creative Commons Attribution-ShareAlike 3.0 International License\nCC-BY-SA-4.0 - Creative Commons Attribution-ShareAlike 4.0 International License\nCC0-1.0 - Public Domain\nCDDL-1.0 - Common Development and Distribution License\nCECILL-B - CEA CNRS INRIA Logiciel Libre\nCPAL-1.0 - Common Public Attribution License Version 1.0\nDPL - Devblocks Public License 1.0\nECL-2.0 - Educational Community License, Version 2.0 \nEPL-1.0 - Eclipse Public License, Version 1.0\nEPL-2.0 - Eclipse Public License, Version 2.0\nEUPL-1.2 - European Union Public License 1.2\nGFDL-1.1-only - GNU Free Documentation License v1.1\nGFDL-1.1-or-later - GNU Free Documentation License v1.1\nGFDL-1.2-only - GNU Free Documentation License v1.2\nGFDL-1.2-or-later - GNU Free Documentation License v1.2\nGFDL-1.3-only - GNU Free Documentation License v1.3\nGFDL-1.3-or-later - GNU Free Documentation License v1.3\nGPL-1.0 - GNU General Public License\nGPL-2.0 - GNU General Public License 2.0\nGPL-2.0-or-later - GNU General Public License v2.0 or later\nGPL-3.0-only - GNU General Public License v3.0 only\nGPL-3.0-or-later - GNU General Public License v3.0 or later\nGPL-3.0 - GNU General Public License 3.0\nIPL-1.0 - IBM Public License\nISC - Internet Systems Consortium License\nLGPL-2.1 - Lesser General Public License 2.1\nLGPL-3.0 - Lesser General Public License 3.0\nMIT - MIT License\nMPL-1.1 - Mozilla Public License Version 1.1\nMPL-2.0 - Mozilla Public License\nMultiple - Various different licenses, for different components of the project's software.\nOSL-3.0 - Open Software License 3.0\nOther - Non-standard license, usually unique to the project itself.\nSendmail - Sendmail License\nSSPL-1.0 - Server Side Public License\nUnlicense - The Unlicense\nWTFPL - Do What the Fuck You Want to Public License\nZlib - Zlib\/libpng License\nZPL-1.2 - Zope Public License 1.2\nZPL-2.0 - Zope Public License 2.0\n\n\nExternal links\n^        back to top        ^\n\nAwesome Big Data - Curated list of awesome big data frameworks, resources and other awesomeness.\nAwesome Public Datasets - List of high quality, topic-centric public data sources.\nAwesome Sysadmin - Curated list of amazingly awesome open source sysadmin resources.\nLists of software aimed at privacy and decentralization in some form: PRISM Break, privacytools.io, Alternative Internet, Libre Projects\nDynamic Domain Name services: Afraid.org, Pagekite\nCommunities\/forums: \/r\/selfhosted, IndieWeb\nMirrors: GitHub.com, Gitlab.com\n\n\nContributing\nContributing guidelines can be found in .github\/CONTRIBUTING.md.\nAuthors\nThe list of authors can be found in AUTHORS.md.\nLicense\nThis list is under the Creative Commons Attribution-ShareAlike 3.0 Unported License.\n","27":"\n\nStay on the bleeding edge \u2014 join our Gitter room! \ud83c\udf89\n  \n\n\n\n\nSee how the exact same Medium.com clone (called Conduit) is built using any of our supported frontends and  backends. Yes, you can mix and match them, because they all adhere to the same API spec \ud83d\ude2e\ud83d\ude0e\nWhile most \"todo\" demos provide an excellent cursory glance at a framework's capabilities, they typically don't convey the knowledge & perspective required to actually build real applications with it.\nRealWorld solves this by allowing you to choose any frontend (React, Angular 2, & more) and any backend (Node, Django, & more) and see how they power a real world, beautifully designed fullstack app called \"Conduit\".\nRead the full blog post announcing RealWorld on Medium.\nFrontends\n\nSorted by popularity on Sun Sep 06 2020\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nReact \/ Redux   \nAngular   \nVue   \n\n\nElm   \nReact \/ MobX   \nSvelte \/ Sapper   \n\n\nPureScript + Halogen   \nClojureScript + re-frame   \nAngularJS   \n\n\nAngular + ngrx + nx   \nAurelia   \nRust + Yew + WebAssembly   \n\n\nEmber.js   \nAppRun   \nNext.js   \n\n\nVanilla JS Web Components   \nClojureScript + Keechma   \nStencil.js   \n\n\nHyperapp 1   \nDojo 2   \nEmber Octane   \n\n\nSan   \nRiot.js v4   \nneo.mjs   \n\n\nImba   \nCrizmas MVC   \nBridge.Spaf   \n\n\nRiot.js v3   \nRiot.js + Universal + Effector   \n\n\n\n\nWork In Progress:\nImplement GraphQL + Apollo\/Relay for the Node + React codebases |\n\ud83d\udda5 \ud83d\udd27  ClojureScript |\n\ud83d\udda5 \ud83d\udd27 Mithril |\nAngular 4+ \/ MobX |\nAngularJS 1.2  |\nVanilla Backbone.js |\nRactive |\nQuasar framework |\nBlazor |\nReasonReact (ReasonML) |\n$mol |\nSurplus wip |\nSlim.js |\nNuxt.js |\nTypescript + Web Components\nBackends\n\nSorted by popularity on Sun Sep 06 2020\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nNode \/ Express   \nGo + Gin   \nASP.NET Core   \n\n\nNestJS + TypeORM\/Prisma   \nDjango   \nLaravel   \n\n\nElixir + Phoenix   \nFlask   \nSpring   \n\n\nRails   \nSlim   \nRust \/ Rocket   \n\n\nKotlin \/ Spring   \nRust   \nGo Clean Architecture   \n\n\nGo \/ Echo   \nKoa \/ Knex   \nClojure \/ Polylith   \n\n\nServerless AWS Lambda DynamoDB   \nHaskell \/ Yesod   \nScala & Play Framework   \n\n\nGCP Cloud Functions + Datastore   \nCakePHP   \nFunctional ASP.NET Core   \n\n\nMoleculer   \nKotlin + Javalin + Exposed   \nF#   \n\n\nHapi.js   \nKotlin + http4k   \nJava Quarkus   \n\n\nNode \/ hapi pal   \nExpress w\/ Bookshelf.js   \nKotlin + Ktor   \n\n\nCrystal (Onyx)   \nRuby & Colmena   \nAkka HTTP   \n\n\nFeathers   \nQEWD.js   \nAWS Lambda Go + DynamoDB   \n\n\nEclipse Vert.x   \nSpincast   \n\n\n\n\nWork In Progress:\nImplement GraphQL + Apollo\/Relay for the Node + React codebases |\n\ud83d\uddc4\ud83d\udd27  Go + net\/http |\n\ud83d\uddc4\ud83d\udd27 Node + GraphQL |\n\ud83d\uddc4\ud83d\udd27 Clojure |\n\ud83d\uddc4\ud83d\udd27 Falcon and GAE |\n\ud83d\uddc4\ud83d\udd27 Nim |\n\ud83d\uddc4\ud83d\udd27 Symfony |\n\ud83d\uddc4\ud83d\udd27 Haskell \/ Servant |\n\ud83d\uddc4\ud83d\udd27 Phalcon |\n\ud83d\uddc4\ud83d\udd27 Dropwizard |\n\ud83d\uddc4\ud83d\udd27 Go + Gorilla mux |\n\ud83d\uddc4\ud83d\udd27 Loopback 3.0 |\n\ud83d\uddc4 \ud83d\udd27 Crystal + Kemal |\n\ud83d\uddc4 \ud83d\udd27 Erlang + Cowboy |\n\ud83d\uddc4 \ud83d\udd27 Nancy |\n\ud83d\uddc4\ud83d\udd27 Sanic |\nHaskell \/ Scotty |\nTypescript + node + express |\ntypescript + node.js(koa) |\nVanilla PHP |\nVert.x (Java) |\nLumen + MongoDB  |\nGo + net\/http Package  |\nSwift Vapor |\nEgg.js |\nServerless python (AWS Lambda) |\nServerless Typescript + Mongodb (implementation done) |\nAzure Functions + CosmosDb |\nServerless+Typescript with AWS as the provider (Lambda, SSM, DynamoDB) |\nVertx + Reactive + MongoDB |\nFullstack Golang (tgram) |\nZend Framework |\nRust \/ Rocket \/ Diesel \/ Mysql - Backend Application |\nGolang + Revel |\nMasonite |\nTurbolinks |\nActix |\nLucky |\nSymfony 4 with API Platform |\nScala + Finch |\nHolochain\nMobile\n\nSorted by popularity on Sun Sep 06 2020\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nNativeScript (Angular)   \n\n\n\n\n\nWork In Progress:\n\ud83d\udcf1\ud83d\udd27 React Native |\n\ud83d\udcf1\ud83d\udd27 Jasonette |\n\ud83d\udcf1\ud83d\udd27 Swift |\n\ud83d\udcf1\ud83d\udd27 C# on Xamarin |\n\ud83d\udcf1 \ud83d\udd27 Kotlin\/Android |\n\ud83d\udcf1\ud83d\udd27 Onymos |\nQuasar framework |\nSwift Perfect |\nFlutter\nFullstack\nSince these implementations are responsible for the entire stack, they obviously cannot be mixed and matched but they still adhere to the same functionality & UX specs.\nWork In Progress: Meteor | Ruby Hyperloop | Firebase\nCreate a new stack\n\nKnow any of these frameworks (or one that isn't listed)?Create a new framework implementation >>>\nOr you can view upcoming stacks (WIPs)\nNote: All stacks that are a WIP are experimental and incomplete.\nDon't expect everything to work perfectly out of the box!\n\nHow do I get up & running?\nSimply follow the instructions in the README of whatever frontend and\/or backend repo's you want to get up and running.\nCan you teach me how to build each stack from scratch?\nYup! We've built step-by-step tutorials for all of our stacks that teach you how to go from git init all the way to the production ready application. Start learning now >>>\n\nCommunity created resources\nForks, tutorials, workshops, and other resources based on the RealWorld project:\n\nReact+Redux \/ Node testing workshop by Kent C. Dodds\n\nExample repo showing the React+Redux and Node stacks working together w\/ TDD\nLive recording of his workshop is available on YouTube\n\n\nRealWorld React\/NodeJS E2E Tests by Anish Karandikar\n\nA repo showing how to wire React frontend with NodeJS backend for a RealWorld fullstack\nIncludes E2E integration tests that use Chrome Puppeteer and Mocha and work with CI systems like Travis CI and CircleCI\nAlso demonstrates usage of Greenkeeper for automatic dependency updates and Snyk for vulnerability monitoring\n\n\nPerformance comparisons:\n\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2019\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2018\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2017\n\n\n\n\nLearn more\n\n\"Introducing RealWorld \ud83d\ude4c\" by Eric Simons\nEvery tutorial is built against the same API spec to ensure modularity of every frontend & backend\nEvery frontend utilizes the same hand crafted Bootstrap 4 theme for identical UI\/UX\nThere is a hosted version of the backend API available for public usage, no API keys required\nInterested in creating a new RealWorld stack? View our starter guide & spec\n\n\nWho made this?\nRealWorld would not be possible without the open source community continuously helping push the project forward. In addition, we have a core project team composed of:\nAnish Karandikar - Core Maintainer\n\nMathWorker, ex-Google, ex-Computational Fluid Dynamicist, forever lover of tech & humanities \u2764\ufe0f\nCameron Chapman - Core Maintainer\n\nCameron Chapman is a Software Engineer at FanThreeSixty. He's an open source enthusiast and is helping to teach a local web development boot camp at Kansas University.\nEric Simons - Founder\/Maintainer\n\nEric is a Software Engineer, UI Designer, and author of many technical books & tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nAlbert Pai - Founder\/Maintainer\n\nAlbert is a Software Engineer, DevOps ninja, and author of many technical books & tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nThinkster - Funding\/Support\n\nThinkster creates high quality resources that help Javascript developers succeed. The RealWorld project wouldn't exist without their funding, so please consider investing in a Pro subscription to help support us!\nJames Brewer - Admin\n\nJames is a Software Engineer at Square and a contributor to the Django project. He created & maintains the RW Django codebase and continually provides guidance for the RealWorld project itself.\nSandeesh S. - Admin\n\nFull stack developer, Laravel enthusiast, Digital marketing specialist and an avid gamer.\nSpecial thanks to...\nRealWorld wouldn't be possible without the help of the open source community reviewing codebases, creating new app implementations, and many other tasks that help push this project forward. We especially appreciate the OSS leaders who have helped contribute to RealWorld:\n\nDan Abramov (creator of Redux) for  helping spark the initial idea, getting the Redux community involved, as well as graciously taking the time to provide feedback on the Redux codebase\nMax Lynch (creator of Ionic) for taking the time to provide guidance in the early days of this project\nAddy Osmani (creator of TodoMVC) for helping spark the initial idea and his amazing work with TodoMVC\nTodoMVC (team & contributors) for their exemplary & successful work; their project & org has been an invaluable analogy for us as we've built out RealWorld\nJames Brewer (docs contributor to Django) for countless brainstorming sessions, helping name this project, and creating the Django codebase + tutorial\n\nLicense\nAll of the codebases are MIT licensed unless otherwise specified.\n\n\n","28":" Markdown Here\nVisit the website.\nGet it for Chrome.\nGet it for Firefox.\nGet it for Safari.\nGet it for Thunderbird and Postbox.\nGet it for Opera.\nDiscuss it and ask questions in the Google Group.\nMarkdown Here is a Google Chrome, Firefox, Safari, Opera, and Thunderbird extension that lets you write email\u2020 in Markdown\u2021 and render them before sending. It also supports syntax highlighting (just specify the language in a fenced code block).\nWriting email with code in it is pretty tedious. Writing Markdown with code in it is easy. I found myself writing email in Markdown in the Github in-browser editor, then copying the preview into email. This is a pretty absurd workflow, so I decided create a tool to write and render Markdown right in the email.\nTo discover what can be done with Markdown in Markdown Here, check out the Markdown Here Cheatsheet and the other wiki pages.\n\u2020: And Google Groups posts, and Blogger posts, and Evernote notes, and Wordpress posts! See more.\n\u2021: And TeX mathematical formulae!\n\nTable of Contents\nInstallation Instructions\nUsage Instructions\nTroubleshooting\nCompatibility\nNotes and Miscellaneous\nBuilding the Extension Bundles\nNext Steps, Credits, Feedback, License\nInstallation Instructions\nChrome\nChrome Web Store\nGo to the Chrome Web Store page for Markdown Here and install normally.\nAfter installing, make sure to reload your webmail or restart Chrome!\nManual\/Development\n\nClone this repo.\nIn Chrome, open the Extensions settings. (Wrench button, Tools, Extensions.)\nOn the Extensions settings page, click the \"Developer Mode\" checkbox.\nClick the now-visible \"Load unpacked extension\u2026\" button. Navigate to the directory where you cloned the repo, then the src directory under that.\nThe Markdown Here extension should now be visible in your extensions list.\nReload your webmail page (and maybe application) before trying to convert an email.\n\nFirefox and Thunderbird\nMozilla Add-ons site\nGo to the Firefox Add-ons page for Markdown Here and install normally.\nOr go to the \"Tools > Add-ons\" menu and then search for \"Markdown Here\".\nAfter installing, make sure to restart Firefox\/Thunderbird!\nNote: It takes up to a month for Mozilla to approve changes to the Firefox\/Thunderbird extension, so updates (features, fixes) will lag behind what is shown here. You can manually choose to install the newest version before it's reviewed from the list of versions: https:\/\/addons.mozilla.org\/en-US\/firefox\/addon\/markdown-here\/versions\/\nManual\/Development\n\nClone this repo.\nFollow the instructions in the MDN \"Setting up an extension development environment\" article.\n\nSafari\nDownload the extension directly. When it has finished downloading, double click it to install.\nPreferences\nTo get to the Markdown Here preferences, open the Safari preferences and then go to the \"Extensions\" tab. Then click the \"Click me to show Markdown Here options\" box.\nOpera\nNote that Markdown Here only works with Opera versions 16 and higher (i.e., the ones that are based on Chromium).\nGo to the Opera Add-ons store page for Markdown Here and install normally.\nAfter installing, make sure to reload your webmail or restart Chrome!\nUsage Instructions\nInstall it, and then\u2026\n\n\nIn Chrome\/Safari\/Opera, make sure you reload your web mail page before trying to use Markdown Here.\n\n\nIn Chrome\/Firefox\/Safari\/Opera, log into your Gmail, Hotmail, or Yahoo account and start a new email. In Thunderbird, start a new message.\n\n\nMake sure you're using the rich editor.\n\nIn Gmail, click the \"Rich formatting\" link, if it's visible.\nIn Thunderbird, make sure \"Compose messages in HTML format\" is enabled in your \"Account Settings\", \"Composition & Addressing\" pane.\n\n\n\nCompose an email in Markdown. For example:\n**Hello** `world`.\n\n```javascript\nalert('Hello syntax highlighting.');\n```\n\n\n\nRight-click in the compose box and choose the \"Markdown Toggle\" item from the context menu. Or click the button that appears in your address bar. Or use the hotkey (CTRL+ALT+M by default).\n\n\nYou should see your email rendered correctly from Markdown into rich HTML.\n\n\nSend your awesome email to everyone you know. It will appear to them the same way it looks to you.\n\n\nRevert to Markdown\nAfter rendering your Markdown to pretty HTML, you can still get back to your original Markdown. Just right-click anywhere in the newly rendered Markdown and click \"Markdown Toggle\" -- your email compose body will change back to the Markdown you had written.\nNote that any changes you make to the pretty HTML will be lost when you revert to Markdown.\nIn Gmail, you can also use the browser's Undo command (CTRL+Z \/ CMD+Z, or from the Edit menu). Be warned that you might also lose the last few characters you entered.\nReplies\nIn Gmail, Thunderbird, and Google Groups, you can use \"Markdown Toggle\" normally: just write your reply (top, bottom, inline, wherever) and then convert. The original email that you're replying to will be left alone. (Technically: Existing blockquote blocks will be left intact.)\nIn Hotmail and Yahoo (which don't put the original in a blockquote), and optionally in Gmail, Thunderbird, and Google Groups, you can ensure that only the part of the reply that you wrote gets converted by selecting what you want to convert and then clicking \"Markdown Toggle\" -- see the next section.\nSelection\/Piecemeal Conversion\nSometimes you don't want to convert the entire email; sometimes your email isn't entirely Markdown. To convert only part of the email, select the text (with your mouse or keyboard), right-click on it, and click the \"Markdown Toggle\" menu item. Your selection is magically rendered into pretty HTML.\nTo revert back to Markdown, just put your cursor anywhere in the block of converted text, right click, and click the \"Markdown Toggle\" menu item again. Now it's magically back to the original Markdown.\n\nThings to know about converting\/reverting a selection\n\n\nIf you select only part of a block of text, only that text will be converted. The converted block will be wrapped in a paragraph element, so the original line will be broken up. You probably don't want to ever do this.\n\n\nYou can select and revert multiple converted blocks at the same time. One upshot of this is that you can select your entire email, click \"Markdown Toggle\", and all portions of it that you had converted will be reverted.\n\n\nIf you don't have anything selected when you click \"Markdown Toggle\", Markdown Here will check if there are converted blocks anywhere in the message and revert them. If there no converted blocks are found, it will convert the entire email.\n\n\nOptions\nThe Markdown Here Options page can be accessed via the Chrome, Firefox, Safari, or Thunderbird extensions list. The available options include:\n\nStyling modifications for the rendered Markdown.\nSyntax highlighting theme selection and modification.\nTeX math formulae processing enabling and customization.\nWhat the hotkey should be.\n\nFor Chrome and Firefox, any changes made in the Markdown Here Options are automatically synchronized between your other installations of that browser (if you have the sync feature enabled in the browser).\n\nTroubleshooting\nSee the Troubleshooting wiki page.\nCompatibility\nSee the Compatibility wiki page.\nNotes and Miscellaneous\n\n\nMarkdown Here uses Github Flavored Markdown, with the limitation that GFM special links are not supported (issue #11); nor will they be, as MDH is not Github-specific.\n\n\nAvailable languages for syntax highlighting (and the way they should be written in the fenced code block) can be seen on the highlight.js demo page.\n\n\nImages embedded inline in your Markdown will be retained when you \"Markdown Toggle\". Gmail allows you to put images inline in your email -- this can be much easier than referencing an external image.\n\n\nEmail signatures are automatically excluded from conversion. Specifically, anything after the semi-standard '-- ' (note the trailing space) is left alone.\n\nNote that Hotmail and Yahoo do not automatically add the '-- ' to signatures, so you have to add it yourself.\n\n\n\nThe \"Markdown Toggle\" menu item shows up for more element types than it can correctly render. This is intended to help people realize that they're not using a rich editor. Otherwise they just don't see the menu item and don't know why.\n\n\nStyling:\n\nThe use of browser-specific styles (-moz-, -webkit-) should be avoided. If used, they may not render correctly for people reading the email in a different browser from the one where the email was sent.\nThe use of state-dependent styles (like a:hover) don't work because they don't match at the time the styles are made explicit. (In email, styles must be explicitly applied to all elements -- stylesheets get stripped.)\n\n\n\nFor more tweaky features, visit the Tips and Tricks section.\n\n\nBuilding the Extension Bundles\ncd utils\nnode build.js\n\nChrome and Opera extension\nCreate a file with a .zip extension containing these files and directories:\nmanifest.json\ncommon\/\nchrome\/\n\nFirefox\/Thunderbird extension\nCreate a file with a .xpi extension containing these files and directories:\nchrome.manifest\ninstall.rdf\ncommon\/\nfirefox\/\n\nSafari extension\nThe browser-specific code is located in the markdown-here-safari project.\nUse the Safari Extension Builder.\nNext Steps\nSee the issues list and the Notes Wiki. All ideas, bugs, plans, complaints, and dreams will end up in one of those two places.\nFeel free to create a feature request issue if what you want isn't already there. If you'd prefer a less formal approach to floating an idea, post to the \"markdown-here\" Google Group.\nIt also takes a fair bit of work to stay up-to-date with the latest changes in all the applications and web sites where Markdown Here works.\nCredits\nMarkdown Here was coded on the shoulders of giants.\n\nMarkdown-to-HTML: chjj \/ marked\nSyntax highlighting: isagalaev \/ highlight.js\nHTML-to-text: mtrimpe \/ jsHtmlToText\n\nFeedback\nAll bugs, feature requests, pull requests, feedback, etc., are welcome. Create an issue. Or post to the \"markdown-here\" Google Group.\nLicense\nCode\nMIT License: http:\/\/adampritchard.mit-license.org\/ or see the LICENSE file.\nLogo\nCopyright 2015, Austin Anderson. Licensed to Markdown Here under the MDH contributor license agreement.\nOther images\nCreative Commons Attribution 3.0 Unported (CC BY 3.0) License\n\n\n","29":"\nSemantic UI\n\n\nSemantic is a UI framework designed for theming.\nKey Features\n\n50+ UI elements\n3000 + CSS variables\n3 Levels of variable inheritance (similar to SublimeText)\nBuilt with EM values for responsive design\nFlexbox friendly\n\nSemantic allows developers to build beautiful websites fast, with concise HTML, intuitive javascript, and simplified debugging, helping make front-end development a delightful experience. Semantic is responsively designed allowing your website to scale on multiple devices. Semantic is production ready and partnered with frameworks such as React, Angular, Meteor, and Ember, which means you can integrate it with any of these frameworks to organize your UI layer alongside your application logic.\n2.4.0 Release (Sep 17th, 2018)\nSemantic UI 2.4 is now available. Read up on what's new in the docs.\nMigration info from 1.x can be found in the 2.0 release notes\nUser Support\nPlease help us keep the issue tracker organized. For technical questions that do not include a specific JSFiddle test case (bug reports), or feature request please use StackOverflow to find a solution.\nVisit our contributing guide for more on what should be posted to GitHub Issues.\nInstall\nRecommended Install\nnpm install semantic-ui  # Use themes, import build\/watch tasks into your own gulpfile.\nSemantic UI includes an interactive installer to help setup your project.\n\nFor more details on setup visit our getting started guide.\nTo learn more about theming please read our theming guide\n\nAdditional Versions\n\n\n\nEnvironment\nInstall Script\nRepo\n\n\n\n\nCSS Only\nnpm install semantic-ui-css\nCSS Repo\n\n\nLESS Only\nnpm install semantic-ui-less\nLESS Repo\n\n\nLESS plugin\nnpm install less-plugin-semantic-ui\nLESS Plugin Repo\n\n\nEmberJS\nember install:addon semantic-ui-ember\nEmber Repo\n\n\nMeteor - LESS\nmeteor add semantic:ui\nMeteor Repo\n\n\nMeteor - CSS\nmeteor add semantic:ui-css\nCSS Repo\n\n\nBower\nbower install semantic-ui\n\n\n\n\nCheck out our integration wiki for more options.\nBrowser Support\n\nLast 2 Versions FF, Chrome, Safari Mac\nIE 11+\nAndroid 4.4+, Chrome for Android 44+\niOS Safari 7+\nMicrosoft Edge 12+\n\nAlthough some components will work in IE9, grids and other flexbox components are not supported by IE9 and may not appear correctly.\nCommunity\nGetting Help\nPlease do not post usage questions to GitHub Issues. For these types of questions use our [Gitter chatroom] or StackOverflow.\nSubmitting Bugs and Enhancements\nGitHub Issues is for suggesting enhancements and reporting bugs. Before submiting a bug make sure you do the following:\n\nCheck out our contributing guide for info on our release cycle.\nFork this boilerplate JSFiddle to create a test case for your bug. If a bug is apparent in the docs, that's ok as a test case, just make it clear exactly how to reproduce the issue. Only bugs that include a test case can be triaged.\n\nPull Requests\nWhen adding pull requests, be sure to merge into the next branch. If you need to demonstrate a fix in next release, you can use this JSFiddle\nInternational\n\nChinese A Chinese mirror site is available at http:\/\/www.semantic-ui.cn.\nRight-to-Left (RTL) An RTL version can be created using our build tools by selecting rtl from the install script.\nTranslation To help translate see the Wiki Guide for translations.\n\nResources\n\n\n\nResource\nDescription\n\n\n\n\nBugs & Feature Requests\nAll bug submission require a link to a test case, and a set of steps to reproduce the issue. You can make a test case by forking this JSFiddle, then submit your bug report on GitHub Issues\n\n\nLive Chat\nJoin our Gitter.im Room\n\n\nNewsletter Updates\nSign up for updates at semantic-ui.com\n\n\nAdditional Resources\nSubmit a question on StackOverflow or ask our Google Group\n\n\n\nPlaces to Help\n\n\n\nProject\nHow To Help\nNext Step\n\n\n\n\nLocalization\nHelp us translate Semantic UI into your language\nJoin our Translation Community\n\n\nSCSS\nSASS needs PR to support variables inside @import\nAdd Pull Request for #739\n\n\nAngular\nHelp develop angular bindings\nReach Out on GitHub Issues\n\n\nGuides & Tutorials\nHelp write guides and tutorials\nJoin the discussion\n\n\n\nReaching Out\nIf you'd like to start a conversation about Semantic feel free to e-mail me at jack@semantic-ui.com\n\n\n","30":"\n\n\n\n\n\n  Gatsby v2\n\n\n\u269b\ufe0f \ud83d\udcc4 \ud83d\ude80\n\n\n  Fast in every way that matters\n\n\n  Gatsby is a free and open source framework based on React that helps developers build blazing fast websites and apps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuickstart\n \u00b7 \nTutorial\n \u00b7 \nPlugins\n \u00b7 \nStarters\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \n  Support: Twitter\n & \nDiscord\n\nGatsby is a modern web framework for blazing fast websites.\n\n\nGo Beyond Static Websites. Get all the benefits of static websites with none of the\nlimitations. Gatsby sites are fully functional React apps so you can create high-quality,\ndynamic web apps, from blogs to e-commerce sites to user dashboards.\n\n\nUse a Modern Stack for Every Site. No matter where the data comes from, Gatsby sites are\nbuilt using React and GraphQL. Build a uniform workflow for you and your team, regardless of\nwhether the data is coming from the same backend.\n\n\nLoad Data From Anywhere. Gatsby pulls in data from any data source, whether it\u2019s Markdown\nfiles, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins\nto load your data, then develop using Gatsby\u2019s uniform GraphQL interface.\n\n\nPerformance Is Baked In. Ace your performance audits by default. Gatsby automates code\nsplitting, image optimization, inlining critical styles, lazy-loading, prefetching resources,\nand more to ensure your site is fast \u2014 no manual tuning required.\n\n\nHost at Scale for Pennies. Gatsby sites don\u2019t require servers so you can host your entire\nsite on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be\nhosted entirely free on services like GitHub Pages and Netlify.\n\n\nLearn how to use Gatsby for your next project.\nWhat\u2019s In This Document\n\nGet Up and Running in 5 Minutes\nLearning Gatsby\nMigration Guides\nHow to Contribute\nLicense\nThanks to Our Contributors and Sponsors\n\n\ud83d\ude80 Get Up and Running in 5 Minutes\nYou can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:\n\n\nInstall the Gatsby CLI.\nnpm install -g gatsby-cli\n\n\n\nCreate a Gatsby site from a Gatsby starter.\nGet your Gatsby blog set up in a single command:\n# create a new Gatsby site using the default starter\ngatsby new my-blazing-fast-site\n\n\nStart the site in develop mode.\nNext, move into your new site\u2019s directory and start it up:\ncd my-blazing-fast-site\/\ngatsby develop\n\n\nOpen the source code and start editing!\nYour site is now running at http:\/\/localhost:8000. Open the my-blazing-fast-site directory in your code editor of choice and edit src\/pages\/index.js. Save your changes, and the browser will update in real time!\n\n\nAt this point, you\u2019ve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our plugins and the official tutorial.\n\ud83c\udf93 Learning Gatsby\nFull documentation for Gatsby lives on the website.\n\n\nFor most developers, we recommend starting with our in-depth tutorial for creating a site with Gatsby. It starts with zero assumptions about your level of ability and walks through every step of the process.\n\n\nTo dive straight into code samples head to our documentation. In particular, check out the \u201cGuides\u201d, \u201cAPI Reference\u201d, and \u201cAdvanced Tutorials\u201d sections in the sidebar.\n\n\nWe welcome suggestions for improving our docs. See the \u201chow to contribute\u201d documentation for more details.\nStart Learning Gatsby: Follow the Tutorial \u00b7 Read the Docs\n\ud83d\udcbc Migration Guides\nAlready have a Gatsby site? These handy guides will help you add the improvements of Gatsby v2 to your site without starting from scratch!\n\nMigrate a Gatsby site from v1 to v2\nStill on v0? Start here: Migrate a Gatsby site from v0 to v1\n\n\u2757 Code of Conduct\nGatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our Code of Conduct. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. \ud83d\udcaa\ud83d\udc9c\n\ud83e\udd1d How to Contribute\nWhether you're helping us fix bugs, improve the docs, or spread the word, we'd love to have you as part of the Gatsby community! \ud83d\udcaa\ud83d\udc9c\nCheck out our Contributing Guide for ideas on contributing and setup steps for getting our repositories up and running on your local machine.\nA note on how this repository is organized\nThis repository is a monorepo managed using Lerna. This means there are multiple packages managed in this codebase, even though we publish them to NPM as separate packages.\nContributing to Gatsby v1\nWe are currently only accepting bug fixes for Gatsby v1. No new features will be accepted.\n\ud83d\udcdd License\nLicensed under the MIT License.\n\ud83d\udc9c Thanks\nThanks to our many contributors and to Netlify for hosting Gatsby and our example sites.\n","31":"HTML5 Boilerplate\n\n\n\n\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\nThis project is the product of over 10 years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\nHomepage: https:\/\/html5boilerplate.com\/\nSource: https:\/\/github.com\/h5bp\/html5-boilerplate\nTwitter: @h5bp\n\nQuick start\nChoose one of the following options:\n\n\nDownload the latest stable release from\nhtml5boilerplate.com. This zip file is a\nsnapshot of the dist folder. On Windows, Mac and from the file manager on\nLinux unzipping this folder will output to a folder named something like\nhtml5-boilerplate_v7.3.0. From the command line will need to create a\nfolder and unzip the contents into that folder.\nmkdir html5-boilerplate\nunzip html5-boilerplate*.zip -d html5-boilerplate\n\n\nClone the git repo \u2014 git clone https:\/\/github.com\/h5bp\/html5-boilerplate.git - and checkout the\ntagged release\nyou'd like to use. The dist folder represents the latest version of the\nproject for end users.\n\n\nInstall with npm: npm install html5-boilerplate\nor yarn: yarn add html5-boilerplate. The resulting\nnode_modules\/html5-boilerplate\/dist folder represents the latest version of\nthe project for end users. Depending on what you want to use and how you want\nto use it, you may have to copy and paste the contents of that folder into\nyour project directory.\n\n\nUsing our new create-html5-boilerplate\nproject, instantly fetch the latest npm published package (or any version\navailable on npm) with npx, npm init or yarn create without having to\ninstall any dependencies. Running the following npx command installs the\nlatest version into a folder called new-site\nnpx create-html5-boilerplate new-site\ncd new-site\nnpm install\nnpm start\n\n\n\nFeatures\n\nA finely-tuned starter template. Reap the benefits of 10 years of analysis,\nresearch and experimentation by over 200 contributors.\nDesigned with progressive enhancement in mind.\nIncludes:\n\nNormalize.css\nfor CSS normalizations and common bug fixes\nA custom build of Modernizr for feature\ndetection\nApache Server Configs\nthat improve the web site's performance and security\n\n\nPlaceholder Open Graph elements and attributes.\nAn example package.json file with Parcel commands\nbuilt in to jumpstart application development\nPlaceholder CSS Media Queries.\nUseful CSS helper classes.\nDefault print styles, performance optimized.\nAn optimized version of the Google Universal Analytics snippet.\nProtection against any stray console statements causing JavaScript\nerrors in older browsers.\n\"Delete-key friendly.\" Easy to strip out parts you don't need.\nExtensive documentation.\n\nBrowser support\n\nChrome (latest 2)\nEdge (latest 2)\nFirefox (latest 2)\nInternet Explorer 11\nOpera (latest 2)\nSafari (latest 2)\n\nThis doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.\nIf you need legacy browser support you can use HTML5 Boilerplate v6 (IE9\/IE10)\nor HTML5 Boilerplate v5\n(IE 8). They are no longer actively developed.\nDocumentation\nTake a look at the documentation table of contents. This\ndocumentation is bundled with the project which makes it available for offline\nreading and provides a useful starting point for any documentation you want to\nwrite about your project.\nContributing\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is\nwelcome to contribute, however, if you decide to get\ninvolved, please take a moment to review the guidelines:\n\nBug reports\nFeature requests\nPull requests\n\nLicense\nThe code is available under the MIT license.\n","32":"lodash\nSite |\nDocs |\nFP Guide |\nContributing |\nWiki |\nCode of Conduct |\nTwitter |\nChat\nThe Lodash library exported as a UMD module.\nGenerated using lodash-cli:\n$ npm run build\n$ lodash -o .\/dist\/lodash.js\n$ lodash core -o .\/dist\/lodash.core.js\nDownload\n\nCore build (~4 kB gzipped)\nFull build (~24 kB gzipped)\nCDN copies \n\nLodash is released under the MIT license & supports modern environments.\nReview the build differences & pick one that\u2019s right for you.\nInstallation\nIn a browser:\n<script src=\"lodash.js\"><\/script>\nUsing npm:\n$ npm i -g npm\n$ npm i lodash\nNote: add --save if you are using npm < 5.0.0\nIn Node.js:\n\/\/ Load the full build.\nvar _ = require('lodash');\n\/\/ Load the core build.\nvar _ = require('lodash\/core');\n\/\/ Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash\/fp');\n\n\/\/ Load method categories.\nvar array = require('lodash\/array');\nvar object = require('lodash\/fp\/object');\n\n\/\/ Cherry-pick methods for smaller browserify\/rollup\/webpack bundles.\nvar at = require('lodash\/at');\nvar curryN = require('lodash\/fp\/curryN');\nLooking for Lodash modules written in ES6 or smaller bundle sizes? Check out lodash-es.\nWhy Lodash?\nLodash makes JavaScript easier by taking the hassle out of working with arrays,\nnumbers, objects, strings, etc. Lodash\u2019s modular methods are great for:\n\nIterating arrays, objects, & strings\nManipulating & testing values\nCreating composite functions\n\nModule Formats\nLodash is available in a variety of builds & module formats.\n\nlodash & per method packages\nlodash-es, babel-plugin-lodash, & lodash-webpack-plugin\nlodash\/fp\nlodash-amd\n\n","33":"Tech Interview Handbook\n\n\n\n\n\n\n\n\n\n\nCredits: Illustration by @leftaligned\n\n\nRead on the website\n\n\n\n\n  Black Lives Matter. Support the Equal Justice Initiative\n\n\nWhat is this?\nCarefully curated content to help you ace your next technical interview, with a focus on algorithms. System design questions are in-progress. Besides the usual algorithm questions, other awesome stuff includes:\n\nHow to prepare for coding interviews\nInterview Cheatsheet - Straight-to-the-point Do's and Don'ts\nAlgorithm tips and the best practice questions categorized by topic\n\"Front-end Job Interview Questions\" answers\nInterview formats of the top tech companies\nBehavioral questions asked by the top tech companies\nGood questions to ask your interviewers at the end of the interviews\nHelpful resume tips to get your resume noticed and the Do's and Don'ts\n\nHelp from you in contributing content would be very much appreciated!\nWhy do I want this?\nThis repository has practical content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.\nWho is this for?\nAnybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.\n\n\n\ud83d\udcb0 Looking for a job? Sign up for free with Triplebyte to efficiently interview with top tech companies! \ud83d\udcb0\n\n\nHow is this repository different?\nThere are many awesome books like Cracking the Coding Interview and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.\nAlso, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. \ud83d\ude0e\nLooking for Front End content?\nFront end-related content have been extracted out into a separate repository - Front End Interview Handbook.\nContents\nA Docusaurus website has been created to provide a better reading experience. Check out the website here!\nRelated\nIf you are interested in how data structures are implemented, check out Lago, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.\nContributing\nThere are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.\nOnline one-click setup for contributing\nYou can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:\n\nclone the tech-interview-handbook repo.\ninstall the dependencies.\nrun yarn start.\n\nSo that you can start straight away.\n\nContributors\nThis project exists thanks to all the people who contributed. [Contribute]. \nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\n\nSponsors\nSupport this project by becoming a sponsor. Your logo\/profile picture will show up here with a link to your website. [Become a sponsor]\n         \nMaintainers\n\nYangshun Tay\nLouie Tan\n\nDisclaimer\nI am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)\n","34":"GitHub R\u00e9sum\u00e9\nA service that creates a r\u00e9sum\u00e9 based on your GitHub repos\/activity.\nGitHub R\u00e9sum\u00e9 is opt-in. To make your resume visible, just star this project. To view your r\u00e9sum\u00e9, go to https:\/\/resume.github.io\/?yourusername or follow the instructions on the home page.\nGreat for all the tech-savy bosses who want to have a quick view of person's git\/github activity, before the interview.\nDevelopment\nTo run the app in development mode:\n$ rackup config.ru\n\n(You must have Ruby and the rack gem installed.)\n","35":"Moment.js\n\n\n\n\n\n\n\nA JavaScript date library for parsing, validating, manipulating, and formatting dates.\nProject Status\nMoment.js is a legacy project, now in maintenance mode.  In most cases, you should choose a different library.\nFor more details and recommendations, please see Project Status in the docs.\nThank you.\nResources\n\nDocumentation\nChangelog\nStack Overflow\n\nLicense\nMoment.js is freely distributable under the terms of the MIT license.\n\n","36":"\n\n\nMeteor is an ultra-simple environment for building modern web\napplications.\nWith Meteor you write apps:\n\nin modern JavaScript\nthat send data over the wire, rather than HTML\nusing your choice of popular open-source libraries\n\nTry a getting started tutorial:\n\nReact - new\nBlaze\nAngular\nVue\nSvelte\n\nNext, read the guide and the documentation.\nQuick Start\nOn Windows, the installer can be found at https:\/\/www.meteor.com\/install.\nOn Linux\/macOS, use this line:\ncurl https:\/\/install.meteor.com\/ | sh\nCreate a project:\nmeteor create try-meteor\nRun it:\ncd try-meteor\nmeteor\nDeveloper Resources\nBuilding an application with Meteor?\n\nDeploy on Galaxy hosting: https:\/\/www.meteor.com\/hosting\nAnnouncement list: sign up at https:\/\/www.meteor.com\/\nDiscussion forums: https:\/\/forums.meteor.com\/\nJoin the Meteor community Slack by clicking this invite link.\n\nInterested in helping or contributing to Meteor?  These resources will help:\n\nCore development guide\nContribution guidelines\nFeature requests\nIssue tracker\n\nUninstalling Meteor\nAside from a short launcher shell script, Meteor installs itself inside your\nhome directory. To uninstall Meteor, run:\nrm -rf ~\/.meteor\/\nsudo rm \/usr\/local\/bin\/meteor\nOn Windows, just run the uninstaller from your Control Panel.\n","37":"\n\n\n\n\n\n  React Router\n\n\n  Declarative routing for React\n\n\n\n\n\n\nDocs\nView the docs here\nMigrating from 2.x\/3.x?\n3.x docs\n2.x docs\nPackages\nThis repository is a monorepo that we manage using Lerna. That means that we actually publish several packages to npm from the same codebase, including:\n\n\n\nPackage\nVersion\nDocs\nDescription\n\n\n\n\nreact-router\n\n \nThe core of React Router\n\n\nreact-router-dom\n\n \nDOM bindings for React Router\n\n\nreact-router-native\n\n \nReact Native bindings for React Router\n\n\nreact-router-config\n\n\nStatic route config helpers\n\n\n\n\nRedux users: The react-router-redux package is now deprecated. See Redux Integration for a better approach.\n\nChanges\nDetailed release notes for a given version can be found on our releases page.\nFor change notes prior to version 4, please see the CHANGES.md file.\nFunding\nYou may provide financial support for this project by donating via Open Collective, attending one of our workshops, or purchasing one of our online courses. Thank you for your support!\nAbout\nreact-router is developed and maintained by React Training and many amazing contributors. If you're interested in learning more about what React can do for your company, please get in touch!\n","38":"clean-code-javascript\nTable of Contents\n\nIntroduction\nVariables\nFunctions\nObjects and Data Structures\nClasses\nSOLID\nTesting\nConcurrency\nError Handling\nFormatting\nComments\nTranslation\n\nIntroduction\n\nSoftware engineering principles, from Robert C. Martin's book\nClean Code,\nadapted for JavaScript. This is not a style guide. It's a guide to producing\nreadable, reusable, and refactorable software in JavaScript.\nNot every principle herein has to be strictly followed, and even fewer will be\nuniversally agreed upon. These are guidelines and nothing more, but they are\nones codified over many years of collective experience by the authors of\nClean Code.\nOur craft of software engineering is just a bit over 50 years old, and we are\nstill learning a lot. When software architecture is as old as architecture\nitself, maybe then we will have harder rules to follow. For now, let these\nguidelines serve as a touchstone by which to assess the quality of the\nJavaScript code that you and your team produce.\nOne more thing: knowing these won't immediately make you a better software\ndeveloper, and working with them for many years doesn't mean you won't make\nmistakes. Every piece of code starts as a first draft, like wet clay getting\nshaped into its final form. Finally, we chisel away the imperfections when\nwe review it with our peers. Don't beat yourself up for first drafts that need\nimprovement. Beat up the code instead!\nVariables\nUse meaningful and pronounceable variable names\nBad:\nconst yyyymmdstr = moment().format(\"YYYY\/MM\/DD\");\nGood:\nconst currentDate = moment().format(\"YYYY\/MM\/DD\");\n\u2b06 back to top\nUse the same vocabulary for the same type of variable\nBad:\ngetUserInfo();\ngetClientData();\ngetCustomerRecord();\nGood:\ngetUser();\n\u2b06 back to top\nUse searchable names\nWe will read more code than we will ever write. It's important that the code we\ndo write is readable and searchable. By not naming variables that end up\nbeing meaningful for understanding our program, we hurt our readers.\nMake your names searchable. Tools like\nbuddy.js and\nESLint\ncan help identify unnamed constants.\nBad:\n\/\/ What the heck is 86400000 for?\nsetTimeout(blastOff, 86400000);\nGood:\n\/\/ Declare them as capitalized named constants.\nconst MILLISECONDS_IN_A_DAY = 60 * 60 * 24 * 1000; \/\/86400000;\n\nsetTimeout(blastOff, MILLISECONDS_IN_A_DAY);\n\u2b06 back to top\nUse explanatory variables\nBad:\nconst address = \"One Infinite Loop, Cupertino 95014\";\nconst cityZipCodeRegex = \/^[^,\\\\]+[,\\\\\\s]+(.+?)\\s*(\\d{5})?$\/;\nsaveCityZipCode(\n  address.match(cityZipCodeRegex)[1],\n  address.match(cityZipCodeRegex)[2]\n);\nGood:\nconst address = \"One Infinite Loop, Cupertino 95014\";\nconst cityZipCodeRegex = \/^[^,\\\\]+[,\\\\\\s]+(.+?)\\s*(\\d{5})?$\/;\nconst [_, city, zipCode] = address.match(cityZipCodeRegex) || [];\nsaveCityZipCode(city, zipCode);\n\u2b06 back to top\nAvoid Mental Mapping\nExplicit is better than implicit.\nBad:\nconst locations = [\"Austin\", \"New York\", \"San Francisco\"];\nlocations.forEach(l => {\n  doStuff();\n  doSomeOtherStuff();\n  \/\/ ...\n  \/\/ ...\n  \/\/ ...\n  \/\/ Wait, what is `l` for again?\n  dispatch(l);\n});\nGood:\nconst locations = [\"Austin\", \"New York\", \"San Francisco\"];\nlocations.forEach(location => {\n  doStuff();\n  doSomeOtherStuff();\n  \/\/ ...\n  \/\/ ...\n  \/\/ ...\n  dispatch(location);\n});\n\u2b06 back to top\nDon't add unneeded context\nIf your class\/object name tells you something, don't repeat that in your\nvariable name.\nBad:\nconst Car = {\n  carMake: \"Honda\",\n  carModel: \"Accord\",\n  carColor: \"Blue\"\n};\n\nfunction paintCar(car) {\n  car.carColor = \"Red\";\n}\nGood:\nconst Car = {\n  make: \"Honda\",\n  model: \"Accord\",\n  color: \"Blue\"\n};\n\nfunction paintCar(car) {\n  car.color = \"Red\";\n}\n\u2b06 back to top\nUse default arguments instead of short circuiting or conditionals\nDefault arguments are often cleaner than short circuiting. Be aware that if you\nuse them, your function will only provide default values for undefined\narguments. Other \"falsy\" values such as '', \"\", false, null, 0, and\nNaN, will not be replaced by a default value.\nBad:\nfunction createMicrobrewery(name) {\n  const breweryName = name || \"Hipster Brew Co.\";\n  \/\/ ...\n}\nGood:\nfunction createMicrobrewery(name = \"Hipster Brew Co.\") {\n  \/\/ ...\n}\n\u2b06 back to top\nFunctions\nFunction arguments (2 or fewer ideally)\nLimiting the amount of function parameters is incredibly important because it\nmakes testing your function easier. Having more than three leads to a\ncombinatorial explosion where you have to test tons of different cases with\neach separate argument.\nOne or two arguments is the ideal case, and three should be avoided if possible.\nAnything more than that should be consolidated. Usually, if you have\nmore than two arguments then your function is trying to do too much. In cases\nwhere it's not, most of the time a higher-level object will suffice as an\nargument.\nSince JavaScript allows you to make objects on the fly, without a lot of class\nboilerplate, you can use an object if you are finding yourself needing a\nlot of arguments.\nTo make it obvious what properties the function expects, you can use the ES2015\/ES6\ndestructuring syntax. This has a few advantages:\n\nWhen someone looks at the function signature, it's immediately clear what\nproperties are being used.\nIt can be used to simulate named parameters.\nDestructuring also clones the specified primitive values of the argument\nobject passed into the function. This can help prevent side effects. Note:\nobjects and arrays that are destructured from the argument object are NOT\ncloned.\nLinters can warn you about unused properties, which would be impossible\nwithout destructuring.\n\nBad:\nfunction createMenu(title, body, buttonText, cancellable) {\n  \/\/ ...\n}\n\ncreateMenu(\"Foo\", \"Bar\", \"Baz\", true);\nGood:\nfunction createMenu({ title, body, buttonText, cancellable }) {\n  \/\/ ...\n}\n\ncreateMenu({\n  title: \"Foo\",\n  body: \"Bar\",\n  buttonText: \"Baz\",\n  cancellable: true\n});\n\u2b06 back to top\nFunctions should do one thing\nThis is by far the most important rule in software engineering. When functions\ndo more than one thing, they are harder to compose, test, and reason about.\nWhen you can isolate a function to just one action, it can be refactored\neasily and your code will read much cleaner. If you take nothing else away from\nthis guide other than this, you'll be ahead of many developers.\nBad:\nfunction emailClients(clients) {\n  clients.forEach(client => {\n    const clientRecord = database.lookup(client);\n    if (clientRecord.isActive()) {\n      email(client);\n    }\n  });\n}\nGood:\nfunction emailActiveClients(clients) {\n  clients.filter(isActiveClient).forEach(email);\n}\n\nfunction isActiveClient(client) {\n  const clientRecord = database.lookup(client);\n  return clientRecord.isActive();\n}\n\u2b06 back to top\nFunction names should say what they do\nBad:\nfunction addToDate(date, month) {\n  \/\/ ...\n}\n\nconst date = new Date();\n\n\/\/ It's hard to tell from the function name what is added\naddToDate(date, 1);\nGood:\nfunction addMonthToDate(month, date) {\n  \/\/ ...\n}\n\nconst date = new Date();\naddMonthToDate(1, date);\n\u2b06 back to top\nFunctions should only be one level of abstraction\nWhen you have more than one level of abstraction your function is usually\ndoing too much. Splitting up functions leads to reusability and easier\ntesting.\nBad:\nfunction parseBetterJSAlternative(code) {\n  const REGEXES = [\n    \/\/ ...\n  ];\n\n  const statements = code.split(\" \");\n  const tokens = [];\n  REGEXES.forEach(REGEX => {\n    statements.forEach(statement => {\n      \/\/ ...\n    });\n  });\n\n  const ast = [];\n  tokens.forEach(token => {\n    \/\/ lex...\n  });\n\n  ast.forEach(node => {\n    \/\/ parse...\n  });\n}\nGood:\nfunction parseBetterJSAlternative(code) {\n  const tokens = tokenize(code);\n  const syntaxTree = parse(tokens);\n  syntaxTree.forEach(node => {\n    \/\/ parse...\n  });\n}\n\nfunction tokenize(code) {\n  const REGEXES = [\n    \/\/ ...\n  ];\n\n  const statements = code.split(\" \");\n  const tokens = [];\n  REGEXES.forEach(REGEX => {\n    statements.forEach(statement => {\n      tokens.push(\/* ... *\/);\n    });\n  });\n\n  return tokens;\n}\n\nfunction parse(tokens) {\n  const syntaxTree = [];\n  tokens.forEach(token => {\n    syntaxTree.push(\/* ... *\/);\n  });\n\n  return syntaxTree;\n}\n\u2b06 back to top\nRemove duplicate code\nDo your absolute best to avoid duplicate code. Duplicate code is bad because it\nmeans that there's more than one place to alter something if you need to change\nsome logic.\nImagine if you run a restaurant and you keep track of your inventory: all your\ntomatoes, onions, garlic, spices, etc. If you have multiple lists that\nyou keep this on, then all have to be updated when you serve a dish with\ntomatoes in them. If you only have one list, there's only one place to update!\nOftentimes you have duplicate code because you have two or more slightly\ndifferent things, that share a lot in common, but their differences force you\nto have two or more separate functions that do much of the same things. Removing\nduplicate code means creating an abstraction that can handle this set of\ndifferent things with just one function\/module\/class.\nGetting the abstraction right is critical, that's why you should follow the\nSOLID principles laid out in the Classes section. Bad abstractions can be\nworse than duplicate code, so be careful! Having said this, if you can make\na good abstraction, do it! Don't repeat yourself, otherwise you'll find yourself\nupdating multiple places anytime you want to change one thing.\nBad:\nfunction showDeveloperList(developers) {\n  developers.forEach(developer => {\n    const expectedSalary = developer.calculateExpectedSalary();\n    const experience = developer.getExperience();\n    const githubLink = developer.getGithubLink();\n    const data = {\n      expectedSalary,\n      experience,\n      githubLink\n    };\n\n    render(data);\n  });\n}\n\nfunction showManagerList(managers) {\n  managers.forEach(manager => {\n    const expectedSalary = manager.calculateExpectedSalary();\n    const experience = manager.getExperience();\n    const portfolio = manager.getMBAProjects();\n    const data = {\n      expectedSalary,\n      experience,\n      portfolio\n    };\n\n    render(data);\n  });\n}\nGood:\nfunction showEmployeeList(employees) {\n  employees.forEach(employee => {\n    const expectedSalary = employee.calculateExpectedSalary();\n    const experience = employee.getExperience();\n\n    const data = {\n      expectedSalary,\n      experience\n    };\n\n    switch (employee.type) {\n      case \"manager\":\n        data.portfolio = employee.getMBAProjects();\n        break;\n      case \"developer\":\n        data.githubLink = employee.getGithubLink();\n        break;\n    }\n\n    render(data);\n  });\n}\n\u2b06 back to top\nSet default objects with Object.assign\nBad:\nconst menuConfig = {\n  title: null,\n  body: \"Bar\",\n  buttonText: null,\n  cancellable: true\n};\n\nfunction createMenu(config) {\n  config.title = config.title || \"Foo\";\n  config.body = config.body || \"Bar\";\n  config.buttonText = config.buttonText || \"Baz\";\n  config.cancellable =\n    config.cancellable !== undefined ? config.cancellable : true;\n}\n\ncreateMenu(menuConfig);\nGood:\nconst menuConfig = {\n  title: \"Order\",\n  \/\/ User did not include 'body' key\n  buttonText: \"Send\",\n  cancellable: true\n};\n\nfunction createMenu(config) {\n  let finalConfig = Object.assign(\n    {\n      title: \"Foo\",\n      body: \"Bar\",\n      buttonText: \"Baz\",\n      cancellable: true\n    },\n    config\n  );\n  return finalConfig\n  \/\/ config now equals: {title: \"Order\", body: \"Bar\", buttonText: \"Send\", cancellable: true}\n  \/\/ ...\n}\n\ncreateMenu(menuConfig);\n\u2b06 back to top\nDon't use flags as function parameters\nFlags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.\nBad:\nfunction createFile(name, temp) {\n  if (temp) {\n    fs.create(`.\/temp\/${name}`);\n  } else {\n    fs.create(name);\n  }\n}\nGood:\nfunction createFile(name) {\n  fs.create(name);\n}\n\nfunction createTempFile(name) {\n  createFile(`.\/temp\/${name}`);\n}\n\u2b06 back to top\nAvoid Side Effects (part 1)\nA function produces a side effect if it does anything other than take a value in\nand return another value or values. A side effect could be writing to a file,\nmodifying some global variable, or accidentally wiring all your money to a\nstranger.\nNow, you do need to have side effects in a program on occasion. Like the previous\nexample, you might need to write to a file. What you want to do is to\ncentralize where you are doing this. Don't have several functions and classes\nthat write to a particular file. Have one service that does it. One and only one.\nThe main point is to avoid common pitfalls like sharing state between objects\nwithout any structure, using mutable data types that can be written to by anything,\nand not centralizing where your side effects occur. If you can do this, you will\nbe happier than the vast majority of other programmers.\nBad:\n\/\/ Global variable referenced by following function.\n\/\/ If we had another function that used this name, now it'd be an array and it could break it.\nlet name = \"Ryan McDermott\";\n\nfunction splitIntoFirstAndLastName() {\n  name = name.split(\" \");\n}\n\nsplitIntoFirstAndLastName();\n\nconsole.log(name); \/\/ ['Ryan', 'McDermott'];\nGood:\nfunction splitIntoFirstAndLastName(name) {\n  return name.split(\" \");\n}\n\nconst name = \"Ryan McDermott\";\nconst newName = splitIntoFirstAndLastName(name);\n\nconsole.log(name); \/\/ 'Ryan McDermott';\nconsole.log(newName); \/\/ ['Ryan', 'McDermott'];\n\u2b06 back to top\nAvoid Side Effects (part 2)\nIn JavaScript, some values are unchangeable (immutable) and some are changeable\n(mutable). Objects and arrays are two kinds of mutable values so it's important\nto handle them carefully when they're passed as parameters to a function. A\nJavaScript function can change an object's properties or alter the contents of\nan array which could easily cause bugs elsewhere.\nSuppose there's a function that accepts an array parameter representing a\nshopping cart. If the function makes a change in that shopping cart array -\nby adding an item to purchase, for example - then any other function that\nuses that same cart array will be affected by this addition. That may be\ngreat, however it could also be bad. Let's imagine a bad situation:\nThe user clicks the \"Purchase\" button which calls a purchase function that\nspawns a network request and sends the cart array to the server. Because\nof a bad network connection, the purchase function has to keep retrying the\nrequest. Now, what if in the meantime the user accidentally clicks an \"Add to Cart\"\nbutton on an item they don't actually want before the network request begins?\nIf that happens and the network request begins, then that purchase function\nwill send the accidentally added item because the cart array was modified.\nA great solution would be for the addItemToCart function to always clone the\ncart, edit it, and return the clone. This would ensure that functions that are still\nusing the old shopping cart wouldn't be affected by the changes.\nTwo caveats to mention to this approach:\n\n\nThere might be cases where you actually want to modify the input object,\nbut when you adopt this programming practice you will find that those cases\nare pretty rare. Most things can be refactored to have no side effects!\n\n\nCloning big objects can be very expensive in terms of performance. Luckily,\nthis isn't a big issue in practice because there are\ngreat libraries that allow\nthis kind of programming approach to be fast and not as memory intensive as\nit would be for you to manually clone objects and arrays.\n\n\nBad:\nconst addItemToCart = (cart, item) => {\n  cart.push({ item, date: Date.now() });\n};\nGood:\nconst addItemToCart = (cart, item) => {\n  return [...cart, { item, date: Date.now() }];\n};\n\u2b06 back to top\nDon't write to global functions\nPolluting globals is a bad practice in JavaScript because you could clash with another\nlibrary and the user of your API would be none-the-wiser until they get an\nexception in production. Let's think about an example: what if you wanted to\nextend JavaScript's native Array method to have a diff method that could\nshow the difference between two arrays? You could write your new function\nto the Array.prototype, but it could clash with another library that tried\nto do the same thing. What if that other library was just using diff to find\nthe difference between the first and last elements of an array? This is why it\nwould be much better to just use ES2015\/ES6 classes and simply extend the Array global.\nBad:\nArray.prototype.diff = function diff(comparisonArray) {\n  const hash = new Set(comparisonArray);\n  return this.filter(elem => !hash.has(elem));\n};\nGood:\nclass SuperArray extends Array {\n  diff(comparisonArray) {\n    const hash = new Set(comparisonArray);\n    return this.filter(elem => !hash.has(elem));\n  }\n}\n\u2b06 back to top\nFavor functional programming over imperative programming\nJavaScript isn't a functional language in the way that Haskell is, but it has\na functional flavor to it. Functional languages can be cleaner and easier to test.\nFavor this style of programming when you can.\nBad:\nconst programmerOutput = [\n  {\n    name: \"Uncle Bobby\",\n    linesOfCode: 500\n  },\n  {\n    name: \"Suzie Q\",\n    linesOfCode: 1500\n  },\n  {\n    name: \"Jimmy Gosling\",\n    linesOfCode: 150\n  },\n  {\n    name: \"Gracie Hopper\",\n    linesOfCode: 1000\n  }\n];\n\nlet totalOutput = 0;\n\nfor (let i = 0; i < programmerOutput.length; i++) {\n  totalOutput += programmerOutput[i].linesOfCode;\n}\nGood:\nconst programmerOutput = [\n  {\n    name: \"Uncle Bobby\",\n    linesOfCode: 500\n  },\n  {\n    name: \"Suzie Q\",\n    linesOfCode: 1500\n  },\n  {\n    name: \"Jimmy Gosling\",\n    linesOfCode: 150\n  },\n  {\n    name: \"Gracie Hopper\",\n    linesOfCode: 1000\n  }\n];\n\nconst totalOutput = programmerOutput.reduce(\n  (totalLines, output) => totalLines + output.linesOfCode,\n  0\n);\n\u2b06 back to top\nEncapsulate conditionals\nBad:\nif (fsm.state === \"fetching\" && isEmpty(listNode)) {\n  \/\/ ...\n}\nGood:\nfunction shouldShowSpinner(fsm, listNode) {\n  return fsm.state === \"fetching\" && isEmpty(listNode);\n}\n\nif (shouldShowSpinner(fsmInstance, listNodeInstance)) {\n  \/\/ ...\n}\n\u2b06 back to top\nAvoid negative conditionals\nBad:\nfunction isDOMNodeNotPresent(node) {\n  \/\/ ...\n}\n\nif (!isDOMNodeNotPresent(node)) {\n  \/\/ ...\n}\nGood:\nfunction isDOMNodePresent(node) {\n  \/\/ ...\n}\n\nif (isDOMNodePresent(node)) {\n  \/\/ ...\n}\n\u2b06 back to top\nAvoid conditionals\nThis seems like an impossible task. Upon first hearing this, most people say,\n\"how am I supposed to do anything without an if statement?\" The answer is that\nyou can use polymorphism to achieve the same task in many cases. The second\nquestion is usually, \"well that's great but why would I want to do that?\" The\nanswer is a previous clean code concept we learned: a function should only do\none thing. When you have classes and functions that have if statements, you\nare telling your user that your function does more than one thing. Remember,\njust do one thing.\nBad:\nclass Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    switch (this.type) {\n      case \"777\":\n        return this.getMaxAltitude() - this.getPassengerCount();\n      case \"Air Force One\":\n        return this.getMaxAltitude();\n      case \"Cessna\":\n        return this.getMaxAltitude() - this.getFuelExpenditure();\n    }\n  }\n}\nGood:\nclass Airplane {\n  \/\/ ...\n}\n\nclass Boeing777 extends Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    return this.getMaxAltitude() - this.getPassengerCount();\n  }\n}\n\nclass AirForceOne extends Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    return this.getMaxAltitude();\n  }\n}\n\nclass Cessna extends Airplane {\n  \/\/ ...\n  getCruisingAltitude() {\n    return this.getMaxAltitude() - this.getFuelExpenditure();\n  }\n}\n\u2b06 back to top\nAvoid type-checking (part 1)\nJavaScript is untyped, which means your functions can take any type of argument.\nSometimes you are bitten by this freedom and it becomes tempting to do\ntype-checking in your functions. There are many ways to avoid having to do this.\nThe first thing to consider is consistent APIs.\nBad:\nfunction travelToTexas(vehicle) {\n  if (vehicle instanceof Bicycle) {\n    vehicle.pedal(this.currentLocation, new Location(\"texas\"));\n  } else if (vehicle instanceof Car) {\n    vehicle.drive(this.currentLocation, new Location(\"texas\"));\n  }\n}\nGood:\nfunction travelToTexas(vehicle) {\n  vehicle.move(this.currentLocation, new Location(\"texas\"));\n}\n\u2b06 back to top\nAvoid type-checking (part 2)\nIf you are working with basic primitive values like strings and integers,\nand you can't use polymorphism but you still feel the need to type-check,\nyou should consider using TypeScript. It is an excellent alternative to normal\nJavaScript, as it provides you with static typing on top of standard JavaScript\nsyntax. The problem with manually type-checking normal JavaScript is that\ndoing it well requires so much extra verbiage that the faux \"type-safety\" you get\ndoesn't make up for the lost readability. Keep your JavaScript clean, write\ngood tests, and have good code reviews. Otherwise, do all of that but with\nTypeScript (which, like I said, is a great alternative!).\nBad:\nfunction combine(val1, val2) {\n  if (\n    (typeof val1 === \"number\" && typeof val2 === \"number\") ||\n    (typeof val1 === \"string\" && typeof val2 === \"string\")\n  ) {\n    return val1 + val2;\n  }\n\n  throw new Error(\"Must be of type String or Number\");\n}\nGood:\nfunction combine(val1, val2) {\n  return val1 + val2;\n}\n\u2b06 back to top\nDon't over-optimize\nModern browsers do a lot of optimization under-the-hood at runtime. A lot of\ntimes, if you are optimizing then you are just wasting your time. There are good\nresources\nfor seeing where optimization is lacking. Target those in the meantime, until\nthey are fixed if they can be.\nBad:\n\/\/ On old browsers, each iteration with uncached `list.length` would be costly\n\/\/ because of `list.length` recomputation. In modern browsers, this is optimized.\nfor (let i = 0, len = list.length; i < len; i++) {\n  \/\/ ...\n}\nGood:\nfor (let i = 0; i < list.length; i++) {\n  \/\/ ...\n}\n\u2b06 back to top\nRemove dead code\nDead code is just as bad as duplicate code. There's no reason to keep it in\nyour codebase. If it's not being called, get rid of it! It will still be safe\nin your version history if you still need it.\nBad:\nfunction oldRequestModule(url) {\n  \/\/ ...\n}\n\nfunction newRequestModule(url) {\n  \/\/ ...\n}\n\nconst req = newRequestModule;\ninventoryTracker(\"apples\", req, \"www.inventory-awesome.io\");\nGood:\nfunction newRequestModule(url) {\n  \/\/ ...\n}\n\nconst req = newRequestModule;\ninventoryTracker(\"apples\", req, \"www.inventory-awesome.io\");\n\u2b06 back to top\nObjects and Data Structures\nUse getters and setters\nUsing getters and setters to access data on objects could be better than simply\nlooking for a property on an object. \"Why?\" you might ask. Well, here's an\nunorganized list of reasons why:\n\nWhen you want to do more beyond getting an object property, you don't have\nto look up and change every accessor in your codebase.\nMakes adding validation simple when doing a set.\nEncapsulates the internal representation.\nEasy to add logging and error handling when getting and setting.\nYou can lazy load your object's properties, let's say getting it from a\nserver.\n\nBad:\nfunction makeBankAccount() {\n  \/\/ ...\n\n  return {\n    balance: 0\n    \/\/ ...\n  };\n}\n\nconst account = makeBankAccount();\naccount.balance = 100;\nGood:\nfunction makeBankAccount() {\n  \/\/ this one is private\n  let balance = 0;\n\n  \/\/ a \"getter\", made public via the returned object below\n  function getBalance() {\n    return balance;\n  }\n\n  \/\/ a \"setter\", made public via the returned object below\n  function setBalance(amount) {\n    \/\/ ... validate before updating the balance\n    balance = amount;\n  }\n\n  return {\n    \/\/ ...\n    getBalance,\n    setBalance\n  };\n}\n\nconst account = makeBankAccount();\naccount.setBalance(100);\n\u2b06 back to top\nMake objects have private members\nThis can be accomplished through closures (for ES5 and below).\nBad:\nconst Employee = function(name) {\n  this.name = name;\n};\n\nEmployee.prototype.getName = function getName() {\n  return this.name;\n};\n\nconst employee = new Employee(\"John Doe\");\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: John Doe\ndelete employee.name;\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: undefined\nGood:\nfunction makeEmployee(name) {\n  return {\n    getName() {\n      return name;\n    }\n  };\n}\n\nconst employee = makeEmployee(\"John Doe\");\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: John Doe\ndelete employee.name;\nconsole.log(`Employee name: ${employee.getName()}`); \/\/ Employee name: John Doe\n\u2b06 back to top\nClasses\nPrefer ES2015\/ES6 classes over ES5 plain functions\nIt's very difficult to get readable class inheritance, construction, and method\ndefinitions for classical ES5 classes. If you need inheritance (and be aware\nthat you might not), then prefer ES2015\/ES6 classes. However, prefer small functions over\nclasses until you find yourself needing larger and more complex objects.\nBad:\nconst Animal = function(age) {\n  if (!(this instanceof Animal)) {\n    throw new Error(\"Instantiate Animal with `new`\");\n  }\n\n  this.age = age;\n};\n\nAnimal.prototype.move = function move() {};\n\nconst Mammal = function(age, furColor) {\n  if (!(this instanceof Mammal)) {\n    throw new Error(\"Instantiate Mammal with `new`\");\n  }\n\n  Animal.call(this, age);\n  this.furColor = furColor;\n};\n\nMammal.prototype = Object.create(Animal.prototype);\nMammal.prototype.constructor = Mammal;\nMammal.prototype.liveBirth = function liveBirth() {};\n\nconst Human = function(age, furColor, languageSpoken) {\n  if (!(this instanceof Human)) {\n    throw new Error(\"Instantiate Human with `new`\");\n  }\n\n  Mammal.call(this, age, furColor);\n  this.languageSpoken = languageSpoken;\n};\n\nHuman.prototype = Object.create(Mammal.prototype);\nHuman.prototype.constructor = Human;\nHuman.prototype.speak = function speak() {};\nGood:\nclass Animal {\n  constructor(age) {\n    this.age = age;\n  }\n\n  move() {\n    \/* ... *\/\n  }\n}\n\nclass Mammal extends Animal {\n  constructor(age, furColor) {\n    super(age);\n    this.furColor = furColor;\n  }\n\n  liveBirth() {\n    \/* ... *\/\n  }\n}\n\nclass Human extends Mammal {\n  constructor(age, furColor, languageSpoken) {\n    super(age, furColor);\n    this.languageSpoken = languageSpoken;\n  }\n\n  speak() {\n    \/* ... *\/\n  }\n}\n\u2b06 back to top\nUse method chaining\nThis pattern is very useful in JavaScript and you see it in many libraries such\nas jQuery and Lodash. It allows your code to be expressive, and less verbose.\nFor that reason, I say, use method chaining and take a look at how clean your code\nwill be. In your class functions, simply return this at the end of every function,\nand you can chain further class methods onto it.\nBad:\nclass Car {\n  constructor(make, model, color) {\n    this.make = make;\n    this.model = model;\n    this.color = color;\n  }\n\n  setMake(make) {\n    this.make = make;\n  }\n\n  setModel(model) {\n    this.model = model;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  save() {\n    console.log(this.make, this.model, this.color);\n  }\n}\n\nconst car = new Car(\"Ford\", \"F-150\", \"red\");\ncar.setColor(\"pink\");\ncar.save();\nGood:\nclass Car {\n  constructor(make, model, color) {\n    this.make = make;\n    this.model = model;\n    this.color = color;\n  }\n\n  setMake(make) {\n    this.make = make;\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n\n  setModel(model) {\n    this.model = model;\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n\n  setColor(color) {\n    this.color = color;\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n\n  save() {\n    console.log(this.make, this.model, this.color);\n    \/\/ NOTE: Returning this for chaining\n    return this;\n  }\n}\n\nconst car = new Car(\"Ford\", \"F-150\", \"red\").setColor(\"pink\").save();\n\u2b06 back to top\nPrefer composition over inheritance\nAs stated famously in Design Patterns by the Gang of Four,\nyou should prefer composition over inheritance where you can. There are lots of\ngood reasons to use inheritance and lots of good reasons to use composition.\nThe main point for this maxim is that if your mind instinctively goes for\ninheritance, try to think if composition could model your problem better. In some\ncases it can.\nYou might be wondering then, \"when should I use inheritance?\" It\ndepends on your problem at hand, but this is a decent list of when inheritance\nmakes more sense than composition:\n\nYour inheritance represents an \"is-a\" relationship and not a \"has-a\"\nrelationship (Human->Animal vs. User->UserDetails).\nYou can reuse code from the base classes (Humans can move like all animals).\nYou want to make global changes to derived classes by changing a base class.\n(Change the caloric expenditure of all animals when they move).\n\nBad:\nclass Employee {\n  constructor(name, email) {\n    this.name = name;\n    this.email = email;\n  }\n\n  \/\/ ...\n}\n\n\/\/ Bad because Employees \"have\" tax data. EmployeeTaxData is not a type of Employee\nclass EmployeeTaxData extends Employee {\n  constructor(ssn, salary) {\n    super();\n    this.ssn = ssn;\n    this.salary = salary;\n  }\n\n  \/\/ ...\n}\nGood:\nclass EmployeeTaxData {\n  constructor(ssn, salary) {\n    this.ssn = ssn;\n    this.salary = salary;\n  }\n\n  \/\/ ...\n}\n\nclass Employee {\n  constructor(name, email) {\n    this.name = name;\n    this.email = email;\n  }\n\n  setTaxData(ssn, salary) {\n    this.taxData = new EmployeeTaxData(ssn, salary);\n  }\n  \/\/ ...\n}\n\u2b06 back to top\nSOLID\nSingle Responsibility Principle (SRP)\nAs stated in Clean Code, \"There should never be more than one reason for a class\nto change\". It's tempting to jam-pack a class with a lot of functionality, like\nwhen you can only take one suitcase on your flight. The issue with this is\nthat your class won't be conceptually cohesive and it will give it many reasons\nto change. Minimizing the amount of times you need to change a class is important.\nIt's important because if too much functionality is in one class and you modify\na piece of it, it can be difficult to understand how that will affect other\ndependent modules in your codebase.\nBad:\nclass UserSettings {\n  constructor(user) {\n    this.user = user;\n  }\n\n  changeSettings(settings) {\n    if (this.verifyCredentials()) {\n      \/\/ ...\n    }\n  }\n\n  verifyCredentials() {\n    \/\/ ...\n  }\n}\nGood:\nclass UserAuth {\n  constructor(user) {\n    this.user = user;\n  }\n\n  verifyCredentials() {\n    \/\/ ...\n  }\n}\n\nclass UserSettings {\n  constructor(user) {\n    this.user = user;\n    this.auth = new UserAuth(user);\n  }\n\n  changeSettings(settings) {\n    if (this.auth.verifyCredentials()) {\n      \/\/ ...\n    }\n  }\n}\n\u2b06 back to top\nOpen\/Closed Principle (OCP)\nAs stated by Bertrand Meyer, \"software entities (classes, modules, functions,\netc.) should be open for extension, but closed for modification.\" What does that\nmean though? This principle basically states that you should allow users to\nadd new functionalities without changing existing code.\nBad:\nclass AjaxAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"ajaxAdapter\";\n  }\n}\n\nclass NodeAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"nodeAdapter\";\n  }\n}\n\nclass HttpRequester {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  fetch(url) {\n    if (this.adapter.name === \"ajaxAdapter\") {\n      return makeAjaxCall(url).then(response => {\n        \/\/ transform response and return\n      });\n    } else if (this.adapter.name === \"nodeAdapter\") {\n      return makeHttpCall(url).then(response => {\n        \/\/ transform response and return\n      });\n    }\n  }\n}\n\nfunction makeAjaxCall(url) {\n  \/\/ request and return promise\n}\n\nfunction makeHttpCall(url) {\n  \/\/ request and return promise\n}\nGood:\nclass AjaxAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"ajaxAdapter\";\n  }\n\n  request(url) {\n    \/\/ request and return promise\n  }\n}\n\nclass NodeAdapter extends Adapter {\n  constructor() {\n    super();\n    this.name = \"nodeAdapter\";\n  }\n\n  request(url) {\n    \/\/ request and return promise\n  }\n}\n\nclass HttpRequester {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  fetch(url) {\n    return this.adapter.request(url).then(response => {\n      \/\/ transform response and return\n    });\n  }\n}\n\u2b06 back to top\nLiskov Substitution Principle (LSP)\nThis is a scary term for a very simple concept. It's formally defined as \"If S\nis a subtype of T, then objects of type T may be replaced with objects of type S\n(i.e., objects of type S may substitute objects of type T) without altering any\nof the desirable properties of that program (correctness, task performed,\netc.).\" That's an even scarier definition.\nThe best explanation for this is if you have a parent class and a child class,\nthen the base class and child class can be used interchangeably without getting\nincorrect results. This might still be confusing, so let's take a look at the\nclassic Square-Rectangle example. Mathematically, a square is a rectangle, but\nif you model it using the \"is-a\" relationship via inheritance, you quickly\nget into trouble.\nBad:\nclass Rectangle {\n  constructor() {\n    this.width = 0;\n    this.height = 0;\n  }\n\n  setColor(color) {\n    \/\/ ...\n  }\n\n  render(area) {\n    \/\/ ...\n  }\n\n  setWidth(width) {\n    this.width = width;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n\nclass Square extends Rectangle {\n  setWidth(width) {\n    this.width = width;\n    this.height = width;\n  }\n\n  setHeight(height) {\n    this.width = height;\n    this.height = height;\n  }\n}\n\nfunction renderLargeRectangles(rectangles) {\n  rectangles.forEach(rectangle => {\n    rectangle.setWidth(4);\n    rectangle.setHeight(5);\n    const area = rectangle.getArea(); \/\/ BAD: Returns 25 for Square. Should be 20.\n    rectangle.render(area);\n  });\n}\n\nconst rectangles = [new Rectangle(), new Rectangle(), new Square()];\nrenderLargeRectangles(rectangles);\nGood:\nclass Shape {\n  setColor(color) {\n    \/\/ ...\n  }\n\n  render(area) {\n    \/\/ ...\n  }\n}\n\nclass Rectangle extends Shape {\n  constructor(width, height) {\n    super();\n    this.width = width;\n    this.height = height;\n  }\n\n  getArea() {\n    return this.width * this.height;\n  }\n}\n\nclass Square extends Shape {\n  constructor(length) {\n    super();\n    this.length = length;\n  }\n\n  getArea() {\n    return this.length * this.length;\n  }\n}\n\nfunction renderLargeShapes(shapes) {\n  shapes.forEach(shape => {\n    const area = shape.getArea();\n    shape.render(area);\n  });\n}\n\nconst shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];\nrenderLargeShapes(shapes);\n\u2b06 back to top\nInterface Segregation Principle (ISP)\nJavaScript doesn't have interfaces so this principle doesn't apply as strictly\nas others. However, it's important and relevant even with JavaScript's lack of\ntype system.\nISP states that \"Clients should not be forced to depend upon interfaces that\nthey do not use.\" Interfaces are implicit contracts in JavaScript because of\nduck typing.\nA good example to look at that demonstrates this principle in JavaScript is for\nclasses that require large settings objects. Not requiring clients to setup\nhuge amounts of options is beneficial, because most of the time they won't need\nall of the settings. Making them optional helps prevent having a\n\"fat interface\".\nBad:\nclass DOMTraverser {\n  constructor(settings) {\n    this.settings = settings;\n    this.setup();\n  }\n\n  setup() {\n    this.rootNode = this.settings.rootNode;\n    this.settings.animationModule.setup();\n  }\n\n  traverse() {\n    \/\/ ...\n  }\n}\n\nconst $ = new DOMTraverser({\n  rootNode: document.getElementsByTagName(\"body\"),\n  animationModule() {} \/\/ Most of the time, we won't need to animate when traversing.\n  \/\/ ...\n});\nGood:\nclass DOMTraverser {\n  constructor(settings) {\n    this.settings = settings;\n    this.options = settings.options;\n    this.setup();\n  }\n\n  setup() {\n    this.rootNode = this.settings.rootNode;\n    this.setupOptions();\n  }\n\n  setupOptions() {\n    if (this.options.animationModule) {\n      \/\/ ...\n    }\n  }\n\n  traverse() {\n    \/\/ ...\n  }\n}\n\nconst $ = new DOMTraverser({\n  rootNode: document.getElementsByTagName(\"body\"),\n  options: {\n    animationModule() {}\n  }\n});\n\u2b06 back to top\nDependency Inversion Principle (DIP)\nThis principle states two essential things:\n\nHigh-level modules should not depend on low-level modules. Both should\ndepend on abstractions.\nAbstractions should not depend upon details. Details should depend on\nabstractions.\n\nThis can be hard to understand at first, but if you've worked with AngularJS,\nyou've seen an implementation of this principle in the form of Dependency\nInjection (DI). While they are not identical concepts, DIP keeps high-level\nmodules from knowing the details of its low-level modules and setting them up.\nIt can accomplish this through DI. A huge benefit of this is that it reduces\nthe coupling between modules. Coupling is a very bad development pattern because\nit makes your code hard to refactor.\nAs stated previously, JavaScript doesn't have interfaces so the abstractions\nthat are depended upon are implicit contracts. That is to say, the methods\nand properties that an object\/class exposes to another object\/class. In the\nexample below, the implicit contract is that any Request module for an\nInventoryTracker will have a requestItems method.\nBad:\nclass InventoryRequester {\n  constructor() {\n    this.REQ_METHODS = [\"HTTP\"];\n  }\n\n  requestItem(item) {\n    \/\/ ...\n  }\n}\n\nclass InventoryTracker {\n  constructor(items) {\n    this.items = items;\n\n    \/\/ BAD: We have created a dependency on a specific request implementation.\n    \/\/ We should just have requestItems depend on a request method: `request`\n    this.requester = new InventoryRequester();\n  }\n\n  requestItems() {\n    this.items.forEach(item => {\n      this.requester.requestItem(item);\n    });\n  }\n}\n\nconst inventoryTracker = new InventoryTracker([\"apples\", \"bananas\"]);\ninventoryTracker.requestItems();\nGood:\nclass InventoryTracker {\n  constructor(items, requester) {\n    this.items = items;\n    this.requester = requester;\n  }\n\n  requestItems() {\n    this.items.forEach(item => {\n      this.requester.requestItem(item);\n    });\n  }\n}\n\nclass InventoryRequesterV1 {\n  constructor() {\n    this.REQ_METHODS = [\"HTTP\"];\n  }\n\n  requestItem(item) {\n    \/\/ ...\n  }\n}\n\nclass InventoryRequesterV2 {\n  constructor() {\n    this.REQ_METHODS = [\"WS\"];\n  }\n\n  requestItem(item) {\n    \/\/ ...\n  }\n}\n\n\/\/ By constructing our dependencies externally and injecting them, we can easily\n\/\/ substitute our request module for a fancy new one that uses WebSockets.\nconst inventoryTracker = new InventoryTracker(\n  [\"apples\", \"bananas\"],\n  new InventoryRequesterV2()\n);\ninventoryTracker.requestItems();\n\u2b06 back to top\nTesting\nTesting is more important than shipping. If you have no tests or an\ninadequate amount, then every time you ship code you won't be sure that you\ndidn't break anything. Deciding on what constitutes an adequate amount is up\nto your team, but having 100% coverage (all statements and branches) is how\nyou achieve very high confidence and developer peace of mind. This means that\nin addition to having a great testing framework, you also need to use a\ngood coverage tool.\nThere's no excuse to not write tests. There are plenty of good JS test frameworks, so find one that your team prefers.\nWhen you find one that works for your team, then aim to always write tests\nfor every new feature\/module you introduce. If your preferred method is\nTest Driven Development (TDD), that is great, but the main point is to just\nmake sure you are reaching your coverage goals before launching any feature,\nor refactoring an existing one.\nSingle concept per test\nBad:\nimport assert from \"assert\";\n\ndescribe(\"MomentJS\", () => {\n  it(\"handles date boundaries\", () => {\n    let date;\n\n    date = new MomentJS(\"1\/1\/2015\");\n    date.addDays(30);\n    assert.equal(\"1\/31\/2015\", date);\n\n    date = new MomentJS(\"2\/1\/2016\");\n    date.addDays(28);\n    assert.equal(\"02\/29\/2016\", date);\n\n    date = new MomentJS(\"2\/1\/2015\");\n    date.addDays(28);\n    assert.equal(\"03\/01\/2015\", date);\n  });\n});\nGood:\nimport assert from \"assert\";\n\ndescribe(\"MomentJS\", () => {\n  it(\"handles 30-day months\", () => {\n    const date = new MomentJS(\"1\/1\/2015\");\n    date.addDays(30);\n    assert.equal(\"1\/31\/2015\", date);\n  });\n\n  it(\"handles leap year\", () => {\n    const date = new MomentJS(\"2\/1\/2016\");\n    date.addDays(28);\n    assert.equal(\"02\/29\/2016\", date);\n  });\n\n  it(\"handles non-leap year\", () => {\n    const date = new MomentJS(\"2\/1\/2015\");\n    date.addDays(28);\n    assert.equal(\"03\/01\/2015\", date);\n  });\n});\n\u2b06 back to top\nConcurrency\nUse Promises, not callbacks\nCallbacks aren't clean, and they cause excessive amounts of nesting. With ES2015\/ES6,\nPromises are a built-in global type. Use them!\nBad:\nimport { get } from \"request\";\nimport { writeFile } from \"fs\";\n\nget(\n  \"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\",\n  (requestErr, response, body) => {\n    if (requestErr) {\n      console.error(requestErr);\n    } else {\n      writeFile(\"article.html\", body, writeErr => {\n        if (writeErr) {\n          console.error(writeErr);\n        } else {\n          console.log(\"File written\");\n        }\n      });\n    }\n  }\n);\nGood:\nimport { get } from \"request-promise\";\nimport { writeFile } from \"fs-extra\";\n\nget(\"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\")\n  .then(body => {\n    return writeFile(\"article.html\", body);\n  })\n  .then(() => {\n    console.log(\"File written\");\n  })\n  .catch(err => {\n    console.error(err);\n  });\n\u2b06 back to top\nAsync\/Await are even cleaner than Promises\nPromises are a very clean alternative to callbacks, but ES2017\/ES8 brings async and await\nwhich offer an even cleaner solution. All you need is a function that is prefixed\nin an async keyword, and then you can write your logic imperatively without\na then chain of functions. Use this if you can take advantage of ES2017\/ES8 features\ntoday!\nBad:\nimport { get } from \"request-promise\";\nimport { writeFile } from \"fs-extra\";\n\nget(\"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\")\n  .then(body => {\n    return writeFile(\"article.html\", body);\n  })\n  .then(() => {\n    console.log(\"File written\");\n  })\n  .catch(err => {\n    console.error(err);\n  });\nGood:\nimport { get } from \"request-promise\";\nimport { writeFile } from \"fs-extra\";\n\nasync function getCleanCodeArticle() {\n  try {\n    const body = await get(\n      \"https:\/\/en.wikipedia.org\/wiki\/Robert_Cecil_Martin\"\n    );\n    await writeFile(\"article.html\", body);\n    console.log(\"File written\");\n  } catch (err) {\n    console.error(err);\n  }\n}\n\ngetCleanCodeArticle()\n\u2b06 back to top\nError Handling\nThrown errors are a good thing! They mean the runtime has successfully\nidentified when something in your program has gone wrong and it's letting\nyou know by stopping function execution on the current stack, killing the\nprocess (in Node), and notifying you in the console with a stack trace.\nDon't ignore caught errors\nDoing nothing with a caught error doesn't give you the ability to ever fix\nor react to said error. Logging the error to the console (console.log)\nisn't much better as often times it can get lost in a sea of things printed\nto the console. If you wrap any bit of code in a try\/catch it means you\nthink an error may occur there and therefore you should have a plan,\nor create a code path, for when it occurs.\nBad:\ntry {\n  functionThatMightThrow();\n} catch (error) {\n  console.log(error);\n}\nGood:\ntry {\n  functionThatMightThrow();\n} catch (error) {\n  \/\/ One option (more noisy than console.log):\n  console.error(error);\n  \/\/ Another option:\n  notifyUserOfError(error);\n  \/\/ Another option:\n  reportErrorToService(error);\n  \/\/ OR do all three!\n}\nDon't ignore rejected promises\nFor the same reason you shouldn't ignore caught errors\nfrom try\/catch.\nBad:\ngetdata()\n  .then(data => {\n    functionThatMightThrow(data);\n  })\n  .catch(error => {\n    console.log(error);\n  });\nGood:\ngetdata()\n  .then(data => {\n    functionThatMightThrow(data);\n  })\n  .catch(error => {\n    \/\/ One option (more noisy than console.log):\n    console.error(error);\n    \/\/ Another option:\n    notifyUserOfError(error);\n    \/\/ Another option:\n    reportErrorToService(error);\n    \/\/ OR do all three!\n  });\n\u2b06 back to top\nFormatting\nFormatting is subjective. Like many rules herein, there is no hard and fast\nrule that you must follow. The main point is DO NOT ARGUE over formatting.\nThere are tons of tools to automate this.\nUse one! It's a waste of time and money for engineers to argue over formatting.\nFor things that don't fall under the purview of automatic formatting\n(indentation, tabs vs. spaces, double vs. single quotes, etc.) look here\nfor some guidance.\nUse consistent capitalization\nJavaScript is untyped, so capitalization tells you a lot about your variables,\nfunctions, etc. These rules are subjective, so your team can choose whatever\nthey want. The point is, no matter what you all choose, just be consistent.\nBad:\nconst DAYS_IN_WEEK = 7;\nconst daysInMonth = 30;\n\nconst songs = [\"Back In Black\", \"Stairway to Heaven\", \"Hey Jude\"];\nconst Artists = [\"ACDC\", \"Led Zeppelin\", \"The Beatles\"];\n\nfunction eraseDatabase() {}\nfunction restore_database() {}\n\nclass animal {}\nclass Alpaca {}\nGood:\nconst DAYS_IN_WEEK = 7;\nconst DAYS_IN_MONTH = 30;\n\nconst SONGS = [\"Back In Black\", \"Stairway to Heaven\", \"Hey Jude\"];\nconst ARTISTS = [\"ACDC\", \"Led Zeppelin\", \"The Beatles\"];\n\nfunction eraseDatabase() {}\nfunction restoreDatabase() {}\n\nclass Animal {}\nclass Alpaca {}\n\u2b06 back to top\nFunction callers and callees should be close\nIf a function calls another, keep those functions vertically close in the source\nfile. Ideally, keep the caller right above the callee. We tend to read code from\ntop-to-bottom, like a newspaper. Because of this, make your code read that way.\nBad:\nclass PerformanceReview {\n  constructor(employee) {\n    this.employee = employee;\n  }\n\n  lookupPeers() {\n    return db.lookup(this.employee, \"peers\");\n  }\n\n  lookupManager() {\n    return db.lookup(this.employee, \"manager\");\n  }\n\n  getPeerReviews() {\n    const peers = this.lookupPeers();\n    \/\/ ...\n  }\n\n  perfReview() {\n    this.getPeerReviews();\n    this.getManagerReview();\n    this.getSelfReview();\n  }\n\n  getManagerReview() {\n    const manager = this.lookupManager();\n  }\n\n  getSelfReview() {\n    \/\/ ...\n  }\n}\n\nconst review = new PerformanceReview(employee);\nreview.perfReview();\nGood:\nclass PerformanceReview {\n  constructor(employee) {\n    this.employee = employee;\n  }\n\n  perfReview() {\n    this.getPeerReviews();\n    this.getManagerReview();\n    this.getSelfReview();\n  }\n\n  getPeerReviews() {\n    const peers = this.lookupPeers();\n    \/\/ ...\n  }\n\n  lookupPeers() {\n    return db.lookup(this.employee, \"peers\");\n  }\n\n  getManagerReview() {\n    const manager = this.lookupManager();\n  }\n\n  lookupManager() {\n    return db.lookup(this.employee, \"manager\");\n  }\n\n  getSelfReview() {\n    \/\/ ...\n  }\n}\n\nconst review = new PerformanceReview(employee);\nreview.perfReview();\n\u2b06 back to top\nComments\nOnly comment things that have business logic complexity.\nComments are an apology, not a requirement. Good code mostly documents itself.\nBad:\nfunction hashIt(data) {\n  \/\/ The hash\n  let hash = 0;\n\n  \/\/ Length of string\n  const length = data.length;\n\n  \/\/ Loop through every character in data\n  for (let i = 0; i < length; i++) {\n    \/\/ Get character code.\n    const char = data.charCodeAt(i);\n    \/\/ Make the hash\n    hash = (hash << 5) - hash + char;\n    \/\/ Convert to 32-bit integer\n    hash &= hash;\n  }\n}\nGood:\nfunction hashIt(data) {\n  let hash = 0;\n  const length = data.length;\n\n  for (let i = 0; i < length; i++) {\n    const char = data.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n\n    \/\/ Convert to 32-bit integer\n    hash &= hash;\n  }\n}\n\u2b06 back to top\nDon't leave commented out code in your codebase\nVersion control exists for a reason. Leave old code in your history.\nBad:\ndoStuff();\n\/\/ doOtherStuff();\n\/\/ doSomeMoreStuff();\n\/\/ doSoMuchStuff();\nGood:\ndoStuff();\n\u2b06 back to top\nDon't have journal comments\nRemember, use version control! There's no need for dead code, commented code,\nand especially journal comments. Use git log to get history!\nBad:\n\/**\n * 2016-12-20: Removed monads, didn't understand them (RM)\n * 2016-10-01: Improved using special monads (JP)\n * 2016-02-03: Removed type-checking (LI)\n * 2015-03-14: Added combine with type-checking (JR)\n *\/\nfunction combine(a, b) {\n  return a + b;\n}\nGood:\nfunction combine(a, b) {\n  return a + b;\n}\n\u2b06 back to top\nAvoid positional markers\nThey usually just add noise. Let the functions and variable names along with the\nproper indentation and formatting give the visual structure to your code.\nBad:\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ Scope Model Instantiation\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n$scope.model = {\n  menu: \"foo\",\n  nav: \"bar\"\n};\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ Action setup\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nconst actions = function() {\n  \/\/ ...\n};\nGood:\n$scope.model = {\n  menu: \"foo\",\n  nav: \"bar\"\n};\n\nconst actions = function() {\n  \/\/ ...\n};\n\u2b06 back to top\nTranslation\nThis is also available in other languages:\n\n Armenian: hanumanum\/clean-code-javascript\/\n Bangla(\u09ac\u09be\u0982\u09b2\u09be): InsomniacSabbir\/clean-code-javascript\/\n Brazilian Portuguese: fesnt\/clean-code-javascript\n Simplified Chinese:\n\nalivebao\/clean-code-js\nbeginor\/clean-code-javascript\n\n\n Traditional Chinese: AllJointTW\/clean-code-javascript\n French: GavBaros\/clean-code-javascript-fr\n German: marcbruederlin\/clean-code-javascript\n Indonesia: andirkh\/clean-code-javascript\/\n Italian: frappacchio\/clean-code-javascript\/\n Japanese: mitsuruog\/clean-code-javascript\/\n Korean: qkraudghgh\/clean-code-javascript-ko\n Polish: greg-dev\/clean-code-javascript-pl\n Russian:\n\nBoryaMogila\/clean-code-javascript-ru\/\nmaksugr\/clean-code-javascript\n\n\n Spanish: tureey\/clean-code-javascript\n Spanish: andersontr15\/clean-code-javascript\n Turkish: bsonmez\/clean-code-javascript\n Ukrainian: mindfr1k\/clean-code-javascript-ua\n Vietnamese: hienvd\/clean-code-javascript\/\n\n\u2b06 back to top\n","39":"\u7981\u6b62\u8f6c\u8f7d\uff0c\u7981\u6b62\u8f6c\u8f7d\uff0c\u7981\u6b62\u8f6c\u8f7d\uff01\nGitHub\u4e0a\u975e\u6700\u65b0\u5185\u5bb9\uff0c\u6700\u65b0\u5185\u5bb9\u8bf7\u671f\u5f85\u65b0\u4e66\u3002\n\n\u5b66\u4e60\u4ea4\u6d41\u7fa4\n\n\n    \u5b66\u4e60\u4ea4\u6d41\u7fa4\n\n\u7406\u89e3CNN\u3001CNN\u53ef\u89c6\u5316  CNN-Visualization\nhttps:\/\/github.com\/scutan90\/CNN-Visualization\n\u6df1\u5ea6\u5b66\u4e60\u4e73\u817a\u764c\u8bc6\u522b\u4e0e\u8bca\u65ad\nhttps:\/\/github.com\/scutan90\/Breast-imaging-Deeplearning\n\u82f1\u6587\u7248\u672c\nEnglish version\n1. \u7248\u6743\u58f0\u660e\n\u8bf7\u5c0a\u91cd\u4f5c\u8005\u7684\u77e5\u8bc6\u4ea7\u6743\uff0c\u7248\u6743\u6240\u6709\uff0c\u7ffb\u7248\u5fc5\u7a76\u3002   \u672a\u7ecf\u8bb8\u53ef\uff0c\u4e25\u7981\u8f6c\u53d1\u5185\u5bb9\uff01\n\u8bf7\u5927\u5bb6\u4e00\u8d77\u7ef4\u62a4\u81ea\u5df1\u7684\u52b3\u52a8\u6210\u679c\uff0c\u8fdb\u884c\u76d1\u7763\u3002  \u672a\u7ecf\u8bb8\u53ef\uff0c \u4e25\u7981\u8f6c\u53d1\u5185\u5bb9\uff01 \u3000\u3000\u3000\n2018.6.27 TanJiyong\n2. \u6982\u8ff0\n\u672c\u9879\u76ee\u662f\u5927\u5bb6\u5bf9AI\u7684\u76f8\u5173\u77e5\u8bc6\u8fdb\u884c\u6574\u5408\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u4ee5\u4fbf\u5f62\u6210 \u5185\u5bb9\u5145\u5b9e\uff0c\u8986\u76d6\u5168\u9762\u7684\u6587\u96c6\u3002\n3. \u52a0\u5165\u4ee5\u53ca\u6587\u6863\u89c4\u8303\n1\u3001\u5bfb\u6c42\u6709\u613f\u610f\u7ee7\u7eed\u5b8c\u5584\u7684\u670b\u53cb\u3001\u7f16\u8f91\u3001\u5199\u624b\uff1b\u5982\u6709\u610f\u5408\u4f5c\uff0c\u5b8c\u5584\u51fa\u4e66\uff08\u6210\u4e3a\u5171\u540c\u4f5c\u8005\uff09\u3002\n2\u3001\u6240\u6709\u63d0\u4ea4\u5185\u5bb9\u7684\u8d21\u732e\u8005\uff0c\u5c06\u4f1a\u5728\u6587\u4e2d\u4f53\u73b0\u8d21\u732e\u8005\u4e2a\u4eba\u4fe1\u606f\uff08\u4f8b\uff1a\u5927\u4f6c-\u897f\u6e56\u5927\u5b66\uff09\n3\u3001\u4e3a\u4e86\u8ba9\u5185\u5bb9\u66f4\u5145\u5b9e\u5b8c\u5584\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u6b22\u8fceFork\u8be5\u9879\u76ee\u5e76\u53c2\u4e0e\u7f16\u5199\u3002\u8bf7\u5728\u4fee\u6539MD\u6587\u4ef6\u7684\u540c\u65f6\uff08\u6216\u76f4\u63a5\u7559\u8a00\uff09\u5907\u6ce8\u81ea\u5df1\u7684\u59d3\u540d\uff0d\u5355\u4f4d\uff08\u5927\u4f6c\uff0d\u65af\u5766\u798f\u5927\u5b66\uff09\uff0c\u4e00\u7ecf\u91c7\u7eb3\uff0c\u4f1a\u5728\u539f\u6587\u4e2d\u663e\u793a\u8d21\u732e\u8005\u7684\u4fe1\u606f\uff0c\u8c22\u8c22\uff01\n4\u3001\u63a8\u8350\u4f7f\u7528typora-Markdown\u9605\u8bfb\u5668\uff1ahttps:\/\/typora.io\/\n\u8bbe\u7f6e\uff1a\n\u6587\u4ef6->\u504f\u597d\u8bbe\u7f6e\n\nMarkdown\u6269\u5c55\u8bed\u6cd5\n\n\u5185\u8054\u516c\u5f0f\n\u4e0b\u6807\n\u4e0a\u6807\n\u9ad8\u4eae\n\u56fe\u8868\n\n\n\n\u90fd\u6253\u52fe\n\n\u6570\u5b66\u516c\u5f0f\n\n\u81ea\u52a8\u6dfb\u52a0\u5e8f\u53f7\n\n\n\n\u90fd\u6253\u52fe\n\u4f8b\u5b50\uff1a\n### 3.3.2 \u5982\u4f55\u5bfb\u627e\u8d85\u53c2\u6570\u7684\u6700\u4f18\u503c\uff1f\uff08\u8d21\u732e\u8005\uff1a\u5927\u4f6c\uff0d\u65af\u5766\u798f\u5927\u5b66\uff09\n\n\u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u603b\u6709\u4e00\u4e9b\u96be\u641e\u7684\u8d85\u53c2\u6570\u3002\u4f8b\u5982\u6743\u91cd\u8870\u51cf\u5927\u5c0f\uff0c\u9ad8\u65af\u6838\u5bbd\u5ea6\u7b49\u7b49\u3002\u7b97\u6cd5\u4e0d\u4f1a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff0c\u800c\u662f\u9700\u8981\u4f60\u53bb\u8bbe\u7f6e\u5b83\u4eec\u7684\u503c\u3002\u8bbe\u7f6e\u7684\u503c\u5bf9\u7ed3\u679c\u4ea7\u751f\u8f83\u5927\u5f71\u54cd\u3002\u5e38\u89c1\u8bbe\u7f6e\u8d85\u53c2\u6570\u7684\u505a\u6cd5\u6709\uff1a\n\n1. \u731c\u6d4b\u548c\u68c0\u67e5\uff1a\u6839\u636e\u7ecf\u9a8c\u6216\u76f4\u89c9\uff0c\u9009\u62e9\u53c2\u6570\uff0c\u4e00\u76f4\u8fed\u4ee3\u3002\n2. \u7f51\u683c\u641c\u7d22\uff1a\u8ba9\u8ba1\u7b97\u673a\u5c1d\u8bd5\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u5747\u5300\u5206\u5e03\u7684\u4e00\u7ec4\u503c\u3002\n3. \u968f\u673a\u641c\u7d22\uff1a\u8ba9\u8ba1\u7b97\u673a\u968f\u673a\u6311\u9009\u4e00\u7ec4\u503c\u3002\n4. \u8d1d\u53f6\u65af\u4f18\u5316\uff1a\u4f7f\u7528\u8d1d\u53f6\u65af\u4f18\u5316\u8d85\u53c2\u6570\uff0c\u4f1a\u9047\u5230\u8d1d\u53f6\u65af\u4f18\u5316\u7b97\u6cd5\u672c\u8eab\u5c31\u9700\u8981\u5f88\u591a\u7684\u53c2\u6570\u7684\u56f0\u96be\u3002\n5. \u5728\u826f\u597d\u521d\u59cb\u731c\u6d4b\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\u5c40\u90e8\u4f18\u5316\uff1a\u8fd9\u5c31\u662f MITIE \u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528 BOBYQA \u7b97\u6cd5\uff0c\u5e76\u6709\u4e00\u4e2a\u7cbe\u5fc3\u9009\u62e9\u7684\u8d77\u59cb\u70b9\u3002\u7531\u4e8e BOBYQA \u53ea\u5bfb\u627e\u6700\u8fd1\u7684\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u6210\u529f\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u662f\u5426\u6709\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\u3002\u5728 MITIE \u7684\u60c5\u4e0b,\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u666e\u904d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u901a\u5e38\u4f60\u4e0d\u4f1a\u77e5\u9053\u597d\u7684\u8d77\u70b9\u5728\u54ea\u91cc\u3002\u4ece\u597d\u7684\u65b9\u9762\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9002\u5408\u5bfb\u627e\u5c40\u90e8\u6700\u4f18\u89e3\u3002\u7a0d\u540e\u6211\u4f1a\u518d\u8ba8\u8bba\u8fd9\u4e00\u70b9\u3002\n6. \u6700\u65b0\u63d0\u51fa\u7684 LIPO \u7684\u5168\u5c40\u4f18\u5316\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff0c\u800c\u4e14\u7ecf\u9a8c\u8bc1\u6bd4\u968f\u673a\u641c\u7d22\u65b9\u6cd5\u597d\u3002\n4. \u8d21\u732e\u4e0e\u9879\u76ee\u6982\u89c8\n\u5df2\u63d0\u4ea4MD\u7248\u672c\u7ae0\u8282\uff1a\u8bf7\u67e5\u770bMarkDown\n5. \u66f4\u591a\n\n\n\u5bfb\u6c42\u6709\u613f\u610f\u7ee7\u7eed\u5b8c\u5584\u7684\u670b\u53cb\u3001\u7f16\u8f91\u3001\u5199\u624b; \u5982\u6709\u610f\u5408\u4f5c\uff0c\u5b8c\u5584\u51fa\u4e66\uff08\u6210\u4e3a\u5171\u540c\u4f5c\u8005\uff09\u3002\n\u6240\u6709\u63d0\u4ea4\u5185\u5bb9\u7684\u8d21\u732e\u8005\uff0c\u5c06\u4f1a\u5728\u6587\u4e2d\u4f53\u73b0\u8d21\u732e\u8005\u4e2a\u4eba\u4fe1\u606f\uff08\u5927\u4f6c-\u897f\u6e56\u5927\u5b66\uff09\u3002\n\n\n\u8054\u7cfb\u65b9\u5f0f\uff1a\u8bf7\u8054\u7cfbscutjy2015@163.com\u3000(\u552f\u4e00\u5b98\u65b9\u90ae\u7bb1)\uff1b\u3000\u5fae\u4fe1Tan\uff1a\n(\u8fdb\u7fa4\u5148\u5728MD\u7248\u672c\u589e\u52a0\u3001\u6539\u5584\u3001\u63d0\u4ea4\u5185\u5bb9\u540e\uff0c\u66f4\u6613\u8fdb\u7fa4\uff0c\u4eab\u53d7\u5206\u4eab\u77e5\u8bc6\u5e2e\u52a9\u4ed6\u4eba\u3002)\n\n\n\nMarkdown\u9605\u8bfb\u5668\u63a8\u8350\uff1ahttps:\/\/typora.io\/ \u514d\u8d39\u4e14\u5bf9\u4e8e\u6570\u5b66\u516c\u5f0f\u663e\u793a\u652f\u6301\u7684\u6bd4\u8f83\u597d\u3002\n\n\n\u6ce8\u610f\uff0c\u73b0\u51fa\u73b0\u4e0d\u6cd5\u5206\u5b50\u5192\u5145\u53d1\u8d77\u4eba\uff0c\u8bf7\u5e7f\u5927\u4f19\u4f34\u513f\u77e5\u6089\uff01\n\n\n\u63a5\u4e0b\u6765\uff0c\u5c06\u63d0\u4f9bMD\u7248\u672c\uff0c\u5927\u5bb6\u4e00\u8d77\u7f16\u8f91\u5b8c\u5584\uff0c\u656c\u8bf7\u671f\u5f85\uff01\u5e0c\u671b\u8e0a\u8dc3\u63d0\u5efa\u8bae\uff0c\u8865\u5145\u4fee\u6539\u5185\u5bb9\uff01\n\n\n6. \u53cb\u60c5\u94fe\u63a5\nFlyAI-AI\u7ade\u8d5b\u5e73\u53f0\n7. \u76ee\u5f55\n\u7b2c\u4e00\u7ae0 \u6570\u5b66\u57fa\u7840\t1\n1.1 \u6807\u91cf\u3001\u5411\u91cf\u3001\u5f20\u91cf\u4e4b\u95f4\u7684\u8054\u7cfb\t1\n1.2 \u5f20\u91cf\u4e0e\u77e9\u9635\u7684\u533a\u522b\uff1f\t1\n1.3 \u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58\u7ed3\u679c\t1\n1.4 \u5411\u91cf\u548c\u77e9\u9635\u7684\u8303\u6570\u5f52\u7eb3\t1\n1.5 \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u77e9\u9635\u4e3a\u6b63\u5b9a\uff1f\t2\n1.6 \u5bfc\u6570\u504f\u5bfc\u8ba1\u7b97\t3\n1.7 \u5bfc\u6570\u548c\u504f\u5bfc\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t3\n1.8 \u7279\u5f81\u503c\u5206\u89e3\u4e0e\u7279\u5f81\u5411\u91cf\t3\n1.9 \u5947\u5f02\u503c\u4e0e\u7279\u5f81\u503c\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\t4\n1.10 \u673a\u5668\u5b66\u4e60\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u6982\u7387\uff1f\t4\n1.11 \u53d8\u91cf\u4e0e\u968f\u673a\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t4\n1.12 \u5e38\u89c1\u6982\u7387\u5206\u5e03\uff1f\t5\n1.13 \u4e3e\u4f8b\u7406\u89e3\u6761\u4ef6\u6982\u7387\t9\n1.14 \u8054\u5408\u6982\u7387\u4e0e\u8fb9\u7f18\u6982\u7387\u8054\u7cfb\u533a\u522b\uff1f\t10\n1.15 \u6761\u4ef6\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\t10\n1.16 \u72ec\u7acb\u6027\u548c\u6761\u4ef6\u72ec\u7acb\u6027\t11\n1.17 \u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u603b\u7ed3\t11\n\u7b2c\u4e8c\u7ae0 \u673a\u5668\u5b66\u4e60\u57fa\u7840\t14\n2.1 \u5404\u79cd\u5e38\u89c1\u7b97\u6cd5\u56fe\u793a\t14\n2.2 \u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u3001\u5f31\u76d1\u7763\u5b66\u4e60\uff1f\t15\n2.3 \u76d1\u7763\u5b66\u4e60\u6709\u54ea\u4e9b\u6b65\u9aa4\t16\n2.4 \u591a\u5b9e\u4f8b\u5b66\u4e60\uff1f\t17\n2.5 \u5206\u7c7b\u7f51\u7edc\u548c\u56de\u5f52\u7684\u533a\u522b\uff1f\t17\n2.6 \u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff1f\t17\n2.7 \u5e38\u7528\u5206\u7c7b\u7b97\u6cd5\u7684\u4f18\u7f3a\u70b9\uff1f\t18\n2.8 \u6b63\u786e\u7387\u80fd\u5f88\u597d\u7684\u8bc4\u4f30\u5206\u7c7b\u7b97\u6cd5\u5417\uff1f\t20\n2.9 \u5206\u7c7b\u7b97\u6cd5\u7684\u8bc4\u4f30\u65b9\u6cd5\uff1f\t20\n2.10 \u4ec0\u4e48\u6837\u7684\u5206\u7c7b\u5668\u662f\u6700\u597d\u7684\uff1f\t22\n2.11 \u5927\u6570\u636e\u4e0e\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\t22\n2.12 \u7406\u89e3\u5c40\u90e8\u6700\u4f18\u4e0e\u5168\u5c40\u6700\u4f18\t23\n2.13 \u7406\u89e3\u903b\u8f91\u56de\u5f52\t24\n2.14 \u903b\u8f91\u56de\u5f52\u4e0e\u6734\u7d20\u8d1d\u53f6\u65af\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t24\n2.15 \u4e3a\u4ec0\u4e48\u9700\u8981\u4ee3\u4ef7\u51fd\u6570\uff1f\t25\n2.16 \u4ee3\u4ef7\u51fd\u6570\u4f5c\u7528\u539f\u7406\u00a0\t25\n2.17 \u4e3a\u4ec0\u4e48\u4ee3\u4ef7\u51fd\u6570\u8981\u975e\u8d1f\uff1f\t26\n2.18 \u5e38\u89c1\u4ee3\u4ef7\u51fd\u6570\uff1f\t26\n2.19 \u4e3a\u4ec0\u4e48\u7528\u4ea4\u53c9\u71b5\u4ee3\u66ff\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\t28\n2.20 \u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f\t28\n2.21 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\t28\n2.22 \u903b\u8f91\u56de\u5f52\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5bf9\u6570\u635f\u5931\u51fd\u6570\uff1f\t30\n0.00 \u5bf9\u6570\u635f\u5931\u51fd\u6570\u662f\u5982\u4f55\u5ea6\u91cf\u635f\u5931\u7684\uff1f\t31\n2.23 \u673a\u5668\u5b66\u4e60\u4e2d\u4e3a\u4ec0\u4e48\u9700\u8981\u68af\u5ea6\u4e0b\u964d\uff1f\t32\n2.24 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7f3a\u70b9\uff1f\t32\n2.25 \u68af\u5ea6\u4e0b\u964d\u6cd5\u76f4\u89c2\u7406\u89e3\uff1f\t32\n2.23 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u63cf\u8ff0\uff1f\t33\n2.24 \u5982\u4f55\u5bf9\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fdb\u884c\u8c03\u4f18\uff1f\t35\n2.25 \u968f\u673a\u68af\u5ea6\u548c\u6279\u91cf\u68af\u5ea6\u533a\u522b\uff1f\t35\n2.26 \u5404\u79cd\u68af\u5ea6\u4e0b\u964d\u6cd5\u6027\u80fd\u6bd4\u8f83\t37\n2.27 \u8ba1\u7b97\u56fe\u7684\u5bfc\u6570\u8ba1\u7b97\u56fe\u89e3\uff1f\t37\n2.28 \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09\u601d\u60f3\u603b\u7ed3\t39\n2.29 \u56fe\u89e3LDA\u6838\u5fc3\u601d\u60f3\t39\n2.30 \u4e8c\u7c7bLDA\u7b97\u6cd5\u539f\u7406\uff1f\t40\n2.30 LDA\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3\uff1f\t41\n2.31 LDA\u548cPCA\u533a\u522b\uff1f\t41\n2.32 LDA\u4f18\u7f3a\u70b9\uff1f\t41\n2.33 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u601d\u60f3\u603b\u7ed3\t42\n2.34 \u56fe\u89e3PCA\u6838\u5fc3\u601d\u60f3\t42\n2.35 PCA\u7b97\u6cd5\u63a8\u7406\t43\n2.36 PCA\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3\t44\n2.37 PCA\u7b97\u6cd5\u4e3b\u8981\u4f18\u7f3a\u70b9\t45\n2.38 \u964d\u7ef4\u7684\u5fc5\u8981\u6027\u53ca\u76ee\u7684\t45\n2.39 KPCA\u4e0ePCA\u7684\u533a\u522b\uff1f\t46\n2.40 \u6a21\u578b\u8bc4\u4f30\t47\n2.40.1\u6a21\u578b\u8bc4\u4f30\u5e38\u7528\u65b9\u6cd5\uff1f\t47\n2.40.2 \u7ecf\u9a8c\u8bef\u5dee\u4e0e\u6cdb\u5316\u8bef\u5dee\t47\n2.40.3 \u56fe\u89e3\u6b20\u62df\u5408\u3001\u8fc7\u62df\u5408\t48\n2.40.4 \u5982\u4f55\u89e3\u51b3\u8fc7\u62df\u5408\u4e0e\u6b20\u62df\u5408\uff1f\t49\n2.40.5 \u4ea4\u53c9\u9a8c\u8bc1\u7684\u4e3b\u8981\u4f5c\u7528\uff1f\t50\n2.40.6 k\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff1f\t50\n2.40.7 \u6df7\u6dc6\u77e9\u9635\t50\n2.40.8 \u9519\u8bef\u7387\u53ca\u7cbe\u5ea6\t51\n2.40.9 \u67e5\u51c6\u7387\u4e0e\u67e5\u5168\u7387\t51\n2.40.10 ROC\u4e0eAUC\t52\n2.40.11 \u5982\u4f55\u753bROC\u66f2\u7ebf\uff1f\t53\n2.40.12 \u5982\u4f55\u8ba1\u7b97TPR\uff0cFPR\uff1f\t54\n2.40.13 \u5982\u4f55\u8ba1\u7b97Auc\uff1f\t56\n2.40.14 \u4e3a\u4ec0\u4e48\u4f7f\u7528Roc\u548cAuc\u8bc4\u4ef7\u5206\u7c7b\u5668\uff1f\t56\n2.40.15 \u76f4\u89c2\u7406\u89e3AUC\t56\n2.40.16 \u4ee3\u4ef7\u654f\u611f\u9519\u8bef\u7387\u4e0e\u4ee3\u4ef7\u66f2\u7ebf\t57\n2.40.17 \u6a21\u578b\u6709\u54ea\u4e9b\u6bd4\u8f83\u68c0\u9a8c\u65b9\u6cd5\t59\n2.40.18 \u504f\u5dee\u4e0e\u65b9\u5dee\t59\n2.40.19 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6807\u51c6\u5dee\uff1f\t60\n2.40.20 \u70b9\u4f30\u8ba1\u601d\u60f3\t61\n2.40.21 \u70b9\u4f30\u8ba1\u4f18\u826f\u6027\u539f\u5219\uff1f\t61\n2.40.22 \u70b9\u4f30\u8ba1\u3001\u533a\u95f4\u4f30\u8ba1\u3001\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u4e4b\u95f4\u7684\u8054\u7cfb\uff1f\t62\n2.40.23 \u7c7b\u522b\u4e0d\u5e73\u8861\u4ea7\u751f\u539f\u56e0\uff1f\t62\n2.40.24 \u5e38\u89c1\u7684\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\t62\n2.41 \u51b3\u7b56\u6811\t64\n2.41.1 \u51b3\u7b56\u6811\u7684\u57fa\u672c\u539f\u7406\t64\n2.41.2 \u51b3\u7b56\u6811\u7684\u4e09\u8981\u7d20\uff1f\t64\n2.41.3 \u51b3\u7b56\u6811\u5b66\u4e60\u57fa\u672c\u7b97\u6cd5\t65\n2.41.4 \u51b3\u7b56\u6811\u7b97\u6cd5\u4f18\u7f3a\u70b9\t65\n2.40.5 \u71b5\u7684\u6982\u5ff5\u4ee5\u53ca\u7406\u89e3\t66\n2.40.6 \u4fe1\u606f\u589e\u76ca\u7684\u7406\u89e3\t66\n2.40.7 \u526a\u679d\u5904\u7406\u7684\u4f5c\u7528\u53ca\u7b56\u7565\uff1f\t67\n2.41 \u652f\u6301\u5411\u91cf\u673a\t67\n2.41.1 \u4ec0\u4e48\u662f\u652f\u6301\u5411\u91cf\u673a\t67\n2.25.2 \u652f\u6301\u5411\u91cf\u673a\u89e3\u51b3\u7684\u95ee\u9898\uff1f\t68\n2.25.2 \u6838\u51fd\u6570\u4f5c\u7528\uff1f\t69\n2.25.3 \u5bf9\u5076\u95ee\u9898\t69\n2.25.4 \u7406\u89e3\u652f\u6301\u5411\u91cf\u56de\u5f52\t69\n2.25.5 \u7406\u89e3SVM\uff08\u6838\u51fd\u6570\uff09\t69\n2.25.6 \u5e38\u89c1\u7684\u6838\u51fd\u6570\u6709\u54ea\u4e9b\uff1f\t69\n2.25.6 \u8f6f\u95f4\u9694\u4e0e\u6b63\u5219\u5316\t73\n2.25.7 SVM\u4e3b\u8981\u7279\u70b9\u53ca\u7f3a\u70b9\uff1f\t73\n2.26 \u8d1d\u53f6\u65af\t74\n2.26.1 \u56fe\u89e3\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\t74\n2.26.2 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u548c\u4e00\u822c\u7684\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t76\n2.26.4 \u6734\u7d20\u4e0e\u534a\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\t76\n2.26.5 \u8d1d\u53f6\u65af\u7f51\u4e09\u79cd\u5178\u578b\u7ed3\u6784\t76\n2.26.6 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u9519\u8bef\u7387\t76\n2.26.7 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u6700\u4f18\u9519\u8bef\u7387\t76\n2.27 EM\u7b97\u6cd5\u89e3\u51b3\u95ee\u9898\u53ca\u5b9e\u73b0\u6d41\u7a0b\t76\n2.28 \u4e3a\u4ec0\u4e48\u4f1a\u4ea7\u751f\u7ef4\u6570\u707e\u96be\uff1f\t78\n2.29 \u600e\u6837\u907f\u514d\u7ef4\u6570\u707e\u96be\t82\n2.30 \u805a\u7c7b\u548c\u964d\u7ef4\u6709\u4ec0\u4e48\u533a\u522b\u4e0e\u8054\u7cfb\uff1f\t82\n2.31 GBDT\u548c\u968f\u673a\u68ee\u6797\u7684\u533a\u522b\t83\n2.32 \u56db\u79cd\u805a\u7c7b\u65b9\u6cd5\u4e4b\u6bd4\u8f83\t84\n\u7b2c\u4e09\u7ae0 \u6df1\u5ea6\u5b66\u4e60\u57fa\u7840\t88\n3.1 \u57fa\u672c\u6982\u5ff5\t88\n3.1.1 \u795e\u7ecf\u7f51\u7edc\u7ec4\u6210\uff1f\t88\n3.1.2 \u795e\u7ecf\u7f51\u7edc\u6709\u54ea\u4e9b\u5e38\u7528\u6a21\u578b\u7ed3\u6784\uff1f\t90\n3.1.3 \u5982\u4f55\u9009\u62e9\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u5e73\u53f0\uff1f\t92\n3.1.4 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5c42\u8868\u793a\t92\n3.1.5 \u4e3a\u4ec0\u4e48\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u96be\u4ee5\u8bad\u7ec3\uff1f\t93\n3.1.6 \u6df1\u5ea6\u5b66\u4e60\u548c\u673a\u5668\u5b66\u4e60\u6709\u4ec0\u4e48\u4e0d\u540c\t94\n3.2 \u7f51\u7edc\u64cd\u4f5c\u4e0e\u8ba1\u7b97\t95\n3.2.1 \u524d\u5411\u4f20\u64ad\u4e0e\u53cd\u5411\u4f20\u64ad\uff1f\t95\n3.2.2 \u5982\u4f55\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff1f\t97\n3.2.3 \u5982\u4f55\u8ba1\u7b97\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\u503c\uff1f\t98\n3.2.4 \u5982\u4f55\u8ba1\u7b97Pooling\u5c42\u8f93\u51fa\u503c\u8f93\u51fa\u503c\uff1f\t101\n3.2.5 \u5b9e\u4f8b\u7406\u89e3\u53cd\u5411\u4f20\u64ad\t102\n3.3 \u8d85\u53c2\u6570\t105\n3.3.1 \u4ec0\u4e48\u662f\u8d85\u53c2\u6570\uff1f\t105\n3.3.2 \u5982\u4f55\u5bfb\u627e\u8d85\u53c2\u6570\u7684\u6700\u4f18\u503c\uff1f\t105\n3.3.3 \u8d85\u53c2\u6570\u641c\u7d22\u4e00\u822c\u8fc7\u7a0b\uff1f\t106\n3.4 \u6fc0\u6d3b\u51fd\u6570\t106\n3.4.1 \u4e3a\u4ec0\u4e48\u9700\u8981\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t106\n3.4.2 \u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u53ca\u56fe\u50cf\t107\n3.4.3 \u5e38\u89c1\u6fc0\u6d3b\u51fd\u6570\u7684\u5bfc\u6570\u8ba1\u7b97\uff1f\t109\n3.4.4 \u6fc0\u6d3b\u51fd\u6570\u6709\u54ea\u4e9b\u6027\u8d28\uff1f\t110\n3.4.5 \u5982\u4f55\u9009\u62e9\u6fc0\u6d3b\u51fd\u6570\uff1f\t110\n3.4.6 \u4f7f\u7528ReLu\u6fc0\u6d3b\u51fd\u6570\u7684\u4f18\u70b9\uff1f\t111\n3.4.7 \u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u7528\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t111\n3.4.8 \u600e\u6837\u7406\u89e3Relu\uff08<0\u65f6\uff09\u662f\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t 111\n3.4.9 Softmax\u51fd\u6570\u5982\u4f55\u5e94\u7528\u4e8e\u591a\u5206\u7c7b\uff1f\t112\n3.5 Batch_Size\t113\n3.5.1 \u4e3a\u4ec0\u4e48\u9700\u8981Batch_Size\uff1f\t113\n3.5.2 Batch_Size\u503c\u7684\u9009\u62e9\t114\n3.5.3 \u5728\u5408\u7406\u8303\u56f4\u5185\uff0c\u589e\u5927 Batch_Size \u6709\u4f55\u597d\u5904\uff1f\t114\n3.5.4 \u76f2\u76ee\u589e\u5927 Batch_Size \u6709\u4f55\u574f\u5904\uff1f\t114\n3.5.5 \u8c03\u8282 Batch_Size \u5bf9\u8bad\u7ec3\u6548\u679c\u5f71\u54cd\u5230\u5e95\u5982\u4f55\uff1f\t114\n3.6 \u5f52\u4e00\u5316\t115\n3.6.1 \u5f52\u4e00\u5316\u542b\u4e49\uff1f\t115\n3.6.2 \u4e3a\u4ec0\u4e48\u8981\u5f52\u4e00\u5316\t115\n3.6.3 \u4e3a\u4ec0\u4e48\u5f52\u4e00\u5316\u80fd\u63d0\u9ad8\u6c42\u89e3\u6700\u4f18\u89e3\u901f\u5ea6\uff1f\t115\n3.6.4 3D\u56fe\u89e3\u672a\u5f52\u4e00\u5316\t116\n3.6.5 \u5f52\u4e00\u5316\u6709\u54ea\u4e9b\u7c7b\u578b\uff1f\t117\n3.6.6 \u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\u4f5c\u7528\t117\n3.6.7 \u7406\u89e3\u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\u516c\u5f0f\t117\n3.6.8 \u4ec0\u4e48\u662f\u6279\u5f52\u4e00\u5316\uff08Batch Normalization\uff09\t118\n3.6.9 \u6279\u5f52\u4e00\u5316\uff08BN\uff09\u7b97\u6cd5\u7684\u4f18\u70b9\t119\n3.6.10 \u6279\u5f52\u4e00\u5316\uff08BN\uff09\u7b97\u6cd5\u6d41\u7a0b\t119\n3.6.11 \u6279\u5f52\u4e00\u5316\u548c\u7fa4\u7ec4\u5f52\u4e00\u5316\t120\n3.6.12 Weight Normalization\u548cBatch Normalization\t120\n3.7 \u9884\u8bad\u7ec3\u4e0e\u5fae\u8c03(fine tuning)\t121\n3.7.1 \u4e3a\u4ec0\u4e48\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u53ef\u4ee5\u5e2e\u52a9\u6df1\u5ea6\u5b66\u4e60\uff1f\t121\n3.7.2 \u4ec0\u4e48\u662f\u6a21\u578b\u5fae\u8c03fine tuning\t121\n3.7.3 \u5fae\u8c03\u65f6\u5019\u7f51\u7edc\u53c2\u6570\u662f\u5426\u66f4\u65b0\uff1f\t122\n3.7.4 fine-tuning\u6a21\u578b\u7684\u4e09\u79cd\u72b6\u6001\t122\n3.8 \u6743\u91cd\u504f\u5dee\u521d\u59cb\u5316\t122\n3.8.1 \u5168\u90fd\u521d\u59cb\u5316\u4e3a0\t122\n3.8.2 \u5168\u90fd\u521d\u59cb\u5316\u4e3a\u540c\u6837\u7684\u503c\t123\n3.8.3 \u521d\u59cb\u5316\u4e3a\u5c0f\u7684\u968f\u673a\u6570\t124\n3.8.4 \u75281\/sqrt(n)\u6821\u51c6\u65b9\u5dee\t125\n3.8.5 \u7a00\u758f\u521d\u59cb\u5316(Sparse Initialazation)\t125\n3.8.6 \u521d\u59cb\u5316\u504f\u5dee\t125\n3.9 Softmax\t126\n3.9.1 Softmax\u5b9a\u4e49\u53ca\u4f5c\u7528\t126\n3.9.2 Softmax\u63a8\u5bfc\t126\n3.10 \u7406\u89e3One Hot Encodeing\u539f\u7406\u53ca\u4f5c\u7528\uff1f\t126\n3.11 \u5e38\u7528\u7684\u4f18\u5316\u5668\u6709\u54ea\u4e9b\t127\n3.12 Dropout \u7cfb\u5217\u95ee\u9898\t128\n3.12.1 dropout\u7387\u7684\u9009\u62e9\t128\n3.27 Padding \u7cfb\u5217\u95ee\u9898\t128\n\u7b2c\u56db\u7ae0 \u7ecf\u5178\u7f51\u7edc\t129\n4.1 LetNet5\t129\n4.1.1 \u6a21\u578b\u7ed3\u6784\t129\n4.1.2 \u6a21\u578b\u7ed3\u6784\t129\n4.1.3 \u6a21\u578b\u7279\u6027\t131\n4.2 AlexNet\t131\n4.2.1 \u6a21\u578b\u7ed3\u6784\t131\n4.2.2 \u6a21\u578b\u89e3\u8bfb\t131\n4.2.3 \u6a21\u578b\u7279\u6027\t135\n4.3 \u53ef\u89c6\u5316ZFNet-\u89e3\u5377\u79ef\t135\n4.3.1 \u57fa\u672c\u7684\u601d\u60f3\u53ca\u5176\u8fc7\u7a0b\t135\n4.3.2 \u5377\u79ef\u4e0e\u89e3\u5377\u79ef\t136\n4.3.3 \u5377\u79ef\u53ef\u89c6\u5316\t137\n4.3.4 ZFNe\u548cAlexNet\u6bd4\u8f83\t139\n4.4 VGG\t140\n4.1.1 \u6a21\u578b\u7ed3\u6784\t140\n4.1.2 \u6a21\u578b\u7279\u70b9\t140\n4.5 Network in Network\t141\n4.5.1 \u6a21\u578b\u7ed3\u6784\t141\n4.5.2 \u6a21\u578b\u521b\u65b0\u70b9\t141\n4.6 GoogleNet\t143\n4.6.1 \u6a21\u578b\u7ed3\u6784\t143\n4.6.2 Inception \u7ed3\u6784\t145\n4.6.3 \u6a21\u578b\u5c42\u6b21\u5173\u7cfb\t146\n4.7 Inception \u7cfb\u5217\t148\n4.7.1 Inception v1\t148\n4.7.2 Inception v2\t150\n4.7.3 Inception v3\t153\n4.7.4 Inception V4\t155\n4.7.5 Inception-ResNet-v2\t157\n4.8 ResNet\u53ca\u5176\u53d8\u4f53\t158\n4.8.1 \u91cd\u65b0\u5ba1\u89c6ResNet\t159\n4.8.2 \u6b8b\u5dee\u5757\t160\n4.8.3 ResNet\u67b6\u6784\t162\n4.8.4 \u6b8b\u5dee\u5757\u7684\u53d8\u4f53\t162\n4.8.5 ResNeXt\t162\n4.8.6 Densely Connected CNN\t164\n4.8.7 ResNet\u4f5c\u4e3a\u5c0f\u578b\u7f51\u7edc\u7684\u7ec4\u5408\t165\n4.8.8 ResNet\u4e2d\u8def\u5f84\u7684\u7279\u70b9\t166\n4.9 \u4e3a\u4ec0\u4e48\u73b0\u5728\u7684CNN\u6a21\u578b\u90fd\u662f\u5728GoogleNet\u3001VGGNet\u6216\u8005AlexNet\u4e0a\u8c03\u6574\u7684\uff1f\t167\n\u7b2c\u4e94\u7ae0 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN)\t170\n5.1 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ec4\u6210\u5c42\t170\n5.2 \u5377\u79ef\u5982\u4f55\u68c0\u6d4b\u8fb9\u7f18\u4fe1\u606f\uff1f\t171\n5.2 \u5377\u79ef\u7684\u51e0\u4e2a\u57fa\u672c\u5b9a\u4e49\uff1f\t174\n5.2.1 \u5377\u79ef\u6838\u5927\u5c0f\t174\n5.2.2 \u5377\u79ef\u6838\u7684\u6b65\u957f\t174\n5.2.3 \u8fb9\u7f18\u586b\u5145\t174\n5.2.4 \u8f93\u5165\u548c\u8f93\u51fa\u901a\u9053\t174\n5.3 \u5377\u79ef\u7f51\u7edc\u7c7b\u578b\u5206\u7c7b\uff1f\t174\n5.3.1 \u666e\u901a\u5377\u79ef\t174\n5.3.2 \u6269\u5f20\u5377\u79ef\t175\n5.3.3 \u8f6c\u7f6e\u5377\u79ef\t176\n5.3.4 \u53ef\u5206\u79bb\u5377\u79ef\t177\n5.3 \u56fe\u89e312\u79cd\u4e0d\u540c\u7c7b\u578b\u76842D\u5377\u79ef\uff1f\t178\n5.4 2D\u5377\u79ef\u4e0e3D\u5377\u79ef\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t181\n5.4.1 2D \u5377\u79ef\t181\n5.4.2 3D\u5377\u79ef\t182\n5.5 \u6709\u54ea\u4e9b\u6c60\u5316\u65b9\u6cd5\uff1f\t183\n5.5.1 \u4e00\u822c\u6c60\u5316\uff08General Pooling\uff09\t183\n5.5.2 \u91cd\u53e0\u6c60\u5316\uff08OverlappingPooling\uff09\t184\n5.5.3 \u7a7a\u91d1\u5b57\u5854\u6c60\u5316\uff08Spatial Pyramid Pooling\uff09\t184\n5.6 1x1\u5377\u79ef\u4f5c\u7528\uff1f\t186\n5.7 \u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u00a0\t187\n5.8 \u5377\u79ef\u6838\u4e00\u5b9a\u8d8a\u5927\u8d8a\u597d\uff1f\t189\n5.9 \u6bcf\u5c42\u5377\u79ef\u53ea\u80fd\u7528\u4e00\u79cd\u5c3a\u5bf8\u7684\u5377\u79ef\u6838\uff1f\t189\n5.10 \u600e\u6837\u624d\u80fd\u51cf\u5c11\u5377\u79ef\u5c42\u53c2\u6570\u91cf\uff1f\t190\n5.11\u5377\u79ef\u64cd\u4f5c\u65f6\u5fc5\u987b\u540c\u65f6\u8003\u8651\u901a\u9053\u548c\u533a\u57df\u5417\uff1f\t191\n5.12 \u91c7\u7528\u5bbd\u5377\u79ef\u7684\u597d\u5904\u6709\u4ec0\u4e48\uff1f\u00a0\t192\n5.12.1 \u7a84\u5377\u79ef\u548c\u5bbd\u5377\u79ef\t192\n5.12.2 \u4e3a\u4ec0\u4e48\u91c7\u7528\u5bbd\u5377\u79ef\uff1f\t192\n5.13 \u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6df1\u5ea6\u4e0e\u54ea\u4e2a\u90e8\u4ef6\u7684\u4e2a\u6570\u76f8\u540c\uff1f\u00a0\t192\n5.14 \u5982\u4f55\u5f97\u5230\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6df1\u5ea6\uff1f\t193\n5.15 \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u653e\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u90a3\u4e2a\u64cd\u4f5c\u4e4b\u540e\uff1f\u00a0\t194\n5.16 \u5982\u4f55\u7406\u89e3\u6700\u5927\u6c60\u5316\u5c42\u6709\u51e0\u5206\u7f29\u5c0f\uff1f\t194\n5.17 \u7406\u89e3\u56fe\u50cf\u5377\u79ef\u4e0e\u53cd\u5377\u79ef\t194\n5.17.1 \u56fe\u50cf\u5377\u79ef\t194\n5.17.2 \u56fe\u50cf\u53cd\u5377\u79ef\t196\n5.18 \u4e0d\u540c\u5377\u79ef\u540e\u56fe\u50cf\u5927\u5c0f\u8ba1\u7b97\uff1f\t198\n5.18.1 \u7c7b\u578b\u5212\u5206\t198\n5.18.2 \u8ba1\u7b97\u516c\u5f0f\t199\n5.19 \u6b65\u957f\u3001\u586b\u5145\u5927\u5c0f\u4e0e\u8f93\u5165\u8f93\u51fa\u5173\u7cfb\u603b\u7ed3\uff1f\t199\n5.19.1 \u6ca1\u67090\u586b\u5145\uff0c\u5355\u4f4d\u6b65\u957f\t200\n5.19.2 \u96f6\u586b\u5145\uff0c\u5355\u4f4d\u6b65\u957f\t200\n5.19.3 \u4e0d\u586b\u5145\uff0c\u975e\u5355\u4f4d\u6b65\u957f\t202\n5.19.4 \u96f6\u586b\u5145\uff0c\u975e\u5355\u4f4d\u6b65\u957f\t202\n5.20 \u7406\u89e3\u53cd\u5377\u79ef\u548c\u68cb\u76d8\u6548\u5e94\t204\n5.20.1 \u4e3a\u4ec0\u4e48\u51fa\u73b0\u68cb\u76d8\u73b0\u8c61\uff1f\t204\n5.20.2 \u6709\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u68cb\u76d8\u6548\u5e94\uff1f\t205\n5.21 CNN\u4e3b\u8981\u7684\u8ba1\u7b97\u74f6\u9888\uff1f\t207\n5.22 CNN\u7684\u53c2\u6570\u7ecf\u9a8c\u8bbe\u7f6e\t207\n5.23 \u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u7684\u65b9\u6cd5\u603b\u7ed3\t208\n5.23.1 \u4e3b\u8981\u65b9\u6cd5\t208\n5.23.2 \u5b9e\u9a8c\u8bc1\u660e\t208\n5.24 CNN\u5728CV\u4e0eNLP\u9886\u57df\u8fd0\u7528\u7684\u8054\u7cfb\u4e0e\u533a\u522b\uff1f\t213\n5.24.1 \u8054\u7cfb\t213\n5.24.2 \u533a\u522b\t213\n5.25 CNN\u51f8\u663e\u5171\u6027\u7684\u624b\u6bb5\uff1f\t213\n5.25.1 \u5c40\u90e8\u8fde\u63a5\t213\n5.25.2 \u6743\u503c\u5171\u4eab\t214\n5.25.3 \u6c60\u5316\u64cd\u4f5c\t215\n5.26 \u5168\u5377\u79ef\u4e0eLocal-Conv\u7684\u5f02\u540c\u70b9\t215\n5.27 \u4e3e\u4f8b\u7406\u89e3Local-Conv\u7684\u4f5c\u7528\t215\n5.28 \u7b80\u8ff0\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u5316\u53f2\t216\n\u7b2c\u516d\u7ae0 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc(RNN)\t218\n6.1 RNNs\u548cFNNs\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t218\n6.2 RNNs\u5178\u578b\u7279\u70b9\uff1f\t218\n6.3 RNNs\u80fd\u5e72\u4ec0\u4e48\uff1f\t219\n6.4 RNNs\u5728NLP\u4e2d\u5178\u578b\u5e94\u7528\uff1f\t220\n6.5 RNNs\u8bad\u7ec3\u548c\u4f20\u7edfANN\u8bad\u7ec3\u5f02\u540c\u70b9\uff1f\t220\n6.6 \u5e38\u89c1\u7684RNNs\u6269\u5c55\u548c\u6539\u8fdb\u6a21\u578b\t221\n6.6.1 Simple RNNs(SRNs)\t221\n6.6.2 Bidirectional RNNs\t221\n6.6.3 Deep(Bidirectional) RNNs\t222\n6.6.4 Echo State Networks\uff08ESNs\uff09\t222\n6.6.5 Gated Recurrent Unit Recurrent Neural Networks\t224\n6.6.6 LSTM Netwoorks\t224\n6.6.7 Clockwork RNNs(CW-RNNs)\t225\n\u7b2c\u4e03\u7ae0 \u76ee\u6807\u68c0\u6d4b\t228\n7.1 \u57fa\u4e8e\u5019\u9009\u533a\u57df\u7684\u76ee\u6807\u68c0\u6d4b\u5668\t228\n7.1.1 \u6ed1\u52a8\u7a97\u53e3\u68c0\u6d4b\u5668\t228\n7.1.2 \u9009\u62e9\u6027\u641c\u7d22\t229\n7.1.3 R-CNN\t230\n7.1.4 \u8fb9\u754c\u6846\u56de\u5f52\u5668\t230\n7.1.5 Fast R-CNN\t231\n7.1.6 ROI \u6c60\u5316\t233\n7.1.7 Faster R-CNN\t233\n7.1.8 \u5019\u9009\u533a\u57df\u7f51\u7edc\t234\n7.1.9 R-CNN \u65b9\u6cd5\u7684\u6027\u80fd\t236\n7.2 \u57fa\u4e8e\u533a\u57df\u7684\u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08R-FCN\uff09\t237\n7.3 \u5355\u6b21\u76ee\u6807\u68c0\u6d4b\u5668\t240\n7.3.1\u5355\u6b21\u68c0\u6d4b\u5668\t241\n7.3.2 \u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u9884\u6d4b\t241\n7.3.3 SSD\t243\n7.4 YOLO\u7cfb\u5217\t244\n7.4.1 YOLOv1\u4ecb\u7ecd\t244\n7.4.2 YOLOv1\u6a21\u578b\u4f18\u7f3a\u70b9\uff1f\t252\n7.4.3 YOLOv2\t253\n7.4.4 YOLOv2\u6539\u8fdb\u7b56\u7565\t254\n7.4.5 YOLOv2\u7684\u8bad\u7ec3\t261\n7.4.6 YOLO9000\t261\n7.4.7 YOLOv3\t263\n7.4.8 YOLOv3\u6539\u8fdb\t264\n\u7b2c\u516b\u7ae0 \u56fe\u50cf\u5206\u5272\t269\n8.1 \u4f20\u7edf\u7684\u57fa\u4e8eCNN\u7684\u5206\u5272\u65b9\u6cd5\u7f3a\u70b9\uff1f\t269\n8.1 FCN\t269\n8.1.1 FCN\u6539\u53d8\u4e86\u4ec0\u4e48?\t269\n8.1.2 FCN\u7f51\u7edc\u7ed3\u6784\uff1f\t270\n8.1.3 \u5168\u5377\u79ef\u7f51\u7edc\u4e3e\u4f8b\uff1f\t271\n8.1.4 \u4e3a\u4ec0\u4e48CNN\u5bf9\u50cf\u7d20\u7ea7\u522b\u7684\u5206\u7c7b\u5f88\u96be\uff1f\t271\n8.1.5 \u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u5982\u4f55\u76f8\u4e92\u8f6c\u5316\uff1f\t272\n8.1.6 FCN\u7684\u8f93\u5165\u56fe\u7247\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u662f\u4efb\u610f\u5927\u5c0f\uff1f\t272\n8.1.7 \u628a\u5168\u8fde\u63a5\u5c42\u7684\u6743\u91cdW\u91cd\u5851\u6210\u5377\u79ef\u5c42\u7684\u6ee4\u6ce2\u5668\u6709\u4ec0\u4e48\u597d\u5904\uff1f\t273\n8.1.8 \u53cd\u5377\u79ef\u5c42\u7406\u89e3\t275\n8.1.9 \u8df3\u7ea7(skip)\u7ed3\u6784\t276\n8.1.10 \u6a21\u578b\u8bad\u7ec3\t277\n8.1.11 FCN\u7f3a\u70b9\t280\n8.2 U-Net\t280\n8.3 SegNet\t282\n8.4 \u7a7a\u6d1e\u5377\u79ef(Dilated Convolutions)\t283\n8.4 RefineNet\t285\n8.5 PSPNet\t286\n8.6 DeepLab\u7cfb\u5217\t288\n8.6.1 DeepLabv1\t288\n8.6.2 DeepLabv2\t289\n8.6.3 DeepLabv3\t289\n8.6.4 DeepLabv3+\t290\n8.7 Mask-R-CNN\t293\n8.7.1 Mask-RCNN \u7684\u7f51\u7edc\u7ed3\u6784\u793a\u610f\u56fe\t293\n8.7.2 RCNN\u884c\u4eba\u68c0\u6d4b\u6846\u67b6\t293\n8.7.3 Mask-RCNN \u6280\u672f\u8981\u70b9\t294\n8.8 CNN\u5728\u57fa\u4e8e\u5f31\u76d1\u7763\u5b66\u4e60\u7684\u56fe\u50cf\u5206\u5272\u4e2d\u7684\u5e94\u7528\t295\n8.8.1 Scribble\u6807\u8bb0\t295\n8.8.2 \u56fe\u50cf\u7ea7\u522b\u6807\u8bb0\t297\n8.8.3 DeepLab+bounding box+image-level labels\t298\n8.8.4 \u7edf\u4e00\u7684\u6846\u67b6\t299\n\u7b2c\u4e5d\u7ae0 \u5f3a\u5316\u5b66\u4e60\t301\n9.1 \u5f3a\u5316\u5b66\u4e60\u7684\u4e3b\u8981\u7279\u70b9\uff1f\t301\n9.2 \u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u5b9e\u4f8b\t302\n9.3 \u5f3a\u5316\u5b66\u4e60\u548c\u76d1\u7763\u5f0f\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\u7684\u533a\u522b\t303\n9.4 \u5f3a\u5316\u5b66\u4e60\u4e3b\u8981\u6709\u54ea\u4e9b\u7b97\u6cd5\uff1f\t305\n9.5 \u6df1\u5ea6\u8fc1\u79fb\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t305\n9.6 \u5206\u5c42\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t306\n9.7 \u6df1\u5ea6\u8bb0\u5fc6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t306\n9.8 \u591a\u667a\u80fd\u4f53\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t307\n9.9 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5c0f\u7ed3\t307\n\u7b2c\u5341\u7ae0 \u8fc1\u79fb\u5b66\u4e60\t309\n10.1 \u4ec0\u4e48\u662f\u8fc1\u79fb\u5b66\u4e60\uff1f\t309\n10.2 \u4ec0\u4e48\u662f\u591a\u4efb\u52a1\u5b66\u4e60\uff1f\t309\n10.3 \u591a\u4efb\u52a1\u5b66\u4e60\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\t309\n10.4 \u4ec0\u4e48\u662f\u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\uff1f\t311\n10.5 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u4e3e\u4f8b\uff1f\t311\n10.6 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u6709\u4ec0\u4e48\u6311\u6218\uff1f\t311\n10.7 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u4f18\u7f3a\u70b9\uff1f\t312\n\u7b2c\u5341\u4e09\u7ae0 \u4f18\u5316\u7b97\u6cd5\t314\n13.1 CPU\u548cGPU \u7684\u533a\u522b\uff1f\t314\n13.2 \u5982\u4f55\u89e3\u51b3\u8bad\u7ec3\u6837\u672c\u5c11\u7684\u95ee\u9898\t315\n13.3 \u4ec0\u4e48\u6837\u7684\u6837\u672c\u96c6\u4e0d\u9002\u5408\u7528\u6df1\u5ea6\u5b66\u4e60?\t315\n13.4 \u6709\u6ca1\u6709\u53ef\u80fd\u627e\u5230\u6bd4\u5df2\u77e5\u7b97\u6cd5\u66f4\u597d\u7684\u7b97\u6cd5?\t316\n13.5 \u4f55\u4e3a\u5171\u7ebf\u6027, \u8ddf\u8fc7\u62df\u5408\u6709\u5565\u5173\u8054?\t316\n13.6 \u5e7f\u4e49\u7ebf\u6027\u6a21\u578b\u662f\u600e\u88ab\u5e94\u7528\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d?\t316\n13.7 \u9020\u6210\u68af\u5ea6\u6d88\u5931\u7684\u539f\u56e0?\t317\n13.8 \u6743\u503c\u521d\u59cb\u5316\u65b9\u6cd5\u6709\u54ea\u4e9b\t317\n13.9 \u542f\u53d1\u5f0f\u4f18\u5316\u7b97\u6cd5\u4e2d\uff0c\u5982\u4f55\u907f\u514d\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\uff1f\t318\n13.10 \u51f8\u4f18\u5316\u4e2d\u5982\u4f55\u6539\u8fdbGD\u65b9\u6cd5\u4ee5\u9632\u6b62\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\t319\n13.11 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\uff1f\t319\n13.14 \u5982\u4f55\u8fdb\u884c\u7279\u5f81\u9009\u62e9\uff08feature selection\uff09\uff1f\t321\n13.14.1 \u5982\u4f55\u8003\u8651\u7279\u5f81\u9009\u62e9\t321\n13.14.2 \u7279\u5f81\u9009\u62e9\u65b9\u6cd5\u5206\u7c7b\t321\n13.14.3 \u7279\u5f81\u9009\u62e9\u76ee\u7684\t322\n13.15 \u68af\u5ea6\u6d88\u5931\/\u68af\u5ea6\u7206\u70b8\u539f\u56e0\uff0c\u4ee5\u53ca\u89e3\u51b3\u65b9\u6cd5\t322\n13.15.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u68af\u5ea6\u66f4\u65b0\u89c4\u5219\uff1f\t322\n13.15.2 \u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\u539f\u56e0\uff1f\t323\n13.15.3 \u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\u7684\u89e3\u51b3\u65b9\u6848\t324\n13.16 \u6df1\u5ea6\u5b66\u4e60\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e8c\u9636\u4f18\u5316\t325\n13.17 \u600e\u6837\u4f18\u5316\u4f60\u7684\u6df1\u5ea6\u5b66\u4e60\u7cfb\u7edf\uff1f\t326\n13.18\u4e3a\u4ec0\u4e48\u8981\u8bbe\u7f6e\u5355\u4e00\u6570\u5b57\u8bc4\u4f30\u6307\u6807\uff1f\t326\n13.19\u6ee1\u8db3\u548c\u4f18\u5316\u6307\u6807\uff08Satisficing and optimizing metrics\uff09\t327\n13.20 \u600e\u6837\u5212\u5206\u8bad\u7ec3\/\u5f00\u53d1\/\u6d4b\u8bd5\u96c6\t328\n13.21\u5982\u4f55\u5212\u5206\u5f00\u53d1\/\u6d4b\u8bd5\u96c6\u5927\u5c0f\t329\n13.22\u4ec0\u4e48\u65f6\u5019\u8be5\u6539\u53d8\u5f00\u53d1\/\u6d4b\u8bd5\u96c6\u548c\u6307\u6807\uff1f\t329\n13.23 \u8bbe\u7f6e\u8bc4\u4f30\u6307\u6807\u7684\u610f\u4e49\uff1f\t330\n13.24 \u4ec0\u4e48\u662f\u53ef\u907f\u514d\u504f\u5dee\uff1f\t331\n13.25 \u4ec0\u4e48\u662fTOP5\u9519\u8bef\u7387\uff1f\t331\n13.26 \u4ec0\u4e48\u662f\u4eba\u7c7b\u6c34\u5e73\u9519\u8bef\u7387\uff1f\t332\n13.27 \u53ef\u907f\u514d\u504f\u5dee\u3001\u51e0\u5927\u9519\u8bef\u7387\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\t332\n13.28 \u600e\u6837\u9009\u53d6\u53ef\u907f\u514d\u504f\u5dee\u53ca\u8d1d\u53f6\u65af\u9519\u8bef\u7387\uff1f\t332\n13.29 \u600e\u6837\u51cf\u5c11\u65b9\u5dee\uff1f\t333\n13.30 \u8d1d\u53f6\u65af\u9519\u8bef\u7387\u7684\u6700\u4f73\u4f30\u8ba1\t333\n13.31 \u4e3e\u673a\u5668\u5b66\u4e60\u8d85\u8fc7\u5355\u4e2a\u4eba\u7c7b\u8868\u73b0\u51e0\u4e2a\u4f8b\u5b50\uff1f\t334\n13.32 \u5982\u4f55\u6539\u5584\u4f60\u7684\u6a21\u578b\uff1f\t334\n13.33 \u7406\u89e3\u8bef\u5dee\u5206\u6790\t335\n13.34 \u4e3a\u4ec0\u4e48\u503c\u5f97\u82b1\u65f6\u95f4\u67e5\u770b\u9519\u8bef\u6807\u8bb0\u6570\u636e\uff1f\t336\n13.35 \u5feb\u901f\u642d\u5efa\u521d\u59cb\u7cfb\u7edf\u7684\u610f\u4e49\uff1f\t336\n13.36 \u4e3a\u4ec0\u4e48\u8981\u5728\u4e0d\u540c\u7684\u5212\u5206\u4e0a\u8bad\u7ec3\u53ca\u6d4b\u8bd5\uff1f\t337\n13.37 \u5982\u4f55\u89e3\u51b3\u6570\u636e\u4e0d\u5339\u914d\u95ee\u9898\uff1f\t338\n13.38 \u68af\u5ea6\u68c0\u9a8c\u6ce8\u610f\u4e8b\u9879\uff1f\t340\n13.39 \u4ec0\u4e48\u662f\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.40 \u4ec0\u4e48\u662f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.41 \u4ec0\u4e48\u662f\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.42 \u600e\u4e48\u914d\u7f6emini-batch\u68af\u5ea6\u4e0b\u964d\t342\n13.43 \u5c40\u90e8\u6700\u4f18\u7684\u95ee\u9898\t343\n13.44 \u63d0\u5347\u7b97\u6cd5\u6027\u80fd\u601d\u8def\t346\n\u7b2c\u5341\u56db\u7ae0 \u8d85\u53c2\u6570\u8c03\u6574\t358\n14.1 \u8c03\u8bd5\u5904\u7406\t358\n14.2 \u6709\u54ea\u4e9b\u8d85\u53c2\u6570\t359\n14.3 \u5982\u4f55\u9009\u62e9\u8c03\u8bd5\u503c?\t359\n14.4 \u4e3a\u8d85\u53c2\u6570\u9009\u62e9\u5408\u9002\u7684\u8303\u56f4\t359\n14.5 \u5982\u4f55\u641c\u7d22\u8d85\u53c2\u6570\uff1f\t359\n\u7b2c\u5341\u4e94\u7ae0 \u5f02\u6784\u8ba1\u7b97\uff0c GPU\u548c\u6846\u67b6\u9009\u578b\u6307\u5357 361\n15.1 \u4ec0\u4e48\u662f\u5f02\u6784\u8ba1\u7b97\uff1f\t361\n15.2 \u4ec0\u4e48\u662fGPGPU\uff1f\t361\n15.3 GPU\u67b6\u6784\u7b80\u4ecb\t361\n15.3.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528GPU\uff1f\n15.3.2 CUDA \u6838\u5fc3\u662f\u4ec0\u4e48\uff1f\n15.3.3 \u65b0\u56fe\u7075\u67b6\u6784\u91cc\u7684tensor core\u5bf9\u6df1\u5ea6\u5b66\u4e60\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n15.3.4 GPU\u5185\u5b58\u67b6\u6784\u548c\u5e94\u7528\u6027\u80fd\u7684\u8054\u7cfb\uff1f\n15.4 CUDA \u6846\u67b6\n15.4.1 \u505aCUDA\u7f16\u7a0b\u96be\u4e0d\u96be\uff1f\n15.4.2 cuDNN\n15.5 GPU\u786c\u4ef6\u73af\u5883\u914d\u7f6e\u63a8\u8350\n15.5.1 GPU\u4e3b\u8981\u6027\u80fd\u6307\u6807\n15.5.2 \u8d2d\u4e70\u5efa\u8bae\n15.6 \u8f6f\u4ef6\u73af\u5883\u642d\u5efa\n15.6.1 \u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\uff1f\n15.6.2 \u672c\u673a\u5b89\u88c5\u8fd8\u662f\u4f7f\u7528docker\uff1f\n15.6.3 GPU\u9a71\u52a8\u95ee\u9898\n15.7 \u6846\u67b6\u9009\u62e9\n15.7.1 \u4e3b\u6d41\u6846\u67b6\u6bd4\u8f83\n15.7.2 \u6846\u67b6\u8be6\u7ec6\u4fe1\u606f\n15.7.3 \u54ea\u4e9b\u6846\u67b6\u5bf9\u4e8e\u90e8\u7f72\u73af\u5883\u53cb\u597d\uff1f\n15.7.4 \u79fb\u52a8\u5e73\u53f0\u7684\u6846\u67b6\u5982\u4f55\u9009\u62e9\uff1f\n15.8 \u5176\u4ed6\n15.8.1 \u591aGPU\u73af\u5883\u7684\u914d\u7f6e\n15.8.2 \u662f\u4e0d\u662f\u53ef\u4ee5\u5206\u5e03\u5f0f\u8bad\u7ec3\uff1f\n15.8.3 \u53ef\u4ee5\u5728SPARK\u73af\u5883\u91cc\u8bad\u7ec3\u6216\u8005\u90e8\u7f72\u6a21\u578b\u5417\uff1f\n15.8.4 \u600e\u4e48\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\uff1f\n15.8.5 TPU\u548cGPU\u7684\u533a\u522b\uff1f\n15.8.6 \u672a\u6765\u91cf\u5b50\u8ba1\u7b97\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7b49AI\u6280\u672f\u7684\u5f71\u54cd\uff1f\n\u53c2\u8003\u6587\u732e\t366\nhey you look like a cool developer.\nTranslate it in english.\n","40":"English | \u7b80\u4f53\u4e2d\u6587\nHacker Scripts\nBased on a true\nstory:\n\nxxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.\n\n\nxxx: So we're sitting here, looking through his, uhm, \"legacy\"\n\n\nxxx: You're gonna love this\n\n\nxxx: smack-my-bitch-up.sh - sends a text message \"late at work\" to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.\n\n\nxxx: kumar-asshole.sh - scans the inbox for emails from \"Kumar\" (a DBA at our clients). Looks for keywords like \"help\", \"trouble\", \"sorry\" etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply \"no worries mate, be careful next time\".\n\n\nxxx: hangover.sh - another cron-job that is set to specific dates. Sends automated emails like \"not feeling well\/gonna work from home\" etc. Adds a random \"reason\" from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.\n\n\nxxx: (and the oscar goes to) fucking-coffee.sh - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like sys brew. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.\n\n\nxxx: holy sh*t I'm keeping those\n\nOriginal: http:\/\/bash.im\/quote\/436725 (in Russian)\nPull requests with other implementations (Python, Perl, Shell, etc) are welcome.\nUsage\nYou need these environment variables:\n# used in `smack-my-bitch-up` and `hangover` scripts\nTWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nTWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n\n# used in `kumar_asshole` script\nGMAIL_USERNAME=admin@example.org\nGMAIL_PASSWORD=password\nFor Ruby scripts you need to install gems:\ngem install dotenv twilio-ruby gmail\nCron jobs\n# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.\n20 21 * * 1-5 \/path\/to\/scripts\/smack-my-bitch-up.sh >> \/path\/to\/smack-my-bitch-up.log 2>&1\n\n# Runs `hangover.sh` monday to friday at 8:45 am.\n45 8 * * 1-5 \/path\/to\/scripts\/hangover.sh >> \/path\/to\/hangover.log 2>&1\n\n# Runs `kumar-asshole.sh` every 10 minutes.\n*\/10 * * * * \/path\/to\/scripts\/kumar-asshole.sh\n\n# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.\n0 9-18 * * 1-5 \/path\/to\/scripts\/fucking-coffee.sh\n\nCode is released under WTFPL.\n","41":"Awesome Mac\n  \n\n \n\uf8ff Now we have become very big, Different from the original idea.\nCollect premium software in various categories. Feel free to star and fork.\nAny comments, suggestions? Let us know!. We love PRs :) Please take a look at the Contributing guidelines before opening one. Follow the awesome list.\nExplanation\nEnglish | \u4e2d\u6587\n means open source, click to open open source repo;\n means free to use, or free personal license;\n means App store hyperlink;\n means hyperlink to a corresponding Awesome list for the item;\nAwesome Mac App for macOS. Installers for the latest stable build for Mac can be downloaded here.\n\nContents\n\nAwesome Mac\nContents\nReading and Writing Tools\n\nText Editors\nOffice\nMarkdown Tools\nNote-taking\nJournaling\nEbooks\nRSS\nOthers\n\n\nDeveloper Tools\n\nIDEs\nDeveloper Utilities\nRegular Expression Editors\nAPI Development and Analysis\nNetwork Analysis\nCommand Line Tools\nFrameworks For Hybrid Applications\nVersion Control\nVirtualization\nDatabases\n\n\nDesign and Product\n\nDesign Tools\nPrototyping and Mind-Mapping Tools\nScreencapturing Software\nOther Tools\n\n\nCommunication\n\nCollaboration and Team Tools\nEmail Clients\nFile Sharing\n\n\nData Recovery Tools\nAudio and Video Tools\nDownload Management Tools\nCloud Storage\nInput Methods\nBrowsers\nTranslation Tools\nEncryption\nSecurity Tools\nProxy and VPN Tools\nUtilities\n\nClipboard Tools\nMenu Bar Tools\nFile Organization Tools\nGeneral Tools\nTo-Do Lists\nProductivity\nWindow Management\nPassword Management\nFinder Tools\nQuality of Life Improvements\nSystem Related Tools\n\n\nGaming Software\nRemote Login Software\nSocial Networking\nQuickLook Plugins\nThird Party App Markets\n\nPackage Managers\n\n\nMac App Download Sites\n\nGenuine Sites\nPirated software download site blacklist\n\n\nPodcasts\nContributors\nBackers\nSponsors\nLicense\n\nReading and Writing Tools\nApplications to edit text, I suggest the open-source editors\nText Editors\n\nAtom - Hackable text editor for the 21st century made by GitHub. Atom Plugins.   \nBear Writer - Beautiful, flexible writing app for crafting notes and prose. \nBootstrap Studio - A powerful desktop app for creating responsive websites using the Bootstrap framework.\nBrackets - A modern, open source text editor that understands web design.  \nChocolat - Native text editor.\nCoda2 - Fast, clean and powerful text editor.\nCotEditor - Lightweight plain-text editor for macOS.  \nEmacs - A popular text editor used mainly on Unix-based systems by programmers, scientists, engineers, students, and system administrators.   \nLightTable - The next generation code editor.  \nmicro - Modern and intuitive terminal-based text editor.  \nNova - Modern, extensible text editor, by the makers of Coda.\nONI - IDE powered by Neovim.  \nSublime Text - Sophisticated text editor for code, markup and prose. You'll love the slick user interface, extraordinary features and amazing performance, Sublime Text Plugins. \nTextMate - Editor that brings Apple's approach to operating systems into the world of text editors.  \nVim - Highly configurable text editor built to make creating and changing any kind of text very efficient, Vim Plugins.   \nVimr - Refined Vim Experience for OS X.  \n\nOffice\n\nLibreOffice - LibreOffice is free and open-source software office software. Software is tested and used daily by a large and devoted user community.  \nOpenOffice - Compatible with other major office suites, Apache OpenOffice is free to download, use and distribute.  \nWPS - Is a cross-platform office software suite. \nPages Documents that stand apart.  \nKeynote Build stunning presentations.  \nNumbers Create impressive spreadsheets.  \nMicrosoft Office Unmistakably Office, designed for Mac. \nSoftMaker Office A complete office suite that aims for full compatibility with Microsoft Office documents\n\nMarkdown Tools\n\n\n\n\nEME - Open-source Markdown editor with an interface like Chrome. \niA Writer - Writing app with an emphasis on simplicity and design.\nLightPaper - Simple, beautiful, yet powerful text editor for your Mac.\nMacDown - Open-source Markdown editor for OS X.   \nMarked 2 - This is the Markdown preview with an elegant and powerful set of tools for all writers.\nMarkText - Next generation markdown editor, running on platforms of MacOS Windows and Linux.  \nMarp - Markdown presentation writer with cross-platform support.  \nMarxico - Delicate Markdown editor for Evernote. Reliable storage and sync.\nMWeb - Pro Markdown writing, and static blog generator App.\nTextNut - Rich-format editor featuring Markdown export and Markdown syntax hints. \nTypora - Truly minimal Markdown editor featuring seamless live preview. \nUlysses - The Ultimate Writing App for Mac, iPad and iPhone.\n\nNote-taking\n\nAgenda - Date-focused note taking app for both planning and documenting your projects. \nBoostnote - Note-taking app made for programmers. \nDnote - A simple command line notebook with multi-device sync and a web interface.  \nEvernote - Infamous note-taking app, available on many platforms. \nFSNotes - File System Notes is a modern notes manager, native on macOS and iOS.  \nGooba - Writing app and task manager with a simple and interactive design.\nInkdrop - Notebook app for Markdown lovers built on top of Electron.\nJoplin - Cross platform open-source notepad with markdown support and todo list manager with synchronisation capabilities.  \nMarginNote - In-depth PDF and EPUB reading, learning, managing and note taking app.\nNotable - The markdown-based note-taking app that doesn't suck.\nNotebook Note-taking app. \nNotes - Clean, simple note-taking app.  \nNotion -Notion is the all-in-one workspace. From notes, tasks, wikis, to database, Notion is all you need. Works great for teams and individuals.\nObsidian - Obsidian is a powerful knowledge base that works on top of a local folder of plain text Markdown files.\nOneNote - Note-taking app by Microsoft. \nQOwnNotes - Open-source notepad with markdown support and todo list manager.  \nQuiver - The Programmer's Notebook, lets you easily mix text, code, Markdown and LaTeX within one note, edit code with an awesome code editor and live preview Markdown and LaTeX.\nAliYuQue - Cloud note-taking knowledge management, collaboration platform, Markdown based writing, support embedded flow chart, brain diagram, timing sequence, code rendering, Sketch board creation, personal knowledge sharing, etc. Compared to youdao cloud note and evernote similar products, which include all of its functions, support knowledge sharing and more powerful creation, collaboration and editor, it comes from alibaba ant financial.\n\nJournaling\n\nDay One - Excellent journaling app using text, photos, video, audio, location data, and more. \nJourney - Journaling app with many features and with apps for every platform available. \n\nEbooks\n\nCalibre - Free and open-source e-book computer software application suite which runs on multiple platforms, allows users to manage e-book collections as well as create, edit, and read e-books.  \nClearview - Tabbed style e-book reader for PDF, EPUB (DRM free), CHM, and MOBI.\niChm - Ebook reader for CHM (Microsoft Compiled HTML help) files.  \nKindle App - Amazon official reading app of kindle.\nKlib - New way to manage highlights for Kindle and iBooks.  \nScribus - Professional layout and publishing software supporting EPS and SVG import\/export, and PDF support.   \nSigil - Multi-platform EPUB ebook Editor.  \n\nRSS\n\nLeaf - Amazing news reader dedicated to help you enjoy your daily news and easily manage your subscriptions.\nNetNewsWire - It\u2019s a free and open source feed reader for macOS.  \nReadKit - Mac read-later client supporting all major providers: Instapaper, Pocket and Readability. Even more, ReadKit is a full-featured RSS reader as well.\nReeder 4 - News reader for Feedbin, Feedly, Feed Wrangler and so on. \nVienna - RSS\/Atom reader for Mac OS X.  \nFeedy - An elegant and lightweight RSS client and news reader for your Mac. \n\nOthers\n\nbindPDF - Combine multiple PDF files into a single PDF file using a friendly UI.  \nCHM Reader - Read Compiled HTML (.chm) documents on your Mac. \nChmox - Read CHM documents on your Mac. \nPDF Expert - Read, annotate and edit PDFs, change text and images.\nPDF Reader Pro - You Can view, create, sign, convert and compress any PDF documents. \nSkim - PDF reader and note-taker for OS X.  \nSkyFonts - The simplest way to try, install, and manage fonts.\nSpillo - Powerful, beautiful and amazingly fast Pinboard client for OS X.\nTad - Application for viewing and analyzing tabular data such as CSV files.  \ntexpad - Great LaTeX editor for Mac with auto-update PDF and autocomplete LaTeX commands.\n\nDeveloper Tools\nIDEs\n\nAndroid Studio - The official IDE for Android, based on Intellij IDEA.   \nDeco IDE - The best IDE for building React Native apps.  \nEclipse - Popular open-source IDE, mainly for Java but with plugin support for a wide array of languages and platforms.  \nEspresso - The web editor for Mac is back. For people who make delightful, innovative and fast websites.\nJetBrains Toolbox App - Manage installed JetBrains tools, download new ones and open recent projects. \n\nAppCode - Smart IDE for iOS\/macOS development\nCLion - Powerful C and C++ IDE. (Free for Students)\nDataGrip - Cross-Plaform IDE for Databases and SQL. FREE for Students, check here for more info.\nGoLand - Provides ergonomic environment for Go development.\nIntelliJ IDEA - Powerful IDE for JVM languages. (Free for Students)\nPyCharm - Powerful Python IDE, which has professional version and community version.\nRider - Cross-Platform C# IDE. It is an alternative to Visual Studio by Microsoft with the additional benefit of getting Resharper features that are not available on Visual Studio for Mac.\nWebStorm - The smartest JavaScript IDE by JetBrains. FREE for Students, check here for more info.\n\n\nHaskell for Mac - A Modern Development Environment for Haskell. \nNetBeans IDE - Free and open-source IDE, mainly used for Java development, but supports many other languages and frameworks.  \nVisual Studio Community for Mac - Fully-featured IDE Free for students, open-source and individual developers. \nVisual Studio Code - Microsoft's free & open-source editor, TypeScript friendly, VSCode Plugins.   \nXamarin Studio - Free cross platform C# IDE. Xamarin Studio supports iOS, Android and .Net development   \nXcode - Essential IDE for iOS\/macOS development. \nSpyder - Powerful scientific environment written in Python, for Python.\n\nDeveloper Utilities\n\nBetterRename - The most powerful and complete Mac file renaming application on the market. \nBeyond Compare - Compare files and folders using simple, powerful commands that focus on the differences you are interested in and ignore those you are not. \nBidbar - Manage bash commands from the menu bar and run them with keyboard shortcuts.\nCacher - Cloud-based, team-enabled code snippet manager with Gist sync, VSCode\/Atom\/Sublime packages and Mac\/Windows\/Linux\/Web clients.\ncanSnippet - Powerful snippet management tool that works across the whole operating system, always accessible via simple keyboard shortcut.\nCodeKit - Web development tool which can automatically compile Less, Sass, CoffeeScript, TypeScript, Jade and JavaScript, auto-refresh browsers and much more.\nConduktor - Kafka desktop client.  \nDash - Awesome API documentation browser and code snippet manager.\nDiffMerge - Application to visually compare and merge files. \nEnvPane - OS X preference pane for environment variables.  \nFinderGo - Open terminal quickly from Finder.  \nFinicky - Application that allows you to set up rules that decide which browser is opened for every link that would open the default browser.  \nGas Mask - Simple hosts file manager for Mac OS X.  \nGemini - Intelligent duplicate file finder.\nHex Fiend - Fast and clever open source hex editor.   \nHosts.prefpane - System preference pane to manage your hosts file.  \niHosts - The only \/etc\/hosts editor on Mac App Store.  \nIntegrity - Free website link checker for Mac. \nKaleidoscope - Powerful compare tool for text, images and folders. Works perfectly with git, svn or other version control tools.\nKoala - GUI application for Less, Sass, Compass and CoffeeScript compilation.  \nLoca Studio - Analyze, review, and edit app translations. Supports Xcode Localization Catalog (xcloc) and XLIFF 1.2 file formats. \nMacSystemColors - Mac app that shows all system colors in light and dark mode for Cocoa developers.  \nMJML - Framework that utilizes a semantic syntax and a rich standard components library, which allow users to easily create responsive emails.  \nPaintCode - PaintCode is a unique vector drawing app that generates Objective-C or Swift code in real time, acting as a bridge between developers and graphic designers.\nPPRows - Application to calculate how many lines of code you write.  \nPushMate PushMate is a MacOS app that solves common push notification problems by ensuring your push payloads are correct.\nSCM Breeze - Set of shell scripts (for bash and zsh) that enhance your interaction with git.  \nSecureCRT - Terminal emulation which supports SSH, Telnet or other protocols.\nSite Sucker - SiteSucker is a Macintosh application that automatically downloads websites from the Internet. \nSnippetsLab - Easy-to-use code snippets manager.\nSolarized - Clean and beautiful color theme. Works well with iTerm, JetBrains products, Vim etc.\nStarUML - Powerful UML app.\nSwiftify - Objective-C to Swift code converter and Xcode & Finder extensions.\nSwitchHosts - Free and open-source app for hosts management & switching.  \nSYM - GUI Application to symbolicate iOS crash log.  \nTeXstudio - Integrated writing environment for creating LaTeX documents.  \nTimelane - Visually profile your asynchronous code.  \nTouch Bar Simulator - Use the Touch Bar on any Mac.  \nVisual Paradigm - All-in-one UML, SysML, BPMN Modeling Platform for Agile, EA TOGAF ADM Process Management.\nWoodpecker - View iOS app's Sandbox files, UserDefaults, Keychain items on a Mac. \nWWDC - The Mac OS unofficial WWDC app.  \nzeplin - Collaboration tool for work between designers and developers. \nNib Unlocker - .nib to .xib converter \n\nRegular Expression Editors\n\nPatterns - Regular expression editor.\nRegex - Regular expression testing tool with an emphasis on simplicity.\nRegExRX - Development tool for regular expressions.\n\nAPI Development and Analysis\n\nCocoa Rest Client - Free, open-source, native Apple OS X app for testing HTTP\/REST endpoints.  \nInsomnia - The most intuitive cross-platform REST API Client.  \nPaw - Advanced HTTP client.\nPostman - Powerful GUI platform to make your API development faster & easier, from building API requests through testing, documentation and sharing.\nKatalon Studio - Simplify API, Web, Mobile Automation Tests Free. Robust. Cross-platform. Automation testers from 160 countries with YouTube channels, GitHub repositories.\n\nNetwork Analysis\n\nCharles - HTTP proxy \/ HTTP monitor \/ Reverse Proxy that enables a developer to view all of the HTTP and SSL \/ HTTPS traffic between their machine and the Internet.\nJames - Open-source proxy tool for checking and mapping requests with http as well as https.  \nLittle Snitch - Network monitor with a world map for visualizing network connections.\nmitmproxy - Interactive intercepting HTTP proxy for penetration testers and software developers.  \nProxie - HTTP debugging proxy. \nProxyman - Modern and intuitive HTTP debugging proxy for macOS. \nWireshark - The world\u2019s foremost and widely-used network protocol analyzer.  \n\nCommand Line Tools\n\n\n\n\nack - A tool like grep, optimized for programmers. \nalacritty - A cross-platform, GPU-accelerated terminal emulator.  \narchey-osx - An archey script for OS X.  \nasciinema - Easily record terminal sessions and replay them in a terminal as well as in a web browser.  \nautojump - Replace cd with an intelligent autojump to easily navigate directories from the command line.  \nbash-it - Shameless ripoff of oh-my-zsh for bash.  \nbat - A cat(1) clone with syntax highlighting and Git integration.  \nccat - The colorizing cat which works similar to cat but displays content with syntax highlighting.  \ncmus - Small, fast and powerful console music player for Unix-like operating systems.  \ncool-retro-term - Good looking terminal emulator which mimics the old cathode display.  \ndark-mode - Control dark mode from the command-line.  \neureka - CLI tool to input and store your ideas without leaving the terminal.  \nFish Shell - Smart and user-friendly terminal, which is similar with zsh. \nfselect - Find files with SQL-like queries. \nGithub CLI - gh is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.  \nGlances - Glances is a cross-platform curses-based system monitoring tool.  \nGo2Shell - Go2Shell opens a terminal window to the current directory in Finder.  \nhtop - htop is an interactive text-mode process viewer for Unix systems. It aims to be a better 'top'.  \nhttpie - Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  \nhyper - A terminal built on web technologies.  \niTerm2 - iTerm2 is an amazing terminal emulator for OS X.  \nitunes-remote - Software for controlling iTunes via the terminal.  \njob - JOB, make your short-term command as a long-term job.  \nkitty - A cross-platform, fast, feature full, GPU based terminal emulator.  \nlnav - A log file navigator.  \nm-cli - Swiss Army Knife for macOS.  \nMac-CLI - The ultimate tool to manage your Mac. Automatize the usage of your OS X system.  \nMagic Wormhole - Get Things From One Computer To Another, Safely.  \nmas - Simple command line interface for the Mac App Store.  \nMiller - Like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON.  \nmycli - CLI for MySQL that can do auto-completion and syntax highlighting.  \nndm - Manage npm straight from the couch.  \nnushell - nushell is a modern, GitHub-era shell written in Rust.  \npgcli - Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting.  \nRebound - Instantly browse Stack Overflow results in your terminal when you get a compiler error.  \nSerial - Full-featured serial terminal for the Mac.\nshallow-backup - Easily create text documentation of installed applications, dotfiles, and more.  \nsilver searcher (ag) - A code searching tool similar to ack, with a focus on speed.  \nspaceship - A Zsh prompt for Astronauts.  \nTaskbook - Tasks, boards & notes for the command-line habitat.  \nTerminus - Free terminal tool, built with TypeScript, heavily inspired by Hyper.  \nTermius - Free terminal tool,comparable to xshell on windows platform. \nTextQL - Execute SQL against structured text like CSV or TSV.  \ntmux - \"Terminal multiplexer\", it enables a number of terminals (or windows) to be accessed and controlled from a single terminal. tmux is intended to be a simple, modern, BSD-licensed alternative to programs such as GNU screen. \ntmuxinator - Manage complex tmux sessions easily. \ntrash - Move files and directories to the trash. \nVisiData - Terminal spreadsheet multitool for discovering and arranging data.  \nxonsh - Python-powered, cross-platform, Unix-gazing shell language and command prompt.  \nZsh - Zsh is a shell designed for interactive use, although it is also a powerful scripting language.   \nxxh - Bring your favorite shell wherever you go through the SSH.  \n\nFrameworks For Hybrid Applications\n\nAppJS - Lightweight JavaScript UI library for creating mobile webapps that behave like native apps.  \ncreate-dmg - Create a good-looking DMG for your macOS app in seconds.  \nElectrino - Desktop runtime for apps built on web technologies, using the system's own web browser engine.  \nElectron - Build cross platform desktop application with JavaScript, HTML and CSS.  \nionic - Build amazing native and progressive web apps with Angular and open web technologies. One app running on everything.  \nMacGap - Provides a lightweight JavaScript API for OS X integration, such as displaying native notifications or writing data to a file.  \nnw.js - Build desktop application with HTML and JavaScript. It lets you call all Node.js modules directly from DOM and enables a new way of writing applications with all Web technologies.  \nQt - Cross-platform application framework.\nReact Native for Ubuntu - Build Ubuntu desktop apps using React Native.  \nReact Native macOS - Build OS X desktop apps using React Native and Cocoa.  \nreact-desktop - React UI Components for macOS Sierra.  \nReactXP - Microsoft official production, support platform Web, iOS, Android and Windows UWP is still an ongoing work.  \n\nVersion Control\n\nCornerstone - Powerful version control with a gorgeous interface.\nFork - Fast and friendly Git client for Mac. \nGit Cola - Powerful, Fast, Lightweight and Friendly Git GUI. For those caffeine adicting users. \nGitbar - Open-source\uff0cdisplay Github contribution statistics on your menu bar.  \nGitFinder - Fast and lightweight Git client for Mac with Finder integration. \nGitfox - Commit faster, improve your code quality with superior diffs - and look good doing it. \nGitHub Desktop - The official GitHub GUI.  \nGitKraken - The most popular Git GUI for Windows, Mac and Linux.\nGitX-dev -  Fork of Pieter's nice git GUI for OS X. Includes branch\/tag sidebar and various fixes.  \nHub - Command-line wrapper for Git that makes you better at GitHub.  \nOhMyStar Beautiful and efficient way to manage, explore and share your Github Stars.  \nSmartGit - Git client with support.\nSourceTree - Free Git & Mercurial client for Windows or Mac. \nSublime Merge -  Git client, from the makers of Sublime Text.\nTower2 - The most powerful Git client for Mac and Windows.\nVersions - Mac Subversion (SVN) Client.\nGitUp - A simple & powerful Git client\u3002 \n\nVirtualization\n\nDocker - Powerful, performs operating-system-level virtualization.   \nParallels - Powerful, easy-to-use VM. No free upgrade for each new Mac OS.\nVagrant - Tool for building and distributing development environments.   \nVeertu - The lightest VM on Mac. Responsive, sandboxed & native way to run VM on your Mac. \nVirtual Box - Powerful x86 and AMD64\/Intel64 virtualization product. \nVMware Fusion - Powerful, commercial VM developed by VMware.\n\nDatabases\n\nApache Directory Studio - LDAP browser and Active Directory client.  \nAzure Data Studio - Cross-platform database tool for using on Microsoft family on-premises and cloud data platforms such as MSSQL Server \nBase 2 - Application for creating, designing, editing and browsing SQLite 3 database files.\nBdash - Modern SQL client application, supports MySQL, PostgreSQL (Redshift) and  BigQuery.  \nChrome MySQL Admin - Powerful Chrome app to manage your MySQL.  \nCore Data Editor - Core Data Editor lets you easily view, edit and analyze applications\u2018 data.  \nDB Browser for SQLite - Official home of the DB Browser for SQLite.  \nDBeaver - Universal SQL Client.\nElectroCRUD - Modern MySQL CRUD application.  \nFastoNoSQL - Cross-platform GUI client for Redis, Memcached, SSDB, LevelDB, RocksDB, UnQLite, LMDB, ForestDB, Pika and Dynomite key-value databases.  \nFastoRedis - Cross-platform professional GUI management tool for Redis.  \nJackDB - Secure, collaborative environment for your queries and data-driven insights.  \nKeylord - Desktop GUI client for Redis, Bolt, LevelDB and Memcached key-value databases.\nMDB Explorer - MDB tool to open, read, export your MDB files to other formats and databases.\nMedis - GUI Manager for Redis. \nMingo - Easy to use MongoDB GUI with mind-blowing features.\nMongo Management Studio - Simple MongoDB GUI.\nmongoDB.app - The easiest way to get started with mongoDB on the Mac.  \nMongoDB - MongoDB is a document database with the scalability and flexibility that you want with the querying and indexing that you need.   \nMySQL Workbench - The official MySQL GUI.\nNavicat Data Modeler - Powerful and cost-effective database design tool which helps you build high-quality conceptual, logical and physical data models. \nneo4j - The leading graph database!  \npgModeler -  is an open source data modeling tool designed for PostgreSQL.  \nPostgres.app - The easiest way to get started with PostgreSQL on the Mac.  \nPostico - Modern PostgreSQL client for Mac.\nPSequel - PostgreSQL GUI tool for Mac OS X. \nRedisClient - Redis client application on mac, windows and linux.  \nRedisDesktopManager - Cross-platform GUI management tool for Redis.  \nSequel Pro - MySQL database management for Mac OS X.  \nSQLight - SQLite database manager tool. \nSQLPro Studio - Simple, powerful database manager for macOS.\nTableau Public - Free data-visualization software. \nTablePlus - Supports: PostgreSQL, MySQL, RedShift, MariaDB... High-end security ensured.  \n\nDesign and Product\nDesign Tools\n\nAcorn - Great Mac OS X picture and photo editor, built for humans.\nAffinity Designer - Professional graphic design software for Mac.\nAffinity Photo - Professional image editing software for Mac.\nAlchemy - Experimental, open-source drawing application with an emphasis on creating conceptual art. \nAmadine - A vector drawing app that has everything a graphic designer needs wrapped in an uncluttered and intuitive interface.\nArt Text 3 - This is graphic design software specifically tuned for lettering, typography, text mockups and various artistic text effects.\nBlender - Free and open 3D creation software.  \nColorpicker - Colorpicker is a complete open-source colors manipulation tool with picking!  \nFigma - The collaborative interface design tool, for vector graphics and UI prototyping. \nFontForge - Free, open-source font editor.  \nGIMP - The GNU Image Manipulation Program. \nGravit Designer - Full featured free vector design app right at your fingertips.  \ninklet - Turn your Mac trackpad into drawing board.\nInkscape - Professional vector graphics editor. \nKrita - Open-source digital painting software for concept artists, digital painters, and illustrators.  \nmacSVG - Designing HTML5 SVG art and animation.  \nMagicaVoxel - Free, lightweight 8-bit voxel editor and interactive path tracing renderer.\nMakeHuman - Powerful and free 3D human modeler. \nMonodraw - Powerful ASCII art editor designed for the Mac. \nNik Collection - Nik Collection by DxO.\nPaintbrush - Bitmap image editor.  \nPencil2D - A easy, intuitive tool to make 2D hand-drawn animations.  \nPixel Perfect - Tool to overlay design images over implementation and make it pixel perfect.  \nPixelmator - Full-featured image editor for Mac.\nPrinciple -  Application for designing animated and interactive user interfaces.\nScreenToLayers- Easily export your screen into a layered PSD file.   \nSculptris - 3D sculpting software. \nSketch - Professional digital design for mac.\n\nSketch Cache Cleaner - Deletes hidden Sketch history files that can take a lot of space on your hard drive and that you would probably never use.  \nMeasure Plugin - Make it a fun to create spec for developers and teammates.  \nSketch Toolbox Plugin Manager - Simple plugin manager for Sketch.  \nUser Flows Plugin -  Generating flow diagrams from Artboards.  \n\n\nSketchBook - Drawing software for concept design, comic art, and digital sketching. \nSparkle - Pro visual web design.\nTayasui Sketches - Professional drawing software.\nVectr - Free graphics editor used to create vector graphics easily and intuitively. \n\nPrototyping and Mind-Mapping Tools\n\nAdobe XD (Experience Design) - First all-in-one cross-platform tool for designing and prototyping websites and mobile apps.\nAxure RP 8 - Prototypes, specifications and diagrams in one tool.\nBalsamiq Mockups - Wire-framing tool that helps you work faster and smarter.\nFlinto - Quickly create interactive prototypes of mobile, desktop, or web apps.\nFramer - Tool for interactive prototyping.\nJustinmind - Prototyping platform for web and mobile apps.\nKite - Powerful animation and prototyping application for Mac & iOS.\nLighten - The best way to clarify thinking, boost productivity, brainstorm, and visualize concepts.\nLoremify - Great Lorem ipsum generator.\nMarvel - Simple design, prototyping and collaboration.\nMindNode - Mind-mapping software with an emphasis on simplicity and ease-of-use.\nMockFlow - Online prototyping suite for web-design and usability testing.\nMockplus - Prototype faster, smarter and easier.\nOmniGraffle - Diagramming and graphic design for Mac, iPhone, and iPad.\nOrigami Studio -  Tool for designing modern interfaces, built and used by designers at Facebook.\npencil - Free, open-source tool for making diagrams and GUI prototyping.  \nProtoPie - Create the most advanced prototypes as easy as Pie.\nScapple - Practical mind-mapping software with free whiteboard-like layout.\nSimpleMind - The world leader in cross platform Mind Mapping tools.\nWriteMapper - Get from idea to final draft in no time.\nXMind - The most popular mind-mapping tool on the planet.\nSimple Diagrams - A desktop app for creating hand-drawn-like, fast, clear sketches of problems, processes, workflows, ideas and more!\nyGraph Editor - High quality diagrams made easy.\n\nScreencapturing Software\n\nCleanShot - Discover a superior way to capture your Mac's screen.\nCloudApp - Work at the speed of sight. \nGifox - Gif Recording and Sharing. \nKap - Open-source screen-recorder built with web technology.  \nKeyCastr - KeyCastr, an open-source keystroke visualizer.  \nKyapchar - Simple screen and microphone audio recorder for Mac.  \nLicecap - Record your screen and export to GIF. You can change the recording area anytime during recording.  \nLightshot - The fastest way to take a customizable screenshot. \nMonosnap - Make screenshots. Draw on it. Shoot video and share your files. It's fast, easy and free.  \nScreenShot PSD - Capture the screen as a layered PSD for easy editing.  \nSkitch - Screen capture application with a powerful annotation capabilities. \nSnip - Application for sharing captured images on QQ Mail. \nSnipaste -  Simple but powerful snipping tool. \nTeampaper Snap - Let your screenshots speak up.  \nXnip - Handy Screenshot App.  \nDropbox - Dropbox app offers easy screenshot capturing and sharing \n\nOther Tools\n\nAPNGb - PNG image assembler\/disassembler app.  \nAssetizr - Resizing images and optimising them for web and mobile applications.   \nCouleurs - Simple app for grabbing and tweaking the colors you see on your screen. \nExifCleaner - Remove exif metadata from images and videos with drag and drop.  \nFrank DeLoupe - Color-picking tool, supports Retina.\nHEIC Converter - Convert HEIC images to JPEG or PNG.  \nIconset - Free, cross-platform and fast SVG icon organizer and manager for Mac and Windows.\nIconjar - Icon management tool to organize or search your icons.\nIconKit - App icon generator. \nImage2icon - Create and personalize icons from your pictures. \nImageAlpha - Compress images with PNG format and remove transparency.  \nImageOptim - Compress images and remove EXIF information.  \niPic - Easily upload images with Markdown supported.  \nJPEGmini - Reduce image size by up to 80%, without compromising quality.  \nMark Man - Measure & Spec Fast.\nNucleo - Icon manager. Import, export, customize and convert icon libraries.\nPreset Brewery - Tool to convert Lightroom presets to Adobe Camera Raw.\nResize Master - Batch resize and watermark your images fast and easy.  \nRightFont - Preview, sync, install and manage fonts on Mac, Dropbox or Google Drive.\nSip - The best way to collect, organize & share your colors.\nSnagit - Simple, Powerful Screen Capture Software and Screen Recorder.\nSpectrum - Easily and intuitively creating beautiful color schemes. \nsvgus - Organize, clean and transform your SVGs. \nTinyPNG4Mac - Open-source tool to compress images.  \nTropy - Research Photo Management.  \nPicGo - Support for common cdn image hosting tool.  \nPreset Brewery - Tool to convert Lightroom presets to Adobe Camera Raw.\nAssetizr - Resizing images and optimising them for web and mobile applications.   \nAppIconBuilder - Export icons for multi-platform\nuPic - macOS native app, powerful terse image hosting client.  \n\nCommunication\nCollaboration and Team Tools\n\nAdium - Free instant messaging application for Mac OS X. Connect to AIM, MSN, SMPP, Yahoo and more. \nCaprine - Third-party privacy-focused Facebook Messenger app.  \nDingTalk - Free, powerful and professional office tool used by over 5 million enterprises and organizations globally. \nDiscord - All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.\nFranz - Electron based, multi-protocol wrapper for web-based chat. One application, 23 messenger services. \nGitter - Instant messaging and chat room system for developers as well as GitHub users. Developer friendly with Markdown syntax support.\nKeybase - Secure groups, files, and chat for everyone!  \nKrisp - An AI-powered noise cancelling app that mutes background noise during calls.\nLimeChat - Open-source IRC client for Mac OS X.  \nMessenger For Mac - Third-party Facebook messenger for Mac.  \nMuzzle - A simple mac app to silence embarrassing notifications while screensharing.\nRambox - Messaging and emailing app that combines common web applications into one.  \nElement - Create, share communicate. Chat and call securely.  \nSignal Desktop - Fast, simple, secure. Privacy that fits in your pocket. \nSkype - Cross-platform application that provides video chat and voice call services. Users can exchange images, text, video and any other digital documents.\nShift - De-clutter your desktop workspace and streamline your accounts, apps, and workflows.\nSlack - Awesome tool for team collaboration and communication. \nStack - Open, organize and use multiple web apps on a single screen. Stack your apps by categories or projects.\nTeambition - Team collaboration tool, including many features like task plan, schedule, file sharing, instant discussion and everything you need when collaborating with other team members. \nTelegram - Messaging app with a focus on speed and security.\nTextual - Internet Relay Chat (IRC) client. \nWeChat - Official WeChat app for Mac.  \nWeeChat - The extensible command-line chat client. \nWhatsApp Desktop - Available in the Mac App Store, Whatsapp for Desktop. \n\nEmail Clients\n\nAirmail - Fast email client. For both Mac OS and iOS.\nFoxmail - Fast email client. \nMailTags - Use tags to organize email and schedule.\nN1 - Extensible, open-source mail app, free for developers and $7\/month for Pro. \nNylas Mail - Extensible desktop mail app built on the modern web.   \nPolymail - Simple, beautiful and powerful email client. \nPostbox - Powerful, simple and beautiful email client, need to pay for a license.\nSpark - Fast email client. For both Mac OS and iOS.\nThunderBird - Software that makes email easier. \nEdison Mail - A customisable, simple, and beautiful email client. \n\nFile Sharing\n\nCyberduck - Free FTP, SFTP, WebDAV, S3, Backblaze B2, Azure and OpenStack Swift browser. \nFlow - Award-winning, beautiful, fast, and reliable FTP + SFTP client.\nTransmit - Highly flexible and intuitive FTP client, supports SFTP, S3 and iDisk\/WebDAV.\n\nData Recovery Tools\n\nData Rescue - Comprehensive and professional data recovery tool for most cases.\nDiskWarrior - The world\u2019s most advanced repair and recovery tool for Mac.\nR-Studio for Mac - Powerful tool for recovering data on disks, even if their partitions are formatted, damaged or deleted.\nSuperDuper! - Painless fully bootable disk backups.\n\nAudio and Video Tools\n\nAdapter -  Free audio, video and image conversion software. \nAegisub - Free, cross-platform open source tool for creating and modifying subtitles. Aegisub makes it quick and easy to time subtitles to audio, and features many powerful tools for styling them, including a built-in real-time video preview.  \nAudio Profile Manager - Allows you to pin input\/output devices for each particular combination of connected devices. May suppress HDMI displays from being chosen. \nArdour - Cross-platform audio software for multi-track recording and editing. \nAudacity - Free, open-source, cross-platform audio software for multi-track recording and editing.  \nAudio Hijack - Record any application's audio, including VoIP calls from Skype, web streams from Safari, and much more.\nCarol - A minimal and beautiful lyrics app for macOS.  \nCog - Free, open-source audio player.  \nDaVinci Resolve  - Free, cross-platform video editing, color grading, video effects and audio editing software.\nElmedia Player - This media player is a super versatile app for any file format you probably may think of: FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V are all supported as well as many others.\nGifski - Convert videos to high-quality GIFs.   \nHandBrake - Tool for converting video from nearly any format to a selection of modern, widely supported codecs. \nHydrogen - Professional yet simple and intuitive pattern-based drum programming for GNU\/Linux. \niFFmpeg - Comprehensive Media Tool for macOS. Making High Quality Video Encoding Accessible for Everyone.\nIINA - The modern video player for macOS. Based on mpv, the powerful media player project.  \nKodi - Award-winning free and open-source (GPL) software media center for playing videos, music, pictures, games, and more.  \nLMMS Formerly \"Linux MultiMedia Studio\", LMMS is a powerful Digital Audio Workstation designed like FL Studio (formerly Fruity Loops).  \nLosslessCut - Cross platform tool for quick and lossless video and audio trimming using ffmpeg.  \nLyricsX - Lyrics for iTunes, Spotify and Vox.   \nMetadatics - Advanced Audio Metadata Editor. \nMixxx - The most advanced free DJ software.  \nMovie Catcher - Movie movie and online viewing offline download software, with Baidu cloud to make offline download and online playback. \nmpv - Free, open-source, and cross-platform media player.  \nMuseScore - Free, open-source music notation software.  \nNatron - Open-source compositing software. Node-graph based. Similar in functionality to Adobe After Effects and Nuke by The Foundry. \nPerian - (No longer under active development) Let QuickTime play all the common formats of free plug-ins. \nPlayback - Experimental video player.  \nPopcorn Time - Watch torrent movies instantly, This Popcorn Time service will never be taken down. Download and enjoy. \nScreenFlow - Screencasting and video editing software.\nShotcut - Free open-source video editor.  \nSoda Player - Player that can play seed, magnetic links, online video, automatic captions, links and local video files. \nSonora -  Minimal, beautifully designed music player.  \nSpotMenu - Spotify and iTunes in your menu bar.  \nStremio - Movies, TV shows, series, live television or web channels like YouTube and Twitch.tv - you can find all this on Stremio. \nStringed 2 - Music practice software designed to help users learn how to play their favorite songs.\nSynfig Studio - Synfig Studio is free, open-source 2D animation software.  \nVLC - Free, open-source, cross-platform multimedia player as well as framework that plays most multimedia files, DVDs, Audio CDs, VCDs and various streaming protocols.  \nVOX Player - High-definition audio player for Mac and iPhone. Music just sounds better! \nXLD - Tool to decode, convert and play various 'lossless' audio files.  \nMusicPlus - Search, play & download music for free. \nRecordia - Record audio directly from the menu bar or with a global keyboard shortcut. \n\nDownload Management Tools\n\naria2 - Lightweight multi-protocol & multi-source command-line download utility.  \nDownie - Video downloader for macOS with support for YouTube and other 1200 sites.\nDeluge - Deluge is a lightweight, Free Software, cross-platform BitTorrent client.  \nFOLX - Free download manager for Mac OS X with a true Mac-style interface. \nFree Download Manager - Powerful, modern download accelerator and organizer for Windows and Mac. (FREE) \nJDownloader - Free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be.  \nMotrix - Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, Baidu Net Disk, etc.  \nqBittorrent - A project aims to provide an open-source software alternative to \u00b5Torrent.  \nShuttle - Easy Download Manager for any links.\nTransmission - Fast, easy, free BitTorrent Client.  \nYou-Get - Tiny command-line utility to download media contents (videos, audios, images) from the web.  \nyoutube-dl - Command-line program to download videos from YouTube.com and other video sites  \n\nCloud Storage\nI recommend using online storage with Mac clients\n\nArq - Cloud storage backup client that supports AWS, GCP, DropBox, and more.\nCarbonite - Carbonite can protect your Mac from all of the most common forms of data loss.\nDropbox - File hosting service that offers cloud storage and file synchronization with collaborative edit features. \nMega - Free cloud service, offers 50GB free storage. \nNextCloud - Actively maintained fork of ownCloud, faster and completely open-source \nownCloud - Cloud storage.\nSeafile - Reliable and High Speed File Sync and Share.\n\nInput Methods\n\nKawa - Better input source switcher for OS X.  \nRocket - Makes typing emoji faster and easier using Slack-style shortcuts. \nTouch Emoji - emoji picker for MacBook Pro Touch Bar. \nType2Phone - Use Your Mac as Keyboard for iPhone, iPad & Apple TV. \n\nBrowsers\n\nBrave - Web browser with an emphasis on privacy and speed.  \nChrome - Chrome, developed by Google \nChromium - Open-source, free web browser project by Google, to provide the source code for Google Chrome.  \nMicrosoft Edge \u2014 Microsoft Edge, based on Chromium, but built by MS \nFirefox - Meet Firefox Quantum. Fast, free, open-source web browser developed by the Mozilla Foundation.  \nSafari - Native browser for Macs.  \nTorBrowser - Anonymity Online. Protect your privacy. Defend against network surveillance and traffic analysis.  \nVivaldi - The browser that puts you in control.  \n\nTranslation Tools\n(Or you could just use the Mac OS built-in dictionary)\n\nGrammarly - Refine your english\niTranslate - Translate entire website instantly with its built-in browser or with iTranslate Safari extension into over 40 languages. \nLudwig - Linguistic search engine that helps you to write better in English.\nMate Translate - Translate in Safari and any app on macOS between 103 languages.\n\nEncryption\n\nDeadbolt - The easiest file encryption tool you'll ever use. macOS-compatible, and open-source so you can trust it.  \n\nSecurity Tools\n\nBlockBlock - Me: \"Please alert me whenever anything is persistently installed.\" BlockBlock: \"You got it\"\nDylib Hijack Scanner - Simple utility that will scan your computer for applications that are either susceptible to dylib hijacking or have been hijacked.\nKextViewer - View all modules on that are loaded in the OS kernel.\nKnockKnock - See what's persistently installed on your Mac.\nLinkLiar -  Link-Layer MAC spoofing GUI for macOS.  \nLockDown - Open-source tool for El Capitan that audits and remediates security configuration settings.  \nLuLu - is the free macOS firewall that aims to block unauthorized (outgoing) network traffic.  \nMalwareBytes - Malwarebytes crushes the growing threat of Mac malware, so you are protected and your machine keeps running silky smooth. Cybersecurity smart enough for the Mac. \nOverSight - Monitor mic and webcam, alerting you when the internal mic is activated, or whenever a process accesses the webcam.\nRansomWhere? - Generic Ransomware Detection.\nstronghold - Easily configure MacOS security settings from the terminal.  \nTaskExplorer - Explore all processes running on your Mac with TaskExplorer.\nWhat's Your Sign? - Adds menu item to Finder.app to display the cryptographic signing information for any file.\n\nProxy and VPN Tools\n\nAlgo - Personal IPSEC VPN in the cloud. \ntigerVPN - VPN Client for Mac. \nLantern - Free application that delivers fast, reliable and secure access to the open internet.  \nShadowsocksX-NG - Next generation of ShadowsocksX.  \nShadowsocksX - Secure socks5 proxy, designed to protect your internet traffic.  \nShimo - VPN Client for Mac.\nSpechtLite - Rule-based proxy app for macOS.   \nSurge - Web developer tool and proxy utility for iOS 9. \ntinc - Secure mesh VPN software.  \nTunnelbear - Really simple VPN to browse the web privately & securely. Unblock websites around the world with applications for Mac, PC, iOS, Android & Chrome.\nTunnelblick - Free, open-source graphic user interface for OpenVPN on OS X. \nV2rayU - Macos client based on v2ray.  \nWindscribe - Gives 10gb per month free on the spot and gives limited(on free) location control. Connection also takes very less time.\nClashX - A rule based proxy For Mac base on Clash. \n\nUtilities\nClipboard Tools\n\nClipMenu - Clipboard manager for Mac OS X.  \nClipy - Clipy is a Clipboard extension app for macOS. Based on ClipMenu.  \nCopyQ - Clipboard Manager with Advanced Features.  \niPaste - Lightweight and efficient clipboard tool.  \nPaste - Smart clipboard history & snippets manager. \nPasteBot - Powerful clipboard manager. \nFlycut - Clean and simple clipboard manager for developers.  \nMaccy - Lightweight clipboard manager for macOS.  \n\nMenu Bar Tools\n\nAnvil - Anvil is a beautiful menubar app for managing local websites. Serve up static sites and Rack apps with simple URLs and zero configuration. \nBartender - Organize or hide menu bar icons on your Mac.\nBeardedSpice - Allows you to control web based media players (SoundCloud, YouTube, etc) and some native apps with the media keys on Mac keyboards.   \nBitBar - Place the output from any script or program right in your Mac OS X menu bar.  \nDato - A better menu bar clock with calendar, events, and time zones. \nDozer - Hide MacOS menubar items.  \nEye Timer - Take Breaks to prevent Eye Strain timer for Mac. \nHidden - A ultra-light MacOS utility that helps hide menu bar icons.  \niGlance - macOS System Monitor for the Status Bar.  \nItsycal - Tiny calendar for your Mac's menu bar.  \nMeetingBar - Menu bar app for your calendar meetings   \nStreaker - GitHub contribution streak tracking menubar app.  \nVanilla - Hide menu bar icons on your Mac. \nJiffy - Discover and share the best GIFs on GIPHY.  \n\nFile Organization Tools\n\nBetterZip 3 - Archive tool supports ZIP, TAR, TGZ, TBZ, TXZ (new), 7-ZIP, RAR. \neZip - An easy to use, feature-rich archiver for macOS. Supports popular formats such as RAR, ZIP, 7Z, BZ2, GZ etc. Works great with Mojave dark-mode and QuickLook. \nHazel - Automated file organization for your Mac. Responsibly and beautifully designed.\nKeka - file archiver for macOS. Compression: 7Z, ZIP, TAR, GZIP, BZIP2, XZ LZIP, DMG, ISO. Extraction: 7Z, ZIP, RAR, TAR, GZIP, BZIP2, XZ, LZIP, DMG, ISO, LZMA, EXE, CAB, WIM, PAX, JAR, APK, APPX, CPGZ, CPIO.   \nmuCommander - Lightweight file manager with a dual-pane interface.  \nPDF Archiver - Nice tool for tagging and archiving tasks.  \nThe Unarchiver - Unarchive many different kinds of archive files.  \n\nGeneral Tools\n\nAirServer - Most advanced screen mirroring software receiver for Mac, PC and Xbox One.\nControlPlane - Manages configuration profiles for your Mac. Determines where you are or what you are doing based on a number of available evidence sources and then automatically reconfigures your Mac based on your preferences.  \nDNS Heaven - Unifies macOS DNS so applications using glibc can resolve DNS with the native stack. Mainly for use with VPNs.  \nHTTrack - Useful tool for downloading a whole website and offline browsing. \nLungo - Prevent your Mac from going to sleep. \nMac Cache Cleaner - Cache cleaner for Mac  \nMacAssistant - Google Assistant for macOS  \nManta - Flexible invoicing desktop app with beautiful & customizable templates.  \nMemo - Simple and elegant app. Unlock memos even more quickly using Touch ID.  \nNumi - Beautiful calculator app for Mac. \nPlash - Make any website your desktop wallpaper.   \nSlowQuitApps - An OS X app that adds a global delay of 1 second to the Cmd-Q shortcut.  \nTorimori Sweeper - MacOS app that lets you declutter your Downloads, one file at a time. \nUltra TabSaver - The Open Source Tab Manager for Safari  \n\nTo-Do Lists\n\n2Do - Nice todo app.\nDay-O 2 - Menu bar clock replacement with built-in calendar. \nFantastical - The calendar app you won't be able to live without.\nFocus - Beautiful pomodoro-based time manager. \nMicrosoft To-Do - Microsoft's successor to Wunderlist.  \nNozbe - Powerful GTD app for individuals and teams, with support for every Apple device (Mac, iPhone, iPad, Watch). \nOmniFocus - Nice GTD app, made by OmniGroups.\nTaskade - Real-time collaborative editor for teams.\nTaskPaper - Plain text to-do lists.\nThings - Delightful and easy to use task manager. (Award-winning App)\nTodoist - Cross-platform todo list app.  \nTomato 2 - Beautiful and simple Pomodoro timer.  \nTickTick - Simple and effective to-do list and task manager that helps you organize all aspects of life.  \n\nProductivity\n\n1440 Minutes Left Today - Keep a track of how many minutes you have left until the day is over, right in your menu bar.  \nAlfred - Award-winning app which boosts efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac. \nBetterTouchTool - Great, feature-packed app that allows you to configure many gestures for your Magic Mouse, Macbook Trackpad, Magic Trackpad and also Mouse Gestures for normal mice. \nChoosy - UI, URL API and a browser extension set for managing rules where and how to open links.\nHammerspoon - Tool for powerful OSX automation with the Lua scripting engine.  \nHapticKey - A simple utility application for MacBook with Touch Bar that triggers a haptic feedback when tapping Touch Bar.  \nHazeOver App that dims your background app windows so you can focus more on your main task! \nHungrymark - Useful app to bookmark your files, folders, and webs, quick access your bookmarks through menu bar  \niCMD - Fuzzy menubar search and vim\/easymotion emulation which works globally for every native MacOS app.\nKarabiner - Powerful and stable keyboard customizer for OS X.  \nKeyboard Maestro - Automate routine actions based on triggers from keyboard, menu, location, added devices, and more.\nKeytty - App to keep your hands on the keyboard. Move, click, scroll, drag and more with a few strokes.\nLazy - Keyboard-driven commands to manage your surroundings directly from your mac.\nMos - Simple tool can offer the smooth scrolling and reverse the mouse scrolling direction on your Mac.  \nMouseless - Master all of the magic keystrokes for your favorite apps & tools.\nOmniPlan - The best way to visualize, maintain, and simplify your projects. Project Management made easy.\nQbserve - Time tracking automation: freelance project tracking, timesheets, invoicing & real-time productivity feedback.\nRescueTime - Personal analytics service that shows you how you spend your time and provides tools to help you be more productive.\nSensibleSideButtons \u2013 Use the side buttons on your mouse to move forward and backward in many apps, like in Windows. \nnnScreenshots - a super easy way to keep a visual record of your productivity to make it easier to fill out timesheets or just to help you review the day. Built in timesheet editor.\nskhd - Simple hotkey daemon for macOS.  \nStrategr \u2013 No-fuss time management app. Stategr helps you maximize your productivity, giving you the quickest and most effective way to time-box your day.  \nTime Out - Easy break reminders, with micro-break and flexible customization if you want it.  \nTiming - Automatic time and productivity tracking for Mac. Helps you stay on track with your work and ensures no billable hours get lost if you are billing hourly.\nTrello - A collaboration tool that organizes your projects into Kanban boards.\nUkelele - Unicode Keyboard Layout Editor.\nxScope - Powerful set of tools that are ideal for measuring, inspecting & testing on-screen graphics and layouts.\nZ - Powerful way to navigate easily by typing only a string of directory name in terminal instead of typing exact location of director.\nPomodoro Cycle - Pomodoro tracker\n\nWindow Management\n\nAltTab - Open source window switcher with window previews. \nAmethyst - Tiling window manager.  \ncontexts - Provides more power than the native Mac Dock. Especially when you have multiple screens, it can help you switch more quickly.\nDivvy - Window management at its finest with its amazing Divvy Grid system.\nHummingbird - Easily move and resize windows without mouse clicks, from anywhere within a window.\nMagnet - Window manager that keeps your workspace organized. \nMoom - Allows you to easily move and zoom windows, or to another display\u2014using either the mouse or the keyboard.\nRectangle - Window management app based on Spectacle, written in Swift.  \nShiftIt - Managing window size and position in OSX.  \nSizeUp - Powerful, keyboard-centric window management.\nSlate - Window management application similar to Divvy and SizeUp (except better and free!). (Needs config file)  \nTotal Spaces - Provides window management much like ubuntu. Creates hotkeys for workspaces which allows you to easily move around.\nyabai - Tiling window manager for macOS. A rewrite of chunkwm, it provides a more seamless integration with the operating system.  \n\nPassword Management\n\n1Password - Cross-platform password management tool.\nAuthy - Two-factor authentication token manager that backs up and syncs across your devices. \nBitwarden - Open source password management tool for Mac OS, iOS and browsers.  \nButtercup - The Password Manager You Deserve \nDashlane - Cloud-based password manager with award-winning design. \nEnpass - Cross-platform password management tool with cloud integration. \nKeeweb - Free, cross-platform password manager compatible with KeePass.  \nLastPass - Password management tool for Mac OS and browser.\nMacPass - Open-source KeePass Mac OS client.  \nSafeInCloud - Cross Platform password management, low cost app! \n\nFinder Tools\n\nfman - The first dual-pane file manager to integrate features from Sublime Text.\nForkLift - The most advanced dual pane file manager and file transfer client for macOS.\nPath Finder - File management app.\nQSpace - A clean and efficient Multi-view File Manager. \nTotalFinder - Chrome-styled Finder substitute.\nXtraFinder - Adds tabs and cut to Mac Finder. \n\nQuality of Life Improvements\n\nCheatSheet -  Hold the \u2318-Key to get a list of all active shortcuts of the current application. It's as simple as that. \nf.lux - Makes the color of your computer's display adapt to the time of day. \nGrayscale Mode - An open source macOS app that lets you quickly toggle grayscale filter right from your menu bar or using a keyboard shortcut (\u2325\u2318G).  \nKeyCastr - Open-source keystroke visualizer.   \nNightOwl - Automatically switch between macOS Mojave's light and dark themes by time of day or with a menu bar or keyboard shortcut. \nOne Switch - Mac menu bar app that adds various switches to the Mac's menu bar.\nShifty - A macOS menu bar app that gives you more control over Night Shift. \nSnap - Launch an app in a snap. Ridiculously easy shortcut management.  \nShareful - Supercharge the system share menu with copy, save, and open actions.  \n\nSystem Related Tools\n\nAmphetamine - Override your energy saver settings and keep your Mac awake.  \nAppCleaner - Small application which allows you to thoroughly uninstall unwanted apps. \nBackground Music - Automatically pause your music, set individual apps' volumes and record system audio. \nCleaner for Xcode - Helps make your Xcode faster by removing unwanted and deprecated files.  \ncoconutBattery - Shows live information about the battery in your Mac. Includes: manufacture date, capacity, cycle count, battery status, temperature, discharging power.\nCoolant - Menubar app that lets you know when an app is consuming 100% CPU or more than a gigabyte of memory (or any arbitrary limits you choose).\nDaisyDisk - Gives a great overview of disk usage. Can also make more disk-space available by cleaning up your disk.\nFruitJuice - Will let you know how long to stay unplugged each day to keep your battery healthy. \ngfxCardStatus - Unobtrusive menu bar app for OS X that allows MacBook Pro users to see which apps are affecting their battery life by using the more power-hungry graphics. \nGray - Pick between the light appearance and the dark appearance on a per-app basis with the click of a button.  \nHandShaker -  Mac on the management of Android mobile phone content. \nHTML5 Player - HTML 5 video player. Keep your Mac from \"burning\".\niStat Menus - Advanced Mac system monitor on the menubar.\niStats - Command-line tool that allows you to easily grab the CPU temperature, fan speeds and battery information on OSX.  \nJuice - Make your battery information a bit more interesting.  \nKeepingYouAwake - Alternative to Caffeine with better support for dark mode in Mac. \nMonity - System monitoring widget for OS X.\nMounty - Tiny tool to re-mount write-protected NTFS volumes under Mac OS X 10.9+ in read-write mode. \nNitroShare - Cross-platform network file transfer utility.  \nNoti - Receive Android notifications on your Mac (with Pushbullet).  \nOmniDiskSweeper - Shows you the files on your drive, ordered by size. It can be used to find and remove unused files.  \nOnyX - Multifunction utility to verify disks and files, run cleaning and system maintenance tasks, configure hidden options and more. \nParagon NTFS - Read\/write access to NTFS in macOS Sierra.\nPorting Kit - Install Windows\u00ae Games inside your Mac. \nSensei - Sensei is a multi-tool for Mac performance, with features spanning across both hardware and software.\nSSH Tunnel - Application for managing SSH connections.\nTG Pro - Temperature monitoring, fan control & hardware diagnostics to help keep your Mac cool and healthy.\nTuxera NTFS - Full read-write compatibility with NTFS-formatted drives on a Mac.\nOverkill - Stop iTunes from opening when you connect your iPhone.\n\nGaming Software\n\nOpenEmu - A great video game console emulator, supports many different emulators in a single application. (e.g. Sony PSP, GameBoy, NDS and so on)  \nPPSSPP - A awesome PSP emulator for any OS you can dream of!  \n\nRemote Login Software\n\nAnyDesk - Provides Remote access across multiple machines.\nRealVNC - The original and best software for remote access across desktop and mobile.\nTeamViewer - Proprietary computer software package for remote control, desktop sharing, online meetings, web conferencing and file transfer between computers. \n\nSocial Networking\n\nChirper - A simple and tiny menu bar app for Buffer\/Twitter that helps you tweet your thoughts without opening anything.\nFlume - A beautiful Instagram experience for your Mac. The free version is good enough if you only want to do the browsing instead of posting.\n\nQuickLook Plugins\n\n\n\n\nquick-look-plugins - List of useful Quick Look plugins for developers\n\nThird Party App Markets\nIf you come across websites offering pirated software or cracks, please post HERE. We love apps, but only authentic ones. :)\n\nSetapp - The best apps for Mac in one suite.\n\nPackage Managers\nHere are some of the major software download sites, there are a number of OSX Mac software sites\n\nCakebrew - GUI client for Homebrew. Install, check or remove apps, no command-line needed.  \nHomebrew Cask - Command line installation manager which extends Homebrew and brings its elegance, simplicity, and speed to Mac OS applications and large binaries alike.  \nHomebrew - The missing package manager for macOS.  \nMacPorts - Open-source community initiative to design an easy-to-use system for compiling, installing, and upgrading either command-line, X11 or Aqua based open-source software on the Mac OS X operating system.  \nMacUpdate Desktop - Simplifies finding, buying and installing apps for your Mac.\n\nMac App Download Sites\nHere are some of the major software download sites, there are a number of OSX Mac software sites\nGenuine Sites\n\nalternativeTo - Also a very nice community. If you are looking for some alternative apps FOR Windows or another platform, check this site.\nSlant - I personally recommend this. This is a platform where you can compare apps side-by-side, you might get an idea by seeing other users recommendations. Please contribute if you find an application from this list!\nAlso, Quora, Reddit, you know the drill.\nApp Shopper\uff1ahttp:\/\/appshopper.com\/\nMacUpdate\uff1ahttps:\/\/www.macupdate.com\/\nOther sites like MacStories, LifeHacker, ProductHunt are great resources.\n\nPirated software download site blacklist\nRefuse piracy from me. Software vendors can go to these places rights.\n\nAppKed\uff1ahttp:\/\/www.macbed.com\nSoftasm\uff1ahttps:\/\/softasm.com\/\n\nPodcasts\n\nMac Power Users - Learn about getting the most from your Apple technology with focused topics and workflow guests.  \n\n\u2b06 back to top\nContributors\nThis project exists thanks to all the people who contribute.\n\nBackers\nThank you to all our backers! \ud83d\ude4f Become a backer\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. Become a sponsor\n\nLicense\n\nThis work is licensed under a Creative Commons Attribution 4.0 International License.\n","42":"\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is Svelte?\nSvelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.\nLearn more at the Svelte website, or stop by the Discord chatroom.\nSupporting Svelte\nSvelte is an MIT-licensed open source project with its ongoing development made possible entirely by the support of awesome volunteers. If you'd like to support their efforts, please consider:\n\nBecoming a backer on Open Collective.\n\nFunds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly.\nDevelopment\nPull requests are encouraged and always welcome. Pick an issue and help us out!\nTo install and work on Svelte locally:\ngit clone https:\/\/github.com\/sveltejs\/svelte.git\ncd svelte\nnpm install\n\nDo not use Yarn to install the dependencies, as the specific package versions in package-lock.json are used to build and test Svelte.\n\nTo build the compiler, and all the other modules included in the package:\nnpm run build\nTo watch for changes and continually rebuild the package (this is useful if you're using npm link to test out changes in a project locally):\nnpm run dev\nThe compiler is written in TypeScript, but don't let that put you off \u2014 it's basically just JavaScript with type annotations. You'll pick it up in no time. If you're using an editor other than Visual Studio Code you may need to install a plugin in order to get syntax highlighting and code hints etc.\nRunning Tests\nnpm run test\nTo filter tests, use -g (aka --grep). For example, to only run tests involving transitions:\nnpm run test -- -g transition\nsvelte.dev\nThe source code for https:\/\/svelte.dev, including all the documentation, lives in the site directory. The site is built with Sapper.\nIs svelte.dev down?\nProbably not, but it's possible. If you can't seem to access any .dev sites, check out this SuperUser question and answer.\nLicense\nMIT\n","43":"\n\n\n\n\n\n  Fast, reliable, and secure dependency management.\n\n\n\n\n\n\n\n\n\nFast: Yarn caches every package it has downloaded, so it never needs to download the same package again. It also does almost everything concurrently to maximize resource utilization. This means even faster installs.\nReliable: Using a detailed but concise lockfile format and a deterministic algorithm for install operations, Yarn is able to guarantee that any installation that works on one system will work exactly the same on another system.\nSecure: Yarn uses checksums to verify the integrity of every installed package before its code is executed.\nFeatures\n\nOffline Mode. If you've installed a package before,\u00a0then\u00a0you can install it again without\u00a0an\u00a0internet connection.\nDeterministic. The same dependencies will be installed in the same exact way on any machine, regardless of\u00a0installation\u00a0order.\nNetwork Performance. Yarn efficiently queues\u00a0requests and\u00a0avoids request waterfalls in order to maximize network utilization.\nNetwork Resilience. A single request that fails will not cause the entire installation to fail. Requests are automatically retried upon failure.\nFlat Mode. Yarn resolves mismatched versions of dependencies to a single version to avoid creating duplicates.\nMore emojis. \ud83d\udc08\n\nInstalling Yarn\nRead the Installation Guide on our website for detailed instructions on how to install Yarn.\nUsing Yarn\nRead the Usage Guide on our website for detailed instructions on how to use Yarn.\nContributing to Yarn\nContributions are always welcome, no matter how large or small. Substantial feature requests should be proposed as an RFC. Before contributing, please read the code of conduct.\nSee Contributing.\nPrior art\nYarn wouldn't exist if it wasn't for excellent prior art. Yarn has been inspired by the following projects:\n\nBundler\nCargo\nnpm\n\nCredits\nThanks to Sam Holmes for donating the npm package name!\n","44":"\nOpinionated Code Formatter\n\n\n    JavaScript\n    \u00b7 TypeScript\n    \u00b7 Flow\n    \u00b7 JSX\n    \u00b7 JSON\n  \n\n\n    CSS\n    \u00b7 SCSS\n    \u00b7 Less\n  \n\n\n    HTML\n    \u00b7 Vue\n    \u00b7 Angular\n  \n\n\n    GraphQL\n    \u00b7 Markdown\n    \u00b7 YAML\n  \n\n\n\n      Your favorite language?\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\nPrettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.\nInput\nfoo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());\nOutput\nfoo(\n  reallyLongArg(),\n  omgSoManyParameters(),\n  IShouldRefactorThis(),\n  isThereSeriouslyAnotherOne()\n);\nPrettier can be run in your editor on-save, in a pre-commit hook, or in CI environments to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!\n\nDocumentation\nInstall \u00b7\nOptions \u00b7\nCLI \u00b7\nAPI\nPlayground\n\nBadge\nShow the world you're using Prettier \u2192 \n[![code style: prettier](https:\/\/img.shields.io\/badge\/code_style-prettier-ff69b4.svg?style=flat-square)](https:\/\/github.com\/prettier\/prettier)\nContributing\nSee CONTRIBUTING.md.\n","45":"\n\n\n\n\nMaterializeCSS\n\n  Materialize, a CSS Framework based on material design.\n  \n-- Browse the docs --\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nQuickstart\nDocumentation\nSupported Browsers\nChangelog\nTesting\nContributing\nCopyright and license\n\nQuickstart:\nRead the getting started guide for more information on how to use materialize.\n\nDownload the latest release of materialize directly from GitHub. (Beta)\nClone the repo: git clone https:\/\/github.com\/Dogfalo\/materialize.git (Beta: git clone -b v1-dev https:\/\/github.com\/Dogfalo\/materialize.git)\nInclude the files via cdnjs. More here. (Beta)\nInstall with npm: npm install materialize-css (Beta: npm install materialize-css@next)\nInstall with Bower: bower install materialize (DEPRECATED)\nInstall with Atmosphere: meteor add materialize:materialize (Beta: meteor add materialize:materialize@=1.0.0-beta)\n\nDocumentation\nThe documentation can be found at http:\/\/materializecss.com. To run the documentation locally on your machine, you need Node.js installed on your computer.\nRunning documentation locally\nRun these commands to set up the documentation:\ngit clone https:\/\/github.com\/Dogfalo\/materialize\ncd materialize\nnpm install\nThen run grunt monitor to compile the documentation. When it finishes, open a new browser window and navigate to localhost:8000. We use BrowserSync to display the documentation.\nDocumentation for previous releases\nPrevious releases and their documentation are available for download.\nSupported Browsers:\nMaterialize is compatible with:\n\nChrome 35+\nFirefox 31+\nSafari 9+\nOpera\nEdge\nIE 11+\n\nChangelog\nFor changelogs, check out the Releases section of materialize or the CHANGELOG.md.\nTesting\nWe use Jasmine as our testing framework and we're trying to write a robust test suite for our components. If you want to help, here's a starting guide on how to write tests in Jasmine.\nContributing\nCheck out the CONTRIBUTING document in the root of the repository to learn how you can contribute. You can also browse the help-wanted tag in our issue tracker to find things to do.\nCopyright and license\nCode Copyright 2018 Materialize. Code released under the MIT license.\n","46":"\ud83d\udc4b\ud83c\udffe Please consider donating to these organizations to help fund an education in technology, entrepreneurship and leadership for POC. #BLM\n\nHidden Genius Project\nBlack Girls Who Code\nCode2040\n\n\n\n\n\n\n\n\n\n\n\nEnglish |\n  \u7b80\u4f53\u4e2d\u6587\n\nWebsite \u2022 Docs \u2022 Newsletter \u2022 Swag \u2022 Gitter \u2022 Forum \u2022 Meetups \u2022 Twitter \u2022 We're Hiring \u2022 Try Pro\nThe Serverless Framework \u2013 Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.\nThe Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It's also completely extensible via plugins.\nServerless is an MIT open-source project, actively maintained by a full-time, venture-backed team.\nWatch the video overview here.\nIn 2020, the Serverless Framework began introducing advanced functionality for specific serverless use-cases, known as Serverless Framework Components. Check out the Components featured below, and more here.\n\n\n\n\n\n\n\n\n\n\nContents\n\n\nQuick Start\nExamples\nServices\nFeatures\nPlugins\nContributing\nCommunity\nConsultants\nLicensing\nPrevious Version 0.5.x\n\nQuick Start\nWatch the video guide here or follow the steps below to create and deploy your first serverless microservice in minutes.\n\nInstall via npm:\n\nnpm install -g serverless\n\n\nSet-up your Provider Credentials. Watch the video on setting up credentials\n\n\nCreate a Service:\n\n\nYou can create a new service or install existing services.\n# Create a new Serverless Service\/Project\nserverless create --template aws-nodejs --path my-service\n# Change into the newly created directory\ncd my-service\n\nDeploy a Service:\n\nUse this when you have made changes to your Functions, Events or Resources in serverless.yml or you simply want to deploy all changes within your Service at the same time.\nserverless deploy -v\n\nDeploy the Function:\n\nUse this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.\nserverless deploy function -f hello\n\nInvoke the Function on AWS:\n\nInvokes an AWS Lambda Function on AWS and returns logs.\nserverless invoke -f hello -l\n\nInvoke the Function on your machine:\n\nInvokes an AWS Lambda Function on your local machine and returns logs.\nserverless invoke local -f hello -l\n\nFetch the Function Logs:\n\nOpen up a separate tab in your console and stream all logs for a specific Function using this command.\nserverless logs -f hello -t\n\nRemove the Service:\n\nRemoves all Functions, Events and Resources from your AWS account.\nserverless remove\nHow to Install a Service:\nThis is a convenience method to install a pre-made Serverless Service locally by downloading the Github repo and unzipping it. Services are listed below.\nserverless install -u https:\/\/github.com\/your-url-to-the-serverless-service\nCheck out the Serverless Framework Guide for more information.\nServices (V1.0)\nThe following are services you can instantly install and use by running serverless install --url <service-github-url>\n\nserverless-examples\nCRUD - CRUD service, Scala Port\nCRUD with FaunaDB - CRUD service using FaunaDB\nCRUD with S3 - CRUD service using S3\nCRUD with Flask and SQLAlchemy - Python CRUD API service with Flask, SQLAlchemy and Swagger\nGraphQL Boilerplate - GraphQL application Boilerplate service\nAuthentication - Authentication boilerplate service\nMailer - Service for sending emails\nKinesis streams - Service to showcase Kinesis stream support\nDynamoDB streams - Service to showcase DynamoDB stream support\nLandingpage backend - Landingpage backend service to store E-Mail addresses\nFacebook Messenger Chatbot - Chatbot for the Facebook Messenger platform\nLambda chaining - Service which chains Lambdas through SNS\nSecured API - Service which exposes an API key accessible API\nAuthorizer - Service that uses API Gateway custom authorizers\nThumbnails - Service that takes an image url and returns a 100x100 thumbnail\nBoilerplate - Opinionated boilerplate\nES6 + Jest - ES6 + Jest Boilerplate\nPHP - Call a PHP function from your lambda\nRuby - Call a Ruby function from your lambda\nSlack App - Slack App Boilerplate with OAuth and Bot actions\nSwift - Full-featured project template to develop Lambda functions in Swift\nCloudwatch Alerts on Slack - Get AWS Cloudwatch alerts notifications on Slack\n\nNote: the serverless install command will only work on V1.0 or later.\nFeatures\n\nSupports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, & F#\nManages the lifecycle of your serverless architecture (build, deploy, update, delete).\nSafely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).\nFunctions can be grouped (\"serverless services\") for easy management of code, resources & processes, across large projects & teams.\nMinimal configuration and scaffolding.\nBuilt-in support for multiple stages.\nOptimized for CI\/CD workflows.\nLoaded with automation, optimization and best practices.\n100% Extensible: Extend or modify the Framework and its operations via Plugins.\nAn ecosystem of serverless services and plugins.\nA passionate and welcoming community!\n\nContributing\nWe love our contributors! Please read our Contributing Document to learn how you can start working on the Framework yourself.\nCheck out our help wanted or good first issue labels to find issues we want to move forward on with your help.\nCommunity\n\nEmail Updates\nServerless Forum\nGitter Chatroom\nServerless Meetups\nStackoverflow\nFacebook\nTwitter\nContact Us\n\nConsultants\nWe recommend the following professional services organizations who are experts in serverless development:\n\nServerless Guru\nAntstack\nTheodo - full stack teams passionate about Serverless that also run the Serverless Transformation Newsletter & Blog.\nnull - maintains Bref to create serverless PHP applications\nNordcloud - they created several plugins, sponsor Serverless Days Helsinki and regularly host Serverless Finland Meetups.\nAPI talent - who also run Serverless-Auckland Meetup\nEPX Labs - runs Serverless NYC Meetup\nSeraro - Who also runs Atlanta Serverless Meetup (https:\/\/www.meetup.com\/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT) and Delhi Serverless Meetup (https:\/\/www.meetup.com\/Delhi-NCR-Serverless-Architecture-Meetup\/)\nsuperluminar - runs serverlessdays Hamburg and Serverless Meetup Hamburg\nJetBridge - cloud-native and serverless application development services.\n\nIf you'd like to be featured here, please contact us.\n\nLicensing\nServerless is licensed under the MIT License.\nAll files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.\nPrevious Serverless Version 0.5.x\nYou can find projects and plugins relating to version 0.5 here. Note that these are not compatible with v1.0 but we are working diligently on updating them. Guide on building v1.0 plugins.\nYou can read the v0.5.x documentation at readme.io.\n","47":"LeetCode\n\n\n\n\n\n\n\n\n\n\n\n\u7b80\u4f53\u4e2d\u6587 | English\n\n\u53ea\u6709\u719f\u7ec3\u638c\u63e1\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff0c\u624d\u80fd\u5bf9\u590d\u6742\u95ee\u9898\u8fce\u5203\u6709\u4f59\u3002\n\ud83d\udcd8\u7535\u5b50\u4e66\n\u8fd9\u662f\u6211\u5c06\u6211\u7684\u6240\u6709\u516c\u5f00\u7684\u7b97\u6cd5\u8d44\u6599\u6574\u7406\u7684\u4e00\u4e2a\u7535\u5b50\u4e66\uff0c\u5168\u90e8\u9898\u76ee\u4fe1\u606f\u4e2d\u6587\u5316\uff0c\u4ee5\u524d\u4f1a\u6709\u4e00\u4e9b\u82f1\u6587\u63cf\u8ff0\uff0c\u611f\u8c22 @CYL \u7684\u4e2d\u6587\u6574\u7406\u3002\n\u9650\u65f6\u514d\u8d39\u4e0b\u8f7d\uff01\u540e\u671f\u968f\u65f6\u53ef\u80fd\u6536\u8d39\n\n\u6709\u4e9b\u52a8\u56fe\uff0c\u5728\u505a\u6210\u7535\u5b50\u4e66\uff08\u6bd4\u5982 pdf\uff09\u7684\u65f6\u5019\u81ea\u7136\u5c31\u53d8\u6ca1\u4e86\uff0c\u5982\u679c\u9700\u8981\u770b\u52a8\u56fe\u7684\uff0c \u53ef\u4ee5\u53bb\u6211\u7684\u516c\u4f17\u53f7\u300a\u529b\u6263\u52a0\u52a0\u300b\u6216\u8005\u6211\u7684 leetcode \u9898\u89e3\u4ed3\u5e93\u770b\u3002\n\nepub \u8fd8\u662f\u6709\u52a8\u56fe\u7684\n\n\u7531\u4e8e\u662f\u7535\u5b50\u4e66\uff0c\u56e0\u6b64\u9605\u8bfb\u4f53\u9a8c\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c \u4f46\u662f\u76f8\u5e94\u5730\u5c31\u4e0d\u80fd\u83b7\u5f97\u53ca\u65f6\u7684\u66f4\u65b0\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u6536\u85cf\u4e00\u4e0b\u6211\u7684\u540c\u6b65\u7535\u5b50\u4e66\u7684\u7f51\u7ad9 \u897f\u6cd5\u7684\u5237\u9898\u79d8\u7c4d - \u5728\u7ebf\u7248\u3002\u540e\u671f\u53ef\u80fd\u5c06\u6bcf\u65e5\u4e00\u9898\uff0c 91 \u5929\u5b66\u7b97\u6cd5\u5176\u4ed6\u7ae0\u8282\u7684\u8bb2\u4e49\u7b49\u4e5f\u6574\u7406\u8fdb\u6765\u3002\n\u7535\u5b50\u4e66\u6709\u66f4\u65b0\u6211\u4e5f\u4f1a\u5728\u516c\u4f17\u53f7\u300a\u529b\u6263\u52a0\u52a0\u300b\u8fdb\u884c\u901a\u77e5\uff0c \u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5173\u6ce8\u4e00\u4e0b\u3002\n\u4e2a\u4eba\u4e0d\u5efa\u8bae\u4f7f\u7528 html \u548c epub\uff0c\u5efa\u8bae\u5927\u5bb6\u4ece\u5728\u7ebf\u7248\uff0cpdf \u548c mobi \u9009\u62e9\u9002\u5408\u81ea\u5df1\u7684\u683c\u5f0f\u4e0b\u8f7d\u5373\u53ef\u3002html, pdf\uff0cmobi \u548c epub \u683c\u5f0f\uff0c\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\u300a\u529b\u6263\u52a0\u52a0\u300b\u56de\u590d\u7535\u5b50\u4e66\u5373\u53ef\u3002\n\ud83d\udcf0 \u00a0\u8ba2\u9605\n\u5927\u5bb6\u53ef\u4ee5\u7528 Github \u63d0\u4f9b\u7684 RSS \u6765\u8ba2\u9605\u6211\u7684\u4ed3\u5e93\u66f4\u65b0\u3002\n\ud83e\udd45 \u00a0\u975e\u79d1\u5b66\u4eba\u58eb\u770b\u8fc7\u6765\n\u5982\u679c\u662f\u56fd\u5185\u7684\u975e\u79d1\u5b66\u7528\u6237\uff0c\u53ef\u80fd\u90e8\u5206\u56fe\u7247\u4f1a\u52a0\u8f7d\u4e0d\u51fa\u6765\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 https:\/\/lucifer.ren\/leetcode \uff0c\u6574\u7ad9\u505a\u4e86\u9759\u6001\u5316\uff0c\u901f\u5ea6\u8d3c\u5feb\uff01\u4f46\u662f\u9605\u8bfb\u4f53\u9a8c\u53ef\u80fd\u4e00\u822c\u3002\n\u53e6\u5916\u9700\u8981\u79d1\u5b66\u7684\uff0c\u6211\u63a8\u8350\u4e00\u4e2a\u5de5\u5177\uff0c \u7528\u6237\u4f53\u9a8c\u771f\u7684\u662f\u597d\uff0c\u7528\u8d77\u6765\u8d85\u7b80\u5355\uff0c \u63d0\u4f9b\u4e00\u7ad9\u5f0f\u5de5\u5177\uff0c\u5305\u62ec\u7f51\u7edc\u68c0\u6d4b\u5de5\u5177\uff0c\u6d4f\u89c8\u5668\u63d2\u4ef6\u7b49\uff0c\u652f\u6301\u591a\u79cd\u5ba2\u6237\u7aef\uff08\u8fd8\u6709\u6211\u6700\u559c\u6b22\u7684 Switch \u52a0\u901f\u5668\uff09\uff0c\u4ef7\u683c\u4e5f\u4e0d\u8d35\uff0c\u57fa\u7840\u5957\u9910\u6298\u7b97\u5230\u6708\u5927\u7ea6 11.2 \u5757\/\u6708\u3002\u5730\u5740\uff1ahttps:\/\/glados.space\/landing\/M9OHH-Q88JQ-DX72D-R04RN\n\u2757\u600e\u4e48\u5237 LeetCode\uff1f\n\n\u6211\u662f\u5982\u4f55\u5237 LeetCode \u7684\n\u7b97\u6cd5\u5c0f\u767d\u5982\u4f55\u9ad8\u6548\u3001\u5feb\u901f\u5237 leetcode\uff1f\n\u5237\u9898\u6548\u7387\u4f4e\uff1f\u6216\u8bb8\u4f60\u5c31\u5dee\u8fd9\u4e48\u4e00\u4e2a\u63d2\u4ef6\n\u529b\u6263\u5237\u9898\u63d2\u4ef6\n\n\ud83d\udcc6\u300a91 \u5929\u5b66\u7b97\u6cd5\u300b\u9650\u65f6\u6d3b\u52a8\n\n\u7b2c\u4e00\u671f\u8bb2\u4e49-\u4e8c\u5206\u6cd5\n\u7b2c\u4e00\u671f\u8bb2\u4e49-\u53cc\u6307\u9488\n\u7b2c\u4e8c\u671f\u6b63\u5728\u706b\u70ed\u8fdb\u884c\u4e2d\n\n\u4ed3\u5e93\u4ecb\u7ecd\nleetcode \u9898\u89e3\uff0c\u8bb0\u5f55\u81ea\u5df1\u7684 leetcode \u89e3\u9898\u4e4b\u8def\u3002\n\u672c\u4ed3\u5e93\u76ee\u524d\u5206\u4e3a\u4e94\u4e2a\u90e8\u5206\uff1a\n\n\n\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f leetcode \u7ecf\u5178\u9898\u76ee\u7684\u89e3\u6790\uff0c\u5305\u62ec\u601d\u8def\uff0c\u5173\u952e\u70b9\u548c\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\n\u7b2c\u4e8c\u90e8\u5206\u662f\u5bf9\u4e8e\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7684\u603b\u7ed3\n\n\n\u7b2c\u4e09\u90e8\u5206\u662f anki \u5361\u7247\uff0c \u5c06 leetcode \u9898\u76ee\u6309\u7167\u4e00\u5b9a\u7684\u65b9\u5f0f\u8bb0\u5f55\u5728 anki \u4e2d\uff0c\u65b9\u4fbf\u5927\u5bb6\u8bb0\u5fc6\u3002\n\n\n\u7b2c\u56db\u90e8\u5206\u662f\u6bcf\u65e5\u4e00\u9898\uff0c\u6bcf\u65e5\u4e00\u9898\u662f\u5728\u4ea4\u6d41\u7fa4\uff08\u5305\u62ec\u5fae\u4fe1\u548c qq\uff09\u91cc\u8fdb\u884c\u7684\u4e00\u79cd\u6d3b\u52a8\uff0c\u5927\u5bb6\u4e00\u8d77 \u89e3\u4e00\u9053\u9898\uff0c\u8fd9\u6837\u8ba8\u8bba\u95ee\u9898\u66f4\u52a0\u96c6\u4e2d\uff0c\u4f1a\u5f97\u5230\u66f4\u591a\u7684\u53cd\u9988\u3002\u800c\u4e14 \u8fd9\u4e9b\u9898\u76ee\u53ef\u4ee5\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u65e5\u540e\u4f1a\u8fdb\u884c\u7b5b\u9009\u6dfb\u52a0\u5230\u4ed3\u5e93\u7684\u9898\u89e3\u6a21\u5757\u3002\n\n\n\u7b2c\u4e94\u90e8\u5206\u662f\u8ba1\u5212\uff0c \u8fd9\u91cc\u4f1a\u8bb0\u5f55\u5c06\u6765\u8981\u52a0\u5165\u5230\u4ee5\u4e0a\u4e09\u4e2a\u90e8\u5206\u5185\u5bb9\n\n\n\ud83c\udf56\u4ed3\u5e93\u98df\u7528\u6307\u5357\n\n\u5bf9\u4e8e\u6700\u8fd1\u6dfb\u52a0\u7684\u90e8\u5206\uff0c \u540e\u9762\u4f1a\u6709 \ud83c\udd95 \u6807\u6ce8\n\u5bf9\u4e8e\u6700\u8fd1\u66f4\u65b0\u7684\u90e8\u5206\uff0c \u540e\u9762\u4f1a\u6709 \ud83d\udd8a \u6807\u6ce8\n\u8fd9\u91cc\u6709\u4e00\u5f20\u4e92\u8054\u7f51\u516c\u53f8\u9762\u8bd5\u4e2d\u7ecf\u5e38\u8003\u5bdf\u7684\u95ee\u9898\u7c7b\u578b\u603b\u7ed3\u7684\u601d\u7ef4\u5bfc\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u56fe\u7247\u4e2d\u7684\u4fe1\u606f\u5206\u6790\u4e00\u4e0b\u3002\n\n\n\uff08\u56fe\u7247\u6765\u81ea leetcode)\n\u5176\u4e2d\u7b97\u6cd5\uff0c\u4e3b\u8981\u662f\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n\u57fa\u7840\u6280\u5de7\uff1a\u5206\u6cbb\u3001\u4e8c\u5206\u3001\u8d2a\u5fc3\n\u6392\u5e8f\u7b97\u6cd5\uff1a\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u8ba1\u6570\u6392\u5e8f\n\u641c\u7d22\u7b97\u6cd5\uff1a\u56de\u6eaf\u3001\u9012\u5f52\u3001\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7b49\n\u56fe\u8bba\uff1a\u6700\u77ed\u8def\u5f84\u3001\u6700\u5c0f\u751f\u6210\u6811\n\u52a8\u6001\u89c4\u5212\uff1a\u80cc\u5305\u95ee\u9898\u3001\u6700\u957f\u5b50\u5e8f\u5217\n\n\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\n\n\u6570\u7ec4\u4e0e\u94fe\u8868\uff1a\u5355 \/ \u53cc\u5411\u94fe\u8868\n\u6808\u4e0e\u961f\u5217\n\u54c8\u5e0c\u8868\n\u5806\uff1a\u6700\u5927\u5806 \uff0f \u6700\u5c0f\u5806\n\u6811\u4e0e\u56fe\uff1a\u6700\u8fd1\u516c\u5171\u7956\u5148\u3001\u5e76\u67e5\u96c6\n\u5b57\u7b26\u4e32\uff1a\u524d\u7f00\u6811\uff08\u5b57\u5178\u6811\uff09 \uff0f \u540e\u7f00\u6811\n\n\ud83d\udeaa \u00a0\u4f20\u9001\u95e8\nleetcode \u7ecf\u5178\u9898\u76ee\u7684\u89e3\u6790\uff08200 \u591a\u9053\uff09\n\n\u8fd9\u91cc\u4ec5\u5217\u4e3e\u5177\u6709\u4ee3\u8868\u6027\u9898\u76ee\uff0c\u5e76\u4e0d\u662f\u5168\u90e8\u9898\u76ee\n\n\u76ee\u524d\u66f4\u65b0\u4e86 200 \u591a\u9053\u9898\u89e3\uff0c\u52a0\u4e0a\u4e13\u9898\u6d89\u53ca\u7684\u9898\u76ee\uff0c\u5dee\u4e0d\u591a\u6709 300 \u9053\u3002\n\n\u9ad8\u9891\u8003\u9898\uff08\u7b80\u5355 72 \u9898\uff09\n\u9ad8\u9891\u8003\u9898\uff08\u4e2d\u7b49 114 \u9898\uff09\n\u9ad8\u9891\u8003\u9898\uff08\u56f0\u96be 30 \u9898\uff09\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7684\u603b\u7ed3(21 \u7bc7)\n\n\u6570\u636e\u7ed3\u6784\u603b\u89c8\n\u94fe\u8868\u4e13\u9898 \ud83c\udd95\n\n\n\u4e8c\u53c9\u6811\u7684\u904d\u5386\n\u52a8\u6001\u89c4\u5212\n\u56de\u6eaf\n\u54c8\u592b\u66fc\u7f16\u7801\u548c\u6e38\u7a0b\u7f16\u7801\n\u5e03\u9686\u8fc7\u6ee4\u5668\ud83d\udd8a\n\u5b57\u7b26\u4e32\u95ee\u9898\n\u524d\u7f00\u6811\ud83d\udd8a\n\u300a\u65e5\u7a0b\u5b89\u6392\u300b\u4e13\u9898\n\u300a\u6784\u9020\u4e8c\u53c9\u6811\u300b\u4e13\u9898\n\u300a\u8d2a\u5a6a\u7b56\u7565\u300b\u4e13\u9898\n\u6df1\u5ea6\u4f18\u5148\u904d\u5386\n\u6ed1\u52a8\u7a97\u53e3\uff08\u601d\u8def + \u6a21\u677f\uff09\n\u4f4d\u8fd0\u7b97\n\u8bbe\u8ba1\u9898\n\u5c0f\u5c9b\u95ee\u9898\ud83d\udd8a\n\u6700\u5927\u516c\u7ea6\u6570\n\u5e76\u67e5\u96c6\n\u5e73\u8861\u4e8c\u53c9\u6811\u4e13\u9898\n\u5355\u8c03\u6808 \ud83c\udd95\n\n\u7cbe\u9009\u9898\u89e3\uff089 \u7bc7\uff09\n\n\u5b57\u5178\u5e8f\u5217\u5220\u9664\n\u4e00\u6b21\u641e\u5b9a\u524d\u7f00\u548c\n\u5b57\u8282\u8df3\u52a8\u7684\u7b97\u6cd5\u9762\u8bd5\u9898\u662f\u4ec0\u4e48\u96be\u5ea6\uff1f\n\u5b57\u8282\u8df3\u52a8\u7684\u7b97\u6cd5\u9762\u8bd5\u9898\u662f\u4ec0\u4e48\u96be\u5ea6\uff1f\uff08\u7b2c\u4e8c\u5f39\uff09\n\u300a\u6211\u662f\u4f60\u7684\u5988\u5988\u5440\u300b - \u7b2c\u4e00\u671f\n\u4e00\u6587\u5e26\u4f60\u770b\u61c2\u4e8c\u53c9\u6811\u7684\u5e8f\u5217\u5316\n\u7a7f\u4e0a\u8863\u670d\u6211\u5c31\u4e0d\u8ba4\u8bc6\u4f60\u4e86\uff1f\u6765\u804a\u804a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\u4f60\u7684\u8863\u670d\u6211\u6252\u4e86 - \u300a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u300b\n\u4e00\u6587\u770b\u61c2\u300a\u6700\u5927\u5b50\u5e8f\u5217\u548c\u95ee\u9898\u300b\n\n\ud83d\udd31 \u00a0anki \u5361\u7247\nAnki \u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4e00\u90e8\u5206\u662f\u5173\u952e\u70b9\u5230\u9898\u76ee\u7684\u6620\u5c04\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u9898\u76ee\u5230\u601d\u8def\uff0c\u5173\u952e\u70b9\uff0c\u4ee3\u7801\u7684\u6620\u5c04\u3002\n\u5168\u90e8\u5361\u7247\u90fd\u5728 anki-card\n\u4f7f\u7528\u65b9\u6cd5\uff1a\nanki - \u6587\u4ef6 - \u5bfc\u5165 - \u4e0b\u62c9\u683c\u5f0f\u9009\u62e9\u201c\u6253\u5305\u7684 anki \u96c6\u5408\u201d\uff0c\u7136\u540e\u9009\u4e2d\u4f60\u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\uff0c\u786e\u5b9a\u5373\u53ef\u3002\n\u66f4\u591a\u5173\u4e8e anki \u4f7f\u7528\u65b9\u6cd5\u7684\u8bf7\u67e5\u770b anki \u5b98\u7f51\n\u76ee\u524d\u5df2\u66f4\u65b0\u5361\u7247\u4e00\u89c8\uff08\u4ec5\u5217\u4e3e\u6b63\u9762\uff09\uff1a\n\n\u4e8c\u5206\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\n\u5982\u4f55\u7528\u6808\u7684\u7279\u70b9\u6765\u7b80\u5316\u64cd\u4f5c\uff0c \u6d89\u53ca\u5230\u7684\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u53cc\u6307\u9488\u95ee\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u56de\u6eaf\u6cd5\u89e3\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u6570\u8bba\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\n\u4f4d\u8fd0\u7b97\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\uff1f\n\n\n\u5df2\u52a0\u5165\u7684\u9898\u76ee\u6709\uff1a#2 #3 #11\n\n\ud83d\udc1d \u00a0\u6bcf\u65e5\u4e00\u9898\n\u6bcf\u65e5\u4e00\u9898\u662f\u5728\u4ea4\u6d41\u7fa4\uff08\u5305\u62ec\u5fae\u4fe1\u548c qq\uff09\u91cc\u901a\u8fc7 issues \u6765\u8fdb\u884c\u7684\u4e00\u79cd\u6d3b\u52a8\uff0c\u5927\u5bb6\u4e00\u8d77 \u89e3\u4e00\u9053\u9898\uff0c\u8fd9\u6837\u8ba8\u8bba\u95ee\u9898\u66f4\u52a0\u96c6\u4e2d\uff0c\u4f1a\u5f97\u5230\u66f4\u591a\u7684\u53cd\u9988\u3002\u800c\u4e14 \u8fd9\u4e9b\u9898\u76ee\u53ef\u4ee5\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u65e5\u540e\u4f1a\u8fdb\u884c\u7b5b\u9009\u6dfb\u52a0\u5230\u4ed3\u5e93\u7684\u9898\u89e3\u6a21\u5757\u3002\n\n\u6bcf\u65e5\u4e00\u9898\u6c47\u603b\n\n\n\u6bcf\u65e5\u4e00\u9898\u8ba4\u9886\u533a\n\n\u2611\ufe0f \u00a0\u8ba1\u5212\n\n\nLeetCode \u6362\u76ae\u9898\u76ee\u96c6\u9526\n\n\n\u52a8\u6001\u89c4\u5212\u5b8c\u5584\u3002\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\uff0c\u7f16\u8f91\u8ddd\u79bb\u7b49\u201c\u5b57\u7b26\u4e32\u201d\u9898\u76ee\uff0c \u6254\u9e21\u86cb\u95ee\u9898\u3002 \u89e3\u9898\u6a21\u677f\uff0c\u6eda\u52a8\u6570\u7ec4\u3002\n\n\n\u5806\u53ef\u4ee5\u89e3\u51b3\u7684\u9898\u76ee\u3002 \u624b\u5199\u5806\n\n\n\u6811\n\n\nBFS & DFS\n\n\n\ud83d\udcc8\u5927\u4e8b\u4ef6\n\n\n2019-07-10 \uff1a\u7eaa\u5ff5\u9879\u76ee Star \u7a81\u7834 1W \u7684\u4e00\u4e2a\u77ed\u6587\uff0c \u8bb0\u5f55\u4e86\u9879\u76ee\u7684\"\u5174\u8d77\"\u4e4b\u8def\uff0c\u5927\u5bb6\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u4e00\u4e0b\uff0c\u5982\u679c\u5bf9\u8fd9\u4e2a\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u70b9\u51fb\u4e00\u4e0b Star\uff0c \u9879\u76ee\u4f1a\u6301\u7eed\u66f4\u65b0\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u652f\u6301\u3002\n\n\n2019-10-08: \u7eaa\u5ff5 LeetCode \u9879\u76ee Star \u7a81\u7834 2W\uff0c\u5e76\u4e14 Github \u641c\u7d22\u201cLeetCode\u201d\uff0c\u6392\u540d\u7b2c\u4e00\u3002\n\n\n2020-04-12: \u9879\u76ee\u7a81\u7834\u4e09\u4e07 Star\u3002\n\n\n2020-04-14: \u5b98\u7f51\u529b\u6263\u52a0\u52a0\u4e0a\u7ebf\u5566 \ud83d\udc90\ud83d\udc90\ud83d\udc90\ud83d\udc90\ud83d\udc90\uff0c\u6709\u4e13\u9898\u8bb2\u89e3\uff0c\u6bcf\u65e5\u4e00\u9898\uff0c\u4e0b\u8f7d\u533a\u548c\u89c6\u9891\u9898\u89e3\uff0c\u540e\u7eed\u4f1a\u589e\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u8fd8\u4e0d\u8d76\u7d27\u6536\u85cf\u8d77\u6765\uff1f\u5730\u5740\uff1ahttp:\/\/leetcode-solution.cn\/\n\n\n\n\ud83d\udc81\u5173\u4e8e\u6211\n\u64c5\u957f\u524d\u7aef\u5de5\u7a0b\u5316\uff0c\u524d\u7aef\u6027\u80fd\u4f18\u5316\uff0c\u524d\u7aef\u6807\u51c6\u5316\u7b49\uff0c\u505a\u8fc7 .net\uff0c \u641e\u8fc7 Java\uff0c\u73b0\u5728\u662f\u4e00\u540d\u524d\u7aef\u5de5\u7a0b\u5e08\uff0c\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff1ahttps:\/\/lucifer.ren\/blog\/\n\u6211\u7ecf\u5e38\u4f1a\u5728\u5f00\u6e90\u793e\u533a\u8fdb\u884c\u4e00\u4e9b\u8f93\u51fa\u548c\u5206\u4eab\uff0c\u6bd4\u8f83\u53d7\u6b22\u8fce\u7684\u6709 \u5b87\u5b99\u6700\u5f3a\u7684\u524d\u7aef\u9762\u8bd5\u6307\u5357\n\u548c \u6211\u7684\u7b2c\u4e00\u672c\u5c0f\u4e66\u3002\u76ee\u524d\u672c\u4eba\u6b63\u5728\u5199\u4e00\u672c\u5173\u4e8e\u300aleetcode \u9898\u89e3\u300b\u7684\u5b9e\u4f53\u4e66\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u90ae\u7bb1\u6216\u8005\u5fae\u4fe1\u8054\u7cfb\u6211\uff0c\u6211\u4f1a\u5728\u51fa\u7248\u7684\u7b2c\u4e00\u65f6\u95f4\u901a\u77e5\u4f60\uff0c\u5e76\u7ed9\u51fa\u9996\u53d1\u4f18\u60e0\u4ef7\u3002\u6709\u9700\u8981\u53ef\u4ee5\u76f4\u63a5\u7fa4\u91cc\u8054\u7cfb\u6211\uff0c\u6216\u8005\u53d1\u9001\u5230\u6211\u7684\u4e2a\u4eba\u90ae\u7bb1 [azl397985856@gmail.com]\u3002 \u65b0\u4e66\u8be6\u60c5\u6233\u8fd9\u91cc\uff1a\u300a\u6216\u8bb8\u662f\u4e00\u672c\u53ef\u4ee5\u5f7b\u5e95\u6539\u53d8\u4f60\u5237 LeetCode \u6548\u7387\u7684\u9898\u89e3\u4e66\u300b\n\u70b9\u5173\u6ce8\uff0c\u4e0d\u8ff7\u8def\u3002\u5982\u679c\u518d\u7ed9 \u2795 \u4e2a\u661f\u6807\u5c31\u66f4\u68d2\u5566\uff01\n\n\u5173\u6ce8\u52a0\u52a0\uff0c\u661f\u6807\u52a0\u52a0\uff5e\n\n\n\ud83d\udc9d \u8d21\u732e\n\n\u5982\u679c\u6709\u60f3\u6cd5\u548c\u521b\u610f\uff0c\u8bf7\u63d0 issue \u6216\u8005\u8fdb\u7fa4\u63d0\n\u5982\u679c\u60f3\u8d21\u732e\u589e\u52a0\u9898\u89e3\u6216\u8005\u7ffb\u8bd1\uff0c \u53ef\u4ee5\u53c2\u8003 \u8d21\u732e\u6307\u5357\n\n\u5173\u4e8e\u5982\u4f55\u63d0\u4ea4\u9898\u89e3\uff0c\u6211\u5199\u4e86\u4e00\u4efd \u6307\u5357\n\n\n\u5982\u679c\u9700\u8981\u4fee\u6539\u9879\u76ee\u4e2d\u56fe\u7247\uff0c\u8fd9\u91cc \u5b58\u653e\u4e86\u9879\u76ee\u4e2d\u7ed8\u5236\u56fe\u7684\u6e90\u4ee3\u7801\uff0c \u5927\u5bb6\u53ef\u4ee5\u7528 draw.io \u6253\u5f00\u8fdb\u884c\u7f16\u8f91\u3002\n\n\ud83d\udc8c\u9e23\u8c22\n\u611f\u8c22\u4e3a\u8fd9\u4e2a\u9879\u76ee\u4f5c\u51fa\u8d21\u732e\u7684\u6240\u6709 \u5c0f\u4f19\u4f34\n\ud83d\udcb0 \u00a0\u8d5e\u52a9\n\u5fae\u4fe1\n\n\u652f\u4ed8\u5b9d\n\n\u6350\u8d60\n\u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u7684\u6350\u8d60\u5217\u8868\nLicense\nCC BY-NC-ND 4.0\n","48":"\n\n\n\n\n\n  The compiler for writing next generation JavaScript.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupporting Babel\n\n\n\n\n\nBabel (pronounced \"babble\")  is a community-driven project used by many companies and projects, and is maintained by a group of volunteers. If you'd like to help support the future of the project, please consider:\n\nGiving developer time on the project. (Message us on Twitter or Slack for guidance!)\nGiving funds by becoming a sponsor on Open Collective or Patreon!\n\nSponsors\nOur top sponsors are shown below! [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\nBabel is a tool that helps you write code in the latest version of JavaScript. When your supported environments don't support certain features natively, Babel will help you compile those features down to a supported version.\nIn\n\/\/ ES2020 nullish coalescing\nfunction greet(input) {\n  return input ?? \"Hello world\";\n}\nOut\nfunction greet(input) {\n  return input != null ? input : \"Hello world\";\n}\nTry it out at our REPL.\nFAQ\nWho maintains Babel?\nMostly a handful of volunteers, funded by you! Please check out our team page!\nIs there a Babel song?\nI'm so glad you asked: Hallelujah \u2014\u2014 In Praise of Babel by @angus-c, audio version by @swyx. Tweet us your recordings!\nLooking for support?\nFor questions and support please join our Slack Community (you can sign up here for an invite), ask a question on Stack Overflow, or ping us on Twitter.\nWhere are the docs?\nCheck out our website: babeljs.io, and report issues\/features at babel\/website.\nWant to report a bug or request a feature?\nPlease read through our CONTRIBUTING.md and fill out the issue template at babel\/issues!\nWant to contribute to Babel?\nCheck out:\n\nOur #development Slack channel and say hi! (sign-up)\nIssues with the good first issue and help wanted label. We suggest also looking at the closed ones to get a sense of the kinds of issues you can tackle.\n\nSome resources:\n\nOur CONTRIBUTING.md to get started with setting up the repo.\nOur discussions\/notes\/roadmap: babel\/notes\nOur progress on TC39 proposals: babel\/proposals\nOur blog which contains release posts and explanations: \/blog\nOur videos page with talks about open source and Babel: \/videos\nOur podcast\n\nHow is the repo structured?\nThe Babel repo is managed as a monorepo that is composed of many npm packages.\nLicense\nMIT\n","49":"node-webkit is renamed NW.js\n\nOfficial site: https:\/\/nwjs.io\nIntroduction\nNW.js is an app runtime based on Chromium and node.js. You can\nwrite native apps in HTML and JavaScript with NW.js. It also lets you\ncall Node.js modules directly from the DOM and enables a new way of writing\nnative applications with all Web technologies.\nIt was created in the Intel Open Source Technology Center.\nBuilding a Cross-platform Desktop App with NW.js\nCreating Desktop Applications With node-webkit\nWebApp to DesktopApp with node-webkit (slides)\nEssay on the history and internals of the project\nFeatures\n\nApps written in modern HTML5, CSS3, JS and WebGL.\nComplete support for Node.js APIs and all its third party modules.\nGood performance: Node and WebKit run in the same thread: Function calls are made straightforward; objects are in the same heap and can just reference each other.\nEasy to package and distribute apps.\nAvailable on Linux, Mac OS X and Windows.\n\nDownloads\n\n\nv0.50.0: (Nov 19, 2020, based off of Node.js v15.0.1, Chromium 87.0.4280.66) : release notes\nNOTE You might want the SDK build. Please read the release notes.\n\n\nLinux: 32bit \/ 64bit\n\n\nWindows: 32bit \/ 64bit\n\n\nMac 10.10+: 64bit\n\n\nUse Legacy build for Win XP and early OSX.\n\n\nlatest nightly build from git tip: https:\/\/dl.nwjs.io\/live-build\/\n\n\nPrevious versions; See the mapping file for the version info in previous releases.\n\n\nDemos and real apps\nYou may also be interested in our demos repository and the List of apps and companies using nw.js.\nQuick Start\nCreate index.html:\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello World!<\/title>\n  <\/head>\n  <body>\n    <h1>Hello World!<\/h1>\n    We are using node.js <script>document.write(process.version)<\/script>.\n  <\/body>\n<\/html>\nCreate package.json:\n{\n  \"name\": \"nw-demo\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index.html\"\n}\nRun:\n$ \/path\/to\/nw .  (suppose the current directory contains 'package.json')\nNote: on Windows, you can drag the folder containing package.json to nw.exe to open it.\nNote: on OSX, the executable binary is in a hidden directory within the .app file. To run node-webkit on OSX, type:\n\/path\/to\/nwjs.app\/Contents\/MacOS\/nwjs . (suppose the current directory contains 'package.json')\nDocuments\nOfficial documentation: http:\/\/docs.nwjs.io\/\nFor more information on how to write\/package\/run apps, see:\n\nHow to run apps\nHow to package and distribute your apps\nHow to use Node.js modules in node-webkit\n\nAnd our Wiki for much more.\nCommunity\nWe use the google group as\nour mailing list (use English only). Subscribe via nwjs-general+subscribe@googlegroups.com.\nNOTE: Links to the old google group (e.g. https:\/\/groups.google.com\/forum\/#!msg\/node-webkit\/doRWZ07LgWQ\/4fheV8FF8zsJ) that are no longer working can be fixed by replacing node-webkit with nwjs-general (e.g https:\/\/groups.google.com\/forum\/#!msg\/nwjs-general\/doRWZ07LgWQ\/4fheV8FF8zsJ).\nIssues are being tracked here on GitHub.\nThe source code for NW.js and the daily development spans across multiple repositories in this organization. This repository is for the purpose of issue tracking, landing page and part of the source code.\nVerifying Binaries\nStarting from 0.32.0 the stable and nightly download directories contain a SHASUMS256.txt\nfile that lists the SHA checksums for each file available for download, as well as the\nchecksums for the files inside the download package.\nThe SHASUMS256.txt can be downloaded using curl.\n$ curl -O https:\/\/dl.nwjs.io\/vx.y.z\/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep nwjs-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nThe stable releases (but not Nightlies) also have the GPG detached\nsignature of SHASUMS256.txt available as SHASUMS256.txt.asc. You can use gpg\nto verify that SHASUMS256.txt has not been tampered with.\nTo verify SHASUMS256.txt has not been altered, you will first need to import\nthe GPG key of NW.js maintainer to create releases.\nUse this command to import the key:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys 78680FA9E21BB40A\n(Key fingerprint is 1E8B EE8D 5B0C 4CBC D6D1  9E26 7868 0FA9 E21B B40A)\n\nNext, download the SHASUMS256.txt.asc for the release:\n$ curl -O https:\/\/dl.nwjs.io\/vx.y.z\/SHASUMS256.txt.asc\nAfter downloading the appropriate SHASUMS256.txt and SHASUMS256.txt.asc files,\nyou can then use gpg --verify SHASUMS256.txt.asc SHASUMS256.txt to verify\nthat the file has been signed by an authorized member of the NW.js team.\nOnce verified, use the SHASUMS256.txt file to get the checksum for\nthe binary verification command above.\nLicense\nNW.js's code in this repo uses the MIT license, see our LICENSE file. To redistribute the binary, see How to package and distribute your apps\n","50":"\n\n\n  anime.js\n\nJavaScript animation engine | animejs.com\n\n\n\n\n\nAnime.js (\/\u02c8\u00e6n.\u0259.me\u026a\/) is a lightweight JavaScript animation library with a simple, yet powerful API.\n  It works with CSS properties, SVG, DOM attributes and JavaScript Objects.\n\n\nGetting started\u00a0|\u00a0Documentation\u00a0|\u00a0Demos and examples\u00a0|\u00a0Browser support\n\nGetting started\nDownload\nVia npm\n$ npm install animejs --save\nor manual download.\nUsage\nES6 modules\nimport anime from 'animejs\/lib\/anime.es.js';\nCommonJS\nconst anime = require('animejs');\nFile include\nLink anime.min.js in your HTML :\n<script src=\"anime.min.js\"><\/script>\nHello world\nanime({\n  targets: 'div',\n  translateX: 250,\n  rotate: '1turn',\n  backgroundColor: '#FFF',\n  duration: 800\n});\nDocumentation\n\nTargets\nProperties\nProperty parameters\nAnimation parameters\nValues\nKeyframes\nStaggering\nTimeline\nControls\nCallbacks and promises\nSVG Animations\nEasing functions\nHelpers\n\nDemos and examples\n\nCodePen demos and examples\njuliangarnier.com\nanimejs.com\nMoving letters by @tobiasahlin\nGradient topography animation by @crnacura\nOrganic shape animations by @crnacura\nPieces slider by @lmgonzalves\nStaggering animations\nEasings animations\nSphere animation\nLayered animations\nanime.js logo animation\n\nBrowser support\n\n\n\nChrome\nSafari\nIE \/ Edge\nFirefox\nOpera\n\n\n\n\n24+\n8+\n11+\n32+\n15+\n\n\n\n\nWebsite | Documentation | Demos and examples | MIT License | \u00a9 2019 Julian Garnier.\n","51":"\n\n\n\n\n \n\n\n\n\n\n\n\nFeatures\n\n\ud83d\ude80 Blazing fast bundle times - multicore compilation, and a filesystem cache for fast rebuilds even after a restart.\n\ud83d\udce6 Out of the box support for JS, CSS, HTML, file assets, and more - no plugins to install.\n\ud83d\udc20 Automatically transforms modules using Babel, PostCSS, and PostHTML when needed - even node_modules.\n\u2702\ufe0f Zero configuration code splitting using dynamic import() statements.\n\ud83d\udd25 Built in support for hot module replacement\n\ud83d\udea8 Friendly error logging experience - syntax highlighted code frames help pinpoint the problem.\n\n\nBelow is the design document that was created before work on the implementation of Parcel 2 started and some sections are outdated. The actual (somewhat complete) documentation for Parcel 2 is available here: https:\/\/v2.parceljs.org\/.\n\nGetting Started\nBefore we get started, you'll need to install Node and Yarn (or npm) and create\na package.json for your project if you haven't already.\nyarn init\nThen with Yarn you can install parcel into your app:\nyarn add --dev parcel@next\nFrom there you just need to point Parcel at some of your entry files. Like if\nyou're building a website, an index.html file:\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" \/>\n    <title>My First Parcel App<\/title>\n  <\/head>\n  <body>\n    <h1>Hello, World!<\/h1>\n  <\/body>\n<\/html>\nNow if you just run:\nyarn parcel index.html\nYou should get a URL that looks something like: http:\/\/localhost:1234\/.\nNext you can start adding dependencies by specifying them in your code (however\nyour language specifies other assets). So for HTML we could create a\nstyles.css file next to our index.html file and include it with a <link>\ntag.\nh1 {\n  color: hotpink;\n  font-family: cursive;\n}\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" \/>\n    <title>My First Parcel App<\/title>\n    <link rel=\"stylesheet\" href=\".\/styles.css\" \/>\n  <\/head>\n  <body>\n    <h1>Hello, World!<\/h1>\n  <\/body>\n<\/html>\nIf we want parcel to update our changes in the browser without refreshing the page,\nwe need to add at least a dummy javascript file e.g. app.js next to our index.html.\nThis file allows parcel to inject all the necessary code to show your changes.\nThis file will later contain your javascript application.\nconsole.log(\"Hello World\");\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" \/>\n    <title>My First Parcel App<\/title>\n    <link rel=\"stylesheet\" href=\".\/styles.css\" \/>\n    <script src=\".\/app.js\"><\/script>\n  <\/head>\n  <body>\n    <h1>Hello, World!<\/h1>\n  <\/body>\n<\/html>\nDocumentation\n\nIntroduction\nParcel CLI\n\nCLI Args & Flags\n\nparcel serve\nparcel watch\nparcel build\n[...entries]\n--target [name]\n--open, -o [browser]\n--host <host>\n--port <port>, -p\n--https\n\n--cert <path>\n--key <path>\n\n\n--dist-dir <dir>\n--cache-dir <dir>, --no-cache\n--hot, --no-hot\n\n--hot-host <hostname>\n--hot-port <port>\n\n\n--[no-]source-maps\n--autoinstall [npm\/yarn], --no-autoinstall\n--log-level <level>\n--version, -v, -V\n--help, -h\n\n\n\n\nParcel Config\n\nConfiguring external tools\nConfiguring Parcel\npackage.json\n\npackage.json#name\npackage.json#version\npackage.json#main\npackage.json#module\npackage.json#browser\npackage.json#source\npackage.json#browserslist\npackage.json#engines\npackage.json#targets\npackage.json#alias\n\n\n.parcelrc\n\nGlob maps in .parcelrc\n.parcelrc#extends\n.parcelrc#resolvers\n.parcelrc#transformers\n.parcelrc#bundler\n.parcelrc#namers\n.parcelrc#runtimes\n.parcelrc#packagers\n.parcelrc#optimizers\n.parcelrc#reporters\n.parcelrc#validators\n\n\n\n\nParcel Architecture\n\nPhases of Parcel\nAsset Graph\nBundles\nSources\nTargets\n\nTarget Configuration\n\n\nEnvironments\nCaching\n\n\nAsset Resolution\n\nLocal Paths\nPackage Paths\nURLs\nTilde Paths\nAliases\n\n\nPlugins\n\nResolvers\nTransformers\nBundlers\nNamers\nRuntimes\nPackagers\nOptimizers\nReporters\nValidators\n\n\nCreating Plugins\n\nNaming\nVersioning\nEngines\n\n\nPlugin APIs\n\nResolvers\nTransformers\nBundler\nNamers\nRuntimes\nPackagers\nOptimizers\nReporters\nValidators\n\n\n\nIntroduction\nParcel is a compiler for all your code, regardless of the language or toolchain.\nParcel takes all of your files and dependencies, transforms them, and merges\nthem together into a smaller set of output files that can be used to run your\ncode.\nParcel supports many different languages and file types out of the box, from\nweb technologies like HTML, CSS, and JavaScript, to lower level languages like\nRust, and anything that compiles to WebAssembly (WASM), to assets like images,\nfonts, videos, and more.\nParcel makes your code portable. You can build your code for different\nenvironments, for the web for your server, or for an app. You can even build\nmultiple targets at once and have them live update as you make changes.\nParcel is fast and predictable. It compiles all of your files in isolation in\nparallel inside workers, caching all of them as it goes along. Caches are\nstable across machines and are only affected by the files and configs within\nyour project (unless you want to pass specific environment variables).\nParcel CLI\nThe Parcel CLI is built into the main parcel package. While you can install\nit globally and run it, it is much better to install it locally into your\nproject as a dev dependency.\nyarn add --dev parcel@next\nYou should also add some \"scripts\" to your package.json to run it easier.\n{\n  \"name\": \"my-project\",\n  \"scripts\": {\n    \"build\": \"parcel build index.html\",\n    \"start\": \"parcel serve index.html\"\n  },\n  \"devDependencies\": {\n    \"parcel\": \"latest\"\n  }\n}\nNow you can run yarn build to bundle your project for production and\nyarn start to dev on your project.\nCLI Args & Flags\nUsage:\n$ parcel [command] [...entries] [...flags]\nparcel serve\nServe assets on a local server.\nparcel watch\nWatch and rebuild code on file changes.\nparcel build\nBuild code once, in production mode.\n[...entries]\nEntry files to start bundling, these will be preserved as entry points in the\noutput. Defaults to package.json#source, falling back to src\/index.* or\nindex.*. See #Sources.\n--target [name]\nSpecifies a specific target to build. If unspecified, Parcel builds all\ntargets specified in package.json. See #Targets.\n--open, -o [browser]\nOpen your local server in a browser. You can optionally pass the name of the\nbrowser you want to open, otherwise it will use your default browser.\n--host <host>\nConfigure the host to serve assets on. The default is to listen on all interfaces.\n--port <port>, -p\nConfigure the port to serve assets on. Alternatively you can use the $PORT\nenvironment variable.\n--https\nThis will generate a local certificate (which will be untrusted by your\nbrowser, you'll need to approve it) and serve your assets over https:\/\/\n--cert <path>\nSpecify the filepath to your SSL certificate when using --https.\n--key <path>\nSpecify the filepath to your SSL key when using --https.\n--dist-dir <dir>\nConfigure the directory where compiled assets are output. Default is .\/dist.\n--cache-dir <dir>, --no-cache\nConfigure the cache directory with --cache <dir> or disable it altogether\nwith --no-cache.\n--hot, --no-hot\nTurn hot reloading on or off.\n--hot-host <hostname>\nConfigure the hot reloading hostname.\n--hot-port <port>\nConfigure the hot reloading port.\n--[no-]source-maps\nTurn source maps on or off. Source maps are turned on by default.\n--autoinstall [npm\/yarn], --no-autoinstall\nWhen enabled, whenever Parcel discovers a dependency that isn't installed it\nwill attempt to install it with either npm or Yarn (defaults to npm unless a\nyarn.lock exists).\n--log-level <level>\nSet the log level, either either \"none\", \"error\", \"warn\", \"info\", or \"verbose\".\nThe default is \"info\".\n--version, -v, -V\nReturn the current version of Parcel.\n--help, -h\nGet help with the CLI.\nParcel Config\nParcel has always and will always work out of the box for many projects with\nzero configuration. It should always be extremely simple to get started. But if\nyou do want more control, we give you the tools to do so.\nConfiguring external tools\nA huge part of what Parcel does is run other tools over your code. Instead of\npulling all that configuration into Parcel, we make use of their own\nconfiguration systems. So if you're using Babel, you should just use .babelrc\nfiles to configure it.\nWhen we do need to introduce config, we create tool specific config files in\norder to do so.\nConfiguring Parcel\nWhen you do need to configure Parcel, it will be in one of 3 places.\n\nIf you need to configure the CLI, it will be a CLI flag\nIf you need to configure your package, it will be in the package.json\nIf you need to configure something with your files or the Parcel asset\npipeline, it will be in .parcelrc\n\npackage.json\n[todo]\n{\n  \"name\": \"foo\",\n  \"main\": \"dist\/main\/index.js\",\n  \"module\": \"dist\/module\/index.js\",\n  \"browser\": \"dist\/browser\/index.js\",\n  \"browserslist\": [\"> 1%\", \"not dead\"],\n  \"engines\": {\n    \"node\": \">=4.x\"\n  },\n  \"source\": \"src\/index.js\",\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\"\n      }\n    },\n    \"module\": {\n      \"engines\": {\n        \"node\": \">=8.x\"\n      }\n    },\n    \"browser\": {\n      \"engines\": {\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  },\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\"\n  }\n}\npackage.json#name\n(Required) The name of the package is always required in order to be\nconsidered a valid package.json.\n{\n  \"name\": \"my-package\"\n}\npackage.json#version\n(Required) All packages inside node_modules must have a package.json#version.\n{\n  \"version\": \"1.0.0\"\n}\npackage.json#main\nThis is the \"main\" target's entry point for the package, by default in library mode (doesn't bundle dependencies).\n{\n  \"main\": \"dist\/main\/index.js\"\n}\nSee Targets\npackage.json#module\nThis is the \"module\" target's entry point for the package, by default in library mode (doesn't bundle dependencies).\n{\n  \"module\": \"dist\/module\/index.js\"\n}\nSee Targets\npackage.json#browser\nThis is the \"browser\" target's entry point for the package, by default in library mode (doesn't bundle dependencies).\n{\n  \"browser\": \"dist\/browser\/index.js\"\n}\nSee Targets\npackage.json#source\nSpecify the entry points for your source code which gets mapped to your\ntargets.\n{\n  \"source\": \"src\/index.js\",\n  \"source\": [\"src\/index.js\", \"src\/index.html\"]\n}\nSee Sources\npackage.json#browserslist\nAs specified by Browserslist, this field is for specifying which transformers\nshould be applied to browser bundles.\n{\n  \"browserslist\": [\"> 0.2%\", \"not dead\"]\n}\nSee Environments\npackage.json#engines\nSpecify what versions of what engines you want to support.\n{\n  \"engines\": {\n    \"node\": \">=4.x\",\n    \"electron\": \">=2.x\"\n  }\n}\nSee Environments\npackage.json#targets\nConfiguration for individual targets.\n{\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\",\n        \"electron\": \">=2.x\"\n      },\n    },\n    \"browser\": {\n      \"engines\": {\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  }\n}\nSee Targets\npackage.json#alias\nAliases asset names\/paths to other assets.\n{\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\"\n  }\n}\nSee Aliases\n.parcelrc\nYour .parcelrc file will likely contain just a few fields (if you have one at\nall), but here's an example of a .parcelrc file that contains every field:\n{\n  \"extends\": [\"@parcel\/config-default\"],\n  \"resolvers\": [\"@parcel\/resolver-default\"],\n  \"transformers\": {\n    \"*.vue\": [\"@parcel\/transformer-vue\"],\n    \"*.scss\": [\"@parcel\/transformer-sass\"],\n    \"*.js\": [\"@parcel\/transformer-babel\"],\n    \"*.css\": [\"@parcel\/transformer-postcss\"],\n    \"*.html\": [\"@parcel\/transformer-posthtml\"]\n  },\n  \"bundler\": \"@parcel\/bundler-default\",\n  \"namers\": [\"@parcel\/namer-default\"],\n  \"runtimes\": {\n    \"browser\": [\"@parcel\/runtime-js\", \"@parcel\/runtime-browser-hmr\"],\n    \"node\": [\"@parcel\/runtime-js\"]\n  },\n  \"packagers\": {\n    \"*.js\": \"@parcel\/packager-js\",\n    \"*.css\": \"@parcel\/packager-css\",\n    \"*.html\": \"@parcel\/packager-html\",\n    \"*.wasm\": \"@parcel\/packager-wasm\",\n    \"*.raw\": \"@parcel\/packager-raw\"\n  },\n  \"optimizers\": {\n    \"*.js\": [\"@parcel\/optimizer-uglify\"],\n    \"*.css\": [\"@parcel\/optimizer-cssnano\"],\n    \"*.html\": [\"@parcel\/optimizer-htmlnano\"],\n    \"*.{png,jpg,jpeg,svg,...}\": [\"@parcel\/optimizer-imagemin\"]\n  },\n  \"reporters\": [\"@parcel\/reporter-cli\"]\n}\nGlob maps in .parcelrc\nMany config properties like transformers or packagers use objects as maps of\nglobs to package names. While objects in JSON are technically unordered, Parcel\ndoes use the order to give globs priority when a file name is being tested\nagainst them.\n{\n  \"transformers\": {\n    \"icons\/*.svg\": [\"highest-priority\"],\n    \"*.svg\": [\"lowest-priority\"]\n  }\n}\nHere if we are trying to find a transform for the file icons\/home.svg, we'll\nwork our way down the globs until we find a match, which would be\nicons\/*.svg, we never reach *.svg.\n.parcelrc#extends\nextends can either be a string or an array of strings that specify base\nconfigs to extend. That base configuration can be the path to another\n.parcelrc file or the name of a Parcel config package.\n{\n  \"extends\": \"@parcel\/config-default\",\n  \"extends\": \"..\/.parcelrc\",\n  \"extends\": [\"@parcel\/config-default\", \"@company\/parcel-config\"]\n}\nWhen extending a config, Parcel does a shallow merge of the two configs.\n.parcelrc#resolvers\nresolvers is an array of strings that specifies the name of a Parcel resolver\npackage.\n{\n  \"resolvers\": [\"@parcel\/resolver-default\"]\n}\nSee Resolvers\n.parcelrc#transformers\ntransformers is an object map of globs to arrays of Parcel transform packages.\n{\n  \"transformers\": {\n    \"*.js\": [\"@parcel\/transformer-babel\"]\n  }\n}\nSee Transformers\n.parcelrc#bundler\nbundler is a string that specifies the name of a Parcel bundler package.\n{\n  \"bundler\": \"@parcel\/bundler-default\"\n}\nSee Bundlers\n.parcelrc#namers\nnamers is an array of Parcel namer packages.\n{\n  \"namers\": [\"@parcel\/namer-default\"]\n}\nSee Namers\n.parcelrc#runtimes\nruntimes is an object map of environments to arrays of Parcel runtime packages.\n{\n  \"runtimes\": {\n    \"browser\": [\"@parcel\/runtime-js\", \"@parcel\/runtime-browser-hmr\"],\n    \"node\": [\"@parcel\/runtime-js\"]\n  }\n}\nSee Runtimes\n.parcelrc#packagers\npackagers is an object map of globs to Parcel packager packages.\n{\n  \"packagers\": {\n    \"*.js\": [\"@parcel\/packager-js\"]\n  }\n}\nSee Packagers\n.parcelrc#optimizers\noptimizers is an object map of globs to arrays of Parcel optimizer packages.\n{\n  \"optimizers\": {\n    \"*.js\": [\"@parcel\/optimizer-uglify\"]\n  }\n}\nSee Optimizers\n.parcelrc#reporters\nreporters is an array of Parcel reporter packages.\n{\n  \"reporters\": [\"@parcel\/reporter-detailed\"]\n}\nSee Reporters.\n.parcelrc#validators\nvalidators is an object map of globs to arrays of Parcel validator packages.\n  \"validators\": {\n    \"*.ts\": [\"@parcel\/validator-typescript\"]\n  }\n}\nSee Validators.\nParcel Architecture\nEven if you aren't doing anything that complex, if you are going to use Parcel\na lot it makes sense to take some time and understand how it works.\nPhases of Parcel\nAt a high level Parcel runs through several phases:\n\nResolving\nTransforming\nBundling\nPackaging\nOptimizing\n(Validating)\n\nThe resolving and transforming phases work together in parallel to\nbuild a graph of all your assets.\nThis asset graph gets translated into bundles in the bundling phase.\nThen the packaging phase takes the assets in the calculated bundles and\nmerges them together into files each containing an entire bundle.\nFinally, in the optimizing phase, Parcel takes these bundles files and runs\nthem through optimizing transforms.\nAsset Graph\nDuring the resolving and transforming phases, Parcel discovers all the assets\nin your app or program. Every asset can have its own dependencies on other\nassets which Parcel will pull in.\nThe data structure that represents all of these assets and their dependencies\non one another is known as \"The Asset Graph\".\n\n\n\nAsset Name\nDependencies\n\n\n\n\nindex.html\napp.css, app.js\n\n\napp.css\nN\/A\n\n\napp.js\nnavbar.js\n\n\nnavbar.js\netc.\n\n\n\nBundles\nOnce Parcel has built the entire Asset Graph, it begins turning it into\n\"bundles\". These bundles are groupings of assets that get placed together in a\nsingle file.\nBundles will (generally) contain only assets in the same language:\n\n\n\nBundle Name\nAssets\n\n\n\n\nindex.html\nindex.html\n\n\napp.css\napp.css\n\n\napp.js\napp.js, navbar.js, etc.\n\n\n\nSome assets are considered \"entry\" points into your app, and will stay as\nseparate bundles. For example, if your index.html file links to an\nabout.html file, they won't be merged together.\n\n\n\nBundle Name\nAssets\nEntry URL\n\n\n\n\nindex.html\nindex.html\n\/\n\n\nabout.html\nabout.html\n\/about\n\n\n\nSources\n\"Sources\" are the files that contain the source code to your app before being\ncompiled by Parcel.\nParcel discovers these sources by following their dependencies on one another\nstarting at your \"entries\".\nThese entries will be one of:\n\n$ parcel <...entries>\n~\/package.json#source\n.\/src\/index.*\n.\/index.*\n\nFrom there, everything those assets depend on will be considered a \"source\" in\nParcel.\nTargets\nWhen Parcel runs, it can build your asset graph in multiple different ways\nsimultaneously. These are called \"targets\".\nFor example, you could have a \"modern\" target that targets newer browsers\nand a \"legacy\" target for older browsers.\nSources get mapped to targets,\nTarget Configuration\nIn the most explicit form, targets are configured via the\npackage.json#targets field.\n{\n  \"app\": \"dist\/browser\/index.js\",\n  \"appModern\": \"dist\/browserModern\/index.js\",\n  \"targets\": {\n    \"app\": { \/* target env *\/ },\n    \"appModern\": { \/* target env *\/ }\n  }\n}\nEach target has a name which corresponds to a top-level package.json field\nsuch as package.json#main or package.json#browser which specify the primary\nentry point for that target.\nInside each of those targets contains the target's environment configuration:\n\n\n\nOption\nPossible values\nDescription\n\n\n\n\ncontext\n'node' | 'browser' | 'web-worker' | 'electron-main' | 'electron-renderer'\nWhere the bundle should run\n\n\nincludeNodeModules\nboolean | [String]\nWhether to bundle all\/none\/some node_module dependency\n\n\noutputFormat\n'global' | 'esmodule' | 'commonjs'\nWhich type of imports\/exports should be emitted\n\n\npublicUrl\nstring\nThe public url of the bundle at runtime\n\n\nisLibrary\nboolean\nLibrary as in 'npm library'\n\n\nsourceMap\nboolean | {inlineSources?: boolean, sourceRoot?: string, inline?: boolean}\nEnable\/disable sourcemap and set options\n\n\nengines\nEngines\nSame as package.json#engines\n\n\n\nHowever, a lot of the normal configuration you might want will already have\ndefaults provided for you:\ntargets = {\n  main: {\n    engines: {\n      node: value(\"package.json#engines.node\"),\n      browsers: unless exists(\"package.json#browser\") then value(\"package.json#browserlist\")\n    },\n    isLibrary: true\n  },\n  module: {\n    engines: {\n      node: value(\"package.json#engines.node\"),\n      browsers: unless exists(\"package.json#browser\") then value(\"package.json#browserlist\")\n    },\n    isLibrary: true\n  },\n  browser: {\n    engines: {\n      browsers: value(\"package.json#browserslist\")\n    },\n    isLibrary: true\n  },\n  ...value(\"package.json#targets\"),\n}\nEnvironments\nEnvironments tell Parcel how to transform and bundle each asset. They tell\nParcel if an asset is going to be run in a browser or in NodeJS\/Electron.\nThey also tell Parcel's transform plugins how they should run. They tell\nBabel or\nAutoprefixer what browsers\nyour asset is targetting.\nYou can configure environments through your targets.\n{\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\",\n        \"electron\": \">=2.x\",\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  }\n}\nWhen one asset depends on another, the environment is inherited from its\nparent. But how you depend on the asset can change some properties of that\nenvironment.\nFor example:\nnavigator.serviceWorker.register('.\/service-worker.js');\nlet childEnvironment = {...parentEnvironment, browserContext: 'service-worker'};\nCaching\nParcel will create a \/.parcel-cache directory. It will be filled with\ndirectories with two letters, which are the start of a hash which is finished\nby the names of the JSON files inside.\n\/.parcel-cache\n  \/00\/\n    213debd8ddd45819b79a3a974ed487.json\n    40ae9b581afc53841307a4b3c2463d.json\n    63a9dd58fc1e8f8bb819759ea9793c.json\n    ...\n  \/01\/\n  \/..\/\n  \/zy\/\n  \/zz\/\n\nIt follows this weird structure in order to avoid too many files being created\nin a single directory, which degrades file system performance.\nAsset Resolution\nParcel follows the Node module resolution algorithm with a few additions.\nLocal Paths\n.\/path\/to\/file\n.\/path\/to\/file.js\n\nThese follow the Node module resolution algorithm.\nPackage Paths\npreact\nlodash\/cloneDeep\n@sindresorhus\/is\n\nThese follow the Node module resolution algorithm.\nURLs\nhttps:\/\/unpkg.com\/preact@8.2.9\/dist\/preact.min.js\n\nParcel by default will ignore URL dependencies, other resolver plugins may\nchoose to do something with them.\nTilde Paths\n~\/src\/file.js\n\nOnly when used outside of node_modules directories, the ~ is replaced by an\nabsolute path to the closest package root:\n\/path\/to\/app #(\/package.json)\nTo form a path that looks like:\n\/path\/to\/app\/src\/file.js\n\nThen it follows the Node module resolution algorithm.\nAliases\nAliases come in two forms:\n\nPackage Aliases: react -> preact\nFile\/Directory Aliases: utils -> .\/src\/utils\n\n{\n  \"name\": \"my-project\",\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\",\n    \"utils\": \".\/src\/utils\",\n    \"components\": \".\/src\/components\"\n  }\n}\nThere are a couple of rules:\n\nAliases will only be respected when specified outside of node_modules.\nAliases specified outside of node_modules will affect assets inside of node_modules.\nAliases cannot build off of other aliases.\nOnly one alias will be applied at a time.\nAliases must be valid npm package names.\n\nPlugins\nResolvers\nWhen one asset depends on another through an asset specifier, the resolver is\nresponsible for determining what asset is being requested.\nSee Asset Resolution for more details.\n{\n  \"resolvers\": [\"@parcel\/resolver-v1\"]\n}\nOfficial Resolvers:\n\n@parcel\/resolver-v1\n\nTransformers\ntransformers transform single assets as they are discovered and added to the\nasset graph. They mostly call out to different compilers and preprocessors.\n{\n  \"transformers\": {\n    \"*.js\": [\"@parcel\/transformer-babel\"]\n  }\n}\nOfficial Transformers:\n\n@parcel\/transformer-babel\n@parcel\/transformer-coffeescript\n@parcel\/transformer-glsl\n@parcel\/transformer-graphql\n@parcel\/transformer-json\n@parcel\/transformer-json5\n@parcel\/transformer-less\n@parcel\/transformer-posthtml\n@parcel\/transformer-postcss\n@parcel\/transformer-pug\n@parcel\/transformer-raw\n@parcel\/transformer-reason\n@parcel\/transformer-rust\n@parcel\/transformer-stylus\n@parcel\/transformer-toml\n@parcel\/transformer-typescript\n@parcel\/transformer-vue\n@parcel\/transformer-wasm\n@parcel\/transformer-webmanifest\n@parcel\/transformer-yaml\n...\n\nBundlers\nBundlers accept the entire asset graph and turn it into sets of bundles.\n{\n  \"bundler\": \"@parcel\/bundler-default\"\n}\nOfficial Bundlers:\n\n@parcel\/bundler-default\n\nNamers\nNamers accept a bundle and return a filename for that bundle.\n{\n  \"namers\": [\"@parcel\/namer-default\"]\n}\nOfficial Namers:\n\n@parcel\/namer-default\n\nRuntimes\nRuntimes get called after the bundler phase and generate an asset which gets\nincluded in the final bundle.\n{\n  \"runtimes\": {\n    \"browser\": [\"@parcel\/runtime-js\", \"@parcel\/runtime-browser-hmr\"],\n    \"node\": [\"@parcel\/runtime-js\"]\n  }\n}\nOfficial Runtimes:\n\n@parcel\/runtime-js\n@parcel\/runtime-hmr\n\nPackagers\nPackagers determine how to merge different asset types into a single bundle.\n{\n  \"packagers\": {\n    \"*.css\": \"@parcel\/packager-css\"\n  }\n}\nOfficial Packagers:\n\n@parcel\/packager-html\n@parcel\/packager-js\n@parcel\/packager-css\n@parcel\/packager-wasm\n@parcel\/packager-raw\n\nOptimizers\nOptimizers are similar to transformers, but they accept a bundle instead\nof a single asset.\n{\n  \"optimizers\": {\n    \"*.js\": [\"@parcel\/optimizer-terser\"],\n    \"*.css\": [\"@parcel\/optimizer-csso\"]\n  }\n}\nOfficial Optimizers:\n\n@parcel\/packager-terser\n@parcel\/packager-csso\n[todo]\n\nReporters\nReporters receive events as they happen and can either use the Parcel logger to\noutput to stdout\/stderr or they can return assets to be generated on the file\nsystem.\n{\n  \"reporters\": [\"@parcel\/reporter-cli\", \"@parcel\/reporter-dev-server\"]\n}\nOfficial Reporters:\n\n@parcel\/reporter-cli\n@parcel\/reporter-dev-server\n[todo]\n\nValidators\nValidators emit errors for source code after a build is completed.\nFor example, type checking and linting.\n{\n  \"validators\": {\n    \"*.ts\": [\"@parcel\/validator-typescript\"]\n  }\n}\nOfficial Validators:\n\n@parcel\/validator-typescript\n@parcel\/validator-eslint\n[todo]\n\nCreating Plugins\nNaming\nAll plugins must follow a naming system:\n\n\n\n\nOfficial package\nCommunity packages\nPrivate company\/scoped team packages\n\n\n\n\nConfigs\n@parcel\/config-{name}\nparcel-config-{name}\n@scope\/parcel-config[-{name}]\n\n\nResolvers\n@parcel\/resolver-{name}\nparcel-resolver-{name}\n@scope\/parcel-resolver[-{name}]\n\n\nTransformers\n@parcel\/transformer-{name}\nparcel-transformer-{name}\n@scope\/parcel-transformer[-{name}]\n\n\nBundlers\n@parcel\/bundler-{name}\nparcel-bundler-{name}\n@scope\/parcel-bundler[-{name}]\n\n\nNamers\n@parcel\/namer-{name}\nparcel-namer-{name}\n@scope\/parcel-namer[-{name}]\n\n\nRuntimes\n@parcel\/runtime-{name}\nparcel-runtime-{name}\n@scope\/parcel-runtime[-{name}]\n\n\nPackagers\n@parcel\/packager-{name}\nparcel-packager-{name}\n@scope\/parcel-packager[-{name}]\n\n\nOptimizers\n@parcel\/optimizer-{name}\nparcel-optimizer-{name}\n@scope\/parcel-optimizer[-{name}]\n\n\nReporters\n@parcel\/reporter-{name}\nparcel-reporter-{name}\n@scope\/parcel-reporter[-{name}]\n\n\nValidators\n@parcel\/validator-{name}\nparcel-validator-{name}\n@scope\/parcel-validator[-{name}]\n\n\n\nThe {name} must be descriptive and directly related to the purpose of the\npackage. Someone should be able to have an idea of what the package does simply\nby reading the name in a .parcelrc or package.json#devDependencies.\nparcel-transformer-posthtml\nparcel-packager-wasm\nparcel-reporter-graph-visualizer\n\nIf your plugin adds support for a specific tool, please use the name of the\ntool.\nparcel-transformer-es6 (bad)\nparcel-transformer-babel (good)\n\nIf your plugin is a reimplementation of something that exists, try naming it\nsomething that explains why it is a separate:\nparcel-transformer-better-typescript (bad)\nparcel-transformer-typescript-server (good)\n\nWe ask that community members work together and when forks happen to try and\nresolve them. If someone made a better version of your plugin, please consider\ngiving the better package name over, have them make a major version bump, and\nredirect people to the new tool.\nVersioning\nYou must follow semantic versioning (to the best of your ability). No, it's not\nthe perfect system, but it's the best one we have and people do depend on it.\nIf plugin authors intentionally don't follow semantic versioning, Parcel may\nstart warning users that they should be locking down the version number for\nyour plugin.\n\nWarning: The plugin \"parcel-transform-typescript\" does not follow semantic\nversioning. You should lock the version range down so your code does not\nbreak when they make changes. Please upvote this issue to encourage them to\nfollow semver: https:\/\/github.com\/user\/parcel-transform-typescript\/issues\/43\n\nEngines\nYou must specify a package.json#engines.parcel field with the version range\nof Parcel that your plugin supports:\n{\n  \"name\": \"parcel-transform-imagemin\",\n  \"engines\": {\n    \"parcel\": \"2.x\"\n  }\n}\nIf you do not specify this field, Parcel will output a warning:\nWarning: The plugin \"parcel-transform-typescript\" needs to specify a `package.json#engines.parcel` field with the supported Parcel version range.\n\nIf you do specify the parcel engine field and the user is using an incompatible\nversion of Parcel, they will see an error:\nError: The plugin \"parcel-transform-typescript\" is not compatible with the\ncurrent version of Parcel. Requires \"2.x\" but the current version is \"3.1.4\"\n\nParcel uses node-semver to match version ranges.\nPlugin APIs\nThere are several different types of plugins. They all look very similar, but\nare kept separate so we can have strict contracts one what each one is allowed\nto do.\nThere are some rules that should be followed across every type of plugin:\n\nStateless \u2014 Avoid any kind of state, it will likely be the source of bugs\nfor your users. For example, the same transform may exist in multiple\nseparate workers which are not allowed to communicate with one another, state\nwill not work as expected.\nPure \u2014 Given the same input, a plugin must produce the same output, and\nyou must not have any observable side effects, or implicit dependencies.\nOtherwise Parcel's caching will break and your users will be sad. You should\nnever have to tell users to delete their caches.\n\nThe plugin APIs all follow a common shape:\nimport {NameOfPluginType} from '@parcel\/plugin';\n\nexport default new NameOfPluginType({\n  async methodName(opts: JSONObject): Promise<JSONObject> {\n    return result;\n  }\n});\nThey are made up of modules with well-known named exports of async functions\nthat:\n\nAccept a strictly validated JSON-serializable opts object.\nReturn a strictly validated JSON-serializable vals object.\n\nIf something you need is not being passed through opts, please come talk to\nthe Parcel team about it. Avoid trying to get information yourself from other\nsources, especially from the file system.\nResolvers\nResolvers get called with an asset request (consisting of a source file path\nand the specifier of what is being requested) which it then attempts to\nresolve. If the resolver isn't sure how to handle a request, it can also return\nnull and pass it to the next resolver in the chain.\nimport {Resolver} from '@parcel\/plugin';\n\nexport default new Resolver({\n  async resolve({dependency}) {\n    \/\/ ...\n    return {filePath} || null;\n  }\n});\nTransformers\nTransformers transform single assets as they are discovered and added to the\nasset graph. They mostly call out to different compilers and preprocessors.\nimport {Transform} from '@parcel\/plugin';\n\nexport default new Transform({\n  async parse({asset}) {\n    \/\/ ...\n    return ast;\n  },\n\n  async transform({asset}) {\n    \/\/ ...\n    return [assets];\n  },\n\n  async generate({asset}) {\n    \/\/ ...\n    return {code, map};\n  }\n});\nBundler\nBundlers accept the entire asset graph and modify it to add bundle nodes that group the assets\ninto output bundles.\nimport {Bundler} from '@parcel\/plugin';\n\nexport default new Bundler({\n  async bundle({graph}) {\n    \/\/ ...\n  },\n\n  async optimize({graph}) {\n    \/\/ ...\n  }\n});\nNamers\nNamers accept a bundle and output a filename for that bundle.\nimport {Namer} from '@parcel\/plugin';\n\nexport default new Namer({\n  async name({bundle, bundleGraph}) {\n    \/\/ ...\n    return name;\n  }\n});\nRuntimes\nRuntimes accept a bundle and return assets to be inserted into that bundle.\nimport {Runtime} from '@parcel\/runtime';\n\nexport default new Runtime({\n  async apply({bundle, bundleGraph}) {\n    \/\/ ...\n    return assets;\n  }\n});\nPackagers\nPackagers determine how to merge different asset types into a single bundle.\nimport {Packager} from '@parcel\/plugin';\n\nexport default new Packager({\n  async package({bundle}) {\n    \/\/ ...\n    return {contents, map};\n  },\n});\nOptimizers\nOptimizers are similar to transformers, but they accept a bundle instead\nof a single asset.\nimport {Optimizer} from '@parcel\/plugin';\n\nexport default new Optimizer({\n  async optimize({bundle, contents, map}) {\n    \/\/ ...\n    return {contents, map};\n  }\n});\nReporters\nReporters receive events as they happen and can output to stdout\/stderr,\nor perform other actions.\nimport {Reporter} from '@parcel\/plugin';\n\nexport default new Reporter({\n  async report({ event: { type, ... } }) {\n    \/\/ ...\n  }\n});\nValidators\nValidators receive an asset, and can throw errors if that asset is invalid\nin some way, e.g. type errors or linting errors.\nimport {Validator} from '@parcel\/plugin';\n\nexport default new Validator({\n  async validate({asset}) {\n    \/\/ ...\n    throw error;\n  }\n});\nSome validators (such as @parcel\/validator-typescript) may wish to maintain a project-wide cache for efficiency. For these cases, it is appropriate to use a different interface where parcel hands all changed files to the validator at the same time:\nimport {Validator} from '@parcel\/plugin';\n\nexport default new Validator({\n  async validateAll({assets}) {\n    \/\/ ...\n    throw error;\n  }\n});\nIf your plugin implements validateAll, Parcel will make sure to always invoke this method on the same thread (so that your cache state is accessible).\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md file for details\n","52":"Introduction\n\n\n\nAdminLTE is a fully responsive administration template. Based on Bootstrap 4.4 framework and also the JS\/jQuery plugin.\nHighly customizable and easy to use. Fits many screen resolutions from small mobile devices to large desktops.\nPreview on AdminLTE.io\nLooking for Premium Templates?\nAdminLTE.io just opened a new premium templates page. Hand picked to ensure the best quality and the most affordable\nprices. Visit https:\/\/adminlte.io\/premium for more information.\n\nAdminLTE has been carefully coded with clear comments in all of its JS, SCSS and HTML files.\nSCSS has been used to increase code customizability.\nInstallation\nThere are multiple ways to install AdminLTE.\nDownload:\nDownload from GitHub releases.\nUsing The Command Line:\nImportant Note: To install it via npm\/Yarn, you need at least Node.js 10 or higher.\n\n\nVia npm\nnpm install admin-lte@^3.0 --save\n\n\nVia Yarn\nyarn add admin-lte@^3.0\n\n\nVia Composer\ncomposer require \"almasaeed2010\/adminlte=~3.0\"\n\n\nVia Git\nClone to your machine\ngit clone https:\/\/github.com\/ColorlibHQ\/AdminLTE.git\n\n\nDocumentation\nVisit the online documentation for the most\nupdated guide. Information will be added on a weekly basis.\nBrowser Support\n\nIE 10+\nFirefox (latest)\nChrome (latest)\nSafari (latest)\nOpera (latest)\nMicrosoft Edge (latest)\n\nContributions\nContributions are always welcome and recommended! Here is how:\n\n\nFork the repository (here is the guide).\n\n\nClone to your machine\ngit clone https:\/\/github.com\/YOUR_USERNAME\/AdminLTE.git\n\n\nCreate a new branch\n\n\nMake your changes\n\n\nCreate a pull request\n\n\nCompile dist files\nTo compile the dist files you need Node.js\/npm, clone\/download the repo then:\n\nnpm install (install npm deps)\nOptional: npm run dev (developer mode, autocompile with browsersync support for live demo)\nnpm run production (compile css\/js files)\n\nContribution Requirements:\n\nWhen you contribute, you agree to give a non-exclusive license to AdminLTE.io to use that contribution in any context as we (AdminLTE.io) see appropriate.\nIf you use content provided by another party, it must be appropriately licensed using an open source license.\nContributions are only accepted through GitHub pull requests.\nFinally, contributed code must work in all supported browsers (see above for browser support).\n\nLicense\nAdminLTE is an open source project by AdminLTE.io that is licensed under MIT.\nAdminLTE.io reserves the right to change the license of future releases.\nLatest Release\n\nAdminLTE 3\n\nLegacy Releases\n\nAdminLTE 2\nAdminLTE 1\n\nChangelog\nVisit the releases page to view the changelog\nImage Credits\n\nPixeden\nGraphicsfuel\nPickaface\nUnsplash\nUifaces\n\n","53":"impress.js\n\nIt's a presentation framework based on the power of CSS3 transforms and\ntransitions in modern browsers and inspired by the idea behind prezi.com.\nWARNING\nimpress.js may not help you if you have nothing interesting to say ;)\nHOW TO USE IT\nChecking out and initializing the git repository\ngit clone --recursive https:\/\/github.com\/impress\/impress.js.git\ncd impress.js\n\nNote: For a minimal checkout, omit the --recursive option. This will leave out extra plugins.\nStable releases\nNew features and fixes are continuously merged into the master branch, which is what the above command will check out. For the latest stable release, see the Github Releases page.\nDocumentation\nReference documentation of core impress.js features and API you can find it in DOCUMENTATION.md.\nThe HTML source code of the official impress.js demo serves as a good example usage and contains comments explaining various features of impress.js. For more information about styling you can look into CSS code which shows how classes provided by impress.js can be used. Last but not least JavaScript code of impress.js has some useful comments if you are interested in how everything works. Feel free to explore!\nOfficial demo\nimpress.js demo by @bartaz\nExamples and demos\nThe Classic Slides demo is targeted towards beginners, or can be used as a template for presentations that look like the traditional PowerPoint slide deck. Over time, it also grew into the example presentation that uses most of the features and addons available.\nMore examples and demos can be found on Examples and demos wiki page.\nFeel free to add your own example presentations (or websites) there.\nOther tutorials and learning resources\nIf you want to learn even more there is a list of tutorials and other learning resources\non the wiki, too.\nThere is also a book available about Building impressive presentations with impress.js by Rakhitha Nimesh Ratnayake.\nYou may want to check out the sibling project Impressionist: a 3D GUI editor that can help you in creating impress.js presentations.\nMailing list\nYou're welcome to ask impress.js related questions on the impressionist-presentations mailing list.\nREPOSITORY STRUCTURE\n\nindex.html: This is the official impress.js demo, showcasing all of the features of the original impress.js, as well as some new plugins as we add them.\n\nAs already mentioned, this file is well commented and acts as the official tutorial.\n\n\nexamples\/: Contains several demos showcasing additional features available.\n\nClassic Slides is a simple demo that you can use as template if you want to create very simple, rectangular, PowerPoint-like presentations.\n\n\nsrc\/: The main file is src\/impress.js. Additional functionality is implemented as plugins in src\/plugins\/.\n\nSee src\/plugins\/README.md for information about the plugin API and how to write plugins.\n\n\ntest\/: Contains QUnit and Syn libraries that we use for writing tests, as well as some test coverage for core functionality. (Yes, more tests are much welcome.) Tests for plugins are in the directory of each plugin.\njs\/: Contains js\/impress.js, which contains a concatenation of the core src\/impress.js and all the plugins. Traditionally this is the file that you'll link to in a browser. In fact both the demo and test files do exactly that.\ncss\/: Contains a CSS file used by the demo. This file is not required for using impress.js in your own presentations. Impress.js creates the CSS it needs dynamically.\nextras\/ contains plugins that for various reasons aren't enabled by default. You have to explicitly add them with their own script element to use them.\nbuild.js: Simple build file that creates js\/impress.js. It also creates a minified version impress.min.js, but that one is not included in the github repository.\npackage.json: An NPM package specification. This was mainly added so you can easily install buildify and run node build.js. Other than the build process, which is really just doing roughly cat src\/impress.js src\/plugins\/*\/*.js > js\/impress.js, and testing, impress.js itself doesn't depend on Node or any NPM modules.\n\nWANT TO CONTRIBUTE?\nFor developers, once you've made changes to the code, you should run these commands for testing:\nnpm install\nnpm run all\n\nNote that running firefox qunit_test_runner.html is usually more informative than running karma with npm run test. They both run the same tests.\nMore info about the src\/ directory can be found in src\/plugins\/README.md.\nRequirements\n\n>= node 7.6\nnpm\n\nABOUT THE NAME\nimpress.js name is courtesy of @skuzniak.\nIt's an (un)fortunate coincidence that a Open\/LibreOffice presentation tool is called Impress ;)\nReference API\nSee the Reference API\nBROWSER SUPPORT\nThe design goal for impress.js has been to showcase awesome CSS3 features as found in modern browser versions. We also use some new DOM functionality, and specifically do not use jQuery or any other JavaScript libraries, nor our own functions, to support older browsers. In general, recent versions of Firefox and Chrome are known to work well. Reportedly IE now works too.\nThe typical use case for impress.js is to create presentations that you present from your own laptop, with a browser version you know works well. Some people also use impress.js successfully to embed animations or presentations in a web page, however, be aware that in this some of your visitors may not see the presentation correctly, or at all.\nIn particular, impress.js makes use of the following JS and CSS features:\n\nDataSet API\nClassList API\nCSS 3D Transforms\nCSS Transitions\n\nCOPYRIGHT AND LICENSE\nCopyright 2011-2016 Bartek Szopka\nCopyright 2015-2017 Henrik Ingo\nReleased under the MIT License\n","54":"\n\n\n\n\n\nGhost.org |\n    Features |\n    Showcase |\n    Forum |\n    Docs |\n    Contributing |\n    Twitter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLove open source? We're hiring Node.js Engineers to work on Ghost full-time\n\u00a0\n\n\nThe easiest way to get a production instance deployed is with our official Ghost(Pro) managed service. It takes about 2 minutes to launch a new site with worldwide CDN, backups, security and maintenance all done for you.\nFor most people this ends up being the best value option cause of how much time it saves \u2014 and 100% of revenue goes to the Ghost Foundation; funding the maintenance and further development of the project itself. So you\u2019ll be supporting open source software and getting a great service!\nIf you prefer to run on your own infrastructure, we also offer official 1-off installs and managed support and maintenance plans via Ghost(Valet) - which can save a substantial amount of developer time and resources.\n\u00a0\nQuickstart Install\nIf you want to run your own instance of Ghost, in most cases the best way is to use our CLI tool\nnpm install ghost-cli -g\n\n\u00a0\nThen, if installing locally add the local flag to get up and running in under a minute - Local install docs\nghost install local\n\n\u00a0\nor on a server run the full install, including automatic SSL setup using LetsEncrypt - Production install docs\nghost install\n\n\u00a0\nCheck out our official documentation for more information about our recommended hosting stack & properly upgrading Ghost, plus everything you need to develop your own Ghost themes or work with our API.\nContributors & Advanced Developers\nFor anyone wishing to contribute to Ghost or to hack\/customise core files we recommend following our full development setup guides: Contributor Guide | Developer Setup | Admin Client Dev Guide\n\u00a0\nGhost Sponsors\nWe'd like to extend big thanks to our sponsors and partners who make Ghost possible. If you're interested in sponsoring Ghost and supporting the project, please check out our profile on GitHub Sponsors \u2764\ufe0f\nDigitalOcean | Cloudflare\n\u00a0\nGetting Help\nYou can find answers to a huge variety of questions, along with a large community of helpful developers over on the Ghost forum - replies are generally very quick. Ghost(Pro) customers also have access to 24\/7 email support.\nTo stay up to date with all the latest news and product updates, make sure you subscribe to our blog \u2014 or you can always follow us on Twitter, if you prefer your updates bite-sized and facetious. \ud83c\udfb7\ud83d\udc22\n\u00a0\nCopyright & License\nCopyright (c) 2013-2020 Ghost Foundation - Released under the MIT license. Ghost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our trademark policy for info on acceptable usage.\n","55":"\n\n\n\n\n  33 Concepts Every JavaScript Developer Should Know\n  \n\n\nIntroduction\nThis repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it here.\n\ud83d\ude80 Considered by GitHub as one of the top open source projects of 2018!\nCommunity\nFeel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.\nAll the translations for this repo will be listed below:\n\nAlbanian \u2014 Eldrin Ereqi\nArabic \u2014 Amr Elsekilly\nChinese \u2014 Re Tian\nPortuguese-BR \u2014 Tiago Boeing\nKorean \u2014 Suin Lee\nSpanish \u2014 Adonis Mendoza\nTurkish \u2014 \u0130lker Demir\nRussian \u2014 Mihail Gumennii\nTi\u1ebfng Vi\u1ec7t \u2014 Nguy\u1ec5n Tr\u1ea7n Chung\nPolish \u2014 Dawid Lipinski\nPersian \u2014 Majid Alavizadeh\nIndonesian \u2014 Rijdzuan Sampoerna\nFrench \u2014 Robin M\u00e9tral\nHindi \u2014 Vikas Chauhan\nGreek \u2014 Dimitris Zarachanis\nJapanese \u2014 oimo23\nGerman \u2014 burhannn\nUkrainian \u2014 Andrew Savetchuk\nSinhala \u2014 Udaya Shamendra\nItalian - Gianluca Fiore\n\n\nTable of Contents\n\nCall Stack\nPrimitive Types\nValue Types and Reference Types\nImplicit, Explicit, Nominal, Structuring and Duck Typing\n== vs === vs typeof\nFunction Scope, Block Scope and Lexical Scope\nExpression vs Statement\nIIFE, Modules and Namespaces\nMessage Queue and Event Loop\nsetTimeout, setInterval and requestAnimationFrame\nJavaScript Engines\nBitwise Operators, Type Arrays and Array Buffers\nDOM and Layout Trees\nFactories and Classes\nthis, call, apply and bind\nnew, Constructor, instanceof and Instances\nPrototype Inheritance and Prototype Chain\nObject.create and Object.assign\nmap, reduce, filter\nPure Functions, Side Effects and State Mutation\nClosures\nHigh Order Functions\nRecursion\nCollections and Generators\nPromises\nasync\/await\nData Structures\nExpensive Operation and Big O Notation\nAlgorithms\nInheritance, Polymorphism and Code Reuse\nDesign Patterns\nPartial Applications, Currying, Compose and Pipe\nClean Code\n\n\n1. Call Stack\nArticles\n\n\ud83d\udcdc Understanding Javascript Call Stack, Event Loops \u2014 Gaurav Pandvia\n\ud83d\udcdc Understanding the JavaScript Call Stack \u2014 Charles Freeborn\n\ud83d\udcdc Javascript: What Is The Execution Context? What Is The Call Stack? \u2014 Valentino Gagliardi\n\ud83d\udcdc What is the JS Event Loop and Call Stack? \u2014 Jess Telford\n\ud83d\udcdc Call Stack \u2014 MDN\n\ud83d\udcdc Understanding Execution Context and Execution Stack in Javascript \u2014 Sukhjinder Arora\n\ud83d\udcdc How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack \u2014 Alexander Zlatkov\n\ud83d\udcdc The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript \u2014 Tyler McGinnis\n\ud83d\udcdc How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack \u2014 Bipin Rajbhar\n\nVideos\n\n\ud83c\udfa5 Javascript: the Call Stack explained \u2014 Coding Blocks India\n\ud83c\udfa5 The JS Call Stack Explained In 9 Minutes \u2014 Colt Steele\n\ud83c\udfa5 JavaScript Execution Stack \u2014 Codecademy\n\ud83c\udfa5 What is the Call Stack? \u2014 Eric Traub\n\ud83c\udfa5 The Call Stack \u2014 Kevin Drumm\n\ud83c\udfa5 Understanding JavaScript Execution \u2014 Codesmith\n\ud83c\udfa5 The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript \u2014 Tyler McGinnis\n\ud83c\udfa5 What the heck is the event loop anyway? \u2014 Philip Roberts\n\ud83c\udfa5 La PILA DE EJECUCI\u00d3N (Call Stack) de JavaScript \u2014 La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n2. Primitive Types\nArticles\n\n\ud83d\udcdc How numbers are encoded in JavaScript \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc What You Need to Know About JavaScript Number Type \u2014 Max Wizard K\n\ud83d\udcdc What Every JavaScript Developer Should Know About Floating Point Numbers \u2014 Chewxy\n\ud83d\udcdc The Secret Life of JavaScript Primitives \u2014 Angus Croll\n\ud83d\udcdc Primitive Types \u2014 Flow\n\ud83d\udcdc (Not) Everything in JavaScript is an Object \u2014 Daniel Li\n\ud83d\udcdc JavaScript data types and data structures \u2014 MDN\n\ud83d\udcdc Diving Deeper in JavaScripts Objects \u2014 Arfat Salman\n\ud83d\udcdc The differences between Object.freeze() vs Const in JavaScript \u2014 Bolaji Ayodeji\n\nVideos\n\n\ud83c\udfa5 JavaScript Reference vs Primitive Types \u2014 Academind\n\ud83c\udfa5 JavaScript Primitive Types \u2014 Simon Sez IT\n\ud83c\udfa5 Value Types and Reference Types in JavaScript \u2014 Programming with Mosh\n\ud83c\udfa5 JavaScript Primitive Data Types \u2014 Avelx\n\ud83c\udfa5 Everything you never wanted to know about JavaScript numbers \u2014 Bartek Szopka\n\ud83c\udfa5 What are variables in Javascript? \u2014 JS For Everyone\n\ud83c\udfa5 TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n3. Value Types and Reference Types\nArticles\n\n\ud83d\udcdc Explaining Value vs. Reference in Javascript \u2014 Arnav Aggarwal\n\ud83d\udcdc Understand Value and Reference Types in JavaScript \u2014 Zsolt Nagy\n\ud83d\udcdc Primitive Types & Reference Types in JavaScript \u2014 Bran van der Meer\n\ud83d\udcdc Value Types, Reference Types and Scope in JavaScript \u2014 Ben Aston\n\ud83d\udcdc Back to roots: JavaScript Value vs Reference \u2014 Miro Koczka\n\ud83d\udcdc Grasp \u201cBy Value\u201d and \u201cBy Reference\u201d in JavaScript \u2014 L\u00e9na Faure\n\ud83d\udcdc JavaScript Reference and Copy Variables \u2014 V\u00edtor Capretz\n\ud83d\udcdc JavaScript Primitive vs Reference Values\n\ud83d\udcdc JavaScript by Reference vs. by Value \u2014 nrabinowitz\n\ud83d\udcdc JavaScript Interview Prep: Primitive vs. Reference Types \u2014 Mike Cronin\n\nVideos\n\n\ud83c\udfa5 Javascript Pass by Value vs Pass by Reference \u2014 techsith\n\ud83c\udfa5 JavaScript Value vs Reference Types \u2014 Programming with Mosh\n\ud83c\udfa5 VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n4. Implicit, Explicit, Nominal, Structuring and Duck Typing\nArticles\n\n\ud83d\udcdc What you need to know about Javascript's Implicit Coercion \u2014 Promise Tochi\n\ud83d\udcdc JavaScript Type Coercion Explained \u2014 Alexey Samoshkin\n\ud83d\udcdc Javascript Coercion Explained \u2014 Ben Garrison\n\ud83d\udcdc What exactly is Type Coercion in Javascript? - Stack Overflow\n\ud83d\udcdc You Don't Know JS: Types & Grammar, 1st Edition [Book] \u2014 Kyle Simpson\n\ud83d\udcdc Type Coercion in JavaScript, and why everyone gets it wrong.\n\nVideos\n\n\ud83c\udfa5 == ? === ??? ...#@^% - Shirmung Bielefeld\n\ud83c\udfa5 Coercion in Javascript - Hitesh Choudhary\n\ud83c\udfa5 JavaScript Questions: What is Coercion? - Steven Hancock\n\ud83c\udfa5 Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse\n\ud83c\udfa5 EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n5. == vs === vs typeof\nArticles\n\n\ud83d\udcdc JavaScript Double Equals vs. Triple Equals \u2014 Brandon Morelli\n\ud83d\udcdc Should I use === or == equality comparison operator in JavaScript? \u2014 Panu Pitkamaki\n\ud83d\udcdc == vs === JavaScript: Double Equals and Coercion \u2014 AJ Meyghani\n\ud83d\udcdc Why Use the Triple-Equals Operator in JavaScript? \u2014 Louis Lazaris\n\ud83d\udcdc What is the difference between == and === in JavaScript? \u2014 Craig Buckler\n\ud83d\udcdc Why javascript's typeof always return \"object\"? \u2014 Stack Overflow\n\ud83d\udcdc Checking Types in Javascript \u2014 Toby Ho\n\ud83d\udcdc How to better check data types in JavaScript \u2014 Webbjocke\n\ud83d\udcdc Checking for the Absence of a Value in JavaScript \u2014 Tomer Aberbach\n\nVideos\n\n\ud83c\udfa5 JavaScript - The typeof operator \u2014 Java Brains\n\ud83c\udfa5 Javascript typeof operator \u2014 DevDelight\n\n\u2b06 Back to Top\n\n6. Function Scope, Block Scope and Lexical Scope\nArticles\n\n\ud83d\udcdc You Don't Know JS Yet: Scope & Closures, 2nd Edition [Book] \u2014 Kyle Simpson\n\ud83d\udcdc JavaScript Functions\u200a\u2014\u200aUnderstanding The Basics \u2014 Brandon Morelli\n\ud83d\udcdc The battle between Function Scope and Block Scope \u2014 Marius Herring\n\ud83d\udcdc Emulating Block Scope in JavaScript \u2014 Josh Clanton\n\ud83d\udcdc The Difference Between Function and Block Scope in JavaScript \u2014 Joseph Cardillo\n\ud83d\udcdc Function Scopes and Block Scopes in JavaScript \u2014 Samer Buna\n\ud83d\udcdc Understanding Scope and Context in JavaScript | Ryan Morr\n\ud83d\udcdc JavaScript Scope and Closures \u2014 Zell Liew\n\ud83d\udcdc Understanding Scope in JavaScript \u2014 Wissam Abirached\n\ud83d\udcdc Speaking JavaScript - Variables: Scopes, Environments, and Closures \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc Understanding Scope in JavaScript \u2015 Hammad Ahmed\n\ud83d\udcdc When to use a function declaration vs. a function expression \u2015 Amber Wilkie\n\ud83d\udcdc A JavaScript Fundamentals Cheat Sheet: Scope, Context, and \u201cthis\u201d \u2015 Alexandra Fren\n\nVideos\n\n\ud83c\udfa5 What Makes Javascript Weird ... and Awesome pt. 4 \u2014 LearnCode.academy\n\ud83c\udfa5 Variable Scope in JavaScript \u2014 Kirupa Chinnathambi\n\ud83c\udfa5 JavaScript Block Scope and Function Scope \u2014 mmtuts\n\ud83c\udfa5 What the Heck is Lexical Scope? \u2014 NWCalvank\n\n\u2b06 Back to Top\n\n7. Expression vs Statement\nArticles\n\n\ud83d\udcdc All you need to know about Javascript's Expressions, Statements and Expression Statements \u2014 Promise Tochi\n\ud83d\udcdc Function Expressions vs Function Declarations \u2014 Paul Wilkins\n\ud83d\udcdc JavaScript Function \u2014 Declaration vs Expression \u2014 Ravi Roshan\n\ud83d\udcdc Function Declarations vs. Function Expressions \u2014 Mandeep Singh\n\ud83d\udcdc Function Declarations vs. Function Expressions \u2014 Anguls Croll\n\nVideos\n\n\ud83c\udfa5 Expressions vs. Statements in JavaScript \u2014 Hexlet\n\ud83c\udfa5 JavaScript - Expression vs. Statement \u2014 WebTunings\n\ud83c\udfa5 Function Statements and Function Expressions \u2014 Codeacademy\n\n\u2b06 Back to Top\n\n8. IIFE, Modules and Namespaces\nArticles\n\n\ud83d\udcdc Mastering Immediately-Invoked Function Expressions \u2015 Chandra Gundamaraju\n\ud83d\udcdc Do ES6 Modules make the case of IIFEs obsolete?\n\ud83d\udcdc A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers \u2015 Jurgen Van de Moere\n\ud83d\udcdc Modules \u2015 Exploring JS\n\ud83d\udcdc ES modules: A cartoon deep-dive \u2014 Lin Clark\n\ud83d\udcdc Understanding ES6 Modules \u2014 Craig Buckler\n\ud83d\udcdc An overview of ES6 Modules in JavaScript \u2014 Brent Graham\n\ud83d\udcdc ES6 Modules in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc ES6 modules, Node.js and the Michael Jackson Solution \u2014 Alberto Gimeno\n\ud83d\udcdc JavaScript Modules: A Beginner\u2019s Guide \u2014 Preethi Kasireddy\n\ud83d\udcdc Using JavaScript modules on the web\n\ud83d\udcdc JavaScript Modules: From IIFEs to CommonJS to ES6 Modules \u2014 Tyler McGinnis\n\ud83d\udcdc IIFE: Immediately Invoked Function Expressions \u2014 Parwinder\n\nVideos\n\n\ud83c\udfa5 Immediately Invoked Function Expression - Beau teaches JavaScript \u2014 freeCodeCamp\n\ud83c\udfa5 Understanding JavaScript IIFE\n\ud83c\udfa5 JavaScript Modules: ES6 Import and Export \u2014 Kyle Robinson\n\ud83c\udfa5 ES6 - Modules \u2014 Ryan Christiani\n\ud83c\udfa5 ES6 Modules in the Real World \u2014 Sam Thorogood\n\ud83c\udfa5 ES6 Modules \u2014 TempleCoding\n\n\u2b06 Back to Top\n\n9. Message Queue and Event Loop\nArticles\n\n\ud83d\udcdc JavaScript Event Loop Explained \u2014 Anoop Raveendran\n\ud83d\udcdc The JavaScript Event Loop: Explained \u2014 Erin Sweson-Healey\n\ud83d\udcdc What is the Event Loop in Javascript \u2014 WP Tutor.io\n\ud83d\udcdc Understanding JS: The Event Loop \u2014 Alexander Kondov\n\ud83d\udcdc Understanding the JavaScript Event Loop \u2014 Ashish Gupta\n\ud83d\udcdc Event Loop in Javascript \u2014 Manjula Dube\n\ud83d\udcdc The JavaScript Event Loop \u2014 Flavio Copes\n\ud83d\udcdc How JavaScript works: Event loop \u2014 Alexander Zlatkov\n\ud83d\udcdc Tasks, microtasks, queues and schedules \u2014 Jake Archibald\n\ud83d\udcdc Visualising the JavaScript Event Loop with a Pizza Restaurant analogy \u2014 Priyansh Jain\n\ud83d\udcdc JavaScript Visualized: Event Loop \u2014 Lydia Hallie\n\nVideos\n\n\ud83c\udfa5 What the heck is the event loop anyway? | JSConf EU \u2014 Philip Roberts\n\ud83c\udfa5 JavaScript Event Loop \u2014 ComScience Simplified\n\ud83c\udfa5 I'm stuck in an Event Loop \u2014 Philip Roberts\n\ud83c\udfa5 In The Loop - Jake Archibald | JSConf.Asia 2018\n\ud83c\udfa5 Desmitificando el Event Loop (Spanish)\n\n\u2b06 Back to Top\n\n10. setTimeout, setInterval and requestAnimationFrame\nArticles\n\n\ud83d\udcdc setTimeout and setInterval \u2014 JavaScript.Info\n\ud83d\udcdc Why not to use setInterval \u2014 Akanksha Sharma\n\ud83d\udcdc setTimeout VS setInterval \u2014 Develoger\n\ud83d\udcdc Using requestAnimationFrame \u2014 Chris Coyier\n\ud83d\udcdc Understanding JavaScript's requestAnimationFrame() \u2014 JavaScript Kit\n\ud83d\udcdc Handling time intervals in JavaScript - Amit Merchant\n\nVideos\n\n\ud83c\udfa5 Javascript: How setTimeout and setInterval works \u2014 Coding Blocks India\n\ud83c\udfa5 setTimeout and setInterval in JavaScript \u2014 techsith\n\ud83c\udfa5 JavaScript Timers \u2014 Steve Griffith\n\ud83c\udfa5 JavaScript setTimeOut and setInterval Explained \u2014 Theodore Anderson\n\n\u2b06 Back to Top\n\n11. JavaScript Engines\nArticles\n\n\ud83d\udcdc JavaScript Engines \u2014 Jen Looper\n\ud83d\udcdc Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code \u2014 DroidHead\n\ud83d\udcdc Understanding V8\u2019s Bytecode \u2014 Franziska Hinkelmann\n\ud83d\udcdc A Brief History of Google\u2019s V8 Javascript Engine \u2014 Clair Smith\n\ud83d\udcdc JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp\n\ud83d\udcdc JavaScript engine fundamentals: Shapes and Inline Caches\n\ud83d\udcdc JavaScript engine fundamentals: optimizing prototypes\n\ud83d\udcdc How V8 optimizes array operations\n\nVideos\n\n\ud83c\udfa5 JavaScript Engines: The Good Parts\u2122 \u2014 Mathias Bynens & Benedikt Meurer\n\n\u2b06 Back to Top\n\n12. Bitwise Operators, Type Arrays and Array Buffers\nArticles\n\n\ud83d\udcdc Programming with JS: Bitwise Operations \u2014 Alexander Kondov\n\ud83d\udcdc Using JavaScript\u2019s Bitwise Operators in Real Life \u2014 ian m\n\ud83d\udcdc JavaScript Bitwise Operators \u2014 w3resource\n\ud83d\udcdc Bitwise Operators in Javascript \u2014 Joe Cha\n\ud83d\udcdc A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript \u2014 Paul Brown\n\ud83d\udcdc How can I understand Bitwise operation in JavaScript?\n\nVideos\n\n\ud83c\udfa5 JavaScript Bitwise Operators \u2014 Programming with Mosh\n\n\u2b06 Back to Top\n\n13. DOM and Layout Trees\nArticles\n\n\ud83d\udcdc How To Understand and Modify the DOM in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc What\u2019s the Document Object Model, and why you should know how to use it \u2014 Leonardo Maldonado\n\ud83d\udcdc JavaScript DOM Tutorial with Example \u2014 Guru99\n\ud83d\udcdc What is the DOM? \u2014 Chris Coyier\n\ud83d\udcdc Traversing the DOM with JavaScript \u2014 Zell Liew\n\ud83d\udcdc Eloquent JavaScript [Book] \u2014 The Document Object Model\n\ud83d\udcdc DOM Tree\n\ud83d\udcdc How to traverse the DOM in Javascript \u2014 Vojislav Gruji\u0107\n\ud83d\udcdc Render Tree Construction \u2014 Ilya Grigorik\n\ud83d\udcdc What exactly is the DOM?\n\ud83d\udcdc A Vanilla JS Guide On Mastering the DOM \u2014 Brian Pak\n\nVideos\n\n\ud83c\udfa5 JavaScript DOM \u2014 The Net Ninja\n\ud83c\udfa5 JavaScript DOM Crash Course \u2014 Traversy Media\n\n\u2b06 Back to Top\n\n14. Factories and Classes\nArticles\n\n\ud83d\udcdc How To Use Classes in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc Javascript Classes \u2014 Under The Hood \u2014 Majid\n\ud83d\udcdc ES6 Classes \u2014 Nathaniel Foster\n\ud83d\udcdc Better JavaScript with ES6, Pt. II: A Deep Dive into Classes \u2015 Peleke Sengstacke\n\ud83d\udcdc Understand the Factory Design Pattern in Plain JavaScript \u2014 Aditya Agarwal\n\ud83d\udcdc Factory Functions in JavaScript \u2014 Josh Miller\n\ud83d\udcdc The Factory Pattern in JS ES6 \u2014 SnstsDev\n\ud83d\udcdc Class vs Factory function: exploring the way forward \u2014 Cristi Salcescu\n\ud83d\udcdc How ES6 classes really work and how to build your own \u2014 Robert Grosse\n\ud83d\udcdc Understanding super in JavaScript\n\ud83d\udcdc An Easy Guide To Understanding Classes In JavaScript\n\nVideos\n\n\ud83c\udfa5 JavaScript Factory Functions \u2014 Programming with Mosh\n\ud83c\udfa5 Factory Functions in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Javascript Tutorial Function Factories \u2014 Crypto Chan\n\n\u2b06 Back to Top\n\n15. this, call, apply and bind\nArticles\n\n\ud83d\udcdc Grokking call(), apply() and bind() methods in JavaScript \u2014 Aniket Kudale\n\ud83d\udcdc How-to: call() , apply() and bind() in JavaScript \u2014 Niladri Sekhar Dutta\n\ud83d\udcdc JavaScript\u2019s Apply, Call, and Bind Methods are Essential for JavaScript Professionals \u2014 Richard Bovell\n\ud83d\udcdc WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript \u2014 Tyler McGinnis\n\ud83d\udcdc Javascript: call(), apply() and bind() \u2014 Omer Goldberg\n\ud83d\udcdc The difference between call \/ apply \/ bind \u2014 Ivan Sifrim\n\ud83d\udcdc What the hack is call, apply, bind in JavaScript \u2014 Ritik\n\ud83d\udcdc Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() \u2014 Michelle Gienow\n\ud83d\udcdc JavaScript\u2019s apply, call, and bind explained by hosting a cookout \u2014 Kevin Kononenko\n\ud83d\udcdc How AND When to use bind, call, and apply in Javascript \u2014 Eigen X\n\ud83d\udcdc JavaScript .bind() vs .apply() and .call() \u2014 Hack Sparrow\n\ud83d\udcdc call() \u2014 MDN\n\ud83d\udcdc bind() \u2014 MDN\n\ud83d\udcdc apply() \u2014 MDN\n\ud83d\udcdc What is 'this' in JavaScript? \u2014 Daniel Li\n\ud83d\udcdc Let me explain to you what is this. (Javascript) \u2014 Jason Yu\n\ud83d\udcdc Understanding the \u201cthis\u201d Keyword in JavaScript \u2014 Pavan\n\ud83d\udcdc How to understand the keyword this and context in JavaScript \u2014 Lukas Gisder-Dub\u00e9\n\ud83d\udcdc What the heck is this in Javascript? \u2014 Hridayesh Sharma\n\ud83d\udcdc This and Bind In Javascript \u2014 Brian Barbour\n\ud83d\udcdc 3 Techniques for Maintaining Your Sanity Using \"This\" in JavaScript \u2014 Carl\n\ud83d\udcdc Mastering the JavaScript \"this\" Keyword \u2014 Aakash Srivastav\n\ud83d\udcdc This binding in JavaScript \u2013 4. New binding \u2014 Spyros Argalias\n\ud83d\udcdc A quick intro to 'this' in JavaScript \u2014 Natalie Smith\n\ud83d\udcdc Explaining JavaScript 'this' to my cat \u2014 Andrey K\n\ud83d\udcdc A conversation with the 'this' keyword in Javascript \u2014 Karen Efereyan\n\ud83d\udcdc What are call(), apply() and bind() in JavaScript \u2014 Amitav Mishra\n\nVideos\n\n\ud83c\udfa5 JavaScript call, apply and bind \u2014 techsith\n\ud83c\udfa5 JavaScript Practical Applications of Call, Apply and Bind functions\u2014 techsith\n\ud83c\udfa5 JavaScript (call, bind, apply) \u2014 curious aatma\n\ud83c\udfa5 Understanding Functions and 'this' In The World of ES2017 \u2014 Bryan Hughes\n\ud83c\udfa5 bind and this - Object Creation in JavaScript - FunFunFunction\n\ud83c\udfa5 JS Function Methods call(), apply(), and bind() \u2014 Steve Griffith\n\n\u2b06 Back to Top\n\n16. new, Constructor, instanceof and Instances\nArticles\n\n\ud83d\udcdc JavaScript For Beginners: the \u2018new\u2019 operator \u2014 Brandon Morelli\n\ud83d\udcdc Let\u2019s demystify JavaScript\u2019s \u2018new\u2019 keyword \u2014 Cynthia Lee\n\ud83d\udcdc Constructor, operator \"new\" \u2014 JavaScript.Info\n\ud83d\udcdc Understanding JavaScript Constructors \u2014 Faraz Kelhini\n\ud83d\udcdc Use Constructor Functions \u2014 Openclassrooms\n\ud83d\udcdc Beyond typeof and instanceof: simplifying dynamic type checks \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc What Is the Instanceof Operator in JavaScript \u2014 appendTo\n\ud83d\udcdc Function and Object, instances of each other \u2014 Kiro Risk\n\n\u2b06 Back to Top\n\n17. Prototype Inheritance and Prototype Chain\nArticles\n\n\ud83d\udcdc Javascript : Prototype vs Class \u2014 Valentin PARSY\n\ud83d\udcdc JavaScript engine fundamentals: optimizing prototypes \u2014 Mathias Bynens\n\ud83d\udcdc JavaScript Prototype \u2014 NC Patro\n\ud83d\udcdc Prototype in Javascript \u2014 Sandeep Ranjan\n\ud83d\udcdc Prototypes in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Prototype in JavaScript: it\u2019s quirky, but here\u2019s how it works \u2014 Pranav Jindal\n\ud83d\udcdc Inheritance and the prototype chain \u2014 MDN\n\ud83d\udcdc Understanding JavaScript: Prototype and Inheritance \u2014 Alexander Kondov\n\ud83d\udcdc Understanding Classes (ES5) and Prototypal Inheritance in JavaScript \u2014 Hridayesh Sharma\n\ud83d\udcdc prototype, proto and Prototypal inheritance in JavaScript \u2014 Varun Dey\n\ud83d\udcdc Prototypal Inheritance \u2014 JavaScript.Info\n\ud83d\udcdc How To Work with Prototypes and Inheritance in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc Master JavaScript Prototypes & Inheritance \u2014 Arnav Aggarwal\n\ud83d\udcdc You Don't Know JS: this & Object Prototypes, 1st Edition [Book] \u2014 Kyle Simpson\n\ud83d\udcdc JavaScript\u2019s Prototypal Inheritance Explained Using CSS \u2014 Nash Vail\n\ud83d\udcdc Prototypal Inheritance in JavaScript \u2014 Jannis Redmann\n\ud83d\udcdc Classical and Prototypical Inheritance in JavaScript \u2014 Danny Cornelisse\n\ud83d\udcdc Demystifying ES6 Classes And Prototypal Inheritance \u2015 Neo Ighodaro\n\ud83d\udcdc Intro To Prototypal Inheritance \u2014 Dharani Jayakanthan\n\ud83d\udcdc Classes in JavaScript - Explained \u2014 Daniel Li\n\ud83d\udcdc Let\u2019s Build Prototypal Inheritance in JS \u2014 var-che\n\ud83d\udcdc Objects, Prototypes and Classes in JavaScript \u2014 Atta\n\ud83d\udcdc JavaScript Prototypal Inheritance and Object Creation \u2014 Nick Shoup\n\ud83d\udcdc The magical world of JavaScript prototypes \u2014 Bel\u00e9n\n\ud83d\udcdc Understanding Prototypal Inheritance In JavaScript \u2014 Lawrence Eagles\n\ud83d\udcdc Objects and Prototypes in JavaScript \u2014 Irena Popova\n\nVideos\n\n\ud83c\udfa5 Javascript Prototype Inheritance \u2014 Avelx\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained pt. I \u2014 techsith\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained pt. II \u2014 techsith\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained \u2014 Kyle Robinson\n\ud83c\udfa5 Advanced Javascript - Prototypal Inheritance In 1 Minute\n\ud83c\udfa5 An Overview Of Classical Javascript Classes and Prototypal Inheritance \u2014 Pentacode\n\ud83c\udfa5 Object Oriented JavaScript - Prototype \u2014 The Net Ninja\n\ud83c\udfa5 Prototype in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 JavaScript Using Prototypes \u2014 O'Reilly\n\ud83c\udfa5 A Beginner's Guide to Javascript's Prototype \u2014 Tyler Mcginnis\n\ud83c\udfa5 Prototypes in Javascript - p5.js Tutorial \u2014 The Coding Train\n\n\u2b06 Back to Top\n\n18. Object.create and Object.assign\nArticles\n\n\ud83d\udcdc Object.create() \u2014 MDN\n\ud83d\udcdc Object.create in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Object.create(): the New Way to Create Objects in JavaScript \u2014 Rob Gravelle\n\ud83d\udcdc Basic Inheritance with Object.create \u2014 Joshua Clanton\n\ud83d\udcdc Object.create() In JavaScript \u2014 GeeksforGeeks\n\ud83d\udcdc Understanding the difference between Object.create() and the new operator \u2014 Jonathan Voxland\n\ud83d\udcdc JavaScript Object Creation: Patterns and Best Practices \u2014 Jeff Mott\n\ud83d\udcdc Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty\n\ud83d\udcdc Copying Objects in JavaScript \u2015 Orinami Olatunji\n\ud83d\udcdc Object.assign() \u2014 MDN\n\ud83d\udcdc JavaScript: Object.assign() \u2014 Thiago S. Adriano\n\ud83d\udcdc How to deep clone a JavaScript Object \u2014 Flavio Copes\n\ud83d\udcdc Object Assignment vs. Primitive Assignment in JavaScript for Beginners \u2014 Nick Scialli\n\ud83d\udcdc Object.create(): When and Why to Use \u2014 VZing\n\nVideos\n\n\ud83c\udfa5 Object.assign() explained \u2014 Aaron Writes Code\n\ud83c\udfa5 Object.assign() Method \u2014 techsith\n\n\u2b06 Back to Top\n\n19. map, reduce, filter\nArticles\n\n\ud83d\udcdc JavaScript Functional Programming \u2014 map, filter and reduce \u2014 Bojan Gvozderac\n\ud83d\udcdc Learn map, filter and reduce in Javascript \u2014 Jo\u00e3o Miguel Cunha\n\ud83d\udcdc JavaScript\u2019s Map, Reduce, and Filter \u2014 Dan Martensen\n\ud83d\udcdc How to Use Map, Filter, & Reduce in JavaScript \u2014 Peleke Sengstacke\n\ud83d\udcdc JavaScript \u2014 Learn to Chain Map, Filter, and Reduce \u2014 Brandon Morelli\n\ud83d\udcdc Javascript data structure with map, reduce, filter and ES6 \u2014 Deepak Gupta\n\ud83d\udcdc Understanding map, filter and reduce in Javascript \u2014 Luuk Gruijs\n\ud83d\udcdc Functional Programming in JS: map, filter, reduce (Pt. 5) \u2014 Omer Goldberg\n\ud83d\udcdc JavaScript: Map, Filter, Reduce \u2014 William S. Vincent\n\ud83d\udcdc Arrow Functions: Fat and Concise Syntax in JavaScript \u2014 Kyle Pennell\n\ud83d\udcdc JavaScript: Arrow Functions for Beginners \u2014 Brandon Morelli\n\ud83d\udcdc When (and why) you should use ES6 arrow functions \u2014 and when you shouldn\u2019t \u2014 Cynthia Lee\n\ud83d\udcdc JavaScript \u2014 Learn & Understand Arrow Functions \u2014 Brandon Morelli\n\ud83d\udcdc (JavaScript )=> Arrow functions \u2014 sigu\n\ud83d\udcdc Javascript.reduce() \u2014 Paul Anderson\n\ud83d\udcdc Why you should replace forEach with map and filter in JavaScript \u2014 Roope Hakulinen\n\ud83d\udcdc Simplify your JavaScript \u2013 Use .map(), .reduce(), and .filter() \u2014 Etienne Talbot\n\ud83d\udcdc JavaScript\u2019s Reduce Method Explained By Going On a Diet \u2014 Kevin Kononenko\n\ud83d\udcdc Difference between map, filter and reduce in JavaScript \u2014 Amirata Khodaparast\n\ud83d\udcdc Map\u21c4Filter\u21c4Reduce\u21bb \u2014 ashay mandwarya\n\ud83d\udcdc Finding Your Way With .map() \u2014 Brandon Wozniewicz\n\ud83d\udcdc How to write your own map, filter and reduce functions in JavaScript \u2014 Hemand Nair\n\ud83d\udcdc How to Manipulate Arrays in JavaScript \u2014 Bolaji Ayodeji\n\ud83d\udcdc How to simplify your codebase with map(), reduce(), and filter() in JavaScript \u2014 Alex Permyakov\n\ud83d\udcdc .map(), .filter(), and .reduce() \u2014 Andy Pickle\n\ud83d\udcdc Map\/Filter\/Reduce Crash Course \u2014 Chris Achard\n\ud83d\udcdc Map, Filter and Reduce \u2013 Animated \u2014 JavaScript Teacher\n\ud83d\udcdc Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard \u2014 Mauro Bono\n\ud83d\udcdc How to Use JavaScript\u2019s .map, .filter, and .reduce \u2014 Avery Duffin\n\ud83d\udcdc Javascript performance test - for vs for each vs (map, reduce, filter, find) \u2014 Deepak Gupta\n\ud83d\udcdc Using .map(), .filter() and .reduce() properly \u2014 Sasanka Kudagoda\n\ud83d\udcdc Mastering the JavaScript Reduce method \u2702\ufe0f \u2014 sanderdebr\n\nVideos\n\n\ud83c\udfa5 Map, Filter and Reduce \u2014 Lydia Hallie\n\ud83c\udfa5 Functional JavaScript: Map, forEach, Reduce, Filter \u2014 Theodore Anderson\n\ud83c\udfa5 JavaScript Array superpowers: Map, Filter, Reduce (part I) \u2014 Michael Rosata\n\ud83c\udfa5 JavaScript Array superpowers: Map, Filter, Reduce (part 2) \u2014 Michael Rosata\n\ud83c\udfa5 JavaScript Higher Order Functions - Filter, Map, Sort & Reduce \u2014 Epicop\n\ud83c\udfa5 [Array Methods 2\/3] .filter + .map + .reduce \u2014 CodeWithNick\n\ud83c\udfa5 Arrow functions in JavaScript - What, Why and How \u2014 Fun Fun Function\n\ud83c\udfa5 Learning Functional Programming with JavaScript \u2014 Anjana Vakil - JSUnconf\n\ud83c\udfa5 Map - Parte 2 JavaScript - Fun Fun Function\n\ud83c\udfa5 Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function\n\ud83c\udfa5 Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function\n\ud83c\udfa5 reduce Array Method | JavaScript Tutorial - Florin Pop\n\ud83c\udfa5 map Array Method | JavaScript Tutorial - Florin Pop\n\n\u2b06 Back to Top\n\n20. Pure Functions, Side Effects and State Mutation\nArticles\n\n\ud83d\udcdc Javascript and Functional Programming \u2014 Pure Functions \u2014 Omer Goldberg\n\ud83d\udcdc Master the JavaScript Interview: What is a Pure Function? \u2014 Eric Elliott\n\ud83d\udcdc JavaScript: What Are Pure Functions And Why Use Them? \u2014 James Jeffery\n\ud83d\udcdc Pure functions in JavaScript \u2014 @nicoespeon\n\ud83d\udcdc Functional Programming: Pure Functions \u2014 Arne Brasseur\n\ud83d\udcdc Pure Functions In Javascript \u2014 Krunal\n\ud83d\udcdc Making your JavaScript Pure \u2014 Jack Franklin\n\ud83d\udcdc To mutate, or not to mutate, in JavaScript\n\ud83d\udcdc Arrays, Objects and Mutations \u2014 Federico Kn\u00fcssel\n\ud83d\udcdc The State of Immutability \u2014 Maciej Sikora\n\ud83d\udcdc How to deal with dirty side effects in your pure functional JavaScript \u2014 James Sinclair\n\ud83d\udcdc Preventing Side Effects in JavaScript \u2014 David Walsh\n\ud83d\udcdc Wielding Pure Functions in JavaScript and Function Composition \u2014 Peleke Sengstacke\n\n\ud83d\udcdc JavaScript: Pure Functions \u2014 William S. Vincent\n\ud83d\udcdc Functional programming paradigms in modern JavaScript: Pure functions \u2014 Alexander Kondov\n\ud83d\udcdc Understanding Javascript Mutation and Pure Functions \u2014 Chidume Nnamdi\n\ud83d\udcdc Functional-ish JavaScript \u2014 Daniel Brain\n\nVideos\n\n\ud83c\udfa5 Pure Functions \u2014 Hexlet\n\ud83c\udfa5 Pure Functions - Functional Programming in JavaScript \u2014 Paul McBride\n\ud83c\udfa5 JavaScript Pure Functions \u2014 Seth Alexander\n\ud83c\udfa5 JavaScript Pure vs Impure Functions Explained \u2014 Theodore Anderson\n\ud83c\udfa5 Pure Functions - Programa\u00e7\u00e3o Funcional: Parte 1 - Fun Fun Function\n\n\u2b06 Back to Top\n\n21. Closures\nArticles\n\n\ud83d\udcdc Closures \u2014 MDN\n\ud83d\udcdc I never understood JavaScript closures \u2014 Olivier De Meulder\n\ud83d\udcdc Closure \u2014 JavaScript.Info\n\ud83d\udcdc Understand JavaScript Closures With Ease \u2014 Richard Bovell\n\ud83d\udcdc Understanding JavaScript Closures \u2014 Codesmith\n\ud83d\udcdc Understand Closures in JavaScript \u2014 Brandon Morelli\n\ud83d\udcdc A simple guide to help you understand closures in JavaScript \u2014 Prashant Ram\n\ud83d\udcdc Understanding JavaScript Closures: A Practical Approach \u2014 Paul Upendo\n\ud83d\udcdc Understanding JavaScript: Closures \u2014 Alexander Kondov\n\ud83d\udcdc How to use JavaScript closures with confidence \u2014 L\u00e9na Faure\n\ud83d\udcdc JavaScript closures by example \u2014 tyler\n\ud83d\udcdc JavaScript\u200a\u2014\u200aClosures and Scope \u2014 Alex Aitken\n\ud83d\udcdc Discover the power of closures in JavaScript\u200a\u2014\u200aCristi Salcescu\n\ud83d\udcdc Simplified JavaScript: Getting Started with Closures\u200a\u2014\u200aCode Like A Girl\n\ud83d\udcdc The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript\u200a\u2014\u200aTyler McGinnis\n\ud83d\udcdc Getting Closure\u200a\u2014\u200aRealLifeJS\n\ud83d\udcdc Closure, Currying and IIFE in JavaScript\u200a\u2014\u200aRitik\n\ud83d\udcdc Understanding Closures in JavaScript\u200a\u2014\u200aSukhjinder Arora\n\ud83d\udcdc A basic guide to Closures in JavaScript\u200a\u2014\u200aParathan Thiyagalingam\n\ud83d\udcdc Closures: Using Memoization\u200a\u2014\u200aBrian Barbour\n\ud83d\udcdc A Brief Introduction to Closures and Lexical Scoping in JavaScript\u200a\u2014\u200aAshutosh K Singh\n\n\ud83d\udcdc Demystify Closures\u200a\u2014\u200astereobooster\n\ud83d\udcdc Scopes and Closures - JavaScript Concepts\u200a\u2014\u200aAgney Menon\n\ud83d\udcdc Understanding Closures in JavaScript\u200a\u2014\u200aMatt Popovich\n\ud83d\udcdc whatthefuck.is \u00b7 A Closure - Dan Abramov\n\ud83d\udcdc Closures in JavaScript can... - Brandon LeBoeuf\n\nVideos\n\n\ud83c\udfa5 JavaScript The Hard Parts: Closure, Scope & Execution Context - Codesmith\n\ud83c\udfa5 Javascript Closure \u2014 techsith\n\ud83c\udfa5 Closures \u2014 Fun Fun Function\n\ud83c\udfa5 Closures in JavaScript \u2014 techsith\n\ud83c\udfa5 JavaScript Closures 101: What is a closure? \u2014 JavaScript Tutorials\n\ud83c\udfa5 Closures \u2014 freeCodeCamp\n\ud83c\udfa5 JavaScript Closures \u2014 CodeWorkr\n\n\u2b06 Back to Top\n\n22. High Order Functions\nArticles\n\n\ud83d\udcdc Higher-Order Functions \u2014 Eloquent JavaScript [Book]\n\ud83d\udcdc Higher-Order Functions in JavaScript \u2014 M. David Green\n\ud83d\udcdc Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code \u2014 Guido Schmitz\n\ud83d\udcdc First-class and Higher Order Functions: Effective Functional JavaScript \u2014 Hugo Di Francesco\n\ud83d\udcdc Higher Order Functions in JavaScript \u2014 John Hannah\n\ud83d\udcdc Higher-order Functions \u2014 Richard Bovell\n\ud83d\udcdc Higher Order Functions in JavaScript \u2014 Zsolt Nagy\n\ud83d\udcdc Fun With Higher Order Functions In JavaScript \u2014 Derick\n\ud83d\udcdc Just a reminder on how to use high order functions \u2014 Pedro Filho\n\ud83d\udcdc Understanding Higher-Order Functions in JavaScript \u2014 Sukhjinder Arora\n\ud83d\udcdc What is a Higher-Order Function? \u2014 Nick Scialli\n\ud83d\udcdc Higher Order Functions - A pragmatic approach \u2014 emmanuel ikwuoma\n\nVideos\n\n\ud83c\udfa5 JavaScript Higher Order Functions & Arrays \u2014 Traversy Media\n\ud83c\udfa5 Higher Order Functions \u2014 Fun Fun Function\n\ud83c\udfa5 Higher Order Functions in Javascript \u2014 Raja Yogan\n\ud83c\udfa5 Higher Order Iterators in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Higher Order Functions in JavaScript \u2014 The Coding Train\n\ud83c\udfa5 Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith\n\ud83c\udfa5 Part 2: Understanding Why We Need Higher Order Functions - Codesmith\n\n\u2b06 Back to Top\n\n23. Recursion\nArticles\n\n\ud83d\udcdc Recursion in JavaScript \u2014 Kevin Ennis\n\ud83d\udcdc Understanding Recursion in JavaScript \u2014 Zak Frisch\n\ud83d\udcdc Learn and Understand Recursion in JavaScript \u2014 Brandon Morelli\n\ud83d\udcdc Recursion in Functional JavaScript \u2014 M. David Green\n\ud83d\udcdc Programming with JS: Recursion \u2014 Alexander Kondov\n\ud83d\udcdc Anonymous Recursion in JavaScript \u2014 simo\n\ud83d\udcdc Recursion, iteration and tail calls in JS \u2014 loverajoel\n\ud83d\udcdc Understanding Recursion in JavaScript with Confidence \u2014 Jay\n\ud83d\udcdc Intro to Recursion \u2014 Brad Newman\n\ud83d\udcdc Accio Recursion!: Your New Favorite JavaScript Spell \u2014 Leanne Cabey\n\ud83d\udcdc Recursion Explained (with Examples) \u2014 Christina\n\nVideos\n\n\ud83c\udfa5 Recursion In JavaScript \u2014 techsith\n\ud83c\udfa5 Recursion \u2014 Fun Fun Function\n\ud83c\udfa5 Recursion and Recursive Functions \u2014 Hexlet\n\ud83c\udfa5 Recursion: Recursion() \u2014 JS Monthly \u2014 Lucas da Costa\n\ud83c\udfa5 Recursive Function in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 What on Earth is Recursion? \u2014 Computerphile\n\ud83c\udfa5 Javascript Tutorial 34: Introduction To Recursion \u2014 codedamn\n\ud83c\udfa5 Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 \u2014 Anjana Vakil\n\n\u2b06 Back to Top\n\n24. Collections and Generators\nArticles\n\n\ud83d\udcdc ES6 In Depth: Collections \u2014 Jason Orendorff\n\ud83d\udcdc ES6 Collections: Using Map, Set, WeakMap, WeakSet \u2014 Kyle Pennell\n\ud83d\udcdc ES6 WeakMaps, Sets, and WeakSets in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Introduction to Sets in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Introduction to Maps in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Map, Set, WeakMap and WeakSet \u2014 JavaScript.Info\n\ud83d\udcdc Maps in ES6 - A Quick Guide \u2014 Ben Mildren\n\ud83d\udcdc ES6 \u2014 Set vs Array \u2014 What and when? \u2014 Maya Shavin\n\ud83d\udcdc ES6 \u2014 Map vs Object \u2014 What and when? \u2014 Maya Shavin\n\ud83d\udcdc ES6: Working with Sets in JavaScript \u2014 Dead Code Rising\n\ud83d\udcdc Array vs Set vs Map vs Object \u2014 Real-time use cases in Javascript (ES6\/ES7) \u2014 Rajesh Babu\n\ud83d\udcdc How to create an array of unique values in JavaScript using Sets \u2014 Claire Parker-Jones\n\ud83d\udcdc What You Should Know About ES6 Maps \u2014 Just Chris\n\ud83d\udcdc ES6 Maps in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Generator \u2014 MDN web docs\n\ud83d\udcdc What are JavaScript Generators and how to use them \u2014 Vladislav Stepanov\n\ud83d\udcdc Understanding JavaScript Generators With Examples  \u2014 Arfat Salman\n\ud83d\udcdc The Basics of ES6 Generators \u2014 Kyle Simpson\n\ud83d\udcdc Here's everything you'd want to know about ES2015+ generators \u2014 Lucas Chen\n\ud83d\udcdc An Introduction to JavaScript Generators \u2014 Alice Kallaugher\n\nVideos\n\n\ud83c\udfa5 JavaScript ES6 \/ ES2015 Set, Map, WeakSet and WeakMap \u2014 Traversy Media\n\ud83c\udfa5 The Differences between ES6 Maps and Sets \u2014 Steve Griffith\n\ud83c\udfa5 Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators \u2014 LearnCode.academy\n\n\u2b06 Back to Top\n\n25. Promises\nArticles\n\n\ud83d\udcdc Promise \u2014 MDN\n\ud83d\udcdc JavaScript Promises for Dummies \u2015 Jecelyn Yeen\n\ud83d\udcdc Understanding promises in JavaScript \u2014 Gokul N K\n\ud83d\udcdc Master the JavaScript Interview: What is a Promise? \u2014 Eric Elliott\n\ud83d\udcdc An Overview of JavaScript Promises \u2014 Sandeep Panda\n\ud83d\udcdc How to use Promises in JavaScript \u2014 Prashant Ram\n\ud83d\udcdc Implementing Promises In JavaScript \u2014 Maciej Cieslar\n\ud83d\udcdc JavaScript: Promises explained with simple real life analogies \u2014 Shruti Kapoor\n\ud83d\udcdc Promises for Asynchronous Programming \u2014 Exploring JS\n\ud83d\udcdc JavaScript Promises Explained By Gambling At A Casino \u2014 Kevin Kononenko\n\ud83d\udcdc ES6 Promises: Patterns and Anti-Patterns \u2014 Bobby Brennan\n\ud83d\udcdc A Simple Guide to ES6 Promises \u2014 Brandon Morelli\n\ud83d\udcdc The ES6 Promises \u2014 Manoj Singh Negi\n\ud83d\udcdc ES6 Promises in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Playing with Javascript Promises: A Comprehensive Approach \u2014 Rajesh Babu\n\ud83d\udcdc How to Write a JavaScript Promise \u2014 Brandon Wozniewicz\n\ud83d\udcdc A Coding Writer\u2019s Guide: An Introduction To ES6 Promises \u2014 Andrew Ly\n\ud83d\udcdc Asynchronous JavaScript | Callbacks | Closures | Promises \u2014 Full Stack Geek\n\ud83d\udcdc Understanding Promises in JavaScript \u2014 Chris Noring\n\ud83d\udcdc Converting callbacks to promises \u2014 Zell Liew\n\ud83d\udcdc JavaScript Promises: Zero To Hero Plus Cheat Sheet \u2014 Joshua Saunders\n\ud83d\udcdc Promises - JavaScript concepts \u2014 Agney Menon\n\ud83d\udcdc Javascript Promise 101 \u2014 Igor Irianto\n\ud83d\udcdc Simplify JavaScript Promises \u2014 Sunny Singh\n\ud83d\udcdc The Lowdown on Promises \u2014 Aphinya Dechalert\n\ud83d\udcdc JavaScript Visualized: Promises & Async\/Await \u2014 Lydia Hallie\n\ud83d\udcdc Promises in JavaScript \u2014 Peter Klingelhofer\n\ud83d\udcdc Best Practices for ES6 Promises \u2014 Basti Ortiz\n\nVideos\n\n\ud83c\udfa5 Let's Learn ES6 - Promises \u2014 Ryan Christiani\n\ud83c\udfa5 JavaScript ES6 \/ ES2015 Promises \u2014 Traversy Media\n\ud83c\udfa5 Promises \u2014 Fun Fun Function\n\ud83c\udfa5 Error Handling Promises in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Promises Part 1 - Topics of JavaScript\/ES6 \u2014 The Coding Train\n\n\u2b06 Back to Top\n\n26. async\/await\nArticles\n\n\ud83d\udcdc async\/await \u2014 JavaScript.Info\n\ud83d\udcdc Understanding async\/await in Javascript \u2014 Gokul N K\n\ud83d\udcdc Asynchronous Programming \u2014 Eloquent JavaScript\n\ud83d\udcdc Exploring Async\/Await Functions in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Asynchronous Javascript using async\/await \u2014 Joy Warugu\n\ud83d\udcdc Modern Asynchronous JavaScript with async\/await \u2014 Flavio Copes\n\ud83d\udcdc Asynchronous JavaScript: From Callback Hell to Async and Await \u2014 Demir Selmanovic\n\ud83d\udcdc Javascript \u2014 ES8 Introducing async\/await Functions \u2014 Ben Garrison\n\ud83d\udcdc How to escape async\/await hell \u2014 Aditya Agarwal\n\ud83d\udcdc Understanding JavaScript\u2019s async await \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc JavaScript Async\/Await: Serial, Parallel and Complex Flow \u2014 TechBrij\n\ud83d\udcdc Asynchronous Programming \u2014 Exploring JS\n\ud83d\udcdc From JavaScript Promises to Async\/Await: why bother? \u2014 Chris Nwamba\n\ud83d\udcdc Flow Control in Modern JS: Callbacks to Promises to Async\/Await \u2014 Craig Buckler\n\ud83d\udcdc JavaScript: Promises and Why Async\/Await Wins the Battle \u2014 Nick Parsons\n\ud83d\udcdc How To Master Async\/Await With This Real World Example \u2014 Adrian Hajdin\n\ud83d\udcdc How to improve your asynchronous Javascript code with async and await \u2014 Indrek Lasn\n\ud83d\udcdc Making Fetches Easy With Async Await \u2014 Mickey Sheridan\n\ud83d\udcdc 7 Reasons Why JavaScript Async\/Await Is Better Than Plain Promises \u2014 Mostafa Gaafar\n\ud83d\udcdc Asynchronous Operations in JavaScript \u2014 Jscrambler\n\ud83d\udcdc Async\/await: A slight design flaw. \u2014 Joey\n\ud83d\udcdc JavaScript: Promises or async-await \u2014 Gokul N K\n\ud83d\udcdc Async \/ Await: From Zero to Hero \u2014 Zhi Yuan\n\ud83d\udcdc JavaScript Visualized: Promises & Async\/Await \u2014 Lydia Hallie\n\nVideos\n\n\ud83c\udfa5 Async + Await \u2014 Wes Bos\n\ud83c\udfa5 Asynchrony: Under the Hood \u2014 Shelley Vohr\n\ud83c\udfa5 async\/await in JavaScript - What, Why and How \u2014 Fun Fun Function\n\ud83c\udfa5 async\/await Part 1 - Topics of JavaScript\/ES8 \u2014 The Coding Train\n\ud83c\udfa5 async\/await Part 2 - Topics of JavaScript\/ES8 \u2014 The Coding Train\n\ud83c\udfa5 Complete Guide to JS Async & Await ES2017\/ES8 \u2014 Colt Steele\n\n\u2b06 Back to Top\n\n27. Data Structures\nArticles\n\n\ud83d\udcdc Data Structures in JavaScript \u2014 Thon Ly\n\ud83d\udcdc Algorithms and Data Structures in JavaScript \u2014 Oleksii Trekhleb\n\ud83d\udcdc Data Structures: Objects and Arrays \u2015 Chris Nwamba\n\ud83d\udcdc Data structures in JavaScript \u2014 Benoit Vallon\n\ud83d\udcdc Playing with Data Structures in Javascript \u2014 Anish K.\n\ud83d\udcdc The Little Guide of Queue in JavaScript \u2014 Germ\u00e1n Cutraro\n\ud83d\udcdc All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'\n\ud83d\udcdc Collection of classic computer science paradigms in JavaScript\n\ud83d\udcdc All the things you didn't know you wanted to know about data structures\n\ud83d\udcdc JavaScript Data Structures: 40 Part Series \u2014 miku86\n\ud83d\udcdc Data Structures: Understanding Graphs \u2014 Rachel Hawa\n\ud83d\udcdc Data Structures Two Ways: Linked List (Pt 1) \u2014 Freddie Duffield\n\ud83d\udcdc Data Structures Two Ways: Linked List (Pt 2) \u2014 Freddie Duffield\n\ud83d\udcdc Graph Data Structures Explained in JavaScript \u2014 Adrian Mejia\n\nVideos\n\n\ud83c\udfa5 Algorithms in JavaScript \u2014 Seth Koch\n\ud83c\udfa5 Algorithms In Javascript | Ace Your Interview \u2014 Eduonix Learning Solutions\n\ud83c\udfa5 Data Structures and Algorithms in JavaScript \u2014 freeCodeCamp\n\ud83c\udfa5 Learning JavaScript Data Structures and Algorithms: Sorting \u2014 Packt Video\n\n\u2b06 Back to Top\n\n28. Expensive Operation and Big O Notation\nArticles\n\n\ud83d\udcdc Big O Notation in Javascript \u2014 C\u00e9sar Ant\u00f3n Dorantes\n\ud83d\udcdc Time Complexity\/Big O Notation \u2014 Tim Roberts\n\ud83d\udcdc Big O in JavaScript \u2014 Gabriela Medina\n\ud83d\udcdc Big O Search Algorithms in JavaScript \u2014 Bradley Braithwaite\n\ud83d\udcdc Time Complexity Analysis in JavaScript \u2014 Jennifer Bland\n\ud83d\udcdc Algorithms in plain English: time complexity and Big-O Notation \u2014 Michael Olorunnisola\n\ud83d\udcdc An Introduction to Big O Notation \u2014 Joseph Trettevik\n\nVideos\n\n\ud83c\udfa5 JavaScript: Intro to Big O Notation and Function Runtime \u2014 Eric Traub\n\ud83c\udfa5 Essential Big O for JavaScript Developers \u2014 Dave Smith\n\ud83c\udfa5 Big O Notation - Time Complexity Analysis \u2014 WebTunings\n\n\u2b06 Back to Top\n\n29. Algorithms\nArticles\n\n\ud83d\udcdc Data Structures and Algorithms using ES6\n\ud83d\udcdc Algorithms and data structures implemented in JavaScript with explanations and links to further readings\n\ud83d\udcdc JS: Interview Algorithm\n\ud83d\udcdc Algorithms in JavaScript \u2014 Thon Ly\n\ud83d\udcdc JavaScript Objects, Square Brackets and Algorithms \u2014 Dmitri Grabov\n\ud83d\udcdc Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript\n\ud83d\udcdc Data Structures and Algorithms library in JavaScript\n\ud83d\udcdc Collection of computer science algorithms and data structures written in JavaScript\n\ud83d\udcdc Algorithms and Data Structures in JavaScript \u2014 Oleksii Trekhleb\n\n\u2b06 Back to Top\n\n30. Inheritance, Polymorphism and Code Reuse\nArticles\n\n\ud83d\udcdc Class inheritance, super \u2014 JavaScript.Info\n\ud83d\udcdc Inheritance in JavaScript \u2014 MDN\n\ud83d\udcdc Inheritance in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Simple Inheritance with JavaScript \u2014 David Catuhe\n\ud83d\udcdc JavaScript \u2014 Inheritance, delegation patterns and Object linking \u2014 NC Patro\n\ud83d\udcdc Object Oriented JavaScript: Polymorphism with examples \u2014 Knoldus Blogs\n\ud83d\udcdc Program Like Proteus \u2014 A beginner\u2019s guide to polymorphism in Javascript \u2014 Sam Galson\n\ud83d\udcdc Object-oriented JavaScript: A Deep Dive into ES6 Classes \u2014 Jeff Mott\n\nVideos\n\n\ud83c\udfa5 Inheritance in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 JavaScript ES6 Classes and Inheritance \u2014 Traversy Media\n\ud83c\udfa5 Polymorphism in JavaScript \u2014 kudvenkat\n\n\u2b06 Back to Top\n\n31. Design Patterns\nArticles\n\n\ud83d\udcdc 4 JavaScript Design Patterns You Should Know \u2014 Devan Patel\n\ud83d\udcdc JavaScript Design Patterns \u2013 Beginner's Guide to Mobile Web Development \u2014 Soumyajit Pathak\n\ud83d\udcdc JavaScript Design Patterns \u2014 Akash Pal\n\ud83d\udcdc Javascript Design Patterns: What They Are & How To Use Them \u2014 Patrick Simpson\n\ud83d\udcdc JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora\n\ud83d\udcdc All the 23 (GoF) design patterns implemented in Javascript \u2014 Felipe Beline\n\ud83d\udcdc The Power of the Module Pattern in JavaScript \u2014 jsmanifest\n\ud83d\udcdc Learning JavaScript Design Patterns \u2014 Addy Osmani \n\ud83d\udcdc Design Patterns for Developers using JavaScript pt. I \u2014 Oliver Mensah\n\ud83d\udcdc Design Patterns for Developers using JavaScript pt. II \u2014 Oliver Mensah\n\ud83d\udcdc Design patterns in modern JavaScript development\n\ud83d\udcdc Understanding Design Patterns: Iterator using Dev.to and Medium social networks! \u2014 Carlos Caballero\n\ud83d\udcdc JavaScript Design Patterns - Factory Pattern \u2014 KristijanFi\u0161trek\n\ud83d\udcdc JavaScript Design Pattern \u2014 Module Pattern - Factory Pattern \u2014 Moon\n\ud83d\udcdc Design Patterns: Null Object - Carlos Caballero\n\ud83d\udcdc Strategy Pattern - Francesco Ciulla\n\ud83d\udcdc Adapter Pattern - Francesco Ciulla\n\ud83d\udcdc The Power of Composite Pattern in JavaScript - jsmanifest\n\ud83d\udcdc In Defense of Defensive Programming - Adam Nathaniel Davis\n\nVideos\n\n\ud83c\udfa5 JavaScript Design Patterns \u2014 Udacity\n\ud83c\udfa5 JavaScript Patterns for 2017 \u2014 Scott Allen\n\n\u2b06 Back to Top\n\n32. Partial Applications, Currying, Compose and Pipe\nArticles\n\n\ud83d\udcdc Use function composition in JavaScript \u2014 R\u00e9mi\n\ud83d\udcdc Currying in JavaScript ES6 \u2014 Adam Bene\n\ud83d\udcdc Composition and Currying Elegance in JavaScript \u2014 Pragyan Das\n\ud83d\udcdc Functional JavaScript: Function Composition For Every Day Use \u2014 Joel Thoms\n\ud83d\udcdc Functional Composition: compose() and pipe() \u2014 Anton Paras\n\ud83d\udcdc Why The Hipsters Compose Everything: Functional Composing In JavaScript \u2014 A. Sharif\n\ud83d\udcdc A Gentle Introduction to Functional JavaScript pt III: Functions for making functions \u2014 James Sinclair\n\ud83d\udcdc Curry And Compose (why you should be using something like ramda in your code) \u2014 jsanchesleao\n\ud83d\udcdc Function Composition in JavaScript with Pipe \u2014 Andy Van Slaars\n\ud83d\udcdc Practical Functional JavaScript with Ramda \u2014 Andrew D'Amelio, Yuri Takhteyev\n\ud83d\udcdc The beauty in Partial Application, Currying, and Function Composition \u2014 Joel Thoms\n\ud83d\udcdc Curry or Partial Application? \u2014 Eric Elliott\n\ud83d\udcdc Partial Application in JavaScript \u2014 Ben Alman\n\ud83d\udcdc Partial Application of Functions \u2014 Functional Reactive Ninja\n\ud83d\udcdc Currying vs Partial Application \u2014 Deepak Gupta\n\ud83d\udcdc Partial Application in ECMAScript 2015 \u2014 Ragan Wald\n\ud83d\udcdc Functional Composition in Javascript \u2014 Joe Cortopassi\n\ud83d\udcdc So You Want to be a Functional Programmer pt. I \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. II \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. III \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. IV \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. V \u2014 Charles Scalfani\n\ud83d\udcdc Functional-Light JavaScript Chapter 3: Managing Function Inputs \u2014 Kyle Simpson\n\ud83d\udcdc An introduction to the basic principles of Functional Programming \u2014 TK\n\ud83d\udcdc Concepts of Functional Programming in Javascript \u2014 TK\n\ud83d\udcdc An Introduction to Functional Programming Style in JavaScript \u2014 JavaScript Teacher\n\ud83d\udcdc A practical guide to writing more functional JavaScript \u2014 Nadeesha Cabral\n\ud83d\udcdc A simple explanation of functional pipe in JavaScript \u2014 Ben Lesh\n\nVideos\n\n\ud83c\udfa5 Compose vs Pipe: Functional Programming in JavaScript \u2014 Chyld Studios\n\ud83c\udfa5 JavaScript Functional Programing: Compose \u2014 Theodore Anderson\n\ud83c\udfa5 Function Composition - Functional JavaScript \u2014 NWCalvank\n\ud83c\udfa5 JavaScript Function Composition Explained \u2014 Theodore Anderson\n\ud83c\udfa5 Let's code with function composition \u2014 Fun Fun Function\n\ud83c\udfa5 Partial Application vs. Currying \u2014 NWCalvank\n\ud83c\udfa5 JavaScript Partial Application \u2014 Theodore Anderson\n\n\u2b06 Back to Top\n\n33. Clean Code\nArticles\n\n\ud83d\udcdc Clean Code concepts adapted for JavaScript \u2014 Ryan McDermott\n\ud83d\udcdc JavaScript Clean Coding Best Practices \u2014 Andr\u00e1s T\u00f3th\n\ud83d\udcdc Function parameters in JavaScript Clean Code \u2014 Kevin Peters\n\ud83d\udcdc Keeping your code clean \u2014 Samuel James\n\ud83d\udcdc Best Practices for Using Modern JavaScript Syntax \u2014 M. David Green\n\ud83d\udcdc best practices for cross node\/web development - Jimmy W\u00e4rting\n\ud83d\udcdc Writing Clean Code - Dylan Paulus\n\ud83d\udcdc Writing Clean Code and The Practice of Programming - Nityesh Agarwal\n\ud83d\udcdc Clean code, dirty code, human code - Daniel Irvine\n\ud83d\udcdc Practical Ways to Write Better JavaScript - Ryland G\n\nVideos\n\n\ud83c\udfa5 JavaScript Pro Tips - Code This, NOT That\n\ud83c\udfa5 Clean Code: Functions(Part 1) - Beau teaches\n\n\u2b06 Back to Top\n","56":"\n\n\n\n\n\n\nP(rocess) M(anager) 2\nRuntime Edition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\nStarting an application in production mode is as easy as:\n$ pm2 start app.js\nPM2 is constantly assailed by more than 1800 tests.\nOfficial website: https:\/\/pm2.keymetrics.io\/\nWorks on Linux (stable) & macOS (stable) & Windows (stable). All Node.js versions are supported starting Node.js 8.X.\nInstalling PM2\nWith NPM:\n$ npm install pm2 -g\nOr if you don't have Node.js installed:\nwget -qO- https:\/\/getpm2.com\/install.sh | bash\nStart an application\nYou can start any application (Node.js, Python, Ruby, binaries in $PATH...) like that:\n$ pm2 start app.js\nYour app is now daemonized, monitored and kept alive forever.\nManaging Applications\nOnce applications are started you can manage them easily:\n\nTo list all running applications:\n$ pm2 list\nManaging apps is straightforward:\n$ pm2 stop     <app_name|namespace|id|'all'|json_conf>\n$ pm2 restart  <app_name|namespace|id|'all'|json_conf>\n$ pm2 delete   <app_name|namespace|id|'all'|json_conf>\nTo have more details on a specific application:\n$ pm2 describe <id|app_name>\nTo monitor logs, custom metrics, application information:\n$ pm2 monit\nMore about Process Management\nCluster Mode: Node.js Load Balancing & Zero Downtime Reload\nThe Cluster mode is a special mode when starting a Node.js application, it starts multiple processes and load-balance HTTP\/TCP\/UDP queries between them. This increase overall performance (by a factor of x10 on 16 cores machines) and reliability (faster socket re-balancing in case of unhandled errors).\nStarting a Node.js application in cluster mode that will leverage all CPUs available:\n$ pm2 start api.js -i <processes>\n<processes> can be 'max', -1 (all cpu minus 1) or a specified number of instances to start.\nZero Downtime Reload\nHot Reload allows to update an application without any downtime:\n$ pm2 reload all\nSeamlessly supported by all major Node.js frameworks and any Node.js applications without any code change:\n\nMore informations about how PM2 make clustering easy\nContainer Support\nWith the drop-in replacement command for node, called pm2-runtime, run your Node.js application in a hardened production environment.\nUsing it is seamless:\nRUN npm install pm2 -g\nCMD [ \"pm2-runtime\", \"npm\", \"--\", \"start\" ]\n\nRead More about the dedicated integration\nTerminal Based Monitoring\n\nMonitor all processes launched straight from the command line:\n$ pm2 monit\nLog Management\nTo consult logs just type the command:\n$ pm2 logs\nStandard, Raw, JSON and formated output are available.\nExamples:\n$ pm2 logs APP-NAME       # Display APP-NAME logs\n$ pm2 logs --json         # JSON output\n$ pm2 logs --format       # Formated output\n\n$ pm2 flush               # Flush all logs\n$ pm2 reloadLogs          # Reload all logs\nMore about log management\nStartup Scripts Generation\nPM2 can generates and configure a Startup Script to keep PM2 and your processes alive at every server restart.\nInit Systems Supported: systemd, upstart, launchd, rc.d\n# Generate Startup Script\n$ pm2 startup\n\n# Freeze your process list across server restart\n$ pm2 save\n\n# Remove Startup Script\n$ pm2 unstartup\nMore about Startup Scripts Generation\nPM2 Modules\nPM2 embeds a simple and powerful module system. Installing a module is straightforward:\n$ pm2 install <module_name>\nHere are some PM2 compatible modules (standalone Node.js applications managed by PM2):\npm2-logrotate automatically rotate logs and limit logs size\npm2-server-monit monitor the current server with more than 20+ metrics and 8 actions\nUpdating PM2\n# Install latest PM2 version\n$ npm install pm2@latest -g\n# Save process list, exit old PM2 & restore all processes\n$ pm2 update\nPM2 updates are seamless\nPM2+ Monitoring\nIf you manage your apps with PM2, PM2+ makes it easy to monitor and manage apps across servers.\n\nFeel free to try it:\nDiscover the monitoring dashboard for PM2\nThanks in advance and we hope that you like PM2!\nCHANGELOG\nCHANGELOG\nContributors\nContributors\nLicense\nPM2 is made available under the terms of the GNU Affero General Public License 3.0 (AGPL 3.0).\nFor other licenses contact us.\n","57":"PDF.js \nPDF.js is a Portable Document Format (PDF) viewer that is built with HTML5.\nPDF.js is community-driven and supported by Mozilla. Our goal is to\ncreate a general-purpose, web standards-based platform for parsing and\nrendering PDFs.\nContributing\nPDF.js is an open source project and always looking for more contributors. To\nget involved, visit:\n\nIssue Reporting Guide\nCode Contribution Guide\nFrequently Asked Questions\nGood Beginner Bugs\nProjects\n\nFeel free to stop by our Matrix room for questions or guidance.\nGetting Started\nOnline demo\nPlease note that the \"Modern browsers\" version assumes native support for\nfeatures such as e.g. async\/await, and ReadableStream.\n\n\nModern browsers: https:\/\/mozilla.github.io\/pdf.js\/web\/viewer.html\n\n\nOlder browsers: https:\/\/mozilla.github.io\/pdf.js\/es5\/web\/viewer.html\n\n\nBrowser Extensions\nFirefox\nPDF.js is built into version 19+ of Firefox.\nChrome\n\nThe official extension for Chrome can be installed from the Chrome Web Store.\nThis extension is maintained by @Rob--W.\nBuild Your Own - Get the code as explained below and issue gulp chromium. Then open\nChrome, go to Tools > Extension and load the (unpackaged) extension from the\ndirectory build\/chromium.\n\nGetting the Code\nTo get a local copy of the current code, clone it using git:\n$ git clone https:\/\/github.com\/mozilla\/pdf.js.git\n$ cd pdf.js\n\nNext, install Node.js via the official package or via\nnvm. You need to install the gulp package\nglobally (see also gulp's getting started):\n$ npm install -g gulp-cli\n\nIf everything worked out, install all dependencies for PDF.js:\n$ npm install\n\nFinally, you need to start a local web server as some browsers do not allow opening\nPDF files using a file:\/\/ URL. Run:\n$ gulp server\n\nand then you can open:\n\nhttp:\/\/localhost:8888\/web\/viewer.html\n\nPlease keep in mind that this requires an ES6 compatible browser; refer to Building PDF.js for usage with older browsers.\nIt is also possible to view all test PDF files on the right side by opening:\n\nhttp:\/\/localhost:8888\/test\/pdfs\/?frame\n\nBuilding PDF.js\nIn order to bundle all src\/ files into two production scripts and build the generic\nviewer, run:\n$ gulp generic\n\nThis will generate pdf.js and pdf.worker.js in the build\/generic\/build\/ directory.\nBoth scripts are needed but only pdf.js needs to be included since pdf.worker.js will\nbe loaded by pdf.js. The PDF.js files are large and should be minified for production.\nUsing PDF.js in a web application\nTo use PDF.js in a web application you can choose to use a pre-built version of the library\nor to build it from source. We supply pre-built versions for usage with NPM and Bower under\nthe pdfjs-dist name. For more information and examples please refer to the\nwiki page on this subject.\nIncluding via a CDN\nPDF.js is hosted on several free CDNs:\n\nhttps:\/\/www.jsdelivr.com\/package\/npm\/pdfjs-dist\nhttps:\/\/cdnjs.com\/libraries\/pdf.js\nhttps:\/\/unpkg.com\/pdfjs-dist\/\n\nLearning\nYou can play with the PDF.js API directly from your browser using the live demos below:\n\nInteractive examples\n\nMore examples can be found in the examples folder. Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via gulp dist-install command.\nFor an introduction to the PDF.js code, check out the presentation by our\ncontributor Julian Viereck:\n\nhttps:\/\/www.youtube.com\/watch?v=Iv15UY-4Fg8\n\nMore learning resources can be found at:\n\nhttps:\/\/github.com\/mozilla\/pdf.js\/wiki\/Additional-Learning-Resources\n\nThe API documentation can be found at:\n\nhttps:\/\/mozilla.github.io\/pdf.js\/api\/\n\nQuestions\nCheck out our FAQs and get answers to common questions:\n\nhttps:\/\/github.com\/mozilla\/pdf.js\/wiki\/Frequently-Asked-Questions\n\nTalk to us on Matrix:\n\nhttps:\/\/chat.mozilla.org\/#\/room\/#pdfjs:mozilla.org\n\nFile an issue:\n\nhttps:\/\/github.com\/mozilla\/pdf.js\/issues\/new\n\nFollow us on twitter: @pdfjs\n\nhttps:\/\/twitter.com\/pdfjs\n\n","58":"mermaid     \n\n\ud83c\udfc6 Mermaid was nominated and won the JS Open Source Awards (2019) in the category \"The most exciting use of technology\"!!!\nThanks to all involved, people committing pull requests, people answering questions and special thanks to Tyler Long who is helping me maintain the project \ud83d\ude4f\nAbout\nMermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams.  The main purpose of Mermaid is to help documentation catch up with development.\n\nDoc-Rot is a Catch-22 that Mermaid helps to solve.\n\nDiagramming and documentation costs precious developer time and gets outdated quickly.\nBut not having diagrams or docs ruins productivity and hurts organizational learning. \nMermaid addresses this problem by cutting the time, effort and tooling that is required to create modifiable diagrams and charts, for smarter and more reusable content.\nThe text definitions for Mermaid diagrams allows for it to be updated easily, it can also be made part of production scripts (and other pieces of code).\nSo less time needs be spent on documenting, as a separate and laborious task. \nEven non-programmers can create diagrams through the Mermaid Live Editor.\nTutorials has video tutorials.\nUse Mermaid with your favorite applications, check out the list of Integrations and Usages of Mermaid.\nFor a more detailed introduction to Mermaid and some of its more basic uses, look to the Beginner's Guide and Usage.\n\ud83c\udf10 CDN | \ud83d\udcd6 Documentation | \ud83d\ude4c Contribution | \ud83d\udcdc Changelog\nExamples\nThe following are some examples of the diagrams, charts and graphs that can be made using Mermaid and the Markdown-inspired text specific to it. Click here jump into the text syntax.\n\n\nFlow\n    [docs - live editor]\n\n\ngraph TD\nA[Hard] -->|Text| B(Round)\nB --> C{Decision}\nC -->|One| D[Result 1]\nC -->|Two| E[Result 2]\n    \n\n\n\n\n\nSequence\n    [docs - live editor]\n\n\nsequenceDiagram\nAlice->>John: Hello John, how are you?\nloop Healthcheck\n    John->>John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn-->>Alice: Great!\nJohn->>Bob: How about you?\nBob-->>John: Jolly good!\n    \n\n\n\n\n\nGantt\n    [docs - live editor]\n\n\ngantt\nsection Section\nCompleted :done,    des1, 2014-01-06,2014-01-08\nActive        :active,  des2, 2014-01-07, 3d\nParallel 1   :         des3, after des1, 1d\nParallel 2   :         des4, after des1, 1d\nParallel 3   :         des5, after des3, 1d\nParallel 4   :         des6, after des4, 1d\n    \n\n\n\n\n\nClass\n    [docs - live editor]\n\n\nclassDiagram\nClass01 <|-- AveryLongClass : Cool\n<<interface>> Class01\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nclass Class10 {\n  <<service>>\n  int id\n  size()\n}\n\n\n\n\n\n\nState\n    [docs - live editor]\n\n\nstateDiagram-v2\n[*] --> Still\nStill --> [*]\nStill --> Moving\nMoving --> Still\nMoving --> Crash\nCrash --> [*]\n\n\n\n\n\n\nPie\n    [docs - live editor]\n\n\npie\n\"Dogs\" : 386\n\"Cats\" : 85\n\"Rats\" : 15\n\n\n\n\n\n\nGit\n    [experimental - live editor]\n\n\nComing soon!\n\n\nUser Journey\n    [docs - live editor]\n\n\n\n  journey\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 3: Me\n\n\n\n\n\n\nRelated projects\n\nCommand Line Interface\nLive Editor\nHTTP Server\n\nContributors   \nMermaid is a growing community and is always accepting new contributors. There's a lot of different ways to help out and we're always looking for extra hands! Look at this issue if you want to know where to start helping out.\nDetailed information about how to contribute can be found in the contribution guide\nAppreciation\nA quick note from Knut Sveidqvist:\n\nMany thanks to the d3 and dagre-d3 projects for providing the graphical layout and drawing libraries!\nThanks also to the js-sequence-diagram project for usage of the grammar for the sequence diagrams. Thanks to Jessica Peter for inspiration and starting point for gantt rendering.\nThank you to Tyler Long who has been a collaborator since April 2017.\nThank you to the ever-growing list of contributors that brought the project this far!\n\n\nMermaid was created by Knut Sveidqvist for easier documentation.\n","59":"Algorithm Visualizer\n\nAlgorithm Visualizer is an interactive online platform that visualizes algorithms from code.\n\n\n\nLearning an algorithm gets much easier with visualizing it. Don't get what we mean? Check it out:\nalgorithm-visualizer.org\nContributing\nWe have multiple repositories under the hood that comprise the website. Take a look at the contributing guidelines in the repository you want to contribute to.\n\n\nalgorithm-visualizer is a web app written in React. It contains UI components and interprets commands into visualizations. Check out the contributing guidelines.\n\n\nserver serves the web app and provides APIs that it needs on the fly. (e.g., GitHub sign in, compiling\/running code, etc.)\n\n\nalgorithms contains visualizations of algorithms shown on the side menu of the website.\n\n\ntracers.* are visualization libraries written in each supported language. They extract visualizing commands from code.\n\n\n","60":"English | \u7b80\u4f53\u4e2d\u6587 | \u65e5\u672c\u8a9e | Portugu\u00eas Brasileiro | \ud55c\uad6d\uc5b4 | Espa\u00f1ol (Espa\u00f1a) | \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n\nFast 2kB alternative to Moment.js with the same modern API\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API. If you use Moment.js, you already know how to use Day.js.\n\ndayjs().startOf('month').add(1, 'day').set('year', 2018).format('YYYY-MM-DD HH:mm:ss');\n\n\ud83d\udd52 Familiar Moment.js API & patterns\n\ud83d\udcaa Immutable\n\ud83d\udd25 Chainable\n\ud83c\udf10 I18n support\n\ud83d\udce6 2kb mini library\n\ud83d\udc6b All browsers supported\n\n\nGetting Started\nDocumentation\nYou can find for more details, API, and other docs on day.js.org website.\nInstallation\nnpm install dayjs --save\n\ud83d\udcdaInstallation Guide\nAPI\nIt's easy to use Day.js APIs to parse, validate, manipulate, and display dates and times.\ndayjs('2018-08-08') \/\/ parse\n\ndayjs().format('{YYYY} MM-DDTHH:mm:ss SSS [Z] A') \/\/ display\n\ndayjs().set('month', 3).month() \/\/ get & set\n\ndayjs().add(1, 'year') \/\/ manipulate\n\ndayjs().isBefore(dayjs()) \/\/ query\n\ud83d\udcdaAPI Reference\nI18n\nDay.js has great support for internationalization.\nBut none of them will be included in your build unless you use it.\nimport 'dayjs\/locale\/es' \/\/ load on demand\n\ndayjs.locale('es') \/\/ use Spanish locale globally\n\ndayjs('2018-05-05').locale('zh-cn').format() \/\/ use Chinese Simplified locale in a specific instance\n\ud83d\udcdaInternationalization\nPlugin\nA plugin is an independent module that can be added to Day.js to extend functionality or add new features.\nimport advancedFormat from 'dayjs\/plugin\/advancedFormat' \/\/ load on demand\n\ndayjs.extend(advancedFormat) \/\/ use plugin\n\ndayjs().format('Q Do k kk X x') \/\/ more available formats\n\ud83d\udcdaPlugin List\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\nContributors\nThis project exists thanks to all the people who contribute.\nPlease give us a \ud83d\udc96 star \ud83d\udc96 to support us. Thank you.\nAnd thank you to all our backers! \ud83d\ude4f\n\n\n\n\n\nLicense\nDay.js is licensed under a MIT License.\n","61":"Welcome to Brackets! \nBrackets is a modern open-source code editor for HTML, CSS\nand JavaScript that's built in HTML, CSS and JavaScript.\nWhat makes Brackets different from other web code editors?\n\nTools shouldn't get in your way. Instead of cluttering up your coding\nenvironment with lots of panels and icons, the Quick Edit UI in Brackets puts\ncontext-specific code and tools inline.\nBrackets is in sync with your browser. With Live Preview, Brackets\nworks directly with your browser to push code edits instantly and jump\nback and forth between your real source code and the browser view.\nDo it yourself. Because Brackets is open source, and built with HTML, CSS\nand JavaScript, you can help build the best code editor for the web.\n\nBrackets may have reached version 1, but we're not stopping there. We have many feature ideas on our\ntrello board that we're anxious to add and other\ninnovative web development workflows that we're planning to build into Brackets.\nSo take Brackets out for a spin and let us know how we can make it your favorite editor.\nYou can see some\nscreenshots of Brackets\non the wiki, intro videos on YouTube, and news on the Brackets blog.\nHow to install and run Brackets\nDownload\nInstallers for the latest stable build for Mac, Windows and Linux (Debian\/Ubuntu) can be downloaded here.\nUsage\nBy default, Brackets opens a folder containing some simple \"Getting Started\" content.\nYou can choose a different folder to edit using File > Open Folder.\nMost of Brackets should be pretty self-explanatory, but for information on how\nto use its unique features, like Quick Edit and Live Preview, please read\nHow to Use Brackets.\nAlso, see the release notes\nfor a list of new features and known issues in each build.\nIn addition to the core features built into Brackets, there is a large and growing\ncommunity of developers building extensions that add all sorts of useful functionality.\nSee the Brackets Extension Registry\nfor a list of available extensions. For installation instructions,\nsee the extensions wiki page.\nNeed help?\nHaving problems starting Brackets the first time, or not sure how to use Brackets?  Please\nreview Troubleshooting, which helps\nyou to fix common problems and find extra help if needed.\nHelping Brackets\nI found a bug!\nIf you found a repeatable bug, and troubleshooting\ntips didn't help, then be sure to search existing issues first.\nInclude steps to consistently reproduce the problem, actual vs. expected results, screenshots, and your OS and\nBrackets version number. Disable all extensions to verify the issue is a core Brackets bug.\nRead more guidelines for filing good bugs.\nI have a new suggestion, but don't know how to program!\nFor feature requests please first check our Trello board to\nsee if it's already there; you can upvote it if so. If not, feel free to file it as an issue as above; we'll\nmove it to the feature backlog for you.\nI want to help with the code!\nAwesome! There are lots of ways you can help. First read\nCONTRIBUTING.md,\nthen learn how to pull the repo and hack on Brackets.\nThe text editor inside Brackets is based on\nCodeMirror\u2014thanks to Marijn for\ntaking our pull requests, implementing feature requests and fixing bugs! See\nNotes on CodeMirror\nfor info on how we're using CodeMirror.\nAlthough Brackets is built in HTML\/CSS\/JS, it currently runs as a desktop\napplication in a thin native shell, so that it can access your local files.\n(If you just try to open the index.html file in a browser, it won't work yet.)\nThe native shell for Brackets lives in a separate repo,\nadobe\/brackets-shell.\nI want to keep track of how Brackets is doing!\nNot sure you needed the exclamation point there, but we like your enthusiasm.\nWhat's Brackets working on next?\n\nIn our feature backlog, the columns to the right\n(starting from \"Development\") list the features that we're currently working on.\n\"Ready\" shows what we'll be working on next.\nWatch our GitHub activity stream.\nWatch our Waffle Kanban board: Work items in  are next. The entire development process is outlined in the Developer Guide.\n\nContact info\n\nE-mail: admin@brackets.io\nSlack: Brackets on Slack (You can join by sending a mail to admin@brackets.io with the subject line slack registration request specifying the email addresses you would like to register).\nDevelopers mailing list: http:\/\/groups.google.com\/group\/brackets-dev\nTwitter: @brackets\nBlog: http:\/\/blog.brackets.io\/\nIRC: #brackets on freenode\n\n\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\n","62":"\n\n\n\nThe streaming build system\n\n        \nWhat is gulp?\n\nAutomation - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\nPlatform-agnostic - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\nStrong Ecosystem - Use npm modules to do anything you want + over 3000 curated plugins for streaming file transformations.\nSimple - By providing only a minimal API surface, gulp is easy to learn and simple to use.\n\nWhat's new in 4.0?!\n\nThe task system was rewritten from the ground-up, allowing task composition using series() and parallel() methods.\nThe watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system.\nFirst-class support was added for incremental builds using lastRun().\nA symlink() method was exposed to create symlinks instead of copying files.\nBuilt-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!\nTask registration of exported functions - using node or ES exports - is now recommended.\nCustom registries were designed, allowing for shared tasks or augmented functionality.\nStream implementations were improved, allowing for better conditional and phased builds.\n\ngulp for enterprise\nAvailable as part of the Tidelift Subscription\nThe maintainers of gulp and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.\nInstallation\nFollow our Quick Start guide.\nRoadmap\nFind out about all our work-in-progress and outstanding issues at https:\/\/github.com\/orgs\/gulpjs\/projects.\nDocumentation\nCheck out the Getting Started guide and API docs on our website!\nExcuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.\nSample gulpfile.js\nThis file will give you a taste of what gulp does.\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar cleanCSS = require('gulp-clean-css');\nvar del = require('del');\n\nvar paths = {\n  styles: {\n    src: 'src\/styles\/**\/*.less',\n    dest: 'assets\/styles\/'\n  },\n  scripts: {\n    src: 'src\/scripts\/**\/*.js',\n    dest: 'assets\/scripts\/'\n  }\n};\n\n\/* Not all tasks need to use streams, a gulpfile is just another node program\n * and you can use all packages available on npm, but it must return either a\n * Promise, a Stream or take a callback and call it\n *\/\nfunction clean() {\n  \/\/ You can use multiple globbing patterns as you would with `gulp.src`,\n  \/\/ for example if you are using del 2.0 or above, return its promise\n  return del([ 'assets' ]);\n}\n\n\/*\n * Define our tasks using plain functions\n *\/\nfunction styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    \/\/ pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\n\/*\n * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel`\n *\/\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n\/*\n * You can use CommonJS `exports` module notation to declare tasks\n *\/\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\n\/*\n * Define default task that can be called by just running `gulp` from cli\n *\/\nexports.default = build;\nUse latest JavaScript version in your gulpfile\nMost new versions of node support most features that Babel provides, except the import\/export syntax. When only that syntax is desired, rename to gulpfile.esm.js, install the esm module, and skip the Babel portion below.\nNode already supports a lot of ES2015+ features, but to avoid compatibility problems we suggest to install Babel and rename your gulpfile.js to gulpfile.babel.js.\nnpm install --save-dev @babel\/register @babel\/core @babel\/preset-env\nThen create a .babelrc file with the preset configuration.\n{\n  \"presets\": [ \"@babel\/preset-env\" ]\n}\nAnd here's the same sample from above written in ES2015+.\nimport gulp from 'gulp';\nimport less from 'gulp-less';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nconst paths = {\n  styles: {\n    src: 'src\/styles\/**\/*.less',\n    dest: 'assets\/styles\/'\n  },\n  scripts: {\n    src: 'src\/scripts\/**\/*.js',\n    dest: 'assets\/scripts\/'\n  }\n};\n\n\/*\n * For small tasks you can export arrow functions\n *\/\nexport const clean = () => del([ 'assets' ]);\n\n\/*\n * You can also declare named functions and export them as tasks\n *\/\nexport function styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    \/\/ pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nexport function scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n \/*\n  * You could even use `export as` to rename exported tasks\n  *\/\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\nexport { watchFiles as watch };\n\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\n\/*\n * Export a default task\n *\/\nexport default build;\nIncremental Builds\nYou can filter out unchanged files between runs of a task using\nthe gulp.src function's since option and gulp.lastRun:\nconst paths = {\n  ...\n  images: {\n    src: 'src\/images\/**\/*.{jpg,jpeg,png}',\n    dest: 'build\/img\/'\n  }\n}\n\nfunction images() {\n  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\n    .pipe(imagemin())\n    .pipe(gulp.dest(paths.images.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.images.src, images);\n}\nTask run times are saved in memory and are lost when gulp exits. It will only\nsave time during the watch task when running the images task\nfor a second time.\nWant to contribute?\nAnyone can help make this project better - check out our Contributing guide!\nBackers\nSupport us with a monthly donation and help us continue our activities.\n\nSponsors\nBecome a sponsor to get your logo on our README on Github.\n\n","63":"\nHexo\n\nA fast, simple & powerful blog framework, powered by Node.js.\n\nWebsite |\nDocumentation |\nInstallation Guide |\nContribution Guide |\nCode of Conduct |\nAPI |\nTwitter\n\n\n\n\n\n\n\n\n\n\nFeatures\n\nBlazing fast generating\nSupport for GitHub Flavored Markdown and most Octopress plugins\nOne-command deploy to GitHub Pages, Heroku, etc.\nPowerful API for limitless extensibility\nHundreds of themes & plugins\n\nQuick Start\nInstall Hexo\n$ npm install hexo-cli -g\nSetup your blog\n$ hexo init blog\n$ cd blog\nStart the server\n$ hexo server\nCreate a new post\n$ hexo new \"Hello Hexo\"\nGenerate static files\n$ hexo generate\nMore Information\n\nRead the documentation\nVisit the Awesome Hexo list\nFind solutions in troubleshooting\nJoin discussion on Google Group, Discord, Gitter or Telegram\nSee the plugin list and the theme list on wiki\nFollow @hexojs for latest news\n\nContributing\nWe welcome you to join the development of Hexo. Please see contributing document. \ud83e\udd17\nAlso, we welcome PR or issue to official-plugins.\nContributors\n\nBackers\n\nSponsors\n\nLicense\n\n","64":"\n\n\n\n\n\n\nVisual primitives for the component age. Use the best bits of ES6 and CSS to style your apps without stress \ud83d\udc85\n\n\n\n  \n\n\n\n\n\nLooking for v5?\nThe master branch is under development of the upcoming v6 major version of styled-components. For changes targeting v5, please point your PRs at the legacy-v5 branch.\n\nUtilising tagged template literals (a recent addition to JavaScript) and the power of CSS, styled-components allows you to write actual CSS code to style your components. It also removes the mapping between components and styles \u2013 using components as a low-level styling construct could not be easier!\nconst Button = styled.button`\n  color: grey;\n`;\nAlternatively, you may use style objects. This allows for easy porting of CSS from inline styles, while still supporting the more advanced styled-components capabilities like component selectors and media queries.\nconst Button = styled.button({\n  color: 'grey',\n});\nEquivalent to:\nconst Button = styled.button`\n  color: grey;\n`;\nstyled-components is compatible with both React (for web) and React Native \u2013 meaning it's the perfect choice even for truly universal apps! See the documentation about React Native for more information.\nSupported by Front End Center. Thank you for making this possible!\nUpgrading from v4\n\nnpm install styled-components@^5.0.0 react@^16.8 react-dom@^16.8 react-is@^16.8\n??\nProfit!\n\n\nIf you use jest-styled-components, make sure you update that too.\n\nDocs\nSee the documentation at styled-components.com\/docs for more information about using styled-components!\nQuicklinks to some of the most-visited pages:\n\nGetting started\nAPI Reference\nTheming\nServer-side rendering\nTagged Template Literals explained\n\nExample\nimport React from 'react';\n\nimport styled from 'styled-components';\n\n\/\/ Create a <Title> react component that renders an <h1> which is\n\/\/ centered, palevioletred and sized at 1.5em\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n\/\/ Create a <Wrapper> react component that renders a <section> with\n\/\/ some padding and a papayawhip background\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n\n\/\/ Use them like any other React component \u2013 except they're styled!\n<Wrapper>\n  <Title>Hello World, this is my first styled component!<\/Title>\n<\/Wrapper>\nThis is what you'll see in your browser:\n\n\n\n\n\nBabel Macro\nIf you're using tooling that has babel-plugin-macros set up, you can switch to the styled-components\/macro import path instead to gain the effects of the babel plugin without further setup.\nimport styled from 'styled-components\/macro';\n\n\/\/ A static className will be generated for Title (important for SSR)\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\nIf you wish to provide configuration options to the babel plugin similar to how you would in a .babelrc, see this guide. The config name is \"styledComponents\".\nBuilt with styled-components\nA lot of hard work goes into community libraries, projects, and guides. A lot of them make it easier to get started or help you with your next project! There\u2019s also a whole lot of interesting apps and sites that people have built using styled-components.\nMake sure to head over to awesome-styled-components to see them all! And please contribute and add your own work to the list so others can find it.\nContributing\nIf you want to contribute to styled-components please see our contributing and community guidelines, they'll help you get set up locally and explain the whole process.\nPlease also note that all repositories under the styled-components organization follow our Code of Conduct, make sure to review and follow it.\nBadge\nLet everyone know you're using styled-components \u2192 \n[![style: styled-components](https:\/\/img.shields.io\/badge\/style-%F0%9F%92%85%20styled--components-orange.svg?colorB=daa357&colorA=db748e)](https:\/\/github.com\/styled-components\/styled-components)\nContributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nLicense\nLicensed under the MIT License, Copyright \u00a9 2016-present Glen Maddern and Maximilian Stoiber.\nSee LICENSE for more information.\nAcknowledgements\nThis project builds on a long line of earlier work by clever folks all around the world. We'd like to thank Charlie Somerville, Nik Graf, Sunil Pai, Michael Chan, Andrey Popp, Jed Watson & Andrey Sitnik who contributed ideas, code or inspiration.\nSpecial thanks to @okonet for the fantastic logo.\n","65":"\n\n\n\n \u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuild your next Vue.js application with confidence using Nuxt.js: a framework making web development simple and powerful.\n\nLinks\n\n\ud83d\udcd8 Documentation: https:\/\/nuxtjs.org\n\ud83d\udc65 Community: cmty.app\/nuxt\n\ud83c\udfac Video: 1 minute demo\n\ud83d\udc26 Twitter: @nuxt_js\n\ud83d\udcac Chat: Discord\n\ud83c\udf1f AwesomeNuxt\n\ud83d\udc49 Play with Nuxt.js online\n\nFeatures\n\nAutomatic transpilation and bundling (with webpack and babel)\nHot code reloading\nServer-side rendering OR Single Page App OR Static Generated, you choose \ud83d\udd25\nStatic file serving. .\/static\/ is mapped to \/\nConfigurable with a nuxt.config.js file\nCustom layouts with the layouts\/ directory\nMiddleware\nCode splitting for every pages\/\nLoading just the critical CSS (page-level)\n\nLearn more at https:\/\/nuxtjs.org.\nGetting started\n$ npx create-nuxt-app <project-name>\nIt's as simple as that!\nLearn more at https:\/\/nuxtjs.org\/guide\/installation\nExamples\nPlease take a look at https:\/\/nuxtjs.org\/examples or directly in https:\/\/github.com\/nuxt\/nuxt.js\/tree\/dev\/examples.\nProduction deployment\nTo deploy, instead of running nuxt, you probably want to build ahead of time. Therefore, building and starting are separate commands:\nnuxt build\nnuxt start\nLearn more at https:\/\/nuxtjs.org\/guide\/commands#production-deployment\nConsulting from the Nuxt team\nGet help with that tough bug or make sure your Nuxt app is ready to deploy. For $250 an hour, get technical support, advice, code reviews, and development from the Nuxt core team: Hire Nuxt on Otechie\nProfessional support with TideLift\nProfessionally supported Nuxt.js is now available!\nTidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools.\nGet supported Nuxt with the Tidelift Subscription.\nSupporting Nuxt.js\nNuxt.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers.\nFunds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events.\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\nPlatinum Sponsors\n\nGold Sponsors\n\nSilver Sponsors\n\nBronze Sponsors\n\nNuxters\n\nCore team\nS\u00e9bastien Chopin\ud83d\udcdd \ud83d\udc1b \ud83d\udcbb \ud83c\udfa8 \ud83d\udcd6 \ud83d\udcac \ud83d\udc40 \ud83d\udce2Alexandre Chopin\ud83c\udfa8 \ud83d\udcd6 \ud83d\udccb \ud83d\udce6 \ud83d\udcac \ud83d\udce2Pooya Parsa\ud83d\udc1b \ud83d\udcbb \ud83d\udd0c \ud83d\udcac \ud83d\udc40 \ud83d\udd27Clark Du\ud83d\udc1b \ud83d\udcbb \ud83d\udca1 \ud83d\udc40 \u26a0\ufe0f \ud83d\udd27Alexander Lichter\ud83d\udcac \ud83d\udc1b \ud83d\udcbb \ud83d\udca1 \ud83d\udc40 \u26a0\ufe0fJonas Galvez\ud83d\udcac \ud83d\udc1b \ud83d\udcbb \ud83d\udca1 \ud83d\udc40 \u26a0\ufe0fDmitry Molotkov\ud83d\udcac \ud83d\udc1b \ud83d\udcbb \ud83e\udd14 \ud83d\udc40Kevin Marrec\ud83d\udcbb \ud83e\udd14 \ud83d\udce6 \ud83d\udc40Pim\ud83d\udc1b \ud83d\udcbb\nContributors\nThank you to all our contributors!\n\nContributing\n\nPlease refer to our Contribution Guide\nCross-browser testing\nThanks to BrowserStack!\n\nAutomated testing\nThanks to SauceLabs for supporting Open Source <3\n\nSecurity\nIf you discover a security vulnerability regarding Nuxt.js, please send an e-mail to the team via security@nuxtjs.org! All security vulnerabilities will be promptly addressed.\nLicense\nMIT\n","66":"\nHackathon Starter\n   \nLive Demo: https:\/\/hackathon-starter.walcony.com\nJump to What's new?\nA boilerplate for Node.js web applications.\nIf you have attended any hackathons in the past, then you know how much time it takes to\nget a project started: decide on what to build, pick a programming language, pick a web framework,\npick a CSS framework. A while later, you might have an initial project up on GitHub and only then\ncan other team members start contributing. Or how about doing something as simple as Sign in with Facebook\nauthentication? You can spend hours on it if you are not familiar with how OAuth 2.0 works.\nWhen I started this project, my primary focus was on simplicity and ease of use.\nI also tried to make it as generic and reusable as possible to cover most use cases of hackathon web apps,\nwithout being too specific. In the worst case, you can use this as a learning guide for your projects,\nif for example you are only interested in Sign in with Google authentication and nothing else.\nTestimonials\n\n\u201cNice! That README alone is already gold!\u201d\n\u2014 Adrian Le Bas\n\n\n\u201cAwesome. Simply awesome.\u201d\n\u2014 Steven Rueter\n\n\n\u201cI'm using it for a year now and many projects, it's an awesome boilerplate and the project is well maintained!\u201d\n\u2014 Kevin Granger\n\n\n\u201cSmall world with Sahat's project. We were using his hackathon starter for our hackathon this past weekend and got some prizes. Really handy repo!\u201d\n\u2014 Interview candidate for one of the companies I used to work with.\n\nModern Theme\n\nFlatly Bootstrap Theme\n\nAPI Examples\n\nTable of Contents\n\nFeatures\nPrerequisites\nGetting Started\nObtaining API Keys\nProject Structure\nList of Packages\nUseful Tools and Resources\nRecommended Design Resources\nRecommended Node.js Libraries\nRecommended Client-side Libraries\nPro Tips\nFAQ\nHow It Works\nCheatsheets\n\nES6\nJavaScript Date\nMongoose Cheatsheet\n\n\nDeployment\nDocker\nProduction\nChangelog\nContributing\nLicense\n\nFeatures\n\nLocal Authentication using Email and Password\nOAuth 1.0a Authentication via Twitter\nOAuth 2.0 Authentication via Facebook, Google, GitHub, LinkedIn, Instagram\nFlash notifications\nMVC Project Structure\nNode.js clusters support\nSass stylesheets (auto-compiled via middleware)\nBootstrap 4 + Extra Themes\nContact Form (powered by Mailgun, Sendgrid or Mandrill)\nAccount Management\nGravatar\nProfile Details\nChange Password\nForgot Password\nReset Password\nLink multiple OAuth strategies to one account\nDelete Account\nCSRF protection\nAPI Examples: Facebook, Foursquare, Last.fm, Tumblr, Twitter, Stripe, LinkedIn and more.\n\nPrerequisites\n\nMongoDB\nNode.js 10+\nCommand Line Tools\n\u00a0Mac OS X: Xcode (or OS X 10.9+: xcode-select --install)\n\u00a0Windows: Visual Studio OR Visual Studio Code + Windows Subsystem for Linux - Ubuntu\n\u00a0Ubuntu \/ \u00a0Linux Mint: sudo apt-get install build-essential\n\u00a0Fedora: sudo dnf groupinstall \"Development Tools\"\n\u00a0OpenSUSE: sudo zypper install --type pattern devel_basis\n\nNote: If you are new to Node or Express, you may find\nNode.js & Express From Scratch series\nhelpful for learning the basics of Node and Express. Alternatively,\nhere is another great tutorial for complete beginners - Getting Started With Node.js, Express, MongoDB.\nGetting Started\nThe easiest way to get started is to clone the repository:\n# Get the latest snapshot\ngit clone https:\/\/github.com\/sahat\/hackathon-starter.git myproject\n\n# Change directory\ncd myproject\n\n# Install NPM dependencies\nnpm install\n\n# Then simply start your app\nnode app.js\nWarning: If you want to use some API that need https to work (for example Pinterest or facebook),\nyou will need to download ngrok.\nYou must start ngrok after starting the project.\n# start ngrok to intercept the data exchanged on port 8080\n.\/ngrok http 8080\nNext, you must use the https URL defined by ngrok, for example, https:\/\/hackaton.ngrok.io\nNote: I highly recommend installing Nodemon.\nIt watches for any changes in your  node.js app and automatically restarts the\nserver. Once installed, instead of node app.js use nodemon app.js. It will\nsave you a lot of time in the long run, because you won't need to manually\nrestart the server each time you make a small change in code. To install, run\nsudo npm install -g nodemon.\nObtaining API Keys\nTo use any of the included APIs or OAuth authentication methods, you will need\nto obtain appropriate credentials: Client ID, Client Secret, API Key, or\nUsername & Password. You will need to go through each provider to generate new\ncredentials.\n\n\nVisit Google reCAPTCHA Admin Console\nEnter your application's name as the Label\nChose reCAPTCHA v2, \"I'm not a robot\" Checkbox\nEnter localhost as the domain.  You can have other domains added in addition to localhost\nAccept the terms and submit the form\nCopy the Site Key and the Secret key into .env.  These keys will be accessible under Settings, reCAPTCHA keys drop down if you need them again later.\n\n\n\n\nVisit Google Cloud Console\nClick on the Create Project button\nEnter Project Name, then click on Create button\nThen click on APIs & auth in the sidebar and select API tab\nClick on Google+ API under Social APIs, then click Enable API\nClick on Google Drive API under G Suite, then click Enable API\nClick on Google Sheets API under G Suite, then click Enable API\nNext, under APIs & auth in the sidebar click on Credentials tab\nClick on Create new Client ID button\nSelect Web Application and click on Configure Consent Screen\nFill out the required fields then click on Save\nIn the Create Client ID modal dialog:\nApplication Type: Web Application\nAuthorized Javascript origins: http:\/\/localhost:8080\nAuthorized redirect URI: http:\/\/localhost:8080\/auth\/google\/callback\nClick on Create Client ID button\nCopy and paste Client ID and Client secret keys into .env\n\nNote: When you ready to deploy to production don't forget to\nadd your new URL to Authorized Javascript origins and Authorized redirect URI,\ne.g. http:\/\/my-awesome-app.herokuapp.com and\nhttp:\/\/my-awesome-app.herokuapp.com\/auth\/google\/callback respectively.\nThe same goes for other providers.\n\n\n\nVisit Snap Kit Developer Portal\nClick on the + button to create an app\nEnter a name for your app\nEnable the scopes that you will want to use in your app\nClick on the Continue button\nFind the Kits section and make sure that Login Kit is enabled\nFind the Redirect URLs section, click the + Add button, and enter http:\/\/localhost:8080\/auth\/snapchat\/callback\nFind the Development Environment section. Click the Generate button next to the Confidential OAuth2 Client heading within it.\nCopy and paste the generated Private Key and OAuth2 Client ID keys into .env\nNote: OAuth2 Client ID is SNAPCHAT_ID, Private Key is SNAPCHAT_SECRET in .env\nTo prepare the app for submission, fill out the rest of the required fields: Category, Description, Privacy Policy Url, and App Icon\n\nNote: For production use, don't forget to:\n\ngenerate a Confidential OAuth2 Client in the Production Environment and use the production Private Key and OAuth2 Client ID\nadd the production URL to Redirect URLs section, e.g. http:\/\/my-awesome-app.herokuapp.com\/auth\/snapchat\/callback\nsubmit the app for review and wait for approval\n\n\n\n\nVisit Facebook Developers\nClick My Apps, then select *Add a New App from the dropdown menu\nEnter a new name for your app\nClick on the Create App ID button\nFind the Facebook Login Product and click on Facebook Login\nInstead of going through their Quickstart, click on Settings for your app in the top left corner\nCopy and paste App ID and App Secret keys into .env\nNote: App ID is FACEBOOK_ID, App Secret is FACEBOOK_SECRET in .env\nEnter localhost under App Domains\nChoose a Category that best describes your app\nClick on + Add Platform and select Website\nEnter http:\/\/localhost:8080 under Site URL\nClick on the Settings tab in the left nav under Facebook Login\nEnter http:\/\/localhost:8080\/auth\/facebook\/callback under Valid OAuth redirect URIs\n\nNote: After a successful sign in with Facebook, a user will be redirected back to the home page with appended hash #_=_ in the URL. It is not a bug. See this Stack Overflow discussion for ways to handle it.\n\n\n\nGo to Account Settings\nSelect Developer settings from the sidebar\nThen click on OAuth Apps and then on Register new application\nEnter Application Name and Homepage URL\nFor Authorization Callback URL: http:\/\/localhost:8080\/auth\/github\/callback\nClick Register application\nNow copy and paste Client ID and Client Secret keys into .env file\n\n\n\n\nSign in at https:\/\/apps.twitter.com\nClick Create a new application\nEnter your application name, website and description\nFor Callback URL: http:\/\/127.0.0.1:8080\/auth\/twitter\/callback\nGo to Settings tab\nUnder Application Type select Read and Write access\nCheck the box Allow this application to be used to Sign in with Twitter\nClick Update this Twitter's applications settings\nCopy and paste Consumer Key and Consumer Secret keys into .env file\n\n\n\n\nSign in at LinkedIn Developer Network\nFrom the account name dropdown menu select API Keys\nIt may ask you to sign in once again\nClick + Add New Application button\nFill out all the required fields\nOAuth 2.0 Redirect URLs: http:\/\/localhost:8080\/auth\/linkedin\/callback\nJavaScript API Domains: http:\/\/localhost:8080\nFor Default Application Permissions make sure at least the following is checked:\nr_basicprofile\nFinish by clicking Add Application button\nCopy and paste API Key and Secret Key keys into .env file\nAPI Key is your clientID\nSecret Key is your clientSecret\n\n\n\n\nSign up or log into your dashboard\nClick on your profile and click on Account Settings\nThen click on API Keys\nCopy the Secret Key. and add this into .env file\n\n\n\n\nVisit PayPal Developer\nLog in to your PayPal account\nClick Applications > Create App in the navigation bar\nEnter Application Name, then click Create app\nCopy and paste Client ID and Secret keys into .env file\nApp ID is client_id, App Secret is client_secret\nChange host to api.paypal.com if you want to test against production and use the live credentials\n\n\n\n\nGo to Foursquare for Developers\nClick on My Apps in the top menu\nClick the Create A New App button\nEnter App Name, Welcome page url,\nFor Redirect URI: http:\/\/localhost:8080\/auth\/foursquare\/callback\nClick Save Changes\nCopy and paste Client ID and Client Secret keys into .env file\n\n\n\n\nGo to http:\/\/www.tumblr.com\/oauth\/apps\nOnce signed in, click +Register application\nFill in all the details\nFor Default Callback URL: http:\/\/localhost:8080\/auth\/tumblr\/callback\nClick \u2714Register\nCopy and paste OAuth consumer key and OAuth consumer secret keys into .env file\n\n\n\n\nGo to http:\/\/steamcommunity.com\/dev\/apikey\nSign in with your existing Steam account\nEnter your Domain Name, then and click Register\nCopy and paste Key into .env file\n\n\n\n\nVisit the Twitch developer dashboard\nIf prompted, authorize the dashboard to access your twitch account\nIn the Console, click on Register Your Application\nEnter the name of your application\nUse OAuth Redirect URLs enter http:\/\/localhost:8080\/auth\/twitch\/callback\nSet Category to Website Integration and press the Create button\nAfter the applicaiton has been created, click on the Manage button\nCopy and paste Client ID into .env\nIf there is no Client Secret displayed, click on New Secret button and then copy and paste the Client secret into .env\n\n\n\n\nGo to https:\/\/sendgrid.com\/user\/signup\nSign up and confirm your account via the activation email\nThen enter your SendGrid Username and Password into .env file\n\n\n\n\nGo to http:\/\/www.mailgun.com\nSign up and add your Domain Name\nFrom the domain overview, copy and paste the default SMTP Login and Password into .env file\n\n\n\n\nGo to https:\/\/developer.here.com\nSign up and create a Freemium project\nCreate JAVASCRIPT\/REST credentials. Copy and paste the APP_ID and APP into .env file.\nNote that these credentials are available on the client side, and you need to create a domain whitelist for your app credentials when you are publicly launching the app.\n\n\n\n\nGo to https:\/\/www.twilio.com\/try-twilio\nSign up for an account.\nOnce logged into the dashboard, expand the link 'show api credentials'\nCopy your Account Sid and Auth Token\n\n\n\n\nGo to https:\/\/developer.intuit.com\/app\/developer\/qbo\/docs\/get-started\nUse the Sign Up option in the upper right corner of the screen (nav bar) to get a free developer account and a sandbox company.\nCreate a new app by going to your Dashboard using the My Apps option in the top nav bar or by going to https:\/\/developer.intuit.com\/app\/developer\/myapps\nIn your App, under Development, Keys & OAuth (right nav), find the Client ID and Client Secret for your .env file\n\nProject Structure\n\n\n\nName\nDescription\n\n\n\n\nconfig\/passport.js\nPassport Local and OAuth strategies, plus login middleware.\n\n\ncontrollers\/api.js\nController for \/api route and all api examples.\n\n\ncontrollers\/contact.js\nController for contact form.\n\n\ncontrollers\/home.js\nController for home page (index).\n\n\ncontrollers\/user.js\nController for user account management.\n\n\nmodels\/User.js\nMongoose schema and model for User.\n\n\npublic\/\nStatic assets (fonts, css, js, img).\n\n\npublic\/js\/application.js\nSpecify client-side JavaScript dependencies.\n\n\npublic\/js\/main.js\nPlace your client-side JavaScript here.\n\n\npublic\/css\/main.scss\nMain stylesheet for your app.\n\n\npublic\/css\/themes\/default.scss\nSome Bootstrap overrides to make it look prettier.\n\n\nviews\/account\/\nTemplates for login, password reset, signup, profile.\n\n\nviews\/api\/\nTemplates for API Examples.\n\n\nviews\/partials\/flash.pug\nError, info and success flash notifications.\n\n\nviews\/partials\/header.pug\nNavbar partial template.\n\n\nviews\/partials\/footer.pug\nFooter partial template.\n\n\nviews\/layout.pug\nBase template.\n\n\nviews\/home.pug\nHome page template.\n\n\n.dockerignore\nFolder and files ignored by docker usage.\n\n\n.env.example\nYour API keys, tokens, passwords and database URI.\n\n\n.eslintrc\nRules for eslint linter.\n\n\n.gitignore\nFolder and files ignored by git.\n\n\n.travis.yml\nConfiguration files for continuous integration.\n\n\napp.js\nThe main application file.\n\n\ndocker-compose.yml\nDocker compose configuration file.\n\n\nDockerfile\nDocker configuration file.\n\n\npackage.json\nNPM dependencies.\n\n\npackage-lock.json\nContains exact versions of NPM dependencies in package.json.\n\n\n\nNote: There is no preference how you name or structure your views.\nYou could place all your templates in a top-level views directory without\nhaving a nested folder structure, if that makes things easier for you.\nJust don't forget to update extends ..\/layout  and corresponding\nres.render() paths in controllers.\nList of Packages\n\n\n\nPackage\nDescription\n\n\n\n\n@octokit\/rest\nGitHub API library.\n\n\nbcrypt\nLibrary for hashing and salting user passwords.\n\n\nbody-parser\nNode.js body parsing middleware.\n\n\nchai\nBDD\/TDD assertion library.\n\n\nchalk\nTerminal string styling done right.\n\n\ncheerio\nScrape web pages using jQuery-style syntax.\n\n\ncompression\nNode.js compression middleware.\n\n\nconnect-mongo\nMongoDB session store for Express.\n\n\ndotenv\nLoads environment variables from .env file.\n\n\nerrorhandler\nDevelopment-only error handler middleware.\n\n\neslint\nLinter JavaScript.\n\n\neslint-config-airbnb-base\nConfiguration eslint by airbnb.\n\n\neslint-plugin-chai-friendly\nMakes eslint friendly towards Chai.js 'expect' and 'should' statements.\n\n\neslint-plugin-import\nESLint plugin with rules that help validate proper imports.\n\n\nexpress\nNode.js web framework.\n\n\nexpress-flash\nProvides flash messages for Express.\n\n\nexpress-session\nSimple session middleware for Express.\n\n\nexpress-status-monitor\nReports real-time server metrics for Express.\n\n\ninstagram-node\nInstagram API library.\n\n\nlastfm\nLast.fm API library.\n\n\nlob\nLob API library.\n\n\nlodash\nA utility library for working with arrays, numbers, objects, strings.\n\n\nlusca\nCSRF middleware.\n\n\nmailchecker\nVerifies that an email address is valid and not a disposable address.\n\n\nmocha\nTest framework.\n\n\nmoment\nParse, validate, compute dates and times.\n\n\nmongoose\nMongoDB ODM.\n\n\nmorgan\nHTTP request logger middleware for node.js.\n\n\nmulter\nNode.js middleware for handling multipart\/form-data.\n\n\nnode-foursquare\nFoursquare API library.\n\n\nnode-sass\nNode.js bindings to libsass.\n\n\nnode-sass-middleware\nSass middleware compiler.\n\n\nnyc\nCoverage test.\n\n\nnodemailer\nNode.js library for sending emails.\n\n\nnode-quickbooks\nQuickbooks API library.\n\n\npassport\nSimple and elegant authentication library for node.js.\n\n\npassport-facebook\nSign-in with Facebook plugin.\n\n\npassport-github\nSign-in with GitHub plugin.\n\n\npassport-google-oauth\nSign-in with Google plugin.\n\n\npassport-instagram\nSign-in with Instagram plugin.\n\n\npassport-linkedin-oauth2\nSign-in with LinkedIn plugin.\n\n\npassport-local\nSign-in with Username and Password plugin.\n\n\npassport-openid\nSign-in with OpenId plugin.\n\n\npassport-oauth\nAllows you to set up your own OAuth 1.0a and OAuth 2.0 strategies.\n\n\npassport-oauth2-refresh\nA library to refresh OAuth 2.0 access tokens using refresh tokens.\n\n\npassport-snapchat\nSign-in with Snapchat plugin.\n\n\npassport-twitter\nSign-in with Twitter plugin.\n\n\npassport-twitch-new\nSign-in with Twitch plugin.\n\n\npaypal-rest-sdk\nPayPal APIs library.\n\n\npug\nTemplate engine for Express.\n\n\nsinon\nTest spies, stubs and mocks for JavaScript.\n\n\nstripe\nOffical Stripe API library.\n\n\nsupertest\nHTTP assertion library.\n\n\ntumblr.js\nTumblr API library.\n\n\ntwilio\nTwilio API library.\n\n\ntwitter-lite\nTwitter API library.\n\n\nvalidator\nA library of string validators and sanitizers.\n\n\n\nUseful Tools and Resources\n\nJavaScripting - The Database of JavaScript Libraries\nJS Recipes - JavaScript tutorials for backend and frontend development.\nHTML to Pug converter - HTML to PUG is a free online converter helping you to convert HTML files to pug syntax in real-time.\nJavascriptOO - A directory of JavaScript libraries with examples, CDN links, statistics, and videos.\nFavicon Generator - Generate favicons for PC, Android, iOS, Windows 8.\n\nRecommended Design Resources\n\nCode Guide - Standards for developing flexible, durable, and sustainable HTML and CSS.\nBootsnipp - Code snippets for Bootstrap.\nBootstrap Zero - Free Bootstrap templates themes.\nGoogle Bootstrap - Google-styled theme for Bootstrap.\nFont Awesome Icons - It's already part of the Hackathon Starter, so use this page as a reference.\nColors - A nicer color palette for the web.\nCreative Button Styles - awesome button styles.\nCreative Link Effects - Beautiful link effects in CSS.\nMedium Scroll Effect - Fade in\/out header background image as you scroll.\nGeoPattern - SVG background pattern generator.\nTrianglify - SVG low-poly background pattern generator.\n\nRecommended Node.js Libraries\n\nNodemon - Automatically restart Node.js server on code changes.\ngeoip-lite - Geolocation coordinates from IP address.\nFilesize.js - Pretty file sizes, e.g. filesize(265318); \/\/ \"265.32 kB\".\nNumeral.js - Library for formatting and manipulating numbers.\nNode Inspector - Node.js debugger based on Chrome Developer Tools.\nnode-taglib - Library for reading the meta-data of several popular audio formats.\nsharp - Node.js module for resizing JPEG, PNG, WebP and TIFF images.\n\nRecommended Client-side Libraries\n\nFramework7 - Full Featured HTML Framework For Building iOS7 Apps.\nInstantClick - Makes your pages load instantly by pre-loading them on mouse hover.\nNProgress.js - Slim progress bars like on YouTube and Medium.\nHover - Awesome CSS3 animations on mouse hover.\nMagnific Popup - Responsive jQuery Lightbox Plugin.\njQuery Raty - Star Rating Plugin.\nHeadroom.js - Hide your header until you need it.\nX-editable - Edit form elements inline.\nOffline.js - Detect when user's internet connection goes offline.\nAlertify.js - Sweet looking alerts and browser dialogs.\nselectize.js - Styleable select elements and input tags.\ndrop.js -  Powerful Javascript and CSS library for creating dropdowns and other floating displays.\nscrollReveal.js - Declarative on-scroll reveal animations.\n\nPro Tips\n\nUse async.parallel() when you need to run multiple\nasynchronous tasks, and then render a page, but only when all tasks are completed. For example, you might want to scrape three different websites for some data and render the results in a template after all three websites have been scraped.\nNeed to find a specific object inside an Array? Use _.find\nfunction from Lodash. For example, this is how you would retrieve a\nTwitter token from database: var token = _.find(req.user.tokens, { kind: 'twitter' });,\nwhere 1st parameter is an array, and a 2nd parameter is an object to search for.\n\nFAQ\nWhy do I get 403 Error: Forbidden when submitting a form?\nYou need to add the following hidden input element to your form. This has been\nadded in the pull request #40\nas part of the CSRF protection.\ninput(type='hidden', name='_csrf', value=_csrf)\n\nNote: It is now possible to whitelist certain URLs. In other words you can\nspecify a list of routes that should bypass CSRF verification check.\nNote 2: To whitelist dynamic URLs use regular expression tests inside the\nCSRF middleware to see if req.originalUrl matches your desired pattern.\nI am getting MongoDB Connection Error, how do I fix it?\nThat's a custom error message defined in app.js to indicate that there was a\nproblem connecting to MongoDB:\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log('%s MongoDB connection error. Please make sure MongoDB is running.', chalk.red('\u2717'));\n  process.exit();\n});\nYou need to have a MongoDB server running before launching app.js. You can\ndownload MongoDB here, or install it via a package manager.\n\nWindows users, read Install MongoDB on Windows.\nTip: If you are always connected to the internet, you could just use\nMongoDB Atlas or Compose instead\nof downloading and installing MongoDB locally. You will only need to update database credentials\nin .env file.\nI get an error when I deploy my app, why?\nChances are you haven't changed the Database URI in .env. If MONGODB is\nset to localhost, it will only work on your machine as long as MongoDB is\nrunning. When you deploy to Heroku, OpenShift or some other provider, you will not have MongoDB\nrunning on localhost. You need to create an account with MongoDB Atlas\nor Compose, then create a free tier database.\nSee Deployment for more information on how to setup an account\nand a new database step-by-step with MongoDB Atlas.\nWhy Pug (Jade) instead of Handlebars?\nWhen I first started this project I didn't have any experience with Handlebars. Since then I have worked on Ember.js apps and got myself familiar with the Handlebars syntax. While it is true Handlebars is easier, because it looks like good old HTML, I have no regrets picking Jade over Handlebars. First off, it's the default template engine in Express, so someone who has built Express apps in the past already knows it. Secondly, I find extends and block to be indispensable, which as far as I know, Handlebars does not have out of the box. And lastly, subjectively speaking, Jade looks much cleaner and shorter than Handlebars, or any non-HAML style for that matter.\nWhy do you have all routes defined in app.js?\nFor the sake of simplicity. While there might be a better approach,\nsuch as passing app context to each controller as outlined in this\nblog,\nI find such style to be confusing for beginners.\nIt took me a long time to grasp the concept of exports and module.exports,\nlet alone having a global app reference in other files.\nThat to me is backward thinking.\nThe app.js is the \"heart of the app\", it should be the one referencing\nmodels, routes, controllers, etc.\nWhen working solo on small projects, I prefer to have everything inside app.js as is the case with this\nREST API server.\nHow do I switch SendGrid for another email delivery service, like Mailgun or SparkPost?\nInside the nodemailer.createTransport method arguments, change the service from 'Sendgrid' to some other email service. Also, be sure to update both username and password below that. See the list of all supported services by Nodemailer.\nHow It Works (mini guides)\nThis section is intended for giving you a detailed explanation of\nhow a particular functionality works. Maybe you are just curious about\nhow it works, or perhaps you are lost and confused while reading the code,\nI hope it provides some guidance to you.\nCustom HTML and CSS Design 101\nHTML5 UP has many beautiful templates that you can download for free.\nWhen you download the ZIP file, it will come with index.html, images, css and js folders. So, how do you\nintegrate it with Hackathon Starter? Hackathon Starter uses Bootstrap CSS framework, but these templates do not.\nTrying to use both CSS files at the same time will likely result in undesired effects.\nNote: Using the custom templates approach, you should understand that you cannot reuse any of the views I have created: layout, home page, api browser, login, signup, account management, contact. Those views were built using Bootstrap grid and styles. You will have to manually update the grid using a different syntax provided in the template. Having said that, you can mix and match if you want to do so: Use Bootstrap for main app interface, and a custom template for a landing page.\nLet's start from the beginning. For this example I will use Escape Velocity template:\n\nNote: For the sake of simplicity I will only consider index.html, and skip left-sidebar.html,\nno-sidebar.html, right-sidebar.html.\nMove all JavaScript files from html5up-escape-velocity\/js to public\/js. Then move all CSS files from html5up-escape-velocity\/css to public\/css. And finally, move all images from html5up-escape-velocity\/images to public\/images. You could move it to the existing img folder, but that would require manually changing every img reference. Grab the contents of index.html and paste it into HTML To Pug.\nNote: Do not forget to update all the CSS and JS paths accordingly.\nCreate a new file escape-velocity.pug and paste the Pug markup in views folder.\nWhenever you see the code res.render('account\/login') - that means it will search for views\/account\/login.pug file.\nLet's see how it looks. Create a new controller escapeVelocity inside controllers\/home.js:\nexports.escapeVelocity = (req, res) => {\n  res.render('escape-velocity', {\n    title: 'Landing Page'\n  });\n};\nAnd then create a route in app.js. I placed it right after the index controller:\napp.get('\/escape-velocity', homeController.escapeVelocity);\nRestart the server (if you are not using nodemon); then you should see the new template at http:\/\/localhost:8080\/escape-velocity.\nI will stop right here, but if you would like to use this template as more than just a single page, take a look at how these Pug templates work: layout.pug - base template, index.pug - home page, partials\/header.pug - Bootstrap navbar, partials\/footer.pug - sticky footer. You will have to manually break it apart into smaller pieces. Figure out which part of the template you want to keep the same on all pages - that's your new layout.pug.\nThen, each page that changes, be it index.pug, about.pug, contact.pug\nwill be embedded in your new layout.pug via block content. Use existing templates as a reference.\nThis is a rather lengthy process, and templates you get from elsewhere might have yet another grid system. That's why I chose Bootstrap for the Hackathon Starter.\nMany people are already familiar with Bootstrap, plus it's easy to get started with it if you have never used Bootstrap.\nYou can also buy many beautifully designed Bootstrap themes at Themeforest, and use them as a drop-in replacement for Hackathon Starter. However, if you would like to go with a completely custom HTML\/CSS design, this should help you to get started!\n\nHow do flash messages work in this project?\nFlash messages allow you to display a message at the end of the request and access\nit on next request and only next request. For instance, on a failed login attempt, you would\ndisplay an alert with some error message, but as soon as you refresh that page or visit a different\npage and come back to the login page, that error message will be gone. It is only displayed once.\nThis project uses express-flash module for flash messages. And that\nmodule is built on top of connect-flash, which is what I used in\nthis project initially. With express-flash you don't have to\nexplicitly send a flash message to every view inside res.render().\nAll flash messages are available in your views via messages object by default,\nthanks to express-flash.\nFlash messages have a two-step process. You use req.flash('errors', { msg: 'Error messages goes here' }\nto create a flash message in your controllers, and then display them in your views:\nif messages.errors\n  .alert.alert-danger.fade.in\n    for error in messages.errors\n      div= error.msg\nIn the first step, 'errors' is the name of a flash message, which should match the\nname of the property on messages object in your views. You place alert messages\ninside if message.errors because you don't want to show them flash messages are present.\nThe reason why you pass an error like { msg: 'Error message goes here' } instead\nof just a string - 'Error message goes here', is for the sake of consistency.\nTo clarify that, express-validator module which is used for validating and sanitizing user's input,\nreturns all errors as an array of objects, where each object has a msg property with a message why an error has occurred. Here is a more general example of what express-validator returns when there are errors present:\n[\n  { param: \"name\", msg: \"Name is required\", value: \"<received input>\" },\n  { param: \"email\", msg: \"A valid email is required\", value: \"<received input>\" }\n]\nTo keep consistent with that style, you should pass all flash messages\nas { msg: 'My flash message' } instead of a string. Otherwise, you will see an alert box\nwithout an error message. That is because in partials\/flash.pug template it will try to output\nerror.msg (i.e. \"My flash message\".msg), in other words, it will try to call a msg method on a String object,\nwhich will return undefined. Everything I just mentioned about errors, also applies\nto \"info\" and \"success\" flash messages, and you could even create a new one yourself, such as:\nData Usage Controller (Example)\nreq.flash('warning', { msg: 'You have exceeded 90% of your data usage' });\n\nUser Account Page (Example)\nif messages.warning\n  .alert.alert-warning.fade.in\n    for warning in messages.warning\n      div= warning.msg\npartials\/flash.pug is a partial template that contains how flash messages\nare formatted. Previously, flash\nmessages were scattered throughout each view that used flash messages\n(contact, login, signup, profile), but now, thankfully it uses a DRY approach.\nThe flash messages partial template is included in the layout.pug, along with footer and navigation.\nbody\n    include partials\/header\n\n    .container\n      include partials\/flash\n      block content\n\n    include partials\/footer\nIf you have any further questions about flash messages,\nplease feel free to open an issue, and I will update this mini-guide accordingly,\nor send a pull request if you would like to include something that I missed.\n\nHow do I create a new page?\nA more correct way to say this would be \"How do I create a new route?\" The main file app.js contains all the routes.\nEach route has a callback function associated with it. Sometimes you will see three or more arguments for a route. In a case like that, the first argument is still a URL string, while middle arguments\nare what's called middleware. Think of middleware as a door. If this door prevents you from\ncontinuing forward, you won't get to your callback function. One such example is a route that requires authentication.\napp.get('\/account', passportConfig.isAuthenticated, userController.getAccount);\nIt always goes from left to right. A user visits \/account page. Then isAuthenticated middleware checks if you are authenticated:\nexports.isAuthenticated = (req, res, next) => {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n  res.redirect('\/login');\n};\nIf you are authenticated, you let this visitor pass through your \"door\" by calling return next();. It then proceeds to the\nnext middleware until it reaches the last argument, which is a callback function that typically renders a template on GET requests or redirects on POST requests. In this case, if you are authenticated, you will be redirected to the Account Management page; otherwise, you will be redirected to the Login page.\nexports.getAccount = (req, res) => {\n  res.render('account\/profile', {\n    title: 'Account Management'\n  });\n};\nExpress.js has app.get, app.post, app.put, app.delete, but for the most part, you will only use the first two HTTP verbs, unless you are building a RESTful API.\nIf you just want to display a page, then use GET, if you are submitting a form, sending a file then use POST.\nHere is a typical workflow for adding new routes to your application. Let's say we are building a page that lists all books from the database.\nStep 1. Start by defining a route.\napp.get('\/books', bookController.getBooks);\n\nNote: As of Express 4.x you can define your routes like so:\napp.route('\/books')\n  .get(bookController.getBooks)\n  .post(bookController.createBooks)\n  .put(bookController.updateBooks)\n  .delete(bookController.deleteBooks)\nAnd here is how a route would look if it required an authentication and an authorization middleware:\napp.route('\/api\/twitter')\n  .all(passportConfig.isAuthenticated)\n  .all(passportConfig.isAuthorized)\n  .get(apiController.getTwitter)\n  .post(apiController.postTwitter)\nUse whichever style that makes sense to you. Either one is acceptable. I think that chaining HTTP verbs on app.route is a very clean and elegant approach, but on the other hand, I can no longer see all my routes at a glance when you have one route per line.\nStep 2. Create a new schema and a model Book.js inside the models directory.\nconst mongoose = require('mongoose');\n\nconst bookSchema = new mongoose.Schema({\n  name: String\n});\n\nconst Book = mongoose.model('Book', bookSchema);\nmodule.exports = Book;\nStep 3. Create a new controller file called book.js inside the controllers directory.\n\/**\n * GET \/books\n * List all books.\n *\/\nconst Book = require('..\/models\/Book.js');\n\nexports.getBooks = (req, res) => {\n  Book.find((err, docs) => {\n    res.render('books', { books: docs });\n  });\n};\nStep 4. Import that controller in app.js.\nconst bookController = require('.\/controllers\/book');\nStep 5. Create books.pug template.\nextends layout\n\nblock content\n  .page-header\n    h3 All Books\n\n  ul\n    for book in books\n      li= book.name\nThat's it! I will say that you could have combined Step 1, 2, 3 as following:\napp.get('\/books',(req, res) => {\n  Book.find((err, docs) => {\n    res.render('books', { books: docs });\n  });\n});\nSure, it's simpler, but as soon as you pass 1000 lines of code in app.js it becomes a little challenging to navigate the file.\nI mean, the whole point of this boilerplate project was to separate concerns, so you could\nwork with your teammates without running into MERGE CONFLICTS. Imagine you have four developers\nworking on a single app.js, I promise you it won't be fun resolving merge conflicts all the time.\nIf you are the only developer, then it's okay. But as I said, once it gets up to a certain LoC size, it becomes difficult to maintain everything in a single file.\nThat's all there is to it. Express.js is super simple to use.\nMost of the time you will be dealing with other APIs to do the real work:\nMongoose for querying database, socket.io for sending and receiving messages over websockets,\nsending emails via Nodemailer, form validation using express-validator library,\nparsing websites using Cheerio, etc.\n\nHow do I use Socket.io with Hackathon Starter?\nDan Stroot submitted an excellent pull request that adds a real-time dashboard with socket.io.\nAnd as  much as I'd like to add it to the project, I think it violates one of the main\nprinciples of the Hackathon Starter:\n\nWhen I started this project, my primary focus was on simplicity and ease of use.\nI also tried to make it as generic and reusable as possible to cover most use cases of\nhackathon web apps, without being too specific.\n\nWhen I need to use socket.io, I really need it, but most of the time - I don't. But more importantly, websockets support is still experimental on most hosting providers. As of October 2013,\nHeroku supports websockets, but not until you opt-in by running this command:\nheroku labs:enable websockets -a myapp\nAnd what if you are deploying to OpenShift? They do support websockets, but it is currently in a\npreview state. So, for OpenShift you would need to change the socket.io connect URI to the following:\nconst socket = io.connect('http:\/\/yoursite-namespace.rhcloud.com:8000');\nWait, why is it on port 8000? Who knows, and if I didn't run across this blog post\nI wouldn't even know I had to use port 8000.\nI am really glad that Heroku and OpenShift at least\nhave a websockets support, because many other PaaS providers still do not support it.\nDue to the aforementioned issues with websockets, I cannot include socket.io as part of the Hackathon Starter. For now...\nIf you need to use socket.io in your app, please continue reading.\nFirst, you need to install socket.io:\nnpm install socket.io\nReplace const app = express(); with the following code:\nconst app = express();\nconst server = require('http').Server(app);\nconst io = require('socket.io')(server);\nI like to have the following code organization in app.js (from top to bottom): module dependencies,\nimport controllers, import configs, connect to database, express configuration, routes,\nstart the server, socket.io stuff. That way I always know where to look for things.\nAdd the following code at the end of app.js:\nio.on('connection', (socket) => {\n  socket.emit('greet', { hello: 'Hey there browser!' });\n  socket.on('respond', (data) => {\n    console.log(data);\n  });\n  socket.on('disconnect', () => {\n    console.log('Socket disconnected');\n  });\n});\nOne last thing left to change:\napp.listen(app.get('port'), () => {\nto\nserver.listen(app.get('port'), () => {\nAt this point, we are done with the back-end.\nYou now have a choice - to include your JavaScript code in Pug templates or have all your client-side\nJavaScript in a separate file - in main.js. I admit, when I first started with Node.js and JavaScript in general,\nI placed all JavaScript code inside templates because I have access to template variables passed in from Express\nright then and there. It's the easiest thing you can do, but also the least efficient and harder to maintain. Since then I\nalmost never include inline JavaScript inside templates anymore.\nBut it's also understandable if you want to take the easier road.\nMost of the time you don't even care about performance during hackathons, you just\nwant to \"get shit done\" before the time runs out.\nWell, either way, use whichever approach makes more sense to you. At the end of the day,\nit's what you build that matters, not how you build it.\nIf you want to stick all your JavaScript inside templates, then in layout.pug -\nyour main template file, add this to head block.\nscript(src='\/socket.io\/socket.io.js')\nscript.\n    let socket = io.connect(window.location.href);\n    socket.on('greet', function (data) {\n      console.log(data);\n      socket.emit('respond', { message: 'Hey there, server!' });\n    });\nNote: Notice the path of the socket.io.js, you don't actually\nhave to have socket.io.js file anywhere in your project; it will be generated\nautomatically at runtime.\nIf you want to have JavaScript code separate from templates, move that inline\nscript code into main.js, inside the $(document).ready() function:\n$(document).ready(function() {\n\n  \/\/ Place JavaScript code here...\n  let socket = io.connect(window.location.href);\n  socket.on('greet', function (data) {\n    console.log(data);\n    socket.emit('respond', { message: 'Hey there, server!' });\n  });\n\n});\nAnd we are done!\nCheatsheets\n ES6 Cheatsheet\nDeclarations\nDeclares a read-only named constant.\nconst name = 'yourName';\nDeclares a block scope local variable.\nlet index = 0;\nTemplate Strings\nUsing the `${}` syntax, strings can embed expressions.\nconst name = 'Oggy';\nconst age = 3;\n\nconsole.log(`My cat is named ${name} and is ${age} years old.`);\nModules\nTo import functions, objects or primitives exported from an external module. These are the most common types of importing.\nconst name = require('module-name');\nconst { foo, bar } = require('module-name');\nTo export functions, objects or primitives from a given file or module.\nmodule.exports = { myFunction };\nmodule.exports.name = 'yourName';\nmodule.exports = myFunctionOrClass;\nSpread Operator\nThe spread operator allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected.\nmyFunction(...iterableObject);\n<ChildComponent {...this.props} \/>\nPromises\nA Promise is used in asynchronous computations to represent an operation that hasn't completed yet, but is expected in the future.\nvar p = new Promise(function(resolve, reject) { });\nThe catch() method returns a Promise and deals with rejected cases only.\np.catch(function(reason) { \/* handle rejection *\/ });\nThe then() method returns a Promise. It takes two arguments: callback for the success & failure cases.\np.then(function(value) { \/* handle fulfillment *\/ }, function(reason) { \/* handle rejection *\/ });\nThe Promise.all(iterable) method returns a promise that resolves when all of the promises in the iterable argument have resolved or rejects with the reason of the first passed promise that rejects.\nPromise.all([p1, p2, p3]).then(function(values) { console.log(values) });\nArrow Functions\nArrow function expression. Shorter syntax & lexically binds the this value. Arrow functions are anonymous.\nsingleParam => { statements }\n() => { statements }\n(param1, param2) => expression\nconst arr = [1, 2, 3, 4, 5];\nconst squares = arr.map(x => x * x);\nClasses\nThe class declaration creates a new class using prototype-based inheritance.\nclass Person {\n  constructor(name, age, gender) {\n    this.name   = name;\n    this.age    = age;\n    this.gender = gender;\n  }\n\n  incrementAge() {\n    this.age++;\n  }\n}\n\ud83c\udf81 Credits: DuckDuckGo and @DrkSephy.\n\ud83d\udd1d back to top\n JavaScript Date Cheatsheet\nUnix Timestamp (seconds)\nMath.floor(Date.now() \/ 1000);\nmoment().unix();\n\nAdd 30 minutes to a Date object\nvar now = new Date();\nnow.setMinutes(now.getMinutes() + 30);\nmoment().add(30, 'minutes');\n\nDate Formatting\n\/\/ DD-MM-YYYY\nvar now = new Date();\n\nvar DD = now.getDate();\nvar MM = now.getMonth() + 1;\nvar YYYY = now.getFullYear();\n\nif (DD < 10) {\n  DD = '0' + DD;\n}\n\nif (MM < 10) {\n  MM = '0' + MM;\n}\n\nconsole.log(MM + '-' + DD + '-' + YYYY); \/\/ 03-30-2016\nconsole.log(moment(new Date(), 'MM-DD-YYYY'));\n\n\/\/ hh:mm (12 hour time with am\/pm)\nvar now = new Date();\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\nvar amPm = hours >= 12 ? 'pm' : 'am';\n\nhours = hours % 12;\nhours = hours ? hours : 12;\nminutes = minutes < 10 ? '0' + minutes : minutes;\n\nconsole.log(hours + ':' + minutes + ' ' + amPm); \/\/ 1:43 am\nconsole.log(moment(new Date(), 'hh:mm A'));\n\nNext week Date object\nvar today = new Date();\nvar nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\nmoment().add(7, 'days');\n\nYesterday Date object\nvar today = new Date();\nvar yesterday = date.setDate(date.getDate() - 1);\nmoment().add(-1, 'days');\n\n\ud83d\udd1d back to top\nMongoose Cheatsheet\nFind all users:\nUser.find((err, users) => {\n  console.log(users);\n});\nFind a user by email:\nlet userEmail = 'example@gmail.com';\nUser.findOne({ email: userEmail }, (err, user) => {\n  console.log(user);\n});\nFind 5 most recent user accounts:\nUser\n  .find()\n  .sort({ _id: -1 })\n  .limit(5)\n  .exec((err, users) => {\n    console.log(users);\n  });\nGet the total count of a field from all documents:\nLet's suppose that each user has a votes field and you would like to count\nthe total number of votes in your database across all users. One very\ninefficient way would be to loop through each document and manually accumulate\nthe count. Or you could use MongoDB Aggregation Framework instead:\nUser.aggregate({ $group: { _id: null, total: { $sum: '$votes' } } }, (err, votesCount)  => {\n  console.log(votesCount.total);\n});\n\ud83d\udd1d back to top\nDocker\nYou will need docker and docker-compose installed to build the application.\n\n\nDocker installation\n\n\nCommon problems setting up docker\n\n\nAfter installing docker, start the application with the following commands :\n# To build the project for the first time or when you add dependencies\ndocker-compose build web\n\n# To start the application (or to restart after making changes to the source code)\ndocker-compose up web\n\n\nTo view the app, find your docker IP address + port 8080 ( this will typically be http:\/\/localhost:8080\/ ).  To use a port other than 8080, you would need to modify the port in app.js, Dockerfile, and docker-compose.yml.\nDeployment\nOnce you are ready to deploy your app, you will need to create an account with a cloud platform to host it. These are not the only choices, but they are my top picks. From my experience, the easiest way to get started is with Heroku. It will automatically restart your Node.js process when it crashes, has zero-downtime deployments and supports custom domains on free accounts. Additionally, you can\ncreate an account with MongoDB Atlas and then pick one of the 4 providers below.\nAgain, there are plenty of other choices, and you are not limited to just the ones\nlisted below.\nDeployment to Heroku\n\n\nDownload and install Heroku Toolbelt\nIn a terminal, run heroku login and enter your Heroku credentials\nFrom your app directory run heroku create\nUse the command heroku config:set KEY=val to set the different environment variables (KEY=val) for your application (i.e.  heroku config:set BASE_URL=[heroku App Name].herokuapp.com or heroku config:set MONGODB_URI=mongodb:\/\/dbuser:<password>@cluster0-shard-00-00-sdf32.mongodb.net:27017,cluster0-shard-00-01-sdf32.mongodb.net:27017\/<dbname>?ssl=true&retryWrites=true&w=majority (see Hosted MongoDB Atlas below), etc.)  Make sure to set the environment variables for SENDGRID_USER, SENDGRID_PASSWORD, and any other API that you are using as well.\nLastly, do git push heroku master.\n\nPlease note that you may also use the Herko Dashboard to set or modify the configurations for your application.\n\nHosted MongoDB Atlas\n\n\nGo to https:\/\/www.mongodb.com\/cloud\/atlas\nClick the green Get started free button\nFill in your information then hit Get started free\nYou will be redirected to Create New Cluster page.\nSelect a Cloud Provider and Region (such as AWS and a free tier region)\nSelect cluster Tier to Free Shared Clusters\nGive Cluster a name (default: Cluster0)\nClick on green \u26a1Create Cluster button\nNow, to access your database you need to create a DB user. To create a new MongoDB user, from the Clusters view, select the Security tab\nUnder the MongoDB Users tab, click on +Add New User\nFill in a username and password and give it either Atlas Admin User Privilege\nNext, you will need to create an IP address whitelist and obtain the connection URI.  In the Clusters view, under the cluster details (i.e. SANDBOX - Cluster0), click on the CONNECT button.\nUnder section (1) Check the IP Whitelist, click on ALLOW ACCESS FROM ANYWHERE. The form will add a field with 0.0.0.0\/0.  Click SAVE to save the 0.0.0.0\/0 whitelist.\nUnder section (2) Choose a connection method, click on Connect Your Application\nIn the new screen, select Node.js as Driver and version 2.2.12 or later. WARNING: Do not pick 3.0 or later since connect-mongo can't handle mongodb+srv:\/\/ connection strings.\nFinally, copy the URI connection string and replace the URI in MONGODB_URI of .env.example with this URI string.  Make sure to replace the  with the db User password that you created under the Security tab.\nNote that after some of the steps in the Atlas UI, you may see a banner stating We are deploying your changes.  You will need to wait for the deployment to finish before using the DB in your application.\n\nNote: As an alternative to MongoDB Atlas, there is also Compose.\n\nOpenShift\n\n**NOTE** *These instructions might be out of date due to changes in OpenShift. Heroku is currently a good free alternative.  If you the new process, please feel free to help us update this page*\n\nFirst, install this Ruby gem: sudo gem install rhc \ud83d\udc8e\nRun rhc login and enter your OpenShift credentials\nFrom your app directory run rhc app create MyApp nodejs-0.10\nNote: MyApp is the name of your app (no spaces)\nOnce that is done, you will be provided with URL, SSH and Git Remote links\nVisit provided URL, and you should see the Welcome to your Node.js application on OpenShift page\nCopy and paste Git Remote into git remote add openshift YOUR_GIT_REMOTE\nBefore you push your app, you need to do a few modifications to your code\n\nAdd these two lines to app.js, just place them anywhere before app.listen():\nvar IP_ADDRESS = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\nvar PORT = process.env.OPENSHIFT_NODEJS_PORT || 8080;\nThen change app.listen() to:\napp.listen(PORT, IP_ADDRESS,() => {\n  console.log(`Express server listening on port ${PORT} in ${app.settings.env} mode`);\n});\nAdd this to package.json, after name and version. This is necessary because, by default, OpenShift looks for server.js file. And by specifying supervisor app.js it will automatically restart the server when node.js process crashes.\n\"main\": \"app.js\",\n\"scripts\": {\n  \"start\": \"supervisor app.js\"\n},\n\nFinally, you can now push your code to OpenShift by running git push -f openshift master\nNote: The first time you run this command, you have to pass -f (force) flag because OpenShift creates a dummy server with the welcome page when you create a new Node.js app. Passing -f flag will override everything with your Hackathon Starter project repository. Do not run git pull as it will create unnecessary merge conflicts.\nAnd you are done!\n\n\nAzure\n\n**NOTE** *Beyond the initial 12 month trial of Azure, the platform does not seem to offer a free tier for hosting NodeJS apps.  If you are looking for a free tier service to host your app, Heroku might be a better choice at this point*\n\nLogin to Windows Azure Management Portal\nClick the + NEW button on the bottom left of the portal\nClick COMPUTE, then WEB APP, then QUICK CREATE\nEnter a name for URL and select the datacenter REGION for your web site\nClick on CREATE WEB APP button\nOnce the web site status changes to Running, click on the name of the web site to access the Dashboard\nAt the bottom right of the Quickstart page, select Set up a deployment from source control\nSelect Local Git repository from the list, and then click the arrow\nTo enable Git publishing, Azure will ask you to create a user name and password\nOnce the Git repository is ready, you will be presented with a GIT URL\nInside your Hackathon Starter directory, run git remote add azure [Azure Git URL]\nTo push your changes run git push azure master\nNote: You will be prompted for the password you created earlier\nOn Deployments tab of your Windows Azure Web App, you will see the deployment history\n\n\nIBM Bluemix Cloud Platform\nNOTE At this point it appears that Bluemix's free tier to host NodeJS apps is limited to 30 days.  If you are looking for a free tier service to host your app, Heroku might be a better choice at this point\n\n\nCreate a Bluemix Account\nSign up for Bluemix, or use an existing account.\n\n\nDownload and install the Cloud Foundry CLI to push your applications to Bluemix.\n\n\nCreate a manifest.yml file in the root of your application.\n\n\napplications:\n- name:      <your-app-name>\n  host:      <your-app-host>\n  memory:    128M\n  services:\n  - myMongo-db-name\n\nThe host you use will determinate your application URL initially, e.g. <host>.mybluemix.net.\nThe service name 'myMongo-db-name' is a declaration of your MongoDB service.  If you are using other services like Watson for example, then you would declare them the same way.\n\nConnect and login to Bluemix via the Cloud-foundry CLI\n\n$ cf login -a https:\/\/api.ng.bluemix.net\n\n\nCreate a MongoDB service\n\n$ cf create-service mongodb 100 [your-service-name]\n\nNote: this is a free and experiment verion of MongoDB instance.\nUse the MongoDB by Compose instance for production applications:\n$ cf create-service compose-for-mongodb Standard [your-service-name]'\n\n\n\nPush the application\n$ cf push\n\n$ cf env <your-app-name >\n(To view the *environment variables* created for your application)\n\n\n\n\nDone, now go to the staging domain (<host>.mybluemix.net) and see your app running.\nCloud Foundry Commands\nMore Bluemix samples\nSimple ToDo app in a programming language of your choice\nIBM Watson\nBe sure to check out the full list of Watson services to forwarder enhance your application functionality with a little effort. Watson services are easy to get going; it is simply a RESTful API call. Here is an example of a Watson Toner Analyzer to understand the emotional context of a piece of text that you send to Watson.\nWatson catalog of services\n Conversation -     Quickly build and deploy chatbots and virtual agents across a variety of channels, including mobile devices, messaging platforms, and even robots.\n Discovery - Unlock hidden value in data to find answers, monitor trends and surface patterns with the world\u2019s most advanced cloud-native insight engine.\n Language Translator - Translate text from one language to another.\n Natural Language Classifier - Interpret and classify natural language with confidence.\n Natural Language Understanding - Analyze text to extract meta-data from content such as concepts, entities, keywords and more.\n Personality Insights - Predict personality characteristics, needs and values through written text.\n Speech to Text - Convert audio and voice into written text for quick understanding of content.\n Text to Speech - Convert written text into natural sounding audio in a variety of languages and voices.\n Tone Analyzer - Understand emotions, social tendencies and perceived writing style.\n Visual Recognition - Tag, classify and search visual content using machine learning.\nClick here for live demos of each Watson service.\n\nGoogle Cloud Platform\n\n\n\nDownload and install Node.js\n\n\nSelect or create a Google Cloud Platform Console project\n\n\nEnable billing for your project (there's a $300 free trial)\n\n\nInstall and initialize the Google Cloud SDK\n\n\nCreate an app.yaml file at the root of your hackathon-starter folder with the following contents:\nruntime: nodejs\nenv: flex\nmanual_scaling:\n  instances: 1\n\n\nMake sure you've set MONGODB_URI in .env.example\n\n\nRun the following command to deploy the hackathon-starter app:\ngcloud app deploy\n\n\nMonitor your deployed app in the Cloud Console\n\n\nView the logs for your app in the Cloud Console\n\n\nProduction\nIf you are starting with this boilerplate to build an application for prod deployment, or if after your hackathon you would like to get your project hardened for production use, see prod-checklist.md.\nChangelog\nYou can find the changelog for the project in: CHANGELOG.md\nContributing\nIf something is unclear, confusing, or needs to be refactored, please let me know.\nPull requests are always welcome, but due to the opinionated nature of this\nproject, I cannot accept every pull request. Please open an issue before\nsubmitting a pull request. This project uses\nAirbnb JavaScript Style Guide with a\nfew minor exceptions. If you are submitting a pull request that involves\nPug templates, please make sure you are using spaces, not tabs.\nLicense\nThe MIT License (MIT)\nCopyright (c) 2014-2020 Sahat Yalkabov\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","67":"fullPage.js\n\n\n\nEnglish |\n  Espa\u00f1ol |\n  Fran\u00e7ais |\n  P\u0443\u0441\u0441\u043a\u0438\u0439 |\n  \u4e2d\u6587 |\n  \ud55c\uad6d\uc5b4\n\n\n\tAvailable for Vue, React and Angular.\n\n\n\n\n\n\n\u00a0\u00a0 |\u00a0\u00a0 7Kb gziped \u00a0\u00a0|\u00a0\u00a0 Created by @imac2\n\nDemo online | Codepen\nWordpress plugin for Gutenberg and WordPress pluging fo Elementor\nWordpress theme\nfullpage.js Extensions\nFrequently Answered Questions\n\n\nA simple and easy to use library that creates fullscreen scrolling websites (also known as single page websites or onepage sites) and adds landscape sliders inside the sections of the site.\n\nIntroduction\nCompatibility\nLicense\nUsage\n\nCreating links to sections or slides\nCreating smaller or bigger sections\nState classes added by fullpage.js\nLazy loading\nAuto play\/pause embedded media\nUse extensions\n\n\nOptions\nMethods\nCallbacks\nReporting issues\nContributing to fullpage.js\nChangelog\nBuild tasks\nResources\nWho is using fullpage.js\nDonations\nSponsors\n\nIntroduction\nSuggestion are more than welcome, not only for feature requests but also for coding style improvements.\nLet's make this a great library to make people's lives easier!\nCompatibility\nfullPage.js is fully functional on all modern browsers, as well as some old ones such as Internet Explorer 9, Opera 12, etc.\nIt works with browsers with CSS3 support and with the ones which don't have it, making it ideal for old browsers compatibility.\nIt also provides touch support for mobile phones, tablets and touch screen computers.\nSpecial thanks to Browserstack for supporting fullpage.js.\nLicense\nCommercial license\nIf you want to use fullPage to develop non open sourced sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. Which means, you won't have to change your whole application source code to an open source license. [Purchase a Fullpage Commercial License]\nOpen source license\nIf you are creating an open source application under a license compatible with the GNU GPL license v3, you may use fullPage under the terms of the GPLv3.\nThe credit comments in the JavaScript and CSS files should be kept intact (even after combination or minification)\nRead more about fullPage's license.\nUsage\nAs you can see in the example files, you will need to include:\n\nThe JavaScript file fullpage.js (or its minified version fullpage.min.js)\nThe css file fullpage.css\n\nOptionally, when using css3:false, you can add the easings file in case you want to use other easing effects apart from the one included in the library (easeInOutCubic).\nInstall using bower or npm\nOptionally, you can install fullPage.js with bower or npm if you prefer:\nTerminal:\n\/\/ With bower\nbower install fullpage.js\n\n\/\/ With npm\nnpm install fullpage.js\nIncluding files:\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"fullpage.css\" \/>\n\n<!-- This following line is optional. Only necessary if you use the option css3:false and you want to use other easing effects rather than \"easeInOutCubic\". -->\n<script src=\"vendors\/easings.min.js\"><\/script>\n\n\n<!-- This following line is only necessary in the case of using the option `scrollOverflow:true` -->\n<script type=\"text\/javascript\" src=\"vendors\/scrolloverflow.min.js\"><\/script>\n\n<script type=\"text\/javascript\" src=\"fullpage.js\"><\/script>\nUsing Webpack, Browserify or Require.js? Check how to use fullPage.js with module loaders.\nOptional use of CDN\nIf you prefer to use a CDN to load the needed files, fullPage.js is in CDNJS:\nhttps:\/\/cdnjs.com\/libraries\/fullPage.js\nRequired HTML structure\nStart your HTML document with the compulsory HTML DOCTYPE declaration on the 1st line of your HTML code. You might have troubles with sections heights otherwise. The examples provided use HTML 5 doctype <!DOCTYPE html>.\nEach section will be defined with an element containing the section class.\nThe active section by default will be the first section, which is taken as the home page.\nSections should be placed inside a wrapper (<div id=\"fullpage\"> in this case). The wrapper can not be the body element.\n<div id=\"fullpage\">\n\t<div class=\"section\">Some section<\/div>\n\t<div class=\"section\">Some section<\/div>\n\t<div class=\"section\">Some section<\/div>\n\t<div class=\"section\">Some section<\/div>\n<\/div>\nIf you want to define a different starting point rather than the first section or the first slide of a section, just add the class active to the section and slide you want to load first.\n<div class=\"section active\">Some section<\/div>\nIn order to create a landscape slider within a section, each slide will be defined by default with an element containing the slide class:\n<div class=\"section\">\n\t<div class=\"slide\"> Slide 1 <\/div>\n\t<div class=\"slide\"> Slide 2 <\/div>\n\t<div class=\"slide\"> Slide 3 <\/div>\n\t<div class=\"slide\"> Slide 4 <\/div>\n<\/div>\nYou can see a fully working example of the HTML structure in the simple.html file.\nInitialization\nInitialization with Vanilla Javascript\nAll you need to do is call fullPage.js before the closing <\/body> tag.\nnew fullpage('#fullpage', {\n\t\/\/options here\n\tautoScrolling:true,\n\tscrollHorizontally: true\n});\n\n\/\/methods\nfullpage_api.setAllowScrolling(false);\nInitialization with jQuery\nYou can use fullpage.js as a jQuery plugin if you want to!\n$(document).ready(function() {\n\t$('#fullpage').fullpage({\n\t\t\/\/options here\n\t\tautoScrolling:true,\n\t\tscrollHorizontally: true\n\t});\n\n\t\/\/methods\n\t$.fn.fullpage.setAllowScrolling(false);\n});\nFunctions and methods can still be called in the jQuery way, as in fullPage.js v2.X.\nVanilla JS example with all options\nA more complex initialization with all options set could look like this:\nvar myFullpage = new fullpage('#fullpage', {\n\t\/\/Navigation\n\tmenu: '#menu',\n\tlockAnchors: false,\n\tanchors:['firstPage', 'secondPage'],\n\tnavigation: false,\n\tnavigationPosition: 'right',\n\tnavigationTooltips: ['firstSlide', 'secondSlide'],\n\tshowActiveTooltip: false,\n\tslidesNavigation: false,\n\tslidesNavPosition: 'bottom',\n\n\t\/\/Scrolling\n\tcss3: true,\n\tscrollingSpeed: 700,\n\tautoScrolling: true,\n\tfitToSection: true,\n\tfitToSectionDelay: 1000,\n\tscrollBar: false,\n\teasing: 'easeInOutCubic',\n\teasingcss3: 'ease',\n\tloopBottom: false,\n\tloopTop: false,\n\tloopHorizontal: true,\n\tcontinuousVertical: false,\n\tcontinuousHorizontal: false,\n\tscrollHorizontally: false,\n\tinterlockedSlides: false,\n\tdragAndMove: false,\n\toffsetSections: false,\n\tresetSliders: false,\n\tfadingEffect: false,\n\tnormalScrollElements: '#element1, .element2',\n\tscrollOverflow: false,\n\tscrollOverflowReset: false,\n\tscrollOverflowOptions: null,\n\ttouchSensitivity: 15,\n\tbigSectionsDestination: null,\n\n\t\/\/Accessibility\n\tkeyboardScrolling: true,\n\tanimateAnchor: true,\n\trecordHistory: true,\n\n\t\/\/Design\n\tcontrolArrows: true,\n\tverticalCentered: true,\n\tsectionsColor : ['#ccc', '#fff'],\n\tpaddingTop: '3em',\n\tpaddingBottom: '10px',\n\tfixedElements: '#header, .footer',\n\tresponsiveWidth: 0,\n\tresponsiveHeight: 0,\n\tresponsiveSlides: false,\n\tparallax: false,\n\tparallaxOptions: {type: 'reveal', percentage: 62, property: 'translate'},\n\tcards: false,\n\tcardsOptions: {perspective: 100, fadeContent: true, fadeBackground: true},\n\n\t\/\/Custom selectors\n\tsectionSelector: '.section',\n\tslideSelector: '.slide',\n\n\tlazyLoading: true,\n\n\t\/\/events\n\tonLeave: function(origin, destination, direction){},\n\tafterLoad: function(origin, destination, direction){},\n\tafterRender: function(){},\n\tafterResize: function(width, height){},\n\tafterReBuild: function(){},\n\tafterResponsive: function(isResponsive){},\n\tafterSlideLoad: function(section, origin, destination, direction){},\n\tonSlideLeave: function(section, origin, destination, direction){}\n});\nCreating links to sections or slides\nIf you are using fullPage.js with anchor links for the sections (using the anchors option or the attribute data-anchor in each section), then you will be able to use anchor links also to navigate directly to a certain slide inside a section.\nThis would be an example of a link with an anchor: http:\/\/alvarotrigo.com\/fullPage\/#secondPage\/2 (which is the URL you will see once you access to that section\/slide manually)\nNotice the last part of the URL ends in #secondPage\/2.\nHaving the following initialization:\nnew fullpage('#fullpage', {\n\tanchors:['firstPage', 'secondPage', 'thirdPage']\n});\nThe anchor at the end of the URL #secondPage\/2 defines the section and slide of destination respectively. In the previous URL, the section of destination will be the one defined with the anchor secondPage and the slide will be the 2nd slide, as we are using the index 2 for it. (the fist slide of a section has index 0, as technically it is a section).\nWe could have used a custom anchor for the slide instead of its index if we would have used the attribute data-anchor on the HTML markup like so:\n<div class=\"section\">\n\t<div class=\"slide\" data-anchor=\"slide1\"> Slide 1 <\/div>\n\t<div class=\"slide\" data-anchor=\"slide2\"> Slide 2 <\/div>\n\t<div class=\"slide\" data-anchor=\"slide3\"> Slide 3 <\/div>\n\t<div class=\"slide\" data-anchor=\"slide4\"> Slide 4 <\/div>\n<\/div>\nIn this last case, the URL we would use would be #secondPage\/slide3, which is the equivalent to our previous #secondPage\/2.\nNote that section anchors can also be defined in the same way, by using the data-anchor attribute, if no anchors array is provided.\nBe careful! data-anchor tags can not have the same value as any ID element on the site (or NAME element for IE).\nCreating smaller or bigger sections\nDemo fullPage.js provides a way to remove the full height restriction from its sections and slides. It is possible to create sections which height is smaller or bigger than the viewport. This is ideal for footers.\nIt is important to realise that it doesn't make sense to have all of your sections using this feature. If there is more than one section in the initial load of the site, fullPage.js won't scroll at all to see the next one as it will be already in the viewport.\nTo create smaller sections just use the class fp-auto-height in the section you want to apply it. It will then take the height defined by your section\/slide content.\n<div class=\"section\">Whole viewport<\/div>\n<div class=\"section fp-auto-height\">Auto height<\/div>\nResponsive auto height sections\nDemo A responsive auto height can be applied by using the class fp-auto-height-responsive. This way sections will be fullscreen until the responsive mode gets fired. Then they'll take the size required by their content, which could be bigger or smaller than the viewport.\nState classes added by fullpage.js\nFullpage.js adds multiple classes in different elements to keep a record of the status of the site:\n\nactive is added the current visible section and slide.\nactive is added to the current menu element (if using the menu option).\nA class of the form fp-viewing-SECTION-SLIDE is added to the body element of the site. (eg: fp-viewing-secondPage-0) The SECTION and SLIDE parts will be the anchors (or indexes if no anchor is provided) of the current section and slide.\nfp-responsive is added to the body element when the entering in the responsive mode\nfp-enabled is added to the html element when fullpage.js is enabled. (and removed when destroyed).\nfp-destroyed is added to the fullpage.js container when fullPage.js is destroyed.\n\nLazy Loading\nDemo fullPage.js provides a way to lazy load images, videos and audio elements so they won't slow down the loading of your site or unnecessarily waste data transfer.\nWhen using lazy loading, all these elements will only get loaded when entering in the viewport.\nTo enable lazy loading all you need to do is change your src attribute to data-src as shown below:\n<img data-src=\"image.png\">\n<video>\n\t<source data-src=\"video.webm\" type=\"video\/webm\" \/>\n\t<source data-src=\"video.mp4\" type=\"video\/mp4\" \/>\n<\/video>\nIf you already use another lazy load solution which uses data-src as well, you can disable the fullPage.js lazy loading by setting the option lazyLoading: false.\nAuto play\/pause embedded media\nDemo Note: the autoplay feature might not work on some mobile devices depending on the OS and browser (i.e. Safari on iOS version < 10.0).\nPlay on section\/slide load:\nUsing the attribute autoplay for videos or audio, or the param autoplay=1 for youtube iframes will result in the media element playing on page load.\nIn order to play it on section\/slide load use instead the attribute data-autoplay. For example:\n<audio data-autoplay>\n\t<source src=\"http:\/\/metakoncept.hr\/horse.ogg\" type=\"audio\/ogg\">\n<\/audio>\nPause on leave\nEmbedded HTML5 <video> \/ <audio>  and Youtube iframes are automatically paused when you navigate away from a section or slide. This can be disabled by using the attribute data-keepplaying. For example:\n<audio data-keepplaying>\n\t<source src=\"http:\/\/metakoncept.hr\/horse.ogg\" type=\"audio\/ogg\">\n<\/audio>\nUse extensions\nfullpage.js provides a set of extensions you can use to enhance its default features. All of them are listed as fullpage.js options.\nExtensions requires you to use the minified file fullpage.extensions.min.js that is inside the dist folder instead of the usual fullPage.js file (fullpage.js or fullpage.min.js).\nOnce you acquire the extension file, you will need to add it before fullPage. For example, if I want to use the Continuous Horizontal extension, I would have include the extension file and then the extensions version of the fullPage file.\n<script type=\"text\/javascript\" src=\"fullpage.continuousHorizontal.min.js\"><\/script>\n<script type=\"text\/javascript\" src=\"fullpage\/fullpage.extensions.min.js\"><\/script>\nAn activation key and a license key will be required for each extension. See more details about it here.\nThen you will be able to use and configure them as explained in options.\nOptions\n\nlicenseKey: (default null). This option is compulsory. If you use fullPage in a non open source project, then you should use the license key provided on the purchase of the fullPage Commercial License. If your project is open source and it is compatible with the GPLv3 license you can request a license key. Please read more about licenses here and on the website. For example:\n\nnew fullpage({\n    licenseKey: 'YOUR_KEY_HERE'\n});\n\n\nv2compatible: (default false). Determines whether to make it 100% compatible with any code written for version 2, ignoring new features or api changes of version 3. State classes, callbacks signature etc. will work exactly in the same way as it did on verion 2. Note that this option will be removed at some point in the future..\n\n\ncontrolArrows: (default true) Determines whether to use control arrows for the slides to move right or left.\n\n\nverticalCentered: (default true) Vertically centering of the content within sections. When set to true, your content will be wrapped by the library. Consider using delegation or load your other scripts in the afterRender callback.\n\n\nscrollingSpeed: (default 700) Speed in milliseconds for the scrolling transitions.\n\n\nsectionsColor: (default none) Define the CSS background-color property for each section.\nExample:\n\n\nnew fullpage('#fullpage', {\n\tsectionsColor: ['#f2f2f2', '#4BBFC3', '#7BAABE', 'whitesmoke', '#000'],\n});\n\n\nanchors: (default []) Defines the anchor links (#example) to be shown on the URL for each section. Anchors value should be unique. The position of the anchors in the array will define to which sections the anchor is applied. (second position for second section and so on). Using anchors forward and backward navigation will also be possible through the browser. This option also allows users to bookmark a specific section or slide. Be careful! anchors can not have the same value as any ID element on the site (or NAME element for IE).\nNow anchors can be defined directly in the HTML structure by using the attribute data-anchor as explained here.\n\n\nlockAnchors: (default false) Determines whether anchors in the URL will have any effect at all in the library. You can still using anchors internally for your own functions and callbacks, but they won't have any effect in the scrolling of the site. Useful if you want to combine fullPage.js with other plugins using anchor in the URL.\n\n\nImportant It is helpful to understand that the values in the anchors option array correlate directly to the element with the class of .section by it's position in the markup.\n\n\neasing: (default easeInOutCubic) Defines the transition effect to use for the vertical and horizontal scrolling.\nIt requires the file vendors\/easings.min.js or jQuery UI for using some of its transitions. Other libraries could be used instead.\n\n\neasingcss3: (default ease) Defines the transition effect to use in case of using css3:true. You can use the pre-defined ones (such as linear, ease-out...) or create your own ones using the cubic-bezier function. You might want to use Matthew Lein CSS Easing Animation Tool for it.\n\n\nloopTop: (default false) Defines whether scrolling up in the first section should scroll to the last one or not.\n\n\nloopBottom: (default false) Defines whether scrolling down in the last section should scroll to the first one or not.\n\n\nloopHorizontal: (default true) Defines whether horizontal sliders will loop after reaching the last or previous slide or not.\n\n\ncss3: (default true). Defines whether to use JavaScript or CSS3 transforms to scroll within sections and slides. Useful to speed up the movement in tablet and mobile devices with browsers supporting CSS3. If this option is set to true and the browser doesn't support CSS3, a fallback will be used instead.\n\n\nautoScrolling: (default true) Defines whether to use the \"automatic\" scrolling or the \"normal\" one. It also has affects the way the sections fit in the browser\/device window in tablets and mobile phones.\n\n\nfitToSection: (default true) Determines whether or not to fit sections to the viewport or not. When set to true the current active section will always fill the whole viewport. Otherwise the user will be free to stop in the middle of a section.\n\n\nfitToSectionDelay: (default 1000). If fitToSection is set to true, this delays\nthe fitting by the configured milliseconds.\n\n\nscrollBar: (default false) Determines whether to use scroll bar for the vertical sections on site or not. In case of using scroll bar, the autoScrolling functionality will still work as expected. The user will also be free to scroll the site with the scroll bar and fullPage.js will fit the section in the screen when scrolling finishes.\n\n\npaddingTop: (default 0) Defines the top padding for each section with a numerical value and its measure (paddingTop: '10px', paddingTop: '10em'...) Useful in case of using a fixed header.\n\n\npaddingBottom: (default 0) Defines the bottom padding for each section with a numerical value and its measure (paddingBottom: '10px', paddingBottom: '10em'...). Useful in case of using a fixed footer.\n\n\nfixedElements: (default null) Defines which elements will be taken off the scrolling structure of the plugin which is necessary when using the css3 option to keep them fixed. It requires a string with the Javascript selectors for those elements. (For example: fixedElements: '#element1, .element2')\n\n\nnormalScrollElements: (default null) Demo If you want to avoid the auto scroll when scrolling over some elements, this is the option you need to use. (useful for maps, scrolling divs etc.) It requires a string with the Javascript selectors for those elements. (For example: normalScrollElements: '#element1, .element2'). This option should not be applied to any section\/slide element itself.\n\n\nbigSectionsDestination: (default null) Demo Defines how to scroll to a section which height is bigger than the viewport and when not using scrollOverflow:true. (Read how to create smaller or bigger sections). By default fullPage.js scrolls to the top if you come from a section above the destination one and to the bottom if you come from a section below the destination one. Possible values are top, bottom, null.\n\n\nkeyboardScrolling: (default true) Defines if the content can be navigated using the keyboard.\n\n\ntouchSensitivity: (default 5) Defines a percentage of the browsers window width\/height, and how far a swipe must measure for navigating to the next section \/ slide\n\n\ncontinuousVertical: (default false) Defines whether scrolling down in the last section or should scroll down to the first one and if scrolling up in the first section should scroll up to the last one. Not compatible with loopTop, loopBottom or any scroll bar present in the site (scrollBar:true or autoScrolling:false).\n\n\ncontinuousHorizontal: (default false) Extension of fullpage.js. Defines whether sliding right in the last slide should slide right to the first one or not, and if scrolling left in the first slide should slide left to the last one or not. Not compatible with loopHorizontal. Requires fullpage.js >= 3.0.1.\n\n\nscrollHorizontally: (default false) Extension of fullpage.js. Defines whether to slide horizontally within sliders by using the mouse wheel or trackpad. It can only be used when using: autoScrolling:true. Ideal for story telling. Requires fullpage.js >= 3.0.1.\n\n\ninterlockedSlides: (default false) Extension of fullpage.js. Determines whether moving one horizontal slider will force the sliding of sliders in other section in the same direction. Possible values are true, false or an array with the interlocked sections. For example [1,3,5] starting by 1. Requires fullpage.js >= 3.0.1.\n\n\ndragAndMove: (default false) Extension of fullpage.js. Enables or disables the dragging and flicking of sections and slides by using mouse or fingers. Requires fullpage.js >= 3.0.1. Possible values are:\n\ntrue: enables the feature.\nfalse: disables the feature.\nvertical: enables the feature only vertically.\nhorizontal: enables the feature only horizontally.\nfingersonly: enables the feature for touch devices only.\nmouseonly: enables the feature for desktop devices only (mouse and trackpad).\n\n\n\noffsetSections: (default false)Extension of fullpage.js. Provides a way to use non full screen sections based on percentage. Ideal to show visitors there's more content in the site by showing part of the next or previous section. Requires fullPage.js >= 3.0.1.\nTo define the percentage of each section the attribute data-percentage must be used. The centering of the section in the viewport can be determined by using a boolean value in the attribute data-centered (default to true if not specified). For example:\n\n\n    <div class=\"section\" data-percentage=\"80\" data-centered=\"true\">\n\n\nresetSliders: (default false). Extension of fullpage.js. Defines whether or not to reset every slider after leaving its section. Requires fullpage.js >= 3.0.1.\n\n\nfadingEffect: (default false). Extension of fullpage.js. Defines whether to use a fading effect or not instead of the default scrolling one. Possible values are true, false, sections, slides. It can therefore be applied just vertically or horizontally, or to both at the time. It can only be used when using: autoScrolling:true. Requires fullpage.js >= 3.0.1.\n\n\nanimateAnchor: (default true) Defines whether the load of the site when given an anchor (#) will scroll with animation to its destination or will directly load on the given section.\n\n\nrecordHistory: (default true) Defines whether to push the state of the site to the browser's history. When set to true each section\/slide of the site will act as a new page and the back and forward buttons of the browser will scroll the sections\/slides to reach the previous or next state of the site. When set to false, the URL will keep changing but will have no effect on the browser's history. This option is automatically turned off when using autoScrolling:false.\n\n\nmenu: (default false) A selector can be used to specify the menu to link with the sections. This way the scrolling of the sections will activate the corresponding element in the menu using the class active.\nThis won't generate a menu but will just add the active class to the element in the given menu with the corresponding anchor links.\nIn order to link the elements of the menu with the sections, an HTML 5 data-tag (data-menuanchor) will be needed to use with the same anchor links as used within the sections. Example:\n\n\n<ul id=\"myMenu\">\n\t<li data-menuanchor=\"firstPage\" class=\"active\"><a href=\"#firstPage\">First section<\/a><\/li>\n\t<li data-menuanchor=\"secondPage\"><a href=\"#secondPage\">Second section<\/a><\/li>\n\t<li data-menuanchor=\"thirdPage\"><a href=\"#thirdPage\">Third section<\/a><\/li>\n\t<li data-menuanchor=\"fourthPage\"><a href=\"#fourthPage\">Fourth section<\/a><\/li>\n<\/ul>\nnew fullpage('#fullpage', {\n\tanchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n\tmenu: '#myMenu'\n});\nNote: the menu element should be placed outside the fullpage wrapper in order to avoid problem when using css3:true. Otherwise it will be appended to the body by the plugin itself.\n\n\nnavigation: (default false) If set to true, it will show a navigation bar made up of small circles.\n\n\nnavigationPosition: (default none) It can be set to left or right and defines which position the navigation bar will be shown (if using one).\n\n\nnavigationTooltips: (default []) Defines the tooltips to show for the navigation circles in case they are being used. Example: navigationTooltips: ['firstSlide', 'secondSlide']. You can also define them by using the attribute data-tooltip in each section if you prefer.\n\n\nshowActiveTooltip: (default false) Shows a persistent tooltip for the actively viewed section in the vertical navigation.\n\n\nslidesNavigation: (default false) If set to true it will show a navigation bar made up of small circles for each landscape slider on the site.\n\n\nslidesNavPosition: (default bottom) Defines the position for the landscape navigation bar for sliders. Admits top and bottom as values. You may want to modify the CSS styles to determine the distance from the top or bottom as well as any other style such as color.\n\n\nscrollOverflow: (default false) defines whether or not to create a scroll for the section\/slide in case its content is bigger than the height of it. When set to true, your content will be wrapped by the plugin. Consider using delegation or load your other scripts in the afterRender callback.\nIn case of setting it to true, it requires the vendor library scrolloverflow.min.js. This file has to be loaded before the fullPage.js plugin, but after jQuery ( in case of using it).\nFor example:\n\n\n<script type=\"text\/javascript\" src=\"vendors\/scrolloverflow.min.js\"><\/script>\n<script type=\"text\/javascript\" src=\"fullpage.js\"><\/script>\nIn order to prevent fullpage.js from creating the scrollbar in certain sections or slides use the class fp-noscroll. For example: <div class=\"section fp-noscroll\">\nYou can also prevent scrolloverflow from getting applied on responsive mode when using fp-auto-height-responsive in the section element.\n\n\nscrollOverflowReset: (default false) Extension of fullpage.js. When set to true it scrolls up the content of the section\/slide with scroll bar when leaving to another vertical section. This way the section\/slide will always show the start of its content even when scrolling from a section under it.\n\n\nscrollOverflowOptions: when using scrollOverflow:true fullpage.js will make use of a forked and modified version of iScroll.js library. You can customize the scrolling behaviour by providing fullpage.js with the iScroll.js options you want to use. Check its documentation for more info.\n\n\nsectionSelector: (default .section) Defines the Javascript selector used for the plugin sections. It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.\n\n\nslideSelector: (default .slide)  Defines the Javascript selector used for the plugin slides.  It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.\n\n\nresponsiveWidth: (default 0)  A normal scroll (autoScrolling:false) will be used under the defined width in pixels. A class fp-responsive is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser's width is less than 900 the plugin will scroll like a normal site.\n\n\nresponsiveHeight: (default 0)  A normal scroll (autoScrolling:false) will be used under the defined height in pixels. A class fp-responsive is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser's height is less than 900 the plugin will scroll like a normal site.\n\n\nresponsiveSlides: (default false) Extension of fullpage.js. When set to true slides will be turned into vertical sections when responsive mode is fired. (by using the responsiveWidth or responsiveHeight options detailed above). Requires fullpage.js >= 3.0.1.\n\n\nparallax: (default false) Extension of fullpage.js. Defines whether or not to use the parallax backgrounds effects on sections \/ slides. Read more about how to apply the parallax option.\n\n\nparallaxOptions: (default: { type: 'reveal', percentage: 62, property: 'translate'}). Allows to configure the parameters for the parallax backgrounds effect when using the option parallax:true. Read more about how to apply the parallax option.\n\n\ncards: (default false) Extension of fullpage.js. Defines whether or not to use the cards effect on sections\/slides. Read more about how to apply the cards option.\n\n\ncardsOptions: (default: { perspective: 100, fadeContent: true, fadeBackground: true}). Allows you to configure the parameters for the cards effect when using the option cards:true. Read more about how to apply the cards option.\n\n\nlazyLoading: (default true) Lazy loading is active by default which means it will lazy load any media element containing the attribute data-src as detailed in the Lazy Loading docs . If you want to use any other lazy loading library you can disable this fullpage.js feature.\n\n\nMethods\nYou can see them in action here\ngetActiveSection()\nDemo Gets an Object (type Section) containing the active section and its properties.\nfullpage_api.getActiveSection();\ngetActiveSlide()\nDemo Gets an Object (type Slide) containing the active slide and its properties.\nfullpage_api.getActiveSlide();\nmoveSectionUp()\nDemo Scrolls one section up:\nfullpage_api.moveSectionUp();\n\nmoveSectionDown()\nDemo Scrolls one section down:\nfullpage_api.moveSectionDown();\n\nmoveTo(section, slide)\nDemo Scrolls the page to the given section and slide. The first section will have the index 1 whilst the first slide, the visible one by default, will have index 0.\n\/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide *\/\nfullpage_api.moveTo('firstSlide', 2);\n\/\/Scrolling to the 3rd section (with index 3) in the site\nfullpage_api.moveTo(3, 0);\n\n\/\/Which is the same as\nfullpage_api.moveTo(3);\n\nsilentMoveTo(section, slide)\nDemo\nExactly the same as moveTo but in this case it performs the scroll without animation. A direct jump to the destination.\n\/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide *\/\nfullpage_api.silentMoveTo('firstSlide', 2);\n\nmoveSlideRight()\nDemo\nScrolls the horizontal slider of the current section to the next slide:\nfullpage_api.moveSlideRight();\n\nmoveSlideLeft()\nDemo\nScrolls the horizontal slider of the current section to the previous slide:\nfullpage_api.moveSlideLeft();\n\nsetAutoScrolling(boolean)\nDemo Sets the scrolling configuration in real time.\nDefines the way the page scrolling behaves. If it is set to true, it will use the \"automatic\" scrolling, otherwise, it will use the \"manual\" or \"normal\" scrolling of the site.\nfullpage_api.setAutoScrolling(false);\n\nsetFitToSection(boolean)\nDemo\nSets the value for the option fitToSection determining whether to fit the section in the screen or not.\nfullpage_api.setFitToSection(false);\n\nfitToSection()\nDemo\nScrolls to the nearest active section fitting it in the viewport.\nfullpage_api.fitToSection();\n\nsetLockAnchors(boolean)\nDemo\nSets the value for the option lockAnchors determining whether anchors will have any effect in the URL or not.\nfullpage_api.setLockAnchors(false);\n\nsetAllowScrolling(boolean, [directions])\nDemo Adds or remove the possibility of scrolling through sections\/slides by using the mouse wheel\/trackpad or touch gestures (which is active by default). Note this won't disable the keyboard scrolling. You\nwould need to use setKeyboardScrolling for it.\n\ndirections: (optional parameter) Admitted values: all, up, down, left, right or a combination of them separated by commas like down, right. It defines the direction for which the scrolling will be enabled or disabled.\n\n\/\/disabling scrolling\nfullpage_api.setAllowScrolling(false);\n\n\/\/disabling scrolling down\nfullpage_api.setAllowScrolling(false, 'down');\n\n\/\/disabling scrolling down and right\nfullpage_api.setAllowScrolling(false, 'down, right');\n\nsetKeyboardScrolling(boolean, [directions])\nDemo Adds or remove the possibility of scrolling through sections by using the keyboard (which is active by default).\n\ndirections: (optional parameter) Admitted values: all, up, down, left, right or a combination of them separated by commas like down, right. It defines the direction for which the scrolling will be enabled or disabled.\n\n\/\/disabling all keyboard scrolling\nfullpage_api.setKeyboardScrolling(false);\n\n\/\/disabling keyboard scrolling down\nfullpage_api.setKeyboardScrolling(false, 'down');\n\n\/\/disabling keyboard scrolling down and right\nfullpage_api.setKeyboardScrolling(false, 'down, right');\n\nsetRecordHistory(boolean)\nDemo Defines whether to record the history for each hash change in the URL.\nfullpage_api.setRecordHistory(false);\n\nsetScrollingSpeed(milliseconds)\nDemo Defines the scrolling speed in milliseconds.\nfullpage_api.setScrollingSpeed(700);\n\ndestroy(type)\nDemo Destroys the plugin events and optionally its HTML markup and styles.\nIdeal to use when using AJAX to load content.\n\ntype: (optional parameter) can be empty or all. If all is passed, the HTML markup and styles used by fullpage.js will be removed. This way the original HTML markup, the one used before any plugin modification is made, will be maintained.\n\n\/\/destroying all Javascript events created by fullPage.js (scrolls, hashchange in the URL...)\nfullpage_api.destroy();\n\n\/\/destroying all Javascript events and any modification done by fullPage.js over your original HTML markup.\nfullpage_api.destroy('all');\n\nreBuild()\nUpdates the DOM structure to fit the new window size or its contents.\nIdeal to use in combination with AJAX calls or external changes in the DOM structure of the site, specially when using scrollOverflow:true.\nfullpage_api.reBuild();\n\nsetResponsive(boolean)\nDemo Sets the responsive mode of the page. When set to true the autoScrolling will be turned off and the result will be exactly the same one as when the responsiveWidth or responsiveHeight options  get fired.\nfullpage_api.setResponsive(true);\n\nresponsiveSlides.toSections()\nExtension of fullpage.js. Requires fullpage.js >= 3.0.1.\nTurns horizontal slides into vertical sections.\nfullpage_api.responsiveSlides.toSections();\n\nresponsiveSlides.toSlides()\nExtension of fullpage.js. Requires fullpage.js >= 3.0.1.\nTurns back the original slides (now converted into vertical sections) into horizontal slides again.\nfullpage_api.responsiveSlides.toSlides();\nCallbacks\nDemo You can see them in action here.\nSome callbacks, such as onLeave will contain Object type of parameters containing the following properties:\n\nanchor: (String) item's anchor.\nindex: (Number) item's index.\nitem: (DOM element) item element.\nisFirst: (Boolean) determines if the item is the first child.\nisLast: (Boolean) determines if the item is the last child.\n\nafterLoad (origin, destination, direction)\nCallback fired once the sections have been loaded, after the scrolling has ended.\nParameters:\n\norigin: (Object) section of origin.\ndestination: (Object) destination section.\ndirection: (String) it will take the values up or down depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tanchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n\n\tafterLoad: function(origin, destination, direction){\n\t\tvar loadedSection = this;\n\n\t\t\/\/using index\n\t\tif(origin.index == 2){\n\t\t\talert(\"Section 3 ended loading\");\n\t\t}\n\n\t\t\/\/using anchorLink\n\t\tif(origin.anchor == 'secondSlide'){\n\t\t\talert(\"Section 2 ended loading\");\n\t\t}\n\t}\n});\n\nonLeave (origin, destination, direction)\nThis callback is fired once the user leaves a section, in the transition to the new section.\nReturning false will cancel the move before it takes place.\nParameters:\n\norigin:  (Object) section of origin.\ndestination: (Object) destination section.\ndirection: (String) it will take the values up or down depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tonLeave: function(origin, destination, direction){\n\t\tvar leavingSection = this;\n\n\t\t\/\/after leaving section 2\n\t\tif(origin.index == 1 && direction =='down'){\n\t\t\talert(\"Going to section 3!\");\n\t\t}\n\n\t\telse if(origin.index == 1 && direction == 'up'){\n\t\t\talert(\"Going to section 1!\");\n\t\t}\n\t}\n});\nCancelling the scroll before it takes place\nYou can cancel the scroll by returning false on the onLeave callback:\nnew fullpage('#fullpage', {\n\tonLeave: function(origin, destination, direction){\n\t\t\/\/it won't scroll if the destination is the 3rd section\n\t\tif(destination.index == 2){\n\t\t\treturn false;\n\t\t}\n\t}\n});\n\nafterRender()\nThis callback is fired just after the structure of the page is generated. This is the callback you want to use to initialize other plugins or fire any code which requires the document to be ready (as this plugin modifies the DOM to create the resulting structure). See FAQs for more info.\nExample:\nnew fullpage('#fullpage', {\n\tafterRender: function(){\n\t\tvar pluginContainer = this;\n\t\talert(\"The resulting DOM structure is ready\");\n\t}\n});\n\nafterResize(width, height)\nThis callback is fired after resizing the browser's window. Just after the sections are resized.\nParameters:\n\nwidth:  (Number) window's width.\nheight: (Number) window's height.\n\nExample:\nnew fullpage('#fullpage', {\n\tafterResize: function(width, height){\n\t\tvar fullpageContainer = this;\n\t\talert(\"The sections have finished resizing\");\n\t}\n});\n\nafterReBuild()\nThis callback is fired after manually re-building fullpage.js by calling fullpage_api.reBuild().\nExample:\nnew fullpage('#fullpage', {\n\tafterReBuild: function(){\n\t\tconsole.log(\"fullPage.js has manually being re-builded\");\n\t}\n});\n\nafterResponsive(isResponsive)\nThis callback is fired after fullpage.js changes from normal to responsive mode or from responsive mode to normal mode.\nParameters:\n\nisResponsive: (Boolean) determines if it enters into responsive mode (true) or goes back to normal mode (false).\n\nExample:\nnew fullpage('#fullpage', {\n\tafterResponsive: function(isResponsive){\n\t\talert(\"Is responsive: \" + isResponsive);\n\t}\n});\n\nafterSlideLoad (section, origin, destination, direction)\nCallback fired once the slide of a section have been loaded, after the scrolling has ended.\nParameters:\n\nsection: (Object) active vertical section.\norigin: (Object) horizontal slide of origin.\ndestination: (Object) destination horizontal slide.\ndirection: (String) right or left depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tanchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n\n\tafterSlideLoad: function( section, origin, destination, direction){\n\t\tvar loadedSlide = this;\n\n\t\t\/\/first slide of the second section\n\t\tif(section.anchor == 'secondPage' && destination.index == 1){\n\t\t\talert(\"First slide loaded\");\n\t\t}\n\n\t\t\/\/second slide of the second section (supposing #secondSlide is the\n\t\t\/\/anchor for the second slide)\n\t\tif(section.index == 1 && destination.anchor == 'secondSlide'){\n\t\t\talert(\"Second slide loaded\");\n\t\t}\n\t}\n});\n\nonSlideLeave (section, origin, destination, direction)\nThis callback is fired once the user leaves an slide to go to another, in the transition to the new slide.\nReturning false will cancel the move before it takes place.\nParameters:\n\nsection: (Object) active vertical section.\norigin: (Object) horizontal slide of origin.\ndestination: (Object) destination horizontal slide.\ndirection: (String) right or left depending on the scrolling direction.\n\nExample:\nnew fullpage('#fullpage', {\n\tonSlideLeave: function( section, origin, destination, direction){\n\t\tvar leavingSlide = this;\n\n\t\t\/\/leaving the first slide of the 2nd Section to the right\n\t\tif(section.index == 1 && origin.index == 0 && direction == 'right'){\n\t\t\talert(\"Leaving the fist slide!!\");\n\t\t}\n\n\t\t\/\/leaving the 3rd slide of the 2nd Section to the left\n\t\tif(section.index == 1 && origin.index == 2 && direction == 'left'){\n\t\t\talert(\"Going to slide 2! \");\n\t\t}\n\t}\n});\nCancelling a move before it takes place\nYou can cancel a move by returning false on the onSlideLeave callback. Same as when canceling a movement with onLeave.\nReporting issues\n\nPlease, look for your issue before asking using the github issues search.\nMake sure you use the latest fullpage.js version. No support is provided for older versions.\nUse the the Github Issues forum to create issues.\nAn isolated reproduction of the issue will be required. Make use of jsfiddle or codepen for it if possible.\n\nContributing to fullpage.js\nPlease see Contributing to fullpage.js\nChangelog\nTo see the list of recent changes, see Releases section.\nBuild tasks\nWant to build fullpage.js distribution files? Please see Build Tasks\nResources\n\nWordpress Plugin for Gutenberg and for Elementor.\nWordpress theme\nOfficial Vue.js wrapper component\nOfficial React.js wrapper component\nOfficial Angular wrapper component\nCSS Easing Animation Tool - Matthew Lein (useful to define the easingcss3 value)\nfullPage.js jsDelivr CDN\nfullPage.js plugin for October CMS\nfullPage.js Angular2 directive\nfullPage.js angular directive\nfullPage.js ember-cli addon\nfullPage.js Rails Ruby Gem\nAngular fullPage.js - Adaptation for Angular.js v1.x\nIntegrating fullPage.js with Wordpress (Tutorial)\nWordpress Plugin for Divi\nWordpress Plugin for Elementor\n\nWho is using fullPage.js\nIf you want your page to be listed here, please contact me with the URL.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhttps:\/\/www.coca-colacompany.com\/annual-review\/2017\/index.html\nhttp:\/\/www.bbc.co.uk\/news\/resources\/idt-d88680d1-26f2-4863-be95-83298fd01e02\nhttp:\/\/www.newjumoconcept.com\/\nhttp:\/\/www.shootinggalleryasia.com\/\nhttp:\/\/medoff.ua\/en\/\nhttp:\/\/promo.prestigio.com\/grace1\/\nhttp:\/\/torchbrowser.com\/\nhttp:\/\/thekorner.fr\/\nhttp:\/\/charlotteaimes.com\/\nhttp:\/\/www.boxreload.com\/\nhttp:\/\/educationaboveall.org\/\nhttp:\/\/usescribe.com\/\nhttp:\/\/boxx.hk\/\nhttp:\/\/www.sanyang.com.tw\/service\/Conception\/\nhttp:\/\/trasmissione-energia.terna.it\/\nhttp:\/\/www.villareginateodolinda.it\nhttp:\/\/www.kesstrio.com\nhttp:\/\/ded-morozz.kiev.ua\/\nhttp:\/\/dancingroad.com\nhttp:\/\/www.camanihome.com\/\n\nYou can find another list here.\nDonations\nDonations would be more than welcome :)\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor] | [Become a patreon]\n\n\n\n\nPeople\n\n\n\n","68":"\n\n\n\n\nAPI creation made simple, secure and fast.\nThe most advanced open-source headless CMS to build powerful APIs with no effort.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStrapi is a free and open-source headless CMS delivering your content anywhere you need.\n\nKeep control over your data. With Strapi, you know where your data is stored, and you keep full control at all times.\nSelf-hosted. You can host and scale Strapi projects the way you want. You can choose any hosting platform you want: AWS, Netlify, Heroku, a VPS, or a dedicated server. You can scale as you grow, 100% independent.\nDatabase agnostic. You can choose the database you prefer. Strapi works with SQL & NoSQL databases: MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.\nCustomizable. You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.\n\nGetting Started\nRead the Getting Started tutorial or follow the steps below:\n\u23f3 Installation\nInstall Strapi with this Quickstart command to create a Strapi project instantly:\n\n(Use yarn to install the Strapi project (recommended). Install yarn with these docs.)\n\nyarn create strapi-app my-project --quickstart\nor\n\n(Use npm\/npx to install the Strapi project.)\n\nnpx create-strapi-app my-project --quickstart\nThis command generates a brand new project with the default features (authentication, permissions, content management, content type builder & file upload). The Quickstart command installs Strapi using a SQLite database which is used for prototyping in development.\nEnjoy \ud83c\udf89\n\ud83d\udd90 Requirements\nComplete installation requirements can be found in the documentation under Installation Requirements.\nSupported operating systems:\n\nUbuntu 18.04\/Debian 9.x\nCentOS\/RHEL 8\nmacOS Mojave\nWindows 10\nDocker - Docker-Repo\n\n(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)\nNode:\n\nNodeJS >= 10.16 <=14\nNPM >= 6.x\n\nDatabase:\n\nMongoDB >= 3.6\nMySQL >= 5.6\nMariaDB >= 10.1\nPostgreSQL >= 10\nSQLite >= 3\n\nWe recommend always using the latest version of Strapi to start your new projects.\nFeatures\n\nModern Admin Panel: Elegant, entirely customizable and a fully extensible admin panel.\nSecure by default: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.\nPlugins Oriented: Install the auth system, content management, custom plugins, and more, in seconds.\nBlazing Fast: Built on top of Node.js, Strapi delivers amazing performance.\nFront-end Agnostic: Use any front-end framework (React, Vue, Angular, etc.), mobile apps or even IoT.\nPowerful CLI: Scaffold projects and APIs on the fly.\nSQL & NoSQL databases: Works with MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.\n\nSee more on our website.\nContributing\nPlease read our Contributing Guide before submitting a Pull Request to the project.\nCommunity support\nFor general help using Strapi, please refer to the official Strapi documentation. For additional help, you can use one of these channels to ask a question:\n\nSlack (For live discussion with the Community and Strapi team)\nGitHub (Bug reports, Contributions)\nCommunity Forum (Questions and Discussions)\nProductBoard (Roadmap, Feature requests)\nTwitter (Get the news fast)\nFacebook\nYouTube Channel (Learn from Video Tutorials)\n\nMigration\nFollow our migration guides on the documentation to keep your projects up-to-date.\nRoadmap\nCheck out our roadmap to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.\nLicense\nSee the LICENSE file for licensing information.\n","69":"\n\n\n\n\n\u963f\u91cc\u62dbp6\/p7 nodejs \/ Python\uff0c\u652f\u6301\u8fdc\u7a0b\u9762\u8bd5 | gaojunqi@outlook.com | \u4e0a\u6d77 \nchinese-poetry: \u6700\u5168\u4e2d\u6587\u8bd7\u6b4c\u53e4\u5178\u6587\u96c6\u6570\u636e\u5e93\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u6700\u5168\u7684\u4e2d\u534e\u53e4\u5178\u6587\u96c6\u6570\u636e\u5e93\uff0c\u5305\u542b 5.5 \u4e07\u9996\u5510\u8bd7\u300126 \u4e07\u9996\u5b8b\u8bd7\u30012.1 \u4e07\u9996\u5b8b\u8bcd\u548c\u5176\u4ed6\u53e4\u5178\u6587\u96c6\u3002\u8bd7\u4eba\u5305\u62ec\u5510\u5b8b\u4e24\u671d\u8fd1 1.4 \u4e07\u53e4\u8bd7\u4eba\uff0c\u548c\u4e24\u5b8b\u65f6\u671f 1.5 \u5343\u53e4\u8bcd\u4eba\u3002\u6570\u636e\u6765\u6e90\u4e8e\u4e92\u8054\u7f51\u3002\n\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e2a\u4ed3\u5e93? \u53e4\u8bd7\u662f\u4e2d\u534e\u6c11\u65cf\u4e43\u81f3\u5168\u4e16\u754c\u7684\u7470\u5b9d\uff0c\u6211\u4eec\u5e94\u8be5\u4f20\u627f\u4e0b\u53bb\uff0c\u867d\u7136\u6709\u53e4\u5178\u6587\u96c6\uff0c\u4f46\u5927\u591a\u6570\u4eba\u5e76\u6ca1\u6709\u62e5\u6709\u8fd9\u4e9b\u4e66\u7c4d\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u8fd9\u4e9b\u5e9e\u5927\u7684\u6587\u96c6\u79bb\u6211\u4eec\u662f\u6709\u4e00\u5b9a\u8ddd\u79bb\u7684\u3002\u800c\u7535\u5b50\u7248\u65b9\u4fbf\u62f7\u8d1d\uff0c\u6240\u4ee5\u6b64\u5f00\u6e90\u6570\u636e\u5e93\u8bde\u751f\u4e86\u3002\u6b64\u6570\u636e\u5e93\u901a\u8fc7 JSON \u683c\u5f0f\u5206\u53d1\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5f88\u65b9\u4fbf\u7684\u5f00\u59cb\u4f60\u7684\u9879\u76ee\u3002\n\u53e4\u8bd7\u91c7\u96c6\u6ca1\u6709\u8bb0\u5f55\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u53e4\u8bd7\u6570\u636e\u5e9e\u5927\uff0c\u76ee\u6807\u7f51\u7ad9\u6709\u9650\u5236\uff0c\u91c7\u96c6\u8fc7\u7a0b\u7ecf\u5e38\u4e2d\u65ad\u8d85\u8fc7\u4e86\u4e00\u4e2a\u661f\u671f\u30022017 \u5e74\u65b0\u52a0\u5165\u5168\u5b8b\u8bcd\uff0c\u5168\u5b8b\u8bcd\u722c\u53d6\u8fc7\u7a0b\u53ca\u6570\u636e\u5206\u6790\u3002\n\u9ad8\u9891\u8bcd\u5206\u6790\u56fe\n\n\u5b8b\u8bcd\u53d7\u6b22\u8fce\u7684\u8bcd\u724c\u540d\n\n\n\n\n\n\u5b8b\u8bcd\u9ad8\u9891\u8bcd\n\n\n\n\u5b8b\u8bcd\u4f5c\u8005\u4f5c\u54c1\u699c\n\n\n\n\u5510\u8bd7\u9ad8\u9891\u8bcd\n\n\n\n\u5510\u8bd7\u4f5c\u8005\u4f5c\u54c1\u699c\n\n\n\n\u5b8b\u8bd7\u9ad8\u9891\u8bcd\n\n\n\n\u5b8b\u8bd7\u4f5c\u8005\u4f5c\u54c1\u699c\n\n\n\u6570\u636e\u96c6\n\n\u5168\u5510\u8bd7 json\n\u5168\u5b8b\u8bd7 json\n\u5168\u5b8b\u8bcd ci\n\u4e94\u4ee3\u00b7\u82b1\u95f4\u96c6 wudai\/huajianji\n\u4e94\u4ee3\u00b7\u5357\u5510\u4e8c\u4e3b\u8bcd wudai\/nantan\n\u8bba\u8bed lunyu\n\u8bd7\u7ecf shijing\n\u5e7d\u68a6\u5f71 youmengying\n\u56db\u4e66\u4e94\u7ecf sishuwujing\n\u8499\u5b78 mengxue\n\n\u8d21\u732e\n\u672c\u9879\u76ee\u76ee\u7684\u662f\u501f\u52a9\u6280\u672f\u6765\u751f\u6210\u683c\u5f0f\u5316(JSON)\u6570\u636e\uff0c\u8ba9\u5f00\u53d1\u8005\u66f4\u65b9\u4fbf\u5feb\u901f\u7684\u6784\u5efa\u8bd7\u8bcd\u7c7b\u5e94\u7528\u7a0b\u5e8f\u3002\u8eab\u5355\u529b\u8584\uff0c\u6b22\u8fce\u66f4\u591a\u4eba\u6765\u7ef4\u62a4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u53c2\u4e0e\u8d21\u732e\uff1a\n\n\n\u76f4\u63a5\u63d0\u4ea4 PR \u6216\u8005\u901a\u8fc7 issue \u8ba8\u8bba\u6765\u4f18\u5316\u5b8c\u5584\u6b64\u6570\u636e\u5e93\uff0c\u7406\u8bba\u4e0a\u53e4\u8bd7\u6b4c\u4f53\u975e\u5b97\u6559\u7c7b\u90fd\u6b22\u8fce\u52a0\u5165\uff0c\u90e8\u5206\u6709\u4e89\u8bae\u6027\u7684\u6570\u636e\u9700\u8981\u793e\u533a\u6295\u7968\u8ba8\u8bba\u51b3\u5b9a\u662f\u5426\u52a0\u5165\u3002\u5173\u4e8e\u8bd7\u53e5\u7684\u7ea0\u9519\u5728\u521b\u5efa PR \u65f6\u8bf7\u6807\u660e\u51fa\u5904\u3002\u66f4\u591a\u89c4\u8303\u8bf7\u53c2\u8003\u8d21\u732e\u89c4\u8303\u6587\u6863\u3002\n\n\n\u5982\u679c\u4f60\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u53c2\u4e0e\u5b8c\u5584\u7684\u8fc7\u7a0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u300cPatreon \u5468\u671f\u6027\u8d5e\u52a9\u300d\u7684\u5f62\u5f0f\u6765\u6301\u7eed\u5e2e\u52a9\u5e76\u6fc0\u52b1\u6211\u53bb\u4f18\u5316\u5b8c\u5584\u6b64\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u4e0d\u559c\u6b22\u5468\u671f\u6027\u8d5e\u52a9\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u300c\u652f\u4ed8\u5b9d\u300d\u6216\u8005\u300c\u5fae\u4fe1\u8d5e\u8d4f\u7801\u300d\u8fdb\u884c\u4e00\u6b21\u6027\u8d5e\u52a9(\u5907\u6ce8\u7559\u4e0b\u90ae\u7bb1)\u3002\n\n\n\u5982\u6709\u5efa\u8bae\u6216\u5410\u69fd\uff0c\u6b22\u8fce\u8054\u7cfb\u6211\u7684\u90ae\u7bb1 gaojunqi@outlook.com\u3002\n\n\n\u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u5f62\u5f0f\u8d21\u732e\u6700\u7ec8\u90fd\u4f1a\u4f7f\u4e4b\u53d8\u5f97\u66f4\u597d\uff01\n\u8d5e\u52a9\u8005\n\u4e0a\u6d77\u9006\u884c\u4fe1\u606f\u79d1\u6280\n\u8d21\u732e\u8005\n\n\n\n\u6848\u4f8b\u5c55\u793a\n\n\u6848\u4f8b\u5c55\u793a\n\n\u4e2d\u6587\u8bd7\u6b4c\u4e3b\u9875\u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8bd7\u8bcd\u7f51\u7ad9\uff0c\u5305\u542b\u5510\u8bd7\u4e09\u767e\u9996\u3001\u5b8b\u8bcd\u4e09\u767e\u9996\u7b49\u6587\u96c6\u3002\nanimalize \/ QuanTangshi \u79bb\u7ebf\u5168\u5510\u8bd7 Android\njustdark \/ pytorch-poetry-gen a char-RNN based on pytorch\nClover27 \/ ancient-Chinese-poem-generator Ancient-Chinese-Poem-Generator\nchinese-poetry \/ poetry-calendar \u8bd7\u8bcd\u5468\u5386\nchenyuntc \/ pytorch-book \u7b80\u4f53\u5510\u8bd7\u751f\u6210(char-RNN)\uff0c\u53ef\u751f\u6210\u85cf\u5934\u8bd7\uff0c\u81ea\u5b9a\u4e49\u8bd7\u6b4c\u610f\u5883\uff0c\u524d\u7f00\u7b49\nokcy1016 \/ poetry-desktop \u8bd7\u8bcd\u684c\u9762\nhuangjianke \/ weapp-poem \u8bd7\u8bcd\u58a8\u5ba2 \u5c0f\u7a0b\u5e8f\u7248\n\u6c49\u5b57\u4e4b\u7f8e\u6c49\u5b57\u4e4b\u7f8e\u662f\u4e00\u4e2a\u65b9\u4fbf\u67e5\u8be2\u7684\u8bd7\u8bcd\u7f51\u7ad9\uff0c\u7b80\u6d01\u5e72\u51c0\uff0c\u65b9\u4fbf\u4f7f\u7528\u3002\n\n\nLicense\nMIT \u8bb8\u53ef\u8bc1\u3002\n","70":"Immutable collections for JavaScript\n \nImmutable data cannot be changed once created, leading to much simpler\napplication development, no defensive copying, and enabling advanced memoization\nand change detection techniques with simple logic. Persistent data presents\na mutative API which does not update the data in-place, but instead always\nyields new updated data.\nImmutable.js provides many Persistent Immutable data structures including:\nList, Stack, Map, OrderedMap, Set, OrderedSet and Record.\nThese data structures are highly efficient on modern JavaScript VMs by using\nstructural sharing via hash maps tries and vector tries as popularized\nby Clojure and Scala, minimizing the need to copy or cache data.\nImmutable.js also provides a lazy Seq, allowing efficient\nchaining of collection methods like map and filter without creating\nintermediate representations. Create some Seq with Range and Repeat.\nWant to hear more? Watch the presentation about Immutable.js:\n\nGetting started\nInstall immutable using npm.\nnpm install immutable\nThen require it into any module.\nconst { Map } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = map1.set('b', 50);\nmap1.get('b') + \" vs. \" + map2.get('b'); \/\/ 2 vs. 50\nBrowser\nImmutable.js has no dependencies, which makes it predictable to include in a Browser.\nIt's highly recommended to use a module bundler like webpack,\nrollup, or\nbrowserify. The immutable npm module works\nwithout any additional consideration. All examples throughout the documentation\nwill assume use of this kind of tool.\nAlternatively, Immutable.js may be directly included as a script tag. Download\nor link to a CDN such as CDNJS\nor jsDelivr.\nUse a script tag to directly add Immutable to the global scope:\n<script src=\"immutable.min.js\"><\/script>\n<script>\n  var map1 = Immutable.Map({ a: 1, b: 2, c: 3 });\n  var map2 = map1.set('b', 50);\n  map1.get('b'); \/\/ 2\n  map2.get('b'); \/\/ 50\n<\/script>\nOr use an AMD-style loader (such as RequireJS):\nrequire(['.\/immutable.min.js'], function (Immutable) {\n  var map1 = Immutable.Map({ a: 1, b: 2, c: 3 });\n  var map2 = map1.set('b', 50);\n  map1.get('b'); \/\/ 2\n  map2.get('b'); \/\/ 50\n});\nFlow & TypeScript\nUse these Immutable collections and sequences as you would use native\ncollections in your Flowtype or TypeScript programs while still taking\nadvantage of type generics, error detection, and auto-complete in your IDE.\nInstalling immutable via npm brings with it type definitions for Flow (v0.55.0 or higher)\nand TypeScript (v2.1.0 or higher), so you shouldn't need to do anything at all!\nUsing TypeScript with Immutable.js v4\nImmutable.js type definitions embrace ES2015. While Immutable.js itself supports\nlegacy browsers and environments, its type definitions require TypeScript's 2015\nlib. Include either \"target\": \"es2015\" or \"lib\": \"es2015\" in your\ntsconfig.json, or provide --target es2015 or --lib es2015 to the\ntsc command.\nconst { Map } = require(\"immutable\");\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = map1.set('b', 50);\nmap1.get('b') + \" vs. \" + map2.get('b'); \/\/ 2 vs. 50\nUsing TypeScript with Immutable.js v3 and earlier:\nPrevious versions of Immutable.js include a reference file which you can include\nvia relative path to the type definitions at the top of your file.\n\/\/\/<reference path='.\/node_modules\/immutable\/dist\/immutable.d.ts'\/>\nimport Immutable from require('immutable');\nvar map1: Immutable.Map<string, number>;\nmap1 = Immutable.Map({ a: 1, b: 2, c: 3 });\nvar map2 = map1.set('b', 50);\nmap1.get('b'); \/\/ 2\nmap2.get('b'); \/\/ 50\nThe case for Immutability\nMuch of what makes application development difficult is tracking mutation and\nmaintaining state. Developing with immutable data encourages you to think\ndifferently about how data flows through your application.\nSubscribing to data events throughout your application creates a huge overhead of\nbook-keeping which can hurt performance, sometimes dramatically, and creates\nopportunities for areas of your application to get out of sync with each other\ndue to easy to make programmer error. Since immutable data never changes,\nsubscribing to changes throughout the model is a dead-end and new data can only\never be passed from above.\nThis model of data flow aligns well with the architecture of React\nand especially well with an application designed using the ideas of Flux.\nWhen data is passed from above rather than being subscribed to, and you're only\ninterested in doing work when something has changed, you can use equality.\nImmutable collections should be treated as values rather than objects. While\nobjects represent some thing which could change over time, a value represents\nthe state of that thing at a particular instance of time. This principle is most\nimportant to understanding the appropriate use of immutable data. In order to\ntreat Immutable.js collections as values, it's important to use the\nImmutable.is() function or .equals() method to determine value equality\ninstead of the === operator which determines object reference identity.\nconst { Map } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = Map({ a: 1, b: 2, c: 3 });\nmap1.equals(map2); \/\/ true\nmap1 === map2; \/\/ false\nNote: As a performance optimization Immutable.js attempts to return the existing\ncollection when an operation would result in an identical collection, allowing\nfor using === reference equality to determine if something definitely has not\nchanged. This can be extremely useful when used within a memoization function\nwhich would prefer to re-run the function if a deeper equality check could\npotentially be more costly. The === equality check is also used internally by\nImmutable.is and .equals() as a performance optimization.\nconst { Map } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = map1.set('b', 2); \/\/ Set to same value\nmap1 === map2; \/\/ true\nIf an object is immutable, it can be \"copied\" simply by making another reference\nto it instead of copying the entire object. Because a reference is much smaller\nthan the object itself, this results in memory savings and a potential boost in\nexecution speed for programs which rely on copies (such as an undo-stack).\nconst { Map } = require('immutable');\nconst map = Map({ a: 1, b: 2, c: 3 });\nconst mapCopy = map; \/\/ Look, \"copies\" are free!\nJavaScript-first API\nWhile Immutable.js is inspired by Clojure, Scala, Haskell and other functional\nprogramming environments, it's designed to bring these powerful concepts to\nJavaScript, and therefore has an Object-Oriented API that closely mirrors that\nof ES2015 Array, Map, and Set.\nThe difference for the immutable collections is that methods which would mutate\nthe collection, like push, set, unshift or splice, instead return a new\nimmutable collection. Methods which return new arrays, like slice or concat,\ninstead return new immutable collections.\nconst { List } = require('immutable');\nconst list1 = List([ 1, 2 ]);\nconst list2 = list1.push(3, 4, 5);\nconst list3 = list2.unshift(0);\nconst list4 = list1.concat(list2, list3);\nassert.equal(list1.size, 2);\nassert.equal(list2.size, 5);\nassert.equal(list3.size, 6);\nassert.equal(list4.size, 13);\nassert.equal(list4.get(0), 1);\nAlmost all of the methods on Array will be found in similar form on\nImmutable.List, those of Map found on Immutable.Map, and those of Set\nfound on Immutable.Set, including collection operations like forEach()\nand map().\nconst { Map } = require('immutable');\nconst alpha = Map({ a: 1, b: 2, c: 3, d: 4 });\nalpha.map((v, k) => k.toUpperCase()).join();\n\/\/ 'A,B,C,D'\nConvert from raw JavaScript objects and arrays.\nDesigned to inter-operate with your existing JavaScript, Immutable.js\naccepts plain JavaScript Arrays and Objects anywhere a method expects a\nCollection.\nconst { Map, List } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3, d: 4 });\nconst map2 = Map({ c: 10, a: 20, t: 30 });\nconst obj = { d: 100, o: 200, g: 300 };\nconst map3 = map1.merge(map2, obj);\n\/\/ Map { a: 20, b: 2, c: 10, d: 100, t: 30, o: 200, g: 300 }\nconst list1 = List([ 1, 2, 3 ]);\nconst list2 = List([ 4, 5, 6 ]);\nconst array = [ 7, 8, 9 ];\nconst list3 = list1.concat(list2, array);\n\/\/ List [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\nThis is possible because Immutable.js can treat any JavaScript Array or Object\nas a Collection. You can take advantage of this in order to get sophisticated\ncollection methods on JavaScript Objects, which otherwise have a very sparse\nnative API. Because Seq evaluates lazily and does not cache intermediate\nresults, these operations can be extremely efficient.\nconst { Seq } = require('immutable');\nconst myObject = { a: 1, b: 2, c: 3 };\nSeq(myObject).map(x => x * x).toObject();\n\/\/ { a: 1, b: 4, c: 9 }\nKeep in mind, when using JS objects to construct Immutable Maps, that\nJavaScript Object properties are always strings, even if written in a quote-less\nshorthand, while Immutable Maps accept keys of any type.\nconst { fromJS } = require('immutable');\n\nconst obj = { 1: \"one\" };\nconsole.log(Object.keys(obj)); \/\/ [ \"1\" ]\nconsole.log(obj[\"1\"], obj[1]); \/\/ \"one\", \"one\"\n\nconst map = fromJS(obj);\nconsole.log(map.get(\"1\"), map.get(1)); \/\/ \"one\", undefined\nProperty access for JavaScript Objects first converts the key to a string, but\nsince Immutable Map keys can be of any type the argument to get() is\nnot altered.\nConverts back to raw JavaScript objects.\nAll Immutable.js Collections can be converted to plain JavaScript Arrays and\nObjects shallowly with toArray() and toObject() or deeply with toJS().\nAll Immutable Collections also implement toJSON() allowing them to be passed\nto JSON.stringify directly. They also respect the custom toJSON() methods of\nnested objects.\nconst { Map, List } = require('immutable');\nconst deep = Map({ a: 1, b: 2, c: List([ 3, 4, 5 ]) });\nconsole.log(deep.toObject()); \/\/ { a: 1, b: 2, c: List [ 3, 4, 5 ] }\nconsole.log(deep.toArray()); \/\/ [ 1, 2, List [ 3, 4, 5 ] ]\nconsole.log(deep.toJS()); \/\/ { a: 1, b: 2, c: [ 3, 4, 5 ] }\nJSON.stringify(deep); \/\/ '{\"a\":1,\"b\":2,\"c\":[3,4,5]}'\nEmbraces ES2015\nImmutable.js supports all JavaScript environments, including legacy\nbrowsers (even IE8). However it also takes advantage of features added to\nJavaScript in ES2015, the latest standard version of JavaScript, including\nIterators, Arrow Functions, Classes, and Modules. It's inspired\nby the native Map and Set collections added to ES2015.\nAll examples in the Documentation are presented in ES2015. To run in all\nbrowsers, they need to be translated to ES5.\n\/\/ ES2015\nconst mapped = foo.map(x => x * x);\n\/\/ ES5\nvar mapped = foo.map(function (x) { return x * x; });\nAll Immutable.js collections are Iterable, which allows them to be\nused anywhere an Iterable is expected, such as when spreading into an Array.\nconst { List } = require('immutable');\nconst aList = List([ 1, 2, 3 ]);\nconst anArray = [ 0, ...aList, 4, 5 ]; \/\/ [ 0, 1, 2, 3, 4, 5 ]\nNote: A Collection is always iterated in the same order, however that order may\nnot always be well defined, as is the case for the Map and Set.\nNested Structures\nThe collections in Immutable.js are intended to be nested, allowing for deep\ntrees of data, similar to JSON.\nconst { fromJS } = require('immutable');\nconst nested = fromJS({ a: { b: { c: [ 3, 4, 5 ] } } });\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5 ] } } }\nA few power-tools allow for reading and operating on nested data. The\nmost useful are mergeDeep, getIn, setIn, and updateIn, found on List,\nMap and OrderedMap.\nconst { fromJS } = require('immutable');\nconst nested = fromJS({ a: { b: { c: [ 3, 4, 5 ] } } });\n\nconst nested2 = nested.mergeDeep({ a: { b: { d: 6 } } });\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5 ], d: 6 } } }\n\nconsole.log(nested2.getIn([ 'a', 'b', 'd' ])); \/\/ 6\n\nconst nested3 = nested2.updateIn([ 'a', 'b', 'd' ], value => value + 1);\nconsole.log(nested3);\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5 ], d: 7 } } }\n\nconst nested4 = nested3.updateIn([ 'a', 'b', 'c' ], list => list.push(6));\n\/\/ Map { a: Map { b: Map { c: List [ 3, 4, 5, 6 ], d: 7 } } }\nEquality treats Collections as Values\nImmutable.js collections are treated as pure data values. Two immutable\ncollections are considered value equal (via .equals() or is()) if they\nrepresent the same collection of values. This differs from JavaScript's typical\nreference equal (via === or ==) for Objects and Arrays which only\ndetermines if two variables represent references to the same object instance.\nConsider the example below where two identical Map instances are not\nreference equal but are value equal.\n\/\/ First consider:\nconst obj1 = { a: 1, b: 2, c: 3 };\nconst obj2 = { a: 1, b: 2, c: 3 };\nobj1 !== obj2; \/\/ two different instances are always not equal with ===\n\nconst { Map, is } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = Map({ a: 1, b: 2, c: 3 });\nmap1 !== map2; \/\/ two different instances are not reference-equal\nmap1.equals(map2); \/\/ but are value-equal if they have the same values\nis(map1, map2); \/\/ alternatively can use the is() function\nValue equality allows Immutable.js collections to be used as keys in Maps or\nvalues in Sets, and retrieved with different but equivalent collections:\nconst { Map, Set } = require('immutable');\nconst map1 = Map({ a: 1, b: 2, c: 3 });\nconst map2 = Map({ a: 1, b: 2, c: 3 });\nconst set = Set().add(map1);\nset.has(map2); \/\/ true because these are value-equal\nNote: is() uses the same measure of equality as Object.is for scalar\nstrings and numbers, but uses value equality for Immutable collections,\ndetermining if both are immutable and all keys and values are equal\nusing the same measure of equality.\nPerformance tradeoffs\nWhile value equality is useful in many circumstances, it has different\nperformance characteristics than reference equality. Understanding these\ntradeoffs may help you decide which to use in each case, especially when used\nto memoize some operation.\nWhen comparing two collections, value equality may require considering every\nitem in each collection, on an O(N) time complexity. For large collections of\nvalues, this could become a costly operation. Though if the two are not equal\nand hardly similar, the inequality is determined very quickly. In contrast, when\ncomparing two collections with reference equality, only the initial references\nto memory need to be compared which is not based on the size of the collections,\nwhich has an O(1) time complexity. Checking reference equality is always very\nfast, however just because two collections are not reference-equal does not rule\nout the possibility that they may be value-equal.\nReturn self on no-op optimization\nWhen possible, Immutable.js avoids creating new objects for updates where no\nchange in value occurred, to allow for efficient reference equality checking\nto quickly determine if no change occurred.\nconst { Map } = require('immutable');\nconst originalMap = Map({ a: 1, b: 2, c: 3 });\nconst updatedMap = originalMap.set('b', 2);\nupdatedMap === originalMap; \/\/ No-op .set() returned the original reference.\nHowever updates which do result in a change will return a new reference. Each\nof these operations occur independently, so two similar updates will not return\nthe same reference:\nconst { Map } = require('immutable');\nconst originalMap = Map({ a: 1, b: 2, c: 3 });\nconst updatedMap = originalMap.set('b', 1000);\n\/\/ New instance, leaving the original immutable.\nupdatedMap !== originalMap;\nconst anotherUpdatedMap = originalMap.set('b', 1000);\n\/\/ Despite both the results of the same operation, each created a new reference.\nanotherUpdatedMap !== updatedMap;\n\/\/ However the two are value equal.\nanotherUpdatedMap.equals(updatedMap);\nBatching Mutations\n\nIf a tree falls in the woods, does it make a sound?\nIf a pure function mutates some local data in order to produce an immutable\nreturn value, is that ok?\n\u2014 Rich Hickey, Clojure\n\nApplying a mutation to create a new immutable object results in some overhead,\nwhich can add up to a minor performance penalty. If you need to apply a series\nof mutations locally before returning, Immutable.js gives you the ability to\ncreate a temporary mutable (transient) copy of a collection and apply a batch of\nmutations in a performant manner by using withMutations. In fact, this is\nexactly how  Immutable.js applies complex mutations itself.\nAs an example, building list2 results in the creation of 1, not 3, new\nimmutable Lists.\nconst { List } = require('immutable');\nconst list1 = List([ 1, 2, 3 ]);\nconst list2 = list1.withMutations(function (list) {\n  list.push(4).push(5).push(6);\n});\nassert.equal(list1.size, 3);\nassert.equal(list2.size, 6);\nNote: Immutable.js also provides asMutable and asImmutable, but only\nencourages their use when withMutations will not suffice. Use caution to not\nreturn a mutable copy, which could result in undesired behavior.\nImportant!: Only a select few methods can be used in withMutations including\nset, push and pop. These methods can be applied directly against a\npersistent data-structure where other methods like map, filter, sort,\nand splice will always return new immutable data-structures and never mutate\na mutable collection.\nLazy Seq\nSeq describes a lazy operation, allowing them to efficiently chain\nuse of all the higher-order collection methods (such as map and filter)\nby not creating intermediate collections.\nSeq is immutable \u2014 Once a Seq is created, it cannot be\nchanged, appended to, rearranged or otherwise modified. Instead, any mutative\nmethod called on a Seq will return a new Seq.\nSeq is lazy \u2014 Seq does as little work as necessary to respond to any\nmethod call. Values are often created during iteration, including implicit\niteration when reducing or converting to a concrete data structure such as\na List or JavaScript Array.\nFor example, the following performs no work, because the resulting\nSeq's values are never iterated:\nconst { Seq } = require('immutable');\nconst oddSquares = Seq([ 1, 2, 3, 4, 5, 6, 7, 8 ])\n  .filter(x => x % 2 !== 0)\n  .map(x => x * x);\nOnce the Seq is used, it performs only the work necessary. In this\nexample, no intermediate arrays are ever created, filter is called three\ntimes, and map is only called once:\noddSquares.get(1); \/\/ 9\nAny collection can be converted to a lazy Seq with Seq().\nconst { Map, Seq } = require('immutable');\nconst map = Map({ a: 1, b: 2, c: 3 });\nconst lazySeq = Seq(map);\nSeq allows for the efficient chaining of operations, allowing for the\nexpression of logic that can otherwise be very tedious:\nlazySeq\n  .flip()\n  .map(key => key.toUpperCase())\n  .flip();\n\/\/ Seq { A: 1, B: 2, C: 3 }\nAs well as expressing logic that would otherwise seem memory or time\nlimited, for example Range is a special kind of Lazy sequence.\nconst { Range } = require('immutable');\nRange(1, Infinity)\n  .skip(1000)\n  .map(n => -n)\n  .filter(n => n % 2 === 0)\n  .take(2)\n  .reduce((r, n) => r * n, 1);\n\/\/ 1006008\nDocumentation\nRead the docs and eat your vegetables.\nDocs are automatically generated from Immutable.d.ts.\nPlease contribute!\nAlso, don't miss the Wiki which\ncontains articles on specific topics. Can't find something? Open an issue.\nTesting\nIf you are using the Chai Assertion Library, Chai Immutable provides a set of assertions to use against Immutable.js collections.\nContribution\nUse Github issues for requests.\nWe actively welcome pull requests, learn how to contribute.\nChangelog\nChanges are tracked as Github releases.\nThanks\nPhil Bagwell, for his inspiration\nand research in persistent data structures.\nHugh Jackson, for providing the npm package\nname. If you're looking for his unsupported package, see this repository.\nLicense\nImmutable.js is MIT-licensed.\n","71":"\n\n\n\n\n\n\n\nExpressive HTTP middleware framework for node.js to make web applications and APIs more enjoyable to write. Koa's middleware stack flows in a stack-like manner, allowing you to perform actions downstream then filter and manipulate the response upstream.\nOnly methods that are common to nearly all HTTP servers are integrated directly into Koa's small ~570 SLOC codebase. This\nincludes things like content negotiation, normalization of node inconsistencies, redirection, and a few others.\nKoa is not bundled with any middleware.\nInstallation\nKoa requires node v7.6.0 or higher for ES2015 and async function support.\n$ npm install koa\n\nHello Koa\nconst Koa = require('koa');\nconst app = new Koa();\n\n\/\/ response\napp.use(ctx => {\n  ctx.body = 'Hello Koa';\n});\n\napp.listen(3000);\nGetting started\n\nKick-Off-Koa - An intro to Koa via a set of self-guided workshops.\nWorkshop - A workshop to learn the basics of Koa, Express' spiritual successor.\nIntroduction Screencast - An introduction to installing and getting started with Koa\n\nMiddleware\nKoa is a middleware framework that can take two different kinds of functions as middleware:\n\nasync function\ncommon function\n\nHere is an example of logger middleware with each of the different functions:\nasync functions (node v7.6+)\napp.use(async (ctx, next) => {\n  const start = Date.now();\n  await next();\n  const ms = Date.now() - start;\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n});\nCommon function\n\/\/ Middleware normally takes two parameters (ctx, next), ctx is the context for one request,\n\/\/ next is a function that is invoked to execute the downstream middleware. It returns a Promise with a then function for running code after completion.\n\napp.use((ctx, next) => {\n  const start = Date.now();\n  return next().then(() => {\n    const ms = Date.now() - start;\n    console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n  });\n});\nKoa v1.x Middleware Signature\nThe middleware signature changed between v1.x and v2.x.  The older signature is deprecated.\nOld signature middleware support will be removed in v3\nPlease see the Migration Guide for more information on upgrading from v1.x and\nusing v1.x middleware with v2.x.\nContext, Request and Response\nEach middleware receives a Koa Context object that encapsulates an incoming\nhttp message and the corresponding response to that message.  ctx is often used\nas the parameter name for the context object.\napp.use(async (ctx, next) => { await next(); });\nKoa provides a Request object as the request property of the Context.\nKoa's Request object provides helpful methods for working with\nhttp requests which delegate to an IncomingMessage\nfrom the node http module.\nHere is an example of checking that a requesting client supports xml.\napp.use(async (ctx, next) => {\n  ctx.assert(ctx.request.accepts('xml'), 406);\n  \/\/ equivalent to:\n  \/\/ if (!ctx.request.accepts('xml')) ctx.throw(406);\n  await next();\n});\nKoa provides a Response object as the response property of the Context.\nKoa's Response object provides helpful methods for working with\nhttp responses which delegate to a ServerResponse\n.\nKoa's pattern of delegating to Node's request and response objects rather than extending them\nprovides a cleaner interface and reduces conflicts between different middleware and with Node\nitself as well as providing better support for stream handling.  The IncomingMessage can still be\ndirectly accessed as the req property on the Context and ServerResponse can be directly\naccessed as the res property on the Context.\nHere is an example using Koa's Response object to stream a file as the response body.\napp.use(async (ctx, next) => {\n  await next();\n  ctx.response.type = 'xml';\n  ctx.response.body = fs.createReadStream('really_large.xml');\n});\nThe Context object also provides shortcuts for methods on its request and response.  In the prior\nexamples,  ctx.type can be used instead of ctx.response.type and ctx.accepts can be used\ninstead of ctx.request.accepts.\nFor more information on Request, Response and Context, see the Request API Reference,\nResponse API Reference and Context API Reference.\nKoa Application\nThe object created when executing new Koa() is known as the Koa application object.\nThe application object is Koa's interface with node's http server and handles the registration\nof middleware, dispatching to the middleware from http, default error handling, as well as\nconfiguration of the context, request and response objects.\nLearn more about the application object in the Application API Reference.\nDocumentation\n\nUsage Guide\nError Handling\nKoa for Express Users\nFAQ\nAPI documentation\n\nTroubleshooting\nCheck the Troubleshooting Guide or Debugging Koa in\nthe general Koa guide.\nRunning tests\n$ npm test\n\nReporting vulnerabilities\nTo report a security vulnerability, please do not open an issue, as this notifies attackers of the vulnerability. Instead, please email dead_horse, jonathanong, and niftylettuce to disclose.\nAuthors\nSee AUTHORS.\nCommunity\n\nBadgeboard and list of official modules\nExamples\nMiddleware list\nWiki\nReddit Community\nMailing list\n\u4e2d\u6587\u6587\u6863 v1.x\n\u4e2d\u6587\u6587\u6863 v2.x\n#koajs on freenode\n\nJob Board\nLooking for a career upgrade?\n\n\n\nBackers\nSupport us with a monthly donation and help us continue our activities.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n","72":"\nVideo.js - HTML5 Video Player\n\n\n\n\n\n\nVideo.js is a web video player built from the ground up for an HTML5 world. It supports HTML5 and Flash video, as well as YouTube and Vimeo (through plugins). It supports video playback on desktops and mobile devices. This project was started mid 2010, and the player is now used on over 50,000 100,000 200,000 400,000 websites.\n\nTable of Contents\n\nQuick Start\nContributing\nCode of Conduct\nLicense\n\nQuick Start\nThanks to the awesome folks over at Fastly, there's a free, CDN hosted version of Video.js that anyone can use. Add these tags to your document's <head>:\n<link href=\"\/\/vjs.zencdn.net\/7.8.2\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"\/\/vjs.zencdn.net\/7.8.2\/video.min.js\"><\/script>\n\nFor the latest version of video.js and URLs to use, check out the Getting Started page on our website.\n\nVideo.js version 7 (and newer) CDN builds do not send any data to Google Analytics.\nIn older versions of Video.js (6 and earlier), in the vjs.zencdn.net CDN-hosted versions we include a stripped down Google Analytics pixel that tracks a random sampling (currently 1%) of players loaded from the CDN. This allows us to see (roughly) what browsers are in use in the wild, along with other useful metrics such as OS and device. If you'd like to disable analytics, you can simply include the following global before including Video.js via the free CDN:\n<script>window.HELP_IMPROVE_VIDEOJS = false;<\/script>\nAlternatively, you can include Video.js by getting it from npm, downloading from GitHub releases or by including it via unpkg or another JavaScript CDN like CDNjs. These releases do not include Google Analytics tracking at all.\n<!-- unpkg : use the latest version of Video.js -->\n<link href=\"https:\/\/unpkg.com\/video.js\/dist\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https:\/\/unpkg.com\/video.js\/dist\/video.min.js\"><\/script>\n\n<!-- unpkg : use a specific version of Video.js (change the version numbers as necessary) -->\n<link href=\"https:\/\/unpkg.com\/video.js@7.8.2\/dist\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https:\/\/unpkg.com\/video.js@7.8.2\/dist\/video.min.js\"><\/script>\n\n<!-- cdnjs : use a specific version of Video.js (change the version numbers as necessary) -->\n<link href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/video.js\/7.8.1\/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/video.js\/7.8.1\/video.min.js\"><\/script>\nNext, using Video.js is as simple as creating a <video> element, but with an additional data-setup attribute. At a minimum, this attribute must have a value of '{}', but it can include any Video.js options - just make sure it contains valid JSON!\n<video\n    id=\"my-player\"\n    class=\"video-js\"\n    controls\n    preload=\"auto\"\n    poster=\"\/\/vjs.zencdn.net\/v\/oceans.png\"\n    data-setup='{}'>\n  <source src=\"\/\/vjs.zencdn.net\/v\/oceans.mp4\" type=\"video\/mp4\"><\/source>\n  <source src=\"\/\/vjs.zencdn.net\/v\/oceans.webm\" type=\"video\/webm\"><\/source>\n  <source src=\"\/\/vjs.zencdn.net\/v\/oceans.ogv\" type=\"video\/ogg\"><\/source>\n  <p class=\"vjs-no-js\">\n    To view this video please enable JavaScript, and consider upgrading to a\n    web browser that\n    <a href=\"https:\/\/videojs.com\/html5-video-support\/\" target=\"_blank\">\n      supports HTML5 video\n    <\/a>\n  <\/p>\n<\/video>\nWhen the page loads, Video.js will find this element and automatically setup a player in its place.\nIf you don't want to use automatic setup, you can leave off the data-setup attribute and initialize a <video> element manually using the videojs function:\nvar player = videojs('my-player');\nThe videojs function also accepts an options object and a callback to be invoked\nwhen the player is ready:\nvar options = {};\n\nvar player = videojs('my-player', options, function onPlayerReady() {\n  videojs.log('Your player is ready!');\n\n  \/\/ In this context, `this` is the player that was created by Video.js.\n  this.play();\n\n  \/\/ How about an event listener?\n  this.on('ended', function() {\n    videojs.log('Awww...over so soon?!');\n  });\n});\nIf you're ready to dive in, the Getting Started page and documentation are the best places to go for more information. If you get stuck, head over to our Slack channel!\nContributing\nVideo.js is a free and open source library, and we appreciate any help you're willing to give - whether it's fixing bugs, improving documentation, or suggesting new features. Check out the contributing guide for more!\nVideo.js uses BrowserStack for compatibility testing.\nCode of Conduct\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\nLicense\nVideo.js is licensed under the Apache License, Version 2.0.\n","73":"clipboard.js\n\n\n\nModern copy to clipboard. No Flash. Just 3kb gzipped.\n\n\nWhy\nCopying text to the clipboard shouldn't be hard. It shouldn't require dozens of steps to configure or hundreds of KBs to load. But most of all, it shouldn't depend on Flash or any bloated framework.\nThat's why clipboard.js exists.\nInstall\nYou can get it on npm.\nnpm install clipboard --save\n\nOr if you're not into package management, just download a ZIP file.\nSetup\nFirst, include the script located on the dist folder or load it from a third-party CDN provider.\n<script src=\"dist\/clipboard.min.js\"><\/script>\nNow, you need to instantiate it by passing a DOM selector, HTML element, or list of HTML elements.\nnew ClipboardJS('.btn');\nInternally, we need to fetch all elements that matches with your selector and attach event listeners for each one. But guess what? If you have hundreds of matches, this operation can consume a lot of memory.\nFor this reason we use event delegation which replaces multiple event listeners with just a single listener. After all, #perfmatters.\nUsage\nWe're living a declarative renaissance, that's why we decided to take advantage of HTML5 data attributes for better usability.\nCopy text from another element\nA pretty common use case is to copy content from another element. You can do that by adding a data-clipboard-target attribute in your trigger element.\nThe value you include on this attribute needs to match another's element selector.\n\n<!-- Target -->\n<input id=\"foo\" value=\"https:\/\/github.com\/zenorocha\/clipboard.js.git\">\n\n<!-- Trigger -->\n<button class=\"btn\" data-clipboard-target=\"#foo\">\n    <img src=\"assets\/clippy.svg\" alt=\"Copy to clipboard\">\n<\/button>\nCut text from another element\nAdditionally, you can define a data-clipboard-action attribute to specify if you want to either copy or cut content.\nIf you omit this attribute, copy will be used by default.\n\n<!-- Target -->\n<textarea id=\"bar\">Mussum ipsum cacilds...<\/textarea>\n\n<!-- Trigger -->\n<button class=\"btn\" data-clipboard-action=\"cut\" data-clipboard-target=\"#bar\">\n    Cut to clipboard\n<\/button>\nAs you may expect, the cut action only works on <input> or <textarea> elements.\nCopy text from attribute\nTruth is, you don't even need another element to copy its content from. You can just include a data-clipboard-text attribute in your trigger element.\n\n<!-- Trigger -->\n<button class=\"btn\" data-clipboard-text=\"Just because you can doesn't mean you should \u2014 clipboard.js\">\n    Copy to clipboard\n<\/button>\nEvents\nThere are cases where you'd like to show some user feedback or capture what has been selected after a copy\/cut operation.\nThat's why we fire custom events such as success and error for you to listen and implement your custom logic.\nvar clipboard = new ClipboardJS('.btn');\n\nclipboard.on('success', function(e) {\n    console.info('Action:', e.action);\n    console.info('Text:', e.text);\n    console.info('Trigger:', e.trigger);\n\n    e.clearSelection();\n});\n\nclipboard.on('error', function(e) {\n    console.error('Action:', e.action);\n    console.error('Trigger:', e.trigger);\n});\nFor a live demonstration, go to this site and open your console.\nTooltips\nEach application has different design needs, that's why clipboard.js does not include any CSS or built-in tooltip solution.\nThe tooltips you see on the demo site were built using GitHub's Primer. You may want to check that out if you're looking for a similar look and feel.\nAdvanced Options\nIf you don't want to modify your HTML, there's a pretty handy imperative API for you to use. All you need to do is declare a function, do your thing, and return a value.\nFor instance, if you want to dynamically set a target, you'll need to return a Node.\nnew ClipboardJS('.btn', {\n    target: function(trigger) {\n        return trigger.nextElementSibling;\n    }\n});\nIf you want to dynamically set a text, you'll return a String.\nnew ClipboardJS('.btn', {\n    text: function(trigger) {\n        return trigger.getAttribute('aria-label');\n    }\n});\nFor use in Bootstrap Modals or with any other library that changes the focus you'll want to set the focused element as the container value.\nnew ClipboardJS('.btn', {\n    container: document.getElementById('modal')\n});\nAlso, if you are working with single page apps, you may want to manage the lifecycle of the DOM more precisely. Here's how you clean up the events and objects that we create.\nvar clipboard = new ClipboardJS('.btn');\nclipboard.destroy();\nBrowser Support\nThis library relies on both Selection and execCommand APIs. The first one is supported by all browsers while the second one is supported in the following browsers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n42+ \u2714\n12+ \u2714\n41+ \u2714\n9+ \u2714\n29+ \u2714\n10+ \u2714\n\n\n\nThe good news is that clipboard.js gracefully degrades if you need to support older browsers. All you have to do is show a tooltip saying Copied! when success event is called and Press Ctrl+C to copy when error event is called because the text is already selected.\nYou can also check if clipboard.js is supported or not by running ClipboardJS.isSupported(), that way you can hide copy\/cut buttons from the UI.\nBonus\nA browser extension that adds a \"copy to clipboard\" button to every code block on GitHub, MDN, Gist, StackOverflow, StackExchange, npm, and even Medium.\nInstall for Chrome and Firefox.\nLicense\nMIT License \u00a9 Zeno Rocha\n","74":"\nLeaflet is the leading open-source JavaScript library for mobile-friendly interactive maps.\nWeighing just about 39 KB of gzipped JS plus 4 KB of gzipped CSS code, it has all the mapping features most developers ever need.\nLeaflet is designed with simplicity, performance and usability in mind.\nIt works efficiently across all major desktop and mobile platforms out of the box,\ntaking advantage of HTML5 and CSS3 on modern browsers while being accessible on older ones too.\nIt can be extended with a huge amount of plugins,\nhas a beautiful, easy to use and well-documented API\nand a simple, readable source code that is a joy to contribute to.\nFor more info, docs and tutorials, check out the official website.\nFor Leaflet downloads (including the built master version), check out the download page.\nWe're happy to meet new contributors.\nIf you want to get involved with Leaflet development, check out the contribution guide.\nLet's make the best mapping library that will ever exist,\nand push the limits of what's possible with online maps!\n\n","75":"\n\n  The Ultimate Open Source WebChat Platform\n\n\n\n\n\n\n\n\n\n\nNEW! Rocket.Chat Moving to a Single Codebase\nCommunity\nMobile Apps\nDesktop Apps\nDeployment\n\nSnaps\nDigitalOcean\nRocketChatLauncher\nLayershift\nYunohost.org\nIndieHosters\nUbuntu 16.04\nCloudron.io\nHeroku\nHelm Kubernetes\nScalingo\nSloppy.io\nDocker\nAnsible\nRaspberry Pi 4\nKoozali SME\nUbuntu VPS\nD2C.io\nSyncloud.org\n\n\nAbout Rocket.Chat\n\nIn the News\nFeatures\nRoadmap\nHow it all started\nAwards\nIssues\nStack Overflow\nIntegrations\nDocumentation\nLicense\n\n\nDevelopment\nQuick Start\nBranching Model\nTranslations\nHow to Contribute\nCredits\nHelp Wanted\nDonate\n\nMoving to a Single Codebase\nRocket.Chat is moving to a single codebase. Get to know the reasons and how the community will benefit from it. Read the details.\nHelp Wanted\nAt Rocket.Chat, our community drives everything we do. The Rocket.Chat team is expanding, and we know no better place to find qualified new team members than right here - in our GitHub  community.\nIf you are passionate about our project, want to work with a world-leading open source team, and enjoy working remotely at a location of your choice, then we want to talk to you!\nGet to know more about us and explore current openings at https:\/\/jobs.rocket.chat\/\"\nCommunity\nJoin thousands of members worldwide 24\/7 in our community server.\n for help from our community with general Rocket.Chat questions.\n for developers needing help from the community to developing new features.\nYou can also join the conversation on Twitter and Facebook.\nShare your story\nWe\u2019d love to hear about your experience and potentially feature it on our Blog.\nSubscribe for Updates\nOnce a month our marketing team releases an email update with news about product releases, company related topics, events and use cases. Sign Up!\nDesktop Apps\nDownload the Native Cross-Platform Desktop Application at Rocket.Chat.Electron\nMobile Apps\n  \nDeployment\nInstant Server Installation with Snaps\nInstall Rocket.Chat in seconds on Linux (Ubuntu and others) with:\nsudo snap install rocketchat-server\n\n\nInstalling snaps is very quick. By running that command you have your full Rocket.Chat server up and running. Snaps are secure. They are isolated with all of their dependencies. Snaps also auto-update when we release new versions.\nOur snap features a built-in reverse proxy that can request and maintain free Let's Encrypt SSL certificates. You can go from zero to a public-facing SSL-secured Rocket.Chat server in less than 5 minutes.\nFind out more information about our snaps here.\nDigitalOcean droplet\nDeploy to a DigitalOcean droplet with our one-click install listing from the DigitalOcean Marketplace.\n\nLayershift\nInstantly deploy your Rocket.Chat server for free on next generation auto-scaling PaaS.\n\nPainless SSL. Automatically scale your server cluster based on usage demand.\nYunohost.org\nHost your own Rocket.Chat server in a few seconds.\n\nIndieHosters\nGet your Rocket.Chat instance hosted in an \"as a Service\" style. You register and we manage it for you! (updates, backup...).\n\nCloudron.io\nInstall Rocket.Chat on Cloudron Smartserver:\n\nHeroku\nHost your own Rocket.Chat server for FREE with One-Click Deploy.\n\nHelm Kubernetes\nDeploy on Kubernetes using the official helm chart.\nScalingo\nDeploy your own Rocket.Chat server instantly on Scalingo.\n\nSloppy.io\nHost your docker container at sloppy.io. Get an account and use the quickstarter.\nDocker\nDeploy with docker compose\n\nOR Use the automated build image of our most recent release\ndocker pull rocketchat\/rocket.chat:latest\n\nOR select a specific release (details of releases available):\ndocker pull rocketchat\/rocket.chat:vX.X.X\n\nOR our official docker registry image, containing recent stable release build approved by Docker:\ndocker pull rocket.chat\n\nAnsible\nAutomated production-grade deployment in minutes, for RHEL \/ CentOS 7 or Ubuntu 14.04 LTS \/ 15.04.\n\nRaspberry Pi 4\nRun Rocket.Chat on this world famous $35 quad-core server.\n\nKoozali SME\nAdd Rocket.Chat to this world famous time tested small enterprise server today.\n\nUbuntu VPS\nFollow these deployment instructions.\nD2C.io\nDeploy Rocket.Chat stack to your server with D2C. Scale with a single click, check live logs and metrics:\n\nSyncloud.org\nRun Rocket.Chat on your easy to use personal device.\n\nAbout Rocket.Chat\nRocket.Chat is a Web Chat Server, developed in JavaScript, using the Meteor full stack framework.\nIt is a great solution for communities and companies wanting to privately host their own chat service or for developers looking forward to build and evolve their own chat platforms.\nIn the News\nWired\n\nOpen Sourcers Race to Build Better Versions of Slack\n\nHacker News\n\nYes, we made it to the #1\n\nProduct Hunt\n\nYour own open source Slack-like chat\n\nJavaScript Weekly\n\nAn open source Web based, channel based chat system (a la Slack) built using Meteor, the full stack JavaScript development platform.\n\nOpen Source China\n\nRocket.Chat \u662f\u7279\u6027\u6700\u4e30\u5bcc\u7684 Slack \u5f00\u6e90\u66ff\u4ee3\u54c1\u4e4b\u4e00\u3002 \u4e3b\u8981\u529f\u80fd\uff1a\u7fa4\u7ec4\u804a\u5929\uff0c\u76f4\u63a5\u901a\u4fe1\uff0c\u79c1\u804a\u7fa4\uff0c\u684c\u9762\u901a\u77e5\uff0c\u5a92\u4f53\u5d4c\u5165\uff0c\u94fe\u63a5\u9884\u89c8\uff0c\u6587\u4ef6\u4e0a\u4f20\uff0c\u8bed\u97f3\/\u89c6\u9891 \u804a\u5929\uff0c\u622a\u56fe\u7b49\u7b49\u3002\n\nwwwhatsnew.com\n\nPara los programadores que quieran ofrecer un chat en su web\n\nclasesdeperiodismo.com\n\nUn chat de c\u00f3digo abierto que puedes a\u00f1adir a la web\n\nsnowulf.com\n\nWhy Slack when you can Rocket.chat?\n\nliminality.xyz\n\nSelf-hosted alternatives to popular cloud services\n\nFeatures\n\nBYOS (Bring Your Own Server)\nMultiple Rooms\nDirect Messages\nPrivate Groups\nPublic Channels\nDesktop Notifications\nMentions\nAvatars\nMarkdown\nEmojis\nCustom Emojis\nReactions\nOne touch Geolocation\nTeX Math Rendering - inline math typesetting\nMedia Embeds\nLink Previews\nSent Message Edit and Deletion\nTranscripts \/ History\nFile Upload \/ Sharing\nScalable file sharing - S3 uploads with CDN downloads\nFull text search\nGlobal search (from all channels\/rooms at once)\nLive chat \/ Messaging call center\nLDAP Authentication\nCAS 1.0, 2.0 support for educational institutions and hosting providers worldwide\nSupport for Okta SSO through SAML v2\nI18n - Supports 22 Languages\nHubot Friendly\n(Beta) Face to Face Video Conferencing (aka WebRTC )\n(Beta) Multi-users Video Group Chat\n(Beta) Jitsi integration\nAudio calls\nMulti-users Audio Conference\nScreen sharing\nDrupal 7.x and 8.x Plug-in (both stable and development flavours) (download  and source code )\nXMPP bridge (try it)\nREST APIs\nRemote Video Monitoring\nNative real-time APIs for Microsoft C#, Visual Basic, F# and other .NET supported languages (Get it!)\nAPI access from Perl and Java  (community contributions)\nChat-ops powered by Hubot: scalable horizontal app integration (early access)\nMassively scalable hosting and provisioning (beta testing now)\nNative Cross-Platform Desktop Application Windows, macOS, or Linux\nMobile app for iPhone, iPad, and iPod touch Download on App Store\nMobile app for Android phone, tablet, and TV stick Available now on Google Play\nAvailable on Cloudron Store\n\nRoadmap\nTo see an up to date view of what we have planned, view our milestones.\nHow it all started\nRead about how it all started.\nAwards\n\n\n\nIssues\nGitHub Issues are used to track bugs and tasks on the roadmap.\nFeature Requests\nRocketChat\/feature-requests is used to track Rocket.Chat feature requests and discussions. Click here to open a new feature request.\nFeature Request Forums stores the historical archives of old feature requests (up to 2018).\nStack Overflow\nPlease use the Stack Overflow TAG\nIntegrations\nHubot\nThe docker image is ready.\nEveryone can start hacking the adapter code or launch his\/her own bot within a few minutes now.\nPlease head over to the Hubot Integration Project for more information.\nChat-ops integrations powered by Hubot\nIntegrate your application with fly-in panels today! Early access is available for developers.\n\nMany, many, many more to come!\nWe are developing the APIs based on the competition, so stay tuned and you will see a lot happening here.\nDocumentation\nCheck out Rocket.Chat documentation.\nLicense\nNote that Rocket.Chat is distributed under the MIT License.\nDevelopment\nQuick start for code developers\nPrerequisites:\n\nGit\nMeteor\n\n\nMeteor automatically installs a hidden NodeJS v12 and MongoDB v4.2 to be used when you run your app in development mode using the meteor command.\n\nNow just clone and start the app:\ngit clone https:\/\/github.com\/RocketChat\/Rocket.Chat.git\ncd Rocket.Chat\nmeteor npm install\nmeteor npm start\nFor more detailed step-by-step, see our quick start for developers docs.\nTo debug the server part, use meteor debugging. You should use Chrome for best debugging experience:\nmeteor debug\nYou'll find a nodejs icon in the developer console.\nIf you are not a developer and just want to run the server - see deployment methods.\nBranching Model\nSee Branches and Releases.\nIt is based on Gitflow Workflow, reference section below is derived from Vincent Driessen at nvie.\nSee also this Git Workflows Comparison for more details.\nTranslations\nWe are experimenting with Lingohub.\nIf you want to help, send an email to support at rocket.chat to be invited to the translation project.\nHow to Contribute\nAlready a JavaScript developer? Familiar with Meteor? Pick an issue, push a PR and instantly become a member of Rocket.Chat's international contributors' community. For more information, check out our Contributing Guide and our Official Documentation for Contributors.\nA lot of work has already gone into Rocket.Chat, but we have much bigger plans for it!\nContributor License Agreement\nPlease review and sign our CLA at https:\/\/cla-assistant.io\/RocketChat\/Rocket.Chat\nCredits\nThanks to our core team\nAaron Ogle,\nBradley Hilton,\nDiego Sampaio,\nGabriel Engel,\nMarcelo Schmidt,\nRodrigo Nascimento,\nSing Li,\nand hundreds of awesome contributors.\n\nEmoji provided graciously by JoyPixels\n\nTesting with BrowserStack\n\nTranslations done with LingoHub\nDonate\nRocket.Chat will be free forever, but you can help us speed up the development!\n\nBountySource\n","76":"\n\n\n\n\n\n\n\nAwesome React Native is an awesome style list that curates the best React Native libraries,\ntools, tutorials, articles and more. PRs are welcome!\n\n\n\nDon't miss out! Subscribe to our weekly newsletter\n\n\n\n\nBuzzing\n\n\n\n\n\n        React Native Authentication in Depth\n        \n\n\n\n\n\n        Create React Native App\n        \n\n\n\n\n\n            Better List Views\n        \n\n\nHave something that belongs under \"Buzzing\"? drop me a line:\ndotan-at-paracode.com.\nInstabug\nUnderstand How Your React-Native App is Doing with Real-Time Contextual Insights From Your Users\n\n\nCatch bugs as soon as they happen and know exactly why a crash occurred. Instabug's SDK gives development and product teams all the logs they need to fix bugs, crashes, and other issues in minutes instead of days. Instabug automatically attaches screenshots, device details, network logs, repro steps, and tons of other critical insights needed to resolve issues and prioritize product backlogs. It only takes a line of code to integrate and accelerate your workflows by seamlessly integrating with third-party tools like Github, Jira, Slack, Zendesk, and much more. Instabug is offering awesome-reactnative community a 3 months free trial. Get Started Now!\n\nCategories\n\nBuzzing\n\nInstabug\n\n\nCategories\n\nConferences\n\nChain React - Portland, OR USA\nReact Native EU - Wroclaw, Poland\nReact Alicante - Alicante, Spain\nReactNext - Tel Aviv, Israel\nReact Berlin - Berlin, Germany\nApp.js Conf - Krakow, Poland\nChain React - Portland, OR USA\nReact Native EU - Wroclaw, Poland\nReact Berlin - Berlin, Germany\nReactEurope - Paris, France\n\n\nArticles\n\nReference\nHowtos\nAssorted\nContinuous Integration\nInternals\n\n\nComponents\n\nUI\nNavigation\n\nNavigation\/Routing Articles\nNavigation Demos\n\n\nDeep Linking\nText & Rich Content\nAnalytics\nUtils & Infra\nForms\nGeolocation\nInternationalization\nBuild & Development\nStyling\nSystem\nWeb\nMedia\nStorage\nBackend\nIntegrations\nMonetization\nAnimation\nExtension\nOther Platforms\n\n\nUtilities\nSeeds\nLibraries\nOpen Source Apps\nFrameworks\nTutorials\nBooks\nVideos\n\nTalks\nTraining & tutorials\n\n\nBlogs\nNewsletters\nReleases\n\n\n\nMany thanks to everyone on the contributor\nlist\\:)\nConferences\nConferences dedicated to React Native specifically. A listing of React\ngeneral conferences can be found on the ReactJS\nsite.\nChain React - Portland, OR USA\nhttp:\/\/chainreactconf.com\nWorkshops - July 11th, 2018\\\nConference - July 12-13th, 2018\nReact Native EU - Wroclaw, Poland\nhttp:\/\/react-native.eu\/\nWorkshops - September 3-4th, 2018\\\nConference - September 5-6th, 2018\nReact Alicante - Alicante, Spain\nhttp:\/\/reactalicante.es\/\nWorkshops - September 13th, 2018\\\nConference - September 14-15th, 2018\nReactNext - Tel Aviv, Israel\nhttps:\/\/react-next.com\/\nConference - November 4th, 2018\nApp.js Conf - Krakow, Poland\nhttps:\/\/appjs.co\/\nConference - April 4th, 2019\nWorkshops - April 5th, 2019\nChain React - Portland, OR USA\nhttps:\/\/infinite.red\/ChainReactConf\nWorkshops - July 10th, 2019\nConference - July 11th-12th, 2019\nReact Native EU - Wroclaw, Poland\nhttps:\/\/react-native.eu\/\nWorkshops - September 4th, 2019\nConference - September 5th-6th, 2019\nReact Berlin - Berlin, Germany\nhttps:\/\/reactday.berlin\/\nWorkshops - December 4th-5th, 2019\nConference - December 6th, 2019\nReactEurope - Paris, France\nhttps:\/\/www.react-europe.org\/\nConference - May 14th-15, 2020\nWorkshops - May 12th-13th, 2020\nArticles\nContent published on the Web.\nReference\n\nReact Native Styling Cheatsheet \u26052679\n\nHowtos\n\nHow to add Firebase Auth with React Native \u26054\nHow to get started with Cloud Firestore on React Native\nHow to upgrade React Navigation 1.x to 2.x\nHow to use React Native Navigation v2 with Redux and Google Analytics\nReact-Navigation Drawer\nGetting Started with React Native Development on Windows\nGetting Started with React Native Development for Windows\nBlueprint to becoming a React Native Developer\nHow to Use the ListView Component\nHow to upload photo\/file in react-native\nPreview your Android & iOS React Native apps on your Github Pull Request\nChange splash screen in React Native Android app\nRemote Push Notifications with OneSignal\nRelease React Native App to Android Play Store\nReact Native & Apple TV today\nRecord and Upload Videos with React Native\nHow to Setup your First React Native app\nUsing React Native With TypeScript\nHow To Build a News Reader App with React Native and NewsAPI\nHow to Build a Real Time Logo Detection App with React Native\nBuild a Chatbot with Dialogflow and React Native\nHow To Build Your First VR App with ViroReact and React Native\nReact Hooks Basics\u2014 Building a React Native App with React Hooks\nHow to Build a Web App with React Native\nBuilding a React Native Mobile App with AWS Amplify and Expo\nUser Authentication with Amplify in a React Native and Expo app\nHow to build an Email Authentication app with Firebase, Firestore and React Native\nHow to Gracefully Use Environment Variables in a React Native App\nHow to build a xylophone app with Audio API, React Native, and Expo\nHow To Use WebViews in a React Native App\n\nAssorted\n\nVersioning React Native Application in elegant way (cross-platformely) \u260510\nBest Practices for Building a Large Scale React Application\nReact Native - Nic or Not App\nReact and React Native State Museum\nTop 15 React Native libraries that I use in my apps\nBuilding 3 React Native Apps in One Summer\nReact Native: Bringing modern web techniques to mobile\nFirst impressions using React Native\nWrapping Cocoapods for React Native\nReact Native: Initial Thoughts (opinion)\nA Dynamic Crazy Native Mobile Future Powered by Javascript\nReactNative NES & More\nReact Native Installation and Setup\nDiary of Building an iOS App with React Native\nReflecting on React Native development\nReact-Native layout examples\nReact Native in Production - notes from Clay Allsop\nAn iOS Developer on React Native\nReact Native and WebRTC\nHow to bridge a Swift view\nHow to select the right React Native database\nBuilding a Native SoundCloud Android app with Redux - discussing redux, code reuse and performance on Android.\nReact Native Twitter exploding heart - hardcore animations with Animation and ReactART\nUsing AI to discover UI components - fun image processing \/ AI assisted process to discover and generate React Native UI\nWriting Android Components\nUnit Testing React Native with Mocha and Enzyme\nReact Native's Layout Animation is Awesome\nAvoiding the Keyboard\nHow To Use OpenCV In React Native For Image Processing\nUsing Styled Components with React Native\nCreate a React Native Image Recognition App with Google Vision API\nA comprehensive guide on building offline React Native apps with AsyncStorage\nBuild a Chat App with Firebase and React Native\nBuilding Stylistic UIs with Emotion-JS for React Native\nGetting Started with Firestore and React Native\nReact Native: Native Modules made for React developers - on the developer experience with 3rd-party libraries for RN 0.60+\n\nContinuous Integration\n\nDistributing beta builds with Fastlane on Android and iOS\nDeploying a React Native App with Fastlane\nContinuous Integration for React Native Apps With Fastlane and Bitrise (iOS)\nHow to automate Android build process on Bitrise CI\nfastlane for React Native iOS & Android app DevOps\nThe simplest way to automate delivery of your React Native Application\n21 Useful Open Source Packages for React Native\n\nInternals\n\nPerformance\nReact Native Debugger Internals\nDirty-up and execute top-down - @vjeux on React's optimizations for background color, layout, and more\nOptimizing React Native\nDiving into React Native Performance\nWait\u2026 What Happens When my React Native Application Starts?\u200a\u2014\u200aAn In-depth Look Inside React Native\n\nComponents\nComponents and native modules.\nUI\n\n\nlottie-react-native \u260510415 - A mobile library for Android and iOS that parses Adobe After Effects animations exported as JSON with bodymovin and renders them natively on mobile!\n\n\nreact-native-vector-icons \u26059985 - Customizable Icons for React Native with support for NavBar\/TabBar, image source and full styling. Choose from 3000+ bundled icons or use your own.\n\n\nreact-native-maps \u26058388 - React Native Map components for iOS + Android\n\n\nreact-native-swiper \u26056955 - The best Swiper component for React Native.\n\n\nreact-native-gifted-chat \u26056546 - The most complete chat UI for React Native (formerly known as Gifted Messenger)\n\n\nreact-native-scrollable-tab-view \u26055664 - A scrollable tab-view for React Native\n\n\nreact-native-image-picker \u26054709 - A React Native module that allows you to use the native UIImagePickerController UI to select a photo from the device library or directly from the camera.\n\n\nreact-native-material-kit \u26054124 - Bringing Material Design to React Native\n\n\nreact-native-snap-carousel \u26053959 - Swiper component for React Native with previews, multiple layouts, parallax images, performant handling of huge numbers of items, and RTL support\n\n\nreact-native-calendars \u26053402 - React Native Calendar Components \ud83d\udcc6\n\n\nreact-native-ui-kitten \u26053140 - Customizable and reusable react-native component kit\n\n\nreact-native-svg \u26052982 - SVG library that works on both iOS & Android\n\n\nreact-native-image-crop-picker \u26052736 - iOS\/Android image picker with support for multiple images and cropping\n\n\nreact-native-splash-screen \u26052663 - A splash screen for react-native, hide when application loaded, it works on iOS and Android.\n\n\nreact-native-material-ui \u26052536 - Highly customizable material design components for React Native\n\n\nreact-native-app-intro \u26052433 - A React Native parallax effect app intro\n\n\nreact-native-drawer \u26052276 - React Native Drawer\n\n\nreact-native-typography \u26052260 Pixel\u2013perfect, native\u2013looking typographic styles for React Native\n\n\nreact-native-fast-image \u26052240 - FastImage, performant React Native image component.\n\n\nreact-native-paper \u26052218 - Material design for React Native\n\n\nreact-native-swipeout \u26052194 - iOS-style swipeout buttons behind component\n\n\nreact-native-blur \u26052172 - React Native Blur component\n\n\nreact-native-progress \u26052069 - Progress indicators and spinners for React Native using ReactART.\n\n\nreact-native-textinput-effects \u26052062 - Text inputs with custom label and icon animations for iOS and Android. Built by react native and inspired by Codrops.\n\n\nreact-native-modalbox \u26052043 - A component for react-native\n\n\nreact-native-lightbox \u26051917 - A very Slick and modern mobile lightbox implementation\n\n\nreact-native-action-button \u26051762 - A customizable Float Button Component for React Native\n\n\ngl-react-native \u26051750 - Use OpenGL for performant effects on images and videos\n\n\nreact-native-modal \u26051728 - An enhanced, animated and customizable react-native modal\n\n\nnachos-ui \u26051684 - NACHOS UI kit for React Native. Pick from a bunch of pre-coded UI components ready for your next kick-ass app in JavaScript or React.\n\n\nreact-native-mapbox-gl \u26051663 - A Mapbox GL react native module for creating custom maps\n\n\nreact-native-foldview \u26051616 - Animated FoldingCell implementation in React Native\n\n\nreact-native-modern-datepicker \u260512 - React Native Modern Datepicker\n\n\nreact-native-spinkit \u26051585 - A collection of animated loading indicators for React Native\n\n\nreact-native-recyclerlist \u26051515 - High performance listview for React Native and Web with support for complex layouts.\n\n\nreact-native-parallax-scroll-view \u26051486 - A ScrollView-like component with parallax and sticky header support.\n\n\nreact-native-chart \u26051464 - React-native-chart is a simple module for adding line charts, area charts, or bar charts to your React Native app.\n\n\nreact-native-gifted-listview \u26051443 - A ListView that embed some recurrent features like pull-to-refresh, infinite scrolling and more for Android and iOS React-Native apps\n\n\nreact-native-datepicker \u26051365 - React Native date, datetime and time picker for both Android and IOS\n\n\nreact-native-viewpager \u26051350 - ViewPager component for React Native\n\n\nreact-virgin \u26051319 The react-native UI Kit you've been looking for.\n\n\nreact-native-easy-grid \u26051304 - Easy Responsive Grid Layout for React Native.\n\n\nvictory-native \u26051264 - Victory-native is a collection of components to help you create charts, bar graphs etc.\n\n\nreact-native-picker \u26051238 - react-native-picker\n\n\nreact-native-collapsible \u26051174 - Animated collapsible component for React Native using the new Animated API with fallback. Good for accordions, toggles etc\n\n\nreact-native-icons \u26051168 - Quick and easy icons in React Native video\n\n\nreact-native-orientation \u26051162 - Listen to device orientation changes in react-native and set preferred orientation on screen to screen basis\n\n\nreact-native-tableview \u26051105 - Native iOS TableView wrapper for React Native\n\n\nreact-native-keyboard-spacer \u26051103 - Plug and play react-Native keyboard spacer view.\n\n\nreact-native-looped-carousel \u26051094 - Create looped carousel of views or images\n\n\nreact-native-circular-progress \u26051088 - React Native component for creating animated, circular progress with ReactART\n\n\nreact-native-popup-dialog \u26051088 - A React Native Popup Dialog Easy Use & Support Use Custom Animation. For IOS & Android\n\n\nreact-native-largelist \u26051054 - The best performance large list component for React Native (iOS & Android)\n\n\nreact-native-offline \u2605977 - Handy toolbelt to deal nicely with offline\/online connectivity in a React Native app. Smooth redux integration.\n\n\nreact-native-root-toast \u2605971 - React native toast like component, pure javascript solution\n\n\nreact-native-dropdownalert \u2605894 - A simple drop down alert with 4 pre-defined types.\n\n\nreact-native-loading-spinner-overlay \u2605885 - The only pure React Native, Native iOS and Android loading spinner (progress bar indicator) overlay\n\n\nreact-native-tinder-swipe-cards \u2605881 - Tinder card style swiping.\n\n\nreact-native-slider \u2605845 - A pure JavaScript component for react-native\n\n\nreact-native-pathjs-charts \u2605842 - Android and iOS charts based on react-native-svg and paths-js\n\n\nreact-native-svg-charts \u2605764 - One library to rule all charts for React Native\n\n\nreact-native-masonry \u2605758 - A masonry~ish layout for rendering images.\n\n\nreact-native-credit-card-input \u2605742 - \ud83d\udcb3 \ud83d\udcb3 Easy (and good looking) credit-card input for your React Native Project\n\n\nrn-placeholder \u26051139 - Display some placeholder stuff before rendering your text or media content in React Native (+ React Native Web!)\n\n\naction-sheet-rn \u26051 - Probably the most declarative API for ActionSheets in React Native\n\n\nreact-native-sglistview \u2605731 - A memory minded implementation of React Native's ListView\n\n\nreact-native-modal-dropdown \u2605708 - A react-native dropdown\/picker\/selector component for both Android & iOS.\n\n\nreact-native-button \u2605707\n\n\nreact-native-bottom-sheet-behavior \u2605701 - A react native wrapper for android BottomSheetBehavior.\n\n\nreact-native-tabs \u2605687 - React Native platform-independent tabs. Could be used for bottom tab bars as well as sectioned views (with tab buttons)\n\n\nreact-native-search-bar \u2605671 - The native search bar for react native.\n\n\nreact-native-timeline-listview \u2605665 - Timeline component for React Native App\n\n\nreact-native-toastboard - The simplest way to show notification.\n\n\napsl-react-native-button \u2605653 - React Native button component with rounded corners.\n\n\nreact-native-popup-menu \u2605653 - Extensible popup menu component for React Native.\n\n\nreact-native-qrcode \u2605644 - react-native qrcode generator\n\n\nreact-native-easy-toast \u2605616 - A react native module to show toast like android, it works on iOS and Android.\n\n\nreact-router-native \u2605612 - A routing library for React Native that strives for sensible API parity with React Router\n\n\nreact-native-copilot \u2605595 - Step-by-step walkthrough for your react native app\n\n\nreact-native-photo-browser \u2605565 - Local and remote photo browser with captions, selections and grid view support.\n\n\nreact-native-calendar \u2605559 - Calendar Component for React Native\n\n\nreact-native-calendar-events \u2605510\n\n\nreact-native-parsed-text \u2605552 - Parse text and make them into multiple React Native Text elements\n\n\nreact-native-step-indicator \u2605538 - A simple react-native implementation of step indicator widget compatible with the ViewPager and ListView.\n\n\nreact-native-popover-haobtc \u2605514 - A component for react-native\n\n\nreact-native-dropdown \u2605507 - A better Select dropdown menu for react-native\n\n\nreact-native-star-rating \u2605489 - A React Native component for generating and displaying interactive star ratings\n\n\nreact-native-parallax \u2605479 - Parallax effects for React Native using Animated API\n\n\nreact-native-sketch \u2605467 - A react-native <Sketch \/> component to draw with touch events.\n\n\nreact-native-dialogs \u2605463 - React Native wrappers for https:\/\/github.com\/afollestad\/material-dialogs\n\n\ngalio \u2605458 - A fresh react native UI framework.\n\n\nreact-native-root-siblings \u2605452 - Add sibling elements after your app root element.\n\n\nreact-native-size-matters \u2605436 - A React-Native utility belt for scaling the size your apps UI across different sized devices.\n\n\nreact-native-button-component \u2605434 - A Beautiful, Customizable React Native Button component for iOS & Android\n\n\nreact-native-super-grid \u2605434 - Responsive Grid View for React Native.\n\n\nreact-native-activity-view \u2605427 - iOS share and action sheets for React Native\n\n\nreact-native-canvas \u2605421 - A Canvas element for React Native\n\n\nreact-native-refresher \u2605419 - A React Native pull to refresh ListView completely written in js. Also supports custom animations.\n\n\nreact-native-sortable-list \u2605412 A sortable list for react native with both vertical and horizontal direction support.\n\n\nreact-native-gesture-password \u2605410 - A gesture password component for React Native\n\n\nreact-native-carousel \u2605406 - Simple carousel component for react-native\n\n\nreact-native-country-picker-modal \u2605403 - Country picker provides a modal allowing a user to select a country from a list. It display a flag next to each country name.\n\n\nreact-native-radio-buttons \u2605399 - A react component to implement custom radio buttons-like behaviors: multiple options, only on can be selected at once.\n\n\nreact-native-masked-text \u2605392 - A simple masked text and input text component for React Native.\n\n\nreact-native-accordion \u2605390 - An Accordion Component for React Native\n\n\nreact-native-invertible-scroll-view \u2605388 - An invertible ScrollView for React Native\n\n\nreact-native-message-bar \u2605384 - A module for presenting notifications via an animated message bar at the top\/bottom of the screen, highly customizable, for React Native (Android and iOS) projects.\n\n\nreact-native-fit-image \u2605383 - Responsive image component to fit perfectly itself.\n\n\nreact-native-text-input-mask \u2605383 - Text input mask for Android and iOS, native implementation RedMadRobot libraries\n\n\nreact-native-alphabetlistview \u2605372 - A ListView with a sidebar to jump to sections directly, based on johanneslumpe's react-native-selectablesectionlistview\n\n\nreact-native-check-box \u2605372 - Checkbox component for react native, it works on iOS and Android.\n\n\nreact-native-really-awesome-button \u2605370 - RNRAB is a 3D at 60fps, progress enabled, extendable, production ready component that renders an awesome animated set of UI buttons.\n\n\nreact-native-autocomplete-input \u2605366 - Pure javascript autocomplete input for react-native\n\n\nreact-native-splashscreen \u2605358 - A splash screen for react-native\n\n\nreact-native-responsive-image \u2605344 - Most elegant Responsive Image component\n\n\nreact-native-pdf-view \u2605338 - View pdf file using react-native\n\n\nreact-native-image-header-scroll-view \u2605338 - ScrollView with an image in header which become a navbar\n\n\nreact-native-toast \u2605336 - An android like toast for react-native support for iOS and Android\n\n\nreact-native-modal-picker \u2605333 - A cross-platform (iOS \/ Android), selector\/picker component for React Native that is highly customizable and supports sections.\n\n\nreact-native-off-canvas-menu \u2605327 - Beautifully crafted off canvas menu components for React native applications.\n\n\nrn-sliding-up-panel \u2605321 - React Native draggable sliding up panel purly implemented in Javascript. Works nicely on both iOS and Android.\n\n\nreact-native-search-box \u2605319 - A simple search box with animation, inspired from ios search bar.\n\n\nreact-native-parallax-swiper \u2605315 - Configurable parallax swiper based on an iOS pattern. Uses Native Driver for super smooth parallax.\n\n\nreact-native-gesture-recognizers \u2605313 - Gesture recognizer decorators for react-native\n\n\nreact-native-searchbar \u2605313 - An animated search bar for react native with inbuilt search (iOS and Android)\n\n\nreact-native-app-auth \u2605310 - React Native bridge for AppAuth - a PKCE-compliant SDK for communicating with OAuth2 providers\n\n\nreact-native-circular-action-menu \u2605305 - An animated and customizable circular floating menu.\n\n\nreact-native-effects-view \u2605304 - React Native Component that makes easy to use iOS8 UIVisualEffect\n\n\nreact-native-root-modal \u2605304 - React native modal component\n\n\nreact-native-timeago \u2605278 - Auto-updating timeago component for React Native\n\n\nreact-native-grid-view \u2605276 - React Native Grid\/Collection View component\n\n\nreact-native-md-textinput \u2605275 - React Native TextInput styled with Material Design.\n\n\nreact-native-timer-mixin \u2605274 - TimerMixin provides timer functions for executing code in the future that are safely cleaned up when the component unmounts. This is a fork that includes react-native InteractionManager support.\n\n\nreact-native-tableview-simple \u2605267 - React Native component for TableView made with pure CSS\n\n\nreact-native-keyboard-manager \u2605267 - Library that allows to prevent issues of keyboard sliding up and cover on React-Native iOS projects.\n\n\nreact-native-tabbar \u2605261 - Tab bar with more freedom\n\n\nreact-native-simple-router \u2605255 - A community maintained router component for React Native\n\n\nreact-native-cacheable-image \u2605255 - A filesystem cacheable image component for react-native\n\n\nreact-native-segmented-control-tab \u2605252 react-native-segmented-control-tab (for Android\/iOS)\n\n\nreact-native-modal-selector \u2605249 - A cross-platform (iOS \/ Android), selector\/picker component for React Native that is highly customizable and supports sections.\n\n\nreact-native-keyboardevents \u2605247 - Monitors keyboard show\/hide notifications\n\n\nreact-native-multiselect \u2605246 - Simple multi-select component for react-native.\n\n\nreact-native-cardview \u2605239 - CardView for react-native (All Android version and iOS)\n\n\nreact-native-shimmer-placeholder \u2605231 - Placeholder of React Native\n\n\nreact-native-progress-hud \u2605228 - A clean and lightweight progress HUD for your React Native app\n\n\nreact-native-qrcode-svg \u2605228 - A QR Code generator for React Native based on react-native-svg and node-qrcode.\n\n\nreact-native-bottom-action-sheet \u2605226 - React Native: Native Bottom Action Sheet\n\n\nreact-native-awesome-button \u2605222 - A React Native component rendering a button supporting showing different appearances and functionality given the passed props\n\n\nreact-native-mobx \u2605220 - Make your app reactive with MobX and react-native-router-flux\n\n\nreact-native-egg \u2605220 - An easter egg component implementation simple gestures detection achieve trigger can make your react native app infinitely more fun.\n\n\nreact-native-progress-bar \u2605218 - An animated progress bar component for React Native\n\n\nreact-native-tooltip \u2605217 - A react-native wrapper for showing tooltips\n\n\nreact-native-emoji \u2605216 - Emoji component for React Native\n\n\nreact-native-image-cache-hoc \u2605211 - Higher Order Component that adds advanced caching and persistence functionality to standard Image component.\n\n\nreact-native-parallax-scroll \u2605209 - Parallax Scroll component with sticky header, foreground, native-driver and all scrollable components (FlatList, ListView, SectionList, ScrollView) support.\n\n\nreact-native-shine-button \u2605205 - React Native for Effects like shining\n\n\nautoresponsive-react-native \u2605201 - A Magical Layout Library For React\n\n\nreact-native-autolink \u2605201 - Autolinking component for React Native\n\n\nreact-native-carousel-control \u2605199 - React Native Carousel control with support for iOS and Android.\n\n\nreact-native-picker-select \u2605199 - A Picker component for React Native which emulates the native <select> interfaces for iOS and Android\n\n\nreact-native-calendar-select \u2605195 - A component to select a date period from calendar modal, like Airbnb.\n\n\nreact-native-wheel-picker \u2605190 - React native cross platform picker.\n\n\nreact-native-grid-component \u2605188 - Easy to use grid component for your react-native project. Supports iOS and Android.\n\n\nreact-native-popover-menu \u2605188 - React Native: Native Popover Menu\n\n\nreact-native-collapsing-toolbar \u2605185 - wrapper for android CollapsingToolbarLayout\n\n\nreact-native-pagination \u2605182 - A Beautiful Pagination Plugin For Lists.\n\n\nreact-native-hero \u2605180 - A hero\/banner component with support for dynamic or static images, dynamic sizing, color overlays, and more.\n\n\nreact-native-selectme \u2605178 - A better Select dropdown menu for react-native\n\n\nreact-native-swiper-animated \u2605176 - Tinder-like swiper for react-native\n\n\nreact-native-tab \u2605171 - react-native-tab is a simple module for add a \"Tab Menu\" to your React Native app.\n\n\nreact-native-webbrowser \u2605167 - A cross-platform (iOS \/ Android), full-featured, highly customizable web browser module for React Native apps.\n\n\nreact-native-autocomplete \u2605163 - React Native Component for MLPAutoCompleteTextField\n\n\nreact-native-segmented-view \u2605159 - Segmented View for React Native (with animation)\n\n\nreact-native-cache-image \u2605158 - A cache-image for react-native\n\n\nreact-native-pulse-loader \u2605158 - Tinder like loader for your React Native app\n\n\nstacks \u2605156 - Stacks: a set of layout components for building RN views blazingly fast \u26a1, and with debug mode and design system grid you can investigate non-trivial visual issues.\n\n\nreact-native-display \u2605155 - This module brings \"Display: none\" (css style) to turn on\/off components from render. Using this module will improve your app performance and appearance with the enter\/exit animations.\n\n\nRNParallax \u2605155 - A react native scroll view component with Parallax header\n\n\nreact-native-checkbox \u2605154 - Checkbox component for React native\n\n\nreact-native-phone-input \u2605154 - Phone input box for React Native\n\n\nreact-native-switch-pro \u2605153 - A pretty nice switch for Android and iOS that have same performance on two platforms and clean code in the library.\n\n\nreact-native-popup \u2605153 - Popup for react-native\n\n\nreact-native-radial-menu \u2605153 - A Radial Menu optimized for touch interfaces\n\n\nreact-native-gestures \u2605152 - Composable gesture system in react native\n\n\nreact-native-page-control \u2605151 - React native page control, like ios UIPageControl\n\n\nreact-native-iconic \u2605149 - React Native - Animated Icons with different states\n\n\nreact-native-google-place-picker \u2605148 - React Native Wrapper of Google Place Picker for both Android and iOS.\n\n\nreact-native-scaling-drawer \u2605148 - React native scaling drawer.\n\n\nreact-native-image-carousel \u2605148 - Image carousel with support for fullscreen mode, image swiping and pinch-to-zoom in fullscreen mode.\n\n\nreact-native-offline-mode \u2605144 - Swap your app with an offline version while there's no connectivity\n\n\nreact-native-orientation-listener \u2605141 - A react-native library for obtaining current device orientation\n\n\nreact-native-multi-slider \u2605137 - Pure JS slider component with multiple markers for React Native\n\n\nreact-native-color-picker \u2605137 - React Native implementation of color picker for both Android and iOS.\n\n\nreact-native-android-statusbar \u2605135 - A react native android package to control the status bar.\n\n\nreact-native-privacy-snapshot \u2605133 - Obscure passwords and other sensitive personal information when a react-native app transitions to the background\n\n\nreact-native-custom-segmented-control \u2605132 - Native UI iOS component for Segmented Control with custom style\n\n\nreact-native-map-link \u2605131 - Open a location in the maps app of the user's choice.\n\n\nreact-native-sketch-canvas \u2605129 - A React Native component for drawing by touching on iOS and Android. (support drawing on image, text)\n\n\nreact-native-floating-labels \u2605126 - Reusabe floating lable component for react native\n\n\nreact-native-beautiful-video-recorder \u2605125 - The video recorder component that extends from react-native-camera. It works for both iOS & Android.\n\n\nreact-native-cell-components \u2605125 - Awesome react-native cell components! From a Cell to more complex & awesome components.\n\n\nreact-native-material-menu \u2605119 - Pure JavaScript material menu component for React Native.\n\n\nreact-native-bouncy-drawer \u2605116 - Highly customizable Bouncy Drawer\n\n\nreact-native-taptargetview \u2605114 - React Native Bridge for Android KeepSafe\/TapTargetView. An implementation of tap targets from the Material Design guidelines for feature discovery.\n\n\nphoto-viewer \u2605114 - A photo viewer for react native build on top of NYTPhotoViewer and FrescoImageViewer\n\n\nreact-native-switch-selector \u2605112 - A custom Switch Selector component for Android and iOS.\n\n\nreact-native-flexi-radio-button \u2605111 - Simple and flexible Radio button for React Native\n\n\nreact-native-triangle \u2605108 - Draw triangle views in react native\n\n\nreact-native-viewport-units \u2605107 - Incredibly simple utility for (sort of) using viewport units with React Native.\n\n\nreact-native-wheel-picker-android \u2605186 - Simple and flexible React native wheel picker for Android, including DatePicker and TimePicker.\n\n\nreact-native-device-display \u2605105 - A simple way to create dynamic views through device and display detection, allowing the creation of adaptable and universal apps.\n\n\nreact-native-android-kit \u2605104 - A set of native Android UI components and modules for React Native framework (Android Design Support Library, TabLayout, Floating Action Button and more...).\n\n\nreact-native-fading-slides \u2605103 - Simple looped fading slides carousel for React Native\n\n\nreact-native-scl-alert \u2605102 - React Native implementation of the package SCLAlertView-Swift\n\n\nreact-native-card-view \u2605101 - A react native card component\n\n\nreact-native-marquee-label \u2605100 - A marquee label for react-native\n\n\nreact-native-drawer-menu \u260597 - React Native Drawer Menu\n\n\nreact-native-simple-dialogs \u260597 - Cross-platform simple dialogs for React Native based on the Modal component.\n\n\nreact-native-swipe-a-lot \u260596 - A swipe component for React Native that works on iOS and Android.\n\n\nreact-native-submit-button \u260596 - Animated Submit button. Works on both android and ios\n\n\nreact-native-actions-sheet \u260594 - A Cross Platform(Android & iOS) ActionSheet with a flexible api, native performance and zero dependency code\n\n\nreact-native-dialog \u260592 - Pure JavaScript React-Native dialog\n\n\nreact-native-scrollable-mixin \u260591 - A standard interface for your scrollable React Native components, making it easier to compose components\n\n\nreact-native-open-maps \u260590 - A simple lib to open up the corresponding map application (Google or Apple Maps) from a set of coordinates (latitude & longitude) within react-native\n\n\nreact-native-swiper2 \u260586 - Swiper component for React Native. Supersede react-native-swiper\n\n\nreact-native-listitem \u260586 - iOS-style listitem component for React Native\n\n\nreact-native-progressive-input \u260586 - TextInput with clear button and activity indicator, used as part of autocomplete list.\n\n\nreact-native-in-app-notification \u260586 - Customisable in-app notification component for React Native\n\n\nreact-native-shared-preferences \u260585 - Android's Native key value storage system in React Native\n\n\nreact-native-emoji-picker \u260585 - Simple Emoji picker for react-native with optional modal-like component\n\n\nreact-native-scalable-image \u260585 - React Native Image component which scales width or height automatically to keep the original aspect ratio.\n\n\nreact-native-page-swiper \u260583 - Page Swiper component for React Native.\n\n\nreact-native-material-showcase-ios \u260581 - React Native Bridge for iOS aromajoin\/material-showcase-ios. An elegant and beautiful showcase for iOS apps.\n\n\nreact-native-label-select \u260581 - A modal selector for React Native with selected items displayed as labels.\n\n\nreact-native-3dcube-navigation \u260580 - Page Swiper component with 3D cube transition (horizontal and vertical)\n\n\nreact-native-keyboard-accessory \u260580 - Keyboard Accessory (View, Navigation) Component. Sticky views on keyboard.\n\n\nreact-native-draggable-grid \u260579 - A React Native draggable and sortable grid component write by typescript.\n\n\nreact-native-textinput-utils \u260579 - A react native extension which allows you to control TextInput better.\n\n\nreact-native-idle-timer \u260579 - An Objective-C bridge that allows you to enable and disable the screen idle timer in your React Native app\n\n\nreact-native-snackbar-component \u260577 - A snackbar component for Android and iOS, customizable and simple.\n\n\nreact-native-charts \u260576 - Delightfully-animated data visualization.\n\n\nreact-native-android-blurryoverlay \u260575 - A react native android package to show a blurry overlay.\n\n\nreact-native-calendar-datepicker \u260575 - A cross-platform calendar datepicker\n\n\nreact-native-scrollview-smart \u260575 - A Smart ScrollView component for IOS and Android.\n\n\nreact-native-zoom-image \u260575 - An image viewer component for react-native, like twitter's image viewer.\n\n\nreact-native-picker-xg \u260574 - A picker for both Android and iOS\n\n\nreact-native-status-bar-height \u260573 - A small library that helps you to get status bar height easily. It also support iPhone X.\n\n\nreact-native-color-wheel \u260572 - A react native reusable color picker wheel\n\n\nreact-native-scrollview-lazyload \u260571 - react-native scrollview with image lazy load\n\n\nreact-native-pure-navigation-bar \u260571 - A fully customizable navigation bar in React Native.\n\n\nreact-native-material-cards \u260570 - A material design card component, customizable and versatile.\n\n\nreact-native-item-cell \u260569 - React Native default style iOS item cell\n\n\nreact-native-calendario \u260569 - React Native Calendar DatePicker\n\n\nreact-native-picker-android \u260567 - react-native-picker-android\n\n\nreact-native-nested-stylesheet \u260567 - Nestable stylesheets for react-native.\n\n\nreact-native-dropdown-android \u260565 - Simple wrapper for Android's Spinner to use with react-native\n\n\nreact-native-slot-machine \u260565 - A text slot machine component for react-native\n\n\nreact-native-swipeview \u260565 - SwipeView component used to perform actions like swipe to delete, works on iOS and Android\n\n\nreact-native-download-button \u260564 - React Native Download Button: with pretty cool animation\n\n\nreact-native-siri-wave-view \u260564 - React Native: Native Siri Wave View\n\n\nreact-native-card-media \u260563 - Card media component & Support multiple image layout\n\n\nreact-native-simple-picker \u260562 - A simple react-native select picker\n\n\nreact-native-view-pdf \u260562 - PDF viewer for React Native\n\n\nreact-native-touchable-bounce \u260562 - React Native Touchable Bounce\n\n\nreact-native-streetview \u260561 - Google's Panorama\/StreetView component for iOS and Android.\n\n\nreact-native-thumbnail \u260560 - Get thumbnail from local media.\n\n\nreact-native-simple-stepper \u260560 - A super simple react-native implementation of the UIStepper iOS control.\n\n\nreact-native-phone-picker \u260558 - a quick phone picker control\n\n\nreact-native-infinite-scrollview \u260558 - ScrollView with infinite paged scrolling (no looping)\n\n\nreact-native-select-multiple  \u260558 -A simple and easy to use component for multiple selection of item from List.\n\n\nreact-native-easy-content-loader \u260557 - React-Native light weight skeleton content loading.\n\n\nreact-native-multiple-choice \u260557 - A cross-platform (iOS \/ Android) single and multiple-choice React Native component.\n\n\nk-react-native-swipe-unlocker \u260555 - A simple swipe unlock for React Native\n\n\nreact-native-walkthrough-tooltip \u260555 - Highlight a component via tooltip\/popover\n\n\nreact-native-adbannerview \u260552 - React Native Bridge for ADBannerView\n\n\nreact-native-fxblurview \u260552 - React Native wrapper for popular FXBlurView library for realtime, fine-tuned blur effects\n\n\nreact-native-beautiful-image \u260552 - The Beautiful Image component that supports fadeIn animation and shows placeholderSource if the main source can't be loaded.\n\n\nreact-native-fs-modal \u260551 - React native full screen modal component.\n\n\nreact-native-toast-native \u260551 React Native Toast component for both Android and iOS.\n\n\nreact-native-masked-view \u260550 - A element for react-native\n\n\nreact-native-md-motion-buttons \u260550 - Material design motion button inspired by inVision app.\n\n\nreact-native-drop-refresh \u260549 - A pull down to refresh control for react native.\n\n\nreact-native-pin-view \u260548 - Easy, convenient, quick-forming PinView component. It runs smoothly for both IOS and Android.\n\n\nreact-native-radio-button-classic \u260547 - Bring Classic Radio to React-Native\n\n\nreact-native-image-intent \u260547 - Image intent receiver for React Native android\n\n\nreact-native-dial \u260547 - A react native reusable and efficient dial knob element.\n\n\nreact-native-date \u260546 - React Native date and time pickers for Android\n\n\nreact-native-draggable-drawer \u260546 - DraggableDrawer component for React Native.\n\n\nreact-native-date-picker \u260546 - A date picker component for Android and iOS\n\n\nreact-native-message-composer \u260545 - React Native module bridge to iOS MFMessageComposeViewController\n\n\nreact-native-layout \u260545 - Semantic JSX layout components for react-native\n\n\nreact-native-touch-visualizer \u260545 - Visualize touches and drags on React Native apps for iOS.\n\n\nreact-native-calendar-android \u260544 - A simple material-themed calendar for react native android\n\n\nreact-native-air-progress-bar \u260544 - React Native progress-bar component, customizable and animated\n\n\nreact-native-full-screen \u260544 - React Native FullScreen api and element\n\n\nreact-native-full-image-picker \u260544 - Support taking photo, video recording or selecting from photo library.\n\n\nreact-native-viewport \u260543 - Viewport dimensions for react-native\n\n\nreact-native-progress-circular \u260543 - A pure React Native Component for circular progress bars for both iOS and Android.\n\n\nreact-native-tween-animation \u260543 - A simple react native state tween animation module.\n\n\nreact-native-flanimatedimage \u260543 - FLAnimatedImage for React Native.\n\n\nreact-native-grading \u260543 - React Native Component for grading scores using ReactART.\n\n\nreact-native-auto-typing-text \u260543 - An auto typing text component for react-native\n\n\nreact-native-slack-webhook \u260542 - Follow some activities (new user, payment,...) from your app via Slack and this webhook lib.\n\n\nreact-native-simpledialog-android \u260541 - React Native Android module to use Android's AlertDialog - same idea of AlertIOS\n\n\nreact-native-toolkit \u260541 - A collection of common UI components for react native mobile apps.\n\n\nreact-native-draggable-grid \u260541 - A React Native draggable and sortable grid component write by typescript.\n\n\nreact-native-sortable-gridview \u26054 - A React Native sortable and draggable Grid View Component.\n\n\nreact-native-elastic-stack \u260541 - ReactNative component that implements elastic stack effect\n\n\nreact-native-big-slider \u260541 - Yet another, big one, pure JS easily customisable and hackable react-native slider component.\n\n\nreact-native-custom-actsheet \u260540 - A custom ActionSheet for react-native\n\n\nrn-render-perfs \u260540 - Measure React rendering lifecycles using UI controls\n\n\nreact-native-animated-check-mark \u260540 - A small react component for animated cross-mark transformation.\n\n\nreact-native-easy-dnd \u260539 - Drag and drop component for react-native\n\n\nreact-native-fab \u260539 - A FAB button component for Android and iOS, customizable, simple and as per material design specs.\n\n\nreact-native-popupwindow \u260538 - Android PopupWindow for react-native module\n\n\nreact-native-wheel \u260538 - android wheel view for react-native\n\n\nreact-native-bar-collapsible \u260538 - A Bar component that can be collapsible (toggle\/accordion), clickable or text-only.\n\n\nreact-native-circle-view \u260537 - circle progress for react native android using CircleView\n\n\nreact-native-slidable-tab-bar \u260537 - Slidable tab bar for instant view rendering(react-native)\n\n\nreact-native-scrollable-decorator \u260537 - A standard interface for your scrollable React Native components, making it easier to compose components\n\n\nreact-native-circle-checkbox \u260537 - Circle checkbox component for React Native\n\n\nreact-native-newsticker \u260535 - The News Ticker component for React Native\n\n\nreact-native-awesome-alert \u260535 - Customizable modal components with \u2714\ufe0fcheck options in React Native\n\n\nreact-native-view \u260534 - Lightweight View component for quick styling.\n\n\nreact-native-draggable-calendar \u260534 - A calendar component supporting dragging.\n\n\nreact-native-countdown \u260533 - react native countdown button\n\n\nreact-native-dashed-border \u260533 - A element for react-native\n\n\nreact-native-writebox \u260533 - (iOS \/ Android) Facebook\/Twitter textarea that autogrow and count characters.\n\n\nreact-native-ibeacon-simulator \u260532 - React Native Library to simulate device act as an iBeacon\n\n\nreact-native-suggester \u260532 - React-Native package to decorate TextInput and get suggestions with good UX.\n\n\nreact-native-photo-grid \u260531 - React Native component that handles the complexities of building a grid of photos with a flexible number of photos per row.\n\n\nreact-native-android-iconify \u260530 - icons for react native android using android-iconify\n\n\nreact-native-touchable-set-active \u260530 - Touchable component for React Native that enables more advanced styling by setting an active state. Most useful for building your own touchable\/button components on top of.\n\n\nreact-native-telephone-input \u260530 - React Native Telephone Input, discover country and mask telephone Input\n\n\nreact-native-nmrangeslider-ios \u260529 - The NMRangeSlider component for React Native\n\n\nreact-native-fade-in-view \u260529 - A simple and lightweight RN component that fades in its children\n\n\nreact-native-gl-image-filters \u260527 - React Native GL Filters for Image implementation.\n\n\nreact-native-focus-scroll \u260526 - react-native-focus-scroll can detect which children are focused when scrolling.\n\n\nreact-native-about-libraries \u260526 - React Native: It offers information about install packages\n\n\nreact-native-actionsheet-native \u260525 - Android ActionSheet support for React Native\n\n\nreact-native-comparison-slider \u260525 - A simple component to display two image in comparison with a slide-over feature.\n\n\nreact-native-selectmultiple-button \u260525 - A button (or a grouped buttons) supporting multiple or radio selection\n\n\nreact-native-timeline-theme \u260525 - Collection of TimeLine theme. This package only use flexbox(without absolute) & FlatList\n\n\nreact-native-date-range-picker \u260525 - Simple date range picker extended from react-native-calendars \ud83d\udcc6\n\n\nreact-native-circle-progress \u260524 - A custom Circle Progress Indicator for React Native\n\n\nreact-native-app-intro-v2 \u260524 - Latest App intro\n\n\nreact-native-starrating \u260524 - a react-native component for display interactive star ratings\n\n\nreact-native-echarts-wrapper \u260524 - Powerful ECharts wrapper build for React Native\n\n\nreact-native-orientation-controller \u260523 - A react-native library for obtaining and controlling the current device and application orientation\n\n\nreact-native-match-media \u260523 - window.matchMedia mock for React Native\n\n\nreact-native-simple-card-view \u260523 - Easiest way to adding a card view on your screen.\n\n\nmonalisa-ui \u260522 - MonalisaUI is UI component library for React Native to build native mobile apps for iOS and Android platforms\n\n\nreact-native-square-view \u260522 - A square view component for react native.\n\n\nreact-native-ichart \u260522 - ichart for react-native\n\n\nreact-native-dropbox-chooser \u260521 - React Native dropbox chooser module\n\n\nreact-native-compress \u260521 - Compress video for react native. Only for iOS, Android will be coming.\n\n\nreact-native-custom-actionsheet \u260521 - Fully customizable ActionSheet for React Native.\n\n\nreact-native-timepicker \u260520 - React Native timepicker for iOS\n\n\nreact-native-custom-checkbox \u260520 - React Native checkbox that can be customize. Works for both Android and iOS.\n\n\nreact-native-tilt \u260520 - Tilt effect with accelerometer for React Native components.\n\n\nreact-native-drawpad \u260520 - A pad for users to draw by touching\n\n\nrn-ab-hoc \u260519 - Poor intrusive way to make A\/B Testing by using an HoC instead of components.\n\n\nreact-native-expand \u260519 - A react-native expandable component for both Android and iOS\n\n\nreact-native-modal-loader \u260519 - Customizable animated modal progress hud for react apps.\n\n\nreact-native-images-collage \u260519 - Robust interactive image collage component for React Native.\n\n\nreact-native-avatar-gravatar \u260518 - React Native Gravatar component\n\n\nreact-native-image-modal \u260516 -  simple full size modal image for iOS and Android. supports zoom-in\/out, double-tap zoom-in\/out, move and swipe-to-dismiss\n\n\nreact-native-notifier \u260516 - Fast and simple in-app notifications for React Native\n\n\nreact-native-grid \u260515 - The 24-column grid component for react-native\n\n\nreact-native-search \u260515 - Native Search component for react native.\n\n\nrn-displayable \u260515 - Display your components based on props or a set of rules\n\n\nreact-native-custom-picker \u260515 - React native customizable picker component.\n\n\nreact-native-confirmation-code-field \u260515 - A React Native component to input confirmation code for both Android and IOS\n\n\nreact-native-android-circles \u260514 - A react native android package to show a circle progress view.\n\n\nreact-native-code-verification \u260513 - An UI module for user-side pincode verification.\n\n\nreact-native-hijri-date-picker \u260513 - Date Picker Dialog for Hijri calendar for android.\n\n\nreact-native-imagewand \u260513 - image wand for react native\n\n\nreact-native-gravatar \u260513 - react-native wrapper for gravatar-api\n\n\nreact-native-rebound-scrollview \u260512 - React Native Android ReboundScrollView implementation.\n\n\nreact-native-calculator \u260512 - React Native Calculator and Calculator Input Component.\n\n\nreact-native-navbar-color \u260512 - Change Navigationbar Color in Android\n\n\nradio-buttons-react-native \u260511 - Animated radio buttons component for react native\n\n\nreact-native-piechart \u260510 - A component for React Native\n\n\nreact-native-seekbar-android \u260510 - A React Native wrapper Android's SeekBar\n\n\nreact-native-coachmasks \u260510 - react-native-coachmark! It helps you easily create Coach Marks to enhance user experience!\n\n\nreact-native-progress-button \u260510 - A react native button component that can show progress.\n\n\nreact-native-quiltview \u26059 - Native iOS UICollectionView wrapper with RFQuiltLayout for React Native\n\n\nreact-native-relative-units \u26059 - Relative units for React Native\n\n\nreact-native-simple-button \u26059 - A simple react-native button\n\n\nreact-native-styled-toast \u26059 - A themeable toast component for React Native.\n\n\nreact-native-frame-loading \u26059 - The Loading indicator with frame by frame view animation\n\n\nreact-native-rheostat \u26059 - Inspired by Airbnb's rheostat, a powerful slider with assorted data visualized charts.\n\n\nreact-native-country-picker \u26058 - React Native Country Picker\n\n\nreact-native-flex-label \u26058 - A text label for React Native that handles multiple lines of text with ellipses truncation as well as vertical alignment within it's view container.\n\n\nreact-native-link \u26058 - A link component\n\n\nreact-native-stylesheet-xg \u26058 - extension stylesheet for cross platforms and responsive\n\n\nreact-native-censored \u26058 - React Native component to censor content.\n\n\nreact-native-bouncing-ball \u26058 - React Native component bouncing ball for both iOS and Android.\n\n\nreact-native-loading \u26057 - A lightweight loading for your React Native app.\n\n\nreact-native-segment-control \u26057 - A swipeable SegmentedControl component for React Native apps.\n\n\nreact-native-animated-styles \u26057 - Easily animate\/transition react components between two style states.\n\n\nreact-native-hide-modal \u26056 - Modal component that can be hidden\n\n\nreact-native-masonry-brick-list \u26055 - Staggered Or Masonary List View For React Native Written in pure js\n\n\nreact-native-blur-overlay \u26055 - React Native Blur Overlay Library For Ios And Android\n\n\nreact-native-rate-modal \u26055 - Hackable \"rate us\" component for React Native.\n\n\nreact-native-fancy-carousel-viewpager \u26054 - React Native Designed View Pager Library (pure js)\n\n\npinar \u26054 - Customizable, lightweight React Native carousel component with accessibility support.\n\n\nreact-native-svg-transformer \u26054 - Import SVG files inside React Native components. Uses the react-native-svg library to render SVG images.\n\n\nreact-native-progress-steps \u26054 - A simple and fully customizable React Native component that implements a progress stepper UI.\n\n\nreact-native-loader-hud \u26053 - Loader animation library for React Native\n\n\nreact-native-double-buffer \u26053 - Simple React Native Double Buffer View\n\n\nreact-native-fontbase \u26053 - Defining font sizes in React Native\n\n\nreact-native-units \u26052 - A collection of useful units and a simple grid implementation for responsive layouts in React Native.\n\n\nreact-native-easy-checkbox \u26052 - Simple CheckBox for react-native\n\n\nreact-native-scene-manager \u26052 - Simple Scene Manager for React-Native\n\n\nreact-native-rounded-navigation-drawer \u26052 - React Native Designed Navigation Drawer Library (Pure Js)\n\n\nreact-native-expandable-fab-menu \u26052 - React Native Expandable Fab Menu Component (pure js)\n\n\nreact-native-animated-bottom-tabbar \u26052 - Animated bottom Tab bar for react native\n\n\nreact-native-create-new-file-ios \u26051 - A react-native interface for creating a blank new file on ios. File must not already exist.\n\n\nreact-native-picker-module \u26051 - A different approach for React Native Picker.\n\n\nreact-native-countries \u26051 - This package is provide you directly native countries name & code list from device.\n\n\nreact-native-scrubber \u26051 - A simple audio\/video Scrubber for both iOS and Android.\n\n\nreact-native-loader-kit \u26051 - Purely native loading animations for React Native.\n\n\nreact-native-new-feature \u26051 - A simple and lightweight What's New component to show your latest React native Features.\n\n\nreact-native-sdr - Server Driven Rendering (SDR) component for React Native\n\n\nreact-native-store-view \u260519 - Wraps SKStoreProductViewController for use in react-native projects\n\n\nreact-native-image-container \u26050 - Image container for React Native\n\n\nreact-native-counters \u26050 - Minus Plus Counter for React Native\n\n\nreact-native-gradient-buttons - A lightweight, customizable and haptic Gradient Button component for React Native.\n\n\nreact-native-auth-screens - A series of Authentication Views for React Native: Sign In, Social Sign In Sign Up, and Forgot Password. Uses react-native-gradient-buttons.\n\n\nreact-native-animated-flatlist - Animated Flatlist for React Native.\n\n\nswipeable-modal-react-native - A 'pop-up' modal that can be swiped away left or right to run different functions.\n\n\nreact-native-countdown-text - A React Native component that converts a timestamp of a future date to a readable countdown clock, based on a format.\n\n\nrn-actionsheet-module \u26050 - BottomsheetDialog & ActionSheetIOS with same props and usage.\n\n\nreact-native-animated-loader - A React Native Loader Component which uses Airbnb's Lottie for beautiful loader animations.\n\n\nrn-verifcode - React-Native component to input confirmation code for both Android and IOS\n\n\nreact-native-picker-modal-view - React Native Module to select item picker modal.\n\n\nrn-material-textinput - A simple TextInput wrapper for material styling in iOS and Android with Customizable styles & Animated label.\n\n\nrn-action-picker - A simple action picker for iOS and Android. Renders Native ActionSheetIOS Component in iOS and custom ActionSheet lookalike component in Android.\n\n\nrn-collapsible-section - A collapsible section \/ section list with customizable section body and child body. Supports both iOS and Android.\n\n\nview-on-steroids - React-Native View component with inline styles\n\n\nreact-native-eva-icons - Eva Icons implementation for React Native based on react-native-svg elements.\n\n\nreact-native-dots-pagination \u26053 - A simple dot paging for React Native.\n\n\nreact-native-gesture-detector - Easily create and detect custom, complex gestures on React Native.\n\n\nreact-native-scrollview-header \u26055 - An animated ScrollView header that transitions from transparent background to opaque upon scrolling.\n\n\nreact-native-wizard - Easily navigate your user for next step. Quick-forming Wizard component.\n\n\nreact-native-timetable - \ud83d\udcc6 timetable library for React Native\n\n\nreact-native-material-drawer - React Native Material Drawer for iOS, Android, Web, and Electron\n\n\nNavigation\n\nreact-navigation \u260514233 - Easy to use Navigation for React Native\nreact-native-navigation \u26059325 - App-wide support for 100% native navigation with an easy cross-platform interface.\n\n\nreact-native-navigation-hooks \u2605109 - A set of React hooks for React Native Navigation.\n\n\nreact-native-router-flux \u26057720 - React Native Router based on new React Native Navigation API\nkittenTricks \u26054227 - A react native mobile starter kit with over 40 screens and theme hot reload support\nnative-navigation \u26053060 - Native navigation library for React Native applications\nreact-native-navbar \u26051824 - Simple customizable navbar component for react-native\nreact-native-router \u26051203 - Awesome navigation for your native app.\nex-navigation \u26051019 - A route-centric, batteries-included navigation library for Exponent and React Native that works seamlessly on Android and iOS.\nreact-native-controllers \u2605580 - Truly native no-compromise iOS navigation for React Native.\nex-navigator \u2605531 - Route-centric navigation built on top of React Native's Navigator\nreact-native-nav \u2605262 - A cross-platform (iOS \/ Android), fully customizable, React Native Navigation Bar component\nreact-native-navigation-drawer \u260598 - A slide menu inspired from Android for React-Native\nreact-native-ya-navigator \u260588 - Yet another react native navigator component\nnavbar-native \u260586 - A new, fully customizable Navbar component for React-Native\nreact-native-swiper-flatlist \u2605\u2605 \u260581 - \ud83d\udc46 React Native Swiper component implemented with FlatList\nreact-native-easy-router \u260578 - React Native router with easy-to-use API\nreact-native-navigator \u260574 - A simple router for react native\nreact-navigation-magic-move \u260562 - Bindings for using react-navigation with react-native-magic-move \ud83d\udc30\ud83c\udfa9\u2728 (shared element transitions)\nreact-native-navigation-bar \u260559 - react-native-navigation-bar\nreact-native-url-handler \u260537 - Navigate to external URLs, handle in-app URLs, and access system URLs\nreact-native-grid-list \u2605 \u260528 - React Native Grid List component\nreact-native-route-navigator \u260527 - React-Native page navigation using URIs.\nreact-native-transparent-bar \u260516 - react native navigator transparent bar\nreact-native-email-chip \u26058 - A simple yet customizable component to display a chip list of emails\nreact-native-invoke-app \u26058 - Bring React Native App to foreground from Headless JS\nreact-native-keyboard-sticky-view \u26057 - Keyboar Sticky View with animation and renderProps\nsajjad-brick-list \u26055 - Staggered Or Masonary List View For React Native Written in pure js\nreact-native-router-sinux \u2605 \u26054 - React Native Router based on new NavigationExperimental that use Sinux as Flux implementation.\nreact-native-simple-slider \u26053 - This is a simple javascript slider component for react native\nreact-native-header-scroll-view \u26053 - iOS-style large header scroll view.\nreact-native-navigation-buttons \u26052 - iOS navigation buttons for the React Native Navigator\nreact-native-hotspot \u26052 - A React Native component that displays hotspots over desired components to help lead your users through an onboarding flow or direct them towards new UI elements\nreact-native-pointer-interactions \u26052 - Expose iPad mouse & trackpads interactions to React Native.\nreact-native-yynavigator \u26051 - custom navigation bar for react-native\n\nNavigation\/Routing Articles\n\nBasics of using react-native-router-flux\nRouting and Navigation in React Native\nNavigatorIOS: Accessing onRightButtonPress from within child component\n\nNavigation Demos\n\nmovieapp \u26051441 \u2013 Discover Movies and TV shows - it uses redux and wix\/react-native-navigation\nExNavRelay \u260523 - React Native + Ex-navigation + Relay integration template\nReact Native Drawer & Bottom-Tab Navigation \u26056\nReact Native Example App: Navigation\n\nDeep Linking\n\nreact-native-deep-link \u260536 - React Native library to handle deep links\n\nText & Rich Content\n\nreact-native-hyperlink \u2605354 - A <Hyperlink \/> component for react-native that makes urls, fuzzy links, emails etc clickable and stylable\nreact-native-draftjs-render \u2605253 - A React Native render for Draft.js model\nreact-native-html-to-pdf \u2605171 - Convert html strings to PDF documents using React Native\nreact-native-htmltext \u2605132 - Use HTML like markup to create stylized text in react-native.\nreact-native-html-webview \u2605102 - Display (possibly untrusted) HTML using a UIWebView in React Native.\nreact-native-html-render \u260598 - A html render for react-native\nreact-native-markdown-display \u260557 - Highly customizable Markdown renderer using native components for all its elements without any web-view.\nreact-native-measure-text \u260548 - Measure text height without laying it out.\nreact-native-markdown-editor \u260547 - Markdown editor like github comment editor (contains preview, markdown buttons)\nreact-native-showdown \u260543 - React-native component which renders markdown into a webview!\nreact-native-file-viewer \u260533 - Preview any type of file supported by the mobile device\nreact-native-responsive-fontsize \u260522 - Provide responsive fontsize based on device height in React-Native\nreact-native-text-size \u260521 - Measure text accurately before laying it out and get font information from your App.\nreact-native-hypertext \u260520 - React Native module to render hypertext (text with links)\nreact-native-asciimage \u260517 - An ASCIImage component for React Native\nreact-native-universal-modal \u260516 - Universal simple modal component for React Native\nreact-native-html \u260511 - render html as react native custom elements\nreact-native-responsive-fontsize \u260583 - Provide responsive fontsize based on device height in React-Native\nrn-pdf-reader-js \u26056 - A PDF reader, in JavaScript only, for Expo, Android capable, PDF.JS\n\nAnalytics\n\nreact-native-fabric \u26051097 - A React Native library for Fabric, Crashlytics and Answers\nreact-native-google-analytics-bridge \u26051071 - A native Google Analytics bridge for React Native. Uses the official libraries on both iOS and Android.\nreact-native-google-analytics \u2605325 - Google Analytics for React Native!\nreact-native-mixpanel \u2605307 - A React Native wrapper for Mixpanel tracking\nreact-native-ab \u2605160 - A component for rendering A\/B tests in React Native\nreact-native-segment-io-analytics \u260568 - A React Native Segment wrapper!\nreact-native-ux-cam \u260532 - React Native wrapper for uxcam.com.\nreact-native-td \u260526 - An unofficial React Native SDK for Treasure Data.\nreact-native-flurry-sdk \u260515 - Official React Native wrapper for Flurry SDK. Supports Android, iOS and tvOS.\n\nUtils & Infra\n\ndetox \u26053566 - Graybox End-to-End (functional) Tests and Automation Library for Mobile with first class support for React Native\nreact-native-workers \u2605616 - Background services and web workers for react-native\nreact-native-mock \u2605504 - A fully mocked and test-friendly version of react native\nloki \u2605395 - Visual Regression Testing for Storybook\nreact-native-slowlog \u2605271 - A high-performance timer based profiler for React Native that helps you track big performance problems\nreact-native-zip-archive \u2605173 - Zip \/ Unzip archive utility\nreact-native-tips \u2605160 - This module is used to create easily some tips to help your new users to understand how works your app.\ncodemod-RN24-to-RN25 \u2605104 - a simple codemod to handle the new import style on >=RN25\nreact-native-linkedin \u2605101 React-Native LinkedIn, a simple LinkedIn login library for React-Native or Expo with WebView and Modal\nreact-native-eval \u260575 - Call any JS functions from your native code\nreact-native-device-log \u260573 - A UI and service for displaying dev-logs on devices.\nreact-native-call-detection \u260573 - Helps to detect different call states like Incoming, Disconnected, Dialing and Connected\nreact-native-userdefaults-ios \u260566 - React Native Module for NSUserDefaults\nreact-native-webp \u260556 - react-native-webp adds support for WebP images for react-native components.\nreact-native-global-event-emitter \u260550 - Shared event emitter between native and JS for React Native.\nreact-native-user-defaults \u260548 - ios UserDefaults used by react-native\nreact-native-console-time-polyfill \u260545 - console.time and console.timeEnd polyfill for react-native\nreact-native-aws-signature \u260542 - help generate signature required for using AWS API. Necessary to use S3, ec2, or other services.\nreact-native-rsa \u260541 - RSA crypto lib for react native\nreact-native-html-parser \u260538 - parse html in react-native\npixels-catcher \u260526 - Library for testing React Native UI components and screens\nreact-native-aes \u260524 - AES in react-native\nreact-native-hour-format \u260520 - Get hour format from OS settings.\nreact-native-des \u260520 - A des crypto for react-native\nreact-native-babel-jest \u260515 - Simple testing configuration for React Native with Jest\nreact-native-simple-encryption \u260514 - Simple XOR and base_64 encryption decryption for react-native\nreact-native-immutable \u260512 - using immutable.js library with react-native\nreact-native-util \u260512 - A fork of io.js's util module that works with React Native\nreact-native-referrer \u260511 - React Native android only library to retrieve campaign referrer.\nreact-native-webpackager-server \u26056 - react native webpackager server\nreact-native-crypto \u26056 - implementation of crypto for React Native\nreact-native-fluxbone \u26055 - A group of libraries that help with the FluxBone pattern in React Native\nreact-native-cross-settings \u26055 - React Native Settings module for both Android & iOS.\nreact-native-HsvToRgb \u26053 - a helper to convert HSV(HSB) color to RGB.\nreact-native-use-persist-storage \u26053 - Persist and rehydrate your context(state) using React Hooks\nreact-native-tools \u26050 - Tools for react native project development\nreact-native-call-observer - Helps to observe call status like incoming, ended, and connected (iOS).\nreact-native-iphone-se-helper \u26050 - utils for developing iphone SE size.\nreact-native-mov-to-mp4 \u260544 - utils for Converting mov file to mp4 for cross-platform playback compatibility.\n\nForms\n\nformik \u260510633 - Forms in React, without tears.\nreact-hook-form \u26059346 - React hooks for forms validation without the hassle.\nredux-form \u26054829 - Redux form state management (Web and Native)\nredux-hook-form \u26052700 - React hooks for form validation without the hassle. (Web and Native)\ntcomb-form-native \u26052831 - Generate React Native forms\nreact-native-gifted-form \u26051317 - Form component for react-native\nreact-native-clean-form \u2605414 - Good looking form elements with redux-form integration. Stylable with styled-components.\nreact-native-form-generator \u2605354 - Generate amazing React Native forms in a breeze\nreact-native-form \u2605138 - A simple react-native component to wrap your form fields!\nreact-reactive-forms \u2605106 - Angular like reactive forms in React.\nreact-native-forms \u260586 - A declarative API for creating, validating, and serializing native-looking forms.\nreact-native-formawesome - Complex and simple forms builder.\nreact-native-from-builder \u260569 - Handle your forms in a smart way.\nfoect \u260537 - Simple form validation library for React Native\nreact-native-fm-form \u260513 - Generate list view form of React Native in few line of codes\nreact-native-form-flux \u26052 - React Native Form management using Flux architecture\nreact-native-form-validator \u26050 - A simple validation library for react native\n\nGeolocation\n\nreact-native-background-geolocation \u26051316 - Sophisticated cross-platform background location-tracking & geofencing module with battery-conscious motion-detection intelligence (Android requires paid license).\nreact-native-mauron85-background-geolocation \u2605657 - React Native Android and iOS module for background and foreground geolocation with battery-saving \"circular region monitoring\" and \"stop detection\"\nreact-native-geocoder \u2605344 - react native geocoding and reverse geocoding\nreact-native-geo-fencing \u2605100 - Native modules to determine if a location is within defined geographical boundaries using Google Geometry library\nreact-native-fused-location \u260582 - Finest location for react-native on Android using the new Fused API.\nreact-native-android-geolocation \u260519 - React Native Module to use Android Geolocation via Google Play API\nreact-native-reverse-geo \u260518 - React Native module bridge to convert address to geo coordinates.\nreact-native-boundary \u260512 - React Native module to use geofences. Native implementation for iOS and Android.\nreact-native-geolocation-android \u26053 - Geolocation module for react native android\n\nInternationalization\n\n\nfbt \u26053202 - A JavaScript Internationalization Framework\n\n\nreact-native-localize \u2605603 - React Native Localize\n\n\nreact-native-globalize \u2605192 - Globalization helper for React Native\n\n\nredux-react-native-i18n \u260540 - An i18n solution for React Native apps on Redux\n\n\nreact-native-intl \u260537 - React Native module shipped native Intl implementation and Translation extension\n\n\nrn-translate-template \u260518 - I18n template for all iOS and Android supported languages\n\n\nreact-native-i18n \u26051778 - React Native + i18n.js Deprecated for react-native-localize\n\n\nreact-native-languages \u2605246 - React Native properties and methods related to the language of the device Now called react-native-localize\n\n\nBuild & Development\n\nreactotron \u26059198 - Control, monitor, and instrument your React Native apps from the comfort of your terminal.\nreact-native-code-push \u26055184 - React Native plugin for the CodePush service\nreact-native-webpack-server \u2605935 - Build React Native apps with Webpack\ngenerator-rn-toolbox \u2605800 - Yeoman generators to kickstart your project and setup continuous deployment.\nbabel-preset-react-native-stage-0 \u260597 - a Babel preset with latest Javascript goodies\nreact-native-debug-stylesheet \u260575 - Add coloured borders or backgrounds to all views to make it easier to debug layout issues\nreact-native-console-panel \u260573 - react native component for display console messages.\nreact-native-css-loader \u260539 - You can use react-native-css-loader with react-native-webpack-server, which can use webpack to built react-native app better.\nreact-native-assets \u260531 - Module to manage assets. It allows you download assets from a network and store into a specific local folder on iOS\nreact-native-cosmos \u260518 - DX tool to test react-native components with defined props\/state fixtures.\nreact-native-kill-packager \u260515 - kill running react native packager.\nreact-native-build-cli \u26053 - a cli tool for react-native build\n\nStyling\n\nstyled-components \u260520064 - Style React and React Native with utilising tagged template literals.\nemotion \u26055627 - Style as a function of state.\nreact-native-extended-stylesheet \u26051689 - Extend React Native stylesheet with variables, relative units, percents, math operations, scaling and other stuff.\nreact-native-css \u2605755 - Style React-Native components with css and built in support for SASS.\nreact-native-style-tachyons \u2605525 - functional, maintainable design for everyone based on tachyons.css.\nglamorous-native \u2605454 - A React Native version of glamorous - a component styling library.\nreact-native-responsive \u2605295 - The power of Media Queries now in your React Native project (ios and android) ! Responsive Design can now be easily managed !\ncairn \u2605110 - Simple, string-based style selector engine with support for basic inheritance.\nreact-native-theme \u2605104 - Theme manager for react native project!\nreact-native-css-modules \u260544 - Style React-Native components using CSS, Sass, Less or Stylus.\nrn-less \u260515 - Style react-native with less (with VS Code extension support)\nreact-native-prism \u260510 - Minimal, idiomatic style management for React Native\nreact-native-paint \u26055 - A themeable abstraction over React Native StyleSheet. Read about it here.\nbinstorm \u26055 - BinStorm is a React Native styling utility for rapidly building custom user interfaces. Read about it here.\nstyled-react-native - Advanced react native styling with simple method (style overwrites, component composition, enhanced style property). Full intro in this Medium article.\nreact-native-tailwindcss - A react native styling system based on TailwindCSS.\n\nSystem\n\nreact-native-firebase \u26054192 - A well tested feature rich Firebase implementation for React Native, supporting both iOS & Android platforms for 10+ Firebase modules (including Cloud Firestore).\nreact-native-push-notification \u26053431 - React Native Local and Remote Notifications\nreact-native-device-info \u26053145 - Get device information using react-native\nreact-native-fs \u26052465 - Native filesystem access for react-native\nreact-native-config \u26051894 - Config variables for React Native apps\nreact-native-ultimate-config - Configure all levels of your react-native app with a single file\nreact-native-fcm \u26051564 - react native module for firebase cloud messaging and local notification\nreact-native-notifications \u26051396 - React native notifications\nreact-native-arkit \u26051290 - React Native binding for iOS ARKit\nreact-native-permissions \u26051118 - Check and request all permissions with a single api\nreact-native-keychain \u2605992 - Keychain Access for React Native\nreact-native-touch-id \u2605902 - React Native authentication with the native Touch ID popup.\nreact-native-contacts \u2605882 - React Native Contacts (android & ios)\nreact-native-communications \u2605871 - Easily call, email, text or iMessage someone in React Native\nreact-native-onesignal \u2605871 - React Native Library for OneSignal Push Notifications Service (iOS + Android)\nreact-native-in-app-utils \u2605743 - A react-native wrapper for handling in-app payments.\nreact-native-image-resizer \u2605636 - Rescale local image files with React Native.\nreact-native-quick-actions \u2605593 - A react-native interface for 3D Touch home screen quick actions\nreact-native-billing \u2605534 - In-app purchase implementation for React Native on Android.\nreact-native-barcodescanner \u2605491 - A barcode scanner component for react native - not maintained anymore - use react-native-camera.\nreact-native-iap \u2605450 - React-native native module for In-App Purchase.\nreact-native-dotenv \u2605450 - A Babel preset let you import application configs from .env file (zero runtime dependency)\nreact-native-location \u2605425 - Native GPS location support for React Native.\nreact-native-background-fetch \u2605373 - iOS BackgroundFetch API implementation. Awakens a suspended iOS app in the background to execute a callbackFn about every 15 min.\nreact-native-queue \u2605359 - Your swiss army knife for task management in React Native - easily manage background tasks that run periodically when app is closed and dedicated worker threads.\nreact-native-sensors \u2605355 - Platform independent wrapper for sensors like Gyroscope, Accelerometer and Magnetometer with RxJS interface\nreact-native-social-share \u2605347 - Use the iOS native Twitter and Facebook share view from react native\nreact-native-ibeacon \u2605334 - iBeacon support for React Native. The API is very similar to the CoreLocation Objective-C one with the only major difference that regions are plain JavaScript objects. Beacons don't work in the iOS simulator.\nreact-native-lock-ios \u2605291 - Auth0 Lock for React Native (iOS)\nreact-native-motion-manager \u2605223 - A react-native interface for using the Gyroscope, Accelerometer and Magnetometer\nreact-native-android-sms-listener \u2605194 - Allows you to listen for incoming SMS messages\nreact-native-device \u2605185 - UIDevice wrapper for React Native\nreact-native-gcm-android \u2605174 - GCM for Android\nreact-native-sensor-manager \u2605172 - Wrapper for react-native providing native sensors access. (Gyroscope, accelerometer, magnetometer, thermometer...)\nreact-native-ble \u2605157 - React Native BLE using noble api surface\nreact-native-haptic \u2605137 - iOS 10 + haptic feedback for React Native applications\nreact-native-pinch \u2605130 - SSL pinning for react native\nreact-native-unified-contacts \u2605120 - React Native iOS 9+ Contacts (ios)\nreact-native-callkit \u260594 - iOS 10 CallKit framework for React Native\nreact-native-discovery \u260589 - Discover nearby devics using BLE. Turn iOS and Android devices into beacons\nreact-native-passcode-auth \u260587 - React Native authentication with iOS Passcode.\nreact-native-addressbook \u260581 - AddressBook module for react-native\nreact-native-fingerprint-identify \u260579 - React Native authentication with the Fingerprint on Android, fingerprint API compatible lib, which also combines Samsung, Xiaomi and MeiZu's official Fingerprint API.\nreact-native-phone-call \u260576 - A simple way to initiate a phone call in React Native\nreact-native-calendar-reminders \u260569 - React Native module for IOS EventKit Reminders\nreact-native-bluetooth-state \u260561 - Answering the question of \"Is my bluetooth on?\" in React Native\nreact-native-barcode-scanner \u260560 - Barcode scanner for React Native\nreact-native-haptic-feedback \u260560 - Trigger Haptic Native Feedback on iOS and Android\nreact-native-clipboard \u260558 - React Native component for getting or setting clipboard content\nreact-native-media-clipboard - React Native module for getting images, URLs, and strings from the clipboard\nreact-native-nfc-ios \u260552 - Easy to use CoreNFC for React Native\nreact-native-android-sms \u260548 - A react native android module to list\/send sms.\nreact-native-voip-push-notification \u260548 - iOS prioritized VoIP Push Notification\nreact-native-android-speech \u260547 - A text-to-speech library for Android React Native.\nreact-native-app-info \u260542 - React Native app info and version\nreact-native-icloud-sync \u260541 - A react-native wrapper for syncing with icloud\nreact-native-carrier-info \u260541 - React Native module bridge to obtain information about the user\u2019s home cellular service provider.\nreact-native-sms-android \u260540 - A react-native module for sending a sms message to a phone number.\nreact-native-touch-id-android \u260532 - React Native authentication with the Fingerprint on Android.\nreact-native-heading \u260531 - Get device heading (compass) information on iOS or Android\nreact-native-battery \u260530 - A React Native module that returns the battery level\/status of a device\nreact-native-device-battery \u260530 - Observe battery state changes in your react native application\nreact-native-device-motion \u260529 - iOS device motion wrapper for React Native.\nreact-native-wifi-manager \u260529 - Wifi Connection Manager for React Native on Android\nreact-native-android-sqlite \u260528 - A react native android wrapper for SQLite\nreact-native-search-api \u260527 - The SearchApi module gives you a general React Native interface to interact with the iOS Search API, Core Spotlight.\nreact-native-ssl-pinning \u260520 - React Native SSL pinning using OkHttp 3 on Android, and AFNetworking on iOS\nreact-native-localsearch \u260517 - React Native Module for MapKit Local Search\nrn-secure-storage \u260517 - Secure Storage for React Native (Android & iOS)\nreact-native-contacts-rx \u260514 - react-native-contacts counterpart that include the support of RxJS.\nreact-native-mipush \u260513 - MiPush for React Native\nreact-native-device-angles \u260512 - Get rotation information in degrees (pitch, yaw, roll) - ios\nreact-native-detect-device \u260511 - Detect a device on iOS or android in react-native.\nreact-native-battery-status \u260511 - A battery-status for react-native\nreact-native-system-notification \u260510 - Notification for React Native\nreact-native-home-pressed \u26058 - Listen to home and recent app events for Android\nreact-native-lock-android \u26057 - Auth0 Lock for React Native (Android)\nreact-native-push-with-gcm \u26056 - Register device for GCM push notifications services (supported only for iOS)\nreact-native-device-info-pod \u26053 - Get device information using react-native\nreact-native-sms-retriever - SMS Retriever API (Android).\nreact-native-background-downloader \u260593 - Help you download large files on iOS and Android both in the foreground and most importantly in the background.\n\nWeb\n\nreact-native-webrtc \u26051805 - A WebRTC module for React Native.\nreact-native-webview-bridge \u26051112 - React Native WebView Javascript Bridge\nreact-native-safari-view \u2605387 - A React Native wrapper for Safari View Controller\nreact-native-webview-android \u2605305 - Simple React Native Android module to use Android's WebView inside your app\nreact-native-for-web \u2605247 - A set of classes and react components to make work your react-native app in a browser. (with some limitations obviously)\nreact-native-browser \u2605107 - Full-featured web browser module for React Native apps, based on TOWebViewController\nreact-native-webview-crosswalk \u260588 - Crosswalk's WebView for React Native on Android\nreact-native-turbolinks \u260572 - React Native adapter for building hybrid apps with Turbolinks 5\nreact-native-webintent \u260553 - React native android module to open links in the default browser\nreact-native-web-container \u260536 - A wrapper around the react native WebView to add autoHeight, scrub html, etc\nreact-native-inappbrowser-reborn \u260530 - InAppBrowser for React Native (Android & iOS)\nreact-native-browser-polyfill \u260529 - A collection of polyfills for the react-native Javascript environment.\nreact-native-cookiemanager \u260519 - react-native cookie manager library.\nreact-native-bridgeable-webview \u260516 - A react-native webview with bridge to react-native code\nreact-native-html2native \u26053 - A html render for react-native\nreact-native-webview \u26053 - android webview for react-native\n\nMedia\n\nreact-native-camera \u26056227 - Camera component\nreact-native-video \u26053470 - A Video component for react-native\nreact-native-sound \u26051556 - React Native module for playing sound clips\nreact-native-audio \u2605798 - Record and play back audio in your iOS or Android React Native apps.\nreact-native-camera-kit \u2605701 - Advanced native camera and gallery components and device photos API.\nreact-native-audio-streaming \u2605679 - iOS & Android module to play an audio stream, with background support and media controls \ud83d\udd08\nreact-native-video-processing \u2605712 - Native Video editing\/trimming\/filtering library for React-Native\nreact-native-track-player \u2605441 - A fully fledged audio module created for music apps. Provides audio playback, external media controls, chromecast support and background mode for Android, iOS and Windows.\nreact-native-music-control - React Native module to display Now playing Info on lockscreen and handle control events\nreact-native-camera-roll-picker \u2605312 - A React Native component providing images selection from camera roll\nreact-native-incall-manager \u2605272 - Handling media-routes\/sensors\/events during a audio\/video chat like webrtc\nreact-native-speech \u2605246 - A text-to-speech library for React Native.\nreact-native-screcorder \u2605214 - Capture pictures and record Video with Vine-like tap to record\nreact-native-photos-framework \u2605154 - A modern and comprehensive CameraRoll\/iCloud-library for React Native\nreact-native-audioplayer \u260599 - Small audio player library for react native\nreact-native-player \u260581 - Media player for react-native\nreact-native-vlc-player \u260580 - VLC Player for react-native\nreact-native-volume-slider \u260569 - React Native VolumeView component\nreact-native-sound-demo \u260563 - react-native-sound demo project\nreact-native-interactive-image-gallery \u260560 - A React Native component to display a gallery of images.\nreact-native-color-grabber \u260557 - React native component for finding dominant colors in an image\nreact-native-hue-player \u260543 - Audio Player to offline\/local and online\/streaming audio.\nreact-native-media-meta \u260541 - Get media file metadata in your React Native app\nreact-native-sound-recorder \u260541 - No-hassle Sound Recorder for React Native.\nreact-native-fullscreen-video \u260539 - A full-screen video component on top of react-native-video\nreact-native-android-audio-streaming-aac \u260525 - A react native streaming player\nreact-native-photoeditorsdk \u260524 - React Native module for PhotoEditor SDK (Android & iOS)\nreact-native-videoeditorsdk \u260518 - React Native module for VideoEditor SDK (Android & iOS)\nreact-native-true-sight \u260518 - A cross-platform video player with customizable controls for React Native.\nreact-native-audio-manager \u260515 - Audio player library for react native Android\nreact-native-safe-image \u260513 - Really light React-Native package to handle fallback when image is on error\nreact-native-audio-player \u260512 - A React Native module to play audio on Android\nreact-native-mediaplayer \u260512 - Simple full screen media player for React Native.\nreact-native-simple-sound \u260511 - Start, stop, and pause a sound. iOS only. Derived from react-native-sound\nreact-native-tone \u26057 - Generates simple sine wave, specify a frequency and amplitude. Play sound indefinitely or for a specified time interval (iOS only).\nreact-native-media-capture \u26056 - A media-capture for react-native\nreact-native-android-video \u26058 - Android ExoPlayer Video component for react-native.\nreact-native-airplay-button - Native iOS Airplay button component\n\nStorage\n\nRxDB \u260512797 - A realtime Database for JavaScript Applications.\nWatermelonDB \u26054649 - \ud83c\udf49 Next-gen database for powerful React and React Native apps that scales to 10,000s of records and remains fast.\nrealm \u26053184 - An alternative mobile database to SQLite & key-value stores.\nreact-native-storage \u26052115 - This is a local storage wrapper for both react-native(AsyncStorage) and browser(localStorage). ES6\/babel is needed.\nreact-native-sqlite-storage \u26051508 - SQLite3 bindings for React Native (Android & iOS)\nreact-native-simple-store \u2605731 - A minimalistic wrapper around React Native's AsyncStorage.\nreact-native-store \u2605561 - A simple database base on react-native AsyncStorage.\nreact-native-db-models \u2605168 - Local DB Models for React Native Apps\nreact-native-sqlite-2 \u2605106 - SQLite3 Native Plugin for React Native for both Android and iOS\nreact-native-couchbase-lite \u2605105 - couchbase lite binding for react-native\nreact-native-persistent-job \u260572 - Run async tasks that retry after a crash, connection loss or exception\npouchdb-adapter-react-native-sqlite \u260549 - PouchDB adapter using ReactNative SQLite as its backing store\nreact-native-pouchdb \u260538 - Run pouchdb in React Native!\nreact-native-level-fs \u260520 - fs for react-native using level-filesystem and asyncstorage-down\nreact-native-mongoose \u260517 - A AsyncStorage based mongoose like storage for react-native\n\nBackend\n\nreact-native-fetch-blob \u26052299 - A module integrates network and file system. Supports file stream.\nreactivesearch-native \u26051218 - appbase.io and Elasticsearch UI components for React Native.\nreact-native-meteor \u2605673 - Full Meteor Client\naws-sdk-react-native \u2605650 - AWS SDK for React Native (Official developer preview)\nreact-native-simple-auth \u2605592 - Native social authentication for React Native on iOS\nreact-native-uploader \u2605455 - A React Native module to upload files and camera roll assets. Supports progress notification.\nreact-native-lazyload \u2605342 - lazyload for react native\nreact-native-aws3 \u2605293 - Pure JavaScript React Native library for uploading to AWS S3\nreact-native-background-upload \u2605270 - Upload files in your React Native app even while it's backgrounded. Supports Android and iOS, including iOS Camera Roll assets.\nreact-native-xmpp \u2605256 - XMPP Library for React Native\nreact-native-tcp \u2605199 - node's net API for react-native\nreact-native-udp \u2605147 - node's dgram API for react-native\nreact-native-aws-cognito-js \u2605131 - An adaptation of Amazon Cognito Identity SDK for JavaScript in combination with AWS SDK for JavaScript for React Native.\nfeathers-client \u2605121 - Feathers client that works with React Native, NodeJS and any client framework.\nreact-native-multipeer \u2605117 - Communicate over ad hoc wifi using Multipeer Connectivity\nreact-native-swift-socketio \u2605105 - A react native wrapper for socket.io-client-swift\nreact-native-file-upload \u2605103 - A file upload plugin for react-native\nreact-native-networking \u260599 - react-native module to download and upload files with AFNetworking\nreact-native-s3 \u260580 - A React Native wrapper for AWS iOS\/Android S3 SDK (TransferUtility)\nreact-native-rest-kit \u260565 - A React Native RESTful API kit that use the fetch method\nreact-native-cognito \u260563 - AWS Cognito-based authentication module for React Native.\nreact-native-file-download \u260545 - A simple file download module for react-native\nreact-native-jwt \u260537 - React native compatible JSON web token utility\nreact-native-sync \u260528 - Two way, incremental sync between React Native realmjs database and MySQL, Oracle, MS SQL Server and PostgreSQL\nreact-native-ssdp \u260526 - A React Native fork of the SSDP protocol to discover plug and play devices.\nreact-native-http \u260513 - React native http\nreact-native-async-http \u26055 - React Native component for async-http\nreact-native-nchan \u26053 - Nchan (pub\/sub server) module for React Native\n\nIntegrations\n\nreact-native-wechat \u26052016 - react-native library for wechat app\nreact-native-facebook-login \u26051141 - React Native wrapper for native iOS Facebook SDK login button and manager\nreact-native-google-signin \u26051123 - Google Signin for your react native applications\nreact-native-google-places-autocomplete \u2605846 - Customizable Google Places autocomplete component for iOS and Android React-Native apps\nreact-instantsearch \u2605644 - Lightning-fast search for React and React Native apps, by Algolia\nreact-native-awesome-card-io \u2605331 - A complete and cross-platform card.io component for React Native (iOS and Android)\nreact-native-qq \u2605278 - QQ Login&Share support in React Native.\nreact-native-facebook-account-kit \u2605227 - A Facebook Account Kit SDK wrapper for React Native.\nreact-native-wechat-ios \u2605199 - Wechat SDK for React Native(iOS).\nreact-native-card-io \u2605171 - React Native component for card.io\nreact-native-voximplant \u2605126 - VoxImplant Mobile SDK for embedding voice and video communication into React Native apps.\ninstabug-reactnative \u2605122 - A React Native wrapper for Bug reporting Instabug SDK.\nreact-native-fabric-digits \u2605112 Fabric Digits wrapper for React-Native\nreact-native-braintree \u2605104 - A react native interface for integrating payments using Braintree's v.zero SDK (currently iOS only)\nreact-native-dialogflow \u2605104 - A React-Native bridge for Google's Dialogflow (api.ai)\nreact-native-signalr \u2605100 - SignalR-client for react-native\nreact-native-twilio \u260587 - A React Native wrapper for the Twilio Client SDK.\nreact-native-twilio-programmable-voice \u260586 - A React Native wrapper for the Twilio Programmable Voice SDK.\nreact-native-qqsdk \u260583 - A React Native wrapper around the Tencent QQ SDK for Android and iOS. Provides access to QQ ssoLogin, QQ Sharing, QQ Zone Sharing etc.\nreact-native-braintree-xplat \u260581 - Cross-platform Braintree v.zero module.\nreact-native-android-vitamio \u260572 - React-native component for android Vitamio video player\nreact-native-linkedin-login \u260569 - Linkedin Login for your react native applications\nreact-native-twitter-signin \u2605140 - Login for your react native applications with client Twitter account\nreact-native-spring-scrollview \u260564 - React Native Spring ScrollView V2 is a high performance cross-platform native bounces ScrollView for React Native.(iOS & Android)\nreact-native-instagram-oauth \u260563 - react-native instagram login\nreact-native-digits \u260560 - Digits wrapper to use in React Native\nreact-native-realtimemessaging-android \u260553 - The Realtime Framework Cloud Messaging Pub\/Sub client for React-Native Android\nreact-native-new-relic \u260553 - New Relic event reporting for react-native.\nreact-native-onepassword \u260552 - React Native integration with the OnePassword extension.\nreact-native-level \u260538 - levelup API for react-native AsyncStorage.\nreact-native-instagram-share \u260528 - A react-native interface to share images and videos within instagram (iOS)\nreact-native-braintree-android \u260524 - Braintree's native Drop-in Payment UI for Android\nreact-native-amap \u260521 - A React Native component for building maps with the AMap Android SDK\nreact-native-realtime-pusher \u260519 - React Native module implementing the Pusher Realtime API\nreact-native-conekta \u260517 - Conekta SDK for React Native\nreact-native-fitness \u260517 - A React Native module to interact with Apple Healthkit and Google Fit\nreact-native-woopra \u260514 - Promise based Woopra library for react-native\nreact-native-sinch-verification \u260514 - Sinch verification for react native\nreact-native-testfairy \u260513 - TestFairy for React Native\nreact-native-leancloud \u260510 - a react native LeanCloud component\nreact-native-flurry \u26059 - React Native wrapper for Flurry\nreact-native-realtimemessaging-ios \u26058 - The Realtime Framework Cloud Messaging Pub\/Sub client for React-Native\nreact-native-realtimestorage-ios \u26058 - The Realtime Framework Cloud Storage client for React-Native\nreact-native-axmall-alipay \u26057 - react-native alipay\nreact-native-youtube-oauth \u26057 - react-native interface to login to youtube (iOS)\nreact-native-hawk \u26055 - Hawk wrapper for react-native\nreact-native-sumup \u26055 - A React Native implementation of SumupSDK.\nreact-native-instagram \u26055 - react-native instagram wrapper api (iOS)\nreact-native-realtimestorage-android \u26054 - The Realtime Cloud Storage client for React-Native Android\nreact-native-fbintent \u26054 - A React Native intent for Android Facebook App\nreact-native-heyzap- Heyzap plugin for React Native\nreact-native-launch-navigator - React Native module to launch popular navigation\/ride apps from a single API (Android & iOS)\nreact-native-agora +190 - A React Native Agora WebRTC Wrapper.\nagora-react-native-rtm +5 - A React Native Agora RealTime-Message Cloud Service Wrapper.\nreact-native-intercom *323 - A React Native Intercom Wrapper.\n\nMonetization\n\nreact-native-admob \u2605713 - A react-native component for Google AdMob banners.\nreact-native-stripe-api \u2605155 - A small React Native library for Stripe Rest API\nreact-native-revmob \u260515 - RevMob wrapper for React Native.\nreact-native-google-pay \u26052 - Accept Payments with Google Pay for React Native apps.\nreact-native-apay \u26052 - React Native bridge for Apple Pay\nreact-native-square-in-app-payments \u260518 - Square React Native plugin for In-App Payments SDK.\n\nAnimation\n\nreact-native-animatable \u26055787 - Standard set of easy to use animations and declarative transitions for React Native\nreact-native-interactable \u26054148 - experimental implementation of high performance interactable views in React Native\nreact-native-reanimated \u2605680 - React Native's Animated library reimplemented\nreact-native-spruce \u2605412 - React Native Bridge for Spruce Animation Library\nreact-native-magic-move \u2605402 - Create magical move transitions between scenes in react-native \ud83d\udc30\ud83c\udfa9\u2728 (shared element transitions)\nreact-native-gl-model-view \u2605210 - Display and animate textured Wavefront .OBJ 3D models with 60fps (iOS)\nreact-native-animated-sprite \u2605104 - A feature rich declarative component for animation, tweening, and dragging sprites.\nreact-native-animated-math \u260554 - An Animated API math extension - implements sin, cos, tan and pow as Animated Nodes with full Native Driver support\n\nExtension\n\nReact Native Today Widget \u2605190 - iOS Today Widget Extension in React Native\nReact Native Android Widget Proof of Concept \u2605127 - Android Widget Proof of Concept in React Native\nReact Native Floating Bubble \u260514 - A simple Facebook Chat Head like bubble for react native\n\nOther Platforms\n\nreact-native-web \u260510904 - React Native for Web\nreact-native-macos \u260510453 - React Native for OS X\nreactxp \u26057268 - Library for cross-platform app development\nreact-native-windows \u26055547 - React Native for Universal Windows Platform\n@areslabs\/alita \u2605392 - react native for mini-program(\u5fae\u4fe1\u5c0f\u7a0b\u5e8f)\nreact-native-tvos-controller \u260515 - TvOS remote controller module for react native.\nreact-native-watchkit \u26051 - react native for WatchKit\n\nUtilities\nUseful React Native tooling.\n\nupgrade-helper \u2605398 - \u269b\ufe0f A web interface to support React Native developers in upgrading their apps. Link to tool\nreact-native-debugger \u26054017 - The standalone app for React Native Debugger, with React DevTools \/ Redux DevTools\nhaul \u26052711 - command line tool for developing React Native apps\nrnpm \u26052408 - react native package manager\ngeneract \u26051125 - CLI that generates components based on existing ones no matter how you structure your app\nreact-native-rename \u2605901 - Rename react-native app with just one command\nreact-native-exception-handler \u2605504 \u2013 Avoid silent crash and errors on the production build of your app\nElectrode Native \u2605439 - A platform to ease the integration of React Native components in existing mobile applications.\nRuby React Native (via Opal) \u2605391 - Use Ruby for building React Native apps\nrn-snoopy \u2605329 - Profiling, monitoring and alerting over the React Native bridge. More here.\nreact-native-snippets \u2605249 - A collection of Sublime Text Snippets for react-native\nreact-native-bundle-visualizer \u2605141 - See what's inside your RN bundle; useful for optimizing the bundle size\nMakeicon \u260570 - Generates mobile app icons in all resolutions for both iOS and Android\nAsyncStorage Dev Menu Item \u260567 - Adds an option to your dev menu to log the content of your AsyncStorage.\nrn-diff-purge \u260564 - The easiest way to upgrade React Native versions. You can find diffs for every React Native version, that are created by diffing the previous version with a newly created app in the new version.\nReact Native Actions \u260555 - Run React Native actions from within VSCode.\nrsx \u260529 - An alternative to the react-native CLI tool\nADB Auto Restarter \u26058 - Restart ADB service Automatically in case of crashing while debugging app with device .\nrn-nodeify \u26056 - hack to allow react-native projects to use node core modules\nreact-native-ruler \u26053 - A devtool for measuring pixel dimensions on your React Native screens\nBuilderX - A design tool which writes React Native code for you , Desktop Mac app to replace your traditional UX design tools.\nCodePush - Push code updates to your apps, instantly\nStorybook - UI development environment for your React components\nBugSnag - A tool that logs native & JS errors. Has a free tier. Includes useful data about the user, environment, session, release, etc.\nReact Native Playground - Run React Native apps in your browser via real time simulator\nexponent - Use React Native without XCode (a previewer app + local server infrastructure)\nDeco IDE - React Native IDE with components manager\nreact-hook-hooker - A nifty little HOC to add hooks to your React components.\n\nSeeds\nGet a head start on development with an existing seed.\n\n\ud83d\udd25 Ignite \u26058832 - An unfair start for React Native - Generator CLI for redux\/sagas and more.\nPepperoni \u26054383 - Starter kit for Android & iOS, Redux, Immutable.js, disk-persisted app state\nSnowflake \u26054321 - Android & iOS, Redux, Jest (88% coverage), Immutable, Parse.com\nnative-starter-kit \u26051506 - A Starter Kit for React Native + NativeBase + React Navigation + Redux + CodePush Apps (iOS & Android)\nReact Native Hackathon Starter \u2605732 - React Native Starter Project, great for hackathons or rapid prototyping. Includes tabs, navigation, Redux, React Native Vector Icons, & React Native Elements\nReact Native Boilerplate Typescript - React Native Boilerplate - Redux + Saga + Reselect + redux-persist + react-navigation + TypeScript\nReact Native Meteor Boilerplate \u2605615\n\ud83d\udc19 React Native Boilerplate \u2605551 - React Native boilerplate that promotes a solid architecture via separation of concerns.\nReact Native Seed \u2605504 - A set of React Native Boilerplates to choose from. MobX or Redux for state-management, TypeScript or Flow for static type checking and CRNA or plain React Native for the stack - By the creators of Native Base.\n\ud83d\ude80 React Native Starter \u2605388 - A powerful starter template that bootstraps development of your mobile application.\nReactNativeTS \u2605353 - Boilerplate of a React Native project in Typescript.\nreact-native-starter by Ueno \u2605311 - Professional react-native starter kit with everything you'll ever need to deploy rock solid apps\nreact-native-babel \u2605241\nreact-native-vanilla \u2605185 - \ud83d\ude80\ud83d\ude80\ud83d\ude80 Build universal cross-platform apps with React Native. Includes latest iOS, tvOS, Android, Android TV, Android Wear, Web, Tizen TV, Tizen Watch, LG webOS, macOS\/OSX, Windows and KaiOS platforms\nreact-native-template-typescript \u2605183 - Clean and minimalist React Native template for a quick start with TypeScript.\nreact-native-template-airbnb - Clean and minimalist React Native template for a quick start with Airbnb (Flow, Prettier).\nreact-native-redux \u2605160 - React Native + Redux + Redux Saga\nreact-native-es6-reflux \u2605145\nreact-native-hot-redux-starter \u2605135\nRhinos-app \u260581 - Cross-platform React Native boilerplate (iOS, Android, Web) built on react-native-web.\nreact-native-web-boilerplate \u260572 - A react-native-web stateless hmr boilerplate\nreact-native-boilerplate \u260561 - Simple boilerplate for mobile development using React Native and Redux\nreact-native-easy-starter \u260550 - A React-native starter kit using latest react and react-native 0.60.5, easy-peasy state management, hooks workflow, hermes, codepush ready-to-use custom hooks, react-native-paper, contextapis, theming support and much more (android + ios)\nreact-native-web-workspace \u260558 - A cross platform app with react in a monorepo\n\ud83c\udf5e Baker \u260546 - An opinionated MVP toolkit that helps you build mobile apps crazy fast using React Native and Parse Server\nReact-Native-Starter-Pack \u260540 - React Native 0.34 + React-Redux (w\/ Redux-Storage) + Native Base + Code Push\nreact-native-relay-example \u260538 - React Native working with Relay\nMeteorNative Boilerplate \u260523 - a React Native and Meteor boilerplate with Redux.\nrn-mobx-template \u260517 - React Native with MobX template\nreact-native-boilerplate-chucknorris \u260515 - A boilerplate for React Native + React Navigation + React Native Elements (iOS & Android)\nreact-native-template-super \u26057 - A turbo starter template for react-native + React Navigation + Redux + Redux Persist\nrn-relay-drawer-template \u26054 - React Native working with RNRF, drawer and relay\nreact-native-community-maps \u26053 - Boilerplate app for browsing user-generated photos on a map\nReact Native Starter Kit - React Native starter kit with user onboarding elements, including Firebase Auth and Facebook Login integration.\nAwesome React Native Boilerplates - Effective start for your development with the most popular react-native navigation and UI libraries\nreact-int - A simple way to use react\/react-native with redux and redux-saga.\n\nLibraries\nLibraries \/ SDK type additions for React Native development.\n\nReact Native Elements \u260513599 - a collection of React Native UI Elements and components.\nShoutem UI \u26053802 - a complete UI toolkit for React Native from Shoutem.\nPanza \u2605243 - a collection of stateless, functional, cross-platform ui components for react-native.\nBlankApp UI \u260578 - Highly customizable and theming components for React Native.\nreact-native-fast-app \u260554 - React Native rapid development library.\nReact Native Common \u260549 - UI & API Components Library for React Native.\n\nOpen Source Apps\nOpen source React Native apps and other examples.\n\nf8app \u260513070 - Official F8 (Facebook Developer Conference) app of 2017. See blog post.\n30-days-of-react-native \u26055192 - 30 days of React Native examples (inspired by 30DaysofSwift)\nreact-native-nw-react-calculator \u26054624 - A mobile, desktop and website App with the same code\nGitPoint \u26053833 - A mobile GitHub client for both iOS and Android.\nHacker News (iOS & Android) \u26053460\nreading \u26052947 - Reading App Write In React-Native.\nStatus.im \u26052470 - Ethereum client.\nGitHub Popular \u26052452 - This is a GitHub most popular repositories viewer with React Native.\nDribbble React Native \u26051927\nreact-native-gitfeed \u26051709 - Yet another Github client written with react-native(iOS & android)\nFinance React Native \u26051680 - iOS's stocks app clone written in React Native for demo purpose.\nQuirk \ud83d\udc19 \u2605965 - Cognitive Behavioral Therapy for iOS and Android.\nTaskRabbit's Sample App \u2605802 - a testing ground for Task Rabbit's app making\nReact Weather \u2605702 - A simple weather app built with React Native\nBoostnote \u2605630 - Boostnote: open source note taking.\nreact-native-sudoku \u2605540 - a sudoku game written in React Native\nreact-native-hiapp \u2605513 - A simple and Twitter like demo app written in react-native\nReact Native Netflix \u2605489 - A Netflix-like app.\nwhat the thing? \u2605430 - Point camera at things to learn how to say them in a different language.\nreact-native-basketball \u2605425 - a clone of the Facebook Basketball game\nSurmon.me.native \u2605406 A react-native applaction for surmon.me\nAn example React Native project for client login authentication \u2605402\nGitterMobile \u2605387 - Gitter (chat for github) client for iOS and Android\nReactNativeRedditReader \u2605345\nAssemblies \u2605322 - a Meetup clone\nDuckDuckGo App (Unofficial) \u2605273\nZiliun React Native \u2605266 - Wordpress based article reader built with react native\nLuno \u2605266 - A ClojureScript React Native app demonstration\nReactNativeHackerNews \u2605241\niOS Conference App made with React Native \u2605234\nMagicMirror \u2605232\nRedux Demo \u2605226 - Minimal implement of redux counter example on ReactNative iOS and Android\nReact Native Embedded App \u2605218 -A collection of examples for using React Native in an existing iOS application\nReact Native Example, Geo and Location \u2605216\nuestc-bbs-react-native \u2605216 - An iOS client for http:\/\/bbs.uestc.edu.cn\/ written in React Native with Redux\nSh**t! I Smoke \u2605209 - Know how many cigarettes you smoke based on the pollution of your location.\nPxView \u2605198 - An unofficial Pixiv app client for Android and iOS\nBBC News (Unofficial) \u2605187 - a BBC news app\nHackerBuzz \u2605179 - a Hacker News reader.\nVecihi App \u2605170 \u2013 Build your own photo sharing app.\nRocket.Chat \u2605161 - Open Source Team Communication\nHackerWeb \u2605158 - A simply readable Hacker News web app for iOS & Android.\nBuyscreen sample \u2605151\nNewsWatch video viewer \u2605150\nYouTrack Mobile \u2605136 \u2013 a client for YouTrack \u2013 issue tracker from JetBrains.\nndash \u2605129 - npm dashboard.\nLook Lock \u2605126 - An app for showing photos without worries.\nKakapo - ambient sound mixer \u2605126\nAppointments \u2605116 - Full-fledged ReactNative App for Booking Appointments\nAlt\/Flux Demo \u2605106\nButtercup Mobile \u2605103 - Mobile password manager\nInsta Snap \u2605102 - Image Sharing App\nlive translator \u260594 - An app that translates in real time what you see from your mobile.\nFinance MacOS React Native \u260588 - iOS's Stocks App clone written for MacOS with Touch Bar support. Data is pulled from Yahoo Finance.\nNBAreact \u260588\nUrban Dictionary \u260583 - Mobile implementation of the popular Urban Dictionary website.\nASOS \u260583 - E-commerce app for ASOS (clone)\nReddit made with React Native and Redux \u260581\nreact-native-redux-facebook \u260579 - A simple React Redux Facebook authentication demo app.\nHekla for Hacker News \u260577 - Hackernews client with TypeScript, mobx-state-tree, native navigation and css modules.\nQRCode App \u260574 - application for scanning and generating QR codes.\nNearby Live \u260572 - An unofficial NearbyLive app for Android and iOS\nSoundcloudMboX \u260567 SoundcloudMobX is the Soundcloud for iOS, Build with React-Native and MobX.\nNative iOS font list \u260560\nReact Native Chromecast App \u260556\nMoeFM \u260554 - A light MusicPlayer build with React Native & Redux for both Android and iOS.\niTunesConnect \u260553 - Unofficial iTunes Connect App\nSequent \u260552 - short-term memory training game (W\/ Redux).\nAudienceNetworkReactNative \u260550 - Facebook Audience Network Performance Tool.\nrndrawer-implemented-rnrouter \u260550 - A react-native-drawer implemented example and scaffolding for react-native-router-flux\nMagento 2 Mobile App \u260547 - Magento 2.x mobile app built with React Native\niOS app that transcript your voice with IBM Watson Cloud \u260541\nSplitcloud \u260535 - Share listening to two songs at the same time from Soundcloud (by splitting right\/left channels).\nTodo List \u260531 - Todo-List app using SwipeView with ES6 standards for iOS and Android.\nParamap \u260530 - Accessability map. React-native with Redux and Firebase. iOS and Android.\nConfreaks \u260529\nVocab React Native \u260527 - Thai Vocabulary Learning App\nPremier League \u260525\nRoxie \u260523 - Sound processing and bluetooth hardware control.\nRoverz \u260521 - A native mobile chat client library for Rocket.Chat on both iOS and Android.\nText Blast \u260518 - iOS client for MMS text blasting app with analogous ionic version for comparison\nNewYorkTimesTopStories \u260514 - Read Topstories of NewYorkTimes using its api written for android in react-native.\nQuick-Sample \u260514 - A small and simple example app with navigation, data persistence, redux, listview and animation.\niGap Plus \u260513 - iGap+ is a cross-platform messaging application (Currently Android , iOS and Windows UWP) and has been created using all latest modern technologies. iGap+ is designed to easily support additional platforms like web, macOS and linux.\nPosters_Galore_Android \u260511 - An experimental Android application using Redux and a REST API\nreact-native-medium-clap-animation \u260511 - Medium Clap Animation in React Native\nHupuApp \u26059 - A Third-party Hupu App (http:\/\/bbs.hupu.com\/) client implemented using React Native (Android and iOS).\nreact-native-uber-clone \u26059 - Uber UI Clone with animations in react native\nCommit Strip (Unofficial) \u26058 - A CommitStrip.com reader built in React Native.\nreact-native-otello \u26056 - a reversi game written in React Native\nGitHub Jobs Search App (Unofficial) \u26056 - A GitHub Jobs Search App built in React Native.\nMinimal Quotes \u26056 - Mobile app that throws you random quotes in a super clean minimal version.\nHello Bemans \u26055 - Health Trainer Connection App (Android Version)\nRNV2ex \u26055 - react-native for v2ex\nRenote \u26054 - A simple react-native example app for make notes.\nManyverse \u2013 Social network off the grid (a Scuttlebutt Android client)\nBristol Pound - An app for the Bristol Pound, a UK-based local currency.\nReact Native Showcase\nInstagram clone - an Instagram clone\nJoplin - A note taking app for desktop, CLI, and mobile (linked here is the mobile app).\nCat-or-dog - Simple game with drag'n'drops and animations.\nForex Rates - Foreign exchange rates. currency rate converter. Historical exchange rates. Android and iOS.\nSmog Alert App \u2013 provides real-time air pollution data all around the world and shows nearby polluters.\nAudio Book App \u2013 Completed Audiobook app with some cool animations.\nFastBuy - App to manage the products from a dummy Store (built with React Native and Redux).\nHydropuzzle - Stylish puzzle adventure game.\nGithub-Gist - React native mobile application for github gist\nLyrics King - Minimalist and stylish lyrics search app.\nTensorFlow.js Starter - TensorFlow.js starter app using MobileNet to predict image class. Blog post for additional context.\nArt Museum - Browse through the endless Harvard's Art Museum collection.\nNMF.earth \u260514 - Calculate, understand and reduce your carbon footprint. Available for Android and iOS, using Expo, Redux Toolkit and Typescript.\n\nFrameworks\n\nNativeBase \u260510520 - builds a layer on top of React Native that provides you with basic set of components for mobile application development\nTeaset \u26051575 - A UI library for react native, provides 20+ pure JS(ES6) components, focusing on content display and action control.\nAwesome React Native Meteor \u2605152 - An awesome list of resources for using Meteor and React Native together\nfirst-born \u2605106 - A UI framework with pre-built components that render separately according to the underlying mobile platform.\nReact Native Diagnose \u260513 - A framework to test a React Native app during runtime and production\n\nTutorials\nWalkthroughs and tutorials that help you learn React Native.\n\nFully-immersive, hands-on, and fun learning experience for React Native \u2605825\nReact Native with Django backend \u260512\nSetting up background tasks that run periodically when app is closed in React Native\nAnimate React Native UI Elements\nBuild a streaming audio app with React Native\nBuilding a Calculator for Android and iOS with React Native\nBuilding Custom React Native Components From Scratch\nDeploying React Native using Fastlane\nEnabling Live Reload\nFacebook's F8 App Walkthrough Tutorial: React Native, Redux, Relay, Flow, Jest\nFacebook Login With React Native\nIntegrating Parse and React Native for iOS\nIntroducing React Native (on Ray Wenderlich's)\nLeverage Existing iOS Views In Your React Native App\nOfficial React Native tutorial\nReact Native Periscope Hearts Animation\nReact Native Youtube Animated Video Slide\nReact Native and Socket.io\nReact-Native Animated with React-Art - Firework Tap To Shoot\nReact-native Animated API Basic Example\nReact-native Animated API with PanResponder\nReact-native Animated ScrollView Row Swipe Actions\nReact-native press and hold button actions\nReact Native Express\nSimple React Native forms with redux-form, immutable.js and styled-components\nA Mini-Course on React Native Flexbox\nThe beauty of react-native -Build a stunning wallpaper app\nAdding and removing custom fonts in React Native IOS Android\nAdding Custom Fonts to A React Native Application\nBuilding a Minimalist Weather App with React Native and Expo\nGetting Started with Lottie, React Native and Expo\nHow to integrate Redux into your application with React Native and Expo\nReact Native for Designers\nStart React Native - Animation tutorial series\n\nBooks\nBooks - free and commercial (but only good ones).\n\nProgramming React Native - (Free) An in-depth React Native book that you should read after you've done a couple tutorials of the many out there.\nReact Native Animation Book - (Free) React Native Animation.\n\nBooks - for sale.\n\nReact Native In Action - Learn how to build applications using React Native from the ground up.\nReact Native - Building Mobile Apps with JavaScript - Your go-to guide to creating truly native iOS and Android mobile applications using React and JavaScript.\nFullstack React Native - The up-to-date, in-depth, complete guide to React Native.\n\nVideos\nAssortment of conference and training videos.\nTalks\n\nChain React 2019: React Native Only Playlist\nawesome-react-native-talks \u2605312 - A curated list of talks about React Native or topics related to React Native.\nActually Building Things In React Native , Jani Ev\u00e4kallio, Futurice\nUsing Redux, Jonas Ohlsson, State\nNative Testing\nReactotron\nReact Native In The Wild - Bonnie Eisenman\nChain React 2018: Playlist\nChain React 2017: Playlist\nReact Conf 2015: Introducing React Native\nReact Conf 2015: A Deep Dive into React Native\nF8 2015: React Native and Relay\n\nTraining & tutorials\n\nAwesome React Native Education \u2605455\nReact Native training \u2605238\nLet's build a React Native app in 20 minutes and Gist\nMario D\u00edez Channel - Youtube channel in spanish about with a series of videos talking about react native\nReact Native Basics: Build a Currency Converter - (Free) A multi-hour in-depth video course showing you how to build apps with React Native.\nReact Native in Arabic: Build a newspaper app - (Free) A simple to follow video series in Arabic showing you how to build a newspaper app with React Native.\nBuilding Youtube UI in 30 Minutes - A quick tutorial showing how to build Youtube Mobile app's UI using React Native. This tutorial helps in getting started with coding designs from scratch.\nAdding Authentication to a React Native Project - This tutorial shows how to easily add authentication to a React Native application using AWS Mobile Hub\nGenerate React Native Forms with tcomb-form-native\nBuild a chat app with React Native\nEgghead.io: React Native Fundamentals\nPluralsight.com: Build iOS Apps with React Native\nUdemy.com: Build apps with React Native\nUdemy.com: Create Your First React Native App - Introduction to building a React Native app and learning the foundational pieces.\nHandlebarlabs.com: Learn React Native + Meteor - Comprehensive course & community on building an application with React Native and Meteor.\nUdemy.com: Automate Your React Native Releases with Fastlane & Bitrise - Learn step-by-step how to release your React Native applications into Stores automatically by using Fastlane & Bitrise.\n\nBlogs\n\nReact Native Training\nUse React Native Blog\nFacebook Code Blog\nThe Bakery - JavaScript, React, React Native posts.\nChristopher Chedeau aka Vjeux\nBrent Vatne\nKyle Corbitt - Cofounder at Emberall.\nMade with React - Showcase of apps using React or React Native.\nSpencer Carli\nOfficial React Native Blog\nreactnative.gallery - Show and tell for React Native developers\nRed Shift - Infinite Red - Lots of React Native content\nIdeamotive's Blog - Blog about React Native\n\nNewsletters\n\nReact Native Now\nReact Native Newsletter\n\nReleases\n\nStable: 0.57.0\nNext: latest\nAll Versions\nAll Changelogs\nUpgrading Versions\nRelease Process\n\n","77":"Phaser - HTML5 Game Framework\n\n\n\n\n\nPhaser is a fast, free, and fun open source HTML5 game framework that offers WebGL and Canvas rendering across desktop and mobile web browsers. Games can be compiled to iOS, Android and native apps by using 3rd party tools. You can use JavaScript or TypeScript for development.\nAlong with the fantastic open source community, Phaser is actively developed and maintained by Photon Storm. As a result of rapid support, and a developer friendly API, Phaser is currently one of the most starred game frameworks on GitHub.\nThousands of developers from indie and multi-national digital agencies, and universities worldwide use Phaser. You can take a look at their incredible games.\nVisit: The Phaser website and follow on Twitter (#phaserjs)\nLearn: API Docs, Support Forum and StackOverflow\nCode: 1700+ Examples (source available in this repo)\nRead: The Phaser World Newsletter\nDiscord: Join us on Discord\nExtend: With Phaser Plugins\nBe awesome: Support the future of Phaser\nGrab the source and join the fun!\n\n\n\n13th July 2020\n\nI'm pleased to announce the immediate availability of Phaser 3.24. This release is primarily a maintenance release, with the focus mostly on bug fixes and updates. Even so, there are over 70 updates in this version alone. From improvements to the Arcade Physics system, to new Tween events and the ability to chain multiple animations, to some important fixes. If you're currently using 3.23 then we recommend this upgrade. As usual, I'd like to send my thanks to the Phaser community for their help in both reporting issues and submitting pull requests to fix them.\nSo, please do spend some time digging through the Change Log. I assure you, it's worth while :)\nI'd like to send a massive thank-you to everyone who supports Phaser on Patreon (and now even GitHub Sponsors, too!) Your continued backing keeps allowing me to work on Phaser full-time and this great new release is the very real result of that. If you've ever considered becoming a backer, now is the perfect time!\nAs well as all of these updates, development has been progressing rapidly on Phaser 4. If you'd like to stay abreast of developments then I'm now publishing them to the Phaser Patreon. Here you can find details about the latest developments and concepts behind Phaser 4.\nYou can also follow Phaser on Twitter and chat with fellow Phaser devs in our Discord.\nPhaser 3 wouldn't have been possible without the fantastic support of the community and Patreon. Thank you to everyone who supports our work, who shares our belief in the future of HTML5 gaming, and Phaser's role in that.\nHappy coding everyone!\nCheers,\nRich - @photonstorm\n\n\nBecause Phaser is an open source project, we cannot charge for it in the same way as traditional retail software. What's more, we don't ever want to. After all, it's built on, and was born from, open web standards. It's part of our manifesto that the core framework will always be free, even if you use it commercially, as many of you do.\nYou may not realize it, but because of this, we rely 100% on community backing to fund development.\nThose funds allow Phaser to improve, and when it improves, everyone involved benefits. Your support helps secure a constant cycle of updates, fixes, new features and planning for the future.\nThere are other benefits to backing Phaser, too:\n\nWe use Patreon to manage the backing and you can support Phaser from $1 per month. The amount you pledge is entirely up to you and can be changed as often as you like. Patreon renews monthly, just like Netflix. You can, of course, cancel at any point. Tears will be shed on this end, but that's not your concern.\nExtra special thanks to the following companies whose support makes Phaser possible:\n\nCerebral Fix\nCrossInstall\nFacebook\nGame Distribution\nGameCommerce\nMozilla\nTexture Packer\nTwilio\nPoki\nCrazyGames\nLagged\n\n\n\n\nPhaser 3 is available via GitHub, npm and CDNs:\n\nClone the git repository via https, ssh or with the GitHub Windows or Mac clients.\nDownload as zip\nDownload the build files: phaser.js and phaser.min.js\n\nNPM\nInstall via npm:\nnpm install phaser\nCDN\n\nPhaser is on jsDelivr which is a \"super-fast CDN for developers\". Include the following in your html:\n<script src=\"\/\/cdn.jsdelivr.net\/npm\/phaser@3.24.0\/dist\/phaser.js\"><\/script>\nor the minified version:\n<script src=\"\/\/cdn.jsdelivr.net\/npm\/phaser@3.24.0\/dist\/phaser.min.js\"><\/script>\nAPI Documentation\nGo to https:\/\/photonstorm.github.io\/phaser3-docs\/index.html to read the docs online. Use the drop-down menus at the top to navigate the namespaces, classes and Game Objects lists.\nOr, if you wish to run the docs locally you can checkout the phaser3-docs repository and then read the documentation by pointing your browser to the docs\/ folder.\nThe documentation for Phaser 3 is an on-going project. Please help us by searching the Phaser code for any instance of the string [description] and then replacing it with some documentation.\nTypeScript Definitions\nThe TypeScript definitions can be found inside the types folder. They are also referenced in the types entry in package.json.\nDepending on your project, you may need to add the following to your tsconfig.json file:\n\"typeRoots\": [\n    \".\/node_modules\/phaser\/types\"\n],\n\"types\": [\n    \"Phaser\"\n]\nWe recently published a new Phaser 3 TypeScript Project Template, which you can use to get started with if you like.\nThe TS defs are automatically generated from the JSDoc comments found in the Phaser source code. If you wish to help refine them then you must edit the Phaser JSDoc blocks directly, not the defs file. You can find more details about the parser we built in the scripts\/tsgen folder.\nWebpack\nWe use Webpack to build Phaser and we take advantage of its conditional build flag feature to handle renderer swapping. If you wish to use Webpack with Phaser then please use our Phaser 3 Project Template as it's already set-up to handle the build conditions Phaser needs. Recent changes to our build steps mean you should now be able to use any other packager, like Parcel, without any config changes.\nLicense\nPhaser is released under the MIT License.\n\n\n\nTutorials and guides on Phaser 3 development are being published every week.\n\nGetting Started with Phaser 3 (useful if you are completely new to Phaser)\nMaking your first Phaser 3 Game\nThe Complete Phaser 3 Game Development course contains over 15 hours of videos covering all kinds of important topics.\nPlus, there are over 700 Phaser tutorials listed on the official website.\n\nWe've 3 tutorials related specifically to creating Facebook Instant Games with Phaser:\n\nGetting Started with Facebook Instant Games\nFacebook Instant Games Leaderboards Tutorial\nDisplaying Ads in your Instant Games\n\nSource Code Examples\nDuring our development of Phaser 3, we created hundreds of examples with the full source code and assets ready available. These examples are now fully integrated into the Phaser website. You can also browse them on Phaser 3 Labs via a more advanced interface, or clone the examples repo. We are constantly adding to and refining these examples.\nHuge list of Phaser 3 Plugins\nSuper community member RexRainbow has been publishing Phaser 3 content for years, building up an impressive catalogue in that time. You'll find loads of plugins, from UI controls such as text input boxes, to Firebase support, Finite State Machines and lots more. As well as the plugins there is also a comprehensive set of 'Notes' about Phaser 3, going into great detail about how the various systems work. It's an invaluable resource and well worth checking out at https:\/\/rexrainbow.github.io\nCreate Your First Phaser 3 Example\nCreate an index.html page locally and paste the following code into it:\n<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"https:\/\/cdn.jsdelivr.net\/npm\/phaser@3.24.0\/dist\/phaser-arcade-physics.min.js\"><\/script> \n<\/head>\n<body>\n\n    <script><\/script>\n\n<\/body>\n<\/html>\nThis is a standard empty webpage. You'll notice there's a script tag that is pulling in a build of Phaser 3, but otherwise this webpage doesn't do anything yet. Now let's set-up the game config. Paste the following between the <script><\/script> tags:\nvar config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 600,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { y: 200 }\n        }\n    },\n    scene: {\n        preload: preload,\n        create: create\n    }\n};\nconfig is a pretty standard Phaser 3 Game Configuration object. We tell config to use the WebGL renderer if it can, set the canvas to a size of 800x600 pixels, enable Arcade Physics, and finally call the preload and create functions. preload and create have not been implemented yet, so if you run this JavaScript code, you will have an error. Add the following after config:\nvar game = new Phaser.Game(config);\n\nfunction preload ()\n{\n    this.load.setBaseURL('http:\/\/labs.phaser.io');\n\n    this.load.image('sky', 'assets\/skies\/space3.png');\n    this.load.image('logo', 'assets\/sprites\/phaser3-logo.png');\n    this.load.image('red', 'assets\/particles\/red.png');\n}\n\nfunction create ()\n{\n}\ngame is a Phaser Game instance that uses our configuration object config. We also add function definitions for preload and create. The preload function helps you easily load assets into your game. In preload, we set the Base URL to be the Phaser server and load 3 PNG files.\nThe create function is empty, so it's time to fill it in:\nfunction create ()\n{\n    this.add.image(400, 300, 'sky');\n\n    var particles = this.add.particles('red');\n\n    var emitter = particles.createEmitter({\n        speed: 100,\n        scale: { start: 1, end: 0 },\n        blendMode: 'ADD'\n    });\n\n    var logo = this.physics.add.image(400, 100, 'logo');\n\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n\n    emitter.startFollow(logo);\n}\nHere we add a sky image into the game and create a Particle Emitter. The scale value means that the particles will initially be large and will shrink to nothing as their lifespan progresses.\nAfter creating the emitter, we add a logo image called logo. Since logo is a Physics Image, logo is given a physics body by default. We set some properties for logo: velocity, bounce (or restitution), and collision with the world bounds. These properties will make our logo bounce around the screen. Finally, we tell the particle emitter to follow the logo - so as the logo moves, the particles will flow from it.\nRun it in your browser and you'll see the following:\n\n(Got an error? Here's the full code)\nThis is a tiny example, and there are hundreds more for you to explore, but hopefully it shows how expressive and quick Phaser is to use. With just a few easily readable lines of code, we've got something pretty impressive up on screen!\n\nOurcade have published two great Phaser 3 books. They'll take you from getting set-up, through to finishing your first game using modern JavaScript or TypeScript and they're both completely free! They also publish a huge range of quality tutorials and videos, so be sure to check out their site every week.\n\nThere are both plain and minified compiled versions of Phaser in the dist folder of the repository. The plain version is for use during development, and the minified version is for production use. You can also create your own builds.\nCustom Builds\nPhaser 3 is built using Webpack and we take advantage of the Webpack definePlugin feature to allow for conditional building of the Canvas and WebGL renderers and extra plugins. You can custom the build process to only include the features you require. Doing so can cut the main build file size down to just 70KB.\nRead our comprehensive guide on creating Custom Builds of Phaser 3 for full details.\nBuilding from Source\nIf you wish to build Phaser 3 from source, ensure you have the required packages by cloning the repository and then running npm install on your source directory.\nYou can then run webpack to create a development build in the build folder which includes source maps for local testing. You can also npm run dist to create a minified packaged build in the dist folder. For a list of all commands available use npm run help.\n\n\nChange Log\nVersion 3.24 - Rem - 13th July 2020\nArcade Physics New Features, Updates and Fixes\n\nWhen colliding physics groups with the search tree enabled, there was an unnecessary intersection test for each body returned by the search (thanks @samme)\nWhen doing an overlap collision, there was an unnecessary intersection test for each pair of overlapping bodies (thanks @samme)\nSprite vs. Static Group collision tests now always use the static tree (thanks @samme)\nFixed a bug where if you added a static body to a sprite with scale \u2260 1, the body position was incorrect (thanks @samme)\nIf you passed in an array of children when creating a Physics Group, they didn't receive bodies. Fix #5152 (thanks @samme)\nNew types allow for better docs \/ TypeScript defs especially in the Factory functions: ArcadePhysicsCallback, GameObjectWithBody, GameObjectWithDynamicBody, GameObjectWithStaticBody, ImageWithDynamicBody, ImageWithStaticBody, SpriteWithDynamicBody and SpriteWithStaticBody. Fix #4994 (thanks @samme @gnesher)\nBody.updateFromGameObject is a new method that extracts the relevant code from preUpdate, allowing you to read the body's new position and center immediately, before the next physics step. It also lets refreshBody work for dynamic bodies, where previously it would error (thanks @samme)\nMomentum exchange wasn't working correctly vs. immovable bodies. The movable body tended to stop. Fix #4770 (thanks @samme)\nThe Body mass was decreasing the inertia instead of increasing it. Fix #4770 (thanks @samme)\nThe separation vector seemed to be incorrect, causing the slip \/ slide collisions. The separation is now correct for circle\u2013circle collisions (although not fully for circle\u2013rectangle collisions), part fix #4770 (thanks @samme)\nThe Arcade Body delta was incorrectly calculated on bodies created during the update step, causing the position to be off. Fix #5204 (thanks @zackexplosion @samme)\nArcade.Components.Size.setBodySize is a new method available on Arcade Physics Game Objects that allows you to set the body size. This replaces setSize which is now deprecated. Fix #4786 (thanks @wingyplus)\n\nNew Features\n\nThe Animation component has a new property nextAnimsQueue which allows you to sequence Sprite animations to play in order, i.e: this.mole.anims.play('digging').anims.chain('lifting').anims.chain('looking').anims.chain('lowering'); (thanks @tgroborsch)\nGroup.setActive is a new method that will set the active state of a Group, just like it does on other Game Objects (thanks @samme)\nGroup.setName is a new method that will set the name property of a Group, just like it does on other Game Objects (thanks @samme)\nTWEEN_STOP is a new event dispatched by a Tween when it stops playback (thanks @samme @RollinSafary)\nYou can now specify an onStop callback when creating a Tween as part of the tween config, which is invoked when a Tween stops playback (thanks @samme @RollinSafary)\nPreviously, if you created a timeline and passed no tweens in the config, the timeline would be created but all config properties were ignored. Now the timeline's own properties (completeDelay, loop, loopDelay, useFrames, onStart, onUpdate, onLoop, onYoyo, onComplete, etc.) are set from the config properly (thanks @samme)\nTextStyle.wordWrapWidth lets you set the maximum width of a line of text (thanks @mikewesthad)\nTextStyle.wordWrapCallback is a custom function that will is responsible for wrapping the text (thanks @mikewesthad)\nTextStyle.wordWrapCallbackScope is the scope that will be applied when the wordWrapCallback is invoked (thanks @mikewesthad)\nTextStyle.wordWrapUseAdvanced controls whether or not to use the advanced wrapping algorithm (thanks @mikewesthad)\nKeyboardPlugin.removeAllKeys is a new method that allows you to automatically remove all Key instances that the plugin has created, making house-keeping a little easier (thanks @samme)\nMath.RotateTo is a new function that will position a point at the given angle and distance (thanks @samme)\nDisplay.Bounds.GetBounds is a new function that will return the un-transformed bounds of the given Game Object as a Rectangle (thanks @samme)\n\nUpdates\n\nThe Pointer.dragStartX\/YGlobal and Pointer.dragX\/Y values are now populated from the worldX\/Y, which means using those values directly in Input Drag callbacks will now work when the Camera is zoomed. Fix #4755 (thanks @braindx)\nThe browser field has been added to the Phaser package.json pointing to the dist\/phaser.js umd build (thanks @FredKSchott)\nCalling TimeStep.wake() while the loop is running will now cause nothing to happen, rather than sleeping and then waking again (thanks @samme)\nContainer.getBounds will no longer set the temp rect bounds to the first child of the Container by default (which would error if the child had no bounds, like a Graphics object) and instead sets it as it iterates the children (thanks @blopa)\nFile.state will now be set to the FILE_LOADING state while loading and FILE_LOADED after loading (thanks @samme)\nBaseCamera.cull now moves some of its calculations outside of the cull loop to speed it up (thanks @samme)\nSceneManager.createSceneFromInstance had a small refactor to avoid a pointless condition (thanks @samme)\n\nBug Fixes\n\nFixed a TypeError warning when importing JSON objects directly to the url argument of any of the Loader filetypes. Fix #5189 (thanks @awweather @samme)\nThe NOOP function was incorrectly imported by the Mouse and Keyboard Manager. Fix #5170 (thanks @samme @gregolai)\nWhen Audio files failed to decode on loading, they would always show 'undefined' as the key in the error log, now they show the actual key (thanks @samme)\nWhen the Sprite Sheet parser results in zero frames, the warning will now tell you the texture name that caused it (thanks @samme)\nKeyboardPlugin.checkDown didn't set the duration to zero if the parameter was omitted, causing it to always return false. Fix #5146 (thanks @lozzajp)\nIf you passed in an array of children when creating a Group, they were not added and removed correctly. Fix #5151 (thanks @samme)\nWhen using HTML5 Audio with pauseOnBlur (the default), if you play a sound, schedule stopping the sound (e.g., timer, tween complete callback), leave the page, and return to the page, the sound stop() will error (thanks @samme)\nUsing a Render Texture when you're also using the headless renderer would cause an error (thanks @samme)\nEllipse.setWidth would incorrectly set the xRadius to the diameter (thanks @rexrainbow)\nEllipse.setHeight would incorrectly set the yRadius to the diameter (thanks @rexrainbow)\nWhen specifically setting the parent property in the Game Config to null the canvas was appended to the document body, when it should have been ignored (allowing you to add it to the dom directly). Fix #5191 (thanks @MerganThePirate)\nContainers will now apply nested masks correctly when using the Canvas Renderer specifically (thanks @scott20145)\nCalling Scale.startFullScreen would fail in Safari on Mac OS, throwing a fullscreenfailed error. It now triggers fullscreen mode correctly, as on other browsers. Fix #5143 (thanks @samme @novaknole)\nCalling setCrop on a Matter Physics Sprite would throw a TypeError, but will now crop correctly. Not that it only crops the texture, the body is unaffected. Fix #5211 (thanks @MatthewRorke @samme)\nThe Static Tilemap Layer would ignore the layer rotation and parent transform when using WebGL (but worked in Canvas). Both modes now work in the same manner (thanks @cruzdanilo)\nCalling getTextBounds on a BitmapText object would return the incorrect values if the origin had been changed, but the text itself had not, as it was using out of date dimensions. Changing the origin now automatically triggers BitmapText to be dirty, forcing the bounds to be refreshed. Fix #5121 (thanks @thenonamezz)\nThe ISO Triangle shape would skip rendering the left side of the first triangle in the batch. It now renders all ISO Triangles correctly. Fix #5164 (thanks @mattjennings)\n\nExamples, Documentation and TypeScript\nMy thanks to the following for helping with the Phaser 3 Examples, Docs and TypeScript definitions, either by reporting errors, fixing them or helping author the docs:\n@samme @SanderVanhove @SirJosh3917 @mooreInteractive @A-312 @lozzajp @mikewesthad @j-waters @futuremarc\nPlease see the complete Change Log for previous releases.\n\n\nThe Contributors Guide contains full details on how to help with Phaser development. The main points are:\n\n\nFound a bug? Report it on GitHub Issues and include a code sample. Please state which version of Phaser you are using! This is vitally important.\n\n\nBefore submitting a Pull Request run your code through ES Lint using our config and respect our Editor Config.\n\n\nBefore contributing read the code of conduct.\n\n\nWritten something cool in Phaser? Please tell us about it in the forum, or email support@phaser.io\n\nPhaser is a Photon Storm production.\n\nCreated by Richard Davey. Powered by coffee, anime, pixels and love.\nThe Phaser logo and characters are \u00a9 2020 Photon Storm Limited.\nAll rights reserved.\n\"Above all, video games are meant to be just one thing: fun. Fun for everyone.\" - Satoru Iwata\n","78":"Note: This branch and README covers the upcoming 2.0 release. View 1.x docs here.\n\nQuill Rich Text Editor\n\n\n\n\n\nQuickstart\n  \u2022\n  Documentation\n  \u2022\n  Development\n  \u2022\n  Contributing\n  \u2022\n  Interactive Playground\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuill is a modern rich text editor built for compatibility and extensibility. It was created by Jason Chen and Byron Milligan and actively maintained by Slab.\nTo get started, check out https:\/\/quilljs.com\/ for documentation, guides, and live demos!\nQuickstart\nInstantiate a new Quill object with a css selector for the div that should become the editor.\n<!-- Include Quill stylesheet -->\n<link href=\"https:\/\/cdn.quilljs.com\/1.0.0\/quill.snow.css\" rel=\"stylesheet\">\n\n<!-- Create the toolbar container -->\n<div id=\"toolbar\">\n  <button class=\"ql-bold\">Bold<\/button>\n  <button class=\"ql-italic\">Italic<\/button>\n<\/div>\n\n<!-- Create the editor container -->\n<div id=\"editor\">\n  <p>Hello World!<\/p>\n<\/div>\n\n<!-- Include the Quill library -->\n<script src=\"https:\/\/cdn.quilljs.com\/1.0.0\/quill.js\"><\/script>\n\n<!-- Initialize Quill editor -->\n<script>\n  var editor = new Quill('#editor', {\n    modules: { toolbar: '#toolbar' },\n    theme: 'snow'\n  });\n<\/script>\nTake a look at the Quill website for more documentation, guides and live playground!\nDownload\n\nnpm - npm install quill\ntar - https:\/\/github.com\/quilljs\/quill\/releases\n\nCDN\n<!-- Main Quill library -->\n<script src=\"\/\/cdn.quilljs.com\/1.0.0\/quill.js\"><\/script>\n<script src=\"\/\/cdn.quilljs.com\/1.0.0\/quill.min.js\"><\/script>\n\n<!-- Theme included stylesheets -->\n<link href=\"\/\/cdn.quilljs.com\/1.0.0\/quill.snow.css\" rel=\"stylesheet\">\n<link href=\"\/\/cdn.quilljs.com\/1.0.0\/quill.bubble.css\" rel=\"stylesheet\">\n\n<!-- Core build with no theme, formatting, non-essential modules -->\n<link href=\"\/\/cdn.quilljs.com\/1.0.0\/quill.core.css\" rel=\"stylesheet\">\n<script src=\"\/\/cdn.quilljs.com\/1.0.0\/quill.core.js\"><\/script>\nCommunity\nGet help or stay up to date.\n\nContribute on Issues\nFollow @jhchen and @quilljs on Twitter\nAsk questions on Stack Overflow\nIf privacy is required, email support@quilljs.com\n\nLicense\nBSD 3-clause\n","79":"faker.js - generate massive amounts of fake data in the browser and node.js\n\n \n\n\n\nDemo\nhttps:\/\/rawgit.com\/Marak\/faker.js\/master\/examples\/browser\/index.html\nUsage\nBrowser\n    <script src = \"faker.js\" type = \"text\/javascript\"><\/script>\n    <script>\n      var randomName = faker.name.findName(); \/\/ Caitlyn Kerluke\n      var randomEmail = faker.internet.email(); \/\/ Rusty@arne.info\n      var randomCard = faker.helpers.createCard(); \/\/ random contact card containing many properties\n    <\/script>\nNode.js\n    var faker = require('faker');\n\n    var randomName = faker.name.findName(); \/\/ Rowan Nikolaus\n    var randomEmail = faker.internet.email(); \/\/ Kassandra.Haley@erich.biz\n    var randomCard = faker.helpers.createCard(); \/\/ random contact card containing many properties\nAPI\nJSDoc API Browser\nhttp:\/\/marak.github.io\/faker.js\/\nAPI Methods\n\naddress\n\nzipCode\nzipCodeByState\ncity\ncityPrefix\ncitySuffix\nstreetName\nstreetAddress\nstreetSuffix\nstreetPrefix\nsecondaryAddress\ncounty\ncountry\ncountryCode\nstate\nstateAbbr\nlatitude\nlongitude\ndirection\ncardinalDirection\nordinalDirection\nnearbyGPSCoordinate\ntimeZone\n\n\ncommerce\n\ncolor\ndepartment\nproductName\nprice\nproductAdjective\nproductMaterial\nproduct\nproductDescription\n\n\ncompany\n\nsuffixes\ncompanyName\ncompanySuffix\ncatchPhrase\nbs\ncatchPhraseAdjective\ncatchPhraseDescriptor\ncatchPhraseNoun\nbsAdjective\nbsBuzz\nbsNoun\n\n\ndatabase\n\ncolumn\ntype\ncollation\nengine\n\n\ndate\n\npast\nfuture\nbetween\nrecent\nsoon\nmonth\nweekday\n\n\nfake\nfinance\n\naccount\naccountName\nroutingNumber\nmask\namount\ntransactionType\ncurrencyCode\ncurrencyName\ncurrencySymbol\nbitcoinAddress\nlitecoinAddress\ncreditCardNumber\ncreditCardCVV\nethereumAddress\niban\nbic\ntransactionDescription\n\n\ngit\n\nbranch\ncommitEntry\ncommitMessage\ncommitSha\nshortSha\n\n\nhacker\n\nabbreviation\nadjective\nnoun\nverb\ningverb\nphrase\n\n\nhelpers\n\nrandomize\nslugify\nreplaceSymbolWithNumber\nreplaceSymbols\nreplaceCreditCardSymbols\nrepeatString\nregexpStyleStringParse\nshuffle\nmustache\ncreateCard\ncontextualCard\nuserCard\ncreateTransaction\n\n\nimage\n\nimage\navatar\nimageUrl\nabstract\nanimals\nbusiness\ncats\ncity\nfood\nnightlife\nfashion\npeople\nnature\nsports\ntechnics\ntransport\ndataUri\nlorempixel\nunsplash\nlorempicsum\n\n\ninternet\n\navatar\nemail\nexampleEmail\nuserName\nprotocol\nurl\ndomainName\ndomainSuffix\ndomainWord\nip\nipv6\nuserAgent\ncolor\nmac\npassword\n\n\nlorem\n\nword\nwords\nsentence\nslug\nsentences\nparagraph\nparagraphs\ntext\nlines\n\n\nmusic\n\ngenre\n\n\nname\n\nfirstName\nlastName\nfindName\njobTitle\ngender\nprefix\nsuffix\ntitle\njobDescriptor\njobArea\njobType\n\n\nphone\n\nphoneNumber\nphoneNumberFormat\nphoneFormats\n\n\nrandom\n\nnumber\nfloat\narrayElement\narrayElements\nobjectElement\nuuid\nboolean\nword\nwords\nimage\nlocale\nalpha\nalphaNumeric\nhexaDecimal\n\n\nsystem\n\nfileName\ncommonFileName\nmimeType\ncommonFileType\ncommonFileExt\nfileType\nfileExt\ndirectoryPath\nfilePath\nsemver\n\n\ntime\n\nrecent\n\n\nunique\nvehicle\n\nvehicle\nmanufacturer\nmodel\ntype\nfuel\nvin\ncolor\n\n\n\nFaker.fake()\nfaker.js contains a super useful generator method Faker.fake for combining faker API methods using a mustache string format.\nExample:\nconsole.log(faker.fake(\"{{name.lastName}}, {{name.firstName}} {{name.suffix}}\"));\n\/\/ outputs: \"Marks, Dean Sr.\"\nThis will interpolate the format string with the value of methods name.lastName(), name.firstName(), and name.suffix()\nLocalization\nAs of version v2.0.0 faker.js has support for multiple localities.\nThe default language locale is set to English.\nSetting a new locale is simple:\n\/\/ sets locale to de\nfaker.locale = \"de\";\n\naz\nar\ncz\nde\nde_AT\nde_CH\nen\nen_AU\nen_AU_ocker\nen_BORK\nen_CA\nen_GB\nen_IE\nen_IND\nen_US\nen_ZA\nes\nes_MX\nfa\nfi\nfr\nfr_CA\nfr_CH\nge\nid_ID\nit\nja\nko\nnb_NO\nnep\nnl\nnl_BE\npl\npt_BR\npt_PT\nro\nru\nsk\nsv\ntr\nuk\nvi\nzh_CN\nzh_TW\n\nIndividual Localization Packages\nfaker.js supports incremental loading of locales.\nBy default, requiring faker will include all locale data.\nIn a production environment, you may only want to include the locale data for a specific set of locales.\n\/\/ loads only de locale\nvar faker = require('faker\/locale\/de');\nSetting a randomness seed\nIf you want consistent results, you can set your own seed:\nfaker.seed(123);\n\nvar firstRandom = faker.random.number();\n\n\/\/ Setting the seed again resets the sequence.\nfaker.seed(123);\n\nvar secondRandom = faker.random.number();\n\nconsole.log(firstRandom === secondRandom);\nTests\nnpm install .\nmake test\n\nYou can view a code coverage report generated in coverage\/lcov-report\/index.html.\nBuilding faker.js\nfaker uses gulp to automate it's build process. Each build operation is a separate task which can be run independently.\nBrowser Bundle\nnpm run browser\n\nBuilding JSDocs\nJSDOC v3 HTML API documentation\nnpm run jsdoc\n\nBuilding ReadMe\nThe ReadMe.md file for faker.js is automatically generated and should not be modified directly. All updateds to ReadMe.md should be perfomed in .\/build\/src\/docs.md and then the build script should be run.\nnpm run readme\n\nVersion Release Schedule\nfaker.js is a popular project used by many organizations and individuals in production settings. Major and Minor version releases are generally on a monthly schedule. Bugs fixes are addressed by severity and fixed as soon as possible.\nIf you require the absolute latest version of faker.js the master branch @ http:\/\/github.com\/marak\/faker.js\/ should always be up to date and working.\nMaintainer\nMarak Squires\nfaker.js - Copyright (c) 2020\nMarak Squires\nwww.marak.com\nhttp:\/\/github.com\/marak\/faker.js\/\nfaker.js was inspired by and has used data definitions from:\n\nhttps:\/\/github.com\/stympy\/faker\/ - Copyright (c) 2007-2010 Benjamin Curtis\nhttp:\/\/search.cpan.org\/~jasonk\/Data-Faker-0.07\/ - Copyright 2004-2005 by Jason Kohles\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","80":" ____                     __      __\n\/\\  _`\\                  \/\\ \\    \/\\ \\                                   __\n\\ \\ \\ \\ \\     __      ___\\ \\ \\\/'\\\\ \\ \\____    ___     ___      __      \/\\_\\    ____\n \\ \\  _ <'  \/'__`\\   \/'___\\ \\ , < \\ \\ '__`\\  \/ __`\\ \/' _ `\\  \/'__`\\    \\\/\\ \\  \/',__\\\n  \\ \\ \\ \\ \\\/\\ \\ \\.\\_\/\\ \\__\/\\ \\ \\\\`\\\\ \\ \\ \\ \\\/\\ \\ \\ \\\/\\ \\\/\\ \\\/\\  __\/  __ \\ \\ \\\/\\__, `\\\n   \\ \\____\/\\ \\__\/.\\_\\ \\____\\\\ \\_\\ \\_\\ \\_,__\/\\ \\____\/\\ \\_\\ \\_\\ \\____\\\/\\_\\_\\ \\ \\\/\\____\/\n    \\\/___\/  \\\/__\/\\\/_\/\\\/____\/ \\\/_\/\\\/_\/\\\/___\/  \\\/___\/  \\\/_\/\\\/_\/\\\/____\/\\\/_\/\\ \\_\\ \\\/___\/\n                                                                       \\ \\____\/\n                                                                        \\\/___\/\n(_'_______________________________________________________________________________'_)\n(_.\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014._)\n\nBackbone supplies structure to JavaScript-heavy applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing application over a RESTful JSON interface.\nFor Docs, License, Tests, pre-packed downloads, and everything else, really, see:\nhttp:\/\/backbonejs.org\nTo suggest a feature or report a bug:\nhttps:\/\/github.com\/jashkenas\/backbone\/issues\nFor questions on working with Backbone or general discussions:\nhttps:\/\/groups.google.com\/forum\/#!forum\/backbonejs,\nhttp:\/\/stackoverflow.com\/questions\/tagged\/backbone.js, or\nhttps:\/\/gitter.im\/jashkenas\/backbone\nBackbone is an open-sourced component of DocumentCloud:\nhttps:\/\/github.com\/documentcloud\nMany thanks to our contributors:\nhttps:\/\/github.com\/jashkenas\/backbone\/graphs\/contributors\nSpecial thanks to Robert Kieffer for the original philosophy behind Backbone.\nhttps:\/\/github.com\/broofa\n","81":"\n\n\n\n\nFast 3kB alternative to React with the same modern API.\nAll the power of Virtual DOM components, without the overhead:\n\nFamiliar React API & patterns: ES6 Class, hooks, and Functional Components\nExtensive React compatibility via a simple preact\/compat alias\nEverything you need: JSX, VDOM, DevTools, HMR, SSR.\nHighly optimized diff algorithm and seamless hydration from Server Side Rendering\nSupports all modern browsers and IE11\nTransparent asynchronous rendering with a pluggable scheduler\nInstant production-grade app setup with Preact CLI\n\n\ud83d\udc81 More information at the Preact Website \u279e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can find some awesome libraries in the awesome-preact list \ud83d\ude0e\n\nGetting Started\n\n\ud83d\udc81 Note: You don't need ES2015 to use Preact... but give it a try!\n\nThe easiest way to get started with Preact is to install Preact CLI. This simple command-line tool wraps up the best possible tooling for you, and even keeps things like Webpack and Babel up-to-date as they change. Best of all, it's easy to understand! Start a project or compile for production in a single command (preact build), with no configuration needed and best practices baked in! \ud83d\ude4c\nTutorial: Building UI with Preact\nWith Preact, you create user interfaces by assembling trees of components and elements. Components are functions or classes that return a description of what their tree should output. These descriptions are typically written in JSX (shown underneath), or HTM which leverages standard JavaScript Tagged Templates. Both syntaxes can express trees of elements with \"props\" (similar to HTML attributes) and children.\nTo get started using Preact, first look at the render() function. This function accepts a tree description and creates the structure described. Next, it appends this structure to a parent DOM element provided as the second argument. Future calls to render() will reuse the existing tree and update it in-place in the DOM. Internally, render() will calculate the difference from previous outputted structures in an attempt to perform as few DOM operations as possible.\nimport { h, render } from 'preact';\n\/\/ Tells babel to use h for JSX. It's better to configure this globally.\n\/\/ See https:\/\/babeljs.io\/docs\/en\/babel-plugin-transform-react-jsx#usage\n\/\/ In tsconfig you can specify this with the jsxFactory\n\/** @jsx h *\/\n\n\/\/ create our tree and append it to document.body:\nrender(<main><h1>Hello<\/h1><\/main>, document.body);\n\n\/\/ update the tree in-place:\nrender(<main><h1>Hello World!<\/h1><\/main>, document.body);\n\/\/ ^ this second invocation of render(...) will use a single DOM call to update the text of the <h1>\nHooray! render() has taken our structure and output a User Interface! This approach demonstrates a simple case, but would be difficult to use as an application grows in complexity. Each change would be forced to calculate the difference between the current and updated structure for the entire application. Components can help here \u2013 by dividing the User Interface into nested Components each can calculate their difference from their mounted point. Here's an example:\nimport { render, h } from 'preact';\nimport { useState } from 'preact\/hooks';\n\n\/** @jsx h *\/\n\nconst App = () => {\n\tconst [input, setInput] = useState('');\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Do you agree to the statement: \"Preact is awesome\"?<\/p>\n\t\t\t<input value={input} onChange={e => setInput(e.target.value)} \/>\n\t\t<\/div>\n\t)\n}\n\nrender(<App \/>, document.body);\n\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n\n","82":"Taro\n\n\n\n\n\n\n\n\ud83d\udc7d Taro['t\u0251:ro\u028a]\uff0c\u6cf0\u7f57\u00b7\u5965\u7279\u66fc\uff0c\u5b87\u5b99\u8b66\u5907\u961f\u603b\u6559\u5b98\uff0c\u5b9e\u529b\u6700\u5f3a\u7684\u5965\u7279\u66fc\u3002\n\n\u7b80\u4ecb\nTaro \u662f\u4e00\u4e2a\u5f00\u653e\u5f0f\u8de8\u7aef\u8de8\u6846\u67b6\u89e3\u51b3\u65b9\u6848\uff0c\u652f\u6301\u4f7f\u7528 React\/Vue\/Nerv \u7b49\u6846\u67b6\u6765\u5f00\u53d1\u5fae\u4fe1\/\u4eac\u4e1c\/\u767e\u5ea6\/\u652f\u4ed8\u5b9d\/\u5b57\u8282\u8df3\u52a8\/ QQ \u5c0f\u7a0b\u5e8f\/H5 \u7b49\u5e94\u7528\u3002\u73b0\u5982\u4eca\u5e02\u9762\u4e0a\u7aef\u7684\u5f62\u6001\u591a\u79cd\u591a\u6837\uff0cWeb\u3001React Native\u3001\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7b49\u5404\u79cd\u7aef\u5927\u884c\u5176\u9053\uff0c\u5f53\u4e1a\u52a1\u8981\u6c42\u540c\u65f6\u5728\u4e0d\u540c\u7684\u7aef\u90fd\u8981\u6c42\u6709\u6240\u8868\u73b0\u7684\u65f6\u5019\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u7aef\u53bb\u7f16\u5199\u591a\u5957\u4ee3\u7801\u7684\u6210\u672c\u663e\u7136\u975e\u5e38\u9ad8\uff0c\u8fd9\u65f6\u5019\u53ea\u7f16\u5199\u4e00\u5957\u4ee3\u7801\u5c31\u80fd\u591f\u9002\u914d\u5230\u591a\u7aef\u7684\u80fd\u529b\u5c31\u663e\u5f97\u6781\u4e3a\u9700\u8981\u3002\n\u7248\u672c\u8bf4\u660e\n\u5f53\u524d Taro \u5df2\u8fdb\u5165 3.x \u65f6\u4ee3\uff0c\u76f8\u8f83\u4e8e Taro 1\/2 \u91c7\u7528\u4e86\u91cd\u8fd0\u884c\u65f6\u7684\u67b6\u6784\uff0c\u8ba9\u5f00\u53d1\u8005\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684 React\/Vue \u7b49\u6846\u67b6\u7684\u5f00\u53d1\u4f53\u9a8c\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u300a\u5c0f\u7a0b\u5e8f\u8de8\u6846\u67b6\u5f00\u53d1\u7684\u63a2\u7d22\u4e0e\u5b9e\u8df5\u300b\u3002\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528 Taro 1\/2\uff0c\u53ef\u4ee5\u8bbf\u95ee\u6587\u6863\u7248\u672c\u83b7\u5f97\u5e2e\u52a9\u3002\n\u5b66\u4e60\u8d44\u6e90\n5 \u5206\u949f\u4e0a\u624b Taro \u5f00\u53d1\nawesome-taro\n\u6398\u91d1\u5c0f\u518c\uff1aTaro \u591a\u7aef\u5f00\u53d1\u5b9e\u73b0\u539f\u7406\u4e0e\u5b9e\u6218\n\u793e\u533a\u5171\u4eab\nTaro \u4ea4\u6d41\u793e\u533a\u2014\u2014\u8ba9\u6bcf\u4e00\u6b21\u4ea4\u6d41\u90fd\u88ab\u6c89\u6dc0\nTaro \u7269\u6599\u5e02\u573a\u2014\u2014\u8ba9\u6bcf\u4e00\u4e2a\u8f6e\u5b50\u4ea7\u751f\u4ef7\u503c\n\u4f7f\u7528\u6848\u4f8b\nTaro \u5df2\u7ecf\u6295\u5165\u4e86\u6211\u4eec\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\uff0c\u4e1a\u754c\u4e5f\u5728\u5e7f\u6cdb\u5730\u4f7f\u7528 Taro \u5f00\u53d1\u591a\u7aef\u5e94\u7528\u3002\n\n\u5f81\u96c6\u66f4\u591a\u4f18\u79c0\u6848\u4f8b\nTaro \u7279\u6027\n\u6846\u67b6\u652f\u6301\nReact\/Nerv \u652f\u6301\n\u5728 Taro 3 \u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684 React\/Nerv \u5f00\u53d1\u4f53\u9a8c\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u57fa\u7840\u6559\u7a0b\u2014\u2014React\n\u4ee3\u7801\u793a\u4f8b\nimport React, { Component } from 'react'\nimport { View, Text } from '@tarojs\/components'\n\nexport default class Index extends Component {\n  state = {\n    msg: 'Hello World\uff01'\n  }\n  componentWillUnmount () { }\n\n  componentDidShow () { }\n\n  componentDidHide () { }\n\n  render () {\n    return (\n      <View className='index'>\n        <Text>{this.state.msg}<\/Text>\n      <\/View>\n    )\n  }\n}\nVue \u652f\u6301\n\u5728 Taro 3 \u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684 Vue \u5f00\u53d1\u4f53\u9a8c\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u57fa\u7840\u6559\u7a0b\u2014\u2014Vue\n\u4ee3\u7801\u793a\u4f8b\n<template>\n  <view class=\"index\">\n    <text>{{msg}}<\/text>\n  <\/view>\n<\/template>\n\n<script>\nexport default {\n  data () {\n    return {\n      msg: 'Hello World\uff01'\n    }\n  },\n  created () {},\n  onShow () {},\n  onHide () {}\n}\n<\/script>\n\u591a\u7aef\u8f6c\u6362\u652f\u6301\nTaro \u65b9\u6848\u7684\u521d\u5fc3\u5c31\u662f\u4e3a\u4e86\u6253\u9020\u4e00\u4e2a\u591a\u7aef\u5f00\u53d1\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u76ee\u524d Taro 3 \u53ef\u4ee5\u652f\u6301\u8f6c\u6362\u5230 \u5fae\u4fe1\/\u4eac\u4e1c\/\u767e\u5ea6\/\u652f\u4ed8\u5b9d\/\u5b57\u8282\u8df3\u52a8\/QQ \u5c0f\u7a0b\u5e8f \u4ee5\u53ca  H5 \u7aef\u3002\n\u52a0\u5165\u5171\u5efa\n\u52a0\u5165 Taro \u793e\u533a\u5171\u5efa\u5021\u8bae\nTaro \u9080\u4f60\u52a0\u5165\u793e\u533a\u5171\u5efa\n\u4e3a Taro \u8d21\u732e\u4ee3\u7801\nTaro \u975e\u5e38\u6b22\u8fce\u793e\u533a\u5f00\u53d1\u8005\u4e3a Taro \u8d21\u732e\u4ee3\u7801\uff0c\u5728\u8d21\u732e\u4e4b\u524d\u8bf7\u5148\u9605\u8bfb\u8d21\u732e\u6307\u5357\u3002\n\u5982\u679c\u4f60\u60f3\u4e3a Taro \u5b9e\u73b0\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\uff0c\u9700\u8981\u5148\u64b0\u5199 RFC  \u6587\u6863\uff0c\u6309\u7167 Taro \u7684RFC \u673a\u5236\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u7ecf\u8fc7\u793e\u533a\u8ba8\u8bba\u5b8c\u5584\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u4ee3\u7801\u7684\u63d0\u4ea4\u3002\n\u95ee\u9898\u53cd\u9988\u4e0e\u5efa\u8bae\n\u7ed9 Taro \u63d0 ISSUE\n\n\u5f3a\u70c8\u63a8\u8350\u9605\u8bfb \u300a\u63d0\u95ee\u7684\u667a\u6167\u300b\u3001\u300a\u5982\u4f55\u5411\u5f00\u6e90\u793e\u533a\u63d0\u95ee\u9898\u300b \u548c \u300a\u5982\u4f55\u6709\u6548\u5730\u62a5\u544a Bug\u300b\u3001\u300a\u5982\u4f55\u5411\u5f00\u6e90\u9879\u76ee\u63d0\u4ea4\u65e0\u6cd5\u89e3\u7b54\u7684\u95ee\u9898\u300b\uff0c\u66f4\u597d\u7684\u95ee\u9898\u66f4\u5bb9\u6613\u83b7\u5f97\u5e2e\u52a9\u3002\n\n\n\u7279\u522b\u9e23\u8c22\n\n\n\n\n\n\n\n\n\n\n\nnanjingboy\njsNewbee\nQiyu8\nGarfield Lee\n\n\n\n\u8d21\u732e\u8005\u4eec\n\n\u5f00\u53d1\u8ba1\u5212\nMilestones\n\u66f4\u65b0\u65e5\u5fd7\n\u672c\u9879\u76ee\u9075\u4ece Angular Style Commit Message Conventions\uff0c\u66f4\u65b0\u65e5\u5fd7\u8bf7\u67e5\u9605 Release\u3002\n\u5f00\u53d1\u4ea4\u6d41\n\u5b98\u65b9\u4ea4\u6d41\u5fae\u4fe1\u7fa4\nLicense\nMIT License\nCopyright (c) O2Team\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","83":"uni-app\nuni-app \u662f\u4e00\u4e2a\u4f7f\u7528 Vue.js \u5f00\u53d1\u5c0f\u7a0b\u5e8f\u3001H5\u3001App\u7684\u7edf\u4e00\u524d\u7aef\u6846\u67b6\u3002\u5b98\u7f51\u5730\u5740\uff1ahttps:\/\/uniapp.dcloud.io\n\u5f00\u53d1\u8005\u4f7f\u7528 Vue \u8bed\u6cd5\u7f16\u5199\u4ee3\u7801\uff0cuni-app \u6846\u67b6\u5c06\u5176\u7f16\u8bd1\u5230 \u5c0f\u7a0b\u5e8f\uff08\u5fae\u4fe1\/\u652f\u4ed8\u5b9d\/\u767e\u5ea6\/\u5b57\u8282\u8df3\u52a8\/QQ\/\u9489\u9489\uff09\u3001App\uff08iOS\/Android\uff09\u3001H5\u7b49\u591a\u4e2a\u5e73\u53f0\uff0c\u4fdd\u8bc1\u5176\u6b63\u786e\u8fd0\u884c\u5e76\u8fbe\u5230\u4f18\u79c0\u4f53\u9a8c\u3002\nuni-app\u7684\u7279\u70b9\n\n\u5f00\u53d1\u8005\u548c\u6848\u4f8b\u66f4\u591a\uff1aHBuilder\u88c5\u673a\u91cf500\u4e07\u53f0\uff0c\u5f00\u53d1\u8005\u793e\u533a\u6708\u6d3b\u767e\u4e07\uff0c70\u591a\u4e2aQQ\u5fae\u4fe1\u7fa4\u627f\u8f7d10\u4e07\u4eba\u3002\u6848\u4f8b\u4f17\u591a\uff0cuni\u7edf\u8ba1\u6708\u6d3b10\u4ebf\uff08\u8be6\u89c1\uff09\n\u6027\u80fd\u66f4\u9ad8\uff08\u89c1\u8bc4\u6d4b\uff09\n\u66f4\u4e30\u5bcc\u7684\u5468\u8fb9\u751f\u6001\uff0c\u63d2\u4ef6\u5e02\u573a\u6570\u5343\u6b3e\u63d2\u4ef6\n\u63d0\u4f9b\u6bd4\u5c0f\u7a0b\u5e8f\u539f\u751f\u5f00\u53d1\u66f4\u597d\u7684\u5f00\u53d1\u4f53\u9a8c\u3001\u66f4\u9ad8\u7684\u5de5\u7a0b\u5316\u6548\u7387\n\u8de8\u7aef\u62b9\u5e73\u5ea6\u66f4\u5b8c\u5584\uff0c\u4e14\u5404\u7aef\u7279\u8272\u53d1\u6325\u66f4\u7075\u6d3b\uff0c\u53ef\u771f\u6b63\u5b9e\u73b0\u4e00\u5957\u4ee3\u7801\u591a\u7aef\u8986\u76d6\uff0c\u65e0\u9700\u5404\u7aef\u591a\u5934\u7ef4\u62a4\u5347\u7ea7\n\u6743\u5a01\u8ba4\u53ef\uff1a\u963f\u91cc\u5c0f\u7a0b\u5e8f\u5b98\u65b9\u5de5\u5177\u5185\u7f6euni-app\uff08\u8be6\u89c1\uff09\u3001\u817e\u8baf\u8bfe\u5802\u5b98\u65b9\u81ea\u5236uni-app\u57f9\u8bad\u89c6\u9891\uff08\u8be6\u89c1\uff09\n\n\u626b\u7801\u4f53\u9a8c\n\u5f00\u53d1\u4e00\u6b21\uff0c\u7f16\u8bd1\u523010\u4e2a\u5e73\u53f0\u3002\u4f9d\u6b21\u626b\u63cf10\u4e2a\u4e8c\u7ef4\u7801\uff0c\u4eb2\u81ea\u4f53\u9a8c\u6700\u5168\u9762\u7684\u8de8\u5e73\u53f0\u6548\u679c\uff01\n\n\u6ce8\uff1a \u67d0\u4e9b\u5e73\u53f0\u4e0d\u80fd\u63d0\u4ea4\u7b80\u5355demo\uff0c\u8865\u5145\u4e86\u4e00\u4e9b\u5176\u4ed6\u529f\u80fd\u3002\n\u5feb\u901f\u5f00\u59cb\nuni-app\u652f\u6301\u901a\u8fc7vue-cli\u547d\u4ee4\u884c\u3001HBuilderX\u53ef\u89c6\u5316\u754c\u9762\u4e24\u79cd\u65b9\u5f0f\u5feb\u901f\u521b\u5efa\u9879\u76ee\uff1a\n\nvue-cli\u547d\u4ee4\u884c\u65b9\u5f0f\uff1a\u4e0d\u9650IDE\uff0c\u9002\u5408\u5bf9node\u719f\u6089\u7684\u5f00\u53d1\u8005\uff0c\u6269\u5c55\u9605\u8bfb\uff1a\u5728vscode\u4e2d\u5f00\u53d1uni-app\u3001\u5728 WebStorm \u4e2d\u5f00\u53d1 uni-app\nHBuilderX\u53ef\u89c6\u5316\u754c\u9762\uff1a\u4e13\u7528IDE\uff0c\u5185\u7f6e\u76f8\u5173\u73af\u5883\uff0c\u5f00\u7bb1\u5373\u7528\uff0c\u5f00\u53d1\u6548\u7387\u66f4\u9ad8\u3002\n\n\u9879\u76ee\u6848\u4f8b\n\u6848\u4f8b\u5c55\u793a\uff1auniapp.dcloud.io\/case\n\u6b22\u8fce\u63d0\u4ea4\u4f60\u7684\u5e94\u7528\uff0cuni-app\u6848\u4f8b\u5f81\u96c6\n\u9700\u6c42\u5899\nuni-app\u8ba1\u5212\u652f\u6301\u7684\u529f\u80fd\u70b9\uff0c\u4f1a\u5728\u9700\u6c42\u5899\u4e0a\u8fdb\u884c\u5c55\u793a\uff0c\u5f81\u96c6\u5f00\u53d1\u8005\u7684\u6295\u7968\u610f\u89c1\uff0c\u524d\u5f80\u6295\u7968\u3002\n\u66f4\u65b0\u65e5\u5fd7\nuni-app\u4e00\u76f4\u4fdd\u6301\u9ad8\u9891\u7684\u66f4\u65b0\u8fed\u4ee3\uff0c\u8be6\u89c1uni-app \u66f4\u65b0\u65e5\u5fd7\u3002\n\u8bba\u575b\n\u7531\u4e8eDCloud\u670970\u591a\u4e2aQQ\u3001\u5fae\u4fe1\u7fa4\uff0c\u5b98\u65b9\u5df2\u65e0\u6cd5\u7ef4\u62a4\u66f4\u591a\u4ea4\u6d41\u7fa4\u3002\u8bf7\u5f00\u53d1\u8005\u5230\u5b98\u65b9\u8bba\u575b\u4ea4\u6d41\uff1ahttps:\/\/ask.dcloud.net.cn\/explore\/ \u3002\u8bba\u575b\u63d0\u4f9b\u4e86\u6bd4issues\u66f4\u4e13\u4e1a\u7684\u5de5\u5177\u670d\u52a1\u3002\n\u63d2\u4ef6\u5e02\u573a\nuni-app\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\uff0c\u4f17\u591a\u5f00\u53d1\u8005\u63d0\u4ea4\u4e86\u6570\u5343\u6b3e\u7ec4\u4ef6\u3001sdk\u3001\u9879\u76ee\u6a21\u677f\uff0c\u8be6\u89c1\uff1ahttps:\/\/ext.dcloud.net.cn\/\n\u9664\u4e86\u4f17\u591a\u4e09\u65b9ui\u5e93\uff0c\u5b98\u65b9\u8fd8\u63d0\u4f9b\u4e86uni-ui\uff0c\u5728\u6027\u80fd\u548c\u8de8\u7aef\u517c\u5bb9\u65b9\u9762\u6709\u66f4\u5f3a\u7684\u4f18\u52bf\u3002\u8be6\u89c1\uff1ahttps:\/\/ext.dcloud.net.cn\/plugin?id=55\n\u73b0\u6709\u9879\u76ee\u5982\u4f55\u8fc1\u79fb\u5230uni-app\u4f53\u7cfb\n\n\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u8f6c\u6362uni-app\u6307\u5357\u53ca\u8f6c\u6362\u5668\uff1ahttps:\/\/ask.dcloud.net.cn\/article\/35786\nvue h5\u9879\u76ee\u8f6c\u6362uni-app\u6307\u5357\uff1ahttps:\/\/ask.dcloud.net.cn\/article\/36174\nmpvue \u9879\u76ee\uff08\u7ec4\u4ef6\uff09\u8fc1\u79fb\u6307\u5357\u3001\u793a\u4f8b\u53ca\u8d44\u6e90\u6c47\u603b\uff1a https:\/\/ask.dcloud.net.cn\/article\/34945\nwepy\u8f6cuni-app\u8f6c\u6362\u5668\uff1ahttps:\/\/github.com\/zhangdaren\/wepy-to-uniapp\n\n\u5e38\u89c1\u7591\u95ee\n\n\n\u95ee\uff1a\u4e0d\u540c\u7aef\u6709\u4e0d\u540c\u7684\u9700\u6c42\u3001\u4e0d\u540c\u7684\u7279\u8272\uff0c\u767b\u9646\u652f\u4ed8\u4e5f\u4e0d\u4e00\u6837\uff0c\u5982\u4f55\u7edf\u4e00\uff1f\n\n\n\u7b54\uff1a\u5dee\u5f02\u90e8\u5206\u4f7f\u7528\u6761\u4ef6\u7f16\u8bd1\u3002uni-app\u63d0\u4f9b\u4e86\u7075\u6d3b\u5f3a\u5927\u7684\u6761\u4ef6\u7f16\u8bd1\u3002\u53ef\u4ee5\u5b8c\u7f8e\u5904\u7406\u590d\u7528\u90e8\u5206\u548c\u5dee\u5f02\u90e8\u5206\u3002\u771f\u6b63\u4e00\u5957\u5de5\u7a0b\u6e90\u7801\u3002\u5f53\u4e1a\u52a1\u5347\u7ea7\u65f6\uff0c\u4e0d\u518d\u9700\u8981\u591a\u7aef\u7ef4\u62a4\u3002\u5982\u679c\u591a\u7aef\u7ef4\u62a4\uff0c\u7ecf\u5e38\u4f1a\u56e0\u4e3a\u67d0\u4e9b\u7aef\u7684\u6d41\u91cf\u4e0d\u5927\uff0c\u5c31\u4e00\u76f4\u62d6\u5ef6\u65e0\u6cd5\u8ba9\u90a3\u4e9b\u7528\u6237\u4eab\u53d7\u5230\u6700\u65b0\u670d\u52a1\u3002\u53e6\u5916\u767b\u9646\u652f\u4ed8\u5728\u5ba2\u6237\u7aef\u90e8\u5206\uff0c\u5df2\u7ecf\u88abuni-app\u7edf\u4e00\u6210\u4e00\u6837\u7684api\u4e86\u3002\n\n\n\u95ee\uff1a\u591a\u7aef\u662f\u4e0d\u662f\u4e00\u79cd\u59a5\u534f\uff0c\u662f\u5426\u4f1a\u9020\u6210\u6027\u80fd\u4e0b\u964d\uff1f\n\n\n\u7b54\uff1agood question\u3002\u591a\u7aef\u4e14\u4e0d\u5f71\u54cd\u6027\u80fd\uff0c\u786e\u5b9e\u5f88\u96be\uff0c\u4f46uni-app\u505a\u5230\u4e86\u3002\u5728h5\u7aef\uff0c\u5b83\u7684\u6027\u80fd\u3001\u5305\u4f53\u79ef\u4e0e\u76f4\u63a5\u4f7f\u7528vue.js\u5f00\u53d1\u4e00\u81f4\uff1b \u5728\u5c0f\u7a0b\u5e8f\u7aef\uff0c\u5b83\u7684\u6027\u80fd\u6bd4\u5927\u591a\u6570\u5f00\u53d1\u6846\u67b6\u66f4\u597d\uff0cuni-app\u5e95\u5c42\u81ea\u52a8\u5904\u7406\u7684setdata\u5dee\u91cf\u540c\u6b65\u673a\u5236\uff0c\u6bd4\u5f00\u53d1\u8005\u624b\u52a8\u5199setdata\u66f4\u597d\uff0c\u5c31\u50cf\u4f7f\u7528vue.js\u66f4\u65b0\u754c\u9762\u6bd4\u624b\u52a8\u5199js\u4fee\u6539dom\u66f4\u9ad8\u6548\u4e00\u6837\uff1b \u5728App\uff0cuni-app\u652f\u6301webview\u6e32\u67d3\u548c\u539f\u751f\u6e32\u67d3\u53cc\u5f15\u64ce\uff0c\u542f\u7528\u539f\u751f\u6e32\u67d3\u65f6\uff0ccss\u5199\u6cd5\u53d7\u9650\uff0c\u4f46\u6027\u80fd\u662f\u5f88\u63a5\u8fd1\u539f\u751f\u5f00\u53d1\u7684\u6548\u679c\u7684\uff0c\u5728\u5f53\u524d\u7684\u624b\u673a\u73af\u5883\u4e0b\uff0c\u5343\u4e07\u65e5\u6d3b\u4ee5\u4e0b\u7684\u5e94\u7528\u5728App\u4f7f\u7528uni-app\u4e5f\u4e0d\u4f1a\u9047\u5230\u4efb\u4f55\u538b\u529b\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u5df2\u7ecf\u505a\u597d\u7684\u539f\u751fApp\u4e2d\u5c06\u90e8\u5206\u9875\u9762\u6539\u4e3auni-app\u5b9e\u73b0; \u6b64\u5916\uff0c\u6211\u4eec\u4f1a\u628a\u5f88\u591a\u8de8\u7aef\u5904\u7406\u653e\u5728\u7f16\u8bd1\u671f\u5b8c\u6210\u7684\uff0c\u8fd9\u6837\u4f1a\u51cf\u5c11\u5bf9\u8fd0\u884c\u671f\u7684\u6548\u7387\u5f71\u54cd\u3002\n\n\n\u95ee\uff1a\u4e0d\u505a\u591a\u7aef\uff0c\u662f\u4e0d\u662f\u4e0d\u9700\u8981uni-app\uff1f\n\n\n\u7b54\uff1a\u4e0d\u662f\u3002\u5927\u91cf\u5f00\u53d1\u8005\u7528uni-app\u53ea\u505a\u4e00\u4e2a\u7aef\uff0c\u8be6\u89c1\u6848\u4f8b\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4e00\u4e2a\u4f18\u79c0\u5de5\u5177\u5728\u624b\uff0c\u505a\u4ec0\u4e48\u90fd\u4e0d\u6101\u3002\n\n\n\u95ee\uff1auni-app\u4ee5\u540e\u4f1a\u4e0d\u4f1a\u53d8\u66f4\u5f00\u6e90\u534f\u8bae\uff0c\u8f6c\u5411\u6536\u8d39\uff1f\n\n\n\u7b54\uff1a\u5b98\u65b9\u627f\u8bfa\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u66f4\u5f00\u6e90\u534f\u8bae\u3002\u65e0\u8bbaHBuilderX\u3001uni-app\u3001App\uff0c\u9762\u5411\u4e2d\u56fd\u4eba\u6c38\u4e45\u514d\u8d39\u3002\n\n\n\u66f4\u591a\u8d44\u6599\n\n\u8bc4\u6d4b\uff1a\u8de8\u7aef\u5f00\u53d1\u6846\u67b6\u6df1\u5ea6\u6a2a\u8bc4\u4e4b2020\u7248\n\u8bc4\u6d4b\uff1a\u6df1\u5165\u6d4b\u8bd5\u4e00\u5468\uff0c\u4e3b\u6d41\u591a\u7aef\u6846\u67b6\u5927\u6bd4\u6b66\nuni-app\u5728App\u7aef\u548cflutter\u3001react native\u7684\u6bd4\u8f83\n\n","84":"\n\nHelping you select an MV* framework\n\nWebsite\u00a0\u00a0\u00a0\u00a0Blog\u00a0\u00a0\u00a0\u00a0TasteJS\n\n\nDevelopers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.\nBackbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?\nTo help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.\nTeam\nTodoMVC would not be possible without a strong team of contributors helping push the project forward each day. Additionally, we have a core project team composed of:\nAddy Osmani - Founder\/Lead\n\n  Addy is a Software Engineer at Google who originally created TodoMVC. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nSindre Sorhus - Lead Developer\n\nSindre is a Web Developer who leads core development, quality control and application design for the project. His engineering contributions have helped us ensure consistency and best practices are enforced wherever possible. Sindre also leads up development of the TodoMVC application spec.\nPascal Hartig - Developer\n\nPascal is a Software Engineer at Twitter with a deep passion for consistency. He watches pull requests and helps developers getting their contributions integrated with TodoMVC.\nStephen Sawchuk - Developer\n\nStephen is a Front-end Engineer at Quicken Loans that cares about improving the maintainability and developer experience of open-source projects. His recent contributions include helping us move all apps over to using Bower and implementing the new information bar.\nColin Eberhardt - Developer\n\nColin is a software consultant at Scott Logic who is passionate about all software - from JavaScript to Java, and C# to Objective-C. His recent contribution to the project has been a fully automated test suite.\nSam Saccone - Developer\n\nSam is a Software Engineer at Google who is driven by an endless desire to create, solve problems, and improve developers' lives.\nArthur Verschaeve - Developer\n\nArthur is an open-source fanboy from Belgium. He is passionate about developer tooling and all things JavaScript.\nFady Samir Sadek - Developer\n\nFady is a front-end developer who loves all things JavaScript and enjoys solving real world problems using the web platform and helping other developers do the same. He currently leads maintenance of the project and ensures that the project is friendly for new contributors and upcoming developers.\nGianni Chiappetta - Logo designer\n\nGianni is a programmer and designer currently working as the Chief Rigger at MetaLab.\nDisclaimer\n\nTodoMVC has been called many things including the 'Speed-dating' and 'Rosetta Stone' of MV* frameworks. Whilst we hope that this project can offer assistance in deciding what frameworks are worth spending more time looking at, remember that the Todo application offers a limited view of a framework's potential capability.\nIt is meant to be used as a gateway to reviewing how a basic application using a framework may be structured, and we heavily recommend investing time researching a solution in more depth before opting to use it.\nAlso, please keep in mind that TodoMVC is not the perfect way to compare the size of different frameworks. We intentionally use the unminified versions to make reading the source code easier.\nGetting Involved\nWhilst we enjoy implementing and improving existing Todo apps, we're always interested in speaking to framework authors (and users) wishing to share Todo app implementations in their framework\/solution of choice.\nCheck out our contribution docs for more info.\nLicense\nEverything in this repo is MIT License unless otherwise specified.\nMIT \u00a9 Addy Osmani, Sindre Sorhus, Pascal Hartig, Stephen Sawchuk.\n","85":"\n\n\n\n\n\n\nAsync is a utility module which provides straight-forward, powerful functions for working with asynchronous JavaScript. Although originally designed for use with Node.js and installable via npm i async, it can also be used directly in the browser.  A ESM\/MJS version is included in the main async package that should automatically be used with compatible bundlers such as Webpack and Rollup.\nA pure ESM version of Async is available as async-es.\nFor Documentation, visit https:\/\/caolan.github.io\/async\/\nFor Async v1.5.x documentation, go HERE\n\/\/ for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"\/dev.json\", test: \"\/test.json\", prod: \"\/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    \/\/ configs is now a map of JSON data\n    doSomethingWith(configs);\n});\nvar async = require(\"async\");\n\n\/\/ ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    \/\/ results is now an array of the response bodies\n    console.log(results)\n})\n","86":"Vue CLI   \n\nVue CLI is the Standard Tooling for Vue.js Development.\n\nDocumentation\nDocs are available at https:\/\/cli.vuejs.org\/ - we are still working on refining it and contributions are welcome!\nContributing\nPlease see contributing guide.\nLicense\nMIT\n","87":"\n\nStart your next react project in seconds\nA highly scalable, offline-first foundation with the best DX and a focus on performance and best practices\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreated by Max Stoiber and maintained with \u2764\ufe0f by an amazing team of developers.\n\nFeatures\n\nQuick scaffolding\nCreate components, containers, routes, selectors and sagas - and their tests - right from the CLI!\nInstant feedback\nEnjoy the best DX (Developer eXperience) and code your app at the speed of thought! Your saved changes to the CSS and JS are reflected instantaneously without refreshing the page. Preserve application state even when you update something in the underlying code!\nPredictable state management\nUnidirectional data flow allows for change logging and time travel debugging.\nNext generation JavaScript\nUse template strings, object destructuring, arrow functions, JSX syntax and more.\nNext generation CSS\nWrite composable CSS that's co-located with your components for complete modularity. Unique generated class names keep the specificity low while eliminating style clashes. Ship only the styles that are on the page for the best performance.\nIndustry-standard routing\nIt's natural to want to add pages (e.g. `\/about`) to your application, and routing makes this possible.\nIndustry-standard i18n internationalization support\nScalable apps need to support multiple languages, easily add and support multiple languages with `react-intl`.\nOffline-first\nThe next frontier in performant web apps: availability without a network connection from the instant your users load the app.\nStatic code analysis\nFocus on writing new features without worrying about formatting or code quality. With the right editor setup, your code will automatically be formatted and linted as you work.\nSEO\nWe support SEO (document head tags management) for search engines that support indexing of JavaScript content. (eg. Google)\n\nBut wait... there's more!\n\nThe best test setup: Automatically guarantee code quality and non-breaking\nchanges. (Seen a react app with 100% test coverage before?)\nNative web app: Your app's new home? The home screen of your users' phones.\nThe fastest fonts: Say goodbye to vacant text.\nStay fast: Profile your app's performance from the comfort of your command\nline!\nCatch problems: AppVeyor and TravisCI setups included by default, so your\ntests get run automatically on Windows and Unix.\n\nThere\u2019s also a fantastic video on how to structure your React.js apps with scalability in mind. It provides rationale for the majority of boilerplate's design decisions.\nKeywords: React.js, Redux, Hot Reloading, ESNext, Babel, react-router, Offline First, ServiceWorker, styled-components, redux-saga, FontFaceObserver\nQuick start\n\nMake sure that you have Node.js v8.15.1 and npm v5 or above installed.\nClone this repo using git clone --depth=1 https:\/\/github.com\/react-boilerplate\/react-boilerplate.git <YOUR_PROJECT_NAME>\nMove to the appropriate directory: cd <YOUR_PROJECT_NAME>.\nRun npm run setup in order to install dependencies and clean the git repo.\nAt this point you can run npm start to see the example app at http:\/\/localhost:3000.\nRun npm run clean to delete the example app.\n\nNow you're ready to rumble!\n\nPlease note that this boilerplate is production-ready and not meant for beginners! If you're just starting out with react or redux, please refer to https:\/\/github.com\/petehunt\/react-howto instead. If you want a solid, battle-tested base to build your next product upon and have some experience with react, this is the perfect start for you.\n\nDocumentation\n\nThe Hitchhiker's Guide to react-boilerplate: An introduction for newcomers to this boilerplate.\nOverview: A short overview of the included tools\nCommands: Getting the most out of this boilerplate\nTesting: How to work with the built-in test harness\nStyling: How to work with the CSS tooling\nYour app: Supercharging your app with Routing, Redux, simple\nasynchronicity helpers, etc.\nTroubleshooting: Solutions to common problems faced by developers.\n\nContributors\nThanks goes to these wonderful people (emoji key):\nMax Stoiber\ud83d\udcbb \ud83d\udcd6 \ud83e\udd14 \ud83d\udc40 \u26a0\ufe0fJulien Benchetrit\ud83d\udcbb \ud83d\udcac \ud83d\udcd6 \ud83d\udc40 \ud83d\udea7Sara Federico\ud83d\udcbb \ud83d\udc40 \ud83d\udcac \ud83d\udcd6 \ud83d\udea7Justin Greenberg\ud83d\udcbb \ud83d\udc40Jon Winn\ud83d\udcbb \ud83d\udc40Johan Meester\ud83d\udcbb \u26a0\ufe0f \ud83d\udcd6Yaroslav Kiliba\ud83d\udcbbGlen Ihrig\ud83d\udcbbSomasundaram Ayyappan\ud83d\udcbbOliver Turner\ud83d\udcbbSamuel Sharpe\ud83d\udcbbMihir Karandikar\ud83d\udcbbVaibhav Verma\ud83d\udcbbS\u00e9bastien Dubois\ud83d\udcbbChainarong Tangsurakit\ud83d\udcbbAmila Welihinda\ud83d\udcbb\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nSupporters\nThis project would not be possible without the support of these amazing folks. Become a sponsor to get your company in front of thousands of engaged react developers and help us out!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nThis project is licensed under the MIT license, Copyright (c) 2019 Maximilian\nStoiber. For more information see LICENSE.md.\n","88":"Front End Interview Handbook\n\n\n\n\n\n\nCredits: Illustration by @yangheng\n\n\n\nRead on the website\n\n\n\n\n  Black Lives Matter. Support the Equal Justice Initiative\n\n\nWhat is this?\nUnlike typical software engineer job interviews, front-end job interviews have less emphasis on algorithms and have more questions on intricate knowledge and expertise about the domain\u200a\u2014\u200aHTML, CSS, JavaScript, just to name a few areas.\nWhile there are some existing resources to help front end developers in preparing for interviews, they aren't as abundant as materials for a software engineer interview. Among the existing resources, probably the most helpful question bank would be Front-end Developer Interview Questions. Unfortunately, I couldn't find many complete and satisfactory answers to these questions online, hence here is my attempt at answering them. Being an open source repository, the project can live on with the support of the community as the state of web evolves.\nWhy do I want this?\nGo From Zero to Hero\nGo from zero to front end interview hero with this handbook. No prior interview experience needed.\nBack to Basics\nLearn to walk before you learn to fly. While React, Vue and Angular are cool, make sure you also know your fundamentals.\nCommunity Effort\nThe best thing about Open Source is that the community vets the contents, so you can be sure the answers here have been proofread by many.\nWho is this for?\nAnybody who wants to land a job at a tech company for a front end role and is looking to make sure they don't stumble on the basic questions. To be frank, I revise the answers here from time to time as well!\n\n\n\ud83d\udcb0 Interested in Front End Dev jobs? Sign up with Triplebyte to efficiently interview with top tech companies! \ud83d\udcb0\n\n\nLooking for Generic Interview Preparation?\nYou might be interested in the Tech Interview Handbook which has helpful content on general coding interviews such as algorithms, behavioral questions and an interview cheatsheet!\n\n\n\n\n\n\nCredits: Illustration by unDraw\n\n\nRead on the website\n\n\nTable of Contents\n\nHTML Questions\nCSS Questions\nJavaScript Questions\n\nContents\n\nEnglish\nChinese (Simplified) (\u7b80\u4f53\u4e2d\u6587)\nJapanese (\u65e5\u672c\u8a9e)\nKorean (\ud55c\uad6d\uc5b4)\nPolish (Polski)\nPortuguese (Portugu\u00eas)\nRussian (\u0420\u0443\u0441\u0441\u043a\u0438\u0439)\nTagalog\n\nRelated\nIf you are interested in how data structures are implemented, check out Lago, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.\nContributing\nCode of Conduct\nWe have adopted the same Code of Conduct as Facebook that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about how you can contribute, how to propose improvements or if you are interested in translating the content.\nSupporting\nMany hours of hard work have gone into this project. Your support will be very appreciated!\n\nLicense\nAll projects and packages in this repository are MIT licensed.\n","89":"slick\nthe last carousel you'll ever need\nDemo\nhttp:\/\/kenwheeler.github.io\/slick\nCDN\nTo start working with Slick right away, there's a couple of CDN choices availabile\nto serve the files as close, and fast as possible to your users:\n\nhttps:\/\/cdnjs.com\/libraries\/slick-carousel\nhttps:\/\/www.jsdelivr.com\/projects\/jquery.slick\n\nExample using jsDelivr\nJust add a link to the css file in your <head>:\n<!-- Add the slick-theme.css if you want default styling -->\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"\/\/cdn.jsdelivr.net\/npm\/slick-carousel@1.8.1\/slick\/slick.css\"\/>\n<!-- Add the slick-theme.css if you want default styling -->\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"\/\/cdn.jsdelivr.net\/npm\/slick-carousel@1.8.1\/slick\/slick-theme.css\"\/>\nThen, before your closing <body> tag add:\n<script type=\"text\/javascript\" src=\"\/\/cdn.jsdelivr.net\/npm\/slick-carousel@1.8.1\/slick\/slick.min.js\"><\/script>\nPackage Managers\n# Bower\nbower install --save slick-carousel\n\n# NPM\nnpm install slick-carousel\nContributing\nPLEASE review CONTRIBUTING.markdown prior to requesting a feature, filing a pull request or filing an issue.\nData Attribute Settings\nIn slick 1.5 you can now add settings using the data-slick attribute. You still need to call $(element).slick() to initialize slick on the element.\nExample:\n<div data-slick='{\"slidesToShow\": 4, \"slidesToScroll\": 4}'>\n  <div><h3>1<\/h3><\/div>\n  <div><h3>2<\/h3><\/div>\n  <div><h3>3<\/h3><\/div>\n  <div><h3>4<\/h3><\/div>\n  <div><h3>5<\/h3><\/div>\n  <div><h3>6<\/h3><\/div>\n<\/div>\nSettings\n\n\n\nOption\nType\nDefault\nDescription\n\n\n\n\naccessibility\nboolean\ntrue\nEnables tabbing and arrow key navigation.  Unless autoplay: true, sets browser focus to current slide (or first of current slide set, if multiple slidesToShow) after slide change. For full a11y compliance enable focusOnChange in addition to this.\n\n\nadaptiveHeight\nboolean\nfalse\nAdapts slider height to the current slide\n\n\nappendArrows\nstring\n$(element)\nChange where the navigation arrows are attached (Selector, htmlString, Array, Element, jQuery object)\n\n\nappendDots\nstring\n$(element)\nChange where the navigation dots are attached (Selector, htmlString, Array, Element, jQuery object)\n\n\narrows\nboolean\ntrue\nEnable Next\/Prev arrows\n\n\nasNavFor\nstring\n$(element)\nEnables syncing of multiple sliders\n\n\nautoplay\nboolean\nfalse\nEnables auto play of slides\n\n\nautoplaySpeed\nint\n3000\nAuto play change interval\n\n\ncenterMode\nboolean\nfalse\nEnables centered view with partial prev\/next slides. Use with odd numbered slidesToShow counts.\n\n\ncenterPadding\nstring\n'50px'\nSide padding when in center mode. (px or %)\n\n\ncssEase\nstring\n'ease'\nCSS3 easing\n\n\ncustomPaging\nfunction\nn\/a\nCustom paging templates. See source for use example.\n\n\ndots\nboolean\nfalse\nCurrent slide indicator dots\n\n\ndotsClass\nstring\n'slick-dots'\nClass for slide indicator dots container\n\n\ndraggable\nboolean\ntrue\nEnables desktop dragging\n\n\neasing\nstring\n'linear'\nanimate() fallback easing\n\n\nedgeFriction\ninteger\n0.15\nResistance when swiping edges of non-infinite carousels\n\n\nfade\nboolean\nfalse\nEnables fade\n\n\nfocusOnSelect\nboolean\nfalse\nEnable focus on selected element (click)\n\n\nfocusOnChange\nboolean\nfalse\nPuts focus on slide after change\n\n\ninfinite\nboolean\ntrue\nInfinite looping\n\n\ninitialSlide\ninteger\n0\nSlide to start on\n\n\nlazyLoad\nstring\n'ondemand'\nAccepts 'ondemand' or 'progressive' for lazy load technique. 'ondemand' will load the image as soon as you slide to it, 'progressive' loads one image after the other when the page loads.\n\n\nmobileFirst\nboolean\nfalse\nResponsive settings use mobile first calculation\n\n\nnextArrow\nstring (html | jQuery selector) | object (DOM node | jQuery object)\n<button type=\"button\" class=\"slick-next\">Next<\/button>\nAllows you to select a node or customize the HTML for the \"Next\" arrow.\n\n\npauseOnDotsHover\nboolean\nfalse\nPauses autoplay when a dot is hovered\n\n\npauseOnFocus\nboolean\ntrue\nPauses autoplay when slider is focussed\n\n\npauseOnHover\nboolean\ntrue\nPauses autoplay on hover\n\n\nprevArrow\nstring (html | jQuery selector) | object (DOM node | jQuery object)\n<button type=\"button\" class=\"slick-prev\">Previous<\/button>\nAllows you to select a node or customize the HTML for the \"Previous\" arrow.\n\n\nrespondTo\nstring\n'window'\nWidth that responsive object responds to. Can be 'window', 'slider' or 'min' (the smaller of the two).\n\n\nresponsive\narray\nnull\nArray of objects containing breakpoints and settings objects (see example). Enables settings at given breakpoint. Set settings to \"unslick\" instead of an object to disable slick at a given breakpoint.\n\n\nrows\nint\n1\nSetting this to more than 1 initializes grid mode. Use slidesPerRow to set how many slides should be in each row.\n\n\nrtl\nboolean\nfalse\nChange the slider's direction to become right-to-left\n\n\nslide\nstring\n''\nSlide element query\n\n\nslidesPerRow\nint\n1\nWith grid mode initialized via the rows option, this sets how many slides are in each grid row.\n\n\nslidesToScroll\nint\n1\n# of slides to scroll at a time\n\n\nslidesToShow\nint\n1\n# of slides to show at a time\n\n\nspeed\nint\n300\nTransition speed\n\n\nswipe\nboolean\ntrue\nEnables touch swipe\n\n\nswipeToSlide\nboolean\nfalse\nSwipe to slide irrespective of slidesToScroll\n\n\ntouchMove\nboolean\ntrue\nEnables slide moving with touch\n\n\ntouchThreshold\nint\n5\nTo advance slides, the user must swipe a length of (1\/touchThreshold) * the width of the slider.\n\n\nuseCSS\nboolean\ntrue\nEnable\/Disable CSS Transitions\n\n\nuseTransform\nboolean\ntrue\nEnable\/Disable CSS Transforms\n\n\nvariableWidth\nboolean\nfalse\nDisables automatic slide width calculation\n\n\nvertical\nboolean\nfalse\nVertical slide direction\n\n\nverticalSwiping\nboolean\nfalse\nChanges swipe direction to vertical\n\n\nwaitForAnimate\nboolean\ntrue\nIgnores requests to advance the slide while animating\n\n\nzIndex\nnumber\n1000\nSet the zIndex values for slides, useful for IE9 and lower\n\n\n\nResponsive Option Example\nThe responsive option, and value, is quite unique and powerful.\nYou can use it like so:\n$(\".slider\").slick({\n\n  \/\/ normal options...\n  infinite: false,\n\n  \/\/ the magic\n  responsive: [{\n\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        infinite: true\n      }\n\n    }, {\n\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        dots: true\n      }\n\n    }, {\n\n      breakpoint: 300,\n      settings: \"unslick\" \/\/ destroys slick\n\n    }]\n});\nEvents\nIn slick 1.4, callback methods were deprecated and replaced with events. Use them before the initialization of slick as shown below:\n\/\/ On swipe event\n$('.your-element').on('swipe', function(event, slick, direction){\n  console.log(direction);\n  \/\/ left\n});\n\n\/\/ On edge hit\n$('.your-element').on('edge', function(event, slick, direction){\n  console.log('edge was hit')\n});\n\n\/\/ On before slide change\n$('.your-element').on('beforeChange', function(event, slick, currentSlide, nextSlide){\n  console.log(nextSlide);\n});\n\n\n\nEvent\nParams\nDescription\n\n\n\n\nafterChange\nevent, slick, currentSlide\nAfter slide change callback\n\n\nbeforeChange\nevent, slick, currentSlide, nextSlide\nBefore slide change callback\n\n\nbreakpoint\nevent, slick, breakpoint\nFires after a breakpoint is hit\n\n\ndestroy\nevent, slick\nWhen slider is destroyed, or unslicked.\n\n\nedge\nevent, slick, direction\nFires when an edge is overscrolled in non-infinite mode.\n\n\ninit\nevent, slick\nWhen Slick initializes for the first time callback. Note that this event should be defined before initializing the slider.\n\n\nreInit\nevent, slick\nEvery time Slick (re-)initializes callback\n\n\nsetPosition\nevent, slick\nEvery time Slick recalculates position\n\n\nswipe\nevent, slick, direction\nFires after swipe\/drag\n\n\nlazyLoaded\nevent, slick, image, imageSource\nFires after image loads lazily\n\n\nlazyLoadError\nevent, slick, image, imageSource\nFires after image fails to load\n\n\n\nMethods\nMethods are called on slick instances through the slick method itself in version 1.4, see below:\n\/\/ Add a slide\n$('.your-element').slick('slickAdd',\"<div><\/div>\");\n\n\/\/ Get the current slide\nvar currentSlide = $('.your-element').slick('slickCurrentSlide');\nThis new syntax allows you to call any internal slick method as well:\n\/\/ Manually refresh positioning of slick\n$('.your-element').slick('setPosition');\n\n\n\nMethod\nArgument\nDescription\n\n\n\n\nslick\noptions : object\nInitializes Slick\n\n\nunslick\n\nDestroys Slick\n\n\nslickNext\n\nTriggers next slide\n\n\nslickPrev\n\nTriggers previous slide\n\n\nslickPause\n\nPause Autoplay\n\n\nslickPlay\n\nStart Autoplay (will also set autoplay option to true)\n\n\nslickGoTo\nindex : int, dontAnimate : bool\nGoes to slide by index, skipping animation if second parameter is set to true\n\n\nslickCurrentSlide\n\nReturns the current slide index\n\n\nslickAdd\nelement : html or DOM object, index: int, addBefore: bool\nAdd a slide. If an index is provided, will add at that index, or before if addBefore is set. If no index is provided, add to the end or to the beginning if addBefore is set. Accepts HTML String\n\n\nslickRemove\nindex: int, removeBefore: bool\nRemove slide by index. If removeBefore is set true, remove slide preceding index, or the first slide if no index is specified. If removeBefore is set to false, remove the slide following index, or the last slide if no index is set.\n\n\nslickFilter\nfilter : selector or function\nFilters slides using jQuery .filter syntax\n\n\nslickUnfilter\n\nRemoves applied filter\n\n\nslickGetOption\noption : string(option name)\nGets an option value.\n\n\nslickSetOption\nchange an option, refresh is always boolean and will update UI changes...\n\n\n\noption, value, refresh\nchange a single option to given value; refresh is optional.\n\n\n\n\"responsive\", [{ breakpoint: n, settings: {} }, ... ], refresh\nchange or add whole sets of responsive options\n\n\n\n{ option: value, option: value, ... }, refresh\nchange  multiple options to corresponding values.\n\n\n\n\nExample\nInitialize with:\n$(element).slick({\n  dots: true,\n  speed: 500\n});\nChange the speed with:\n$(element).slick('slickSetOption', 'speed', 5000, true);\nDestroy with:\n$(element).slick('unslick');\nSass Variables\n\n\n\nVariable\nType\nDefault\nDescription\n\n\n\n\n$slick-font-path\nstring\n\".\/fonts\/\"\nDirectory path for the slick icon font\n\n\n$slick-font-family\nstring\n\"slick\"\nFont-family for slick icon font\n\n\n$slick-loader-path\nstring\n\".\/\"\nDirectory path for the loader image\n\n\n$slick-arrow-color\ncolor\nwhite\nColor of the left\/right arrow icons\n\n\n$slick-dot-color\ncolor\nblack\nColor of the navigation dots\n\n\n$slick-dot-color-active\ncolor\n$slick-dot-color\nColor of the active navigation dot\n\n\n$slick-prev-character\nstring\n'\\2190'\nUnicode character code for the previous arrow icon\n\n\n$slick-next-character\nstring\n'\\2192'\nUnicode character code for the next arrow icon\n\n\n$slick-dot-character\nstring\n'\\2022'\nUnicode character code for the navigation dot icon\n\n\n$slick-dot-size\npixels\n6px\nSize of the navigation dots\n\n\n\nBrowser support\nSlick works on IE8+ in addition to other modern browsers such as Chrome, Firefox, and Safari.\nDependencies\njQuery 1.7\nLicense\nCopyright (c) 2017 Ken Wheeler\nLicensed under the MIT license.\nFree as in Bacon.\n","90":"\nImmer\n      \nCreate the next immutable state tree by simply modifying the current tree\nWinner of the \"Breakthrough of the year\" React open source award and \"Most impactful contribution\" JavaScript open source award in 2019\nContribute using one-click online setup\nYou can use Gitpod (a free online VS Code like IDE) for contributing online. With a single click it will launch a workspace and automatically:\n\nclone the immer repo.\ninstall the dependencies.\nrun yarn run start.\n\nso that you can start coding straight away.\n\nDocumentation\nThe documentation of this package is hosted at https:\/\/immerjs.github.io\/immer\/\nSupport\nDid Immer make a difference to your project? Join the open collective at https:\/\/opencollective.com\/immer!\nRelease notes\nhttps:\/\/github.com\/immerjs\/immer\/releases\n","91":"\nWelcome to The Super Tiny Compiler!\nThis is an ultra-simplified example of all the major pieces of a modern compiler\nwritten in easy to read JavaScript.\nReading through the guided code will help you learn about how most compilers\nwork from end to end.\nWant to jump into the code? Click here\nYou can also check it out on Glitch\n\nWhy should I care?\nThat's fair, most people don't really have to think about compilers in their day\njobs. However, compilers are all around you, tons of the tools you use are based\non concepts borrowed from compilers.\nBut compilers are scary!\nYes, they are. But that's our fault (the people who write compilers), we've\ntaken something that is reasonably straightforward and made it so scary that\nmost think of it as this totally unapproachable thing that only the nerdiest of\nthe nerds are able to understand.\nOkay so where do I begin?\nAwesome! Head on over to the the-super-tiny-compiler.js\nfile.\nI'm back, that didn't make sense\nOuch, I'm really sorry. Let me know how it can be improved.\nTests\nRun with node test.js\n\n\n","92":"JavaScript Stack from Scratch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to my modern JavaScript stack tutorial: JavaScript Stack from Scratch.\n\n\ud83c\udf89 This is the V2 of the tutorial, major changes happened since the 2016 release. Check the Change Log!\n\nThis is a straight-to-the-point guide to assembling a JavaScript stack. It requires some general programming knowledge, and JavaScript basics. It focuses on wiring tools together and giving you the simplest possible example for each tool. You can see this tutorial as a way to write your own boilerplate from scratch. Since the goal of this tutorial is to assemble various tools, I do not go into details about how these tools work individually. Refer to their documentation or find other tutorials if you want to acquire deeper knowledge in them.\nYou don't need to use this entire stack if you build a simple web page with a few JS interactions of course (a combination of Browserify\/Webpack + Babel + jQuery is enough to be able to write ES6 code in different files), but if you want to build a web app that scales, and need help setting things up, this tutorial will work great for you.\nA big chunk of the stack described in this tutorial uses React. If you are beginning and just want to learn React, create-react-app will get you up and running with a React environment very quickly with a pre-made configuration. I would for instance recommend this approach to someone who arrives in a team that's using React and needs to catch up with a learning playground. In this tutorial you won't use a pre-made configuration, because I want you to understand everything that's happening under the hood.\nCode examples are available for each chapter, and you can run them all with yarn && yarn start. I recommend writing everything from scratch yourself by following the step-by-step instructions though.\nFinal code available in the JS-Stack-Boilerplate repository, and in the releases. There is a live demo too.\nWorks on Linux, macOS, and Windows.\n\nNote: Since the tutorial was last edited in May 2017, a few libraries have slightly changed their APIs. 95% of the tutorial is still perfectly valid, but if you run into something weird, make sure to check out the open issues.\n\nTable of contents\n01 - Node, Yarn, package.json\n02 - Babel, ES6, ESLint, Flow, Jest, Husky\n03 - Express, Nodemon, PM2\n04 - Webpack, React, HMR\n05 - Redux, Immutable, Fetch\n06 - React Router, Server-Side Rendering, Helmet\n07 - Socket.IO\n08 - Bootstrap, JSS\n09 - Travis, Coveralls, Heroku\nComing up next\nSetting up your editor (Atom first), MongoDB, Progressive Web App, E2E testing.\nTranslations\nIf you want to add your translation, please read the translation recommendations to get started!\nV2\n\nBulgarian by mihailgaberov\nChinese (simplified) by @yepbug\nFrench by Naomi Hauret\nItalian by Fabrizio Bertone - fbertone.it\nPolish by @mbiesiad\n\nCheck out the ongoing translations.\nV1\n\nChinese (simplified) by @pd4d10\nItalian by Fabrizio Bertone\nJapanese by @takahashim\nRussian by React Theming\nThai by MicroBenz\n\nCredits\nCreated by @verekia \u2013 verekia.com.\nLicense: MIT\n","93":"\n   \n\nAVA is a test runner for Node.js with a concise API, detailed error output, embrace of new language features and process isolation that lets you develop with confidence \ud83d\ude80\nFollow the AVA Twitter account for updates.\nRead our contributing guide if you're looking to contribute (issues \/ PRs \/ etc).\n\nTranslations: Espa\u00f1ol, Fran\u00e7ais, Italiano, \u65e5\u672c\u8a9e, \ud55c\uad6d\uc5b4, Portugu\u00eas, \u0420\u0443\u0441\u0441\u043a\u0438\u0439, \u7b80\u4f53\u4e2d\u6587\nWhy AVA?\n\nMinimal and fast\nSimple test syntax\nRuns tests concurrently\nEnforces writing atomic tests\nNo implicit globals\nIncludes TypeScript definitions\nMagic assert\nIsolated environment for each test file\nWrite your tests using the latest JavaScript syntax\nPromise support\nAsync function support\nObservable support\nEnhanced assertion messages\nAutomatic parallel test runs in CI\nTAP reporter\n\nUsage\nTo install and set up AVA, run:\nnpm init ava\nYour package.json will then look like this (exact version notwithstanding):\n{\n\t\"name\": \"awesome-package\",\n\t\"scripts\": {\n\t\t\"test\": \"ava\"\n\t},\n\t\"devDependencies\": {\n\t\t\"ava\": \"^1.0.0\"\n\t}\n}\nOr if you prefer using Yarn:\nyarn add ava --dev\nAlternatively you can install ava manually:\nnpm install --save-dev ava\nDon't forget to configure the test script in your package.json as per above.\nCreate your test file\nCreate a file named test.js in the project root directory:\nconst test = require('ava');\n\ntest('foo', t => {\n\tt.pass();\n});\n\ntest('bar', async t => {\n\tconst bar = Promise.resolve('bar');\n\tt.is(await bar, 'bar');\n});\nRunning your tests\nnpm test\nOr with npx:\nnpx ava\nRun with the --watch flag to enable AVA's watch mode:\nnpx ava --watch\nSupported Node.js versions\nAVA supports the latest release of any major version that is supported by Node.js itself. Read more in our support statement.\nHighlights\nMagic assert\nAVA adds code excerpts and clean diffs for actual and expected values. If values in the assertion are objects or arrays, only a diff is displayed, to remove the noise and focus on the problem. The diff is syntax-highlighted too! If you are comparing strings, both single and multi line, AVA displays a different kind of output, highlighting the added or missing characters.\n\nClean stack traces\nAVA automatically removes unrelated lines in stack traces, allowing you to find the source of an error much faster, as seen above.\nParallel runs in CI\nAVA automatically detects whether your CI environment supports parallel builds. Each build will run a subset of all test files, while still making sure all tests get executed. See the ci-parallel-vars package for a list of supported CI environments.\nDocumentation\nPlease see the files in the docs directory:\n\nWriting tests\nExecution context\nAssertions\nSnapshot testing\nCommand line (CLI)\nConfiguration\nTest timeouts\n\nCommon pitfalls\nWe have a growing list of common pitfalls you may experience while using AVA. If you encounter any issues you think are common, comment in this issue.\nRecipes\n\nShared workers\nTest setup\nCode coverage\nWatch mode\nEndpoint testing\nWhen to use t.plan()\nBrowser testing\nTypeScript\nFlow\nConfiguring Babel\nUsing ES modules\nPassing arguments to your test files\nTesting React components\nTesting Vue.js components\nDebugging tests with Chrome DevTools\nDebugging tests with VSCode\nDebugging tests with WebStorm\nIsolated MongoDB integration tests\nTesting web apps using Puppeteer\nTesting web apps using Selenium WebDriverJS\n\nFAQ\nWhy not mocha, tape, tap?\nMocha requires you to use implicit globals like describe and it with the default interface (which most people use). It's not very opinionated and executes tests serially without process isolation, making it slow.\nTape and tap are pretty good. AVA is highly inspired by their syntax. They too execute tests serially. Their default TAP output isn't very user-friendly though so you always end up using an external tap reporter.\nIn contrast AVA is highly opinionated and runs tests concurrently, with a separate process for each test file. Its default reporter is easy on the eyes and yet AVA still supports TAP output through a CLI flag.\nHow is the name written and pronounced?\nAVA, not Ava or ava. Pronounced \/\u02c8e\u026av\u0259\/: Ay (face, made) V (vie, have) A (comma, ago)\nWhat is the header background?\nIt's the Andromeda galaxy.\nWhat is the difference between concurrency and parallelism?\nConcurrency is not parallelism. It enables parallelism.\nSupport\n\nStack Overflow\nSpectrum\nTwitter\n\nRelated\n\neslint-plugin-ava - Lint rules for AVA tests\nsublime-ava - Snippets for AVA tests\natom-ava - Snippets for AVA tests\nvscode-ava - Snippets for AVA tests\ngulp-ava - Run tests with gulp\ngrunt-ava - Run tests with grunt\nMore\u2026\n\nLinks\n\nAVA stickers, t-shirts, etc\nAwesome list\nDo you like AVA? Donate here!\nMore\u2026\n\nTeam\n\n\n\n\n\n\n\n\n\nMark Wubben\nSindre Sorhus\n\n\n\nFormer\n\nKevin M\u00e5rtensson\nJames Talmage\nJuan Soto\nJeroen Engels\nVadim Demedes\n\n\n\n\n\n\n\n\n\n\n\n","94":"sharp\n\nThe typical use case for this high speed Node.js module\nis to convert large images in common formats to\nsmaller, web-friendly JPEG, PNG and WebP images of varying dimensions.\nResizing an image is typically 4x-5x faster than using the\nquickest ImageMagick and GraphicsMagick settings\ndue to its use of libvips.\nColour spaces, embedded ICC profiles and alpha transparency channels are all handled correctly.\nLanczos resampling ensures quality is not sacrificed for speed.\nAs well as image resizing, operations such as\nrotation, extraction, compositing and gamma correction are available.\nMost modern macOS, Windows and Linux systems running Node.js v10+\ndo not require any additional install or runtime dependencies.\nExamples\nnpm install sharp\nconst sharp = require('sharp');\nCallback\nsharp(inputBuffer)\n  .resize(320, 240)\n  .toFile('output.webp', (err, info) => { ... });\nPromise\nsharp('input.jpg')\n  .rotate()\n  .resize(200)\n  .toBuffer()\n  .then( data => { ... })\n  .catch( err => { ... });\nAsync\/await\nconst semiTransparentRedPng = await sharp({\n  create: {\n    width: 48,\n    height: 48,\n    channels: 4,\n    background: { r: 255, g: 0, b: 0, alpha: 0.5 }\n  }\n})\n  .png()\n  .toBuffer();\nStream\nconst roundedCorners = Buffer.from(\n  '<svg><rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" rx=\"50\" ry=\"50\"\/><\/svg>'\n);\n\nconst roundedCornerResizer =\n  sharp()\n    .resize(200, 200)\n    .composite([{\n      input: roundedCorners,\n      blend: 'dest-in'\n    }])\n    .png();\n\nreadableStream\n  .pipe(roundedCornerResizer)\n  .pipe(writableStream);\n\n\nDocumentation\nVisit sharp.pixelplumbing.com for complete\ninstallation instructions,\nAPI documentation,\nbenchmark tests and\nchangelog.\nContributing\nA guide for contributors\ncovers reporting bugs, requesting features and submitting code changes.\nLicensing\nCopyright 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020 Lovell Fuller and contributors.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttps:\/\/www.apache.org\/licenses\/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","95":"Hyperapp\n\nThe tiny framework for building hypertext applications.\n\n\nDo more with less\u2014We have minimized the concepts you need to learn to get stuff done. Views, actions, effects, and subscriptions are all pretty easy to get to grips with and work together seamlessly.\nWrite what, not how\u2014With a declarative API that's easy to read and fun to write, Hyperapp is the best way to build purely functional, feature-rich, browser-based apps in JavaScript.\nSmaller than a favicon\u20141 kB, give or take. Hyperapp is an ultra-lightweight Virtual DOM, highly-optimized diff algorithm, and state management library obsessed with minimalism.\n\nHere's the first example to get you started\u2014no bundlers or compilers. Try it yourself.\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script type=\"module\">\n      import { h, text, app } from \"https:\/\/unpkg.com\/hyperapp\"\n\n      const AddTodo = (state) => ({\n        ...state,\n        todos: state.todos.concat(state.value),\n      })\n\n      const NewValue = (state, event) => ({\n        ...state,\n        value: event.target.value,\n      })\n\n      app({\n        init: { todos: [], value: \"\" },\n        view: ({ todos, value }) =>\n          h(\"main\", {}, [\n            h(\"input\", { type: \"text\", oninput: NewValue, value }),\n            h(\"button\", { onclick: AddTodo }, text(\"Add\")),\n            h(\"ul\", {},\n              todos.map((todo) => h(\"li\", {}, text(todo)))\n            ),\n          ]),\n        node: document.getElementById(\"app\"),\n      })\n    <\/script>\n  <\/head>\n  <body>\n    <main id=\"app\"><\/main>\n  <\/body>\n<\/html>\nNow that you have poked around the code a bit, you may have some questions. What is init and view, and how do they fit together? The app starts off with init, where we set the initial state. The view returns a plain object that represents how we want the DOM to look (the virtual DOM) and Hyperapp takes care of modifying the actual DOM to match this specification whenever the state changes. That's really all there is to it.\nReady to dive in? Learn the basics in the tutorial or visit the API reference for more documentation. If you prefer to learn by studying real-world examples, you can browse our awesome list of resources too.\nInstallation\nInstall Hyperapp with npm or Yarn:\nnpm i hyperapp\nThen with a module bundler like Rollup or Webpack import it in your application and get right down to business.\nimport { h, text, app } from \"hyperapp\"\nDon't want to set up a build step? Import Hyperapp in a <script> tag as a module. Don't worry; modules are supported in all evergreen, self-updating desktop, and mobile browsers.\n<script type=\"module\">\n  import { h, text, app } from \"https:\/\/unpkg.com\/hyperapp\"\n<\/script>\nPackages\nOfficial packages provide access to The Web Platform, and ensure that the APIs are exposed in a way that makes sense for Hyperapp, and the underlying code is stable. We already cover a decent amount of features, but you can always create your own effects and subscriptions if something is not available yet.\n\n\n\nPackage\nStatus\nAbout\n\n\n\n\n@hyperapp\/dom\n\nManipulate the DOM, focus, blur, and measure elements.\n\n\n@hyperapp\/html\n\nWrite HTML with plain functions.\n\n\n@hyperapp\/time\n\nSubscribe to intervals, get the time.\n\n\n@hyperapp\/http\n\nTalk to servers, make HTTP requests.\n\n\n@hyperapp\/events\n\nSubscribe animation frames, keyboard, mouse, window, and more.\n\n\n@hyperapp\/random\n\nDeclarative random numbers and values.\n\n\n@hyperapp\/navigation\n\nSubscribe and manage the browser URL history.\n\n\n\nHelp, I'm stuck!\nDon't panic! If you've hit a stumbling block, hop on the Hyperapp Slack to get help, and if you don't receive an answer, or if you remain stuck, please file an issue, and we'll figure it out together.\nContributing\nHyperapp is free and open source software. If you love Hyperapp, becoming a contributor or sponsoring is the best way to give back. Thank you to everyone who already contributed to Hyperapp!\n\nLicense\nMIT\n","96":"\nPassport\nPassport is Express-compatible authentication\nmiddleware for Node.js.\nPassport's sole purpose is to authenticate requests, which it does through an\nextensible set of plugins known as strategies.  Passport does not mount\nroutes or assume any particular database schema, which maximizes flexibility and\nallows application-level decisions to be made by the developer.  The API is\nsimple: you provide Passport a request to authenticate, and Passport provides\nhooks for controlling what occurs when authentication succeeds or fails.\n\n\nAdvertisement\n\nThe Complete Node.js Developer CourseLearn Node. js by building real-world applications with Node, Express, MongoDB, Jest, and more!\n\n\nStatus:\n\n\n\nInstall\n$ npm install passport\n\nUsage\nStrategies\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using OAuth (for example, via Facebook\nor Twitter), or federated authentication using OpenID.\nBefore authenticating requests, the strategy (or strategies) used by an\napplication must be configured.\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    User.findOne({ username: username }, function (err, user) {\n      if (err) { return done(err); }\n      if (!user) { return done(null, false); }\n      if (!user.verifyPassword(password)) { return done(null, false); }\n      return done(null, user);\n    });\n  }\n));\nThere are 480+ strategies. Find the ones you want at: passportjs.org\nSessions\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide functions to Passport which implements the necessary\nserialization and deserialization logic.  In a typical application, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  User.findById(id, function (err, user) {\n    done(err, user);\n  });\n});\nMiddleware\nTo use Passport in an Express or\nConnect-based application, configure it\nwith the required passport.initialize() middleware.  If your application uses\npersistent login sessions (recommended, but not required), passport.session()\nmiddleware must also be used.\nvar app = express();\napp.use(require('serve-static')(__dirname + '\/..\/..\/public'));\napp.use(require('cookie-parser')());\napp.use(require('body-parser').urlencoded({ extended: true }));\napp.use(require('express-session')({ secret: 'keyboard cat', resave: true, saveUninitialized: true }));\napp.use(passport.initialize());\napp.use(passport.session());\nAuthenticate Requests\nPassport provides an authenticate() function, which is used as route\nmiddleware to authenticate requests.\napp.post('\/login', \n  passport.authenticate('local', { failureRedirect: '\/login' }),\n  function(req, res) {\n    res.redirect('\/');\n  });\nStrategies\nPassport has a comprehensive set of over 480 authentication strategies\ncovering social networking, enterprise integration, API services, and more.\nSearch all strategies\nThere is a Strategy Search at passportjs.org\nThe following table lists commonly used strategies:\n\n\n\nStrategy\nProtocol\nDeveloper\n\n\n\n\nLocal\nHTML form\nJared Hanson\n\n\nOpenID\nOpenID\nJared Hanson\n\n\nBrowserID\nBrowserID\nJared Hanson\n\n\nFacebook\nOAuth 2.0\nJared Hanson\n\n\nGoogle\nOpenID\nJared Hanson\n\n\nGoogle\nOAuth \/ OAuth 2.0\nJared Hanson\n\n\nTwitter\nOAuth\nJared Hanson\n\n\nAzure Active Directory\nOAuth 2.0 \/ OpenID \/ SAML\nAzure\n\n\n\nExamples\n\nFor a complete, working example, refer to the example\nthat uses passport-local.\nLocal Strategy: Refer to the following tutorials for setting up user authentication via LocalStrategy (passport-local):\n\nMongo\n\nExpress v3x - Tutorial \/ working example\nExpress v4x - Tutorial \/ working example\n\n\nPostgres\n\nTutorial \/ working example\n\n\n\n\nSocial Authentication: Refer to the following tutorials for setting up various social authentication strategies:\n\nExpress v3x - Tutorial \/ working example\nExpress v4x - Tutorial \/ working example\n\n\n\nRelated Modules\n\nLocomotive \u2014 Powerful MVC web framework\nOAuthorize \u2014 OAuth service provider toolkit\nOAuth2orize \u2014 OAuth 2.0 authorization server toolkit\nconnect-ensure-login  \u2014 middleware to ensure login sessions\n\nThe modules page on the\nwiki lists other useful modules\nthat build upon or integrate with Passport.\nLicense\nThe MIT License\nCopyright (c) 2011-2019 Jared Hanson <http:\/\/jaredhanson.net\/>\n","97":"localForage\n\n\n\n\n\n\nlocalForage is a fast and simple storage library for JavaScript. localForage\nimproves the offline experience of your web app by using asynchronous storage\n(IndexedDB or WebSQL) with a simple, localStorage-like API.\nlocalForage uses localStorage in browsers with no IndexedDB or\nWebSQL support. See the wiki for detailed compatibility info.\nTo use localForage, just drop a single JavaScript file into your page:\n<script src=\"localforage\/dist\/localforage.js\"><\/script>\n<script>localforage.getItem('something', myCallback);<\/script>\nTry the live example.\nDownload the latest localForage from GitHub, or install with\nnpm:\nnpm install localforage\nSupport\nLost? Need help? Try the\nlocalForage API documentation. localForage API\u6587\u6863\u4e5f\u6709\u4e2d\u6587\u7248\u3002\nIf you're having trouble using the library, running the tests, or want to contribute to localForage, please look through the existing issues for your problem first before creating a new one. If you still need help, feel free to file an issue.\nHow to use localForage\nCallbacks vs Promises\nBecause localForage uses async storage, it has an async API.\nIt's otherwise exactly the same as the\nlocalStorage API.\nlocalForage has a dual API that allows you to either use Node-style callbacks\nor Promises. If you are unsure which one is right for you, it's recommended to use Promises.\nHere's an example of the Node-style callback form:\nlocalforage.setItem('key', 'value', function (err) {\n  \/\/ if err is non-null, we got an error\n  localforage.getItem('key', function (err, value) {\n    \/\/ if err is non-null, we got an error. otherwise, value is the value\n  });\n});\nAnd the Promise form:\nlocalforage.setItem('key', 'value').then(function () {\n  return localforage.getItem('key');\n}).then(function (value) {\n  \/\/ we got our value\n}).catch(function (err) {\n  \/\/ we got an error\n});\nOr, use async\/await:\ntry {\n    const value = await localforage.getItem('somekey');\n    \/\/ This code runs once the value has been loaded\n    \/\/ from the offline store.\n    console.log(value);\n} catch (err) {\n    \/\/ This code runs if there were any errors.\n    console.log(err);\n}\nFor more examples, please visit the API docs.\nStoring Blobs, TypedArrays, and other JS objects\nYou can store any type in localForage; you aren't limited to strings like in\nlocalStorage. Even if localStorage is your storage backend, localForage\nautomatically does JSON.parse() and JSON.stringify() when getting\/setting\nvalues.\nlocalForage supports storing all native JS objects that can be serialized to\nJSON, as well as ArrayBuffers, Blobs, and TypedArrays. Check the\nAPI docs for a full list of types supported by localForage.\nAll types are supported in every storage backend, though storage limits in\nlocalStorage make storing many large Blobs impossible.\nConfiguration\nYou can set database information with the config() method.\nAvailable options are driver, name, storeName, version, size, and\ndescription.\nExample:\nlocalforage.config({\n    driver      : localforage.WEBSQL, \/\/ Force WebSQL; same as using setDriver()\n    name        : 'myApp',\n    version     : 1.0,\n    size        : 4980736, \/\/ Size of database, in bytes. WebSQL-only for now.\n    storeName   : 'keyvaluepairs', \/\/ Should be alphanumeric, with underscores.\n    description : 'some description'\n});\nNote: you must call config() before you interact with your data. This\nmeans calling config() before using getItem(), setItem(), removeItem(),\nclear(), key(), keys() or length().\nMultiple instances\nYou can create multiple instances of localForage that point to different stores\nusing createInstance. All the configuration options used by\nconfig are supported.\nvar store = localforage.createInstance({\n  name: \"nameHere\"\n});\n\nvar otherStore = localforage.createInstance({\n  name: \"otherName\"\n});\n\n\/\/ Setting the key on one of these doesn't affect the other.\nstore.setItem(\"key\", \"value\");\notherStore.setItem(\"key\", \"value2\");\nRequireJS\nYou can use localForage with RequireJS:\ndefine(['localforage'], function(localforage) {\n    \/\/ As a callback:\n    localforage.setItem('mykey', 'myvalue', console.log);\n\n    \/\/ With a Promise:\n    localforage.setItem('mykey', 'myvalue').then(console.log);\n});\nTypeScript\nIf you have the allowSyntheticDefaultImports compiler option set to true in your tsconfig.json (supported in TypeScript v1.8+), you should use:\nimport localForage from \"localforage\";\nOtherwise you should use one of the following:\nimport * as localForage from \"localforage\";\n\/\/ or, in case that the typescript version that you are using\n\/\/ doesn't support ES6 style imports for UMD modules like localForage\nimport localForage = require(\"localforage\");\nFramework Support\nIf you use a framework listed, there's a localForage storage driver for the\nmodels in your framework so you can store data offline with localForage. We\nhave drivers for the following frameworks:\n\nAngularJS\nAngular 4 and up\nBackbone\nEmber\nVue\nNuxtJS\n\nIf you have a driver you'd like listed, please\nopen an issue to have it\nadded to this list.\nCustom Drivers\nYou can create your own driver if you want; see the\ndefineDriver API docs.\nThere is a list of custom drivers on the wiki.\nWorking on localForage\nYou'll need node\/npm and\nbower.\nTo work on localForage, you should start by\nforking it and installing its\ndependencies. Replace USERNAME with your GitHub username and run the\nfollowing:\n# Install bower globally if you don't have it:\nnpm install -g bower\n\n# Replace USERNAME with your GitHub username:\ngit clone git@github.com:USERNAME\/localForage.git\ncd localForage\nnpm install\nbower install\nOmitting the bower dependencies will cause the tests to fail!\nRunning Tests\nYou need PhantomJS installed to run local tests. Run npm test (or,\ndirectly: grunt test). Your code must also pass the\nlinter.\nlocalForage is designed to run in the browser, so the tests explicitly require\na browser environment. Local tests are run on a headless WebKit (using\nPhantomJS).\nWhen you submit a pull request, tests will be run against all browsers that\nlocalForage supports on Travis CI using Sauce Labs.\nLibrary Size\nAs of version 1.7.3 the payload added to your app is rather small. Served using gzip compression, localForage will add less than 10k to your total bundle size:\n\nminified`~29kB`\ngzipped`~8.8kB`\nbrotli'd`~7.8kB`\n\nLicense\nThis program is free software; it is distributed under an\nApache License.\n\nCopyright (c) 2013-2016 Mozilla\n(Contributors).\n","98":"\n\n\n\n\n\nA curated list of delightful Visual Studio Code packages and resources. For more awesomeness, check out awesome.\n \n\n\nTable of Contents\n\nOfficial\nSyntax\nMigrating from other editors\n\nMigrating from Vim\nMigrating from Atom\nMigrating from Sublime Text\nMigrating from Visual Studio\nMigrating from Intellij IDEA\nCamel humps\n\n\nUsing VS Code with particular technologies\nLint and IntelliSense\n\n1C\nAutoHotkey\nBash\n\nBash IDE\nBash Debug\nShellman\n\n\nC++\nC#\nClojure\nCSS\nGo\nGroovy\nHaskell\nShell\nJava\nJavaScript\nTypescript\nMarkdown\n\nmarkdownlint\nMarkdown All in one\nMarkdown Emoji\n\n\nPHP\n\nIntelliSense\nLaravel\nTwig\nSmarty\nOther extensions\nRead more\n\n\nPOV-Ray\nPython\n\nTensorFlow\n\n\nReasonML\nRust\nTerraform\n\n\nProductivity\n\nARM Template Viewer\nAzure Cosmos DB\nAzure IoT Toolkit\nBookmarks\nColor Tabs\nCreate tests\nDeploy\nDuplicate Action\nError Lens\nES7 React\/Redux\/GraphQL\/React-Native snippets\nGi\nGistPad\nGit History\nGit Project Manager\nGitLink\nGitLens\nGit Indicators\nGitHub\nGitHub Pull Request Monitor\nGitLab Workflow\nGradle Tasks\nIcon Fonts\nImport Cost\nJira and Bitbucket\nJS Parameter Annotations\nJumpy\nKanban\nLive Server\nMultiple clipboards\nngrok for VSCode\nDotnet Core Test Explorer\ni18n Ally\nInstant Markdown\nnpm Intellisense\nParameter Hints\nPartial Diff\nPaste JSON as Code\nPath IntelliSense\nPower Tools\nPrintCode\nProject Dashboard\nProject Manager\nREST Client\nRainbow CSV\nRemote Development\nRemote VSCode\nSettings Sync\nText Power Tools\nTodo Tree\nToggle Quotes\nTypescript Destructure\nWakaTime\nYo\nTiming\n\n\nFormatting\/Beautification\n\nBetter Align\nAuto Close Tag\nAuto Rename Tag\nbeautify\nhtml2pug\nECMAScript Quotes Transformer\nPaste and Indent\nSort Lines\nSurround\nWrap Selection\nFormatting Toggle\nBracket Pair Colorizer\nAuto Import\nshell-format\nVscode Google Translate\n\n\nExplorer Icons\n\nCity Lights Icons\nVSCode Icons\nSeti-UI\nMaterial-Icon-Theme\n\n\nUncategorized\n\nAscii Tree Generator\nBrowser Preview\nCarbon-now-sh\nCodeRoad\nCode Runner\nCode Time\nColor Highlight\nOutput Colorizer\nDash\nDebugger for Chrome\nECMAScript Quotes Transformer\nEdit with Shell Command\nEditor Config for VS Code\nftp-sync\nHighlight JSX\/HTML tags\nIndent Rainbow\niTerm2 Theme Sync\nPassword Generator\nPlatformIO\nPolacode\nQuokka\nRemote Workspace\nRunner\nSlack\nSmoothType\nSpotify\nSVG\nSVG Viewer\nText Marker (Highlighter)\nESDOC MDN\nInterface generator\n\n\nThemes\n\n2077 Theme by Endormi\nAn Old Hope Theme by Dustin Sanders\nAriake Dark by wart\nAtom One Dark Theme by Mahmoud Ali\nAtomize by emroussel\nAyu by teabyii\nBorealis Theme by Alexander Eckert\nCaptain Sweetheart by ultradracula\nCity Lights Theme by Yummygum\nCobalt2 Theme Official by Wes Bos\nDracula Official by Dracula Theme\nEdge by Bogdan Lazar\nEva Theme by fisheva\nFairyfloss by nopjmp and sailorhg\nGitHub Theme by Thomas Pink\nJellybeans Theme by Dimitar Nonov\nMaterial Palenight Theme by whizkydee\nMaterial Theme by Mattia Astorino\nMno by u29dc\nMonokai Oblique\nMonokai Pro by monokai (commercial)\nNight Owl by Sarah Drasner\nPlastic by Will Stone\nNiketa Theme by Dejan Toteff\nNord by arcticicestudio\nRainglow by Dayle Rees\nRelaxed Theme by Michael K\u00fchnel\nShades of Purple by Ahmad Awais\nSlime Theme by smlombardi\nTinacious design syntax by Tinacious\n\n\nPeople to Follow\nResources for extension developers\n\nDocumentation\nLibraries\nTools\n\n\nOnline Courses\n\nVisual Studio Code Power User Course (commercial)\n\n\nContribute\nLicense\n\nOfficial\n\nOfficial website\nSource code on GitHub\nReleases (stable channel)\nReleases (insiders channel)\nMonthly iteration plans\n\nSyntax\nLanguage packages extend the editor with syntax highlighting and\/or snippets for a specific language or file format.\n\nArduino\nBefunge\nBlink\nBolt\nBond\nCMake\nDart\nDockerfile\nEJS\nElixir\nElm\nErlang\nF#\nFlatbuffers\nFortran\nHack(HHVM)\nHandlebars\nHive SQL\nJulia\nKL\nKotlin\nLaTeX\nMason\nopenHAB\nParser 3\nPascal, or OmniPascal (only for Windows)\nPerl HTML-Template\nPOV-Ray\nProtobuf\nRuby\nScala\nShaders (HLSL, GLSL, Cg) \nStylus\nSwift\nVEX\nWenyan\nZephir\n\nMigrating from other editors\nThe VSCode team provides keymaps from popular editors, making the transition to VSCode almost seamless and easy.\nMigrating from Vim\n\nVim Mode - Relatively new, but promising extension implementing Vim features in VSCode\n\nMigrating from Atom\n\nPopular Atom key bindings for Visual Studio Code\n\nMigrating from Sublime Text\n\nPopular Sublime Text key bindings for VS Code.\n\nMigrating from Visual Studio\n\nPopular Visual Studio key bindings for VS Code.\n\nMigrating from Intellij IDEA\n\nPopular Intellij IDEA key bindings for VS Code.\n\nCamel Humps\n\nLike with Visual Studio and Resharper or Intellij IDEA\n\nUsing VS Code with particular technologies\nMicrosoft created a collection of recipes for using VS Code with particular technologies (mostly Web).\nMake sure to visit it at Microsoft\/vscode-recipes\nLint and IntelliSense\nIn case the awesome nirvana that is linting has not yet been unleashed upon you:\n\nlint was the name originally given to a particular program that flagged some suspicious and non-portable constructs (likely to be bugs) in C language source code. The term is now applied generically to tools that flag suspicious usage in software written in any computer language.\n\nUnlike some other editors, VS Code supports IntelliSense, linting, outline out-of-the-box and doesn't require any separate extension to run linter packages. Some linters are already integrated in VS Code, you can find the full list in the official documentation, Languages section.\n1C\n\n1C\/OScript - rich 1\u0421:Enterprise 8 (BSL) language support in VSC - add syntax highlighting to *.bsl \u0438 *.os files in VSC, add IntelliSense and syntax helper for 1\u0421 lang\n\nAutoHotkey\nAutoHotkey Plus\n\nSyntax Highlighting, Snippets, Go to Definition, Signature helper and Code formatter\n\nBash\nBash IDE\n\nA language server for Bash\n\nBash Debug\n\nA debugger extension for Bash scripts based on bashdb\n\n\nShellman\n\nBash script snippets extension\n\n\nC++\n\nC\/C++ - Preview C\/C++ extension by Microsoft, read official blog post for the details\nClangd - Provides C\/C++ language IDE features for VS Code using clangd: code completion, compile errors and warnings, go-to-definition and cross references, include management, code formatting, simple refactorings.\ngnu-global-tags - Provide Intellisense for C\/C++ with the help of the GNU Global tool.\nYouCompleteMe - Provides semantic completions for C\/C++ (and TypeScript, JavaScript, Objective-C, Golang, Rust) using YouCompleteMe.\nC\/C++ Clang Command Adapter - Completion and Diagnostic for C\/C++\/Objective-C using Clang command.\nCQuery - C\/C++ language server supporting multi-million line code base, powered by libclang. Cross references, completion, diagnostics, semantic highlighting and more.\n\nMore\n\nMicrosoft's tutorial on using VSCode for remote C\/C++ development\n\nC#, ASP .NET and .NET Core\n\nC# - C# extension by Microsoft, read official documentation for the details\nC# FixFormat - Fix format of usings \/ indents \/ braces \/ empty lines\nC# Extensions - Provides extensions to the IDE that will speed up your development workflow.\nMSBuild Project Tools\nVSCode Solution Explorer\n.NET Core Test Explorer\n\n\nClojure\nCalva\n\nIntegrated REPL, linting, inline eval, test runner, and more. Powered by Cider & nRepl.\n\n\nCSS\nCSS Peek\n\nPeek or Jump to a CSS definition directly from HTML, just like in Brackets!\n\n\n\n\nstylelint - Lint CSS\/SCSS.\n\n\nAutoprefixer\nParse CSS,SCSS, LESS and add vendor prefixes automatically.\n\n\n\nIntellisense for CSS class names - Provides CSS class name completion for the HTML class attribute based on the CSS files in your workspace. Also supports React's className attribute.\n\n\n\nGo\n\nGo - Rich language support for the Go language.\n\nGroovy\n\nVsCode Groovy Lint - Groovy lint, format, prettify and auto-fix\n\n\nHaskell\n\nhaskell-linter\nHaskell IDE engine - provides language server for stack and cabal projects.\n\nShell\n\nautocomplate-shell\n\nJava\n\n\nLanguage Support for Java(TM) by Red Hat\n\n\nDebugger for Java\n\n\nMaven for Java\n\n\nLombok\n\n\nJavaScript\n\nBabel JavaScript\nVisual Studio IntelliCode - This extension provides AI-assisted development features including autocomplete and other insights based on understanding your code context.\n\n\nSee the difference between these two here\n\ntslint - TSLint for Visual Studio Code (with \"tslint.jsEnable\": true).\neslint - Linter for eslint.\nXO - Linter for XO.\nAVA - Snippets for AVA.\nPrettier - Linter, Formatter and Pretty printer for Prettier.\nSchema.org Snippets - Snippets for Schema.org.\nCode Spell Checker - Spelling Checker for Visual Studio Code.\n\nFramework-specific:\n\nVetur - Toolkit for Vue.js\n\n\nDebugger for Chrome\n\nA VS Code extension to debug your JavaScript code in the Chrome browser, or other targets that support the Chrome Debugging Protocol.\n\nFacebook Flow\n\nFlow Language Support - provides all the functionality you would expect \u2014 linting, intellisense, type tooltips and click-to-definition\nvscode-flow-ide - an alternative Flowtype extension for Visual Studio Code\n\nTypeScript\n\ntslint - TSLint for Visual Studio Code\nTypeScript Hero - Code outline view of your open TS, sort and organize your imports.\n\nDebugger for Chrome\n\nA VS Code extension to debug your JavaScript code in the Chrome browser, or other targets that support the Chrome Debugging Protocol.\n\nMarkdown\nmarkdownlint\n\nLinter for markdownlint.\n\nMarkdown All in One\n\nAll-in-one markdown plugin (keyboard shortcuts, table of contents, auto preview, list editing and more)\n\n\nMarkdown Emoji\n\nAdds emoji syntax support to VS Code's built-in Markdown preview\n\n\nPHP\nIntelliSense\nThese extensions provide slightly different sets of features. While the first one offers better autocompletion support, the second one seems to have more features overall.\n\nPHP Intelephense\nPHP IntelliSense\n\nLaravel\n\nLaravel 5 Snippets - Laravel 5 snippets for Visual Studio Code\nLaravel Blade Snippets - Laravel blade snippets and syntax highlight support\n\n\n\nLaravel Model Snippets - Quickly get models up and running with Laravel Model Snippets.\n\n\n\nLaravel Artisan - Laravel Artisan commands within Visual Studio Code\n\n\n\nDotENV - Support for dotenv file syntax\n\n\nTwig\n\nTwig Language 2\n\nTo enable Emmet support in .twig files, you'll need to have the following in your settings:\n{\n  \"emmet.includeLanguages\": {\n    \"twig\": \"html\"\n  }\n}\nSmarty\nSmarty Template Support\n\nSmarty template support with formatting, folding, snippets, syntax highlighting and more.\n\n\nOther extensions\n\nFormat HTML in PHP - Formatting for the HTML in PHP files. Runs before the save action so you can still have a PHP formatter.\n\n\n\nComposer\nPHP Debug - XDebug extension for Visual Studio Code\nPHP DocBlocker\nphp cs fixer - PHP CS Fixer extension for VS Code, php formatter, php code beautify tool\nphpcs - PHP CodeSniffer for Visual Studio Code\nphpfmt - phpfmt for Visual Studio Code\n\nRead more\n\nConfiguring Visual Studio Code for Drupal\n\nPOV-Ray\n\nPOV-Ray - Persistence of Vision Ray Tracer (POV-Ray) Extension, includes Syntax Highlighting and Snippets for common POV-Ray scene elements, Render the current scene from within Visual Studio Code\n\n\nPython\n\nPython - Linting, Debugging (multi threaded, web apps), Intellisense, auto-completion, code formatting, snippets, unit testing, and more.\n\nTensorFlow\n\nTensorFlow Snippets - This extension includes a set of useful code snippets for developing TensorFlow models in Visual Studio Code.\n\n\nReasonML\n\nReasonML - Intellisense, code formatting, refactoring, code lens and more\n\nRust\n\nRust - Linting, auto-completion, code formatting, snippets and more\n\nTerraform\n\nTerraform - Syntax highlighting, linting, formatting, and validation for Hashicorp's Terraform\n\nProductivity\nARM Template Viewer\n\nDisplays a graphical preview of Azure Resource Manager (ARM) templates. The view will show all resources with the official Azure icons and also linkage between the resources.\n\n\nAzure Cosmos DB\n\nBrowse your database inside the vs code editor\n\n\nAzure IoT Toolkit\n\nEverything you need for the Azure IoT development: Interact with Azure IoT Hub, manage devices connected to Azure IoT Hub, and develop with code snippets for Azure IoT Hub\n\n\nBookmarks\n\nMark lines and jump to them\n\nColor Tabs\n\nAn extension for big projects or monorepos that colors your tab\/titlebar based on the current package\n\n\nCreate tests\n\nAn extension to quickly generate test files.\n\n\nDeploy\n\nCommands for upload or copy files of a workspace to a destination.\n\n\nDuplicate Action\n\nAbility to duplicate files and directories.\n\nError Lens\n\nShow language diagnostics inline (errors\/warnings\/...).\n\n\nES7 React\/Redux\/GraphQL\/React-Native snippets\n\nProvides Javascript and React\/Redux snippets in ES7\n\n\nGi\n\nGenerating .gitignore files made easy.\n\n\nGistPad\n\nAllows you to manage GitHub Gists entirely within the editor. You can open, create, delete, fork, star and clone gists, and then seamlessly begin editing files as if they were local. It's like your very own developer library for building and referencing code snippets, commonly used config\/scripts, programming-related notes\/documentation, and interactive samples.\n\n\nGit History\n\nView git log, file or line History\n\nGit Project Manager\n\nAutomatically indexes your git projects and lets you easily toggle between them\n\nGitLink\n\nGoTo current file's online link in browser and Copy the link in clipboard.\n\n\nGitLens\n\nProvides Git CodeLens information (most recent commit, # of authors), on-demand inline blame annotations, status bar blame information, file and blame history explorers, and commands to compare changes with the working tree or previous versions.\n\n\nGit Indicators\n\nAtom-like git indicators on active panel\n\n\n\n\nGitHub\n\nProvides GitHub workflow support. For example browse project, issues, file (the current line), create and manage pull request. Support for other providers (e.g. gitlab or bitbucket) is planned.\nHave a look at the README.md on how to get started with the setup for this extension.\n\nGitHub Pull Request Monitor\n\nThis extension uses the GitHub api to monitor the state of your pull requests and let you know when it's time to merge or if someone requested changes.\n\n\nGitLab Workflow\n\nAdds a GitLab sidebar icon to view issues, merge requests and other GitLab resources.  You can also view the results of your GitLab CI\/CD pipeline and check the syntax of your .gitlab-ci.yml.\n\nGradle Tasks\n\nRun gradle tasks in VS Code.\n\n\nIcon Fonts\n\nSnippets for popular icon fonts such as Font Awesome, Ionicons, Glyphicons, Octicons, Material Design Icons and many more!\n\nImport Cost\n\nThis extension will display inline in the editor the size of the imported package. The extension utilizes webpack with babili-webpack-plugin in order to detect the imported size.\n\nJira and Bitbucket\n\nBringing the power of Jira and Bitbucket to VS Code - With Atlassian for VS Code you can create and view issues, start work on issues, create pull requests, do code reviews, start builds, get build statuses and more!\n\n\nJS Parameter Annotations\n\nProvides annotations on function calls in JS\/TS files to provide parameter names to arguments.\n\n\nJumpy\n\nProvides fast cursor movement, inspired by Atom's package of the same name.\n\n\nKanban\n\n\nSimple Kanban board for use in Visual Studio Code, with time tracking and Markdown support.\n\nLive Server\n\nLaunch a development local Server with live reload feature for static & dynamic pages.\n\n\nMultiple clipboards\n\nOverride the regular Copy and Cut commands to keep selections in a clipboard ring\n\nngrok for VSCode\n\nngrok allows you to expose a web server running on your local machine to the internet. Just tell ngrok what port your web server is listening on. This extension allows you to control ngrok from the VSCode command palette\n\n\nDotnet Core Test Explorer\n\nView and run your .NET Core tests directly in the editor.\n\n\ni18n Ally\n\n\ud83c\udf0d All in one i18n extension for VSCode\n\n\nInstant Markdown\n\nSimply, edit markdown documents in vscode and instantly preview it in your browser as you type.\n\n\nnpm Intellisense\n\nVisual Studio Code plugin that autocompletes npm modules in import statements.\n\n\nParameter Hints\n\nProvides parameter hints on function calls in JS\/TS\/PHP files.\n\n\nPartial Diff\n\nCompare (diff) text selections within a file, across different files, or to the clipboard\n\n\nPaste JSON as Code\n\nInfer the structure of JSON and paste is as types in many programming languages\n\n\nPath IntelliSense\n\nVisual Studio Code plugin that autocompletes filenames\n\n\nPower Tools\n\nExtends Visual Studio Code via things like Node.js based scripts or shell commands, without writing separate extensions\n\n\nPrintCode\n\nPrintCode converts the code being edited into an HTML file, displays it by browser and prints it.\n\n\nProject Manager\n\nEasily switch between projects.\n\n\nProject Dashboard\n\nVSCode Project Dashboard is a Visual Studio Code extension that lets you organize your projects in a speed-dial like manner. Pin your frequently visited folders, files, and SSH remotes onto a dashboard to access them quickly.\n\n\nRainbow CSV\n\nHighlight columns in comma, tab, semicolon and pipe separated files, consistency check and linting with CSVLint, multi-cursor column editing, column trimming and realignment, and SQL-style querying with RBQL.\n\n\nRemote Development\n\nAllows users to open any folder in a container, on a remote machine, container or in Windows Subsystem for Linux(WSL) and take advantage of VS Code's full feature set.\n\n\nRemote VSCode\n\nAllow user to edit files from Remote server in Visual Studio Code directly.\n\nREST Client\n\nAllows you to send HTTP request and view the response in Visual Studio Code directly.\n\n\nSettings Sync\n\nSynchronize settings, snippets, themes, file icons, launch, key bindings, workspaces and extensions across multiple machines using GitHub Gist\n\n\nText Power Tools\n\nAll-in-one extension for text manipulation: filtering (grep), remove lines, insert number sequences and GUIDs, format content as table, change case, converting numbers and more. Great for finding information in logs and manipulating text.\n\n\nTodo Tree\n\nCustom keywords, highlighting, and colors for TODO comments. As well as a sidebar to view all your current tags.\n\n\nToggle Quotes\n\nCycle between single, double and backtick quotes\n\n\nTypescript Destructure\n\nTypeScript Language Service Plugin providing a set of source actions for easy objects destructuring\n\n\nWakaTime\n\nAutomatic time tracker and productivity dashboard showing how long you coded in each project, file, branch, and language.\n\nYo\n\nScaffold projects using Yeoman\n\n\nTiming\n\nTime converter extension to convert timestamps from\/to various formats and insert them on demand or just display them. It further provides a neat hover provider to beautify epoch timestamps instantly. All features are highly customizable.\n\n\nFormatting & Beautification\nBetter Align\n\nAlign your code by colon(:), assignment(=,+=,-=,*=,\/=) and arrow(=>). It has additional support for comma-first coding style and trailing comment.\nAnd it doesn't require you to select what to be aligned, the extension will figure it out by itself.\n\n\nAuto Close Tag\n\nAutomatically add HTML\/XML close tag, same as Visual Studio IDE or Sublime Text\n\n\nAuto Rename Tag\n\nAuto rename paired HTML\/XML tags\n\n\nbeautify\n\nBeautify code in place for VS Code\n\nhtml2pug\n\nTransform html to pug inside your Visual Studio Code, forget about using an external page anymore.\n\nECMAScript Quotes Transformer\n\nTransform quotes of ECMAScript string literals\n\n\nPaste and Indent\n\nPaste code with \"correct\" indentation\n\n\nSort Lines\n\nSorts lines of text in specific order\n\n\nSurround\n\nA simple yet powerful extension to add wrapper templates around your code blocks.\n\n\nWrap Selection\n\nWraps selection or multiple selections with symbol or multiple symbols\n\n\nFormatting Toggle\n\nAllows you to toggle your formatter on and off with a simple click\n\nBracket Pair Colorizer\n\nThis extension allows matching brackets to be identified with colours. The user can define which characters to match, and which colours to use.\n\n\nAuto Import\n\nAutomatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX.\n\n\nshell-format\n\nshell script & Dockerfile & dotenv format\n\n\nVscode Google Translate\n\nQuickly translate selected text right in your code\n\n\nExplorer Icons\nCity Lights Icons\n\nVSCode Icons\n\nSeti Icons\n\nMaterial Icon Theme\n\nUncategorized\nBrowser Preview\n\nBrowser Preview for VS Code enables you to open a real browser preview inside your editor that you can debug. Browser Preview is powered by Chrome Headless, and works by starting a headless Chrome instance in a new process. This enables a secure way to render web content inside VS Code, and enables interesting features such as in-editor debugging and more!\n\n\nCodeRoad\n\nPlay interactive tutorials in your favorite editor.\n\n\nCode Runner\n\nRun code snippet or code file for multiple languages: C, C++, Java, JavaScript, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, BAT\/CMD, BASH\/SH, F# Script, C# Script, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml Script\n\n\nCode Time\n\nAutomatic time reports by project and other programming metrics right in VS Code.\n\n\nColor Highlight\n\nHighlight web colors in your editor\n\n\nOutput Colorizer\n\nSyntax highlighting for the VS Code Output Panel and log files\n\n\nDash\n\nDash integration in Visual Studio Code\n\n\nEdit with Shell Command\n\nLeverage your favourite shell commands to edit text\n\n\nEditor Config for VS Code\n\nEditor Config for VS Code\n\nftp-sync\n\nAuto-sync your work to remote FTP server\n\n\nHighlight JSX\/HTML tags\n\nHighlights matching tags in the file.\n\n\nIndent Rainbow\n\nA simple extension to make indentation more readable.\n\n\niTerm2 Theme Sync\n\nSyncs selected VSCode theme with iTerm2 color profile\n\n\nPassword Generator\n\nCreate a secure password using our generator tool. Help prevent a security threat by getting a strong password today.\n\n\nPlatformIO\n\nAn open source ecosystem for IoT development: supports 350+ embedded boards, 20+ development platforms, 10+ frameworks. Arduino and ARM mbed compatible.\n\n\nPolacode\n\nPolaroid for your code \ud83d\udcf8.\n\n\ncarbon-now-sh\n\nSend your code to carbon.now.sh.\n\n\nQuokka\n\nRapid prototyping playground for JavaScript and TypeScript in VS Code, with access to your project's files, inline reporting, code coverage and rich output formatting.\n\n\nRunner\n\nRun various scripts right from VS Code\n\n\nSlack\n\nSend messages and code snippets, upload files to Slack\n\n\nSmoothType\n\nAdd a smooth typing animation, similar to MS Office and the Windows 10 Mail app.\n\n\nSpotify\n\nProvides integration with Spotify Desktop client. Shows the currently playing song in status bar, search lyrics and provides commands for controlling Spotify with buttons and hotkeys.\n\n\nSVG\n\nA Powerful SVG Language Support Extension(beta). Almost all the features you need to handle SVG.\n\n\nSVG Viewer\n\nView an SVG in the editor and export it as data URI scheme or PNG.\n\n\nText Marker (Highlighter)\n\nHighlight multiple text patterns with different colors at the same time. Highlighting a single text pattern can be done with the editor's search functionality, but it cannot highlight multiple patterns at the same time, and this is where this extension comes handy.\n\n\nESDOC MDN\n\nQuickly bring up helpful MDN documentation in the editor\n\n\n\nInterface generator\n\nQuickly generate interface definitions from typescript class\n\n\nThemes\nUI\nIf you're feeling brave, there are at least two custom UIs for VS Code:\n\nEssence\nPragmatic Essence\n\nSyntax\n2077 theme by Endormi\nCyberpunk 2077 inspired theme\n\n\n\nAn Old Hope Theme by Dustin Sanders\nVSCode theme inspired by a galaxy far far away...\n\n\n\nAriake Dark by wart\nDark VSCode theme inspired by Japanese traditional colors and the poetry composed 1000 years ago.\n\n\n\nAtom One Dark Theme by Mahmoud Ali\nOne Dark Theme based on Atom.\n\n\n\nAtomize by emroussel\nA detailed and accurate Atom One Dark Theme.\n\n\n\nAyu by teabyii\nA simple theme with bright colors and comes in three versions \u2014 dark, light and mirage for all day long comfortable work.\n\n\n\nBorealis Theme by Alexander Eckert\nVS Code theme inspired by the calm colors of the aurora borealis in Alaska.\n\n\n\nCaptain Sweetheart by ultradracula\nTuff but sweet theme.\n\n\n\nCity Lights by Yummygum\n\ud83c\udfd9 Yummygum's Official City Lights suite\n\n\n\nCobalt2 Theme Official by Wes Bos\n\ud83d\udd25 Official theme by Wes Bos.\n\n\n\nDracula Official by Dracula Theme\nOfficial Dracula Theme. A dark theme for many editors, shells, and more.\n\n\n\nEdge by Bogdan Lazar\nA simple theme with bright colors in three variants \u2014 Night Sky, Serene and Ocean for all day long comfortable work.\n\n\n\nEva Theme by fisheva\nA colorful and semantic coloring code theme.\n\n\n\nFairy Floss by nopjmp and sailorhg\nA fun, purple-based pastel\/candy\/daydream fairyfloss theme made by sailorhg.\n\n\n\nGitHub Theme by Thomas Pink\nGitHub Theme for Visual Studio Code.\n\n\n\nJellybeans Theme by Dimitar Nonov\nJellybeans Theme for Visual Studio Code.\n\n\n\nMaterial Palenight Theme by whizkydee\nAn elegant and juicy material-like theme for Visual Studio Code.\n\n\n\nMaterial Theme by Mattia Astorino\nThe most epic theme now for Visual Studio Code.\n\n\n\nMno by u29dc\nMinimal monochrome theme.\n\n\n\nMonokai Oblique by pushqrdx\nMonokai inspired theme for Visual Studio Code and Visual Studio IDE.\n\n\n\nMonokai Pro by monokai (commercial)\nBeautiful functionality for professional developers, from the author of the original Monokai color scheme.\n\n\n\nNight Owl by Sarah Drasner\nA VS Code theme for the night owls out there. Works well in the daytime, too, but this theme is fine-tuned for those of us who like to code late into the night. Color choices have taken into consideration what is accessible to people with color blindness and in low-light circumstances. Decisions were also based on meaningful contrast for reading comprehension and for optimal razzle dazzle. \u2728\n\n\n\nPlastic by Will Stone\nA simple theme.\n\n\n\nNord by arcticicestudio\nAn arctic, north-bluish clean and elegant Visual Studio Code theme.\n\n\n\nRainglow by Dayle Rees\nCollection of 320+ beautiful syntax and UI themes.\n\n\n\nRelaxed Theme by Michael K\u00fchnel\nA relaxed theme to take a more relaxed view of things.\n\n\n\nShades of Purple by Ahmad Awais\n\u26a1 A professional theme with hand-picked & bold shades of purple \ud83d\udc9c to go along with your VS Code. A custom VS Code theme with style.\n\n\n\nSlime Theme by smlombardi\nA dark syntax\/workbench theme for Visual Studio Code - optimized for SCSS, HTML, JS, TS, Markdown, and PHP files.\n\n\n\nNiketa Theme by Dejan Toteff\nCollection of 18 light themes separated in 4 groups by background's brightness.\n\n\n\nPeople to Follow\nA list of Twitter accounts for various people in the VS Code Community\n\n@code - The official VS Code Twitter\n@auchenberg - VS Code Program Manager\n@BenjaminPasero - VS Code Dev\n@chrisdias - VS Code Program Manager\n@_clarkio - Developer Advocate @ Azure. Creator of VS Code release highlight videos\n@eamodio - GitLens creator\n@ErichGamma - VS Code Dev\n@IsidorN - VS Code Dev\n@joaomoreno - VS Code Dev\n@johannesrieken - VS Code Dev\n@lannonbr - Creator of vscode.rocks & JS Parameter Annotations extension\n@maeschli - VS Code Dev\n@mattbierner - VS Code Dev\n@MrAhmadAwais - JS\/WordPress Core Dev. Creator of VSCode.pro course & Shades of Purple theme\n@ramyanexus - VS Code Dev. Maintainer of Go extension\n@Tyriar - VS Code Dev. Creator of xterm.js\n\nResources for extension developers\nDocumentation\n\nBetter Comments - The Better Comments extension will help you create more human-friendly comments in your code.\nExtending Visual Studio Code section of Official Documentation\n\nLibraries\n\nvscode-extension-vscode - The vscode.d.ts node module\nvscode-set-text - An easy-to-use VS Code #setText() method.\nvscode-test-content - A method to set\/get editor content, and it's selection. Especially useful for unit tests.\n\nTools\n\nLive Share - Visual Studio Live Share enables you to collaboratively edit and debug with others in real time, regardless what programming languages you're using or app types you're building.\nOnline TextMate Themes Editor - since VS Code supports TextMate themes, you can create them in this online editor and then create a new VS Code package using Yo Code tool\nYo Code - Extension Generator\nOpen in Code - macOS Finder toolbar app to open current folder in Visual Studio Code\n\n\n\nThemer - Easily create your own theme for VS Code (and matching ones for your other tools).\nAzure Tools for Visual Studio Code - This extension for Visual Studio Code gives Azure developers some convenient commands for creating or accessing resources directly in the editor.\n\n\n\nMark down preview - Markdown Preview Enhanced is an extension that provides you with many useful functionalities such as automatic scroll sync, math typesetting, mermaid, PlantUML, pandoc, PDF export, code chunk, presentation writer, etc. A lot of its ideas are inspired by Markdown Preview Plus and RStudio Markdown.\n\nOnline Courses\nVisual Studio Code Power User Course (commercial)\nAfter 10 years with Sublime Text, Ahmad Awais switched to VSCode, built Shades of Purple theme, and spent over a 1,000 hours perfecting his setup. He has launched a VSCode Power User Course to help you switch today. You can bring all your custom settings from the previous editor and learn the power user workflows for HTML\/CSS, Git\/GitHub & Open Source, supercharged Markdown, and everything from JavaScript to PHP, Go, Python, C++, C#, ROR. In this course, you'll also learn to install\/setup 50+ Extensions.\n\nVSCode.pro - \ud83d\udcfa Huge five hours 65 videos VSCode course.\nAhmad Awais - \ud83d\ude4c Creator of Shades of Purple theme. Core Developer for WP\/JS. OSS Dev Advocate.\n\nContribute\nContributions welcome! Read the contribution guidelines first.\nLicense\nI am providing code and resources in this repository to you under an open source license. Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Microsoft).\n\nTo the extent possible under law, Valerii Iatsko has waived all copyright and related or neighboring rights to this work.\n","99":"\n\n\n\n  Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js.\n\n\n\n\n\n\n\n\n\n\n\n\n\nOur Sponsors\n\nOur backers and sponsors help to ensure the quality and timely development of the Parse Platform.\n\n\ud83e\udd49 Bronze Sponsors\n\n\n\n\n\n\n\n\nParse Server works with the Express web application framework. It can be added to existing web applications, or run by itself.\nThe full documentation for Parse Server is available in the wiki. The Parse Server guide is a good place to get started. An API reference and Cloud Code guide are also available. If you're interested in developing for Parse Server, the Development guide will help you get set up.\n\nGetting Started\n\nRunning Parse Server\n\nLocally\nDocker\nSaving an Object\nConnect an SDK\n\n\nRunning elsewhere\n\nSample Application\nParse Server + Express\n\n\nConfiguration\n\nBasic Options\nClient Key Options\nEmail Verification & Password Reset\nCustom Pages\nUsing Environment Variables\nAvailable Adapters\nConfiguring File Adapters\nLogging\n\n\n\n\nLive Queries\nGraphQL\nUpgrading to 3.0.0\nSupport\nRide the Bleeding Edge\nContributing\nContributors\nSponsors\nBackers\n\nGetting Started\nThe fastest and easiest way to get started is to run MongoDB and Parse Server locally.\nRunning Parse Server\nBefore you start make sure you have installed:\n\nNodeJS that includes npm\nMongoDB or PostgreSQL(with PostGIS 2.2.0 or higher)\nOptionally Docker\n\nLocally\n$ npm install -g parse-server mongodb-runner\n$ mongodb-runner start\n$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb:\/\/localhost\/test\nNote: If installation with -g fails due to permission problems (npm ERR! code 'EACCES'), please refer to this link.\nInside a Docker container\n$ git clone https:\/\/github.com\/parse-community\/parse-server\n$ cd parse-server\n$ docker build --tag parse-server .\n$ docker run --name my-mongo -d mongo\nRunning the Parse Server Image\n$ docker run --name my-parse-server -v config-vol:\/parse-server\/config -p 1337:1337 --link my-mongo:mongo -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb:\/\/mongo\/test\nNote: If you want to use Cloud Code feature, please add -v cloud-code-vol:\/parse-server\/cloud --cloud \/parse-server\/cloud\/main.js to command above. Make sure the main.js file is available in the cloud-code-vol directory before run this command. Otherwise, an error will occur.\nYou can use any arbitrary string as your application id and master key. These will be used by your clients to authenticate with the Parse Server.\nThat's it! You are now running a standalone version of Parse Server on your machine.\nUsing a remote MongoDB? Pass the  --databaseURI DATABASE_URI parameter when starting parse-server. Learn more about configuring Parse Server here. For a full list of available options, run parse-server --help.\nSaving your first object\nNow that you're running Parse Server, it is time to save your first object. We'll use the REST API, but you can easily do the same using any of the Parse SDKs. Run the following:\n$ curl -X POST \\\n-H \"X-Parse-Application-Id: APPLICATION_ID\" \\\n-H \"Content-Type: application\/json\" \\\n-d '{\"score\":1337,\"playerName\":\"Sean Plott\",\"cheatMode\":false}' \\\nhttp:\/\/localhost:1337\/parse\/classes\/GameScore\nYou should get a response similar to this:\n{\n  \"objectId\": \"2ntvSpRGIK\",\n  \"createdAt\": \"2016-03-11T23:51:48.050Z\"\n}\nYou can now retrieve this object directly (make sure to replace 2ntvSpRGIK with the actual objectId you received when the object was created):\n$ curl -X GET \\\n  -H \"X-Parse-Application-Id: APPLICATION_ID\" \\\n  http:\/\/localhost:1337\/parse\/classes\/GameScore\/2ntvSpRGIK\n\/\/ Response\n{\n  \"objectId\": \"2ntvSpRGIK\",\n  \"score\": 1337,\n  \"playerName\": \"Sean Plott\",\n  \"cheatMode\": false,\n  \"updatedAt\": \"2016-03-11T23:51:48.050Z\",\n  \"createdAt\": \"2016-03-11T23:51:48.050Z\"\n}\nKeeping tracks of individual object ids is not ideal, however. In most cases you will want to run a query over the collection, like so:\n$ curl -X GET \\\n  -H \"X-Parse-Application-Id: APPLICATION_ID\" \\\n  http:\/\/localhost:1337\/parse\/classes\/GameScore\n\/\/ The response will provide all the matching objects within the `results` array:\n{\n  \"results\": [\n    {\n      \"objectId\": \"2ntvSpRGIK\",\n      \"score\": 1337,\n      \"playerName\": \"Sean Plott\",\n      \"cheatMode\": false,\n      \"updatedAt\": \"2016-03-11T23:51:48.050Z\",\n      \"createdAt\": \"2016-03-11T23:51:48.050Z\"\n    }\n  ]\n}\n\nTo learn more about using saving and querying objects on Parse Server, check out the Parse documentation.\nConnect your app to Parse Server\nParse provides SDKs for all the major platforms. Refer to the Parse Server guide to learn how to connect your app to Parse Server.\nRunning Parse Server elsewhere\nOnce you have a better understanding of how the project works, please refer to the Parse Server wiki for in-depth guides to deploy Parse Server to major infrastructure providers. Read on to learn more about additional ways of running Parse Server.\nParse Server Sample Application\nWe have provided a basic Node.js application that uses the Parse Server module on Express and can be easily deployed to various infrastructure providers:\n\nHeroku and mLab\nAWS and Elastic Beanstalk\nGoogle App Engine\nMicrosoft Azure\nSashiDo\nDigital Ocean\nPivotal Web Services\nBack4app\nGlitch\nFlynn\n\nParse Server + Express\nYou can also create an instance of Parse Server, and mount it on a new or existing Express website:\nvar express = require('express');\nvar ParseServer = require('parse-server').ParseServer;\nvar app = express();\n\nvar api = new ParseServer({\n  databaseURI: 'mongodb:\/\/localhost:27017\/dev', \/\/ Connection string for your MongoDB database\n  cloud: '.\/cloud\/main.js', \/\/ Path to your Cloud Code\n  appId: 'myAppId',\n  masterKey: 'myMasterKey', \/\/ Keep this key secret!\n  fileKey: 'optionalFileKey',\n  serverURL: 'http:\/\/localhost:1337\/parse' \/\/ Don't forget to change to https if needed\n});\n\n\/\/ Serve the Parse API on the \/parse URL prefix\napp.use('\/parse', api);\n\napp.listen(1337, function() {\n  console.log('parse-server-example running on port 1337.');\n});\nFor a full list of available options, run parse-server --help or take a look at Parse Server Configurations.\nConfiguration\nParse Server can be configured using the following options. You may pass these as parameters when running a standalone parse-server, or by loading a configuration file in JSON format using parse-server path\/to\/configuration.json. If you're using Parse Server on Express, you may also pass these to the ParseServer object as options.\nFor the full list of available options, run parse-server --help or take a look at Parse Server Configurations.\nBasic options\n\nappId (required) - The application id to host with this server instance. You can use any arbitrary string. For migrated apps, this should match your hosted Parse app.\nmasterKey (required) - The master key to use for overriding ACL security.  You can use any arbitrary string. Keep it secret! For migrated apps, this should match your hosted Parse app.\ndatabaseURI (required) - The connection string for your database, i.e. mongodb:\/\/user:pass@host.com\/dbname. Be sure to URL encode your password if your password has special characters.\nport - The default port is 1337, specify this parameter to use a different port.\nserverURL - URL to your Parse Server (don't forget to specify http:\/\/ or https:\/\/). This URL will be used when making requests to Parse Server from Cloud Code.\ncloud - The absolute path to your cloud code main.js file.\npush - Configuration options for APNS and GCM push. See the Push Notifications quick start.\n\nClient key options\nThe client keys used with Parse are no longer necessary with Parse Server. If you wish to still require them, perhaps to be able to refuse access to older clients, you can set the keys at initialization time. Setting any of these keys will require all requests to provide one of the configured keys.\n\nclientKey\njavascriptKey\nrestAPIKey\ndotNetKey\n\nEmail verification and password reset\nVerifying user email addresses and enabling password reset via email requires an email adapter. As part of the parse-server package we provide an adapter for sending email through Mailgun. To use it, sign up for Mailgun, and add this to your initialization code:\nvar server = ParseServer({\n  ...otherOptions,\n  \/\/ Enable email verification\n  verifyUserEmails: true,\n\n  \/\/ if `verifyUserEmails` is `true` and\n  \/\/     if `emailVerifyTokenValidityDuration` is `undefined` then\n  \/\/        email verify token never expires\n  \/\/     else\n  \/\/        email verify token expires after `emailVerifyTokenValidityDuration`\n  \/\/\n  \/\/ `emailVerifyTokenValidityDuration` defaults to `undefined`\n  \/\/\n  \/\/ email verify token below expires in 2 hours (= 2 * 60 * 60 == 7200 seconds)\n  emailVerifyTokenValidityDuration: 2 * 60 * 60, \/\/ in seconds (2 hours = 7200 seconds)\n\n  \/\/ set preventLoginWithUnverifiedEmail to false to allow user to login without verifying their email\n  \/\/ set preventLoginWithUnverifiedEmail to true to prevent user from login if their email is not verified\n  preventLoginWithUnverifiedEmail: false, \/\/ defaults to false\n\n  \/\/ The public URL of your app.\n  \/\/ This will appear in the link that is used to verify email addresses and reset passwords.\n  \/\/ Set the mount path as it is in serverURL\n  publicServerURL: 'https:\/\/example.com\/parse',\n  \/\/ Your apps name. This will appear in the subject and body of the emails that are sent.\n  appName: 'Parse App',\n  \/\/ The email adapter\n  emailAdapter: {\n    module: '@parse\/simple-mailgun-adapter',\n    options: {\n      \/\/ The address that your emails come from\n      fromAddress: 'parse@example.com',\n      \/\/ Your domain from mailgun.com\n      domain: 'example.com',\n      \/\/ Your API key from mailgun.com\n      apiKey: 'key-mykey',\n    }\n  },\n\n  \/\/ account lockout policy setting (OPTIONAL) - defaults to undefined\n  \/\/ if the account lockout policy is set and there are more than `threshold` number of failed login attempts then the `login` api call returns error code `Parse.Error.OBJECT_NOT_FOUND` with error message `Your account is locked due to multiple failed login attempts. Please try again after <duration> minute(s)`. After `duration` minutes of no login attempts, the application will allow the user to try login again.\n  accountLockout: {\n    duration: 5, \/\/ duration policy setting determines the number of minutes that a locked-out account remains locked out before automatically becoming unlocked. Set it to a value greater than 0 and less than 100000.\n    threshold: 3, \/\/ threshold policy setting determines the number of failed sign-in attempts that will cause a user account to be locked. Set it to an integer value greater than 0 and less than 1000.\n  },\n  \/\/ optional settings to enforce password policies\n  passwordPolicy: {\n    \/\/ Two optional settings to enforce strong passwords. Either one or both can be specified.\n    \/\/ If both are specified, both checks must pass to accept the password\n    \/\/ 1. a RegExp object or a regex string representing the pattern to enforce\n    validatorPattern: \/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\/, \/\/ enforce password with at least 8 char with at least 1 lower case, 1 upper case and 1 digit\n    \/\/ 2. a callback function to be invoked to validate the password\n    validatorCallback: (password) => { return validatePassword(password) },\n    validationError: 'Password must contain at least 1 digit.' \/\/ optional error message to be sent instead of the default \"Password does not meet the Password Policy requirements.\" message.\n    doNotAllowUsername: true, \/\/ optional setting to disallow username in passwords\n    maxPasswordAge: 90, \/\/ optional setting in days for password expiry. Login fails if user does not reset the password within this period after signup\/last reset.\n    maxPasswordHistory: 5, \/\/ optional setting to prevent reuse of previous n passwords. Maximum value that can be specified is 20. Not specifying it or specifying 0 will not enforce history.\n    \/\/optional setting to set a validity duration for password reset links (in seconds)\n    resetTokenValidityDuration: 24*60*60, \/\/ expire after 24 hours\n  }\n});\nYou can also use other email adapters contributed by the community such as:\n\nparse-smtp-template (Multi Language and Multi Template)\nparse-server-postmark-adapter\nparse-server-sendgrid-adapter\nparse-server-mandrill-adapter\nparse-server-simple-ses-adapter\nparse-server-mailgun-adapter-template\nparse-server-sendinblue-adapter\nparse-server-mailjet-adapter\nsimple-parse-smtp-adapter\nparse-server-generic-email-adapter\n\nCustom Pages\nIt\u2019s possible to change the default pages of the app and redirect the user to another path or domain.\nvar server = ParseServer({\n  ...otherOptions,\n\n  customPages: {\n    passwordResetSuccess: \"http:\/\/yourapp.com\/passwordResetSuccess\",\n    verifyEmailSuccess: \"http:\/\/yourapp.com\/verifyEmailSuccess\",\n    parseFrameURL: \"http:\/\/yourapp.com\/parseFrameURL\",\n    linkSendSuccess: \"http:\/\/yourapp.com\/linkSendSuccess\",\n    linkSendFail: \"http:\/\/yourapp.com\/linkSendFail\",\n    invalidLink: \"http:\/\/yourapp.com\/invalidLink\",\n    invalidVerificationLink: \"http:\/\/yourapp.com\/invalidVerificationLink\",\n    choosePassword: \"http:\/\/yourapp.com\/choosePassword\"\n  }\n})\nUsing environment variables to configure Parse Server\nYou may configure the Parse Server using environment variables:\nPORT\nPARSE_SERVER_APPLICATION_ID\nPARSE_SERVER_MASTER_KEY\nPARSE_SERVER_DATABASE_URI\nPARSE_SERVER_URL\nPARSE_SERVER_CLOUD\nThe default port is 1337, to use a different port set the PORT environment variable:\n$ PORT=8080 parse-server --appId APPLICATION_ID --masterKey MASTER_KEY\nFor the full list of configurable environment variables, run parse-server --help or take a look at Parse Server Configuration.\nAvailable Adapters\nAll official adapters are distributed as scoped pacakges on npm (@parse).\nSome well maintained adapters are also available on the Parse Server Modules organization.\nYou can also find more adapters maintained by the community by searching on npm.\nConfiguring File Adapters\nParse Server allows developers to choose from several options when hosting files:\n\nGridFSBucketAdapter, which is backed by MongoDB;\nS3Adapter, which is backed by Amazon S3; or\nGCSAdapter, which is backed by Google Cloud Storage\n\nGridFSBucketAdapter is used by default and requires no setup, but if you're interested in using S3 or Google Cloud Storage, additional configuration information is available in the Parse Server guide.\nIdempodency Enforcement\nCaution, this is an experimental feature that may not be appropriate for production.\nThis feature deduplicates identical requests that are received by Parse Server mutliple times, typically due to network issues or network adapter access restrictions on mobile operating systems.\nIdentical requests are identified by their request header X-Parse-Request-Id. Therefore a client request has to include this header for deduplication to be applied. Requests that do not contain this header cannot be deduplicated and are processed normally by Parse Server. This means rolling out this feature to clients is seamless as Parse Server still processes request without this header when this feature is enbabled.\n\nThis feature needs to be enabled on the client side to send the header and on the server to process the header. Refer to the specific Parse SDK docs to see whether the feature is supported yet.\n\nDeduplication is only done for object creation and update (POST and PUT requests). Deduplication is not done for object finding and deletion (GET and DELETE requests), as these operations are already idempotent by definition.\nConfiguration example\nlet api = new ParseServer({\n    idempotencyOptions: {\n        paths: [\".*\"],       \/\/ enforce for all requests\n        ttl: 120             \/\/ keep request IDs for 120s\n    }\n}\n\nParameters\n\n\n\nParameter\nOptional\nType\nDefault value\nExample values\n\u00a0Environment variable\nDescription\n\n\n\n\nidempotencyOptions\nyes\nObject\nundefined\n\nPARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_OPTIONS\nSetting this enables idempotency enforcement for the specified paths.\n\n\nidempotencyOptions.paths\nyes\nArray<String>\n[]\n.* (all paths, includes the examples below), functions\/.* (all functions), jobs\/.* (all jobs), classes\/.* (all classes), functions\/.* (all functions), users (user creation \/ update), installations (installation creation \/ update)\nPARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_PATHS\nAn array of path patterns that have to match the request path for request deduplication to be enabled. The mount path must not be included, for example to match the request path \/parse\/functions\/myFunction specifiy the path pattern functions\/myFunction. A trailing slash of the request path is ignored, for example the path pattern functions\/myFunction matches both \/parse\/functions\/myFunction and \/parse\/functions\/myFunction\/.\n\n\nidempotencyOptions.ttl\nyes\nInteger\n300\n60 (60 seconds)\nPARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_TTL\nThe duration in seconds after which a request record is discarded from the database. Duplicate requests due to network issues can be expected to arrive within milliseconds up to several seconds. This value must be greater than 0.\n\n\n\nNotes\n\nThis feature is currently only available for MongoDB and not for Postgres.\n\nLogging\nParse Server will, by default, log:\n\nto the console\ndaily rotating files as new line delimited JSON\n\nLogs are also viewable in Parse Dashboard.\nWant to log each request and response? Set the VERBOSE environment variable when starting parse-server. Usage :-  VERBOSE='1' parse-server --appId APPLICATION_ID --masterKey MASTER_KEY\nWant logs to be in placed in a different folder? Pass the PARSE_SERVER_LOGS_FOLDER environment variable when starting parse-server. Usage :-  PARSE_SERVER_LOGS_FOLDER='<path-to-logs-folder>' parse-server --appId APPLICATION_ID --masterKey MASTER_KEY\nWant to log specific levels? Pass the logLevel parameter when starting parse-server. Usage :-  parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --logLevel LOG_LEVEL\nWant new line delimited JSON error logs (for consumption by CloudWatch, Google Cloud Logging, etc)? Pass the JSON_LOGS environment variable when starting parse-server. Usage :-  JSON_LOGS='1' parse-server --appId APPLICATION_ID --masterKey MASTER_KEY\nLive Queries\nLive queries are meant to be used in real-time reactive applications, where just using the traditional query paradigm could cause several problems, like increased response time and high network and server usage. Live queries should be used in cases where you need to continuously update a page with fresh data coming from the database, which often happens in (but is not limited to) online games, messaging clients and shared to-do lists.\nTake a look at Live Query Guide, Live Query Server Setup Guide and Live Query Protocol Specification. You can setup a standalone server or multiple instances for scalability (recommended).\nGraphQL\nGraphQL, developed by Facebook, is an open-source data query and manipulation language for APIs. In addition to the traditional REST API, Parse Server automatically generates a GraphQL API based on your current application schema. Parse Server also allows you to define your custom GraphQL queries and mutations, whose resolvers can be bound to your cloud code functions.\nRunning\nUsing the CLI\nThe easiest way to run the Parse GraphQL API is through the CLI:\n$ npm install -g parse-server mongodb-runner\n$ mongodb-runner start\n$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb:\/\/localhost\/test --publicServerURL http:\/\/localhost:1337\/parse --mountGraphQL --mountPlayground\nAfter starting the server, you can visit http:\/\/localhost:1337\/playground in your browser to start playing with your GraphQL API.\nNote: Do NOT use --mountPlayground option in production. Parse Dashboard has a built-in GraphQL Playground and it is the recommended option for production apps.\nUsing Docker\nYou can also run the Parse GraphQL API inside a Docker container:\n$ git clone https:\/\/github.com\/parse-community\/parse-server\n$ cd parse-server\n$ docker build --tag parse-server .\n$ docker run --name my-mongo -d mongo\nRunning the Parse Server Image\n$ docker run --name my-parse-server --link my-mongo:mongo -v config-vol:\/parse-server\/config -p 1337:1337 -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb:\/\/mongo\/test --publicServerURL http:\/\/localhost:1337\/parse --mountGraphQL --mountPlayground\nNote: If you want to use Cloud Code feature, please add -v cloud-code-vol:\/parse-server\/cloud --cloud \/parse-server\/cloud\/main.js to command above. Make sure the main.js file is available in the cloud-code-vol directory before run this command. Otherwise, an error will occur.\nAfter starting the server, you can visit http:\/\/localhost:1337\/playground in your browser to start playing with your GraphQL API.\nNote: Do NOT use --mountPlayground option in production. Parse Dashboard has a built-in GraphQL Playground and it is the recommended option for production apps.\nUsing Express.js\nYou can also mount the GraphQL API in an Express.js application together with the REST API or solo. You first need to create a new project and install the required dependencies:\n$ mkdir my-app\n$ cd my-app\n$ npm install parse-server express --save\nThen, create an index.js file with the following content:\nconst express = require('express');\nconst { default: ParseServer, ParseGraphQLServer } = require('parse-server');\n\nconst app = express();\n\nconst parseServer = new ParseServer({\n  databaseURI: 'mongodb:\/\/localhost:27017\/test',\n  appId: 'APPLICATION_ID',\n  masterKey: 'MASTER_KEY',\n  serverURL: 'http:\/\/localhost:1337\/parse',\n  publicServerURL: 'http:\/\/localhost:1337\/parse'\n});\n\nconst parseGraphQLServer = new ParseGraphQLServer(\n  parseServer,\n  {\n    graphQLPath: '\/graphql',\n    playgroundPath: '\/playground'\n  }\n);\n\napp.use('\/parse', parseServer.app); \/\/ (Optional) Mounts the REST API\nparseGraphQLServer.applyGraphQL(app); \/\/ Mounts the GraphQL API\nparseGraphQLServer.applyPlayground(app); \/\/ (Optional) Mounts the GraphQL Playground - do NOT use in Production\n\napp.listen(1337, function() {\n  console.log('REST API running on http:\/\/localhost:1337\/parse');\n  console.log('GraphQL API running on http:\/\/localhost:1337\/graphql');\n  console.log('GraphQL Playground running on http:\/\/localhost:1337\/playground');\n});\nAnd finally start your app:\n$ npx mongodb-runner start\n$ node index.js\nAfter starting the app, you can visit http:\/\/localhost:1337\/playground in your browser to start playing with your GraphQL API.\nNote: Do NOT mount the GraphQL Playground in production. Parse Dashboard has a built-in GraphQL Playground and it is the recommended option for production apps.\nChecking the API health\nRun the following:\nquery Health {\n  health\n}\nYou should receive the following response:\n{\n  \"data\": {\n    \"health\": true\n  }\n}\nCreating your first class\nSince your application does not have any schema yet, you can use the createClass mutation to create your first class. Run the following:\nmutation CreateClass {\n  createClass(\n    name: \"GameScore\"\n    schemaFields: {\n      addStrings: [{ name: \"playerName\" }]\n      addNumbers: [{ name: \"score\" }]\n      addBooleans: [{ name: \"cheatMode\" }]\n    }\n  ) {\n    name\n    schemaFields {\n      name\n      __typename\n    }\n  }\n}\nYou should receive the following response:\n{\n  \"data\": {\n    \"createClass\": {\n      \"name\": \"GameScore\",\n      \"schemaFields\": [\n        {\n          \"name\": \"objectId\",\n          \"__typename\": \"SchemaStringField\"\n        },\n        {\n          \"name\": \"updatedAt\",\n          \"__typename\": \"SchemaDateField\"\n        },\n        {\n          \"name\": \"createdAt\",\n          \"__typename\": \"SchemaDateField\"\n        },\n        {\n          \"name\": \"playerName\",\n          \"__typename\": \"SchemaStringField\"\n        },\n        {\n          \"name\": \"score\",\n          \"__typename\": \"SchemaNumberField\"\n        },\n        {\n          \"name\": \"cheatMode\",\n          \"__typename\": \"SchemaBooleanField\"\n        },\n        {\n          \"name\": \"ACL\",\n          \"__typename\": \"SchemaACLField\"\n        }\n      ]\n    }\n  }\n}\nUsing automatically generated operations\nParse Server learned from the first class that you created and now you have the GameScore class in your schema. You can now start using the automatically generated operations!\nRun the following to create your first object:\nmutation CreateGameScore {\n  createGameScore(\n    fields: {\n      playerName: \"Sean Plott\"\n      score: 1337\n      cheatMode: false\n    }\n  ) {\n    id\n    updatedAt\n    createdAt\n    playerName\n    score\n    cheatMode\n    ACL\n  }\n}\nYou should receive a response similar to this:\n{\n  \"data\": {\n    \"createGameScore\": {\n      \"id\": \"XN75D94OBD\",\n      \"updatedAt\": \"2019-09-17T06:50:26.357Z\",\n      \"createdAt\": \"2019-09-17T06:50:26.357Z\",\n      \"playerName\": \"Sean Plott\",\n      \"score\": 1337,\n      \"cheatMode\": false,\n      \"ACL\": null\n    }\n  }\n}\nYou can also run a query to this new class:\nquery GameScores {\n  gameScores {\n    results {\n      id\n      updatedAt\n      createdAt\n      playerName\n      score\n      cheatMode\n      ACL\n    }\n  }\n}\nYou should receive a response similar to this:\n{\n  \"data\": {\n    \"gameScores\": {\n      \"results\": [\n        {\n          \"id\": \"XN75D94OBD\",\n          \"updatedAt\": \"2019-09-17T06:50:26.357Z\",\n          \"createdAt\": \"2019-09-17T06:50:26.357Z\",\n          \"playerName\": \"Sean Plott\",\n          \"score\": 1337,\n          \"cheatMode\": false,\n          \"ACL\": null\n        }\n      ]\n    }\n  }\n}\nCustomizing your GraphQL Schema\nParse GraphQL Server allows you to create a custom GraphQL schema with own queries and mutations to be merged with the auto-generated ones. You can resolve these operations using your regular cloud code functions.\nTo start creating your custom schema, you need to code a schema.graphql file and initialize Parse Server with --graphQLSchema and --cloud options:\n$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb:\/\/localhost\/test --publicServerURL http:\/\/localhost:1337\/parse --cloud .\/cloud\/main.js --graphQLSchema .\/cloud\/schema.graphql --mountGraphQL --mountPlayground\nCreating your first custom query\nUse the code below for your schema.graphql and main.js files. Then restart your Parse Server.\n# schema.graphql\nextend type Query {\n  hello: String! @resolve\n}\n\/\/ main.js\nParse.Cloud.define('hello', async () => {\n  return 'Hello world!';\n});\nYou can now run your custom query using GraphQL Playground:\nquery {\n  hello\n}\nYou should receive the response below:\n{\n  \"data\": {\n    \"hello\": \"Hello world!\"\n  }\n}\nLearning more\nThe Parse GraphQL Guide is a very good source for learning how to use the Parse GraphQL API.\nYou also have a very powerful tool inside your GraphQL Playground. Please look at the right side of your GraphQL Playground. You will see the DOCS and SCHEMA menus. They are automatically generated by analyzing your application schema. Please refer to them and learn more about everything that you can do with your Parse GraphQL API.\nAdditionally, the GraphQL Learn Section is a very good source to learn more about the power of the GraphQL language.\nUpgrading to 3.0.0\nStarting 3.0.0, parse-server uses the JS SDK version 2.0.\nIn short, parse SDK v2.0 removes the backbone style callbacks as well as the Parse.Promise object in favor of native promises.\nAll the Cloud Code interfaces also have been updated to reflect those changes, and all backbone style response objects are removed and replaced by Promise style resolution.\nWe have written up a migration guide, hoping this will help you transition to the next major release.\nWant to ride the bleeding edge?\nIt is recommend to use builds deployed npm for many reasons, but if you want to use\nthe latest not-yet-released version of parse-server, you can do so by depending\ndirectly on this branch:\nnpm install parse-community\/parse-server.git#master\n\nExperimenting\nYou can also use your own forks, and work in progress branches by specifying them:\nnpm install github:myUsername\/parse-server#my-awesome-feature\n\nAnd don't forget, if you plan to deploy it remotely, you should run npm install with the --save option.\nContributing\nWe really want Parse to be yours, to see it grow and thrive in the open source community. Please see the Contributing to Parse Server guide.\nContributors\nThis project exists thanks to all the people who contribute... we'd love to see your face on this list!\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. Become a sponsor!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackers\nSupport us with a monthly donation and help us continue our activities. Become a backer!\n\n\nAs of April 5, 2017, Parse, LLC has transferred this code to the parse-community organization, and will no longer be contributing to or distributing this code.\n","100":"\nThe animator's toolbox\n\n\n\nPopmotion is:\n\nPowerful: It supports keyframe and spring animations for numbers, colors and complex strings.\nLow level: It's designed to be composable and portable into any JavaScript environment, with an eye on worklets in the future.\nStable: It's written in TypeScript and enjoys over 95% test coverage.\nTiny: animate is just ~4.5kb, and every function is individually importable.\n\nQuick start\nnpm install popmotion\nimport { animate } from \"popmotion\"\n\nanimate({\n  from: 0,\n  to: 100,\n  onUpdate: latest => console.log(latest)\n})\nAnimation\nanimate\nanimate performs a keyframes or spring animation.\nimport { animate } from \"popmotion\"\n\nanimate({\n  from: 0, \n  to: 100,\n  onUpdate: latest => console.log(latest)\n})\nIt can animate numbers:\nanimate({ from: 0, to: 100 })\nOr strings of the same type:\nanimate({ from: \"0px\", to: \"100px\" })\nanimate({ from: \"#fff\", to: \"#000\" })\nThe strings can be pretty complex, for instance box shadows or SVG path definitions. The only limitation is that the numbers and colors contained within must be in the same order:\nanimate({\n  from: \"0px 0px 0px rgba(0, 0, 0, 0)\",\n  to: \"10px 10px 0px rgba(0, 0, 0, 0.2)\"\n})\nThe type of animation performed will be automatically detected from the provided options, or can be chosen manually by defining type as \"keyframes\", \"spring\" or \"decay\".\nOptions\nThese options can be set for all animations:\nfrom\nAn initial value to start the animation from.\nDefaults to 0\nanimate({\n  from: \"linear-gradient(#e66465, #9198e5)\",\n  to: \"linear-gradient(#9198e5, #e66465)\"\n})\nelapsed\nSets an initial elapsed time, in milliseconds. Set to a negative value for a delay.\nanimate({\n  to: 100,\n  elapsed: -300\n})\nrepeat\nThe number of times to repeat the animation. Set to Infinity to repeat forever.\nanimate({\n  to: 100,\n  repeat: 2\n})\nrepeatDelay\nThe duration, in milliseconds, to wait before repeating the animation.\nanimate({\n  to: 100,\n  repeat: 2,\n  repeatDelay: 200\n})\nrepeatType\nEither \"loop\", \"mirror\" or \"reverse\". Defaults to \"loop\".\n\n\"loop\": Repeats the animation from 0.\n\"mirror\": Swaps the from\/to values alternately.\n\"reverse\": Reverses the animation alternately.\n\nanimate({\n  to: 100,\n  repeat: 2,\n  repeatType: \"reverse\"\n})\ndriver\nBy default, the animation will be driven by a requestAnimationFrame loop. driver can specify a different source.\nA Driver is a function that accepts the animations update function. This is a function that can be called with a time delta from the previous frame. The Driver must return a function that will be called when the animation is stopped.\nconst xrDriver = session => update => {\n  let latestRequestId = 0\n  let prevTimestamp = performance.now()\n  \n  const step = timestamp => {\n    const delta = timestamp - prevTimestamp\n    prevTimestamp = timestamp\n\n    update(delta)\n\n    latestRequestId = session.requestAnimationFrame(step)\n  }\n\n  let latestRequestId = session.requestAnimationFrame(step)\n\n  return () => session.cancelRequestAnimationFrame(latestRequestId)\n}\n\nanimate({\n  to: 100,\n  driver: xrDriver(xrSession)\n})\ntype\nanimate will automatically detect the type of animation to use based on the options provided. But a specific type can be chosen manually by defining type as \"keyframes\", \"spring\" or \"decay\".\nanimate({\n  to: 100,\n  type: \"spring\"\n})\nLifecycle events\nThe following lifecycle events are available for all animations:\nonUpdate\nThis is called every frame the animation fires with the latest computed value.\nanimate({\n  to: 100,\n  onUpdate: latest => console.log(latest)\n})\nonPlay\nThis is called when the animation starts. Currently this automatically when animate is called.\nanimate({\n  to: 100,\n  onPlay: () => {}\n})\nonComplete\nThis is called when the animation successfully completes.\nanimate({\n  to: 100,\n  onComplete:() => {}\n})\nonRepeat\nThis is called when an animation repeats.\nanimate({\n  to: 100,\n  repeat: 2,\n  onRepeat: () => {}\n})\nonStop\nThis is called when the animation is stopped by the stop control.\nconst animation = animate({\n  to: 100,\n  onStop: () => {}\n})\n\nanimation.stop()\nKeyframes options\nA keyframes animation is the default animation type and it can be defined either with a from and to option:\nanimate({ from: 0, to: 100 })\nOr as a series of keyframes provided to the to option:\nanimate({ to: [0, 100, 200] })\nto\nA single value to animate to, or an array of values to animate through.\nanimate({\n  to: [\"#0ff\", \"#f00\", \"#0f0\"]\n})\nIf to is an array, any defined from will be ignored.\nduration\nThis defines the duration of the animation, in milliseconds.\nanimate({\n  to: 100,\n  duration: 300\n})\nease\nThis is an easing function, or array of functions, to use when easing between each keyframe.\nimport { animate, linear, easeInOut } from \"popmotion\"\n\nanimate({\n  to: 100,\n  ease: linear\n})\n\nanimate({\n  to: [\"#fff\", \"#000\", \"#f00\"],\n  ease: [linear, easeInOut]\n})\nIf set as any array, the length of this array must be one shorter than the number of values being animated between.\noffset\nThis is an array of values between 0 and 1 that defines at which point throughout the animation each keyframe should be reached.\nThis array should be the same length as the number of defined keyframes.\nanimate({\n  to: [\"#fff\", \"#000\", \"#f00\"],\n  offset: [0, 0.2, 1]\n})\nSpring options\nSprings are great for creating natural-feeling interfaces and dynamic interruptable animations.\nA spring animation will be used if any of the stiffness, damping or mass options are detected.\nNote: A spring simulation is inherently numerical so if it's given a color, array or object, it runs the animation from 0 to 100 and interpolates that to the given values. This strategy is likely to be tweaked before the official release so animations made this way may change in feel.\nto\nA single value to animate to.\nanimate({\n  to: 100,\n  type: \"spring\"\n})\nIf to is an array, any defined from will be ignored.\nstiffness\nThis defines the stiffness of the spring. A higher stiffness will result in a snappier animation.\nDefaults to 100\nanimate({\n  to: 100,\n  stiffness: 1000\n})\ndamping\nThis is the opposing force to stiffness. As you reduce this value, relative to stiffness, the spring will become bouncier and the animation will last longer. Likewise, higher relative values will have less bounciness and result in shorter animations.\nDefaults to 10\nanimate({\n  to: 100,\n  damping: 50\n})\nmass\nThis is the mass of the animating object. Heavier objects will take longer to speed up and slow down.\nDefaults to 1.\nanimate({\n  to: 100,\n  mass: 2\n})\nvelocity\nThe initial velocity, in units per second, of the animation.\nanimate({\n  to: 100,\n  velocity: 1000\n})\nduration\nThe duration of the spring, in milliseconds.\nWill be overridden by stiffness, mass or damping.\nanimate({\n  to: 100,\n  duration: 1000\n})\nbounce\nThe bounciness of the spring, as a value between 0 and 1, where 0 is no bounce.\nWill be overridden by stiffness, mass or damping.\nanimate({\n  to: 100,\n  bounce: 0.2\n})\nrestDelta\nThe distance from the animation target at which the animation can be considered complete. When both restDelta and restSpeed are met, the animation completes.\nanimate({\n  to: 100,\n  restDelta: 0.5\n})\nrestSpeed\nThe absolute velocity, in units per second, below which the animation can be considered complete. When both restDelta and restSpeed are met, the animation completes. Defaults to 10.\nanimate({\n  to: 100,\n  restSpeed: 5\n})\nPlayback controls\nanimate returns PlaybackControls, which can be used to control the playback of the animation.\nCurrently this only includes a stop method, but may expand with more.\nstop\nStops the animation.\nconst playback = animate({ from: 0, to: 100 })\nplayback.stop()\ninertia\nThe inertia animation is used to gradually decelerate a number. Think smartphone scroll momentum.\nOptions\nIn addition to animate's from, onUpdate and onComplete options, inertia also supports the following:\nvelocity\nThe initial velocity, in units per second, of the animation.\ninertia({\n  from: 0,\n  velocity: 100\n})\npower\nA constant with which to calculate a target value. Higher power = further target.\nDefaults to 0.8.\ninertia({\n  from: 0,\n  power: 0.3\n})\ntimeConstant\nAdjusting the time constant will change the duration of the deceleration, thereby affecting its feel.\nDefaults to 350.\ninertia({\n  from: 0,\n  velocity: 100,\n  timeConstant: 400\n})\nmodifyTarget\nA function that receives the calculated target and returns a new one. Useful for snapping the target to a grid.\nconst roundToNearest = target => v => Math.ceil(v \/ target) * target\n\ninertia({\n  from: 0,\n  velocity: 100,\n  modifyTarget: roundToNearest(100)\n})\nmin\nThe minimum value at which the animation will switch from gradual deceleration and use a spring animation to snap to this point.\ninertia({\n  from: 50,\n  velocity: -100,\n  min: 0\n})\nmax\nThe maximum value at which the animation will switch from gradual deceleration and use a spring animation to snap to this point.\ninertia({\n  from: 50,\n  velocity: 100,\n  max: 100\n})\nbounceStiffness\nThis defines the stiffness of the spring when the animation hits either min or max. A higher stiffness will result in a snappier animation.\nDefaults to 500\ninertia({\n  from: 0,\n  velocity: 100,\n  max: 50,\n  bounceStiffness: 1000\n})\nbounceDamping\nThis is the opposing force to bounceStiffness. As you reduce this value, relative to bounceStiffness, the spring will become bouncier and the animation will last longer. Likewise, higher relative values will have less bounciness and result in shorter animations.\nDefaults to 10\ninertia({\n  from: 0,\n  velocity: 100,\n  max: 50,\n  bounceDamping: 300\n})\nrestDelta\nThe distance from the animation target at which the animation can be considered complete.\ninertia({\n  from: 0,\n  velocity: 100,\n  restDelta: 0.5\n})\nIterators\nPowering animate and inertia are the keyframes, spring, and decay iterators.\nimport { keyframes, spring, decay } from \"popmotion\";\nIterators give you the ability to run an animation with a high degree of control. For example, Framer uses the spring iterator to draw its animation editor visualiser by running it synchronously.\nEach can be initialised with the matching options above (decay with a subset of inertia's options, excluding the bounce- options):\nconst animation = spring({\n  from: 0,\n  to: 100,\n  stiffness: 200\n})\nWith the returned iterator, you can resolve the animation at a specific timestamp with its next method.\n\/\/ Resolve the animation at 200ms\nconst { value, done } = animation.next(200)\nEasing\nPopmotion includes a number of in-built easing functions, as well as factory functions to make entirely new ones.\nFunctions\nEach easing function can be imported like so:\nimport { linear } from \"popmotion\"\nEach function accepts a progress value between 0 and 1, and returns a new one:\nconst progress = 0.5\nconst easedProgress = easeInOut(progress)\n\nlinear\neaseIn\neaseInOut\neaseOut\ncircIn\ncircInOut\ncircOut\nbackIn\nbackInOut\nbackOut\nanticipate\nbounceIn\nbounceInOut\nbounceOut\n\nFactories\ncubicBezier\nimport { cubicBezier } from \"popmotion\"\n\nconst easing = cubicBezier(0, .42, 0, 1)\nNew cubic bezier definitions can be created in the Framer animation editor and copy\/pasted directly into this function.\nsteps\nsteps returns an easing function that will convert the animation into a discrete series of steps.\nimport { steps } from \"popmotion\"\n\nconst easing = steps(5)\nIt optionally accepts a second parameter, either \"start\" or \"end\" (default)that decides whether the steps are aligned with the start or end of the animation.\nsteps(5, \"start\")\nmirrorEasing\nMirrors an existing easing function.\nreverseEasing\nReverses an existing easing function. For instance, providing it easeIn would return an easeOut.\nimport { reverseEasing, linear } from \"popmotion\"\n\nconst reversed = reverseEasing(linear)\nreversed(1) \/\/ 0\nreversed(0.5) \/\/ 0.5\nreversed(0) \/\/ 1\ncreateExpoIn\nCreates an easing function based on the exponent of the provided power. The higher the power, the stronger the easing.\nimport { createExpoIn } from \"popmotion\"\n\nconst expoIn = createExpoIn(4)\nThe returned easing function is an ease in, which means it starts slow and finished fast. mirrorEasing and reverseEasing can be used to create ease in out, and ease out variations:\nconst expoIn = createExpoIn(4)\nconst expoOut = mirrorEasing(easeIn)\nconst expoInOut = reverseEasing(easeIn)\ncreateBackIn\nCreates an easing function with an overshoot. It accepts a power value, the higher the power the stronger the overshoot.\nimport { createBackIn } from \"popmotion\"\n\nconst backIn = createBackIn(4)\nThe returned easing function is an ease in, which means the overshoot happens at the start of the animation. mirrorEasing and reverseEasing can be used to create ease in out, and ease out variations:\nconst backIn = createBackIn(4)\nconst backOut = mirrorEasing(easeIn)\nconst backInOut = reverseEasing(easeIn)\ncreateAnticipate\nCreates an easing that pulls back a little before animating out with an overshoot. The stronger the power the bigger the overshoot.\nimport { createAnticipate } from \"popmotion\"\n\nconst anticipate = createAnticipate(4)\nUtils\nangle\nReturns an angle between two points, in degrees.\nimport { angle } from \"popmotion\"\n\nangle(\n  { x: 0, y: 0 },\n  { x: 45, y: 100 }\n)\nattract\nimport { attract } from \"popmotion\"\n\nattract(5, 10, 12)\nattractExpo\nimport { attractExpo } from \"popmotion\"\n\nattractExpo(5, 10, 12)\nclamp\nClamp a value to within the given range.\nimport { clamp } from \"popmotion\"\n\nconst min = 50\nconst max = 100\nclamp(min, max, 150) \/\/ 100\ndegreesToRadians\nConverts degrees to radians.\nimport { degreesToRadians } from \"popmotion\"\n\ndegreesToRadians(45) \/\/ 0.785...\ndistance\nReturns the distance between two numbers, two 2D points, or two 3D points.\nimport { distance } from \"popmotion\"\n\ndistance(10, 50)\ndistance({ x: 0, y: 0 }, { x: 45, y: 100 })\ndistance({ x: 0, y: 0, z: 100 }, { x: 45, y: 100, z: 0 })\ninterpolate\nCreates a function that will interpolate from an linear series of numbers, to a non-linear series of numbers, strings of the same numerical format, colours, or arrays\/objects of those.\nimport { interpolate } from \"popmotion\"\n\nconst mapXToOpacity = interpolate(\n  [-100, 0, 100],\n  [0, 1, 0]\n)\nmapXToOpacity(-50) \/\/ 0.5\n\nconst mapProgressToValues = interpolate(\n  [0, 1],\n  [\n    { x: 0, color: \"#fff\" },\n    { x: 100, color: \"#000\" }\n  ]\n)\nmapProgressToValues(0.5) \/\/ { x: 50, color: \"#888\" }\n\nconst rescale = interpolate(\n  [0, 1],\n  [100, 200],\n  { clamp: false }\n)\nrescale(2) \/\/ 300\nOptions\ninterpolate accepts an optional third argument, an object of options.\n\nclamp: Clamps values to within given range. Defaults to true.\nease: An Easing function, or array of easing functions, to ease the interpolation of each segment.\nmixer: A function that, when provided a from and to value, will return a new function that accepts a progress value between 0 and 1 to mix between those two values. For integration with libraries like Flubber.\n\nisPoint\nReturns true if the provided argument is a 2D point.\nimport { isPoint } from \"popmotion\"\n\nisPoint({ x: 0 }) \/\/ false\nisPoint({ x: 0, y: 0 }) \/\/ true\nisPoint3D\nReturns true if the provided argument is a 3D point.\nimport { isPoint3D } from \"popmotion\"\n\nisPoint3D({ x: 0 }) \/\/ false\nisPoint3D({ x: 0, y: 0 }) \/\/ false\nisPoint3D({ x: 0, y: 0, z: 0 }) \/\/ true\nmix\nWill mix between two values, given progress as a third argument.\nimport { mix } from \"popmotion\"\n\nmix(0, 100, 0.5) \/\/ 50\nmix(0, 100, 2) \/\/ 200\nmixColor\nReturns a function that, when provided a progress value, will mix between two colors. Accepts hex, rgba and hsla colors.\nimport { mixColor } from \"popmotion\"\n\nmixColor(\"#000\", \"#fff\")(0.5) \/\/ \"rgba(125, 125, 125, 1)\"\nmixComplex\nReturns a function that, when provided a progress value, will mix between two strings with the same order of numbers and colors.\nimport { mixComplex } from \"popmotion\"\n\nmixComplex(\"100px #fff\", \"0px #000\")(0.5) \/\/ \"50px rgba(125, 125, 125, 1)\"\npointFromVector\nGiven a point, angle in degrees, and distance, will return a new point.\nimport { pointFromVector } from \"popmotion\"\n\nconst point = { x: 0, y: 0 }\nconst angle = 45\nconst distance = 100\n\npointFromVector(point, angle, distance)\nprogress\nGiven a min and a max range, and a value, will return the progress of the value within the range as normalised to a 0-1 range.\nimport { progress } from \"popmotion\"\n\nconst min = 100\nconst max = 200\nprogress(min, max, 150) \/\/ 0.5\nradiansToDegrees\nConverts radians to degrees.\nimport { radiansToDegrees } from \"popmotion\"\n\nradiansToDegrees(0.785) \/\/ 45\nsnap\nCreates a function that will snap numbers to the nearest in a provided array or to a regular interval.\nimport { snap } from \"popmotion\"\n\n\/\/ Snap to regular intervals\nconst snapTo = snap(45);\n\nsnapTo(1); \/\/ 0\nsnapTo(40); \/\/ 45\nsnapTo(50); \/\/ 45\nsnapTo(80); \/\/ 90\n\n\/\/ Snap to values in an array\nconst snapTo = snap([-100, -50, 100, 200]);\n\nsnapTo(-200); \/\/ -100\nsnapTo(-76); \/\/ -100\nsnapTo(-74); \/\/ -50\ntoDecimal\nRounds a number to a specific decimal place.\nimport { toDecimal } from \"popmotion\"\n\ntoDecimal(3.3333); \/\/ 3.33\ntoDecimal(6.6666, 1); \/\/ 6.67\nvelocityPerFrame\nimport { velocityPerFrame } from \"popmotion\"\n\nvelocityPerFrame(50, 16.7); \/\/ 0.835\nvelocityPerSecond\nimport { velocityPerSecond } from \"popmotion\"\n\nvelocityPerSecond(1, 16.7); \/\/ 59.880...\nwrap\nimport { wrap } from \"popmotion\"\n\nwrap(0, 1, 0.5); \/\/ 0.5\nwrap(0, 1, 1.5); \/\/ 0.5\n","101":"\n\n\n\n\n\n\n\n\n\n\nInstall\nPackage\nyarn add vuepress -D\nGenerator\n# Creates a scaffolded docs site\nyarn create vuepress-site\nFor more information, see create-vuepress-site.\nDocumentation\nCheck out our docs at https:\/\/vuepress.vuejs.org\/.\nShowcase\n\nAwesome VuePress\nvuepress.tools (By Ahmad Mostafa)\n\nContribution\nWant to contribute? Check our Contributing Guide and issues for beginners!\nyarn install # install all dependencies\nyarn dev  # serves VuePress' own docs with itself\nyarn test # make sure your code change pass the test\nIf you don't have a local checkout, you can also open VuePress in Gitpod, a free online IDE for GitHub.\nIf you intend to make \"substantial\" changes to VuePress or its documentation, please checkout VuePress RFCs.\nIf you have a VuePress-related project\/component\/tool, add it with a pull request to this curated list!\nContributors\nCreator \/ Lead\n\nEvan You\ud83d\udcbb\nULIVZ\ud83d\udcbb \ud83d\udcd6\n\nActive Core Team\n\n\nBillyyyyy3320\ud83d\udcbb\nBen Hong\ud83d\udcbb \ud83d\udcd6 \ud83d\udcac\nmeteorlxy\ud83d\udcbb\nRamona\ud83d\udcbb \ud83d\udcd6\nFranck Abgrall\ud83d\udcbb \ud83d\udcac\n\n\nCore Team Emeriti\nHere we honor some no-longer-active core team members who have made valuable contributions in the past.\n\n\nGiraud Florent\ud83d\udcbb\nSarah Dayan\ud83d\udcbb \ud83d\udcd6\nVinayak Kulkarni\ud83d\udd0c \ud83d\udcbb \ud83d\udcdd\nVictoria Bergquist\ud83d\udcbb \ud83c\udfa8\nNikita Sobolev\ud83d\udcbb \ud83d\udcd6\nFatih Acet\ud83d\udcbb\nVladimir Pouzanov\ud83d\udcbb\n\n\nCode Contributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nLicense\nMIT\n","102":"\u7f51\u6613\u4e91\u97f3\u4e50 API\n\u7f51\u6613\u4e91\u97f3\u4e50 Node.js API service\n\n\n\n\n\n\n\n\u7075\u611f\u6765\u81ea\ndisoul\/electron-cloud-music\ndarknessomi\/musicbox\nsqaiyan\/netmusic-node\n\u73af\u5883\u8981\u6c42\n\u9700\u8981 NodeJS 8.12+ \u73af\u5883\n\u5b89\u88c5\n$ git clone git@github.com:Binaryify\/NeteaseCloudMusicApi.git \n\n$ npm install\n\u6216\u8005\n$ git clone https:\/\/github.com\/Binaryify\/NeteaseCloudMusicApi.git\n\n$ npm install\n\u8fd0\u884c\n$ node app.js\n\u670d\u52a1\u5668\u542f\u52a8\u9ed8\u8ba4\u7aef\u53e3\u4e3a 3000,\u82e5\u4e0d\u60f3\u4f7f\u7528 3000 \u7aef\u53e3,\u53ef\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4: Mac\/Linux\n$ PORT=4000 node app.js\nwindows \u4e0b\u4f7f\u7528 git-bash \u6216\u8005 cmder \u7b49\u7ec8\u7aef\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4:\n$ set PORT=4000 && node app.js\n\u53ef\u4ee5\u5728Node.js\u8c03\u7528\nv3.31.0\u540e\u652f\u6301Node.js\u8c03\u7528,\u5bfc\u5165\u7684\u65b9\u6cd5\u4e3amodule\u5185\u7684\u6587\u4ef6\u540d,\u8fd4\u56de\u5185\u5bb9\u5305\u542bstatus\u548cbody,status\u4e3a\u72b6\u6001\u7801,body\u4e3a\u8bf7\u6c42\u8fd4\u56de\u5185\u5bb9,\u53c2\u8003module_example \u6587\u4ef6\u5939\u4e0b\u7684 test.js\nconst { login_cellphone, user_cloud } = require('NeteaseCloudMusicApi')\nasync function main() {\n  try {\n    const result = await login_cellphone({\n      phone: '\u624b\u673a\u53f7',\n      password: '\u5bc6\u7801'\n    })\n    console.log(result)\n    const result2 = await user_cloud({\n      cookie: result.body.cookie \/\/ \u51ed\u8bc1\n    })\n    console.log(result2.body)\n      \n  } catch (error) {\n    console.log(error)\n  }\n}\nmain()\n\u652f\u6301 TypeScript\n\/\/ test.ts\nimport { banner } from 'NeteaseCloudMusicApi'\nbanner({ type:0 }).then(res=>{\n  console.log(res)\n})\n\u4f7f\u7528\u6587\u6863\n\u6587\u6863\u5730\u5740\n\u6587\u6863\u5730\u57402\n\n\u529f\u80fd\u7279\u6027\n\n\u767b\u5f55\n\u5237\u65b0\u767b\u5f55\n\u53d1\u9001\u9a8c\u8bc1\u7801\n\u6821\u9a8c\u9a8c\u8bc1\u7801\n\u6ce8\u518c(\u4fee\u6539\u5bc6\u7801)\n\u83b7\u53d6\u7528\u6237\u4fe1\u606f , \u6b4c\u5355\uff0c\u6536\u85cf\uff0cmv, dj \u6570\u91cf\n\u83b7\u53d6\u7528\u6237\u6b4c\u5355\n\u83b7\u53d6\u7528\u6237\u7535\u53f0\n\u83b7\u53d6\u7528\u6237\u5173\u6ce8\u5217\u8868\n\u83b7\u53d6\u7528\u6237\u7c89\u4e1d\u5217\u8868\n\u83b7\u53d6\u7528\u6237\u52a8\u6001\n\u83b7\u53d6\u7528\u6237\u64ad\u653e\u8bb0\u5f55\n\u83b7\u53d6\u7cbe\u54c1\u6b4c\u5355\n\u83b7\u53d6\u6b4c\u5355\u8be6\u60c5\n\u641c\u7d22\n\u641c\u7d22\u5efa\u8bae\n\u83b7\u53d6\u6b4c\u8bcd\n\u6b4c\u66f2\u8bc4\u8bba\n\u6536\u85cf\u5355\u66f2\u5230\u6b4c\u5355\n\u4e13\u8f91\u8bc4\u8bba\n\u6b4c\u5355\u8bc4\u8bba\nmv \u8bc4\u8bba\n\u7535\u53f0\u8282\u76ee\u8bc4\u8bba\nbanner\n\u83b7\u53d6\u6b4c\u66f2\u8be6\u60c5\n\u83b7\u53d6\u4e13\u8f91\u5185\u5bb9\n\u83b7\u53d6\u6b4c\u624b\u5355\u66f2\n\u83b7\u53d6\u6b4c\u624b mv\n\u83b7\u53d6\u6b4c\u624b\u4e13\u8f91\n\u83b7\u53d6\u6b4c\u624b\u63cf\u8ff0\n\u83b7\u53d6\u76f8\u4f3c\u6b4c\u624b\n\u83b7\u53d6\u76f8\u4f3c\u6b4c\u5355\n\u76f8\u4f3c mv\n\u83b7\u53d6\u76f8\u4f3c\u97f3\u4e50\n\u83b7\u53d6\u6700\u8fd1 5 \u4e2a\u542c\u4e86\u8fd9\u9996\u6b4c\u7684\u7528\u6237\n\u83b7\u53d6\u6bcf\u65e5\u63a8\u8350\u6b4c\u5355\n\u83b7\u53d6\u6bcf\u65e5\u63a8\u8350\u6b4c\u66f2\n\u79c1\u4eba FM\n\u7b7e\u5230\n\u559c\u6b22\u97f3\u4e50\n\u5783\u573e\u6876\n\u6b4c\u5355 ( \u7f51\u53cb\u7cbe\u9009\u789f )\n\u65b0\u789f\u4e0a\u67b6\n\u70ed\u95e8\u6b4c\u624b\n\u6700\u65b0 mv\n\u63a8\u8350 mv\n\u63a8\u8350\u6b4c\u5355\n\u63a8\u8350\u65b0\u97f3\u4e50\n\u63a8\u8350\u7535\u53f0\n\u63a8\u8350\u8282\u76ee\n\u72ec\u5bb6\u653e\u9001\nmv \u6392\u884c\n\u83b7\u53d6 mv \u6570\u636e\n\u64ad\u653e mv\/\u89c6\u9891\n\u6392\u884c\u699c\n\u6b4c\u624b\u699c\n\u4e91\u76d8\n\u7535\u53f0 - \u63a8\u8350\n\u7535\u53f0 - \u5206\u7c7b\n\u7535\u53f0 - \u5206\u7c7b\u63a8\u8350\n\u7535\u53f0 - \u8ba2\u9605\n\u7535\u53f0 - \u8be6\u60c5\n\u7535\u53f0 - \u8282\u76ee\n\u7ed9\u8bc4\u8bba\u70b9\u8d5e\n\u83b7\u53d6\u52a8\u6001\n\u70ed\u641c\u5217\u8868(\u7b80\u7565)\n\u53d1\u9001\u79c1\u4fe1\n\u53d1\u9001\u79c1\u4fe1\u6b4c\u5355\n\u65b0\u5efa\u6b4c\u5355\n\u6536\u85cf\/\u53d6\u6d88\u6536\u85cf\u6b4c\u5355\n\u6b4c\u5355\u5206\u7c7b\n\u6536\u85cf\u7684\u6b4c\u624b\u5217\u8868\n\u8ba2\u9605\u7684\u7535\u53f0\u5217\u8868\n\u76f8\u5173\u6b4c\u5355\u63a8\u8350\n\u4ed8\u8d39\u7cbe\u9009\u63a5\u53e3\n\u97f3\u4e50\u662f\u5426\u53ef\u7528\u68c0\u67e5\u63a5\u53e3\n\u767b\u5f55\u72b6\u6001\n\u83b7\u53d6\u89c6\u9891\u64ad\u653e\u5730\u5740\n\u53d1\u9001\/\u5220\u9664\u8bc4\u8bba\n\u70ed\u95e8\u8bc4\u8bba\n\u89c6\u9891\u8bc4\u8bba\n\u9000\u51fa\u767b\u5f55\n\u6240\u6709\u699c\u5355\n\u6240\u6709\u699c\u5355\u5185\u5bb9\u6458\u8981\n\u6536\u85cf\u89c6\u9891\n\u6536\u85cf MV\n\u89c6\u9891\u8be6\u60c5\n\u76f8\u5173\u89c6\u9891\n\u5173\u6ce8\u7528\u6237\n\u65b0\u6b4c\u901f\u9012\n\u559c\u6b22\u97f3\u4e50\u5217\u8868(\u65e0\u5e8f)\n\u6536\u85cf\u7684 MV \u5217\u8868\n\u83b7\u53d6\u6700\u65b0\u4e13\u8f91\n\u542c\u6b4c\u6253\u5361\n\u83b7\u53d6\u89c6\u9891\u6807\u7b7e\/\u5206\u7c7b\u4e0b\u7684\u89c6\u9891\n\u5df2\u6536\u85cf\u4e13\u8f91\u5217\u8868\n\u83b7\u53d6\u52a8\u6001\u8bc4\u8bba\n\u6b4c\u5355\u6536\u85cf\u8005\u5217\u8868\n\u4e91\u76d8\u6b4c\u66f2\u5220\u9664\n\u70ed\u95e8\u8bdd\u9898\n\u7535\u53f0 - \u63a8\u8350\u7c7b\u578b\n\u7535\u53f0 - \u975e\u70ed\u95e8\u7c7b\u578b\n\u7535\u53f0 - \u4eca\u65e5\u4f18\u9009\n\u5fc3\u52a8\u6a21\u5f0f\/\u667a\u80fd\u64ad\u653e\n\u8f6c\u53d1\u52a8\u6001\n\u5220\u9664\u52a8\u6001\n\u5206\u4eab\u6b4c\u66f2\u3001\u6b4c\u5355\u3001mv\u3001\u7535\u53f0\u3001\u7535\u53f0\u8282\u76ee\u5230\u52a8\u6001\n\u901a\u77e5-\u79c1\u4fe1\n\u901a\u77e5-\u8bc4\u8bba\n\u901a\u77e5-@\u6211\n\u901a\u77e5-\u901a\u77e5\n\u8bbe\u7f6e\n\u4e91\u76d8\u6570\u636e\u8be6\u60c5\n\u79c1\u4fe1\u5185\u5bb9\n\u6211\u7684\u6570\u5b57\u4e13\u8f91\nbatch\u6279\u91cf\u8bf7\u6c42\u63a5\u53e3\n\u83b7\u53d6\u89c6\u9891\u6807\u7b7e\u5217\u8868\n\u5168\u90e8mv\n\u7f51\u6613\u51fa\u54c1mv\n\u6536\u85cf\/\u53d6\u6d88\u6536\u85cf\u4e13\u8f91\n\u4e13\u8f91\u52a8\u6001\u4fe1\u606f\n\u70ed\u641c\u5217\u8868(\u8be6\u7ec6)\n\u66f4\u6362\u7ed1\u5b9a\u624b\u673a\n\u68c0\u6d4b\u624b\u673a\u53f7\u7801\u662f\u5426\u5df2\u6ce8\u518c\n\u521d\u59cb\u5316\u6635\u79f0\n\u66f4\u65b0\u6b4c\u5355\u63cf\u8ff0\n\u66f4\u65b0\u6b4c\u5355\u540d\n\u66f4\u65b0\u6b4c\u5355\u6807\u7b7e\n\u9ed8\u8ba4\u641c\u7d22\u5173\u952e\u8bcd\n\u5220\u9664\u6b4c\u5355\n\u7535\u53f0banner\n\u7528\u6237\u7535\u53f0\n\u70ed\u95e8\u7535\u53f0\n\u7535\u53f0 - \u8282\u76ee\u8be6\u60c5\n\u7535\u53f0 - \u8282\u76ee\u699c\n\u7535\u53f0 - \u65b0\u664b\u7535\u53f0\u699c\/\u70ed\u95e8\u7535\u53f0\u699c\n\u7c7b\u522b\u70ed\u95e8\u7535\u53f0\n\u4e91\u6751\u70ed\u8bc4\n\u7535\u53f024\u5c0f\u65f6\u8282\u76ee\u699c\n\u7535\u53f024\u5c0f\u65f6\u4e3b\u64ad\u699c\n\u7535\u53f0\u6700\u70ed\u4e3b\u64ad\u699c\n\u7535\u53f0\u4e3b\u64ad\u65b0\u4eba\u699c\n\u7535\u53f0\u4ed8\u8d39\u7cbe\u54c1\u699c\n\u6b4c\u624b\u70ed\u95e850\u9996\u6b4c\u66f2\n\u8d2d\u4e70\u6570\u5b57\u4e13\u8f91\n\u83b7\u53d6 mv \u70b9\u8d5e\u8f6c\u53d1\u8bc4\u8bba\u6570\u6570\u636e\n\u83b7\u53d6\u89c6\u9891\u70b9\u8d5e\u8f6c\u53d1\u8bc4\u8bba\u6570\u6570\u636e\n\u8c03\u6574\u6b4c\u5355\u987a\u5e8f\n\u8c03\u6574\u6b4c\u66f2\u987a\u5e8f\n\u72ec\u5bb6\u653e\u9001\u5217\u8868\n\u83b7\u53d6\u63a8\u8350\u89c6\u9891\n\u83b7\u53d6\u89c6\u9891\u5206\u7c7b\u5217\u8868\n\u83b7\u53d6\u5168\u90e8\u89c6\u9891\u5217\u8868\u63a5\u53e3\n\u83b7\u53d6\u5386\u53f2\u65e5\u63a8\u53ef\u7528\u65e5\u671f\u5217\u8868\n\u83b7\u53d6\u5386\u53f2\u65e5\u63a8\u8be6\u7ec6\u6570\u636e\n\u56fd\u5bb6\u7f16\u7801\u5217\u8868\n\u9996\u9875-\u53d1\u73b0\n\u9996\u9875-\u53d1\u73b0-\u5706\u5f62\u56fe\u6807\u5165\u53e3\u5217\u8868\n\u6570\u5b57\u4e13\u8f91-\u5168\u90e8\u65b0\u789f\n\u6570\u5b57\u4e13\u8f91-\u70ed\u95e8\u65b0\u789f\n\u6570\u5b57\u4e13\u8f91&\u6570\u5b57\u5355\u66f2-\u699c\u5355\n\u6570\u5b57\u4e13\u8f91-\u8bed\u79cd\u98ce\u683c\u9986\n\u6570\u5b57\u4e13\u8f91\u8be6\u60c5\n\u66f4\u65b0\u5934\u50cf\n\u6b4c\u5355\u5c01\u9762\u4e0a\u4f20\n\u697c\u5c42\u8bc4\u8bba\n\u6b4c\u624b\u5168\u90e8\u6b4c\u66f2\n\u7cbe\u54c1\u6b4c\u5355\u6807\u7b7e\u5217\u8868\n\u7528\u6237\u7b49\u7ea7\u4fe1\u606f\n\u7535\u53f0\u4e2a\u6027\u63a8\u8350\n\u7528\u6237\u7ed1\u5b9a\u4fe1\u606f\n\u7528\u6237\u7ed1\u5b9a\u624b\u673a\n\u65b0\u7248\u8bc4\u8bba\n\u70b9\u8d5e\u8fc7\u7684\u89c6\u9891\n\u6536\u85cf\u89c6\u9891\u5230\u89c6\u9891\u6b4c\u5355\n\u5220\u9664\u89c6\u9891\u6b4c\u5355\u91cc\u7684\u89c6\u9891\n\u6700\u8fd1\u64ad\u653e\u7684\u89c6\u9891\n\u97f3\u4e50\u65e5\u5386\n\u7535\u53f0\u8ba2\u9605\u8005\u5217\u8868\n\u4e91\u8d1d\u7b7e\u5230\u4fe1\u606f\n\u4e91\u8d1d\u7b7e\u5230\n\u4e91\u8d1d\u6240\u6709\u4efb\u52a1\n\u4e91\u8d1dtodo\u4efb\u52a1\n\u4e91\u8d1d\u4eca\u65e5\u7b7e\u5230\u4fe1\u606f\n\u4e91\u8d1d\u5b8c\u6210\u4efb\u52a1\n\u4e91\u8d1d\u6536\u5165\n\u4e91\u8d1d\u652f\u51fa\n\u4e91\u8d1d\u8d26\u6237\u4fe1\u606f\n\u8d26\u53f7\u4fe1\u606f\n\u6700\u8fd1\u8054\u7cfb\u4eba\n\u79c1\u4fe1\u97f3\u4e50\n\u62b1\u4e00\u62b1\u8bc4\u8bba\n\u8bc4\u8bba\u62b1\u4e00\u62b1\u5217\u8868\n\u6536\u85cf\u7684\u4e13\u680f\n\n\u66f4\u65b0\u65e5\u5fd7\nchangelog\n\u5355\u5143\u6d4b\u8bd5\n$ npm test\n\n\n\u8d21\u732e\u8005\n\nLicense\nThe MIT License (MIT)\n","103":"React Native for Web\n  \nCompatibility: React Native >= 0.63.\n\"React Native for Web\" makes it possible to run React\nNative components and APIs on the web using React DOM.\n\n\nHigh-quality web interfaces: makes it easy to\ncreate fast,\nadaptive web UIs in JavaScript. It provides native-quality interactions, support\nfor multiple input modes (touch, mouse, keyboard), optimized vendor-prefixed\nstyles, built-in support for RTL layout, built-in accessibility, and integrates\nwith React Dev Tools.\n\n\nWrite once, render anywhere: interoperates with existing React DOM\ncomponents and is compatible with the majority of the React Native API. You can\ndevelop new components for native and web without rewriting existing code.\nReact Native for Web can also render to HTML and critical CSS on the server\nusing Node.js.\n\n\nWho is using React Native for Web in production?\nTwitter,\nExpo,\nMajor League Soccer,\nFlipkart,\nUber,\nThe Times,\nDataCamp.\nBrowser support: Chrome, Firefox, Edge, Safari 7+, IE 10+.\nComponents and APIs deprecated in React Native are not supported by React Native for Web.\nQuick start\nThe easiest way to get started is to edit this\nCodeSandbox template. You don\u2019t need to\ninstall anything to try it out.\nDocumentation\nThe documentation app covers\ninstallation, configuration, APIs, and guides.\nThe React Native documentation contains more information\nabout the Gesture Responder\nsystem,\nanimations, and\nother design details.\nLibraries and integrations\nList of React Native packages with known web compatibility:\n\nReact Native Directory\n\nExamples of using React Native for Web with other web tools:\n\nDocz\nGatsby\nNext.js\n(and example recipes)\nPhenomic\nRazzle\nStorybook\nStyleguidist\n\nExamples\nAnd here is a simple example to get you started. The documentation includes\ninteractive examples and the source\ncode is\nalso available.\nimport React from 'react';\nimport { AppRegistry, StyleSheet, Text, View } from 'react-native';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <View style={styles.box}>\n        <Text style={styles.text}>Hello, world!<\/Text>\n      <\/View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { padding: 10 },\n  text: { fontWeight: 'bold' }\n});\n\nAppRegistry.registerComponent('App', () => App);\nAppRegistry.runApplication('App', { rootTag: document.getElementById('react-root') });\nThis example will render the App into a container on the page.\nYou'll notice that there is no reference to react-dom; the App component is\ndefined using the platform-agnostic APIs and Components introduced by React\nNative. This allows the app to be rendered to web and native platforms.\nCompatibility with React Native\nReact Native v0.60\nComponents\n\n\n\nName\nStatus\nNotes\n\n\n\n\nActivityIndicator\n\u2713\n\n\n\nButton\n\u2713\n\n\n\nCheckBox\n\u2713\n\n\n\nFlatList\n\u2713\n\n\n\nImage\n\u2713\nMissing multiple sources (#515) and HTTP headers (#1019).\n\n\nImageBackground\n\u2713\n\n\n\nKeyboardAvoidingView\n(\u2713)\nMock. No equivalent web APIs.\n\n\nModal\n\u2713\n\n\n\nPicker\n\u2713\n\n\n\nPressable\n\u2713\n\n\n\nRefreshControl\n\u2718\nNot started (#1027).\n\n\nSafeAreaView\n\u2713\n\n\n\nScrollView\n\u2713\nMissing momentum scroll events (#1021).\n\n\nSectionList\n\u2713\n\n\n\nStatusBar\n(\u2713)\nMock. No equivalent web APIs.\n\n\nSwitch\n\u2713\n\n\n\nText\n\u2713\nMissing onLongPress (#1011) support.\n\n\nTextInput\n\u2713\nMissing rich text features (#1023), and auto-expanding behaviour (#795).\n\n\nTouchable\n\u2713\nIncludes additional support for mouse and keyboard interactions.\n\n\nTouchableHighlight\n\u2713\n\n\n\nTouchableNativeFeedback\n\u2718\nNot started (#1024).\n\n\nTouchableOpacity\n\u2713\n\n\n\nTouchableWithoutFeedback\n\u2713\n\n\n\nView\n\u2713\n\n\n\nVirtualizedList\n\u2713\n\n\n\nYellowBox\n(\u2713)\nMock. No YellowBox functionality.\n\n\n\nModules\n\n\n\nName\nStatus\nNotes\n\n\n\n\nAccessibilityInfo\n(\u2713)\nMock. No equivalent web APIs.\n\n\nAlert\n\u2718\nNot started (#1026).\n\n\nAnimated\n\u2713\nMissing useNativeDriver support.\n\n\nAppearance\n\u2713\n\n\n\nAppRegistry\n\u2713\nIncludes additional support for server rendering with getApplication.\n\n\nAppState\n\u2713\n\n\n\nBackHandler\n(\u2713)\nMock. No equivalent web APIs.\n\n\nClipboard\n\u2713\n\n\n\nDeviceInfo\n(\u2713)\nLimited information.\n\n\nDimensions\n\u2713\n\n\n\nEasing\n\u2713\n\n\n\nGeolocation\n\u2713\n\n\n\nI18nManager\n\u2713\nIncludes additional support for runtime switch to RTL.\n\n\nInteractionManager\n(\u2713)\n\n\n\nKeyboard\n(\u2713)\nMock.\n\n\nLayoutAnimation\n(\u2713)\nMissing translation to web animations.\n\n\nLinking\n\u2713\n\n\n\nNativeEventEmitter\n\u2713\n\n\n\nNativeMethodsMixin\n\u2713\n\n\n\nNativeModules\n(\u2713)\nMocked. Missing ability to load native modules.\n\n\nPanResponder\n\u2713\n\n\n\nPixelRatio\n\u2713\n\n\n\nPlatform\n\u2713\n\n\n\nSettings\n\u2718\nNo equivalent web APIs.\n\n\nShare\n\u2713\nOnly available over HTTPS. Read about the Web Share API.\n\n\nStyleSheet\n\u2713\n\n\n\nUIManager\n\u2713\n\n\n\nVibration\n\u2713\n\n\n\nuseColorScheme\n\u2713\n\n\n\nuseWindowDimensions\n\u2713\n\n\n\n\nContributing\nThe main purpose of this repository is to help evolve React web and native\ndevelopment towards the platform-agnostic design of React Native, and in the\nprocess make it faster and easier to build high-quality experiences for the web\nwith React. Development happens in the open on GitHub, and we are grateful for\ncontributing bugfixes and improvements. Read below to learn how you can take\npart in improving React Native for Web.\nCode of conduct\nFacebook has adopted a Code of Conduct that this project\nexpects all participants to adhere to. Please read the full text so that you\ncan understand what actions will and will not be tolerated.\nContributing guide\nRead the contributing guide to learn about the\ndevelopment process, how to propose bugfixes and improvements, and how to build\nand test your changes to React Native for Web.\nGood first issues\nTo help you get you familiar with the contribution process, there is a list of\ngood first issues that contain bugs which have a\nrelatively limited scope. This is a great place to get started.\nLicense\nReact Native for Web is MIT licensed. By contributing to React\nNative for Web, you agree that your contributions will be licensed under its\nMIT license.\n","104":"\n\n\n\n\n\nRedash is designed to enable anyone, regardless of the level of technical sophistication, to harness the power of data big and small. SQL users leverage Redash to explore, query, visualize, and share data from any data sources. Their work in turn enables anybody in their organization to use the data. Every day, millions of users at thousands of organizations around the world use Redash to develop insights and make data-driven decisions.\nRedash features:\n\nBrowser-based: Everything in your browser, with a shareable URL.\nEase-of-use: Become immediately productive with data without the need to master complex software.\nQuery editor: Quickly compose SQL and NoSQL queries with a schema browser and auto-complete.\nVisualization and dashboards: Create beautiful visualizations with drag and drop, and combine them into a single dashboard.\nSharing: Collaborate easily by sharing visualizations and their associated queries, enabling peer review of reports and queries.\nSchedule refreshes: Automatically update your charts and dashboards at regular intervals you define.\nAlerts: Define conditions and be alerted instantly when your data changes.\nREST API: Everything that can be done in the UI is also available through REST API.\nBroad support for data sources: Extensible data source API with native support for a long list of common databases and platforms.\n\n\nGetting Started\n\nSetting up Redash instance (includes links to ready-made AWS\/GCE images).\nDocumentation.\n\nSupported Data Sources\nRedash supports more than 35 SQL and NoSQL data sources. It can also be extended to support more. Below is a list of built-in sources:\n\nAmazon Athena\nAmazon DynamoDB\nAmazon Redshift\nAxibase Time Series Database\nCassandra\nClickHouse\nCockroachDB\nCSV\nDatabricks (Apache Spark)\nDB2 by IBM\nDruid\nElasticsearch\nGoogle Analytics\nGoogle BigQuery\nGoogle Spreadsheets\nGraphite\nGreenplum\nHive\nImpala\nInfluxDB\nJIRA\nJSON\nApache Kylin\nOmniSciDB (Formerly MapD)\nMemSQL\nMicrosoft Azure Data Warehouse \/ Synapse\nMicrosoft Azure SQL Database\nMicrosoft SQL Server\nMongoDB\nMySQL\nOracle\nPostgreSQL\nPresto\nPrometheus\nPython\nQubole\nRockset\nSalesforce\nScyllaDB\nShell Scripts\nSnowflake\nSQLite\nTreasureData\nVertica\nYandex AppMetrrica\nYandex Metrica\n\nGetting Help\n\nIssues: https:\/\/github.com\/getredash\/redash\/issues\nDiscussion Forum: https:\/\/discuss.redash.io\/\n\nReporting Bugs and Contributing Code\n\nWant to report a bug or request a feature? Please open an issue.\nWant to help us build Redash? Fork the project, edit in a dev environment and make a pull request. We need all the help we can get!\n\nSecurity\nPlease email security@redash.io to report any security vulnerabilities. We will acknowledge receipt of your vulnerability and strive to send you regular updates about our progress. If you're curious about the status of your disclosure please feel free to email us again. If you want to encrypt your disclosure email, you can use this PGP key.\nLicense\nBSD-2-Clause.\n","105":"\n  \n     \nGreetings, Java Hipster!\nFull documentation and information is available on our website at https:\/\/www.jhipster.tech\/\nPlease read our guidelines before submitting an issue. If your issue is a bug, please use the bug template pre-populated here. For feature requests and queries you can use this template.\nContributing\nWe are honoured by any contributions you may have small or large. Please refer to our contribution guidelines and instructions document for any information about contributing to the project.\nSponsors\nSupport this project by becoming a sponsor! Become a sponsor or learn more about sponsoring the project.\nThank you to our sponsors!\nGold Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBronze sponsors\n\nBackers\nThank you to all our backers!\n\n\nAzure Builds\nAdditional builds at hipster-labs\/jhipster-daily-builds\n\n\n\nPipeline Status\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of the sample JHipster project\n   \n","106":"\nDescription\nhowler.js is an audio library for the modern web. It defaults to Web Audio API and falls back to HTML5 Audio. This makes working with audio in JavaScript easy and reliable across all platforms.\nAdditional information, live demos and a user showcase are available at howlerjs.com.\nFollow on Twitter for howler.js and development-related discussion: @GoldFireStudios.\nFeatures\n\nSingle API for all audio needs\nDefaults to Web Audio API and falls back to HTML5 Audio\nHandles edge cases and bugs across environments\nSupports all codecs for full cross-browser support\nAutomatic caching for improved performance\nControl sounds individually, in groups or globally\nPlayback of multiple sounds at once\nEasy sound sprite definition and playback\nFull control for fading, rate, seek, volume, etc.\nEasily add 3D spatial sound or stereo panning\nModular - use what you want and easy to extend\nNo outside dependencies, just pure JavaScript\nAs light as 7kb gzipped\n\nBrowser Compatibility\nTested in the following browsers\/versions:\n\nGoogle Chrome 7.0+\nInternet Explorer 9.0+\nFirefox 4.0+\nSafari 5.1.4+\nMobile Safari 6.0+ (after user input)\nOpera 12.0+\nMicrosoft Edge\n\nLive Demos\n\nAudio Player\nRadio\nSpatial Audio\nAudio Sprites\n\nDocumentation\nContents\n\nQuick Start\nExamples\nCore\n\nOptions\nMethods\nGlobal Options\nGlobal Methods\n\n\nPlugin: Spatial\n\nOptions\nMethods\nGlobal Methods\n\n\nMobile Playback\nDolby Audio Playback\nFacebook Instant Games\nFormat Recommendations\nLicense\n\nQuick Start\nSeveral options to get up and running:\n\nClone the repo: git clone https:\/\/github.com\/goldfire\/howler.js.git\nInstall with npm: npm install howler\nInstall with Yarn: yarn add howler\nInstall with Bower: bower install howler\nHosted CDN: cdnjs jsDelivr\n\nIn the browser:\n<script src=\"\/path\/to\/howler.js\"><\/script>\n<script>\n    var sound = new Howl({\n      src: ['sound.webm', 'sound.mp3']\n    });\n<\/script>\nAs a dependency:\nimport {Howl, Howler} from 'howler';\nconst {Howl, Howler} = require('howler');\nExamples\nMost basic, play an MP3:\nvar sound = new Howl({\n  src: ['sound.mp3']\n});\n\nsound.play();\nMore playback options:\nvar sound = new Howl({\n  src: ['sound.webm', 'sound.mp3', 'sound.wav'],\n  autoplay: true,\n  loop: true,\n  volume: 0.5,\n  onend: function() {\n    console.log('Finished!');\n  }\n});\nDefine and play a sound sprite:\nvar sound = new Howl({\n  src: ['sounds.webm', 'sounds.mp3'],\n  sprite: {\n    blast: [0, 3000],\n    laser: [4000, 1000],\n    winner: [6000, 5000]\n  }\n});\n\n\/\/ Shoot the laser!\nsound.play('laser');\nListen for events:\nvar sound = new Howl({\n  src: ['sound.webm', 'sound.mp3']\n});\n\n\/\/ Clear listener after first call.\nsound.once('load', function(){\n  sound.play();\n});\n\n\/\/ Fires when the sound finishes playing.\nsound.on('end', function(){\n  console.log('Finished!');\n});\nControl multiple sounds:\nvar sound = new Howl({\n  src: ['sound.webm', 'sound.mp3']\n});\n\n\/\/ Play returns a unique Sound ID that can be passed\n\/\/ into any method on Howl to control that specific sound.\nvar id1 = sound.play();\nvar id2 = sound.play();\n\n\/\/ Fade out the first sound and speed up the second.\nsound.fade(1, 0, 1000, id1);\nsound.rate(1.5, id2);\nES6:\nimport {Howl, Howler} from 'howler';\n\n\/\/ Setup the new Howl.\nconst sound = new Howl({\n  src: ['sound.webm', 'sound.mp3']\n});\n\n\/\/ Play the sound.\nsound.play();\n\n\/\/ Change global volume.\nHowler.volume(0.5);\nMore in-depth examples (with accompanying live demos) can be found in the examples directory.\nCore\nOptions\nsrc Array\/String [] required\nThe sources to the track(s) to be loaded for the sound (URLs or base64 data URIs). These should be in order of preference, howler.js will automatically load the first one that is compatible with the current browser. If your files have no extensions, you will need to explicitly specify the extension using the format property.\nvolume Number 1.0\nThe volume of the specific track, from 0.0 to 1.0.\nhtml5 Boolean false\nSet to true to force HTML5 Audio. This should be used for large audio files so that you don't have to wait for the full file to be downloaded and decoded before playing.\nloop Boolean false\nSet to true to automatically loop the sound forever.\npreload Boolean|String true\nAutomatically begin downloading the audio file when the Howl is defined. If using HTML5 Audio, you can set this to 'metadata' to only preload the file's metadata (to get its duration without download the entire file, for example).\nautoplay Boolean false\nSet to true to automatically start playback when sound is loaded.\nmute Boolean false\nSet to true to load the audio muted.\nsprite Object {}\nDefine a sound sprite for the sound. The offset and duration are defined in milliseconds. A third (optional) parameter is available to set a sprite as looping. An easy way to generate compatible sound sprites is with audiosprite.\nnew Howl({\n  sprite: {\n    key1: [offset, duration, (loop)]\n  },\n});\nrate Number 1.0\nThe rate of playback. 0.5 to 4.0, with 1.0 being normal speed.\npool Number 5\nThe size of the inactive sounds pool. Once sounds are stopped or finish playing, they are marked as ended and ready for cleanup. We keep a pool of these to recycle for improved performance. Generally this doesn't need to be changed. It is important to keep in mind that when a sound is paused, it won't be removed from the pool and will still be considered active so that it can be resumed later.\nformat Array []\nhowler.js automatically detects your file format from the extension, but you may also specify a format in situations where extraction won't work (such as with a SoundCloud stream).\nxhr Object null\nWhen using Web Audio, howler.js uses an XHR request to load the audio files. If you need to send custom headers, set the HTTP method or enable withCredentials (see reference), include them with this parameter. Each is optional (method defaults to GET, headers default to null and withCredentials defaults to false). For example:\n\/\/ Using each of the properties.\nnew Howl({\n  xhr: {\n    method: 'POST',\n    headers: {\n      Authorization: 'Bearer:' + token,\n    },\n    withCredentials: true,\n  }\n});\n\n\/\/ Only changing the method.\nnew Howl({\n  xhr: {\n    method: 'POST',\n  }\n});\nonload Function\nFires when the sound is loaded.\nonloaderror Function\nFires when the sound is unable to load. The first parameter is the ID of the sound (if it exists) and the second is the error message\/code.\nonplayerror Function\nFires when the sound is unable to play. The first parameter is the ID of the sound and the second is the error message\/code.\nonplay Function\nFires when the sound begins playing. The first parameter is the ID of the sound.\nonend Function\nFires when the sound finishes playing (if it is looping, it'll fire at the end of each loop). The first parameter is the ID of the sound.\nonpause Function\nFires when the sound has been paused. The first parameter is the ID of the sound.\nonstop Function\nFires when the sound has been stopped. The first parameter is the ID of the sound.\nonmute Function\nFires when the sound has been muted\/unmuted. The first parameter is the ID of the sound.\nonvolume Function\nFires when the sound's volume has changed. The first parameter is the ID of the sound.\nonrate Function\nFires when the sound's playback rate has changed. The first parameter is the ID of the sound.\nonseek Function\nFires when the sound has been seeked. The first parameter is the ID of the sound.\nonfade Function\nFires when the current sound finishes fading in\/out. The first parameter is the ID of the sound.\nonunlock Function\nFires when audio has been automatically unlocked through a touch\/click event.\nMethods\nplay([sprite\/id])\nBegins playback of a sound. Returns the sound id to be used with other methods. Only method that can't be chained.\n\nsprite\/id: String\/Number optional Takes one parameter that can either be a sprite or sound ID. If a sprite is passed, a new sound will play based on the sprite's definition. If a sound ID is passed, the previously played sound will be played (for example, after pausing it). However, if an ID of a sound that has been drained from the pool is passed, nothing will play.\n\npause([id])\nPauses playback of sound or group, saving the seek of playback.\n\nid: Number optional The sound ID. If none is passed, all sounds in group are paused.\n\nstop([id])\nStops playback of sound, resetting seek to 0.\n\nid: Number optional The sound ID. If none is passed, all sounds in group are stopped.\n\nmute([muted], [id])\nMutes the sound, but doesn't pause the playback.\n\nmuted: Boolean optional True to mute and false to unmute.\nid: Number optional The sound ID. If none is passed, all sounds in group are stopped.\n\nvolume([volume], [id])\nGet\/set volume of this sound or the group. This method optionally takes 0, 1 or 2 arguments.\n\nvolume: Number optional Volume from 0.0 to 1.0.\nid: Number optional The sound ID. If none is passed, all sounds in group have volume altered relative to their own volume.\n\nfade(from, to, duration, [id])\nFade a currently playing sound between two volumes. Fires the fade event when complete.\n\nfrom: Number Volume to fade from (0.0 to 1.0).\nto: Number Volume to fade to (0.0 to 1.0).\nduration: Number Time in milliseconds to fade.\nid: Number optional The sound ID. If none is passed, all sounds in group will fade.\n\nrate([rate], [id])\nGet\/set the rate of playback for a sound. This method optionally takes 0, 1 or 2 arguments.\n\nrate: Number optional The rate of playback. 0.5 to 4.0, with 1.0 being normal speed.\nid: Number optional The sound ID. If none is passed, playback rate of all sounds in group will change.\n\nseek([seek], [id])\nGet\/set the position of playback for a sound. This method optionally takes 0, 1 or 2 arguments.\n\nseek: Number optional The position to move current playback to (in seconds).\nid: Number optional The sound ID. If none is passed, the first sound will seek.\n\nloop([loop], [id])\nGet\/set whether to loop the sound or group. This method can optionally take 0, 1 or 2 arguments.\n\nloop: Boolean optional To loop or not to loop, that is the question.\nid: Number optional The sound ID. If none is passed, all sounds in group will have their loop property updated.\n\nstate()\nCheck the load status of the Howl, returns a unloaded, loading or loaded.\nplaying([id])\nCheck if a sound is currently playing or not, returns a Boolean. If no sound ID is passed, check if any sound in the Howl group is playing.\n\nid: Number optional The sound ID to check.\n\nduration([id])\nGet the duration of the audio source (in seconds). Will return 0 until after the load event fires.\n\nid: Number optional The sound ID to check. Passing an ID will return the duration of the sprite being played on this instance; otherwise, the full source duration is returned.\n\non(event, function, [id])\nListen for events. Multiple events can be added by calling this multiple times.\n\nevent: String Name of event to fire\/set (load, loaderror, playerror, play, end, pause, stop, mute, volume, rate, seek, fade, unlock).\nfunction: Function Define function to fire on event.\nid: Number optional Only listen to events for this sound id.\n\nonce(event, function, [id])\nSame as on, but it removes itself after the callback is fired.\n\nevent: String Name of event to fire\/set (load, loaderror, playerror, play, end, pause, stop, mute, volume, rate, seek, fade, unlock).\nfunction: Function Define function to fire on event.\nid: Number optional Only listen to events for this sound id.\n\noff(event, [function], [id])\nRemove event listener that you've set. Call without parameters to remove all events.\n\nevent: String Name of event (load, loaderror, playerror, play, end, pause, stop, mute, volume, rate, seek, fade, unlock).\nfunction: Function optional The listener to remove. Omit this to remove all events of type.\nid: Number optional Only remove events for this sound id.\n\nload()\nThis is called by default, but if you set preload to false, you must call load before you can play any sounds.\nunload()\nUnload and destroy a Howl object. This will immediately stop all sounds attached to this sound and remove it from the cache.\nGlobal Options\nusingWebAudio Boolean\ntrue if the Web Audio API is available.\nnoAudio Boolean\ntrue if no audio is available.\nautoUnlock Boolean true\nAutomatically attempts to enable audio on mobile (iOS, Android, etc) devices and desktop Chrome\/Safari.\nhtml5PoolSize Number 10\nEach HTML5 Audio object must be unlocked individually, so we keep a global pool of unlocked nodes to share between all Howl instances. This pool gets created on the first user interaction and is set to the size of this property.\nautoSuspend Boolean true\nAutomatically suspends the Web Audio AudioContext after 30 seconds of inactivity to decrease processing and energy usage. Automatically resumes upon new playback. Set this property to false to disable this behavior.\nctx Boolean Web Audio Only\nExposes the AudioContext with Web Audio API.\nmasterGain Boolean Web Audio Only\nExposes the master GainNode with Web Audio API. This can be useful for writing plugins or advanced usage.\nGlobal Methods\nThe following methods are used to modify all sounds globally, and are called from the Howler object.\nmute(muted)\nMute or unmute all sounds.\n\nmuted: Boolean True to mute and false to unmute.\n\nvolume([volume])\nGet\/set the global volume for all sounds, relative to their own volume.\n\nvolume: Number optional Volume from 0.0 to 1.0.\n\nstop()\nStop all sounds and reset their seek position to the beginning.\ncodecs(ext)\nCheck supported audio codecs. Returns true if the codec is supported in the current browser.\n\next: String File extension. One of: \"mp3\", \"mpeg\", \"opus\", \"ogg\", \"oga\", \"wav\", \"aac\", \"caf\", \"m4a\", \"m4b\", \"mp4\", \"weba\", \"webm\", \"dolby\", \"flac\".\n\nunload()\nUnload and destroy all currently loaded Howl objects. This will immediately stop all sounds and remove them from cache.\nPlugin: Spatial\nOptions\norientation Array [1, 0, 0]\nSets the direction the audio source is pointing in the 3D cartesian coordinate space. Depending on how directional the sound is, based on the cone attributes, a sound pointing away from the listener can be quiet or silent.\nstereo Number null\nSets the stereo panning value of the audio source for this sound or group. This makes it easy to setup left\/right panning with a value of -1.0 being far left and a value of 1.0 being far right.\npos Array null\nSets the 3D spatial position of the audio source for this sound or group relative to the global listener.\npannerAttr Object\nSets the panner node's attributes for a sound or group of sounds. See the pannerAttr method for all available options.\nonstereo Function\nFires when the current sound has the stereo panning changed. The first parameter is the ID of the sound.\nonpos Function\nFires when the current sound has the listener position changed. The first parameter is the ID of the sound.\nonorientation Function\nFires when the current sound has the direction of the listener changed. The first parameter is the ID of the sound.\nMethods\nstereo(pan, [id])\nGet\/set the stereo panning of the audio source for this sound or all in the group.\n\npan: Number A value of -1.0 is all the way left and 1.0 is all the way right.\nid: Number optional The sound ID. If none is passed, all in group will be updated.\n\npos(x, y, z, [id])\nGet\/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n\nx: Number The x-position of the audio source.\ny: Number The y-position of the audio source.\nz: Number The z-position of the audio source.\nid: Number optional The sound ID. If none is passed, all in group will be updated.\n\norientation(x, y, z, [id])\nGet\/set the direction the audio source is pointing in the 3D cartesian coordinate space. Depending on how directional the sound is, based on the cone attributes, a sound pointing away from the listener can be quiet or silent.\n\nx: Number The x-orientation of the source.\ny: Number The y-orientation of the source.\nz: Number The z-orientation of the source.\nid: Number optional The sound ID. If none is passed, all in group will be updated.\n\npannerAttr(o, [id])\nGet\/set the panner node's attributes for a sound or group of sounds.\n\no: Object All values to update.\n\nconeInnerAngle 360 A parameter for directional audio sources, this is an angle, in degrees, inside of which there will be no volume reduction.\nconeOuterAngle 360 A parameter for directional audio sources, this is an angle, in degrees, outside of which the volume will be reduced to a constant value of coneOuterGain.\nconeOuterGain 0 A parameter for directional audio sources, this is the gain outside of the coneOuterAngle. It is a linear value in the range [0, 1].\ndistanceModel inverse Determines algorithm used to reduce volume as audio moves away from listener. Can be linear, inverse or exponential. You can find the implementations of each in the spec.\nmaxDistance 10000 The maximum distance between source and listener, after which the volume will not be reduced any further.\nrefDistance 1 A reference distance for reducing volume as source moves further from the listener. This is simply a variable of the distance model and has a different effect depending on which model is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\nrolloffFactor 1 How quickly the volume reduces as source moves from listener. This is simply a variable of the distance model and can be in the range of [0, 1] with linear and [0, \u221e] with inverse and exponential.\npanningModel HRTF Determines which spatialization algorithm is used to position audio. Can be HRTF or equalpower.\n\n\nid: Number optional The sound ID. If none is passed, all in group will be updated.\n\nGlobal Methods\nstereo(pan)\nHelper method to update the stereo panning position of all current Howls. Future Howls will not use this value unless explicitly set.\n\npan: Number A value of -1.0 is all the way left and 1.0 is all the way right.\n\npos(x, y, z)\nGet\/set the position of the listener in 3D cartesian space. Sounds using 3D position will be relative to the listener's position.\n\nx: Number The x-position of the listener.\ny: Number The y-position of the listener.\nz: Number The z-position of the listener.\n\norientation(x, y, z, xUp, yUp, zUp)\nGet\/set the direction the listener is pointing in the 3D cartesian space. A front and up vector must be provided. The front is the direction the face of the listener is pointing, and up is the direction the top of the listener is pointing. Thus, these values are expected to be at right angles from each other.\n\nx: Number The x-orientation of listener.\ny: Number The y-orientation of listener.\nz: Number The z-orientation of listener.\nxUp: Number The x-orientation of the top of the listener.\nyUp: Number The y-orientation of the top of the listener.\nzUp: Number The z-orientation of the top of the listener.\n\nMobile\/Chrome Playback\nBy default, audio on mobile browsers and Chrome\/Safari is locked until a sound is played within a user interaction, and then it plays normally the rest of the page session (Apple documentation). The default behavior of howler.js is to attempt to silently unlock audio playback by playing an empty buffer on the first touchend event. This behavior can be disabled by calling:\nHowler.autoUnlock = false;\nIf you try to play audio automatically on page load, you can listen to a playerror event and then wait for the unlock event to try and play the audio again:\nvar sound = new Howl({\n  src: ['sound.webm', 'sound.mp3'],\n  onplayerror: function() {\n    sound.once('unlock', function() {\n      sound.play();\n    });\n  }\n});\n\nsound.play();\nDolby Audio Playback\nFull support for playback of the Dolby Audio format (currently support in Edge and Safari) is included. However, you must specify that the file you are loading is dolby since it is in a mp4 container.\nvar dolbySound = new Howl({\n  src: ['sound.mp4', 'sound.webm', 'sound.mp3'],\n  format: ['dolby', 'webm', 'mp3']\n});\nFacebook Instant Games\nHowler.js provides audio support for the new Facebook Instant Games platform. If you encounter any issues while developing for Instant Games, open an issue with the tag [IG].\nFormat Recommendations\nHowler.js supports a wide array of audio codecs that have varying browser support (\"mp3\", \"opus\", \"ogg\", \"wav\", \"aac\", \"m4a\", \"m4b\", \"mp4\", \"webm\", ...), but if you want full browser coverage you still need to use at least two of them. If your goal is to have the best balance of small filesize and high quality, based on extensive production testing, your best bet is to default to webm and fallback to mp3. webm has nearly full browser coverage with a great combination of compression and quality. You'll need the mp3 fallback for Internet Explorer.\nIt is important to remember that howler.js selects the first compatible sound from your array of sources. So if you want webm to be used before mp3, you need to put the sources in that order.\nIf you want your webm files to be seekable in Firefox, be sure to encode them with the cues element. One way to do this is by using the dash flag in ffmpeg:\nffmpeg -i sound1.wav -dash 1 sound1.webm\n\nLicense\nCopyright (c) 2013-2020 James Simpson and GoldFire Studios, Inc.\nReleased under the MIT License.\n","107":"Highlight.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHighlight.js is a syntax highlighter written in JavaScript. It works in\nthe browser as well as on the server. It works with pretty much any\nmarkup, doesn\u2019t depend on any framework, and has automatic language\ndetection.\nUpgrading to Version 10\nVersion 10 is one of the biggest releases in quite some time.  If you're\nupgrading from version 9, there are some breaking changes and things you may\nwant to double check first.\nPlease read VERSION_10_UPGRADE.md for  high-level summary of breaking changes and any actions you may need to take. See VERSION_10_BREAKING_CHANGES.md for a more detailed list and CHANGES.md to learn what else is new.\nSupport for older versions\nPlease see SECURITY.md for support information.\nGetting Started\nThe bare minimum for using highlight.js on a web page is linking to the\nlibrary along with one of the styles and calling initHighlightingOnLoad:\n<link rel=\"stylesheet\" href=\"\/path\/to\/styles\/default.css\">\n<script src=\"\/path\/to\/highlight.min.js\"><\/script>\n<script>hljs.initHighlightingOnLoad();<\/script>\nThis will find and highlight code inside of <pre><code> tags; it tries\nto detect the language automatically. If automatic detection doesn\u2019t\nwork for you, you can specify the language in the class attribute:\n<pre><code class=\"html\">...<\/code><\/pre>\nClasses may also be prefixed with either language- or lang-.\n<pre><code class=\"language-html\">...<\/code><\/pre>\nPlaintext and Disabling Highlighting\nTo style arbitrary text like code, but without any highlighting, use the\nplaintext class:\n<pre><code class=\"plaintext\">...<\/code><\/pre>\nTo disable highlighting of a tag completely, use the nohighlight class:\n<pre><code class=\"nohighlight\">...<\/code><\/pre>\nSupported Languages\nHighlight.js supports over 180 different languages in the core library.  There are also 3rd party\nlanguage plugins available for additional languages. You can find the full list of supported languages\nin SUPPORTED_LANGUAGES.md.\nCustom Initialization\nWhen you need a bit more control over the initialization of\nhighlight.js, you can use the highlightBlock and configure\nfunctions. This allows you to control what to highlight and when.\nHere\u2019s an equivalent way to calling initHighlightingOnLoad using\nvanilla JS:\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  document.querySelectorAll('pre code').forEach((block) => {\n    hljs.highlightBlock(block);\n  });\n});\nYou can use any tags instead of <pre><code> to mark up your code. If\nyou don't use a container that preserves line breaks you will need to\nconfigure highlight.js to use the <br> tag:\nhljs.configure({useBR: true});\n\ndocument.querySelectorAll('div.code').forEach((block) => {\n  hljs.highlightBlock(block);\n});\nFor other options refer to the documentation for configure.\nUsing with Vue.js\nSimply register the plugin with Vue:\nVue.use(hljs.vuePlugin);\nAnd you'll be provided with a highlightjs component for use\nin your templates:\n  <div id=\"app\">\n    <!-- bind to a data property named `code` -->\n    <highlightjs autodetect :code=\"code\" \/>\n    <!-- or literal code works as well -->\n    <highlightjs language='javascript' code=\"var x = 5;\" \/>\n  <\/div>\nWeb Workers\nYou can run highlighting inside a web worker to avoid freezing the browser\nwindow while dealing with very big chunks of code.\nIn your main script:\naddEventListener('load', () => {\n  const code = document.querySelector('#code');\n  const worker = new Worker('worker.js');\n  worker.onmessage = (event) => { code.innerHTML = event.data; }\n  worker.postMessage(code.textContent);\n});\nIn worker.js:\nonmessage = (event) => {\n  importScripts('<path>\/highlight.min.js');\n  const result = self.hljs.highlightAuto(event.data);\n  postMessage(result.value);\n};\nNode.js\nYou can use highlight.js with node to highlight content before sending it to the browser.\nMake sure to use the .value property to get the formatted html.\nFor more info about the returned object refer to the api docs https:\/\/highlightjs.readthedocs.io\/en\/latest\/api.html\n\/\/ require the highlight.js library, including all languages\nconst hljs = require('.\/highlight.js');\nconst highlightedCode = hljs.highlightAuto('<span>Hello World!<\/span>').value\nOr for a smaller footprint... load just the languages you need.\nconst hljs = require(\"highlight.js\/lib\/core\");  \/\/ require only the core library\n\/\/ separately require languages\nhljs.registerLanguage('xml', require('highlight.js\/lib\/languages\/xml'));\n\nconst highlightedCode = hljs.highlight('xml', '<span>Hello World!<\/span>').value\nES6 Modules\nFirst, you'll likely install via npm or yarn -- see Getting the Library below.\nIn your application:\nimport hljs from 'highlight.js';\nThe default import imports all languages. Therefore it is likely to be more efficient to import only the library and the languages you need:\nimport hljs from 'highlight.js\/lib\/core';\nimport javascript from 'highlight.js\/lib\/languages\/javascript';\nhljs.registerLanguage('javascript', javascript);\nTo set the syntax highlighting style, if your build tool processes CSS from your JavaScript entry point, you can also import the stylesheet directly as modules:\nimport hljs from 'highlight.js\/lib\/core';\nimport 'highlight.js\/styles\/github.css';\nGetting the Library\nYou can get highlight.js as a hosted, or custom-build, browser script or\nas a server module. Right out of the box the browser script supports\nboth AMD and CommonJS, so if you wish you can use RequireJS or\nBrowserify without having to build from source. The server module also\nworks perfectly fine with Browserify, but there is the option to use a\nbuild specific to browsers rather than something meant for a server.\nDo not link to GitHub directly. The library is not supposed to work straight\nfrom the source, it requires building. If none of the pre-packaged options\nwork for you refer to the building documentation.\nOn Almond. You need to use the optimizer to give the module a name. For\nexample:\nr.js -o name=hljs paths.hljs=\/path\/to\/highlight out=highlight.js\nCDN Hosted\nA prebuilt version of highlight.js bundled with many common languages is hosted by the following CDNs:\ncdnjs (link)\n<link rel=\"stylesheet\"\n      href=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/10.4.0\/styles\/default.min.css\">\n<script src=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/10.4.0\/highlight.min.js\"><\/script>\n<!-- and it's easy to individually load additional languages -->\n<script charset=\"UTF-8\"\n src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/highlight.js\/10.4.0\/languages\/go.min.js\"><\/script>\njsdelivr (link)\n<link rel=\"stylesheet\"\n      href=\"\/\/cdn.jsdelivr.net\/gh\/highlightjs\/cdn-release@10.4.0\/build\/styles\/default.min.css\">\n<script src=\"\/\/cdn.jsdelivr.net\/gh\/highlightjs\/cdn-release@10.4.0\/build\/highlight.min.js\"><\/script>\nunpkg (link)\n<link rel=\"stylesheet\" href=\"https:\/\/unpkg.com\/@highlightjs\/cdn-assets@10.4.0\/styles\/default.min.css\">\n<script src=\"https:\/\/unpkg.com\/@highlightjs\/cdn-assets@10.4.0\/highlight.min.js\"><\/script>\nNote: The CDN-hosted highlight.min.js package doesn't bundle every language. It would be\nvery large. You can find our list \"common\" languages that we bundle by default on our download page.\nSelf Hosting\nThe download page can quickly generate a custom bundle including only the languages you need.\nAlternatively, you can build a browser package from source:\nnode tools\/build.js -t browser :common\n\nSee our building documentation for more information.\nNote: Building from source should always result in the smallest size builds.  The website download page is optimized for speed, not size.\nPrebuilt CDN assets\nYou can also download and self-host the same assets we serve up via our own CDNs.  We publish those builds to the cdn-release GitHub repository.  You can easily pull individual files off the CDN endpoints with curl, etc; if say you only needed highlight.min.js and a single CSS file.\nThere is also an npm package @highlightjs\/cdn-assets if pulling the assets in via npm or yarn would be easier for your build process.\nNPM \/ Node.js server module\nHighlight.js can also be used on the server. The package with all supported languages can be installed from NPM or Yarn:\nnpm install highlight.js\n# or\nyarn add highlight.js\nAlternatively, you can build it from source:\nnode tools\/build.js -t node\nSee our building documentation for more information.\nSource\nCurrent source is always available on GitHub.\nLicense\nHighlight.js is released under the BSD License. See LICENSE file\nfor details.\nLinks\nThe official site for the library is at https:\/\/highlightjs.org\/.\nFurther in-depth documentation for the API and other topics is at\nhttp:\/\/highlightjs.readthedocs.io\/.\nAuthors and contributors are listed in the AUTHORS.txt file.\n","108":"\n\n\n\n\n\n\n\nESLint\nWebsite |\nConfiguring |\nRules |\nContributing |\nReporting Bugs |\nCode of Conduct |\nTwitter |\nMailing List |\nChat Room\nESLint is a tool for identifying and reporting on patterns found in ECMAScript\/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\nESLint uses Espree for JavaScript parsing.\nESLint uses an AST to evaluate patterns in code.\nESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\nTable of Contents\n\nInstallation and Usage\nConfiguration\nCode of Conduct\nFiling Issues\nFrequently Asked Questions\nReleases\nSecurity Policy\nSemantic Versioning Policy\nLicense\nTeam\nSponsors\nTechnology Sponsors\n\nInstallation and Usage\nPrerequisites: Node.js (^10.12.0, or >=12.0.0) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)\nYou can install ESLint using npm:\n$ npm install eslint --save-dev\n\nYou should then set up a configuration file:\n$ .\/node_modules\/.bin\/eslint --init\n\nAfter that, you can run ESLint on any file or directory like this:\n$ .\/node_modules\/.bin\/eslint yourfile.js\n\nConfiguration\nAfter running eslint --init, you'll have a .eslintrc file in your directory. In it, you'll see some rules configured like this:\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\nThe names \"semi\" and \"quotes\" are the names of rules in ESLint. The first value is the error level of the rule and can be one of these values:\n\n\"off\" or 0 - turn the rule off\n\"warn\" or 1 - turn the rule on as a warning (doesn't affect exit code)\n\"error\" or 2 - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the configuration docs).\nCode of Conduct\nESLint adheres to the JS Foundation Code of Conduct.\nFiling Issues\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\nBug Report\nPropose a New Rule\nProposing a Rule Change\nRequest a Change\n\nFrequently Asked Questions\nI'm using JSCS, should I migrate to ESLint?\nYes. JSCS has reached end of life and is no longer supported.\nWe have prepared a migration guide to help you convert your JSCS settings to an ESLint configuration.\nWe are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule\/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.\nDoes Prettier replace ESLint?\nNo, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.\nWhy can't ESLint find my plugins?\n\nMake sure your plugins (and ESLint) are both in your project's package.json as devDependencies (or dependencies, if your project uses ESLint at runtime).\nMake sure you have run npm install and all your dependencies are installed.\nMake sure your plugins' peerDependencies have been installed as well. You can use npm view eslint-plugin-myplugin peerDependencies to see what peer dependencies eslint-plugin-myplugin has.\n\nDoes ESLint support JSX?\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in configuration). Please note that supporting JSX syntax is not the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using eslint-plugin-react if you are using React and want React semantics.\nWhat ECMAScript versions does ESLint support?\nESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, 2019, and 2020. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through configuration.\nWhat about experimental features?\nESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.\nIn other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and\/or rule plugins. If you are using Babel, you can use the babel-eslint parser and eslint-plugin-babel to use any option available in Babel.\nOnce a language feature has been adopted into the ECMAScript standard (stage 4 according to the TC39 process), we will accept issues and pull requests related to the new feature, subject to our contributing guidelines. Until then, please use the appropriate parser and plugin(s) for your experimental feature.\nWhere to ask for help?\nJoin our Mailing List or Chatroom.\nReleases\nWe have scheduled releases every two weeks on Friday or Saturday. You can follow a release issue for updates about the scheduling of any particular release.\nSecurity Policy\nESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy.\nSemantic Versioning Policy\nESLint follows semantic versioning. However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:\n\nPatch release (intended to not break your lint build)\n\nA bug fix in a rule that results in ESLint reporting fewer linting errors.\nA bug fix to the CLI or core (including formatters).\nImprovements to documentation.\nNon-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\nRe-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n\n\nMinor release (might break your lint build)\n\nA bug fix in a rule that results in ESLint reporting more linting errors.\nA new rule is created.\nA new option to an existing rule that does not result in ESLint reporting more linting errors by default.\nAn existing rule is deprecated.\nA new CLI capability is created.\nNew capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).\nA new formatter is created.\neslint:recommended is updated and will result in strictly fewer linting errors (e.g., rule removals).\n\n\nMajor release (likely to break your lint build)\n\neslint:recommended is updated and may result in new linting errors (e.g., rule additions, most rule option updates).\nA new option to an existing rule that results in ESLint reporting more linting errors by default.\nAn existing formatter is removed.\nPart of the public API is removed or changed in an incompatible way. The public API includes:\n\nRule schemas\nConfiguration schema\nCommand-line options\nNode.js API\nRule, formatter, parser, plugin APIs\n\n\n\n\n\nAccording to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (~) in package.json e.g. \"eslint\": \"~3.1.0\" to guarantee the results of your builds.\nLicense\n\nTeam\nThese folks keep the project moving and are resources for help.\nTechnical Steering Committee (TSC)\nThe people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.\n\n\n\nNicholas C. Zakas\n\n\n\n\nBrandon Mills\n\n\n\n\nToru Nagashima\n\n\n\n\nKai Cataldo\n\n\n\n\nMilos Djermanovic\n\n\nReviewers\nThe people who review and implement new features.\n\n\n\n\u859b\u5b9a\u8c14\u7684\u732b\n\n\nCommitters\nThe people who review and fix bugs and help triage issues.\n\n\n\nPig Fang\n\n\n\n\nAnix\n\n\n\n\nYeonJuan\n\n\nSponsors\nThe following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.\nPlatinum Sponsors\nGold Sponsors\n    Silver Sponsors\n Bronze Sponsors\n           \nTechnology Sponsors\n\nSite search (eslint.org) is sponsored by Algolia\nHosting for (eslint.org) is sponsored by Netlify\nPassword management is sponsored by 1Password\n\n","109":"Reselect\n\n\n\nSimple \u201cselector\u201d library for Redux (and others) inspired by getters in NuclearJS, subscriptions in re-frame and this proposal from speedskater.\n\nSelectors can compute derived data, allowing Redux to store the minimal possible state.\nSelectors are efficient. A selector is not recomputed unless one of its arguments changes.\nSelectors are composable. They can be used as input to other selectors.\n\nYou can play around with the following example in this codepen:\nimport { createSelector } from 'reselect'\n\nconst shopItemsSelector = state => state.shop.items\nconst taxPercentSelector = state => state.shop.taxPercent\n\nconst subtotalSelector = createSelector(\n  shopItemsSelector,\n  items => items.reduce((acc, item) => acc + item.value, 0)\n)\n\nconst taxSelector = createSelector(\n  subtotalSelector,\n  taxPercentSelector,\n  (subtotal, taxPercent) => subtotal * (taxPercent \/ 100)\n)\n\nexport const totalSelector = createSelector(\n  subtotalSelector,\n  taxSelector,\n  (subtotal, tax) => ({ total: subtotal + tax })\n)\n\nlet exampleState = {\n  shop: {\n    taxPercent: 8,\n    items: [\n      { name: 'apple', value: 1.20 },\n      { name: 'orange', value: 0.95 },\n    ]\n  }\n}\n\nconsole.log(subtotalSelector(exampleState)) \/\/ 2.15\nconsole.log(taxSelector(exampleState))      \/\/ 0.172\nconsole.log(totalSelector(exampleState))    \/\/ { total: 2.322 }\nTable of Contents\n\n\nInstallation\n\n\nExample\n\nMotivation for Memoized Selectors\nCreating a Memoized Selector\nComposing Selectors\nConnecting a Selector to the Redux Store\nAccessing React Props in Selectors\nSharing Selectors with Props Across Multiple Component Instances\n\n\n\nAPI\n\ncreateSelector\ndefaultMemoize\ncreateSelectorCreator\ncreateStructuredSelector\n\n\n\nFAQ\n\nWhy isn't my selector recomputing when the input state changes?\nWhy is my selector recomputing when the input state stays the same?\nCan I use Reselect without Redux?\nThe default memoization function is no good, can I use a different one?\nHow do I test a selector?\nHow do I create a selector that takes an argument? \nHow do I use Reselect with Immutable.js?\nCan I share a selector across multiple component instances?\nAre there TypeScript typings?\nHow can I make a curried selector?\n\n\n\nRelated Projects\n\n\nLicense\n\n\nInstallation\nnpm install reselect\n\nExample\nIf you prefer a video tutorial, you can find one here.\nMotivation for Memoized Selectors\n\nThe examples in this section are based on the Redux Todos List example.\n\ncontainers\/VisibleTodoList.js\nimport { connect } from 'react-redux'\nimport { toggleTodo } from '..\/actions'\nimport TodoList from '..\/components\/TodoList'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed)\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTodoClick: (id) => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\nIn the above example, mapStateToProps calls getVisibleTodos to calculate todos. This works great, but there is a drawback: todos is calculated every time the state tree is updated. If the state tree is large, or the calculation expensive, repeating the calculation on every update may cause performance problems. Reselect can help to avoid these unnecessary recalculations.\nCreating a Memoized Selector\nWe would like to replace getVisibleTodos with a memoized selector that recalculates todos when the value of state.todos or state.visibilityFilter changes, but not when changes occur in other (unrelated) parts of the state tree.\nReselect provides a function createSelector for creating memoized selectors. createSelector takes an array of input-selectors and a transform function as its arguments. If the Redux state tree is mutated in a way that causes the value of an input-selector to change, the selector will call its transform function with the values of the input-selectors as arguments and return the result. If the values of the input-selectors are the same as the previous call to the selector, it will return the previously computed value instead of calling the transform function.\nLet's define a memoized selector named getVisibleTodos to replace the non-memoized version above:\nselectors\/index.js\nimport { createSelector } from 'reselect'\n\nconst getVisibilityFilter = (state) => state.visibilityFilter\nconst getTodos = (state) => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [ getVisibilityFilter, getTodos ],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case 'SHOW_ALL':\n        return todos\n      case 'SHOW_COMPLETED':\n        return todos.filter(t => t.completed)\n      case 'SHOW_ACTIVE':\n        return todos.filter(t => !t.completed)\n    }\n  }\n)\nIn the example above, getVisibilityFilter and getTodos are input-selectors. They are created as ordinary non-memoized selector functions because they do not transform the data they select. getVisibleTodos on the other hand is a memoized selector. It takes getVisibilityFilter and getTodos as input-selectors, and a transform function that calculates the filtered todos list.\nComposing Selectors\nA memoized selector can itself be an input-selector to another memoized selector. Here is getVisibleTodos being used as an input-selector to a selector that further filters the todos by keyword:\nconst getKeyword = (state) => state.keyword\n\nconst getVisibleTodosFilteredByKeyword = createSelector(\n  [ getVisibleTodos, getKeyword ],\n  (visibleTodos, keyword) => visibleTodos.filter(\n    todo => todo.text.includes(keyword)\n  )\n)\nConnecting a Selector to the Redux Store\nIf you are using React Redux, you can call selectors as regular functions inside mapStateToProps():\ncontainers\/VisibleTodoList.js\nimport { connect } from 'react-redux'\nimport { toggleTodo } from '..\/actions'\nimport TodoList from '..\/components\/TodoList'\nimport { getVisibleTodos } from '..\/selectors'\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: getVisibleTodos(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTodoClick: (id) => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\nAccessing React Props in Selectors\n\nThis section introduces a hypothetical extension to our app that allows it to support multiple Todo Lists. Please note that a full implementation of this extension requires changes to the reducers, components, actions etc. that aren\u2019t directly relevant to the topics discussed and have been omitted for brevity.\n\nSo far we have only seen selectors receive the Redux store state as an argument, but a selector can receive props too.\nHere is an App component that renders three VisibleTodoList component instances, each of which has a listId prop:\ncomponents\/App.js\nimport React from 'react'\nimport Footer from '.\/Footer'\nimport AddTodo from '..\/containers\/AddTodo'\nimport VisibleTodoList from '..\/containers\/VisibleTodoList'\n\nconst App = () => (\n  <div>\n    <VisibleTodoList listId=\"1\" \/>\n    <VisibleTodoList listId=\"2\" \/>\n    <VisibleTodoList listId=\"3\" \/>\n  <\/div>\n)\nEach VisibleTodoList container should select a different slice of the state depending on the value of the listId prop, so let\u2019s modify getVisibilityFilter and getTodos to accept a props argument:\nselectors\/todoSelectors.js\nimport { createSelector } from 'reselect'\n\nconst getVisibilityFilter = (state, props) =>\n  state.todoLists[props.listId].visibilityFilter\n\nconst getTodos = (state, props) =>\n  state.todoLists[props.listId].todos\n\nconst getVisibleTodos = createSelector(\n  [ getVisibilityFilter, getTodos ],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case 'SHOW_COMPLETED':\n        return todos.filter(todo => todo.completed)\n      case 'SHOW_ACTIVE':\n        return todos.filter(todo => !todo.completed)\n      default:\n        return todos\n    }\n  }\n)\n\nexport default getVisibleTodos\nprops can be passed to getVisibleTodos from mapStateToProps:\nconst mapStateToProps = (state, props) => {\n  return {\n    todos: getVisibleTodos(state, props)\n  }\n}\nSo now getVisibleTodos has access to props, and everything seems to be working fine.\nBut there is a problem!\nUsing the getVisibleTodos selector with multiple instances of the VisibleTodoList container will not correctly memoize:\ncontainers\/VisibleTodoList.js\nimport { connect } from 'react-redux'\nimport { toggleTodo } from '..\/actions'\nimport TodoList from '..\/components\/TodoList'\nimport { getVisibleTodos } from '..\/selectors'\n\nconst mapStateToProps = (state, props) => {\n  return {\n    \/\/ WARNING: THE FOLLOWING SELECTOR DOES NOT CORRECTLY MEMOIZE\n    todos: getVisibleTodos(state, props)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTodoClick: (id) => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\nA selector created with createSelector has a cache size of 1 and only returns the cached value when its set of arguments is the same as its previous set of arguments. If we alternate between rendering <VisibleTodoList listId=\"1\" \/> and <VisibleTodoList listId=\"2\" \/>, the shared selector will alternate between receiving {listId: 1} and {listId: 2} as its props argument. This will cause the arguments to be different on each call, so the selector will always recompute instead of returning the cached value. We\u2019ll see how to overcome this limitation in the next section.\nSharing Selectors with Props Across Multiple Component Instances\n\nThe examples in this section require React Redux v4.3.0 or greater\n\n\nAn alternative approach can be found in re-reselect\n\nTo share a selector across multiple VisibleTodoList instances while passing in props and retaining memoization, each instance of the component needs its own private copy of the selector.\nLet\u2019s create a function named makeGetVisibleTodos that returns a new copy of the getVisibleTodos selector each time it is called:\nselectors\/todoSelectors.js\nimport { createSelector } from 'reselect'\n\nconst getVisibilityFilter = (state, props) =>\n  state.todoLists[props.listId].visibilityFilter\n\nconst getTodos = (state, props) =>\n  state.todoLists[props.listId].todos\n\nconst makeGetVisibleTodos = () => {\n  return createSelector(\n    [ getVisibilityFilter, getTodos ],\n    (visibilityFilter, todos) => {\n      switch (visibilityFilter) {\n        case 'SHOW_COMPLETED':\n          return todos.filter(todo => todo.completed)\n        case 'SHOW_ACTIVE':\n          return todos.filter(todo => !todo.completed)\n        default:\n          return todos\n      }\n    }\n  )\n}\n\nexport default makeGetVisibleTodos\nWe also need a way to give each instance of a container access to its own private selector. The mapStateToProps argument of connect can help with this.\nIf the mapStateToProps argument supplied to connect returns a function instead of an object, it will be used to create an individual mapStateToProps function for each instance of the container.\nIn the example below makeMapStateToProps creates a new getVisibleTodos selector, and returns a mapStateToProps function that has exclusive access to the new selector:\nconst makeMapStateToProps = () => {\n  const getVisibleTodos = makeGetVisibleTodos()\n  const mapStateToProps = (state, props) => {\n    return {\n      todos: getVisibleTodos(state, props)\n    }\n  }\n  return mapStateToProps\n}\nIf we pass makeMapStateToProps to connect, each instance of the VisibleTodoList container will get its own mapStateToProps function with a private getVisibleTodos selector. Memoization will now work correctly regardless of the render order of the VisibleTodoList containers.\ncontainers\/VisibleTodoList.js\nimport { connect } from 'react-redux'\nimport { toggleTodo } from '..\/actions'\nimport TodoList from '..\/components\/TodoList'\nimport { makeGetVisibleTodos } from '..\/selectors'\n\nconst makeMapStateToProps = () => {\n  const getVisibleTodos = makeGetVisibleTodos()\n  const mapStateToProps = (state, props) => {\n    return {\n      todos: getVisibleTodos(state, props)\n    }\n  }\n  return mapStateToProps\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTodoClick: (id) => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nconst VisibleTodoList = connect(\n  makeMapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\nAPI\ncreateSelector(...inputSelectors | [inputSelectors], resultFunc)\nTakes one or more selectors, or an array of selectors, computes their values and passes them as arguments to resultFunc.\ncreateSelector determines if the value returned by an input-selector has changed between calls using reference equality (===). Inputs to selectors created with createSelector should be immutable.\nSelectors created with createSelector have a cache size of 1. This means they always recalculate when the value of an input-selector changes, as a selector only stores the preceding value of each input-selector.\nconst mySelector = createSelector(\n  state => state.values.value1,\n  state => state.values.value2,\n  (value1, value2) => value1 + value2\n)\n\n\/\/ You can also pass an array of selectors\nconst totalSelector = createSelector(\n  [\n    state => state.values.value1,\n    state => state.values.value2\n  ],\n  (value1, value2) => value1 + value2\n)\nIt can be useful to access the props of a component from within a selector. When a selector is connected to a component with connect, the component props are passed as the second argument to the selector:\nconst abSelector = (state, props) => state.a * props.b\n\n\/\/ props only (ignoring state argument)\nconst cSelector =  (_, props) => props.c\n\n\/\/ state only (props argument omitted as not required)\nconst dSelector = state => state.d\n\nconst totalSelector = createSelector(\n  abSelector,\n  cSelector,\n  dSelector,\n  (ab, c, d) => ({\n    total: ab + c + d\n  })\n)\ndefaultMemoize(func, equalityCheck = defaultEqualityCheck)\ndefaultMemoize memoizes the function passed in the func parameter. It is the memoize function used by createSelector.\ndefaultMemoize has a cache size of 1. This means it always recalculates when the value of an argument changes.\ndefaultMemoize determines if an argument has changed by calling the equalityCheck function. As defaultMemoize is designed to be used with immutable data, the default equalityCheck function checks for changes using reference equality:\nfunction defaultEqualityCheck(previousVal, currentVal) {\n  return currentVal === previousVal\n}\ndefaultMemoize can be used with createSelectorCreator to customize the equalityCheck function.\ncreateSelectorCreator(memoize, ...memoizeOptions)\ncreateSelectorCreator can be used to make a customized version of createSelector.\nThe memoize argument is a memoization function to replace defaultMemoize.\nThe ...memoizeOptions rest parameters are zero or more configuration options to be passed to memoizeFunc. The selectors resultFunc is passed as the first argument to memoize and the memoizeOptions are passed as the second argument onwards:\nconst customSelectorCreator = createSelectorCreator(\n  customMemoize, \/\/ function to be used to memoize resultFunc\n  option1, \/\/ option1 will be passed as second argument to customMemoize\n  option2, \/\/ option2 will be passed as third argument to customMemoize\n  option3 \/\/ option3 will be passed as fourth argument to customMemoize\n)\n\nconst customSelector = customSelectorCreator(\n  input1,\n  input2,\n  resultFunc \/\/ resultFunc will be passed as first argument to customMemoize\n)\nInternally customSelector calls the memoize function as follows:\ncustomMemoize(resultFunc, option1, option2, option3)\nHere are some examples of how you might use createSelectorCreator:\nCustomize equalityCheck for defaultMemoize\nimport { createSelectorCreator, defaultMemoize } from 'reselect'\nimport isEqual from 'lodash.isequal'\n\n\/\/ create a \"selector creator\" that uses lodash.isequal instead of ===\nconst createDeepEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  isEqual\n)\n\n\/\/ use the new \"selector creator\" to create a selector\nconst mySelector = createDeepEqualSelector(\n  state => state.values.filter(val => val < 5),\n  values => values.reduce((acc, val) => acc + val, 0)\n)\nUse memoize function from lodash for an unbounded cache\nimport { createSelectorCreator } from 'reselect'\nimport memoize from 'lodash.memoize'\n\nlet called = 0\nconst hashFn = (...args) => args.reduce(\n  (acc, val) => acc + '-' + JSON.stringify(val),\n  ''\n)\nconst customSelectorCreator = createSelectorCreator(memoize, hashFn)\nconst selector = customSelectorCreator(\n  state => state.a,\n  state => state.b,\n  (a, b) => {\n    called++\n    return a + b\n  }\n)\ncreateStructuredSelector({inputSelectors}, selectorCreator = createSelector)\ncreateStructuredSelector is a convenience function for a common pattern that arises when using Reselect. The selector passed to a connect decorator often just takes the values of its input-selectors and maps them to keys in an object:\nconst mySelectorA = state => state.a\nconst mySelectorB = state => state.b\n\n\/\/ The result function in the following selector\n\/\/ is simply building an object from the input selectors\nconst structuredSelector = createSelector(\n   mySelectorA,\n   mySelectorB,\n   (a, b) => ({\n     a,\n     b\n   })\n)\ncreateStructuredSelector takes an object whose properties are input-selectors and returns a structured selector. The structured selector returns an object with the same keys as the inputSelectors argument, but with the selectors replaced with their values.\nconst mySelectorA = state => state.a\nconst mySelectorB = state => state.b\n\nconst structuredSelector = createStructuredSelector({\n  x: mySelectorA,\n  y: mySelectorB\n})\n\nconst result = structuredSelector({ a: 1, b: 2 }) \/\/ will produce { x: 1, y: 2 }\nStructured selectors can be nested:\nconst nestedSelector = createStructuredSelector({\n  subA: createStructuredSelector({\n    selectorA,\n    selectorB\n  }),\n  subB: createStructuredSelector({\n    selectorC,\n    selectorD\n  })\n})\nFAQ\nQ: Why isn\u2019t my selector recomputing when the input state changes?\nA: Check that your memoization function is compatible with your state update function (i.e. the reducer if you are using Redux). For example, a selector created with createSelector will not work with a state update function that mutates an existing object instead of creating a new one each time. createSelector uses an identity check (===) to detect that an input has changed, so mutating an existing object will not trigger the selector to recompute because mutating an object does not change its identity. Note that if you are using Redux, mutating the state object is almost certainly a mistake.\nThe following example defines a simple selector that determines if the first todo item in an array of todos has been completed:\nconst isFirstTodoCompleteSelector = createSelector(\n  state => state.todos[0],\n  todo => todo && todo.completed\n)\nThe following state update function will not work with isFirstTodoCompleteSelector:\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n  case COMPLETE_ALL:\n    const areAllMarked = state.every(todo => todo.completed)\n    \/\/ BAD: mutating an existing object\n    return state.map(todo => {\n      todo.completed = !areAllMarked\n      return todo\n    })\n\n  default:\n    return state\n  }\n}\nThe following state update function will work with isFirstTodoCompleteSelector:\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n  case COMPLETE_ALL:\n    const areAllMarked = state.every(todo => todo.completed)\n    \/\/ GOOD: returning a new object each time with Object.assign\n    return state.map(todo => Object.assign({}, todo, {\n      completed: !areAllMarked\n    }))\n\n  default:\n    return state\n  }\n}\nIf you are not using Redux and have a requirement to work with mutable data, you can use createSelectorCreator to replace the default memoization function and\/or use a different equality check function. See here and here for examples.\nQ: Why is my selector recomputing when the input state stays the same?\nA: Check that your memoization function is compatible with your state update function (i.e. the reducer if you are using Redux). For example, a selector created with createSelector that recomputes unexpectedly may be receiving a new object on each update whether the values it contains have changed or not. createSelector uses an identity check (===) to detect that an input has changed, so returning a new object on each update means that the selector will recompute on each update.\nimport { REMOVE_OLD } from '..\/constants\/ActionTypes'\n\nconst initialState = [\n  {\n    text: 'Use Redux',\n    completed: false,\n    id: 0,\n    timestamp: Date.now()\n  }\n]\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n  case REMOVE_OLD:\n    return state.filter(todo => {\n      return todo.timestamp + 30 * 24 * 60 * 60 * 1000 > Date.now()\n    })\n  default:\n    return state\n  }\n}\nThe following selector is going to recompute every time REMOVE_OLD is invoked because Array.filter always returns a new object. However, in the majority of cases the REMOVE_OLD action will not change the list of todos so the recomputation is unnecessary.\nimport { createSelector } from 'reselect'\n\nconst todosSelector = state => state.todos\n\nexport const visibleTodosSelector = createSelector(\n  todosSelector,\n  (todos) => {\n    ...\n  }\n)\nYou can eliminate unnecessary recomputations by returning a new object from the state update function only when a deep equality check has found that the list of todos has actually changed:\nimport { REMOVE_OLD } from '..\/constants\/ActionTypes'\nimport isEqual from 'lodash.isequal'\n\nconst initialState = [\n  {\n    text: 'Use Redux',\n    completed: false,\n    id: 0,\n    timestamp: Date.now()\n  }\n]\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n  case REMOVE_OLD:\n    const updatedState =  state.filter(todo => {\n      return todo.timestamp + 30 * 24 * 60 * 60 * 1000 > Date.now()\n    })\n    return isEqual(updatedState, state) ? state : updatedState\n  default:\n    return state\n  }\n}\nAlternatively, the default equalityCheck function in the selector can be replaced by a deep equality check:\nimport { createSelectorCreator, defaultMemoize } from 'reselect'\nimport isEqual from 'lodash.isequal'\n\nconst todosSelector = state => state.todos\n\n\/\/ create a \"selector creator\" that uses lodash.isequal instead of ===\nconst createDeepEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  isEqual\n)\n\n\/\/ use the new \"selector creator\" to create a selector\nconst mySelector = createDeepEqualSelector(\n  todosSelector,\n  (todos) => {\n    ...\n  }\n)\nAlways check that the cost of an alternative equalityCheck function or deep equality check in the state update function is not greater than the cost of recomputing every time. If recomputing every time does work out to be the cheaper option, it may be that for this case Reselect is not giving you any benefit over passing a plain mapStateToProps function to connect.\nQ: Can I use Reselect without Redux?\nA: Yes. Reselect has no dependencies on any other package, so although it was designed to be used with Redux it can be used independently. It is currently being used successfully in traditional Flux apps.\n\nIf you create selectors using createSelector make sure its arguments are immutable.\nSee here\n\nQ: How do I create a selector that takes an argument?\nA: Keep in mind that selectors can access React props, so if your arguments are (or can be made available as) React props, you can use that functionality. See here for details.\nOtherwise, Reselect doesn't have built-in support for creating selectors that accepts arguments, but here are some suggestions for implementing similar functionality...\nIf the argument is not dynamic you can use a factory function:\nconst expensiveItemSelectorFactory = minValue => {\n  return createSelector(\n    shopItemsSelector,\n    items => items.filter(item => item.value > minValue)\n  )\n}\n\nconst subtotalSelector = createSelector(\n  expensiveItemSelectorFactory(200),\n  items => items.reduce((acc, item) => acc + item.value, 0)\n)\nThe general consensus here and over at nuclear-js is that if a selector needs a dynamic argument, then that argument should probably be state in the store. If you decide that you do require a selector with a dynamic argument, then a selector that returns a memoized function may be suitable:\nimport { createSelector } from 'reselect'\nimport memoize from 'lodash.memoize'\n\nconst expensiveSelector = createSelector(\n  state => state.items,\n  items => memoize(\n    minValue => items.filter(item => item.value > minValue)\n  )\n)\n\nconst expensiveFilter = expensiveSelector(state)\n\nconst slightlyExpensive = expensiveFilter(100)\nconst veryExpensive = expensiveFilter(1000000)\nQ: The default memoization function is no good, can I use a different one?\nA: We think it works great for a lot of use cases, but sure. See these examples.\nQ: How do I test a selector?\nA: For a given input, a selector should always produce the same output. For this reason they are simple to unit test.\nconst selector = createSelector(\n  state => state.a,\n  state => state.b,\n  (a, b) => ({\n    c: a * 2,\n    d: b * 3\n  })\n)\n\ntest(\"selector unit test\", () => {\n  assert.deepEqual(selector({ a: 1, b: 2 }), { c: 2, d: 6 })\n  assert.deepEqual(selector({ a: 2, b: 3 }), { c: 4, d: 9 })\n})\nIt may also be useful to check that the memoization function for a selector works correctly with the state update function (i.e. the reducer if you are using Redux). Each selector has a recomputations method that will return the number of times it has been recomputed:\nsuite('selector', () => {\n  let state = { a: 1, b: 2 }\n\n  const reducer = (state, action) => (\n    {\n      a: action(state.a),\n      b: action(state.b)\n    }\n  )\n\n  const selector = createSelector(\n    state => state.a,\n    state => state.b,\n    (a, b) => ({\n      c: a * 2,\n      d: b * 3\n    })\n  )\n\n  const plusOne = x => x + 1\n  const id = x => x\n\n  test(\"selector unit test\", () => {\n    state = reducer(state, plusOne)\n    assert.deepEqual(selector(state), { c: 4, d: 9 })\n    state = reducer(state, id)\n    assert.deepEqual(selector(state), { c: 4, d: 9 })\n    assert.equal(selector.recomputations(), 1)\n    state = reducer(state, plusOne)\n    assert.deepEqual(selector(state), { c: 6, d: 12 })\n    assert.equal(selector.recomputations(), 2)\n  })\n})\nAdditionally, selectors keep a reference to the last result function as .resultFunc. If you have selectors composed of many other selectors this can help you test each selector without coupling all of your tests to the shape of your state.\nFor example if you have a set of selectors like this:\nselectors.js\nexport const firstSelector = createSelector( ... )\nexport const secondSelector = createSelector( ... )\nexport const thirdSelector = createSelector( ... )\n\nexport const myComposedSelector = createSelector(\n  firstSelector,\n  secondSelector,\n  thirdSelector,\n  (first, second, third) => first * second < third\n)\nAnd then a set of unit tests like this:\ntest\/selectors.js\n\/\/ tests for the first three selectors...\ntest(\"firstSelector unit test\", () => { ... })\ntest(\"secondSelector unit test\", () => { ... })\ntest(\"thirdSelector unit test\", () => { ... })\n\n\/\/ We have already tested the previous\n\/\/ three selector outputs so we can just call `.resultFunc`\n\/\/ with the values we want to test directly:\ntest(\"myComposedSelector unit test\", () => {\n  \/\/ here instead of calling selector()\n  \/\/ we just call selector.resultFunc()\n  assert(myComposedSelector.resultFunc(1, 2, 3), true)\n  assert(myComposedSelector.resultFunc(2, 2, 1), false)\n})\nFinally, each selector has a resetRecomputations method that sets\nrecomputations back to 0.  The intended use is for a complex selector that may\nhave many independent tests and you don't want to manually manage the\ncomputation count or create a \"dummy\" selector for each test.\nQ: How do I use Reselect with Immutable.js?\nA: Selectors created with createSelector should work just fine with Immutable.js data structures.\nIf your selector is recomputing and you don't think the state has changed, make sure you are aware of which Immutable.js update methods always return a new object and which update methods only return a new object when the collection actually changes.\nimport Immutable from 'immutable'\n\nlet myMap = Immutable.Map({\n  a: 1,\n  b: 2,\n  c: 3\n})\n\n \/\/ set, merge and others only return a new obj when update changes collection\nlet newMap = myMap.set('a', 1)\nassert.equal(myMap, newMap)\nnewMap = myMap.merge({ 'a': 1 })\nassert.equal(myMap, newMap)\n\/\/ map, reduce, filter and others always return a new obj\nnewMap = myMap.map(a => a * 1)\nassert.notEqual(myMap, newMap)\nIf a selector's input is updated by an operation that always returns a new object, it may be performing unnecessary recomputations. See here for a discussion on the pros and cons of using a deep equality check like Immutable.is to eliminate unnecessary recomputations.\nQ: Can I share a selector across multiple component instances?\nA: Selectors created using createSelector only have a cache size of one. This can make them unsuitable for sharing across multiple instances if the arguments to the selector are different for each instance of the component. There are a couple of ways to get around this:\n\n\nCreate a factory function which returns a new selector for each instance of the component. There is built-in support for factory functions in React Redux v4.3 or higher. See here for an example.\n\n\nCreate a custom selector with a cache size greater than one.\n\n\nQ: Are there TypeScript Typings?\nA: Yes! They are included and referenced in package.json. They should Just Work\u2122.\nQ: How can I make a curried selector?\nA: Try these helper functions courtesy of MattSPalmer\nRelated Projects\nre-reselect\nEnhances Reselect selectors by wrapping createSelector and returning a memoized collection of selectors indexed with the cache key returned by a custom resolver function.\nUseful to reduce selectors recalculation when the same selector is repeatedly called with one\/few different arguments.\nreselect-tools\nChrome extension and companion lib for debugging selectors.\n\nMeasure selector recomputations across the app and identify performance bottlenecks\nCheck selector dependencies, inputs, outputs, and recomputations at any time with the chrome extension\nStatically export a JSON representation of your selector graph for further analysis\n\nreselect-map\nCan be useful when doing very expensive computations on elements of a collection because Reselect might not give you the granularity of caching that you need. Check out the reselect-maps README for examples.\nThe optimizations in reselect-map only apply in a small number of cases. If you are unsure whether you need it, you don't!\nLicense\nMIT\n","110":"English \u2219 \u65e5\u672c\u8a9e \u2219 \u7b80\u4f53\u4e2d\u6587 \u2219 \u7e41\u9ad4\u4e2d\u6587 | \u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e \u2219 \u09ac\u09be\u0982\u09b2\u09be \u2219 Portugu\u00eas do Brasil \u2219 Deutsch \u2219 \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac \u2219 \u05e2\u05d1\u05e8\u05d9\u05ea \u2219 Italiano \u2219 \ud55c\uad6d\uc5b4 \u2219 \u0641\u0627\u0631\u0633\u06cc \u2219 Polski \u2219 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a \u2219 Espa\u00f1ol \u2219 \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 \u2219 T\u00fcrk\u00e7e \u2219 ti\u1ebfng Vi\u1ec7t \u2219 Fran\u00e7ais | Add Translation\nHelp translate this guide!\nThe System Design Primer\n\n\n\n\nMotivation\n\nLearn how to design large-scale systems.\nPrep for the system design interview.\n\nLearn how to design large-scale systems\nLearning how to design scalable systems will help you become a better engineer.\nSystem design is a broad topic.  There is a vast amount of resources scattered throughout the web on system design principles.\nThis repo is an organized collection of resources to help you learn how to build systems at scale.\nLearn from the open source community\nThis is a continually updated, open source project.\nContributions are welcome!\nPrep for the system design interview\nIn addition to coding interviews, system design is a required component of the technical interview process at many tech companies.\nPractice common system design interview questions and compare your results with sample solutions: discussions, code, and diagrams.\nAdditional topics for interview prep:\n\nStudy guide\nHow to approach a system design interview question\nSystem design interview questions, with solutions\nObject-oriented design interview questions, with solutions\nAdditional system design interview questions\n\nAnki flashcards\n\n\n\n\nThe provided Anki flashcard decks use spaced repetition to help you retain key system design concepts.\n\nSystem design deck\nSystem design exercises deck\nObject oriented design exercises deck\n\nGreat for use while on-the-go.\nCoding Resource: Interactive Coding Challenges\nLooking for resources to help you prep for the Coding Interview?\n\n\n\n\nCheck out the sister repo Interactive Coding Challenges, which contains an additional Anki deck:\n\nCoding deck\n\nContributing\n\nLearn from the community.\n\nFeel free to submit pull requests to help:\n\nFix errors\nImprove sections\nAdd new sections\nTranslate\n\nContent that needs some polishing is placed under development.\nReview the Contributing Guidelines.\nIndex of system design topics\n\nSummaries of various system design topics, including pros and cons.  Everything is a trade-off.\nEach section contains links to more in-depth resources.\n\n\n\n\n\n\nSystem design topics: start here\n\nStep 1: Review the scalability video lecture\nStep 2: Review the scalability article\nNext steps\n\n\nPerformance vs scalability\nLatency vs throughput\nAvailability vs consistency\n\nCAP theorem\n\nCP - consistency and partition tolerance\nAP - availability and partition tolerance\n\n\n\n\nConsistency patterns\n\nWeak consistency\nEventual consistency\nStrong consistency\n\n\nAvailability patterns\n\nFail-over\nReplication\nAvailability in numbers\n\n\nDomain name system\nContent delivery network\n\nPush CDNs\nPull CDNs\n\n\nLoad balancer\n\nActive-passive\nActive-active\nLayer 4 load balancing\nLayer 7 load balancing\nHorizontal scaling\n\n\nReverse proxy (web server)\n\nLoad balancer vs reverse proxy\n\n\nApplication layer\n\nMicroservices\nService discovery\n\n\nDatabase\n\nRelational database management system (RDBMS)\n\nMaster-slave replication\nMaster-master replication\nFederation\nSharding\nDenormalization\nSQL tuning\n\n\nNoSQL\n\nKey-value store\nDocument store\nWide column store\nGraph Database\n\n\nSQL or NoSQL\n\n\nCache\n\nClient caching\nCDN caching\nWeb server caching\nDatabase caching\nApplication caching\nCaching at the database query level\nCaching at the object level\nWhen to update the cache\n\nCache-aside\nWrite-through\nWrite-behind (write-back)\nRefresh-ahead\n\n\n\n\nAsynchronism\n\nMessage queues\nTask queues\nBack pressure\n\n\nCommunication\n\nTransmission control protocol (TCP)\nUser datagram protocol (UDP)\nRemote procedure call (RPC)\nRepresentational state transfer (REST)\n\n\nSecurity\nAppendix\n\nPowers of two table\nLatency numbers every programmer should know\nAdditional system design interview questions\nReal world architectures\nCompany architectures\nCompany engineering blogs\n\n\nUnder development\nCredits\nContact info\nLicense\n\nStudy guide\n\nSuggested topics to review based on your interview timeline (short, medium, long).\n\n\nQ: For interviews, do I need to know everything here?\nA: No, you don't need to know everything here to prepare for the interview.\nWhat you are asked in an interview depends on variables such as:\n\nHow much experience you have\nWhat your technical background is\nWhat positions you are interviewing for\nWhich companies you are interviewing with\nLuck\n\nMore experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.\nStart broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.\n\nShort timeline - Aim for breadth with system design topics.  Practice by solving some interview questions.\nMedium timeline - Aim for breadth and some depth with system design topics.  Practice by solving many interview questions.\nLong timeline - Aim for breadth and more depth with system design topics.  Practice by solving most interview questions.\n\n\n\n\n\nShort\nMedium\nLong\n\n\n\n\nRead through the System design topics to get a broad understanding of how systems work\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nRead through a few articles in the Company engineering blogs for the companies you are interviewing with\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nRead through a few Real world architectures\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nReview How to approach a system design interview question\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nWork through System design interview questions with solutions\nSome\nMany\nMost\n\n\nWork through Object-oriented design interview questions with solutions\nSome\nMany\nMost\n\n\nReview Additional system design interview questions\nSome\nMany\nMost\n\n\n\nHow to approach a system design interview question\n\nHow to tackle a system design interview question.\n\nThe system design interview is an open-ended conversation.  You are expected to lead it.\nYou can use the following steps to guide the discussion.  To help solidify this process, work through the System design interview questions with solutions section using the following steps.\nStep 1: Outline use cases, constraints, and assumptions\nGather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.\n\nWho is going to use it?\nHow are they going to use it?\nHow many users are there?\nWhat does the system do?\nWhat are the inputs and outputs of the system?\nHow much data do we expect to handle?\nHow many requests per second do we expect?\nWhat is the expected read to write ratio?\n\nStep 2: Create a high level design\nOutline a high level design with all important components.\n\nSketch the main components and connections\nJustify your ideas\n\nStep 3: Design core components\nDive into details for each core component.  For example, if you were asked to design a url shortening service, discuss:\n\nGenerating and storing a hash of the full url\n\nMD5 and Base62\nHash collisions\nSQL or NoSQL\nDatabase schema\n\n\nTranslating a hashed url to the full url\n\nDatabase lookup\n\n\nAPI and object-oriented design\n\nStep 4: Scale the design\nIdentify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?\n\nLoad balancer\nHorizontal scaling\nCaching\nDatabase sharding\n\nDiscuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using principles of scalable system design.\nBack-of-the-envelope calculations\nYou might be asked to do some estimates by hand.  Refer to the Appendix for the following resources:\n\nUse back of the envelope calculations\nPowers of two table\nLatency numbers every programmer should know\n\nSource(s) and further reading\nCheck out the following links to get a better idea of what to expect:\n\nHow to ace a systems design interview\nThe system design interview\nIntro to Architecture and Systems Design Interviews\nSystem design template\n\nSystem design interview questions with solutions\n\nCommon system design interview questions with sample discussions, code, and diagrams.\nSolutions linked to content in the solutions\/ folder.\n\n\n\n\nQuestion\n\n\n\n\n\nDesign Pastebin.com (or Bit.ly)\nSolution\n\n\nDesign the Twitter timeline and search (or Facebook feed and search)\nSolution\n\n\nDesign a web crawler\nSolution\n\n\nDesign Mint.com\nSolution\n\n\nDesign the data structures for a social network\nSolution\n\n\nDesign a key-value store for a search engine\nSolution\n\n\nDesign Amazon's sales ranking by category feature\nSolution\n\n\nDesign a system that scales to millions of users on AWS\nSolution\n\n\nAdd a system design question\nContribute\n\n\n\nDesign Pastebin.com (or Bit.ly)\nView exercise and solution\n\nDesign the Twitter timeline and search (or Facebook feed and search)\nView exercise and solution\n\nDesign a web crawler\nView exercise and solution\n\nDesign Mint.com\nView exercise and solution\n\nDesign the data structures for a social network\nView exercise and solution\n\nDesign a key-value store for a search engine\nView exercise and solution\n\nDesign Amazon's sales ranking by category feature\nView exercise and solution\n\nDesign a system that scales to millions of users on AWS\nView exercise and solution\n\nObject-oriented design interview questions with solutions\n\nCommon object-oriented design interview questions with sample discussions, code, and diagrams.\nSolutions linked to content in the solutions\/ folder.\n\n\nNote: This section is under development\n\n\n\n\nQuestion\n\n\n\n\n\nDesign a hash map\nSolution\n\n\nDesign a least recently used cache\nSolution\n\n\nDesign a call center\nSolution\n\n\nDesign a deck of cards\nSolution\n\n\nDesign a parking lot\nSolution\n\n\nDesign a chat server\nSolution\n\n\nDesign a circular array\nContribute\n\n\nAdd an object-oriented design question\nContribute\n\n\n\nSystem design topics: start here\nNew to system design?\nFirst, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.\nStep 1: Review the scalability video lecture\nScalability Lecture at Harvard\n\nTopics covered:\n\nVertical scaling\nHorizontal scaling\nCaching\nLoad balancing\nDatabase replication\nDatabase partitioning\n\n\n\nStep 2: Review the scalability article\nScalability\n\nTopics covered:\n\nClones\nDatabases\nCaches\nAsynchronism\n\n\n\nNext steps\nNext, we'll look at high-level trade-offs:\n\nPerformance vs scalability\nLatency vs throughput\nAvailability vs consistency\n\nKeep in mind that everything is a trade-off.\nThen we'll dive into more specific topics such as DNS, CDNs, and load balancers.\nPerformance vs scalability\nA service is scalable if it results in increased performance in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.1\nAnother way to look at performance vs scalability:\n\nIf you have a performance problem, your system is slow for a single user.\nIf you have a scalability problem, your system is fast for a single user but slow under heavy load.\n\nSource(s) and further reading\n\nA word on scalability\nScalability, availability, stability, patterns\n\nLatency vs throughput\nLatency is the time to perform some action or to produce some result.\nThroughput is the number of such actions or results per unit of time.\nGenerally, you should aim for maximal throughput with acceptable latency.\nSource(s) and further reading\n\nUnderstanding latency vs throughput\n\nAvailability vs consistency\nCAP theorem\n\n\n\nSource: CAP theorem revisited\n\nIn a distributed computer system, you can only support two of the following guarantees:\n\nConsistency - Every read receives the most recent write or an error\nAvailability - Every request receives a response, without guarantee that it contains the most recent version of the information\nPartition Tolerance - The system continues to operate despite arbitrary partitioning due to network failures\n\nNetworks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.\nCP - consistency and partition tolerance\nWaiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.\nAP - availability and partition tolerance\nResponses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.\nAP is a good choice if the business needs allow for eventual consistency or when the system needs to continue working despite external errors.\nSource(s) and further reading\n\nCAP theorem revisited\nA plain english introduction to CAP theorem\nCAP FAQ\nThe CAP theorem\n\nConsistency patterns\nWith multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the CAP theorem - Every read receives the most recent write or an error.\nWeak consistency\nAfter a write, reads may or may not see it.  A best effort approach is taken.\nThis approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.\nEventual consistency\nAfter a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.\nThis approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.\nStrong consistency\nAfter a write, reads will see it.  Data is replicated synchronously.\nThis approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.\nSource(s) and further reading\n\nTransactions across data centers\n\nAvailability patterns\nThere are two complementary patterns to support high availability: fail-over and replication.\nFail-over\nActive-passive\nWith active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.\nThe length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.\nActive-passive failover can also be referred to as master-slave failover.\nActive-active\nIn active-active, both servers are managing traffic, spreading the load between them.\nIf the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.\nActive-active failover can also be referred to as master-master failover.\nDisadvantage(s): failover\n\nFail-over adds more hardware and additional complexity.\nThere is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.\n\nReplication\nMaster-slave and master-master\nThis topic is further discussed in the Database section:\n\nMaster-slave replication\nMaster-master replication\n\nAvailability in numbers\nAvailability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.\n99.9% availability - three 9s\n\n\n\nDuration\nAcceptable downtime\n\n\n\n\nDowntime per year\n8h 45min 57s\n\n\nDowntime per month\n43m 49.7s\n\n\nDowntime per week\n10m 4.8s\n\n\nDowntime per day\n1m 26.4s\n\n\n\n99.99% availability - four 9s\n\n\n\nDuration\nAcceptable downtime\n\n\n\n\nDowntime per year\n52min 35.7s\n\n\nDowntime per month\n4m 23s\n\n\nDowntime per week\n1m 5s\n\n\nDowntime per day\n8.6s\n\n\n\nAvailability in parallel vs in sequence\nIf a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.\nIn sequence\nOverall availability decreases when two components with availability < 100% are in sequence:\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n\nIf both Foo and Bar each had 99.9% availability, their total availability in sequence would be 99.8%.\nIn parallel\nOverall availability increases when two components with availability < 100% are in parallel:\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n\nIf both Foo and Bar each had 99.9% availability, their total availability in parallel would be 99.9999%.\nDomain name system\n\n\n\nSource: DNS security presentation\n\nA Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\nDNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the time to live (TTL).\n\nNS record (name server) - Specifies the DNS servers for your domain\/subdomain.\nMX record (mail exchange) - Specifies the mail servers for accepting messages.\nA record (address) - Points a name to an IP address.\nCNAME (canonical) - Points a name to another name or CNAME (example.com to www.example.com) or to an A record.\n\nServices such as CloudFlare and Route 53 provide managed DNS services.  Some DNS services can route traffic through various methods:\n\nWeighted round robin\n\nPrevent traffic from going to servers under maintenance\nBalance between varying cluster sizes\nA\/B testing\n\n\nLatency-based\nGeolocation-based\n\nDisadvantage(s): DNS\n\nAccessing a DNS server introduces a slight delay, although mitigated by caching described above.\nDNS server management could be complex and is generally managed by governments, ISPs, and large companies.\nDNS services have recently come under DDoS attack, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).\n\nSource(s) and further reading\n\nDNS architecture\nWikipedia\nDNS articles\n\nContent delivery network\n\n\n\nSource: Why use a CDN\n\nA content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML\/CSS\/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.\nServing content from CDNs can significantly improve performance in two ways:\n\nUsers receive content from data centers close to them\nYour servers do not have to serve requests that the CDN fulfills\n\nPush CDNs\nPush CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.\nSites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.\nPull CDNs\nPull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.\nA time-to-live (TTL) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.\nSites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.\nDisadvantage(s): CDN\n\nCDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.\nContent might be stale if it is updated before the TTL expires it.\nCDNs require changing URLs for static content to point to the CDN.\n\nSource(s) and further reading\n\nGlobally distributed content delivery\nThe differences between push and pull CDNs\nWikipedia\n\nLoad balancer\n\n\n\nSource: Scalable system design patterns\n\nLoad balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:\n\nPreventing requests from going to unhealthy servers\nPreventing overloading resources\nHelping to eliminate a single point of failure\n\nLoad balancers can be implemented with hardware (expensive) or with software such as HAProxy.\nAdditional benefits include:\n\nSSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n\nRemoves the need to install X.509 certificates on each server\n\n\nSession persistence - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions\n\nTo protect against failures, it's common to set up multiple load balancers, either in active-passive or active-active mode.\nLoad balancers can route traffic based on various metrics, including:\n\nRandom\nLeast loaded\nSession\/cookies\nRound robin or weighted round robin\nLayer 4\nLayer 7\n\nLayer 4 load balancing\nLayer 4 load balancers look at info at the transport layer to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing Network Address Translation (NAT).\nLayer 7 load balancing\nLayer 7 load balancers look at the application layer to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.\nAt the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.\nHorizontal scaling\nLoad balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called Vertical Scaling.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.\nDisadvantage(s): horizontal scaling\n\nScaling horizontally introduces complexity and involves cloning servers\n\nServers should be stateless: they should not contain any user-related data like sessions or profile pictures\nSessions can be stored in a centralized data store such as a database (SQL, NoSQL) or a persistent cache (Redis, Memcached)\n\n\nDownstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out\n\nDisadvantage(s): load balancer\n\nThe load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.\nIntroducing a load balancer to help eliminate a single point of failure results in increased complexity.\nA single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.\n\nSource(s) and further reading\n\nNGINX architecture\nHAProxy architecture guide\nScalability\nWikipedia\nLayer 4 load balancing\nLayer 7 load balancing\nELB listener config\n\nReverse proxy (web server)\n\n\n\nSource: Wikipedia\n\n\nA reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\nAdditional benefits include:\n\nIncreased security - Hide information about backend servers, blacklist IPs, limit number of connections per client\nIncreased scalability and flexibility - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration\nSSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n\nRemoves the need to install X.509 certificates on each server\n\n\nCompression - Compress server responses\nCaching - Return the response for cached requests\nStatic content - Serve static content directly\n\nHTML\/CSS\/JS\nPhotos\nVideos\nEtc\n\n\n\nLoad balancer vs reverse proxy\n\nDeploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.\nReverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.\nSolutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.\n\nDisadvantage(s): reverse proxy\n\nIntroducing a reverse proxy results in increased complexity.\nA single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a failover) further increases complexity.\n\nSource(s) and further reading\n\nReverse proxy vs load balancer\nNGINX architecture\nHAProxy architecture guide\nWikipedia\n\nApplication layer\n\n\n\nSource: Intro to architecting systems for scale\n\nSeparating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The single responsibility principle advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.\nWorkers in the application layer also help enable asynchronism.\nMicroservices\nRelated to this discussion are microservices, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. 1\nPinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.\nService Discovery\nSystems such as Consul, Etcd, and Zookeeper can help services find each other by keeping track of registered names, addresses, and ports.  Health checks help verify service integrity and are often done using an HTTP endpoint.  Both Consul and Etcd have a built in key-value store that can be useful for storing config values and other shared data.\nDisadvantage(s): application layer\n\nAdding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).\nMicroservices can add complexity in terms of deployments and operations.\n\nSource(s) and further reading\n\nIntro to architecting systems for scale\nCrack the system design interview\nService oriented architecture\nIntroduction to Zookeeper\nHere's what you need to know about building microservices\n\nDatabase\n\n\n\nSource: Scaling up to your first 10 million users\n\nRelational database management system (RDBMS)\nA relational database like SQL is a collection of data items organized in tables.\nACID is a set of properties of relational database transactions.\n\nAtomicity - Each transaction is all or nothing\nConsistency - Any transaction will bring the database from one valid state to another\nIsolation - Executing transactions concurrently has the same results as if the transactions were executed serially\nDurability - Once a transaction has been committed, it will remain so\n\nThere are many techniques to scale a relational database: master-slave replication, master-master replication, federation, sharding, denormalization, and SQL tuning.\nMaster-slave replication\nThe master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.\n\n\n\nSource: Scalability, availability, stability, patterns\n\nDisadvantage(s): master-slave replication\n\nAdditional logic is needed to promote a slave to a master.\nSee Disadvantage(s): replication for points related to both master-slave and master-master.\n\nMaster-master replication\nBoth masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.\n\n\n\nSource: Scalability, availability, stability, patterns\n\nDisadvantage(s): master-master replication\n\nYou'll need a load balancer or you'll need to make changes to your application logic to determine where to write.\nMost master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.\nConflict resolution comes more into play as more write nodes are added and as latency increases.\nSee Disadvantage(s): replication for points related to both master-slave and master-master.\n\nDisadvantage(s): replication\n\nThere is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.\nWrites are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.\nThe more read slaves, the more you have to replicate, which leads to greater replication lag.\nOn some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.\nReplication adds more hardware and additional complexity.\n\nSource(s) and further reading: replication\n\nScalability, availability, stability, patterns\nMulti-master replication\n\nFederation\n\n\n\nSource: Scaling up to your first 10 million users\n\nFederation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: forums, users, and products, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.\nDisadvantage(s): federation\n\nFederation is not effective if your schema requires huge functions or tables.\nYou'll need to update your application logic to determine which database to read and write.\nJoining data from two databases is more complex with a server link.\nFederation adds more hardware and additional complexity.\n\nSource(s) and further reading: federation\n\nScaling up to your first 10 million users\n\nSharding\n\n\n\nSource: Scalability, availability, stability, patterns\n\nSharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.\nSimilar to the advantages of federation, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.\nCommon ways to shard a table of users is either through the user's last name initial or the user's geographic location.\nDisadvantage(s): sharding\n\nYou'll need to update your application logic to work with shards, which could result in complex SQL queries.\nData distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.\n\nRebalancing adds additional complexity.  A sharding function based on consistent hashing can reduce the amount of transferred data.\n\n\nJoining data from multiple shards is more complex.\nSharding adds more hardware and additional complexity.\n\nSource(s) and further reading: sharding\n\nThe coming of the shard\nShard database architecture\nConsistent hashing\n\nDenormalization\nDenormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as PostgreSQL and Oracle support materialized views which handle the work of storing redundant information and keeping redundant copies consistent.\nOnce data becomes distributed with techniques such as federation and sharding, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.\nIn most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.\nDisadvantage(s): denormalization\n\nData is duplicated.\nConstraints can help redundant copies of information stay in sync, which increases complexity of the database design.\nA denormalized database under heavy write load might perform worse than its normalized counterpart.\n\nSource(s) and further reading: denormalization\n\nDenormalization\n\nSQL tuning\nSQL tuning is a broad topic and many books have been written as reference.\nIt's important to benchmark and profile to simulate and uncover bottlenecks.\n\nBenchmark - Simulate high-load situations with tools such as ab.\nProfile - Enable tools such as the slow query log to help track performance issues.\n\nBenchmarking and profiling might point you to the following optimizations.\nTighten up the schema\n\nMySQL dumps to disk in contiguous blocks for fast access.\nUse CHAR instead of VARCHAR for fixed-length fields.\n\nCHAR effectively allows for fast, random access, whereas with VARCHAR, you must find the end of a string before moving onto the next one.\n\n\nUse TEXT for large blocks of text such as blog posts.  TEXT also allows for boolean searches.  Using a TEXT field results in storing a pointer on disk that is used to locate the text block.\nUse INT for larger numbers up to 2^32 or 4 billion.\nUse DECIMAL for currency to avoid floating point representation errors.\nAvoid storing large BLOBS, store the location of where to get the object instead.\nVARCHAR(255) is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.\nSet the NOT NULL constraint where applicable to improve search performance.\n\nUse good indices\n\nColumns that you are querying (SELECT, GROUP BY, ORDER BY, JOIN) could be faster with indices.\nIndices are usually represented as self-balancing B-tree that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.\nPlacing an index can keep the data in memory, requiring more space.\nWrites could also be slower since the index also needs to be updated.\nWhen loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.\n\nAvoid expensive joins\n\nDenormalize where performance demands it.\n\nPartition tables\n\nBreak up a table by putting hot spots in a separate table to help keep it in memory.\n\nTune the query cache\n\nIn some cases, the query cache could lead to performance issues.\n\nSource(s) and further reading: SQL tuning\n\nTips for optimizing MySQL queries\nIs there a good reason i see VARCHAR(255) used so often?\nHow do null values affect performance?\nSlow query log\n\nNoSQL\nNoSQL is a collection of data items represented in a key-value store, document store, wide column store, or a graph database.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor eventual consistency.\nBASE is often used to describe the properties of NoSQL databases.  In comparison with the CAP Theorem, BASE chooses availability over consistency.\n\nBasically available - the system guarantees availability.\nSoft state - the state of the system may change over time, even without input.\nEventual consistency - the system will become consistent over a period of time, given that the system doesn't receive input during that period.\n\nIn addition to choosing between SQL or NoSQL, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review key-value stores, document stores, wide column stores, and graph databases in the next section.\nKey-value store\n\nAbstraction: hash table\n\nA key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in lexicographic order, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.\nKey-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.\nA key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.\nSource(s) and further reading: key-value store\n\nKey-value database\nDisadvantages of key-value stores\nRedis architecture\nMemcached architecture\n\nDocument store\n\nAbstraction: key-value store with documents stored as values\n\nA document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.\nBased on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.\nSome document stores like MongoDB and CouchDB also provide a SQL-like language to perform complex queries.  DynamoDB supports both key-values and documents.\nDocument stores provide high flexibility and are often used for working with occasionally changing data.\nSource(s) and further reading: document store\n\nDocument-oriented database\nMongoDB architecture\nCouchDB architecture\nElasticsearch architecture\n\nWide column store\n\n\n\nSource: SQL & NoSQL, a brief history\n\n\nAbstraction: nested map ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>\n\nA wide column store's basic unit of data is a column (name\/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.\nGoogle introduced Bigtable as the first wide column store, which influenced the open-source HBase often-used in the Hadoop ecosystem, and Cassandra from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.\nWide column stores offer high availability and high scalability.  They are often used for very large data sets.\nSource(s) and further reading: wide column store\n\nSQL & NoSQL, a brief history\nBigtable architecture\nHBase architecture\nCassandra architecture\n\nGraph database\n\n\n\nSource: Graph database\n\n\nAbstraction: graph\n\nIn a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.\nGraphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with REST APIs.\nSource(s) and further reading: graph\n\nGraph database\nNeo4j\nFlockDB\n\nSource(s) and further reading: NoSQL\n\nExplanation of base terminology\nNoSQL databases a survey and decision guidance\nScalability\nIntroduction to NoSQL\nNoSQL patterns\n\nSQL or NoSQL\n\n\n\nSource: Transitioning from RDBMS to NoSQL\n\nReasons for SQL:\n\nStructured data\nStrict schema\nRelational data\nNeed for complex joins\nTransactions\nClear patterns for scaling\nMore established: developers, community, code, tools, etc\nLookups by index are very fast\n\nReasons for NoSQL:\n\nSemi-structured data\nDynamic or flexible schema\nNon-relational data\nNo need for complex joins\nStore many TB (or PB) of data\nVery data intensive workload\nVery high throughput for IOPS\n\nSample data well-suited for NoSQL:\n\nRapid ingest of clickstream and log data\nLeaderboard or scoring data\nTemporary data, such as a shopping cart\nFrequently accessed ('hot') tables\nMetadata\/lookup tables\n\nSource(s) and further reading: SQL or NoSQL\n\nScaling up to your first 10 million users\nSQL vs NoSQL differences\n\nCache\n\n\n\nSource: Scalable system design patterns\n\nCaching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.\nDatabases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.\nClient caching\nCaches can be located on the client side (OS or browser), server side, or in a distinct cache layer.\nCDN caching\nCDNs are considered a type of cache.\nWeb server caching\nReverse proxies and caches such as Varnish can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.\nDatabase caching\nYour database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.\nApplication caching\nIn-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so cache invalidation algorithms such as least recently used (LRU) can help invalidate 'cold' entries and keep 'hot' data in RAM.\nRedis has the following additional features:\n\nPersistence option\nBuilt-in data structures such as sorted sets and lists\n\nThere are multiple levels you can cache that fall into two general categories: database queries and objects:\n\nRow level\nQuery-level\nFully-formed serializable objects\nFully-rendered HTML\n\nGenerally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.\nCaching at the database query level\nWhenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:\n\nHard to delete a cached result with complex queries\nIf one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell\n\nCaching at the object level\nSee your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):\n\nRemove the object from cache if its underlying data has changed\nAllows for asynchronous processing: workers assemble objects by consuming the latest cached object\n\nSuggestions of what to cache:\n\nUser sessions\nFully rendered web pages\nActivity streams\nUser graph data\n\nWhen to update the cache\nSince you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.\nCache-aside\n\n\n\nSource: From cache to in-memory data grid\n\nThe application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:\n\nLook for entry in cache, resulting in a cache miss\nLoad entry from the database\nAdd entry to cache\nReturn entry\n\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\nMemcached is generally used in this manner.\nSubsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.\nDisadvantage(s): cache-aside\n\nEach cache miss results in three trips, which can cause a noticeable delay.\nData can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.\nWhen a node fails, it is replaced by a new, empty node, increasing latency.\n\nWrite-through\n\n\n\nSource: Scalability, availability, stability, patterns\n\nThe application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:\n\nApplication adds\/updates entry in cache\nCache synchronously writes entry to data store\nReturn\n\nApplication code:\nset_user(12345, {\"foo\":\"bar\"})\nCache code:\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\nWrite-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.\nDisadvantage(s): write through\n\nWhen a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.\nMost data written might never be read, which can be minimized with a TTL.\n\nWrite-behind (write-back)\n\n\n\nSource: Scalability, availability, stability, patterns\n\nIn write-behind, the application does the following:\n\nAdd\/update entry in cache\nAsynchronously write entry to the data store, improving write performance\n\nDisadvantage(s): write-behind\n\nThere could be data loss if the cache goes down prior to its contents hitting the data store.\nIt is more complex to implement write-behind than it is to implement cache-aside or write-through.\n\nRefresh-ahead\n\n\n\nSource: From cache to in-memory data grid\n\nYou can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.\nRefresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.\nDisadvantage(s): refresh-ahead\n\nNot accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.\n\nDisadvantage(s): cache\n\nNeed to maintain consistency between caches and the source of truth such as the database through cache invalidation.\nCache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.\nNeed to make application changes such as adding Redis or memcached.\n\nSource(s) and further reading\n\nFrom cache to in-memory data grid\nScalable system design patterns\nIntroduction to architecting systems for scale\nScalability, availability, stability, patterns\nScalability\nAWS ElastiCache strategies\nWikipedia\n\nAsynchronism\n\n\n\nSource: Intro to architecting systems for scale\n\nAsynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\nMessage queues\nMessage queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:\n\nAn application publishes a job to the queue, then notifies the user of job status\nA worker picks up the job from the queue, processes it, then signals the job is complete\n\nThe user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.\nRedis is useful as a simple message broker but messages can be lost.\nRabbitMQ is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.\nAmazon SQS is hosted but can have high latency and has the possibility of messages being delivered twice.\nTask queues\nTasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.\nCelery has support for scheduling and primarily has python support.\nBack pressure\nIf queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  Back pressure can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with exponential backoff.\nDisadvantage(s): asynchronism\n\nUse cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.\n\nSource(s) and further reading\n\nIt's all a numbers game\nApplying back pressure when overloaded\nLittle's law\nWhat is the difference between a message queue and a task queue?\n\nCommunication\n\n\n\nSource: OSI 7 layer model\n\nHypertext transfer protocol (HTTP)\nHTTP is a method for encoding and transporting data between a client and a server.  It is a request\/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.\nA basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:\n\n\n\nVerb\nDescription\nIdempotent*\nSafe\nCacheable\n\n\n\n\nGET\nReads a resource\nYes\nYes\nYes\n\n\nPOST\nCreates a resource or trigger a process that handles data\nNo\nNo\nYes if response contains freshness info\n\n\nPUT\nCreates or replace a resource\nYes\nNo\nNo\n\n\nPATCH\nPartially updates a resource\nNo\nNo\nYes if response contains freshness info\n\n\nDELETE\nDeletes a resource\nYes\nNo\nNo\n\n\n\n*Can be called many times without different outcomes.\nHTTP is an application layer protocol relying on lower-level protocols such as TCP and UDP.\nSource(s) and further reading: HTTP\n\nWhat is HTTP?\nDifference between HTTP and TCP\nDifference between PUT and PATCH\n\nTransmission control protocol (TCP)\n\n\n\nSource: How to make a multiplayer game\n\nTCP is a connection-oriented protocol over an IP network.  Connection is established and terminated using a handshake.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:\n\nSequence numbers and checksum fields for each packet\nAcknowledgement packets and automatic retransmission\n\nIf the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements flow control and congestion control.  These guarantees cause delays and generally result in less efficient transmission than UDP.\nTo ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a memcached server.  Connection pooling can help in addition to switching to UDP where applicable.\nTCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.\nUse TCP over UDP when:\n\nYou need all of the data to arrive intact\nYou want to automatically make a best estimate use of the network throughput\n\nUser datagram protocol (UDP)\n\n\n\nSource: How to make a multiplayer game\n\nUDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.\nUDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with DHCP because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.\nUDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.\nUse UDP over TCP when:\n\nYou need the lowest latency\nLate data is worse than loss of data\nYou want to implement your own error correction\n\nSource(s) and further reading: TCP and UDP\n\nNetworking for game programming\nKey differences between TCP and UDP protocols\nDifference between TCP and UDP\nTransmission control protocol\nUser datagram protocol\nScaling memcache at Facebook\n\nRemote procedure call (RPC)\n\n\n\nSource: Crack the system design interview\n\nIn an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include Protobuf, Thrift, and Avro.\nRPC is a request-response protocol:\n\nClient program - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.\nClient stub procedure - Marshals (packs) procedure id and arguments into a request message.\nClient communication module - OS sends the message from the client to the server.\nServer communication module - OS passes the incoming packets to the server stub procedure.\nServer stub procedure -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.\nThe server response repeats the steps above in reverse order.\n\nSample RPC calls:\nGET \/someoperation?data=anId\n\nPOST \/anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n\nRPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.\nChoose a native library (aka SDK) when:\n\nYou know your target platform.\nYou want to control how your \"logic\" is accessed.\nYou want to control how error control happens off your library.\nPerformance and end user experience is your primary concern.\n\nHTTP APIs following REST tend to be used more often for public APIs.\nDisadvantage(s): RPC\n\nRPC clients become tightly coupled to the service implementation.\nA new API must be defined for every new operation or use case.\nIt can be difficult to debug RPC.\nYou might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure RPC calls are properly cached on caching servers such as Squid.\n\nRepresentational state transfer (REST)\nREST is an architectural style enforcing a client\/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.\nThere are four qualities of a RESTful interface:\n\nIdentify resources (URI in HTTP) - use the same URI regardless of any operation.\nChange with representations (Verbs in HTTP) - use verbs, headers, and body.\nSelf-descriptive error message (status response in HTTP) - Use status codes, don't reinvent the wheel.\nHATEOAS (HTML interface for HTTP) - your web service should be fully accessible in a browser.\n\nSample REST calls:\nGET \/someresources\/anId\n\nPUT \/someresources\/anId\n{\"anotherdata\": \"another value\"}\n\nREST is focused on exposing data.  It minimizes the coupling between client\/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, representation through headers, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.\nDisadvantage(s): REST\n\nWith REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.\nREST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.\nFetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\nOver time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.\n\nRPC and REST calls comparison\n\n\n\nOperation\nRPC\nREST\n\n\n\n\nSignup\nPOST \/signup\nPOST \/persons\n\n\nResign\nPOST \/resign{\"personid\": \"1234\"}\nDELETE \/persons\/1234\n\n\nRead a person\nGET \/readPerson?personid=1234\nGET \/persons\/1234\n\n\nRead a person\u2019s items list\nGET \/readUsersItemsList?personid=1234\nGET \/persons\/1234\/items\n\n\nAdd an item to a person\u2019s items\nPOST \/addItemToUsersItemsList{\"personid\": \"1234\";\"itemid\": \"456\"}\nPOST \/persons\/1234\/items{\"itemid\": \"456\"}\n\n\nUpdate an item\nPOST \/modifyItem{\"itemid\": \"456\";\"key\": \"value\"}\nPUT \/items\/456{\"key\": \"value\"}\n\n\nDelete an item\nPOST \/removeItem{\"itemid\": \"456\"}\nDELETE \/items\/456\n\n\n\n\nSource: Do you really know why you prefer REST over RPC\n\nSource(s) and further reading: REST and RPC\n\nDo you really know why you prefer REST over RPC\nWhen are RPC-ish approaches more appropriate than REST?\nREST vs JSON-RPC\nDebunking the myths of RPC and REST\nWhat are the drawbacks of using REST\nCrack the system design interview\nThrift\nWhy REST for internal use and not RPC\n\nSecurity\nThis section could use some updates.  Consider contributing!\nSecurity is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:\n\nEncrypt in transit and at rest.\nSanitize all user inputs or any input parameters exposed to user to prevent XSS and SQL injection.\nUse parameterized queries to prevent SQL injection.\nUse the principle of least privilege.\n\nSource(s) and further reading\n\nAPI security checklist\nSecurity guide for developers\nOWASP top ten\n\nAppendix\nYou'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The Powers of two table and Latency numbers every programmer should know are handy references.\nPowers of two table\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n\nSource(s) and further reading\n\nPowers of two\n\nLatency numbers every programmer should know\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock\/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB\/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB\/sec SSD, 4X memory\nHDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n\nHandy metrics based on numbers above:\n\nRead sequentially from HDD at 30 MB\/s\nRead sequentially from 1 Gbps Ethernet at 100 MB\/s\nRead sequentially from SSD at 1 GB\/s\nRead sequentially from main memory at 4 GB\/s\n6-7 world-wide round trips per second\n2,000 round trips per second within a data center\n\nLatency numbers visualized\n\nSource(s) and further reading\n\nLatency numbers every programmer should know - 1\nLatency numbers every programmer should know - 2\nDesigns, lessons, and advice from building large distributed systems\nSoftware Engineering Advice from Building Large-Scale Distributed Systems\n\nAdditional system design interview questions\n\nCommon system design interview questions, with links to resources on how to solve each.\n\n\n\n\nQuestion\nReference(s)\n\n\n\n\nDesign a file sync service like Dropbox\nyoutube.com\n\n\nDesign a search engine like Google\nqueue.acm.orgstackexchange.comardendertat.comstanford.edu\n\n\nDesign a scalable web crawler like Google\nquora.com\n\n\nDesign Google docs\ncode.google.comneil.fraser.name\n\n\nDesign a key-value store like Redis\nslideshare.net\n\n\nDesign a cache system like Memcached\nslideshare.net\n\n\nDesign a recommendation system like Amazon's\nhulu.comijcai13.org\n\n\nDesign a tinyurl system like Bitly\nn00tc0d3r.blogspot.com\n\n\nDesign a chat app like WhatsApp\nhighscalability.com\n\n\nDesign a picture sharing system like Instagram\nhighscalability.comhighscalability.com\n\n\nDesign the Facebook news feed function\nquora.comquora.comslideshare.net\n\n\nDesign the Facebook timeline function\nfacebook.comhighscalability.com\n\n\nDesign the Facebook chat function\nerlang-factory.comfacebook.com\n\n\nDesign a graph search function like Facebook's\nfacebook.comfacebook.comfacebook.com\n\n\nDesign a content delivery network like CloudFlare\nfigshare.com\n\n\nDesign a trending topic system like Twitter's\nmichael-noll.comsnikolov .wordpress.com\n\n\nDesign a random ID generation system\nblog.twitter.comgithub.com\n\n\nReturn the top k requests during a time interval\ncs.ucsb.eduwpi.edu\n\n\nDesign a system that serves data from multiple data centers\nhighscalability.com\n\n\nDesign an online multiplayer card game\nindieflashblog.combuildnewgames.com\n\n\nDesign a garbage collection system\nstuffwithstuff.comwashington.edu\n\n\nDesign an API rate limiter\nhttps:\/\/stripe.com\/blog\/\n\n\nDesign a Stock Exchange (like NASDAQ or Binance)\nJane StreetGolang ImplementationGo Implemenation\n\n\nAdd a system design question\nContribute\n\n\n\nReal world architectures\n\nArticles on how real world systems are designed.\n\n\n\n\nSource: Twitter timelines at scale\n\nDon't focus on nitty gritty details for the following articles, instead:\n\nIdentify shared principles, common technologies, and patterns within these articles\nStudy what problems are solved by each component, where it works, where it doesn't\nReview the lessons learned\n\n\n\n\nType\nSystem\nReference(s)\n\n\n\n\nData processing\nMapReduce - Distributed data processing from Google\nresearch.google.com\n\n\nData processing\nSpark - Distributed data processing from Databricks\nslideshare.net\n\n\nData processing\nStorm - Distributed data processing from Twitter\nslideshare.net\n\n\n\n\n\n\n\nData store\nBigtable - Distributed column-oriented database from Google\nharvard.edu\n\n\nData store\nHBase - Open source implementation of Bigtable\nslideshare.net\n\n\nData store\nCassandra - Distributed column-oriented database from Facebook\nslideshare.net\n\n\nData store\nDynamoDB - Document-oriented database from Amazon\nharvard.edu\n\n\nData store\nMongoDB - Document-oriented database\nslideshare.net\n\n\nData store\nSpanner - Globally-distributed database from Google\nresearch.google.com\n\n\nData store\nMemcached - Distributed memory caching system\nslideshare.net\n\n\nData store\nRedis - Distributed memory caching system with persistence and value types\nslideshare.net\n\n\n\n\n\n\n\nFile system\nGoogle File System (GFS) - Distributed file system\nresearch.google.com\n\n\nFile system\nHadoop File System (HDFS) - Open source implementation of GFS\napache.org\n\n\n\n\n\n\n\nMisc\nChubby - Lock service for loosely-coupled distributed systems from Google\nresearch.google.com\n\n\nMisc\nDapper - Distributed systems tracing infrastructure\nresearch.google.com\n\n\nMisc\nKafka - Pub\/sub message queue from LinkedIn\nslideshare.net\n\n\nMisc\nZookeeper - Centralized infrastructure and services enabling synchronization\nslideshare.net\n\n\n\nAdd an architecture\nContribute\n\n\n\nCompany architectures\n\n\n\nCompany\nReference(s)\n\n\n\n\nAmazon\nAmazon architecture\n\n\nCinchcast\nProducing 1,500 hours of audio every day\n\n\nDataSift\nRealtime datamining At 120,000 tweets per second\n\n\nDropBox\nHow we've scaled Dropbox\n\n\nESPN\nOperating At 100,000 duh nuh nuhs per second\n\n\nGoogle\nGoogle architecture\n\n\nInstagram\n14 million users, terabytes of photosWhat powers Instagram\n\n\nJustin.tv\nJustin.Tv's live video broadcasting architecture\n\n\nFacebook\nScaling memcached at FacebookTAO: Facebook\u2019s distributed data store for the social graphFacebook\u2019s photo storageHow Facebook Live Streams To 800,000 Simultaneous Viewers\n\n\nFlickr\nFlickr architecture\n\n\nMailbox\nFrom 0 to one million users in 6 weeks\n\n\nNetflix\nA 360 Degree View Of The Entire Netflix StackNetflix: What Happens When You Press Play?\n\n\nPinterest\nFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employees\n\n\nPlayfish\n50 million monthly users and growing\n\n\nPlentyOfFish\nPlentyOfFish architecture\n\n\nSalesforce\nHow they handle 1.3 billion transactions a day\n\n\nStack Overflow\nStack Overflow architecture\n\n\nTripAdvisor\n40M visitors, 200M dynamic page views, 30TB data\n\n\nTumblr\n15 billion page views a month\n\n\nTwitter\nMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB\/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersHow Twitter Handles 3,000 Images Per Second\n\n\nUber\nHow Uber scales their real-time market platformLessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories\n\n\nWhatsApp\nThe WhatsApp architecture Facebook bought for $19 billion\n\n\nYouTube\nYouTube scalabilityYouTube architecture\n\n\n\nCompany engineering blogs\n\nArchitectures for companies you are interviewing with.\nQuestions you encounter might be from the same domain.\n\n\nAirbnb Engineering\nAtlassian Developers\nAWS Blog\nBitly Engineering Blog\nBox Blogs\nCloudera Developer Blog\nDropbox Tech Blog\nEngineering at Quora\nEbay Tech Blog\nEvernote Tech Blog\nEtsy Code as Craft\nFacebook Engineering\nFlickr Code\nFoursquare Engineering Blog\nGitHub Engineering Blog\nGoogle Research Blog\nGroupon Engineering Blog\nHeroku Engineering Blog\nHubspot Engineering Blog\nHigh Scalability\nInstagram Engineering\nIntel Software Blog\nJane Street Tech Blog\nLinkedIn Engineering\nMicrosoft Engineering\nMicrosoft Python Engineering\nNetflix Tech Blog\nPaypal Developer Blog\nPinterest Engineering Blog\nReddit Blog\nSalesforce Engineering Blog\nSlack Engineering Blog\nSpotify Labs\nTwilio Engineering Blog\nTwitter Engineering\nUber Engineering Blog\nYahoo Engineering Blog\nYelp Engineering Blog\nZynga Engineering Blog\n\nSource(s) and further reading\nLooking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:\n\nkilimchoi\/engineering-blogs\n\nUnder development\nInterested in adding a section or helping complete one in-progress?  Contribute!\n\nDistributed computing with MapReduce\nConsistent hashing\nScatter gather\nContribute\n\nCredits\nCredits and sources are provided throughout this repo.\nSpecial thanks to:\n\nHired in tech\nCracking the coding interview\nHigh scalability\ncheckcheckzz\/system-design-interview\nshashank88\/system_design\nmmcgrana\/services-engineering\nSystem design cheat sheet\nA distributed systems reading list\nCracking the system design interview\n\nContact info\nFeel free to contact me to discuss any issues, questions, or comments.\nMy contact info can be found on my GitHub page.\nLicense\nI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).\nCopyright 2017 Donne Martin\n\nCreative Commons Attribution 4.0 International License (CC BY 4.0)\n\nhttp:\/\/creativecommons.org\/licenses\/by\/4.0\/\n\n","111":"Public APIs  \nA collective list of free APIs for use in software and web development.\nA public API for this project can be found here!\nFor information on contributing to this project, please see the contributing guide.\nPlease note a passing build status indicates all listed APIs are available since the last update. A failing build status indicates that 1 or more services may be unavailable at the moment.\nIndex\n\nAnimals\nAnime\nAnti-Malware\nArt & Design\nBooks\nBusiness\nCalendar\nCloud Storage & File Sharing\nContinuous Integration\nCryptocurrency\nCurrency Exchange\nData Validation\nDevelopment\nDictionaries\nDocuments & Productivity\nEnvironment\nEvents\nFinance\nFood & Drink\nGames & Comics\nGeocoding\nGovernment\nHealth\nJobs\nMachine Learning\nMusic\nNews\nOpen Data\nOpen Source Projects\nPatent\nPersonality\nPhotography\nScience & Math\nSecurity\nShopping\nSocial\nSports & Fitness\nTest Data\nText Analysis\nTracking\nTransportation\nURL Shorteners\nVehicle\nVideo\nWeather\n\nAnimals\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCat Facts\nDaily cat facts\nNo\nYes\nNo\n\n\nCats\nPictures of cats from Tumblr\napiKey\nYes\nUnknown\n\n\nDogs\nBased on the Stanford Dogs Dataset\nNo\nYes\nYes\n\n\nHTTPCat\nCat for every HTTP Status\nNo\nYes\nUnknown\n\n\nIUCN\nIUCN Red List of Threatened Species\napiKey\nNo\nUnknown\n\n\nMovebank\nMovement and Migration data of animals\nNo\nYes\nUnknown\n\n\nPlaceGOAT\nPlaceholder goat images\nNo\nYes\nUnknown\n\n\nRandomCat\nRandom pictures of cats\nNo\nYes\nYes\n\n\nRandomDog\nRandom pictures of dogs\nNo\nYes\nYes\n\n\nRandomFox\nRandom pictures of foxes\nNo\nYes\nNo\n\n\nRequest Kittens\nProvides a way to return various cat images\napiKey\nNo\nUnknown\n\n\nRescueGroups\nAdoption\nNo\nYes\nUnknown\n\n\nShibe.Online\nRandom pictures of Shibu Inu, cats or birds\nNo\nYes\nYes\n\n\n\n\u2b06 Back to Index\nAnime\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAniList\nAnime discovery & tracking\nOAuth\nYes\nUnknown\n\n\nAnimeNewsNetwork\nAnime industry news\nNo\nYes\nYes\n\n\nJikan\nUnofficial MyAnimeList API\nNo\nYes\nYes\n\n\nKitsu\nAnime discovery platform\nOAuth\nYes\nUnknown\n\n\nMyAnimeList\nAnime and Manga Database and Community\nOAuth\nYes\nUnknown\n\n\nStudio Ghibli\nResources from Studio Ghibli films\nNo\nYes\nUnknown\n\n\nWhat Anime\nScan anime image to get specific detail\nNo\nYes\nYes\n\n\n\n\u2b06 Back to Index\nAnti-Malware\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAbuseIPDB\nIP\/domain\/URL reputation\napiKey\nYes\nUnknown\n\n\nAlienVault Open Threat Exchange (OTX)\nIP\/domain\/URL reputation\napiKey\nYes\nUnknown\n\n\nGoogle Safe Browsing\nGoogle Link\/Domain Flagging\napiKey\nYes\nUnknown\n\n\nMetacert\nMetacert Link Flagging\napiKey\nYes\nUnknown\n\n\nURLScan.io\nScan and Analyse URLs\napiKey\nYes\nUnknown\n\n\nVirusTotal\nVirusTotal File\/URL Analysis\napiKey\nYes\nUnknown\n\n\nWeb Of Trust (WOT)\nWebsite reputation\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nArt & Design\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBehance\nDesign\napiKey\nYes\nUnknown\n\n\nCooper Hewitt\nSmithsonian Design Museum\napiKey\nYes\nUnknown\n\n\nDribbble\nDesign\nOAuth\nNo\nUnknown\n\n\nHarvard Art Museums\nArt\napiKey\nNo\nUnknown\n\n\nIconfinder\nIcons\napiKey\nYes\nUnknown\n\n\nIcons8\nIcons\nOAuth\nYes\nUnknown\n\n\nNoun Project\nIcons\nOAuth\nNo\nUnknown\n\n\nRijksmuseum\nArt\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nBooks\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBhagavad Gita\nBhagavad Gita text\nOAuth\nYes\nYes\n\n\nBritish National Bibliography\nBooks\nNo\nNo\nUnknown\n\n\nGoodreads\nBooks\napiKey\nYes\nUnknown\n\n\nGoogle Books\nBooks\nOAuth\nYes\nUnknown\n\n\nLibGen\nLibrary Genesis search engine\nNo\nNo\nUnknown\n\n\nOpen Library\nBooks, book covers and related data\nNo\nYes\nNo\n\n\nPenguin Publishing\nBooks, book covers and related data\nNo\nYes\nUnknown\n\n\nRig Veda\nGods and poets, their categories, and the verse meters, with the mandal and sukta number\nNo\nYes\nUnknown\n\n\nVedic Society\nDescriptions of all nouns (names, places, animals, things) from vedic literature\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nBusiness\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCharity Search\nNon-profit charity data\napiKey\nNo\nUnknown\n\n\nClearbit Logo\nSearch for company logos and embed them in your projects\napiKey\nYes\nUnknown\n\n\nDomainsdb.info\nRegistered Domain Names Search\nNo\nYes\nUnknown\n\n\nFreelancer\nHire freelancers to get work done\nOAuth\nYes\nUnknown\n\n\nGmail\nFlexible, RESTful access to the user's inbox\nOAuth\nYes\nUnknown\n\n\nGoogle Analytics\nCollect, configure and analyze your data to reach the right audience\nOAuth\nYes\nUnknown\n\n\nMailboxValidator\nValidate email address to improve deliverability\napiKey\nYes\nUnknown\n\n\nmailgun\nEmail Service\napiKey\nYes\nUnknown\n\n\nmarkerapi\nTrademark Search\nNo\nNo\nUnknown\n\n\nTicksel\nFriendly website analytics made for humans\nNo\nYes\nUnknown\n\n\nTrello\nBoards, lists and cards to help you organize and prioritize your projects\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nCalendar\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCalendar Index\nWorldwide Holidays and Working Days\napiKey\nYes\nYes\n\n\nChurch Calendar\nCatholic liturgical calendar\nNo\nNo\nUnknown\n\n\nCzech Namedays Calendar\nLookup for a name and returns nameday date\nNo\nNo\nUnknown\n\n\nGoogle Calendar\nDisplay, create and modify Google calendar events\nOAuth\nYes\nUnknown\n\n\nHebrew Calendar\nConvert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etc\nNo\nNo\nUnknown\n\n\nHolidays\nHistorical data regarding holidays\napiKey\nYes\nUnknown\n\n\nLectServe\nProtestant liturgical calendar\nNo\nNo\nUnknown\n\n\nNager.Date\nPublic holidays for more than 90 countries\nNo\nYes\nNo\n\n\nNamedays Calendar\nProvides namedays for multiple countries\nNo\nYes\nYes\n\n\nNon-Working Days\nDatabase of ICS files for non working days\nNo\nYes\nUnknown\n\n\nRussian Calendar\nCheck if a date is a Russian holiday or not\nNo\nYes\nNo\n\n\n\n\u2b06 Back to Index\nCloud Storage & File Sharing\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBox\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nDropbox\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nGoogle Drive\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nOneDrive\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nPastebin\nPlain Text Storage\napiKey\nYes\nUnknown\n\n\nTemporal\nIPFS based file storage and sharing with optional IPNS naming\napiKey\nYes\nNo\n\n\n\n\u2b06 Back to Index\nContinuous Integration\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCircleCI\nAutomate the software development process using continuous integration and continuous delivery\napiKey\nYes\nUnknown\n\n\nCodeship\nCodeship is a Continuous Integration Platform in the cloud\napiKey\nYes\nUnknown\n\n\nTravis CI\nSync your GitHub projects with Travis CI to test your code in minutes\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nCryptocurrency\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBinance\nExchange for Trading Cryptocurrencies based in China\napiKey\nYes\nUnknown\n\n\nBitcoinAverage\nDigital Asset Price Data for the blockchain industry\napiKey\nYes\nUnknown\n\n\nBitcoinCharts\nFinancial and Technical Data related to the Bitcoin Network\nNo\nYes\nUnknown\n\n\nBitfinex\nCryptocurrency Trading Platform\napiKey\nYes\nUnknown\n\n\nBitmex\nReal-Time Cryptocurrency derivatives trading platform based in Hong Kong\napiKey\nYes\nUnknown\n\n\nBittrex\nNext Generation Crypto Trading Platform\napiKey\nYes\nUnknown\n\n\nBlock\nBitcoin Payment, Wallet & Transaction Data\napiKey\nYes\nUnknown\n\n\nBlockchain\nBitcoin Payment, Wallet & Transaction Data\nNo\nYes\nUnknown\n\n\nCoinAPI\nAll Currency Exchanges integrate under a single api\napiKey\nYes\nNo\n\n\nCoinbase\nBitcoin, Bitcoin Cash, Litecoin and Ethereum Prices\napiKey\nYes\nUnknown\n\n\nCoinbase Pro\nCryptocurrency Trading Platform\napiKey\nYes\nUnknown\n\n\nCoinDesk\nBitcoin Price Index\nNo\nNo\nUnknown\n\n\nCoinGecko\nCryptocurrency Price, Market, and Developer\/Social Data\nNo\nYes\nYes\n\n\nCoinigy\nInteracting with Coinigy Accounts and Exchange Directly\napiKey\nYes\nUnknown\n\n\nCoinLayer\nReal-time Crypto Currency Exchange Rates\napiKey\nYes\nUnknown\n\n\nCoinlib\nCrypto Currency Prices\napiKey\nYes\nUnknown\n\n\nCoinlore\nCryptocurrencies prices, volume and more\nNo\nYes\nUnknown\n\n\nCoinMarketCap\nCryptocurrencies Prices\napiKey\nYes\nUnknown\n\n\nCoinpaprika\nCryptocurrencies prices, volume and more\nNo\nYes\nYes\n\n\nCoinRanking\nLive Cryptocurrency data\nNo\nYes\nUnknown\n\n\nCryptoCompare\nCryptocurrencies Comparison\nNo\nYes\nUnknown\n\n\nCryptonator\nCryptocurrencies Exchange Rates\nNo\nYes\nUnknown\n\n\nGemini\nCryptocurrencies Exchange\nNo\nYes\nUnknown\n\n\nICObench\nVarious information on listing, ratings, stats, and more\napiKey\nYes\nUnknown\n\n\nLivecoin\nCryptocurrency Exchange\nNo\nYes\nUnknown\n\n\nMercadoBitcoin\nBrazilian Cryptocurrency Information\nNo\nYes\nUnknown\n\n\nNexchange\nAutomated cryptocurrency exchange service\nNo\nNo\nYes\n\n\nPoloniex\nUS based digital asset exchange\napiKey\nYes\nUnknown\n\n\nWorldCoinIndex\nCryptocurrencies Prices\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nCurrency Exchange\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n1Forge\nForex currency market data\napiKey\nYes\nUnknown\n\n\nCurrencylayer\nExchange rates and currency conversion\napiKey\nYes\nUnknown\n\n\nCzech National Bank\nA collection of exchange rates\nNo\nYes\nUnknown\n\n\nExchangeRate-API\nFree currency conversion\nNo\nYes\nYes\n\n\nExchangeratesapi.io\nExchange rates with currency conversion\nNo\nYes\nYes\n\n\nFixer.io\nExchange rates and currency conversion\napiKey\nYes\nUnknown\n\n\nFrankfurter\nExchange rates, currency conversion and time series\nNo\nYes\nYes\n\n\nratesapi\nFree exchange rates and historical rates\nNo\nYes\nUnknown\n\n\nVATComply.com\nExchange rates, geolocation and VAT number validation\nNo\nYes\nYes\n\n\n\n\u2b06 Back to Index\nData Validation\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCloudmersive Validate\nValidate email addresses, phone numbers, VAT numbers and domain names\napiKey\nYes\nYes\n\n\nlanguagelayer\nLanguage detection\napiKey\nYes\nUnknown\n\n\nLob.com\nUS Address Verification\napiKey\nYes\nUnknown\n\n\nmailboxlayer\nEmail address validation\nNo\nYes\nUnknown\n\n\nNumValidate\nOpen Source phone number validation\nNo\nYes\nUnknown\n\n\nnumverify\nPhone number validation\nNo\nYes\nUnknown\n\n\nPurgoMalum\nContent validator against profanity & obscenity\nNo\nNo\nUnknown\n\n\nUS Autocomplete\nEnter address data quickly with real-time address suggestions\napiKey\nYes\nYes\n\n\nUS Extract\nExtract postal addresses from any text including emails\napiKey\nYes\nYes\n\n\nUS Street Address\nValidate and append data for any US postal address\napiKey\nYes\nYes\n\n\nvatlayer\nVAT number validation\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nDevelopment\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n24 Pull Requests\nProject to promote open source collaboration during December\nNo\nYes\nYes\n\n\nAgify.io\nEstimates the age from a first name\nNo\nYes\nYes\n\n\nApiFlash\nChrome based screenshot API for developers\napiKey\nYes\nUnknown\n\n\nApility.io\nIP, Domains and Emails anti-abuse API blocklist\nNo\nYes\nYes\n\n\nAPIs.guru\nWikipedia for Web APIs, OpenAPI\/Swagger specs for public APIs\nNo\nYes\nUnknown\n\n\nBetterMeta\nReturn a site's meta tags in JSON format\nX-Mashape-Key\nYes\nUnknown\n\n\nBitbucket\nBitbucket API\nOAuth\nYes\nUnknown\n\n\nBored\nFind random activities to fight boredom\nNo\nYes\nUnknown\n\n\nBrowshot\nEasily make screenshots of web pages in any screen size, as any device\napiKey\nYes\nUnknown\n\n\nCDNJS\nLibrary info on CDNJS\nNo\nYes\nUnknown\n\n\nChangelogs.md\nStructured changelog metadata from open source projects\nNo\nYes\nUnknown\n\n\nCountAPI\nFree and simple counting service. You can use it to track page hits and specific events\nNo\nYes\nYes\n\n\nDigitalOcean Status\nStatus of all DigitalOcean services\nNo\nYes\nUnknown\n\n\nDomainDb Info\nDomain name search to find all domains containing particular words\/phrases\/etc\nNo\nYes\nUnknown\n\n\nGenderize.io\nEstimates a gender from a first name\nNo\nYes\nYes\n\n\nGitHub\nMake use of GitHub repositories, code and user info programmatically\nOAuth\nYes\nYes\n\n\nGitlab\nAutomate GitLab interaction programmatically\nOAuth\nYes\nUnknown\n\n\nGitter\nChat for Developers\nOAuth\nYes\nUnknown\n\n\nHTTP2.Pro\nTest endpoints for client and server HTTP\/2 protocol support\nNo\nYes\nUnknown\n\n\nIBM Text to Speech\nConvert text to speech\napiKey\nYes\nYes\n\n\nIBM Visual Recognition\nVisual Recognition with pretrained or user trained model\napiKey\nYes\nUnknown\n\n\nIFTTT\nIFTTT Connect API\nNo\nYes\nUnknown\n\n\nImage-Charts\nGenerate charts, QR codes and graph images\nNo\nYes\nYes\n\n\nimport.io\nRetrieve structured data from a website or RSS feed\napiKey\nYes\nUnknown\n\n\nIPify\nA simple IP Address API\nNo\nYes\nUnknown\n\n\nIPinfo\nAnother simple IP Address API\nNo\nYes\nUnknown\n\n\nJSON 2 JSONP\nConvert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScript\nNo\nYes\nUnknown\n\n\nJSON Pretty Print\nPretty Prints JSON data\nNo\nYes\nYes\n\n\nJSONbin.io\nFree JSON storage service. Ideal for small scale Web apps, Websites and Mobile apps\napiKey\nYes\nYes\n\n\nJudge0\nCompile and run source code\nNo\nYes\nUnknown\n\n\nLicense-API\nUnofficial REST API for choosealicense.com\nNo\nYes\nNo\n\n\nMAC address vendor lookup\nRetrieve vendor details and other information regarding a given MAC address or an OUI\napiKey\nYes\nYes\n\n\nNationalize.io\nEstimate the nationality of a first name\nNo\nYes\nYes\n\n\nOOPSpam\nMultiple spam filtering service\nNo\nYes\nYes\n\n\nPlino\nSpam filtering system\nNo\nYes\nUnknown\n\n\nPostman\nTool for testing APIs\napiKey\nYes\nUnknown\n\n\nProxyCrawl\nScraping and crawling anticaptcha service\napiKey\nYes\nUnknown\n\n\nPublic APIs\nA collective list of free JSON APIs for use in web development\nNo\nYes\nUnknown\n\n\nPusher Beams\nPush notifications for Android & iOS\napiKey\nYes\nUnknown\n\n\nQR code\nCreate an easy to read QR code and URL shortener\nNo\nYes\nYes\n\n\nQR code\nGenerate and decode \/ read QR code graphics\nNo\nYes\nUnknown\n\n\nQuickChart\nGenerate chart and graph images\nNo\nYes\nYes\n\n\nReqRes\nA hosted REST-API ready to respond to your AJAX requests\nNo\nYes\nUnknown\n\n\nScraper.AI\nExtract and monitor data from any website\napiKey\nYes\nUnknown\n\n\nScraperApi\nEasily build scalable web scrapers\napiKey\nYes\nUnknown\n\n\nScreenshotAPI.net\nCreate pixel-perfect website screenshots\napiKey\nYes\nYes\n\n\nSHOUTCLOUD\nALL-CAPS AS A SERVICE\nNo\nNo\nUnknown\n\n\nStackExchange\nQ&A forum for developers\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nDictionaries\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nLingua Robot\nWord definitions, pronunciations, synonyms, antonyms and others\napiKey\nYes\nYes\n\n\nMerriam-Webster\nDictionary and Thesaurus Data\napiKey\nYes\nUnknown\n\n\nOwlBot\nDefinitions with example sentence and photo if available\napiKey\nYes\nYes\n\n\nOxford\nDictionary Data\napiKey\nYes\nNo\n\n\nWordnik\nDictionary Data\napiKey\nNo\nUnknown\n\n\nWords\nDefinitions and synonyms for more than 150,000 words\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nDocuments & Productivity\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCloudmersive Document and Data Conversion\nHTML\/URL to PDF\/PNG, Office documents to PDF, image conversion\napiKey\nYes\nYes\n\n\nFile.io\nFile Sharing\nNo\nYes\nUnknown\n\n\nMercury\nWeb parser\napiKey\nYes\nUnknown\n\n\npdflayer\nHTML\/URL to PDF\napiKey\nYes\nUnknown\n\n\nPocket\nBookmarking service\nOAuth\nYes\nUnknown\n\n\nPrexView\nData from XML or JSON to PDF, HTML or Image\napiKey\nYes\nUnknown\n\n\nRestpack\nProvides screenshot, HTML to PDF and content extraction APIs\napiKey\nYes\nUnknown\n\n\nTodoist\nTodo Lists\nOAuth\nYes\nUnknown\n\n\nVector Express\nFree vector file converting API\nNo\nNo\nYes\n\n\nWakaTime\nAutomated time tracking leaderboards for programmers\nNo\nYes\nUnknown\n\n\nWunderlist\nTodo Lists\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nEnvironment\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAirVisual\nAir quality and weather data\napiKey\nYes\nUnknown\n\n\nGr\u00fcnstromIndex\nGreen Power Index for Germany (Gr\u00fcnstromindex\/GSI)\nNo\nNo\nYes\n\n\nOpenAQ\nOpen air quality data\napiKey\nYes\nUnknown\n\n\nPM25.in\nAir quality of China\napiKey\nNo\nUnknown\n\n\nPVWatts\nEnergy production photovoltaic (PV) energy systems\napiKey\nYes\nUnknown\n\n\nUK Carbon Intensity\nThe Official Carbon Intensity API for Great Britain developed by National Grid\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nEvents\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nEventbrite\nFind events\nOAuth\nYes\nUnknown\n\n\nPicatic\nSell tickets anywhere\napiKey\nYes\nUnknown\n\n\nTicketmaster\nSearch events, attractions, or venues\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nFinance\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAlpha Vantage\nRealtime and historical stock data\napiKey\nYes\nUnknown\n\n\nBarchart OnDemand\nStock, Futures and Forex Market Data\napiKey\nYes\nUnknown\n\n\nIEX Cloud\nRealtime & Historical Stock and Market Data\napiKey\nYes\nYes\n\n\nIG\nSpreadbetting and CFD Market Data\napiKey\nYes\nUnknown\n\n\nPlaid\nConnect with users\u2019 bank accounts and access transaction data\napiKey\nYes\nUnknown\n\n\nRazorpay IFSC\nIndian Financial Systems Code (Bank Branch Codes)\nNo\nYes\nUnknown\n\n\nTradier\nUS equity\/option market data (delayed, intraday, historical)\nOAuth\nYes\nYes\n\n\nYNAB\nBudgeting & Planning\nOAuth\nYes\nYes\n\n\n\n\u2b06 Back to Index\nFood & Drink\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nEdamam nutrition\nNutrition Analysis\napiKey\nYes\nUnknown\n\n\nEdamam recipes\nRecipe Search\napiKey\nYes\nUnknown\n\n\nFoodish\nRandom pictures of food dishes\nNo\nYes\nYes\n\n\nLCBO\nAlcohol\napiKey\nYes\nUnknown\n\n\nOpen Brewery DB\nBreweries, Cideries and Craft Beer Bottle Shops\nNo\nYes\nYes\n\n\nOpen Food Facts\nFood Products Database\nNo\nYes\nUnknown\n\n\nPunkAPI\nBrewdog Beer Recipes\nNo\nYes\nUnknown\n\n\nRecipe Puppy\nFood\nNo\nNo\nUnknown\n\n\nTacoFancy\nCommunity-driven taco database\nNo\nNo\nUnknown\n\n\nThe Report of the Week\nFood & Drink Reviews\nNo\nYes\nUnknown\n\n\nTheCocktailDB\nCocktail Recipes\napiKey\nYes\nYes\n\n\nTheMealDB\nMeal Recipes\napiKey\nYes\nYes\n\n\nWhat's on the menu?\nNYPL human-transcribed historical menu collection\napiKey\nNo\nUnknown\n\n\nZomato\nDiscover restaurants\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nGames & Comics\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAge of Empires II\nGet information about Age of Empires II resources\nNo\nYes\nUnknown\n\n\nCheapShark\nSteam\/PC Game Prices and Deals\nNo\nYes\nYes\n\n\nChuck Norris Database\nJokes\nNo\nNo\nUnknown\n\n\nClash of Clans\nClash of Clans Game Information\napiKey\nYes\nUnknown\n\n\nClash Royale\nClash Royale Game Information\napiKey\nYes\nUnknown\n\n\nComic Vine\nComics\nNo\nYes\nUnknown\n\n\nDeck of Cards\nDeck of Cards\nNo\nNo\nUnknown\n\n\nDestiny The Game\nBungie Platform API\napiKey\nYes\nUnknown\n\n\nDota 2\nProvides information about Player stats , Match stats, Rankings for Dota 2\nNo\nYes\nUnknown\n\n\nDungeons and Dragons\nReference for 5th edition spells, classes, monsters, and more\nNo\nNo\nNo\n\n\nEve Online\nThird-Party Developer Documentation\nOAuth\nYes\nUnknown\n\n\nFinal Fantasy XIV\nFinal Fantasy XIV Game data API\nNo\nYes\nYes\n\n\nFortnite\nFortnite Stats\napiKey\nYes\nUnknown\n\n\nGiant Bomb\nVideo Games\nNo\nYes\nUnknown\n\n\nGuild Wars 2\nGuild Wars 2 Game Information\napiKey\nYes\nUnknown\n\n\nHalo\nHalo 5 and Halo Wars 2 Information\napiKey\nYes\nUnknown\n\n\nHearthstone\nHearthstone Cards Information\nX-Mashape-Key\nYes\nUnknown\n\n\nHypixel\nHypixel player stats\napiKey\nYes\nUnknown\n\n\nHytale\nHytale blog posts and jobs\nNo\nYes\nUnknown\n\n\nIGDB.com\nVideo Game Database\napiKey\nYes\nUnknown\n\n\nJokeAPI\nProgramming, Miscellaneous and Dark Jokes\nNo\nYes\nYes\n\n\nJokes\nProgramming and general jokes\nNo\nYes\nUnknown\n\n\nJservice\nJeopardy Question Database\nNo\nNo\nUnknown\n\n\nMagic The Gathering\nMagic The Gathering Game Information\nNo\nNo\nUnknown\n\n\nMarvel\nMarvel Comics\napiKey\nNo\nUnknown\n\n\nmod.io\nCross Platform Mod API\napiKey\nYes\nUnknown\n\n\nOpen Trivia\nTrivia Questions\nNo\nYes\nUnknown\n\n\nPandaScore\nE-sports games and results\napiKey\nYes\nUnknown\n\n\nPlayerUnknown's Battlegrounds\nPUBG Stats\napiKey\nYes\nUnknown\n\n\nPok\u00e9api\nPok\u00e9mon Information\nNo\nYes\nUnknown\n\n\nPok\u00e9mon TCG\nPok\u00e9mon TCG Information\nNo\nYes\nUnknown\n\n\nRick and Morty\nAll the Rick and Morty information, including images\nNo\nYes\nYes\n\n\nRiot Games\nLeague of Legends Game Information\napiKey\nYes\nUnknown\n\n\nScryfall\nMagic: The Gathering database\nNo\nYes\nYes\n\n\nSteam\nSteam Client Interaction\nOAuth\nYes\nUnknown\n\n\nSuperHeroes\nAll SuperHeroes and Villains data from all universes under a single API\napiKey\nYes\nUnknown\n\n\nTronald Dump\nThe dumbest things Donald Trump has ever said\nNo\nYes\nUnknown\n\n\nWargaming.net\nWargaming.net info and stats\napiKey\nYes\nNo\n\n\nxkcd\nRetrieve xkcd comics as JSON\nNo\nYes\nNo\n\n\n\n\u2b06 Back to Index\nGeocoding\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nadresse.data.gouv.fr\nAddress database of France, geocoding and reverse\nNo\nYes\nUnknown\n\n\nBattuta\nA (country\/region\/city) in-cascade location API\napiKey\nNo\nUnknown\n\n\nBing Maps\nCreate\/customize digital maps based on Bing Maps data\napiKey\nYes\nUnknown\n\n\nbng2latlong\nConvert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude\nNo\nYes\nYes\n\n\nCitySDK\nOpen APIs for select European cities\nNo\nYes\nUnknown\n\n\nDaum Maps\nDaum Maps provide multiple APIs for Korean maps\napiKey\nNo\nUnknown\n\n\nFreeGeoIP\nFree geo ip information, no registration required. 15k\/hour rate limit\nNo\nYes\nYes\n\n\nGeoApi\nFrench geographical data\nNo\nYes\nUnknown\n\n\nGeocod.io\nAddress geocoding \/ reverse geocoding in bulk\napiKey\nYes\nUnknown\n\n\nGeocode.xyz\nProvides worldwide forward\/reverse geocoding, batch geocoding and geoparsing\nNo\nYes\nUnknown\n\n\nGeoDataSource\nGeocoding of city name by using latitude and longitude coordinates\napiKey\nYes\nUnknown\n\n\nGeoJS\nIP geolocation with ChatOps integration\nNo\nYes\nYes\n\n\nGeoNames\nPlace names and other geographical data\nNo\nNo\nUnknown\n\n\ngeoPlugin\nIP geolocation and currency conversion\nNo\nYes\nYes\n\n\nGoogle Earth Engine\nA cloud-based platform for planetary-scale environmental data analysis\napiKey\nYes\nUnknown\n\n\nGoogle Maps\nCreate\/customize digital maps based on Google Maps data\napiKey\nYes\nUnknown\n\n\nHelloSalut\nGet hello translation following user language\nNo\nYes\nUnknown\n\n\nHERE Maps\nCreate\/customize digital maps based on HERE Maps data\napiKey\nYes\nUnknown\n\n\nIP 2 Country\nMap an IP to a country\nNo\nYes\nUnknown\n\n\nIP Address Details\nFind geolocation with ip address\nNo\nYes\nUnknown\n\n\nIP Location\nFind location with ip address\nNo\nNo\nUnknown\n\n\nIP Location\nFind IP address location information\nNo\nYes\nUnknown\n\n\nIP Sidekick\nGeolocation API that returns extra information about an IP address\napiKey\nYes\nUnknown\n\n\nIP Vigilante\nFree IP Geolocation API\nNo\nYes\nUnknown\n\n\nIP2Location\nIP geolocation web service to get more than 55 parameters\napiKey\nYes\nUnknown\n\n\nIP2Proxy\nDetect proxy and VPN using IP address\napiKey\nYes\nUnknown\n\n\nIPGeolocationAPI.com\nLocate your visitors by IP with country details\nNo\nYes\nYes\n\n\nIPInfoDB\nFree Geolocation tools and APIs for country, region, city and time zone lookup by IP address\napiKey\nYes\nUnknown\n\n\nipstack\nLocate and identify website visitors by IP address\napiKey\nYes\nUnknown\n\n\nLocationIQ\nProvides forward\/reverse geocoding and batch geocoding\napiKey\nYes\nYes\n\n\nMapbox\nCreate\/customize beautiful digital maps\napiKey\nYes\nUnknown\n\n\nMexico\nMexico RESTful zip codes API\nNo\nYes\nUnknown\n\n\nOne Map, Singapore\nSingapore Land Authority REST API services for Singapore addresses\napiKey\nYes\nUnknown\n\n\nOnWater\nDetermine if a lat\/lon is on water or land\nNo\nYes\nUnknown\n\n\nOpenCage\nForward and reverse geocoding using open data\napiKey\nYes\nYes\n\n\nOpenStreetMap\nNavigation, geolocation and geographical data\nOAuth\nNo\nUnknown\n\n\nPostcodeData.nl\nProvide geolocation data based on postcode for Dutch addresses\nNo\nNo\nUnknown\n\n\nPostcodes.io\nPostcode lookup & Geolocation for the UK\nNo\nYes\nYes\n\n\nREST Countries\nGet information about countries via a RESTful API\nNo\nYes\nUnknown\n\n\nUebermaps\nDiscover and share maps with friends\napiKey\nYes\nUnknown\n\n\nUS ZipCode\nValidate and append data for any US ZipCode\napiKey\nYes\nYes\n\n\nUtah AGRC\nUtah Web API for geocoding Utah addresses\napiKey\nYes\nUnknown\n\n\nViaCep\nBrazil RESTful zip codes API\nNo\nYes\nUnknown\n\n\nZipCodeAPI\nUS zip code distance, radius and location API\napiKey\nYes\nUnknown\n\n\nZippopotam\nGet information about place such as country, city, state, etc\nNo\nNo\nUnknown\n\n\n\n\u2b06 Back to Index\nGovernment\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBCLaws\nAccess to the laws of British Columbia\nNo\nNo\nUnknown\n\n\nBusinessUSA\nAuthoritative information on U.S. programs, events, services and more\napiKey\nYes\nUnknown\n\n\nCensus.gov\nThe US Census Bureau provides various APIs and data sets on demographics and businesses\nNo\nYes\nUnknown\n\n\nCity, Lyon Opendata\nLyon(FR) City Open Data\napiKey\nYes\nUnknown\n\n\nCity, Nantes Opendata\nNantes(FR) City Open Data\napiKey\nYes\nUnknown\n\n\nCity, New York Opendata\nNew York (US) City Open Data\nNo\nYes\nUnknown\n\n\nCity, Prague Opendata\nPrague(CZ) City Open Data\nNo\nNo\nUnknown\n\n\nCode.gov\nThe primary platform for Open Source and code sharing for the U.S. Federal Government\napiKey\nYes\nUnknown\n\n\nColorado Data Engine\nFormatted and geolocated Colorado public data\nNo\nYes\nUnknown\n\n\nColorado Information Marketplace\nColorado State Government Open Data\nNo\nYes\nUnknown\n\n\nData USA\nUS Public Data\nNo\nYes\nUnknown\n\n\nData.gov\nUS Government Data\napiKey\nYes\nUnknown\n\n\nData.parliament.uk\nContains live datasets including information about petitions, bills, MP votes, attendance and more\nNo\nNo\nUnknown\n\n\nDistrict of Columbia Open Data\nContains D.C. government public datasets, including crime, GIS, financial data, and so on\nNo\nYes\nUnknown\n\n\nEPA\nWeb services and data sets from the US Environmental Protection Agency\nNo\nYes\nUnknown\n\n\nFBI Wanted\nAccess information on the FBI Wanted program\nNo\nYes\nUnknown\n\n\nFEC\nInformation on campaign donations in federal elections\napiKey\nYes\nUnknown\n\n\nFederal Register\nThe Daily Journal of the United States Government\nNo\nYes\nUnknown\n\n\nFood Standards Agency\nUK food hygiene rating data API\nNo\nNo\nUnknown\n\n\nOpen Government, Australia\nAustralian Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, Belgium\nBelgium Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, Canada\nCanadian Government Open Data\nNo\nNo\nUnknown\n\n\nOpen Government, France\nFrench Government Open Data\napiKey\nYes\nUnknown\n\n\nOpen Government, India\nIndian Government Open Data\napiKey\nYes\nUnknown\n\n\nOpen Government, Italy\nItaly Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, New Zealand\nNew Zealand Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, Romania\nRomania Government Open Data\nNo\nNo\nUnknown\n\n\nOpen Government, Taiwan\nTaiwan Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, USA\nUnited States Government Open Data\nNo\nYes\nUnknown\n\n\nRegulations.gov\nFederal regulatory materials to increase understanding of the Federal rule making process\napiKey\nYes\nUnknown\n\n\nRepresent by Open North\nFind Canadian Government Representatives\nNo\nYes\nUnknown\n\n\nUSAspending.gov\nUS federal spending data\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nHealth\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBetterDoctor\nDetailed information about doctors in your area\napiKey\nYes\nUnknown\n\n\nCovid-19\nCovid 19 spread, infection and recovery\nNo\nYes\nYes\n\n\nCovid-19\nCovid 19 cases, deaths and recovery per country\nNo\nYes\nYes\n\n\nCovid-19 Government Response\nGovernment measures tracker to fight against the Covid-19 pandemic\nNo\nYes\nYes\n\n\nDiabetes\nLogging and retrieving diabetes information\nNo\nNo\nUnknown\n\n\nHealthcare.gov\nEducational content about the US Health Insurance Marketplace\nNo\nYes\nUnknown\n\n\nLexigram\nNLP that extracts mentions of clinical concepts from text, gives access to clinical ontology\napiKey\nYes\nUnknown\n\n\nMakeup\nMakeup Information\nNo\nNo\nUnknown\n\n\nMedicare\nAccess to the data from the CMS - medicare.gov\nNo\nYes\nUnknown\n\n\nNPPES\nNational Plan & Provider Enumeration System, info on healthcare providers registered in US\nNo\nYes\nUnknown\n\n\nNutritionix\nWorlds largest verified nutrition database\napiKey\nYes\nUnknown\n\n\nopenFDA\nPublic FDA data about drugs, devices and foods\nNo\nYes\nUnknown\n\n\nOrion Health\nMedical platform which allows the development of applications for different healthcare scenarios\nOAuth\nYes\nUnknown\n\n\nUSDA Nutrients\nNational Nutrient Database for Standard Reference\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nJobs\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAdzuna\nJob board aggregator\napiKey\nYes\nUnknown\n\n\nCareerjet\nJob search engine\napiKey\nNo\nUnknown\n\n\nGithub Jobs\nJobs for software developers\nNo\nYes\nYes\n\n\nGraphQL Jobs\nJobs with GraphQL\nNo\nYes\nYes\n\n\nIndeed\nJob board aggregator\napiKey\nYes\nUnknown\n\n\nJobs2Careers\nJob aggregator\napiKey\nYes\nUnknown\n\n\nJooble\nJob search engine\napiKey\nYes\nUnknown\n\n\nJuju\nJob search engine\napiKey\nNo\nUnknown\n\n\nOpen Skills\nJob titles, skills and related jobs data\nNo\nNo\nUnknown\n\n\nReed\nJob board aggregator\napiKey\nYes\nUnknown\n\n\nThe Muse\nJob board and company profiles\napiKey\nYes\nUnknown\n\n\nUpwork\nFreelance job board and management system\nOAuth\nYes\nUnknown\n\n\nUSAJOBS\nUS government job board\napiKey\nYes\nUnknown\n\n\nZipRecruiter\nJob search app and website\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nMachine Learning\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nClarifai\nComputer Vision\nOAuth\nYes\nUnknown\n\n\nCloudmersive\nImage captioning, face recognition, NSFW classification\napiKey\nYes\nYes\n\n\nDeepcode\nAI for code review\nNo\nYes\nUnknown\n\n\nDialogflow\nNatural Language Processing\napiKey\nYes\nUnknown\n\n\nKeen IO\nData Analytics\napiKey\nYes\nUnknown\n\n\nSentim-API\nText sentiment analysis\nNo\nYes\nYes\n\n\nTime Door\nA time series analysis API\napiKey\nYes\nYes\n\n\nUnplugg\nForecasting API for timeseries data\napiKey\nYes\nUnknown\n\n\nWit.ai\nNatural Language Processing\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nMusic\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAI Mastering\nAutomated Music Mastering\napiKey\nYes\nYes\n\n\nBandsintown\nMusic Events\nNo\nYes\nUnknown\n\n\nDeezer\nMusic\nOAuth\nYes\nUnknown\n\n\nDiscogs\nMusic\nOAuth\nYes\nUnknown\n\n\nGenius\nCrowdsourced lyrics and music knowledge\nOAuth\nYes\nUnknown\n\n\nGenrenator\nMusic genre generator\nNo\nYes\nUnknown\n\n\niTunes Search\nSoftware products\nNo\nYes\nUnknown\n\n\nJamendo\nMusic\nOAuth\nYes\nUnknown\n\n\nKKBOX\nGet music libraries, playlists, charts, and perform out of KKBOX's platform\nOAuth\nYes\nUnknown\n\n\nLastFm\nMusic\napiKey\nYes\nUnknown\n\n\nLyrics.ovh\nSimple API to retrieve the lyrics of a song\nNo\nYes\nUnknown\n\n\nMixcloud\nMusic\nOAuth\nYes\nYes\n\n\nMusicBrainz\nMusic\nNo\nYes\nUnknown\n\n\nMusixmatch\nMusic\napiKey\nYes\nUnknown\n\n\nOpenwhyd\nDownload curated playlists of streaming tracks (YouTube, SoundCloud, etc...)\nNo\nYes\nNo\n\n\nSearchLy\nSimilarities search based on song lyrics\nNo\nYes\nUnknown\n\n\nSongkick\nMusic Events\nOAuth\nYes\nUnknown\n\n\nSongsterr\nProvides guitar, bass and drums tabs and chords\nNo\nYes\nUnknown\n\n\nSoundCloud\nAllow users to upload and share sounds\nOAuth\nYes\nUnknown\n\n\nSpotify\nView Spotify music catalog, manage users' libraries, get recommendations and more\nOAuth\nYes\nUnknown\n\n\nTasteDive\nSimilar artist API (also works for movies and TV shows)\napiKey\nYes\nUnknown\n\n\nTheAudioDB\nMusic\napiKey\nYes\nUnknown\n\n\nVagalume\nCrowdsourced lyrics and music knowledge\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nNews\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAssociated Press\nSearch for news and metadata from Associated Press\napiKey\nYes\nUnknown\n\n\nChronicling America\nProvides access to millions of pages of historic US newspapers from the Library of Congress\nNo\nNo\nUnknown\n\n\nCurrents\nLatest news published in various news sources, blogs and forums\napiKey\nYes\nYes\n\n\nFeedbin\nRSS reader\nOAuth\nYes\nUnknown\n\n\nNew York Times\nProvides news\napiKey\nYes\nUnknown\n\n\nNews\nHeadlines currently published on a range of news sources and blogs\napiKey\nYes\nUnknown\n\n\nNPR One\nPersonalized news listening experience from NPR\nOAuth\nYes\nUnknown\n\n\nSpaceflight News\nSpaceflight related news \ud83d\ude80\nNo\nYes\nYes\n\n\nThe Guardian\nAccess all the content the Guardian creates, categorised by tags and section\napiKey\nYes\nUnknown\n\n\nThe Old Reader\nRSS reader\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nOpen Data\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n18F\nUnofficial US Federal Government API Development\nNo\nNo\nUnknown\n\n\nArchive.org\nThe Internet Archive\nNo\nYes\nUnknown\n\n\nCallook.info\nUnited States ham radio callsigns\nNo\nYes\nUnknown\n\n\nCARTO\nLocation Information Prediction\napiKey\nYes\nUnknown\n\n\nCivicFeed\nNews articles and public datasets\napiKey\nYes\nUnknown\n\n\nEnigma Public\nBroadest collection of public data\napiKey\nYes\nYes\n\n\nfonoApi\nMobile Device Description\nNo\nYes\nUnknown\n\n\nFrench Address Search\nAddress search via the French Government\nNo\nYes\nUnknown\n\n\nLinkPreview\nGet JSON formatted summary with title, description and preview image for any requested URL\napiKey\nYes\nYes\n\n\nMarijuana Strains\nMarijuana strains, races, flavors and effects\napiKey\nNo\nUnknown\n\n\nMicrolink.io\nExtract structured data from any website\nNo\nYes\nYes\n\n\nOpenCorporates\nData on corporate entities and directors in many countries\napiKey\nYes\nUnknown\n\n\nQuandl\nStock Market Data\nNo\nYes\nUnknown\n\n\nRecreation Information Database\nRecreational areas, federal lands, historic sites, museums, and other attractions\/resources(US)\napiKey\nYes\nUnknown\n\n\nScoop.it\nContent Curation Service\napiKey\nNo\nUnknown\n\n\nTeleport\nQuality of Life Data\nNo\nYes\nUnknown\n\n\nUniversities List\nUniversity names, countries and domains\nNo\nYes\nUnknown\n\n\nUniversity of Oslo\nCourses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway)\nNo\nYes\nUnknown\n\n\nUPC database\nMore than 1.5 million barcode numbers from all around the world\napiKey\nYes\nUnknown\n\n\nWikidata\nCollaboratively edited knowledge base operated by the Wikimedia Foundation\nOAuth\nYes\nUnknown\n\n\nWikipedia\nMediawiki Encyclopedia\nNo\nYes\nUnknown\n\n\nYelp\nFind Local Business\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nOpen Source Projects\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCountly\nCountly web analytics\nNo\nNo\nUnknown\n\n\nCreative Commons Catalog\nSearch among openly licensed and public domain works\nOAuth\nYes\nYes\n\n\nDrupal.org\nDrupal.org\nNo\nYes\nUnknown\n\n\nEvil Insult Generator\nEvil Insults\nNo\nYes\nYes\n\n\n\n\u2b06 Back to Index\nPatent\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nEPO\nEuropean patent search system api\nOAuth\nYes\nUnknown\n\n\nTIPO\nTaiwan patent search system api\napiKey\nYes\nUnknown\n\n\nUSPTO\nUSA patent api services\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nPersonality\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAdvice Slip\nGenerate random advice slips\nNo\nYes\nUnknown\n\n\nchucknorris.io\nJSON API for hand curated Chuck Norris jokes\nNo\nYes\nUnknown\n\n\nFavQs.com\nFavQs allows you to collect, discover and share your favorite quotes\napiKey\nYes\nUnknown\n\n\nFOAAS\nFuck Off As A Service\nNo\nNo\nUnknown\n\n\nForismatic\nInspirational Quotes\nNo\nNo\nUnknown\n\n\nicanhazdadjoke\nThe largest selection of dad jokes on the internet\nNo\nYes\nUnknown\n\n\nkanye.rest\nREST API for random Kanye West quotes\nNo\nYes\nYes\n\n\nMedium\nCommunity of readers and writers offering unique perspectives on ideas\nOAuth\nYes\nUnknown\n\n\nNaMoMemes\nMemes on Narendra Modi\nNo\nYes\nUnknown\n\n\nProgramming Quotes\nProgramming Quotes API for open source projects\nNo\nYes\nUnknown\n\n\nQuotable Quotes\nQuotable is a free, open source quotations API\nNo\nYes\nUnknown\n\n\nQuote Garden\nREST API for more than 5000 famous quotes\nNo\nYes\nUnknown\n\n\nQuotes on Design\nInspirational Quotes\nNo\nYes\nUnknown\n\n\ntaylor.rest\nREST API for random Taylor Swift quotes\nNo\nYes\nNo\n\n\nTraitify\nAssess, collect and analyze Personality\nNo\nYes\nUnknown\n\n\ntronalddump.io\nApi & web archive for the things Donald Trump has said\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nPhotography\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nFlickr\nFlickr Services\nOAuth\nYes\nUnknown\n\n\nGetty Images\nBuild applications using the world's most powerful imagery\nOAuth\nYes\nUnknown\n\n\nGfycat\nJiffier GIFs\nOAuth\nYes\nUnknown\n\n\nGiphy\nGet all your gifs\napiKey\nYes\nUnknown\n\n\nGyazo\nUpload images\napiKey\nYes\nUnknown\n\n\nImgur\nImages\nOAuth\nYes\nUnknown\n\n\nLorem Picsum\nImages from Unsplash\nNo\nYes\nUnknown\n\n\nObjectCut\nImage Background removal\napiKey\nYes\nYes\n\n\nPexels\nFree Stock Photos and Videos\napiKey\nYes\nYes\n\n\nPixabay\nPhotography\napiKey\nYes\nUnknown\n\n\nPlaceKitten\nResizable kitten placeholder images\nNo\nYes\nUnknown\n\n\nScreenShotLayer\nURL 2 Image\nNo\nYes\nUnknown\n\n\nUnsplash\nPhotography\nOAuth\nYes\nUnknown\n\n\nWallhaven\nWallpapers\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nScience & Math\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\narcsecond.io\nMultiple astronomy data sources\nNo\nYes\nUnknown\n\n\nCORE\nAccess the world's Open Access research papers\napiKey\nYes\nUnknown\n\n\nGBIF\nGlobal Biodiversity Information Facility\nNo\nYes\nYes\n\n\niDigBio\nAccess millions of museum specimens from organizations around the world\nNo\nYes\nUnknown\n\n\ninspirehep.net\nHigh Energy Physics info. system\nNo\nYes\nUnknown\n\n\nITIS\nIntegrated Taxonomic Information System\nNo\nYes\nUnknown\n\n\nLaunch Library 2\nSpaceflight launches and events database\nNo\nYes\nYes\n\n\nMinor Planet Center\nAsterank.com Information\nNo\nNo\nUnknown\n\n\nNASA\nNASA data, including imagery\nNo\nYes\nUnknown\n\n\nNASA APOD (unofficial API)\nAPI for getting APOD (Astronomy Image of the Day) images along with metadata\nNo\nYes\nYes\n\n\nNewton\nSymbolic and Arithmetic Math Calculator\nNo\nYes\nUnknown\n\n\nNumbers\nFacts about numbers\nNo\nNo\nUnknown\n\n\nOpen Notify\nISS astronauts, current location, etc\nNo\nNo\nUnknown\n\n\nOpen Science Framework\nRepository and archive for study designs, research materials, data, manuscripts, etc\nNo\nYes\nUnknown\n\n\nSHARE\nA free, open, dataset about research and scholarly activities\nNo\nYes\nUnknown\n\n\nSpaceX\nCompany, vehicle, launchpad and launch data\nNo\nYes\nUnknown\n\n\nSunrise and Sunset\nSunset and sunrise times for a given latitude and longitude\nNo\nYes\nUnknown\n\n\nTrefle\nBotanical data for plant species\napiKey\nYes\nUnknown\n\n\nUSGS Earthquake Hazards Program\nEarthquakes data real-time\nNo\nYes\nUnknown\n\n\nUSGS Water Services\nWater quality and level info for rivers and lakes\nNo\nYes\nUnknown\n\n\nWorld Bank\nWorld Data\nNo\nNo\nUnknown\n\n\n\n\u2b06 Back to Index\nSecurity\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCensys.io\nSearch engine for Internet connected host and devices\napiKey\nYes\nNo\n\n\nCRXcavator\nChrome extension risk scoring\napiKey\nYes\nUnknown\n\n\nFilterLists\nLists of filters for adblockers and firewalls\nNo\nYes\nUnknown\n\n\nFraudLabs Pro\nScreen order information using AI to detect frauds\napiKey\nYes\nUnknown\n\n\nHaveIBeenPwned\nPasswords which have previously been exposed in data breaches\napiKey\nYes\nUnknown\n\n\nIntelligence X\nPerform OSINT via Intelligence X\napiKey\nYes\nUnknown\n\n\nNational Vulnerability Database\nU.S. National Vulnerability Database\nNo\nYes\nUnknown\n\n\nPulsedive\nScan, search and collect threat intelligence data in real-time\napiKey\nYes\nUnknown\n\n\nSecurityTrails\nDomain and IP related information such as current and historical WHOIS and DNS records\napiKey\nYes\nUnknown\n\n\nShodan\nSearch engine for Internet connected devices\napiKey\nYes\nUnknown\n\n\nUK Police\nUK Police data\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nShopping\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBest Buy\nProducts, Buying Options, Categories, Recommendations, Stores and Commerce\napiKey\nYes\nUnknown\n\n\nBratabase\nDatabase of different types of Bra Sizes\nOAuth\nYes\nUnknown\n\n\neBay\nSell and Buy on eBay\nOAuth\nYes\nUnknown\n\n\nWal-Mart\nItem price and availability\napiKey\nYes\nUnknown\n\n\nWegmans\nWegmans Food Markets\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nSocial\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBuffer\nAccess to pending and sent updates in Buffer\nOAuth\nYes\nUnknown\n\n\nCarro Score\nSocial Media Influence Rating\napiKey\nYes\nYes\n\n\nCisco Spark\nTeam Collaboration Software\nOAuth\nYes\nUnknown\n\n\nDiscord\nMake bots for Discord, integrate Discord onto an external platform\nOAuth\nYes\nUnknown\n\n\nDisqus\nCommunicate with Disqus data\nOAuth\nYes\nUnknown\n\n\nFacebook\nFacebook Login, Share on FB, Social Plugins, Analytics and more\nOAuth\nYes\nUnknown\n\n\nFoursquare\nInteract with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc)\nOAuth\nYes\nUnknown\n\n\nFuck Off as a Service\nAsks someone to fuck off\nNo\nYes\nUnknown\n\n\nFull Contact\nGet Social Media profiles and contact Information\nOAuth\nYes\nUnknown\n\n\nHackerNews\nSocial news for CS and entrepreneurship\nNo\nYes\nUnknown\n\n\nInstagram\nInstagram Login, Share on Instagram, Social Plugins and more\nOAuth\nYes\nUnknown\n\n\nLinkedIn\nThe foundation of all digital integrations with LinkedIn\nOAuth\nYes\nUnknown\n\n\nMeetup.com\nData about Meetups from Meetup.com\napiKey\nYes\nUnknown\n\n\nMySocialApp\nSeamless Social Networking features, API, SDK to any app\napiKey\nYes\nUnknown\n\n\nOpen Collective\nGet Open Collective data\nNo\nYes\nUnknown\n\n\nPinterest\nThe world's catalog of ideas\nOAuth\nYes\nUnknown\n\n\nReddit\nHomepage of the internet\nOAuth\nYes\nUnknown\n\n\nSaidit\nOpen Source Reddit Clone\nOAuth\nYes\nUnknown\n\n\nSlack\nTeam Instant Messaging\nOAuth\nYes\nUnknown\n\n\nTelegram Bot\nSimplified HTTP version of the MTProto API for bots\napiKey\nYes\nUnknown\n\n\nTelegram MTProto\nRead and write Telegram data\nOAuth\nYes\nUnknown\n\n\nTrash Nothing\nA freecycling community with thousands of free items posted every day\nOAuth\nYes\nYes\n\n\nTumblr\nRead and write Tumblr Data\nOAuth\nYes\nUnknown\n\n\nTwitch\nGame Streaming API\nOAuth\nYes\nUnknown\n\n\nTwitter\nRead and write Twitter data\nOAuth\nYes\nNo\n\n\nvk\nRead and write vk data\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nSports & Fitness\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nballdontlie\nBallldontlie provides access to stats data from the NBA\nNo\nYes\nYes\n\n\nBikeWise\nBikewise is a place to learn about and report bike crashes, hazards and thefts\nNo\nYes\nUnknown\n\n\nCanadian Football League (CFL)\nOfficial JSON API providing real-time league, team and player statistics about the CFL\napiKey\nYes\nNo\n\n\nCity Bikes\nCity Bikes around the world\nNo\nNo\nUnknown\n\n\nErgast F1\nF1 data from the beginning of the world championships in 1950\nNo\nYes\nUnknown\n\n\nFitbit\nFitbit Information\nOAuth\nYes\nUnknown\n\n\nFootball (Soccer) Videos\nEmbed codes for goals and highlights from Premier League, Bundesliga, Serie A and many more\nNo\nYes\nYes\n\n\nFootball Prediction\nPredictions for upcoming football matches, odds, results and stats\nX-Mashape-Key\nYes\nUnknown\n\n\nFootball-Data.org\nFootball Data\nNo\nNo\nUnknown\n\n\nJCDecaux Bike\nJCDecaux's self-service bicycles\napiKey\nYes\nUnknown\n\n\nNBA Stats\nCurrent and historical NBA Statistics\nNo\nYes\nUnknown\n\n\nNHL Records and Stats\nNHL historical data and statistics\nNo\nYes\nUnknown\n\n\nStrava\nConnect with athletes, activities and more\nOAuth\nYes\nUnknown\n\n\nSuredBits\nQuery sports data, including teams, players, games, scores and statistics\nNo\nNo\nNo\n\n\nTheSportsDB\nCrowd-Sourced Sports Data and Artwork\napiKey\nYes\nYes\n\n\nWger\nWorkout manager data as exercises, muscles or equipment\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nTest Data\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBacon Ipsum\nA Meatier Lorem Ipsum Generator\nNo\nYes\nUnknown\n\n\nDicebear Avatars\nGenerate random pixel-art avatars\nNo\nYes\nNo\n\n\nFakeJSON\nService to generate test and fake data\napiKey\nYes\nYes\n\n\nJSONPlaceholder\nFake data for testing and prototyping\nNo\nNo\nUnknown\n\n\nLoripsum\nThe \"lorem ipsum\" generator that doesn't suck\nNo\nNo\nUnknown\n\n\nPIPL\nFree and public API that generates random and fake people's data in JSON\nNo\nYes\nNo\n\n\nRandomUser\nGenerates random user data\nNo\nYes\nUnknown\n\n\nRoboHash\nGenerate random robot\/alien avatars\nNo\nYes\nUnknown\n\n\nThis Person Does not Exist\nGenerates real-life faces of people who do not exist\nNo\nYes\nUnknown\n\n\nUI Names\nGenerate random fake names\nNo\nYes\nUnknown\n\n\nYes No\nGenerate yes or no randomly\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nText Analysis\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAylien Text Analysis\nA collection of information retrieval and natural language APIs\napiKey\nYes\nUnknown\n\n\nCloudmersive Natural Language Processing\nNatural language processing and text analysis\napiKey\nYes\nYes\n\n\nDetect Language\nDetects text language\napiKey\nYes\nUnknown\n\n\nGoogle Cloud Natural\nNatural language understanding technology, including sentiment, entity and syntax analysis\napiKey\nYes\nUnknown\n\n\nSemantira\nText Analytics with sentiment analysis, categorization & named entity extraction\nOAuth\nYes\nUnknown\n\n\nWatson Natural Language Understanding\nNatural language processing for advanced text analysis\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nTracking\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nPostmon\nAn API to query Brazilian ZIP codes and orders easily, quickly and free\nNo\nNo\nUnknown\n\n\nSweden\nProvides information about parcels in transport\napiKey\nNo\nUnknown\n\n\nUPS\nShipment and Address information\napiKey\nYes\nUnknown\n\n\nWhatPulse\nSmall application that measures your keyboard\/mouse usage\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nTransportation\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nADS-B Exchange\nAccess real-time and historical data of any and all airborne aircraft\nNo\nYes\nUnknown\n\n\nAIS Hub\nReal-time data of any marine and inland vessel equipped with AIS tracking system\napiKey\nNo\nUnknown\n\n\nAmadeus Travel Innovation Sandbox\nTravel Search - Limited usage\napiKey\nYes\nUnknown\n\n\nBay Area Rapid Transit\nStations and predicted arrivals for BART\napiKey\nNo\nUnknown\n\n\nBlaBlaCar\nSearch car sharing trips\napiKey\nYes\nUnknown\n\n\nCommunity Transit\nTransitland API\nNo\nYes\nUnknown\n\n\nGraphHopper\nA-to-B routing with turn-by-turn instructions\napiKey\nYes\nUnknown\n\n\nIcelandic APIs\nOpen APIs that deliver services in or regarding Iceland\nNo\nYes\nUnknown\n\n\nIzi\nAudio guide for travellers\napiKey\nYes\nUnknown\n\n\nMetro Lisboa\nDelays in subway lines\nNo\nNo\nNo\n\n\nNavitia\nThe open API for building cool stuff with transport data\napiKey\nYes\nUnknown\n\n\nOpen Charge Map\nGlobal public registry of electric vehicle charging locations\nNo\nYes\nUnknown\n\n\nREFUGE Restrooms\nProvides safe restroom access for transgender, intersex and gender nonconforming individuals\nNo\nYes\nUnknown\n\n\nSchiphol Airport\nSchiphol\napiKey\nYes\nUnknown\n\n\nTransitLand\nTransit Aggregation\nNo\nYes\nUnknown\n\n\nTransport for Atlanta, US\nMarta\nNo\nNo\nUnknown\n\n\nTransport for Auckland, New Zealand\nAuckland Transport\nNo\nYes\nUnknown\n\n\nTransport for Belgium\nBelgian transport API\nNo\nYes\nUnknown\n\n\nTransport for Berlin, Germany\nThird-party VBB API\nNo\nYes\nUnknown\n\n\nTransport for Bordeaux, France\nBordeaux M\u00e9tropole public transport and more (France)\napiKey\nYes\nUnknown\n\n\nTransport for Boston, US\nMBTA API\nNo\nNo\nUnknown\n\n\nTransport for Budapest, Hungary\nBudapest public transport API\nNo\nYes\nUnknown\n\n\nTransport for Chicago, US\nCTA\nNo\nNo\nUnknown\n\n\nTransport for Czech Republic\nCzech transport API\nNo\nYes\nUnknown\n\n\nTransport for Denver, US\nRTD\nNo\nNo\nUnknown\n\n\nTransport for Finland\nFinnish transport API\nNo\nYes\nUnknown\n\n\nTransport for Germany\nDeutsche Bahn (DB) API\napiKey\nNo\nUnknown\n\n\nTransport for Grenoble, France\nGrenoble public transport\nNo\nNo\nNo\n\n\nTransport for Honolulu, US\nHonolulu Transportation Information\napiKey\nNo\nUnknown\n\n\nTransport for India\nIndia Public Transport API\napiKey\nYes\nUnknown\n\n\nTransport for Lisbon, Portugal\nData about buses routes, parking and traffic\napiKey\nYes\nUnknown\n\n\nTransport for London, England\nTfL API\nNo\nYes\nUnknown\n\n\nTransport for Manchester, England\nTfGM transport network data\napiKey\nYes\nNo\n\n\nTransport for Paris, France\nLive schedules made simple\nNo\nNo\nUnknown\n\n\nTransport for Paris, France\nRATP Open Data API\nNo\nNo\nUnknown\n\n\nTransport for Philadelphia, US\nSEPTA APIs\nNo\nNo\nUnknown\n\n\nTransport for Sao Paulo, Brazil\nSPTrans\nOAuth\nNo\nUnknown\n\n\nTransport for Sweden\nPublic Transport consumer\nOAuth\nYes\nUnknown\n\n\nTransport for Switzerland\nOfficial Swiss Public Transport Open Data\napiKey\nYes\nUnknown\n\n\nTransport for Switzerland\nSwiss public transport API\nNo\nYes\nUnknown\n\n\nTransport for The Netherlands\nNS, only trains\napiKey\nNo\nUnknown\n\n\nTransport for The Netherlands\nOVAPI, country-wide public transport\nNo\nYes\nUnknown\n\n\nTransport for Toronto, Canada\nTTC\nNo\nYes\nUnknown\n\n\nTransport for United States\nNextBus API\nNo\nNo\nUnknown\n\n\nTransport for Vancouver, Canada\nTransLink\nOAuth\nYes\nUnknown\n\n\nTransport for Washington, US\nWashington Metro transport API\nOAuth\nYes\nUnknown\n\n\nUber\nUber ride requests and price estimation\nOAuth\nYes\nYes\n\n\nWhereIsMyTransport\nPlatform for public transport data in emerging cities\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nURL Shorteners\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBitly\nURL shortener and link management\nOAuth\nYes\nUnknown\n\n\nCleanURI\nURL shortener service\nNo\nYes\nYes\n\n\nClickMeter\nMonitor, compare and optimize your marketing links\napiKey\nYes\nUnknown\n\n\nRebrandly\nCustom URL shortener for sharing branded links\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nVehicle\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBrazilian Vehicles and Prices\nVehicles information from Funda\u00e7\u00e3o Instituto de Pesquisas Econ\u00f4micas - Fipe\nNo\nYes\nUnknown\n\n\nKelley Blue Book\nVehicle info, pricing, configuration, plus much more\napiKey\nYes\nNo\n\n\nMercedes-Benz\nTelematics data, remotely access vehicle functions, car configurator, locate service dealers\napiKey\nYes\nNo\n\n\nNHTSA\nNHTSA Product Information Catalog and Vehicle Listing\nNo\nYes\nUnknown\n\n\nSmartcar\nLock and unlock vehicles and get data like odometer reading and location. Works on most new cars\nOAuth\nYes\nYes\n\n\n\n\u2b06 Back to Index\nVideo\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAn API of Ice And Fire\nGame Of Thrones API\nNo\nYes\nUnknown\n\n\nBreaking Bad\nBreaking Bad API\nNo\nYes\nUnknown\n\n\nBreaking Bad Quotes\nSome Breaking Bad quotes\nNo\nYes\nUnknown\n\n\nCzech Television\nTV programme of Czech TV\nNo\nNo\nUnknown\n\n\nDailymotion\nDailymotion Developer API\nOAuth\nYes\nUnknown\n\n\nFinal Space\nFinal Space API\nNo\nYes\nYes\n\n\nHarry Potter\nHarry Potter API\napiKey\nYes\nYes\n\n\nOpen Movie Database\nMovie information\napiKey\nYes\nUnknown\n\n\nRon Swanson Quotes\nTelevision\nNo\nYes\nUnknown\n\n\nSTAPI\nInformation on all things Star Trek\nNo\nNo\nNo\n\n\nSWAPI\nAll things Star Wars\nNo\nYes\nYes\n\n\nThe Lord of the Rings\nThe Lord of the Rings API\napiKey\nYes\nUnknown\n\n\nTMDb\nCommunity-based movie data\napiKey\nYes\nUnknown\n\n\nTrakt\nMovie and TV Data\napiKey\nYes\nYes\n\n\nTVDB\nTelevision data\napiKey\nYes\nUnknown\n\n\nTVMaze\nTV Show Data\nNo\nNo\nUnknown\n\n\nVimeo\nVimeo Developer API\nOAuth\nYes\nUnknown\n\n\nYouTube\nAdd YouTube functionality to your sites and apps\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nWeather\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n7Timer!\nWeather, especially for Astroweather\nNo\nNo\nUnknown\n\n\nAPIXU\nWeather\napiKey\nYes\nUnknown\n\n\nMetaWeather\nWeather\nNo\nYes\nNo\n\n\nMeteorologisk Institutt\nWeather and climate data\nNo\nYes\nUnknown\n\n\nNOAA Climate Data\nWeather and climate data\napiKey\nYes\nUnknown\n\n\nODWeather\nWeather and weather webcams\nNo\nNo\nUnknown\n\n\nOpenUV\nReal-time UV Index Forecast\napiKey\nYes\nUnknown\n\n\nOpenWeatherMap\nWeather\napiKey\nYes\nUnknown\n\n\nStorm Glass\nGlobal marine weather from multiple sources\napiKey\nYes\nYes\n\n\nWeatherbit\nWeather\napiKey\nYes\nUnknown\n\n\nYahoo! Weather\nWeather\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\n","112":"Python - 100\u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\n\n\u4f5c\u8005\uff1a\u9a86\u660a\n\u8bf4\u660e\uff1a\u4ece\u9879\u76ee\u4e0a\u7ebf\u5230\u83b7\u5f978w+\u661f\u6807\u4ee5\u6765\uff0c\u4e00\u76f4\u6536\u5230\u53cd\u9988\u8bf4\u57fa\u7840\u90e8\u5206\uff08\u524d15\u5929\u7684\u5185\u5bb9\uff09\u5bf9\u65b0\u624b\u6765\u8bf4\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u5efa\u8bae\u6709\u914d\u5957\u89c6\u9891\u8fdb\u884c\u8bb2\u89e3\u3002\u6700\u8fd1\u628a\u57fa\u7840\u90e8\u5206\u7684\u5185\u5bb9\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a\u201cPython-Core-50-Courses\u201d\u7684\u9879\u76ee\uff0c\u7528\u66f4\u4e3a\u7b80\u5355\u901a\u4fd7\u7684\u65b9\u5f0f\u91cd\u5199\u4e86\u8fd9\u90e8\u5206\u5185\u5bb9\u5e76\u9644\u5e26\u4e86\u89c6\u9891\u8bb2\u89e3\uff0c\u521d\u5b66\u8005\u53ef\u4ee5\u5173\u6ce8\u4e0b\u8fd9\u4e2a\u65b0\u9879\u76ee\u3002\u56fd\u5185\u7528\u6237\u5982\u679c\u8bbf\u95eeGitHub\u6bd4\u8f83\u6162\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u77e5\u4e4e\u53f7Python-Jack\u4e0a\u7684\u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d\u4e13\u680f\uff0c\u4e13\u680f\u4f1a\u6301\u7eed\u66f4\u65b0\uff0c\u8fd8\u6709\u5927\u5bb6\u6bd4\u8f83\u671f\u5f85\u7684\u201c\u6570\u636e\u5206\u6790\u201d\u7684\u5185\u5bb9\u4e5f\u5373\u5c06\u4e0a\u7ebf\uff0c\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u6211\u5728\u77e5\u4e4e\u7684\u4e13\u680f\u3001\u6587\u7ae0\u548c\u56de\u7b54\u3002\n\u521b\u4f5c\u4e0d\u6613\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u6253\u8d4f\u652f\u6301\uff0c\u8fd9\u4e9b\u94b1\u57fa\u672c\u4e0d\u4f1a\u7528\u4e8e\u8d2d\u4e70\u5496\u5561\uff0c\u800c\u662f\u901a\u8fc7\u817e\u8baf\u516c\u76ca\u3001\u7f8e\u56e2\u516c\u76ca\u3001\u6c34\u6ef4\u7b79\u7b49\u5e73\u53f0\u6350\u8d60\u7ed9\u9700\u8981\u5e2e\u52a9\u7684\u4eba\uff08\u70b9\u51fb\u4e86\u89e3\u6350\u8d60\u60c5\u51b5\uff09\u3002\u9700\u8981\u52a0\u5165QQ\u4ea4\u6d41\u7fa4\u7684\u53ef\u4ee5\u626b\u63cf\u4e0b\u9762\u7684\u4e8c\u7ef4\u7801\uff0c\u4ea4\u6d41\u7fa4\u4f1a\u4e3a\u5927\u5bb6\u63d0\u4f9b\u5b66\u4e60\u8d44\u6e90\u548c\u95ee\u9898\u89e3\u7b54\uff0c\u8fd8\u4f1a\u6301\u7eed\u4e3a\u5927\u5bb6\u5e26\u6765\u514d\u8d39\u7684\u7ebf\u4e0aPython\u4f53\u9a8c\u8bfe\u548c\u884c\u4e1a\u516c\u5f00\u8bfe\uff0c\u656c\u8bf7\u5173\u6ce8\u3002\n\n\nPython\u5e94\u7528\u9886\u57df\u548c\u804c\u4e1a\u53d1\u5c55\u5206\u6790\n\u7b80\u5355\u7684\u8bf4\uff0cPython\u662f\u4e00\u4e2a\u201c\u4f18\u96c5\u201d\u3001\u201c\u660e\u786e\u201d\u3001\u201c\u7b80\u5355\u201d\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n\u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u975e\u4e13\u4e1a\u4eba\u58eb\u4e5f\u80fd\u4e0a\u624b\n\u5f00\u6e90\u7cfb\u7edf\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u751f\u6001\u5708\n\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5b8c\u7f8e\u7684\u5e73\u53f0\u53ef\u79fb\u690d\u6027\n\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\n\u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\n\nPython\u5728\u4ee5\u4e0b\u9886\u57df\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002\n\n\u540e\u7aef\u5f00\u53d1 - Python \/ Java \/ Go \/ PHP\nDevOps - Python \/ Shell \/ Ruby\n\u6570\u636e\u91c7\u96c6 - Python \/ C++ \/ Java\n\u91cf\u5316\u4ea4\u6613 - Python \/ C++ \/ R\n\u6570\u636e\u79d1\u5b66 - Python \/ R \/ Julia \/ Matlab\n\u673a\u5668\u5b66\u4e60 - Python \/ R \/ C++ \/ Julia\n\u81ea\u52a8\u5316\u6d4b\u8bd5 - Python \/ Shell\n\n\u4f5c\u4e3a\u4e00\u540dPython\u5f00\u53d1\u8005\uff0c\u6839\u636e\u4e2a\u4eba\u7684\u559c\u597d\u548c\u804c\u4e1a\u89c4\u5212\uff0c\u53ef\u4ee5\u9009\u62e9\u7684\u5c31\u4e1a\u9886\u57df\u4e5f\u975e\u5e38\u591a\u3002\n\nPython\u540e\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\uff08\u670d\u52a1\u5668\u3001\u4e91\u5e73\u53f0\u3001\u6570\u636e\u63a5\u53e3\uff09\nPython\u8fd0\u7ef4\u5de5\u7a0b\u5e08\uff08\u81ea\u52a8\u5316\u8fd0\u7ef4\u3001SRE\u3001DevOps\uff09\nPython\u6570\u636e\u5206\u6790\u5e08\uff08\u6570\u636e\u5206\u6790\u3001\u5546\u4e1a\u667a\u80fd\u3001\u6570\u5b57\u5316\u8fd0\u8425\uff09\nPython\u6570\u636e\u6316\u6398\u5de5\u7a0b\u5e08\uff08\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u7b97\u6cd5\u4e13\u5bb6\uff09\nPython\u722c\u866b\u5de5\u7a0b\u5e08\nPython\u6d4b\u8bd5\u5de5\u7a0b\u5e08\uff08\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6d4b\u8bd5\u5f00\u53d1\uff09\n\n\n\u8bf4\u660e\uff1a\u76ee\u524d\uff0c\u6570\u636e\u5206\u6790\u662f\u4e00\u4e2a\u975e\u5e38\u70ed\u95e8\u7684\u65b9\u5411\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u662f\u4e92\u8054\u7f51\u884c\u4e1a\u8fd8\u662f\u4f20\u7edf\u884c\u4e1a\u90fd\u5df2\u7ecf\u79ef\u7d2f\u4e86\u5927\u91cf\u7684\u6570\u636e\uff0c\u73b0\u5728\u9700\u8981\u7684\u5c31\u662f\u4ece\u8fd9\u4e9b\u6570\u636e\u4e2d\u63d0\u53d6\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u6253\u9020\u66f4\u597d\u7684\u4ea7\u54c1\u6216\u8005\u4e3a\u5c06\u6765\u7684\u51b3\u7b56\u63d0\u4f9b\u652f\u6301\u3002\n\n\u7ed9\u521d\u5b66\u8005\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a\n\nMake English as your working language. \uff08\u8ba9\u82f1\u8bed\u6210\u4e3a\u4f60\u7684\u5de5\u4f5c\u8bed\u8a00\uff09\nPractice makes perfect. \uff08\u719f\u80fd\u751f\u5de7\uff09\nAll experience comes from mistakes. \uff08\u6240\u6709\u7684\u7ecf\u9a8c\u90fd\u6e90\u4e8e\u4f60\u72af\u8fc7\u7684\u9519\u8bef\uff09\nDon't be one of the leeches. \uff08\u4e0d\u8981\u5f53\u4f38\u624b\u515a\uff09\nEither outstanding or out. \uff08\u8981\u4e48\u51fa\u4f17\uff0c\u8981\u4e48\u51fa\u5c40\uff09\n\nDay01~15 - Python\u8bed\u8a00\u57fa\u7840\nDay01 - \u521d\u8bc6Python\n\nPython\u7b80\u4ecb - Python\u7684\u5386\u53f2 \/ Python\u7684\u4f18\u7f3a\u70b9 \/ Python\u7684\u5e94\u7528\u9886\u57df\n\u642d\u5efa\u7f16\u7a0b\u73af\u5883 - Windows\u73af\u5883 \/ Linux\u73af\u5883 \/ MacOS\u73af\u5883\n\u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f - Hello, world \/ print\u51fd\u6570 \/ \u8fd0\u884c\u7a0b\u5e8f\n\u4f7f\u7528IDLE - \u4ea4\u4e92\u5f0f\u73af\u5883(REPL) \/ \u7f16\u5199\u591a\u884c\u4ee3\u7801 \/ \u8fd0\u884c\u7a0b\u5e8f \/ \u9000\u51faIDLE\n\u6ce8\u91ca - \u6ce8\u91ca\u7684\u4f5c\u7528 \/ \u5355\u884c\u6ce8\u91ca \/ \u591a\u884c\u6ce8\u91ca\n\nDay02 - \u8bed\u8a00\u5143\u7d20\n\n\u7a0b\u5e8f\u548c\u8fdb\u5236 - \u6307\u4ee4\u548c\u7a0b\u5e8f \/ \u51af\u8bfa\u4f9d\u66fc\u673a \/ \u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236 \/ \u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\n\u53d8\u91cf\u548c\u7c7b\u578b - \u53d8\u91cf\u7684\u547d\u540d \/ \u53d8\u91cf\u7684\u4f7f\u7528 \/ input\u51fd\u6570 \/ \u68c0\u67e5\u53d8\u91cf\u7c7b\u578b \/ \u7c7b\u578b\u8f6c\u6362\n\u6570\u5b57\u548c\u5b57\u7b26\u4e32 - \u6574\u6570 \/ \u6d6e\u70b9\u6570 \/ \u590d\u6570 \/ \u5b57\u7b26\u4e32 \/ \u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c \/ \u5b57\u7b26\u7f16\u7801\n\u8fd0\u7b97\u7b26 - \u6570\u5b66\u8fd0\u7b97\u7b26 \/ \u8d4b\u503c\u8fd0\u7b97\u7b26 \/ \u6bd4\u8f83\u8fd0\u7b97\u7b26 \/ \u903b\u8f91\u8fd0\u7b97\u7b26 \/ \u8eab\u4efd\u8fd0\u7b97\u7b26 \/ \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\n\u5e94\u7528\u6848\u4f8b - \u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u6210\u6444\u6c0f\u6e29\u5ea6 \/ \u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef \/ \u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u5426\u662f\u95f0\u5e74\n\nDay03 - \u5206\u652f\u7ed3\u6784\n\n\u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 \/ \u7f29\u8fdb \/ \u4ee3\u7801\u5757 \/ \u6d41\u7a0b\u56fe\nif\u8bed\u53e5 - \u7b80\u5355\u7684if \/ if-else\u7ed3\u6784 \/ if-elif-else\u7ed3\u6784 \/ \u5d4c\u5957\u7684if\n\u5e94\u7528\u6848\u4f8b - \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 \/ \u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 \/ \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 \/ \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 \/ \u5206\u6bb5\u51fd\u6570\u6c42\u503c \/ \u8f93\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\n\nDay04 - \u5faa\u73af\u7ed3\u6784\n\n\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 \/ \u7f29\u8fdb \/ \u4ee3\u7801\u5757 \/ \u6d41\u7a0b\u56fe\nwhile\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 \/ break\u8bed\u53e5 \/ continue\u8bed\u53e5\nfor\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 \/ range\u7c7b\u578b \/ \u5faa\u73af\u4e2d\u7684\u5206\u652f\u7ed3\u6784 \/ \u5d4c\u5957\u7684\u5faa\u73af \/ \u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f\n\u5e94\u7528\u6848\u4f8b - 1~100\u6c42\u548c \/ \u5224\u65ad\u7d20\u6570 \/ \u731c\u6570\u5b57\u6e38\u620f \/ \u6253\u5370\u4e5d\u4e5d\u8868 \/ \u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848 \/ \u7334\u5b50\u5403\u6843 \/ \u767e\u94b1\u767e\u9e21\n\nDay05 - \u6784\u9020\u7a0b\u5e8f\u903b\u8f91\n\n\u7ecf\u5178\u6848\u4f8b\uff1a\u6c34\u4ed9\u82b1\u6570 \/ \u767e\u94b1\u767e\u9e21 \/ Craps\u8d4c\u535a\u6e38\u620f\n\u7ec3\u4e60\u9898\u76ee\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217 \/ \u5b8c\u7f8e\u6570 \/ \u7d20\u6570\n\nDay06 - \u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528\n\n\u51fd\u6570\u7684\u4f5c\u7528 - \u4ee3\u7801\u7684\u574f\u5473\u9053 \/ \u7528\u51fd\u6570\u5c01\u88c5\u529f\u80fd\u6a21\u5757\n\u5b9a\u4e49\u51fd\u6570 - def\u8bed\u53e5 \/ \u51fd\u6570\u540d \/ \u53c2\u6570\u5217\u8868 \/ return\u8bed\u53e5 \/ \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\n\u8c03\u7528\u51fd\u6570 - Python\u5185\u7f6e\u51fd\u6570 \/  \u5bfc\u5165\u6a21\u5757\u548c\u51fd\u6570\n\u51fd\u6570\u7684\u53c2\u6570 - \u9ed8\u8ba4\u53c2\u6570 \/ \u53ef\u53d8\u53c2\u6570 \/ \u5173\u952e\u5b57\u53c2\u6570 \/ \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n\u51fd\u6570\u7684\u8fd4\u56de\u503c - \u6ca1\u6709\u8fd4\u56de\u503c  \/ \u8fd4\u56de\u5355\u4e2a\u503c \/ \u8fd4\u56de\u591a\u4e2a\u503c\n\u4f5c\u7528\u57df\u95ee\u9898 - \u5c40\u90e8\u4f5c\u7528\u57df \/ \u5d4c\u5957\u4f5c\u7528\u57df \/ \u5168\u5c40\u4f5c\u7528\u57df \/ \u5185\u7f6e\u4f5c\u7528\u57df \/ \u548c\u4f5c\u7528\u57df\u76f8\u5173\u7684\u5173\u952e\u5b57\n\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 - \u6a21\u5757\u7684\u6982\u5ff5 \/ \u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u7ba1\u7406\u51fd\u6570 \/ \u547d\u540d\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u600e\u6837\uff08\u540c\u4e00\u4e2a\u6a21\u5757\u548c\u4e0d\u540c\u7684\u6a21\u5757\uff09\n\nDay07 - \u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\n\u5b57\u7b26\u4e32\u7684\u4f7f\u7528 - \u8ba1\u7b97\u957f\u5ea6 \/ \u4e0b\u6807\u8fd0\u7b97 \/ \u5207\u7247 \/ \u5e38\u7528\u65b9\u6cd5\n\u5217\u8868\u57fa\u672c\u7528\u6cd5 - \u5b9a\u4e49\u5217\u8868 \/ \u7528\u4e0b\u8868\u8bbf\u95ee\u5143\u7d20 \/ \u4e0b\u6807\u8d8a\u754c \/ \u6dfb\u52a0\u5143\u7d20 \/ \u5220\u9664\u5143\u7d20 \/ \u4fee\u6539\u5143\u7d20 \/ \u5207\u7247 \/ \u5faa\u73af\u904d\u5386\n\u5217\u8868\u5e38\u7528\u64cd\u4f5c - \u8fde\u63a5 \/ \u590d\u5236(\u590d\u5236\u5143\u7d20\u548c\u590d\u5236\u6570\u7ec4) \/ \u957f\u5ea6 \/ \u6392\u5e8f \/ \u5012\u8f6c \/ \u67e5\u627e\n\u751f\u6210\u5217\u8868 - \u4f7f\u7528range\u521b\u5efa\u6570\u5b57\u5217\u8868 \/ \u751f\u6210\u8868\u8fbe\u5f0f \/ \u751f\u6210\u5668\n\u5143\u7ec4\u7684\u4f7f\u7528 - \u5b9a\u4e49\u5143\u7ec4 \/ \u4f7f\u7528\u5143\u7ec4\u4e2d\u7684\u503c \/ \u4fee\u6539\u5143\u7ec4\u53d8\u91cf \/ \u5143\u7ec4\u548c\u5217\u8868\u8f6c\u6362\n\u96c6\u5408\u57fa\u672c\u7528\u6cd5 - \u96c6\u5408\u548c\u5217\u8868\u7684\u533a\u522b \/  \u521b\u5efa\u96c6\u5408 \/ \u6dfb\u52a0\u5143\u7d20 \/ \u5220\u9664\u5143\u7d20 \/  \u6e05\u7a7a\n\u96c6\u5408\u5e38\u7528\u64cd\u4f5c - \u4ea4\u96c6 \/ \u5e76\u96c6 \/ \u5dee\u96c6 \/ \u5bf9\u79f0\u5dee \/ \u5b50\u96c6 \/ \u8d85\u96c6\n\u5b57\u5178\u7684\u57fa\u672c\u7528\u6cd5 - \u5b57\u5178\u7684\u7279\u70b9 \/ \u521b\u5efa\u5b57\u5178 \/ \u6dfb\u52a0\u5143\u7d20 \/ \u5220\u9664\u5143\u7d20 \/ \u53d6\u503c \/ \u6e05\u7a7a\n\u5b57\u5178\u5e38\u7528\u64cd\u4f5c - keys()\u65b9\u6cd5 \/ values()\u65b9\u6cd5 \/ items()\u65b9\u6cd5 \/ setdefault()\u65b9\u6cd5\n\u57fa\u7840\u7ec3\u4e60 - \u8dd1\u9a6c\u706f\u6548\u679c \/ \u5217\u8868\u627e\u6700\u5927\u5143\u7d20 \/ \u7edf\u8ba1\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 \/ Fibonacci\u6570\u5217 \/ \u6768\u8f89\u4e09\u89d2\n\u7efc\u5408\u6848\u4f8b - \u53cc\u8272\u7403\u9009\u53f7 \/ \u4e95\u5b57\u68cb\n\nDay08 - \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840\n\n\u7c7b\u548c\u5bf9\u8c61 - \u4ec0\u4e48\u662f\u7c7b \/ \u4ec0\u4e48\u662f\u5bf9\u8c61 \/ \u9762\u5411\u5bf9\u8c61\u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u5b9a\u4e49\u7c7b - \u57fa\u672c\u7ed3\u6784 \/ \u5c5e\u6027\u548c\u65b9\u6cd5 \/ \u6784\u9020\u5668 \/ \u6790\u6784\u5668 \/ __str__\u65b9\u6cd5\n\u4f7f\u7528\u5bf9\u8c61 - \u521b\u5efa\u5bf9\u8c61 \/ \u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\n\u9762\u5411\u5bf9\u8c61\u7684\u56db\u5927\u652f\u67f1 - \u62bd\u8c61 \/ \u5c01\u88c5 \/ \u7ee7\u627f \/ \u591a\u6001\n\u57fa\u7840\u7ec3\u4e60 - \u5b9a\u4e49\u5b66\u751f\u7c7b \/ \u5b9a\u4e49\u65f6\u949f\u7c7b \/ \u5b9a\u4e49\u56fe\u5f62\u7c7b \/ \u5b9a\u4e49\u6c7d\u8f66\u7c7b\n\nDay09 - \u9762\u5411\u5bf9\u8c61\u8fdb\u9636\n\n\u5c5e\u6027 - \u7c7b\u5c5e\u6027 \/ \u5b9e\u4f8b\u5c5e\u6027 \/ \u5c5e\u6027\u8bbf\u95ee\u5668 \/ \u5c5e\u6027\u4fee\u6539\u5668 \/ \u5c5e\u6027\u5220\u9664\u5668 \/ \u4f7f\u7528__slots__\n\u7c7b\u4e2d\u7684\u65b9\u6cd5 - \u5b9e\u4f8b\u65b9\u6cd5 \/ \u7c7b\u65b9\u6cd5 \/ \u9759\u6001\u65b9\u6cd5\n\u8fd0\u7b97\u7b26\u91cd\u8f7d - __add__ \/ __sub__ \/ __or__ \/__getitem__ \/ __setitem__ \/ __len__ \/ __repr__ \/ __gt__ \/ __lt__ \/ __le__ \/ __ge__ \/ __eq__ \/ __ne__ \/ __contains__\n\u7c7b(\u7684\u5bf9\u8c61)\u4e4b\u95f4\u7684\u5173\u7cfb - \u5173\u8054 \/ \u7ee7\u627f \/ \u4f9d\u8d56\n\u7ee7\u627f\u548c\u591a\u6001 - \u4ec0\u4e48\u662f\u7ee7\u627f \/ \u7ee7\u627f\u7684\u8bed\u6cd5 \/ \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 \/ \u65b9\u6cd5\u91cd\u5199 \/ \u7c7b\u578b\u5224\u5b9a \/ \u591a\u91cd\u7ee7\u627f \/ \u83f1\u5f62\u7ee7\u627f(\u94bb\u77f3\u7ee7\u627f)\u548cC3\u7b97\u6cd5\n\u7efc\u5408\u6848\u4f8b - \u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf \/ \u56fe\u4e66\u81ea\u52a8\u6298\u6263\u7cfb\u7edf \/ \u81ea\u5b9a\u4e49\u5206\u6570\u7c7b\n\nDay10 - \u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1\n\n\u4f7f\u7528tkinter\u5f00\u53d1GUI\u7a0b\u5e8f\n\u4f7f\u7528pygame\u4e09\u65b9\u5e93\u5f00\u53d1\u6e38\u620f\u5e94\u7528\n\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u6e38\u620f\n\nDay11 - \u6587\u4ef6\u548c\u5f02\u5e38\n\n\u8bfb\u6587\u4ef6 - \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6 \/ \u9010\u884c\u8bfb\u53d6 \/ \u6587\u4ef6\u8def\u5f84\n\u5199\u6587\u4ef6 - \u8986\u76d6\u5199\u5165 \/ \u8ffd\u52a0\u5199\u5165 \/ \u6587\u672c\u6587\u4ef6 \/ \u4e8c\u8fdb\u5236\u6587\u4ef6\n\u5f02\u5e38\u5904\u7406 - \u5f02\u5e38\u673a\u5236\u7684\u91cd\u8981\u6027 \/ try-except\u4ee3\u7801\u5757 \/ else\u4ee3\u7801\u5757 \/ finally\u4ee3\u7801\u5757 \/ \u5185\u7f6e\u5f02\u5e38\u7c7b\u578b \/ \u5f02\u5e38\u6808 \/ raise\u8bed\u53e5\n\u6570\u636e\u6301\u4e45\u5316 - CSV\u6587\u4ef6\u6982\u8ff0 \/ csv\u6a21\u5757\u7684\u5e94\u7528 \/ JSON\u6570\u636e\u683c\u5f0f \/ json\u6a21\u5757\u7684\u5e94\u7528\n\nDay12 - \u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u5b57\u7b26\u4e32\u9ad8\u7ea7\u64cd\u4f5c - \u8f6c\u4e49\u5b57\u7b26 \/ \u539f\u59cb\u5b57\u7b26\u4e32 \/ \u591a\u884c\u5b57\u7b26\u4e32 \/ in\u548c not in\u8fd0\u7b97\u7b26 \/ is\u5f00\u5934\u7684\u65b9\u6cd5 \/ join\u548csplit\u65b9\u6cd5 \/ strip\u76f8\u5173\u65b9\u6cd5 \/ pyperclip\u6a21\u5757 \/ \u4e0d\u53d8\u5b57\u7b26\u4e32\u548c\u53ef\u53d8\u5b57\u7b26\u4e32 \/ StringIO\u7684\u4f7f\u7528\n\u6b63\u5219\u8868\u8fbe\u5f0f\u5165\u95e8 - \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528 \/ \u5143\u5b57\u7b26 \/ \u8f6c\u4e49 \/ \u91cf\u8bcd \/ \u5206\u7ec4 \/ \u96f6\u5bbd\u65ad\u8a00 \/\u8d2a\u5a6a\u5339\u914d\u4e0e\u60f0\u6027\u5339\u914d\u61d2\u60f0 \/ \u4f7f\u7528re\u6a21\u5757\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff08\u5339\u914d\u3001\u641c\u7d22\u3001\u66ff\u6362\u3001\u6355\u83b7\uff09\n\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f - re\u6a21\u5757 \/ compile\u51fd\u6570 \/ group\u548cgroups\u65b9\u6cd5 \/ match\u65b9\u6cd5 \/ search\u65b9\u6cd5 \/ findall\u548cfinditer\u65b9\u6cd5 \/ sub\u548csubn\u65b9\u6cd5 \/ split\u65b9\u6cd5\n\u5e94\u7528\u6848\u4f8b - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n\nDay13 - \u8fdb\u7a0b\u548c\u7ebf\u7a0b\n\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u6982\u5ff5 - \u4ec0\u4e48\u662f\u8fdb\u7a0b \/ \u4ec0\u4e48\u662f\u7ebf\u7a0b \/ \u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u573a\u666f\n\u4f7f\u7528\u8fdb\u7a0b - fork\u51fd\u6570 \/ multiprocessing\u6a21\u5757 \/ \u8fdb\u7a0b\u6c60 \/ \u8fdb\u7a0b\u95f4\u901a\u4fe1\n\u4f7f\u7528\u7ebf\u7a0b - thread\u6a21\u5757 \/ threading\u6a21\u5757 \/ Thread\u7c7b \/ Lock\u7c7b \/ Condition\u7c7b \/ \u7ebf\u7a0b\u6c60\n\nDay14 - \u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 - \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 \/ \u201cTCP-IP\u201d\u6a21\u578b \/ IP\u5730\u5740 \/ \u7aef\u53e3 \/ \u534f\u8bae \/ \u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f - \u201c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u201d\u6a21\u5f0f \/ \u201c\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u201d\u6a21\u5f0f\n\u57fa\u4e8eHTTP\u534f\u8bae\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90 - \u7f51\u7edcAPI\u6982\u8ff0 \/ \u8bbf\u95eeURL \/ requests\u6a21\u5757 \/ \u89e3\u6790JSON\u683c\u5f0f\u6570\u636e\nPython\u7f51\u7edc\u7f16\u7a0b - \u5957\u63a5\u5b57\u7684\u6982\u5ff5 \/ socket\u6a21\u5757 \/  socket\u51fd\u6570 \/ \u521b\u5efaTCP\u670d\u52a1\u5668 \/ \u521b\u5efaTCP\u5ba2\u6237\u7aef \/ \u521b\u5efaUDP\u670d\u52a1\u5668 \/ \u521b\u5efaUDP\u5ba2\u6237\u7aef \/ SocketServer\u6a21\u5757\n\u7535\u5b50\u90ae\u4ef6 - SMTP\u534f\u8bae \/ POP3\u534f\u8bae \/ IMAP\u534f\u8bae \/ smtplib\u6a21\u5757 \/ poplib\u6a21\u5757 \/ imaplib\u6a21\u5757\n\u77ed\u4fe1\u670d\u52a1 - \u8c03\u7528\u77ed\u4fe1\u670d\u52a1\u7f51\u5173\n\nDay15 - \u56fe\u50cf\u548c\u6587\u6863\u5904\u7406\n\n\u7528Pillow\u5904\u7406\u56fe\u7247 - \u56fe\u7247\u8bfb\u5199 \/ \u56fe\u7247\u5408\u6210 \/ \u51e0\u4f55\u53d8\u6362 \/ \u8272\u5f69\u8f6c\u6362 \/ \u6ee4\u955c\u6548\u679c\n\u8bfb\u5199Word\u6587\u6863 - \u6587\u672c\u5185\u5bb9\u7684\u5904\u7406 \/ \u6bb5\u843d \/ \u9875\u7709\u548c\u9875\u811a \/ \u6837\u5f0f\u7684\u5904\u7406\n\u8bfb\u5199Excel\u6587\u4ef6 - xlrd\u6a21\u5757 \/ xlwt\u6a21\u5757\n\nDay16~Day20 - Python\u8bed\u8a00\u8fdb\u9636 \n\n\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\u51fd\u6570\u7684\u9ad8\u7ea7\u7528\u6cd5 - \u201c\u4e00\u7b49\u516c\u6c11\u201d \/ \u9ad8\u9636\u51fd\u6570 \/ Lambda\u51fd\u6570 \/ \u4f5c\u7528\u57df\u548c\u95ed\u5305 \/ \u88c5\u9970\u5668\n\u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u77e5\u8bc6 - \u201c\u4e09\u5927\u652f\u67f1\u201d \/ \u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb \/ \u5783\u573e\u56de\u6536 \/ \u9b54\u672f\u5c5e\u6027\u548c\u65b9\u6cd5 \/ \u6df7\u5165 \/ \u5143\u7c7b \/ \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 \/ GoF\u8bbe\u8ba1\u6a21\u5f0f\n\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 - \u76f8\u5173\u9b54\u672f\u65b9\u6cd5 \/ \u521b\u5efa\u751f\u6210\u5668\u7684\u4e24\u79cd\u65b9\u5f0f \/\n\u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b - \u591a\u7ebf\u7a0b \/ \u591a\u8fdb\u7a0b \/ \u5f02\u6b65IO \/ async\u548cawait\n\nDay21~30 - Web\u524d\u7aef\u5165\u95e8\n\n\u7528HTML\u6807\u7b7e\u627f\u8f7d\u9875\u9762\u5185\u5bb9\n\u7528CSS\u6e32\u67d3\u9875\u9762\n\u7528JavaScript\u5904\u7406\u4ea4\u4e92\u5f0f\u884c\u4e3a\njQuery\u5165\u95e8\u548c\u63d0\u9ad8\nVue.js\u5165\u95e8\nElement\u7684\u4f7f\u7528\nBootstrap\u7684\u4f7f\u7528\n\nDay31~35 - \u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf\n\n\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2\u548cLinux\u6982\u8ff0\nLinux\u57fa\u7840\u547d\u4ee4\nLinux\u4e2d\u7684\u5b9e\u7528\u7a0b\u5e8f\nLinux\u7684\u6587\u4ef6\u7cfb\u7edf\nVim\u7f16\u8f91\u5668\u7684\u5e94\u7528\n\u73af\u5883\u53d8\u91cf\u548cShell\u7f16\u7a0b\n\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u670d\u52a1\u7684\u914d\u7f6e\n\u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406\n\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\n\nDay36~40 - \u6570\u636e\u5e93\u57fa\u7840\u548c\u8fdb\u9636\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0\nMySQL\u7684\u5b89\u88c5\u548c\u4f7f\u7528\nSQL\u7684\u4f7f\u7528\n\nDDL - \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 - create \/ drop \/ alter\nDML - \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - insert \/ delete \/ update \/ select\nDCL - \u6570\u636e\u63a7\u5236\u8bed\u8a00 - grant \/ revoke\n\n\n\u76f8\u5173\u77e5\u8bc6\n\n\u8303\u5f0f\u7406\u8bba - \u8bbe\u8ba1\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\n\u6570\u636e\u5b8c\u6574\u6027\n\u6570\u636e\u4e00\u81f4\u6027\n\n\n\u5728Python\u4e2d\u64cd\u4f5cMySQL\n\n\nNoSQL\u5165\u95e8\n\nNoSQL\u6982\u8ff0\nRedis\u6982\u8ff0\nMongo\u6982\u8ff0\n\n\n\nDay41~55 - \u5b9e\u6218Django\nDay41 - Django\u5feb\u901f\u4e0a\u624b\n\nWeb\u5e94\u7528\u5de5\u4f5c\u673a\u5236\nHTTP\u8bf7\u6c42\u548c\u54cd\u5e94\nDjango\u6846\u67b6\u6982\u8ff0\n5\u5206\u949f\u5feb\u901f\u4e0a\u624b\n\nDay42 - \u6df1\u5165\u6a21\u578b\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u914d\u7f6e\n\u4f7f\u7528ORM\u5b8c\u6210\u5bf9\u6a21\u578b\u7684CRUD\u64cd\u4f5c\n\u7ba1\u7406\u540e\u53f0\u7684\u4f7f\u7528\nDjango\u6a21\u578b\u6700\u4f73\u5b9e\u8df5\n\u6a21\u578b\u5b9a\u4e49\u53c2\u8003\n\nDay43 - \u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42\n\n\u52a0\u8f7d\u9759\u6001\u8d44\u6e90\nAjax\u6982\u8ff0\n\u7528Ajax\u5b9e\u73b0\u6295\u7968\u529f\u80fd\n\nDay44 - Cookie\u548cSession\n\n\u5b9e\u73b0\u7528\u6237\u8ddf\u8e2a\ncookie\u548csession\u7684\u5173\u7cfb\nDjango\u6846\u67b6\u5bf9session\u7684\u652f\u6301\n\u89c6\u56fe\u51fd\u6570\u4e2d\u7684cookie\u8bfb\u5199\u64cd\u4f5c\n\nDay45 - \u62a5\u8868\u548c\u65e5\u5fd7\n\n\u901a\u8fc7HttpResponse\u4fee\u6539\u54cd\u5e94\u5934\n\u4f7f\u7528StreamingHttpResponse\u5904\u7406\u5927\u6587\u4ef6\n\u4f7f\u7528xlwt\u751f\u6210Excel\u62a5\u8868\n\u4f7f\u7528reportlab\u751f\u6210PDF\u62a5\u8868\n\u4f7f\u7528ECharts\u751f\u6210\u524d\u7aef\u56fe\u8868\n\nDay46 - \u65e5\u5fd7\u548c\u8c03\u8bd5\u5de5\u5177\u680f\n\n\u914d\u7f6e\u65e5\u5fd7\n\u914d\u7f6eDjango-Debug-Toolbar\n\u4f18\u5316ORM\u4ee3\u7801\n\nDay47 - \u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\n\n\u4ec0\u4e48\u662f\u4e2d\u95f4\u4ef6\nDjango\u6846\u67b6\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\n\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u53ca\u5176\u5e94\u7528\u573a\u666f\n\nDay48 - \u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u5165\u95e8\n\n\u8fd4\u56deJSON\u683c\u5f0f\u7684\u6570\u636e\n\u7528Vue.js\u6e32\u67d3\u9875\u9762\n\nDay49 - RESTful\u67b6\u6784\u548cDRF\u5165\u95e8\nDay50 - RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636\nDay51 - \u4f7f\u7528\u7f13\u5b58\n\n\n\u7f51\u7ad9\u4f18\u5316\u7b2c\u4e00\u5b9a\u5f8b\n\n\n\u5728Django\u9879\u76ee\u4e2d\u4f7f\u7528Redis\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n\n\n\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8bfb\u5199\u7f13\u5b58\n\n\n\u4f7f\u7528\u88c5\u9970\u5668\u5b9e\u73b0\u9875\u9762\u7f13\u5b58\n\n\n\u4e3a\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n\n\nDay52 - \u63a5\u5165\u4e09\u65b9\u5e73\u53f0\n\n\u6587\u4ef6\u4e0a\u4f20\u8868\u5355\u63a7\u4ef6\u548c\u56fe\u7247\u6587\u4ef6\u9884\u89c8\n\u670d\u52a1\u5668\u7aef\u5982\u4f55\u5904\u7406\u4e0a\u4f20\u7684\u6587\u4ef6\n\nDay53 - \u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1\n\n\u7f51\u7ad9\u4f18\u5316\u7b2c\u4e8c\u5b9a\u5f8b\n\u914d\u7f6e\u6d88\u606f\u961f\u5217\u670d\u52a1\n\u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u4efb\u52a1\u5f02\u6b65\u5316\n\u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u5b9a\u65f6\u4efb\u52a1\n\nDay54 - \u5355\u5143\u6d4b\u8bd5\nDay55 - \u9879\u76ee\u4e0a\u7ebf\n\nPython\u4e2d\u7684\u5355\u5143\u6d4b\u8bd5\nDjango\u6846\u67b6\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u652f\u6301\n\u4f7f\u7528\u7248\u672c\u63a7\u5236\u7cfb\u7edf\n\u914d\u7f6e\u548c\u4f7f\u7528uWSGI\n\u52a8\u9759\u5206\u79bb\u548cNginx\u914d\u7f6e\n\u914d\u7f6eHTTPS\n\u914d\u7f6e\u57df\u540d\u89e3\u6790\n\nDay56~60 - \u7528FastAPI\u5f00\u53d1\u6570\u636e\u63a5\u53e3\n\nFastAPI\u4e94\u5206\u949f\u4e0a\u624b\n\u8bf7\u6c42\u548c\u54cd\u5e94\n\u63a5\u5165\u5173\u7cfb\u578b\u6570\u636e\u5e93\n\u4f9d\u8d56\u6ce8\u5165\n\u4e2d\u95f4\u4ef6\n\u5f02\u6b65\u5316\n\u865a\u62df\u5316\u90e8\u7f72\uff08Docker\uff09\n\u9879\u76ee\u5b9e\u6218\uff1a\u8f66\u8f86\u8fdd\u7ae0\u67e5\u8be2\u9879\u76ee\n\nDay61~65 - \u722c\u866b\u5f00\u53d1\nDay61 - \u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177\n\n\u7f51\u7edc\u722c\u866b\u7684\u6982\u5ff5\u53ca\u5176\u5e94\u7528\u9886\u57df\n\u7f51\u7edc\u722c\u866b\u7684\u5408\u6cd5\u6027\u63a2\u8ba8\n\u5f00\u53d1\u7f51\u7edc\u722c\u866b\u7684\u76f8\u5173\u5de5\u5177\n\u4e00\u4e2a\u722c\u866b\u7a0b\u5e8f\u7684\u6784\u6210\n\nDay62 - \u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790\n\n\u6570\u636e\u91c7\u96c6\u7684\u6807\u51c6\u548c\u4e09\u65b9\u5e93\n\u9875\u9762\u89e3\u6790\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790 \/ XPath\u89e3\u6790 \/ CSS\u9009\u62e9\u5668\u89e3\u6790\n\nDay63 - \u5b58\u50a8\u6570\u636e\n\n\u5982\u4f55\u5b58\u50a8\u6d77\u91cf\u6570\u636e\n\u5b9e\u73b0\u6570\u636e\u7684\u7f13\u5b58\n\nDay64 - \u5e76\u53d1\u4e0b\u8f7d\n\n\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\n\u5f02\u6b65I\/O\u548c\u534f\u7a0b\nasync\u548cawait\u5173\u952e\u5b57\u7684\u4f7f\u7528\n\u4e09\u65b9\u5e93aiohttp\u7684\u5e94\u7528\n\nDay65 - \u89e3\u6790\u52a8\u6001\u5185\u5bb9\n\nJavaScript\u9006\u5411\u5de5\u7a0b\n\u4f7f\u7528Selenium\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\n\nDay66~70 - \u6570\u636e\u5206\u6790\nDay66 - \u6570\u636e\u5206\u6790\u6982\u8ff0\nDay67 - NumPy\u7684\u5e94\u7528\nDay68 - Pandas\u7684\u5e94\u7528\nDay69 - \u6570\u636e\u53ef\u89c6\u5316\nDay70 - \u6570\u636e\u5206\u6790\u9879\u76ee\u5b9e\u6218\nDay71~85 - \u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\nDay71 - \u673a\u5668\u5b66\u4e60\u57fa\u7840\nDay72 - k\u6700\u8fd1\u90bb\u5206\u7c7b\nDay73 - \u51b3\u7b56\u6811\nDay74 - \u8d1d\u53f6\u65af\u5206\u7c7b\nDay75 - \u652f\u6301\u5411\u91cf\u673a\nDay76 - K-\u5747\u503c\u805a\u7c7b\nDay77 - \u56de\u5f52\u5206\u6790\nDay78 - \u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\nDay79 - Tensorflow\u6982\u8ff0\nDay80 - Tensorflow\u5b9e\u6218\nDay81 - Kaggle\u9879\u76ee\u5b9e\u6218\nDay82 - \u5929\u6c60\u5927\u6570\u636e\u9879\u76ee\u5b9e\u6218\nDay83 - \u63a8\u8350\u7cfb\u7edf\u5b9e\u6218-1\nDay84 - \u63a8\u8350\u7cfb\u7edf\u5b9e\u6218-2\nDay85 - \u63a8\u8350\u7cfb\u7edf\u5b9e\u6218-3\nDay86~90 - \u5927\u6570\u636e\u5206\u6790\u6982\u8ff0\n####Day86 - \u5927\u6570\u636e\u6982\u8ff0\nDay87 - Hive\u67e5\u8be2\nDay88 - PySpark\u548c\u79bb\u7ebf\u6570\u636e\u5904\u7406\nDay89 - Flink\u548c\u6d41\u5f0f\u6570\u636e\u5904\u7406\nDay90 - \u5927\u6570\u636e\u5206\u6790\u9879\u76ee\u5b9e\u6218\nDay91~100 - \u56e2\u961f\u9879\u76ee\u5f00\u53d1\n\u7b2c91\u5929\uff1a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\n\n\n\u8f6f\u4ef6\u8fc7\u7a0b\u6a21\u578b\n\n\n\u7ecf\u5178\u8fc7\u7a0b\u6a21\u578b\uff08\u7011\u5e03\u6a21\u578b\uff09\n\n\u53ef\u884c\u6027\u5206\u6790\uff08\u7814\u7a76\u505a\u8fd8\u662f\u4e0d\u505a\uff09\uff0c\u8f93\u51fa\u300a\u53ef\u884c\u6027\u5206\u6790\u62a5\u544a\u300b\u3002\n\u9700\u6c42\u5206\u6790\uff08\u7814\u7a76\u505a\u4ec0\u4e48\uff09\uff0c\u8f93\u51fa\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u548c\u4ea7\u54c1\u754c\u9762\u539f\u578b\u56fe\u3002\n\u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\uff0c\u8f93\u51fa\u6982\u5ff5\u6a21\u578b\u56fe\uff08ER\u56fe\uff09\u3001\u7269\u7406\u6a21\u578b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u7b49\u3002\n\u7f16\u7801 \/ \u6d4b\u8bd5\u3002\n\u4e0a\u7ebf \/ \u7ef4\u62a4\u3002\n\n\u7011\u5e03\u6a21\u578b\u6700\u5927\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u62e5\u62b1\u9700\u6c42\u53d8\u5316\uff0c\u6574\u5957\u6d41\u7a0b\u7ed3\u675f\u540e\u624d\u80fd\u770b\u5230\u4ea7\u54c1\uff0c\u56e2\u961f\u58eb\u6c14\u4f4e\u843d\u3002\n\n\n\u654f\u6377\u5f00\u53d1\uff08Scrum\uff09- \u4ea7\u54c1\u6240\u6709\u8005\u3001Scrum Master\u3001\u7814\u53d1\u4eba\u5458 - Sprint\n\n\u4ea7\u54c1\u7684Backlog\uff08\u7528\u6237\u6545\u4e8b\u3001\u4ea7\u54c1\u539f\u578b\uff09\u3002\n\u8ba1\u5212\u4f1a\u8bae\uff08\u8bc4\u4f30\u548c\u9884\u7b97\uff09\u3002\n\u65e5\u5e38\u5f00\u53d1\uff08\u7ad9\u7acb\u4f1a\u8bae\u3001\u756a\u8304\u5de5\u4f5c\u6cd5\u3001\u7ed3\u5bf9\u7f16\u7a0b\u3001\u6d4b\u8bd5\u5148\u884c\u3001\u4ee3\u7801\u91cd\u6784\u2026\u2026\uff09\u3002\n\u4fee\u590dbug\uff08\u95ee\u9898\u63cf\u8ff0\u3001\u91cd\u73b0\u6b65\u9aa4\u3001\u6d4b\u8bd5\u4eba\u5458\u3001\u88ab\u6307\u6d3e\u4eba\uff09\u3002\n\u53d1\u5e03\u7248\u672c\u3002\n\u8bc4\u5ba1\u4f1a\u8bae\uff08Showcase\uff0c\u7528\u6237\u9700\u8981\u53c2\u4e0e\uff09\u3002\n\u56de\u987e\u4f1a\u8bae\uff08\u5bf9\u5f53\u524d\u8fed\u4ee3\u5468\u671f\u505a\u4e00\u4e2a\u603b\u7ed3\uff09\u3002\n\n\n\u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u5ba3\u8a00\n\n\u4e2a\u4f53\u548c\u4e92\u52a8 \u9ad8\u4e8e \u6d41\u7a0b\u548c\u5de5\u5177\n\u5de5\u4f5c\u7684\u8f6f\u4ef6 \u9ad8\u4e8e \u8be6\u5c3d\u7684\u6587\u6863\n\u5ba2\u6237\u5408\u4f5c \u9ad8\u4e8e \u5408\u540c\u8c08\u5224\n\u54cd\u5e94\u53d8\u5316 \u9ad8\u4e8e \u9075\u5faa\u8ba1\u5212\n\n\n\n\n\u89d2\u8272\uff1a\u4ea7\u54c1\u6240\u6709\u8005\uff08\u51b3\u5b9a\u505a\u4ec0\u4e48\uff0c\u80fd\u5bf9\u9700\u6c42\u62cd\u677f\u7684\u4eba\uff09\u3001\u56e2\u961f\u8d1f\u8d23\u4eba\uff08\u89e3\u51b3\u5404\u79cd\u95ee\u9898\uff0c\u4e13\u6ce8\u5982\u4f55\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5c4f\u853d\u5916\u90e8\u5bf9\u5f00\u53d1\u56e2\u961f\u7684\u5f71\u54cd\uff09\u3001\u5f00\u53d1\u56e2\u961f\uff08\u9879\u76ee\u6267\u884c\u4eba\u5458\uff0c\u5177\u4f53\u6307\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\uff09\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\uff1a\u5546\u4e1a\u6848\u4f8b\u548c\u8d44\u91d1\u3001\u5408\u540c\u3001\u61a7\u61ac\u3001\u521d\u59cb\u4ea7\u54c1\u9700\u6c42\u3001\u521d\u59cb\u53d1\u5e03\u8ba1\u5212\u3001\u5165\u80a1\u3001\u7ec4\u5efa\u56e2\u961f\u3002\n\n\n\u654f\u6377\u56e2\u961f\u901a\u5e38\u4eba\u6570\u4e3a8-10\u4eba\u3002\n\n\n\u5de5\u4f5c\u91cf\u4f30\u7b97\uff1a\u5c06\u5f00\u53d1\u4efb\u52a1\u91cf\u5316\uff0c\u5305\u62ec\u539f\u578b\u3001Logo\u8bbe\u8ba1\u3001UI\u8bbe\u8ba1\u3001\u524d\u7aef\u5f00\u53d1\u7b49\uff0c\u5c3d\u91cf\u628a\u6bcf\u4e2a\u5de5\u4f5c\u5206\u89e3\u5230\u6700\u5c0f\u4efb\u52a1\u91cf\uff0c\u6700\u5c0f\u4efb\u52a1\u91cf\u6807\u51c6\u4e3a\u5de5\u4f5c\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u4e24\u5929\uff0c\u7136\u540e\u4f30\u7b97\u603b\u4f53\u9879\u76ee\u65f6\u95f4\u3002\u628a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8d34\u5728\u770b\u677f\u4e0a\u9762\uff0c\u770b\u677f\u4e0a\u5206\u4e09\u90e8\u5206\uff1ato do\uff08\u5f85\u5b8c\u6210\uff09\u3001in progress\uff08\u8fdb\u884c\u4e2d\uff09\u548cdone\uff08\u5df2\u5b8c\u6210\uff09\u3002\n\n\n\n\n\n\u9879\u76ee\u56e2\u961f\u7ec4\u5efa\n\n\n\u56e2\u961f\u7684\u6784\u6210\u548c\u89d2\u8272\n\n\u8bf4\u660e\uff1a\u8c22\u8c22\u4ed8\u7965\u82f1\u5973\u58eb\u5e2e\u52a9\u6211\u7ed8\u5236\u4e86\u4e0b\u9762\u8fd9\u5f20\u7cbe\u7f8e\u7684\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u56fe\u3002\n\n\n\n\n\u7f16\u7a0b\u89c4\u8303\u548c\u4ee3\u7801\u5ba1\u67e5\uff08flake8\u3001pylint\uff09\n\n\n\nPython\u4e2d\u7684\u4e00\u4e9b\u201c\u60ef\u4f8b\u201d\uff08\u8bf7\u53c2\u8003\u300aPython\u60ef\u4f8b-\u5982\u4f55\u7f16\u5199Pythonic\u7684\u4ee3\u7801\u300b\uff09\n\n\n\u5f71\u54cd\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u539f\u56e0\uff1a\n\n\u4ee3\u7801\u6ce8\u91ca\u592a\u5c11\u6216\u8005\u6ca1\u6709\u6ce8\u91ca\n\u4ee3\u7801\u7834\u574f\u4e86\u8bed\u8a00\u7684\u6700\u4f73\u5b9e\u8df5\n\u53cd\u6a21\u5f0f\u7f16\u7a0b\uff08\u610f\u5927\u5229\u9762\u4ee3\u7801\u3001\u590d\u5236-\u9ecf\u8d34\u7f16\u7a0b\u3001\u81ea\u8d1f\u7f16\u7a0b\u3001\u2026\u2026\uff09\n\n\n\n\n\n\u56e2\u961f\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd\n\n\u7248\u672c\u63a7\u5236\uff1aGit\u3001Mercury\n\u7f3a\u9677\u7ba1\u7406\uff1aGitlab\u3001Redmine\n\u654f\u6377\u95ed\u73af\u5de5\u5177\uff1a\u7985\u9053\u3001JIRA\n\u6301\u7eed\u96c6\u6210\uff1aJenkins\u3001Travis-CI\n\n\u8bf7\u53c2\u8003\u300a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u300b\u3002\n\n\n\u9879\u76ee\u9009\u9898\u548c\u7406\u89e3\u4e1a\u52a1\n\n\n\u9009\u9898\u8303\u56f4\u8bbe\u5b9a\n\n\nCMS\uff08\u7528\u6237\u7aef\uff09\uff1a\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3001\u95ee\u7b54\/\u5206\u4eab\u793e\u533a\u3001\u5f71\u8bc4\/\u4e66\u8bc4\u7f51\u7ad9\u7b49\u3002\n\n\nMIS\uff08\u7528\u6237\u7aef+\u7ba1\u7406\u7aef\uff09\uff1aKMS\u3001KPI\u8003\u6838\u7cfb\u7edf\u3001HRS\u3001CRM\u7cfb\u7edf\u3001\u4f9b\u5e94\u94fe\u7cfb\u7edf\u3001\u4ed3\u50a8\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002\n\n\nApp\u540e\u53f0\uff08\u7ba1\u7406\u7aef+\u6570\u636e\u63a5\u53e3\uff09\uff1a\u4e8c\u624b\u4ea4\u6613\u7c7b\u3001\u62a5\u520a\u6742\u5fd7\u7c7b\u3001\u5c0f\u4f17\u7535\u5546\u7c7b\u3001\u65b0\u95fb\u8d44\u8baf\u7c7b\u3001\u65c5\u6e38\u7c7b\u3001\u793e\u4ea4\u7c7b\u3001\u9605\u8bfb\u7c7b\u7b49\u3002\n\n\n\u5176\u4ed6\u7c7b\u578b\uff1a\u81ea\u8eab\u884c\u4e1a\u80cc\u666f\u548c\u5de5\u4f5c\u7ecf\u9a8c\u3001\u4e1a\u52a1\u5bb9\u6613\u7406\u89e3\u548c\u628a\u63a7\u3002\n\n\n\n\n\u9700\u6c42\u7406\u89e3\u3001\u6a21\u5757\u5212\u5206\u548c\u4efb\u52a1\u5206\u914d\n\n\u9700\u6c42\u7406\u89e3\uff1a\u5934\u8111\u98ce\u66b4\u548c\u7ade\u54c1\u5206\u6790\u3002\n\u6a21\u5757\u5212\u5206\uff1a\u753b\u601d\u7ef4\u5bfc\u56fe\uff08XMind\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u679d\u8282\u70b9\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u529f\u80fd\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u7528\u52a8\u8bcd\u8868\u8ff0\uff09\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u65e0\u6cd5\u518d\u751f\u51fa\u65b0\u8282\u70b9\uff0c\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u8981\u6027\u3001\u4f18\u5148\u7ea7\u548c\u5de5\u4f5c\u91cf\u3002\n\u4efb\u52a1\u5206\u914d\uff1a\u7531\u9879\u76ee\u8d1f\u8d23\u4eba\u6839\u636e\u4e0a\u9762\u7684\u6307\u6807\u4e3a\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u5206\u914d\u4efb\u52a1\u3002\n\n\n\n\n\u5236\u5b9a\u9879\u76ee\u8fdb\u5ea6\u8868\uff08\u6bcf\u65e5\u66f4\u65b0\uff09\n\n\n\n\u6a21\u5757\n\u529f\u80fd\n\u4eba\u5458\n\u72b6\u6001\n\u5b8c\u6210\n\u5de5\u65f6\n\u8ba1\u5212\u5f00\u59cb\n\u5b9e\u9645\u5f00\u59cb\n\u8ba1\u5212\u7ed3\u675f\n\u5b9e\u9645\u7ed3\u675f\n\u5907\u6ce8\n\n\n\n\n\u8bc4\u8bba\n\u6dfb\u52a0\u8bc4\u8bba\n\u738b\u5927\u9524\n\u6b63\u5728\u8fdb\u884c\n50%\n4\n2018\/8\/7\n\n2018\/8\/7\n\n\n\n\n\n\u5220\u9664\u8bc4\u8bba\n\u738b\u5927\u9524\n\u7b49\u5f85\n0%\n2\n2018\/8\/7\n\n2018\/8\/7\n\n\n\n\n\n\u67e5\u770b\u8bc4\u8bba\n\u767d\u5143\u82b3\n\u6b63\u5728\u8fdb\u884c\n20%\n4\n2018\/8\/7\n\n2018\/8\/7\n\n\u9700\u8981\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\n\n\n\n\u8bc4\u8bba\u6295\u7968\n\u767d\u5143\u82b3\n\u7b49\u5f85\n0%\n4\n2018\/8\/8\n\n2018\/8\/8\n\n\n\n\n\n\n\nOOAD\u548c\u6570\u636e\u5e93\u8bbe\u8ba1\n\n\n\n\nUML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u7c7b\u56fe\n\n\n\n\u901a\u8fc7\u6a21\u578b\u521b\u5efa\u8868\uff08\u6b63\u5411\u5de5\u7a0b\uff09\npython manage.py makemigrations app\npython manage.py migrate\n\n\n\u4f7f\u7528PowerDesigner\u7ed8\u5236\u7269\u7406\u6a21\u578b\u56fe\u3002\n\n\n\n\u901a\u8fc7\u6570\u636e\u8868\u521b\u5efa\u6a21\u578b\uff08\u53cd\u5411\u5de5\u7a0b\uff09\npython manage.py inspectdb > app\/models.py\n\n\n\u7b2c92\u5929\uff1aDocker\u5bb9\u5668\u8be6\u89e3\n\nDocker\u7b80\u4ecb\n\u5b89\u88c5Docker\n\u4f7f\u7528Docker\u521b\u5efa\u5bb9\u5668\uff08Nginx\u3001MySQL\u3001Redis\u3001Gitlab\u3001Jenkins\uff09\n\u6784\u5efaDocker\u955c\u50cf\uff08Dockerfile\u7684\u7f16\u5199\u548c\u76f8\u5173\u6307\u4ee4\uff09\n\u5bb9\u5668\u7f16\u6392\uff08Docker-compose\uff09\n\u96c6\u7fa4\u7ba1\u7406\uff08Kubernetes\uff09\n\n\u7b2c93\u5929\uff1aMySQL\u6027\u80fd\u4f18\u5316\n\u7b2c94\u5929\uff1a\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1\n\u7b2c95\u5929\uff1a[\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\u76ee](.\/Day91-100\/95.\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\t\u76ee.md)\n\u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\n\u6570\u636e\u5e93\u7684\u914d\u7f6e\uff08\u591a\u6570\u636e\u5e93\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6570\u636e\u5e93\u8def\u7531\uff09\n\u7f13\u5b58\u7684\u914d\u7f6e\uff08\u5206\u533a\u7f13\u5b58\u3001\u952e\u8bbe\u7f6e\u3001\u8d85\u65f6\u8bbe\u7f6e\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6545\u969c\u6062\u590d\uff08\u54e8\u5175\uff09\uff09\n\u65e5\u5fd7\u7684\u914d\u7f6e\n\u5206\u6790\u548c\u8c03\u8bd5\uff08Django-Debug-ToolBar\uff09\n\u597d\u7528\u7684Python\u6a21\u5757\uff08\u65e5\u671f\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u636e\u52a0\u5bc6\u3001\u4e09\u65b9API\uff09\n\nREST API\u8bbe\u8ba1\n\nRESTful\u67b6\u6784\n\n\u7406\u89e3RESTful\u67b6\u6784\nRESTful API\u8bbe\u8ba1\u6307\u5357\nRESTful API\u6700\u4f73\u5b9e\u8df5\n\n\nAPI\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n\nRAP2\nYAPI\n\n\ndjango-REST-framework\u7684\u5e94\u7528\n\n\u9879\u76ee\u4e2d\u7684\u91cd\u70b9\u96be\u70b9\u5256\u6790\n\n\u4f7f\u7528\u7f13\u5b58\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b - Redis\n\u4f7f\u7528\u6d88\u606f\u961f\u5217\u505a\u89e3\u8026\u5408\u548c\u524a\u5cf0 - Celery + RabbitMQ\n\n\u7b2c96\u5929\uff1a\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u5355\u5143\u6d4b\u8bd5\n\n\u6d4b\u8bd5\u7684\u79cd\u7c7b\n\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08unittest\u3001pytest\u3001nose2\u3001tox\u3001ddt\u3001\u2026\u2026\uff09\n\u6d4b\u8bd5\u8986\u76d6\u7387\uff08coverage\uff09\n\n\u9879\u76ee\u90e8\u7f72\n\n\u90e8\u7f72\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n\n\u5173\u952e\u8bbe\u7f6e\uff08SECRET_KEY \/ DEBUG \/ ALLOWED_HOSTS \/ \u7f13\u5b58 \/ \u6570\u636e\u5e93\uff09\nHTTPS \/ CSRF_COOKIE_SECUR  \/ SESSION_COOKIE_SECURE\n\u65e5\u5fd7\u76f8\u5173\u914d\u7f6e\n\n\nLinux\u5e38\u7528\u547d\u4ee4\u56de\u987e\nLinux\u5e38\u7528\u670d\u52a1\u7684\u5b89\u88c5\u548c\u914d\u7f6e\nuWSGI\/Gunicorn\u548cNginx\u7684\u4f7f\u7528\n\nGunicorn\u548cuWSGI\u7684\u6bd4\u8f83\n\n\u5bf9\u4e8e\u4e0d\u9700\u8981\u5927\u91cf\u5b9a\u5236\u5316\u7684\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\uff0cGunicorn\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cuWSGI\u7684\u5b66\u4e60\u66f2\u7ebf\u6bd4Gunicorn\u8981\u9661\u5ced\u5f97\u591a\uff0cGunicorn\u7684\u9ed8\u8ba4\u53c2\u6570\u5c31\u5df2\u7ecf\u80fd\u591f\u9002\u5e94\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\nuWSGI\u652f\u6301\u5f02\u6784\u90e8\u7f72\u3002\n\u7531\u4e8eNginx\u672c\u8eab\u652f\u6301uWSGI\uff0c\u5728\u7ebf\u4e0a\u4e00\u822c\u90fd\u5c06Nginx\u548cuWSGI\u6346\u7ed1\u5728\u4e00\u8d77\u90e8\u7f72\uff0c\u800c\u4e14uWSGI\u5c5e\u4e8e\u529f\u80fd\u9f50\u5168\u4e14\u9ad8\u5ea6\u5b9a\u5236\u7684WSGI\u4e2d\u95f4\u4ef6\u3002\n\u5728\u6027\u80fd\u4e0a\uff0cGunicorn\u548cuWSGI\u5176\u5b9e\u8868\u73b0\u76f8\u5f53\u3002\n\n\n\n\n\u4f7f\u7528\u865a\u62df\u5316\u6280\u672f\uff08Docker\uff09\u90e8\u7f72\u6d4b\u8bd5\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\n\n\u6027\u80fd\u6d4b\u8bd5\n\nAB\u7684\u4f7f\u7528\nSQLslap\u7684\u4f7f\u7528\nsysbench\u7684\u4f7f\u7528\n\n\u81ea\u52a8\u5316\u6d4b\u8bd5\n\n\u4f7f\u7528Shell\u548cPython\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\n\nSelenium IDE\nSelenium WebDriver\nSelenium Remote Control\n\n\n\u6d4b\u8bd5\u5de5\u5177Robot Framework\u4ecb\u7ecd\n\n\u7b2c97\u5929\uff1a\u7535\u5546\u7f51\u7ad9\u6280\u672f\u8981\u70b9\u5256\u6790\n\u7b2c98\u5929\uff1a\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u548c\u6027\u80fd\u8c03\u4f18\n\nMySQL\u6570\u636e\u5e93\u8c03\u4f18\nWeb\u670d\u52a1\u5668\u6027\u80fd\u4f18\u5316\n\nNginx\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\nKeepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\n\n\n\u4ee3\u7801\u6027\u80fd\u8c03\u4f18\n\n\u591a\u7ebf\u7a0b\n\u5f02\u6b65\u5316\n\n\n\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u4f18\u5316\n\n\u4e91\u5b58\u50a8\nCDN\n\n\n\n\u7b2c99\u5929\uff1a\u9762\u8bd5\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\u7b2c100\u5929\uff1aPython\u9762\u8bd5\u9898\u5b9e\u5f55\n","113":"The Algorithms - Python\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nAll algorithms implemented in Python (for education)\nThese implementations are for learning purposes only. Therefore they may be less efficient than the implementations in the Python standard library.\nContribution Guidelines\nRead our Contribution Guidelines before you contribute.\nCommunity Channel\nWe're on Gitter!  Please join us.\nList of Algorithms\nSee our directory.\n","114":"Awesome Python \nA curated list of awesome Python frameworks, libraries, software and resources.\nInspired by awesome-php.\n\nAwesome Python\n\nAdmin Panels\nAlgorithms and Design Patterns\nASGI Servers\nAsynchronous Programming\nAudio\nAuthentication\nBuild Tools\nBuilt-in Classes Enhancement\nCaching\nChatOps Tools\nCMS\nCode Analysis\nCommand-line Interface Development\nCommand-line Tools\nCompatibility\nComputer Vision\nConcurrency and Parallelism\nConfiguration\nCryptography\nData Analysis\nData Validation\nData Visualization\nDatabase Drivers\nDatabase\nDate and Time\nDebugging Tools\nDeep Learning\nDevOps Tools\nDistributed Computing\nDistribution\nDocumentation\nDownloader\nE-commerce\nEditor Plugins and IDEs\nEmail\nEnterprise Application Integrations\nEnvironment Management\nFiles\nForeign Function Interface\nForms\nFunctional Programming\nGame Development\nGeolocation\nGUI Development\nHardware\nHTML Manipulation\nHTTP Clients\nImage Processing\nImplementations\nInteractive Interpreter\nInternationalization\nJob Scheduler\nLogging\nMachine Learning\nMiscellaneous\nNatural Language Processing\nNetwork Virtualization\nNews Feed\nORM\nPackage Management\nPackage Repositories\nPenetration testing\nPermissions\nProcesses\nRecommender Systems\nRefactoring\nRESTful API\nRobotics\nRPC Servers\nScience\nSearch\nSerialization\nServerless Frameworks\nShell\nSpecific Formats Processing\nStatic Site Generator\nTagging\nTask Queues\nTemplate Engine\nTesting\nText Processing\nThird-party APIs\nURL Manipulation\nVideo\nWeb Asset Management\nWeb Content Extracting\nWeb Crawling\nWeb Frameworks\nWebSocket\nWSGI Servers\n\n\nResources\n\nBooks\nNewsletters\nPodcasts\nWebsites\n\n\nContributing\n\n\nAdmin Panels\nLibraries for administrative interfaces.\n\najenti - The admin panel your servers deserve.\ndjango-grappelli - A jazzy skin for the Django Admin-Interface.\ndjango-jet - Modern responsive template for the Django admin interface with improved functionality.\ndjango-suit - Alternative Django Admin-Interface (free only for Non-commercial use).\ndjango-xadmin - Drop-in replacement of Django admin comes with lots of goodies.\nflask-admin - Simple and extensible administrative interface framework for Flask.\nflower - Real-time monitor and web admin for Celery.\njet-bridge - Admin panel framework for any application with nice UI (ex Jet Django)\nwooey - A Django app which creates automatic web UIs for Python scripts.\n\nAlgorithms and Design Patterns\nPython implementation of data structures, algorithms and design patterns. Also see awesome-algorithms.\n\nAlgorithms\n\nalgorithms - Minimal examples of data structures and algorithms.\npython-ds - A collection of data structure and algorithms for coding interviews.\nsortedcontainers - Fast and pure-Python implementation of sorted collections.\nTheAlgorithms - All Algorithms implemented in Python.\n\n\nDesign Patterns\n\nPyPattyrn - A simple yet effective library for implementing common design patterns.\npython-patterns - A collection of design patterns in Python.\ntransitions - A lightweight, object-oriented finite state machine implementation.\n\n\n\nASGI Servers\nASGI-compatible web servers.\n\ndaphne - A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP.\nuvicorn - A lightning-fast ASGI server implementation, using uvloop and httptools.\n\nAsynchronous Programming\n\nasyncio - (Python standard library) Asynchronous I\/O, event loop, coroutines and tasks.\n\nawesome-asyncio\n\n\ntrio - A friendly library for async concurrency and I\/O.\nTwisted - An event-driven networking engine.\nuvloop - Ultra fast asyncio event loop.\n\nAudio\nLibraries for manipulating audio and its metadata.\n\nAudio\n\naudioread - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\ndejavu - Audio fingerprinting and recognition.\nkapre - Keras Audio Preprocessors\nlibrosa - Python library for audio and music analysis\nmatchering - A library for automated reference audio mastering.\nmingus - An advanced music theory and notation package with MIDI file and playback support.\npyAudioAnalysis - Audio feature extraction, classification, segmentation and applications.\npydub - Manipulate audio with a simple and easy high level interface.\nTimeSide - Open web audio processing framework.\n\n\nMetadata\n\nbeets - A music library manager and MusicBrainz tagger.\neyeD3 - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\nmutagen - A Python module to handle audio metadata.\ntinytag - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n\n\nAuthentication\nLibraries for implementing authentications schemes.\n\nOAuth\n\nauthlib - JavaScript Object Signing and Encryption draft implementation.\ndjango-allauth - Authentication app for Django that \"just works.\"\ndjango-oauth-toolkit - OAuth 2 goodies for Django.\noauthlib - A generic and thorough implementation of the OAuth request-signing logic.\npython-oauth2 - A fully tested, abstract interface to creating OAuth clients and servers.\npython-social-auth - An easy-to-setup social authentication mechanism.\n\n\nJWT\n\npyjwt - JSON Web Token implementation in Python.\npython-jose - A JOSE implementation in Python.\npython-jwt - A module for generating and verifying JSON Web Tokens.\n\n\n\nBuild Tools\nCompile software from source code.\n\nBitBake - A make-like build tool for embedded Linux.\nbuildout - A build system for creating, assembling and deploying applications from multiple parts.\nPlatformIO - A console tool to build code with different development platforms.\npybuilder - A continuous build tool written in pure Python.\nSCons - A software construction tool.\n\nBuilt-in Classes Enhancement\nLibraries for enhancing Python built-in classes.\n\nattrs - Replacement for __init__, __eq__, __repr__, etc. boilerplate in class definitions.\nbidict - Efficient, Pythonic bidirectional map data structures and related functionality..\nBox - Python dictionaries with advanced dot notation access.\ndataclasses - (Python standard library) Data classes.\nDottedDict - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\nCMS\nContent Management Systems.\n\ndjango-cms - An Open source enterprise CMS based on the Django.\nfeincms - One of the most advanced Content Management Systems built on Django.\nindico - A feature-rich event management system, made @ CERN.\nKotti - A high-level, Pythonic web application framework built on Pyramid.\nmezzanine - A powerful, consistent, and flexible content management platform.\nplone - A CMS built on top of the open source application server Zope.\nquokka - Flexible, extensible, small CMS powered by Flask and MongoDB.\nwagtail - A Django content management system.\n\nCaching\nLibraries for caching data.\n\nbeaker - A WSGI middleware for sessions and caching.\ndjango-cache-machine - Automatic caching and invalidation for Django models.\ndjango-cacheops - A slick ORM cache with automatic granular event-driven invalidation.\ndogpile.cache - dogpile.cache is next generation replacement for Beaker made by same authors.\nHermesCache - Python caching library with tag-based invalidation and dogpile effect prevention.\npylibmc - A Python wrapper around the libmemcached interface.\npython-diskcache - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\nChatOps Tools\nLibraries for chatbot development.\n\nerrbot - The easiest and most popular chatbot to implement ChatOps.\n\nCode Analysis\nTools of static analysis, linters and code quality checkers. Also see awesome-static-analysis.\n\nCode Analysis\n\ncoala - Language independent and easily extendable code analysis application.\ncode2flow - Turn your Python and JavaScript code into DOT flowcharts.\nprospector - A tool to analyse Python code.\npycallgraph - A library that visualises the flow (call graph) of your Python application.\nvulture - A tool for finding and analysing dead Python code.\n\n\nCode Linters\n\nflake8 - A wrapper around pycodestyle, pyflakes and McCabe.\n\nawesome-flake8-extensions\n\n\npylama - A code audit tool for Python and JavaScript.\npylint - A fully customizable source code analyzer.\nwemake-python-styleguide - The strictest and most opinionated python linter ever.\n\n\nCode Formatters\n\nblack - The uncompromising Python code formatter.\nisort - A Python utility \/ library to sort imports.\nyapf - Yet another Python code formatter from Google.\n\n\nStatic Type Checkers, also see awesome-python-typing\n\nmypy - Check variable types during compile time.\npyre-check - Performant type checking.\ntypeshed - Collection of library stubs for Python, with static types.\n\n\nStatic Type Annotations Generators\n\nMonkeyType - A system for Python that generates static type annotations by collecting runtime types.\npyannotate - Auto-generate PEP-484 annotations.\npytype - Pytype checks and infers types for Python code - without requiring type annotations.\n\n\n\nCommand-line Interface Development\nLibraries for building command-line applications.\n\nCommand-line Application Development\n\ncement - CLI Application Framework for Python.\nclick - A package for creating beautiful command line interfaces in a composable way.\ncliff - A framework for creating command-line programs with multi-level commands.\ndocopt - Pythonic command line arguments parser.\npython-fire - A library for creating command line interfaces from absolutely any Python object.\npython-prompt-toolkit - A library for building powerful interactive command lines.\n\n\nTerminal Rendering\n\nalive-progress - A new kind of Progress Bar, with real-time throughput, eta and very cool animations.\nasciimatics - A package to create full-screen text UIs (from interactive forms to ASCII animations).\nbashplotlib - Making basic plots in the terminal.\ncolorama - Cross-platform colored terminal text.\nrich - Python library for rich text and beautiful formatting in the terminal. Also provides a great RichHandler log handler.\ntqdm - Fast, extensible progress bar for loops and CLI.\n\n\n\nCommand-line Tools\nUseful CLI-based tools for productivity.\n\nProductivity Tools\n\ncopier - A library and command-line utility for rendering projects templates.\ncookiecutter - A command-line utility that creates projects from cookiecutters (project templates).\ndoitlive - A tool for live presentations in the terminal.\nhowdoi - Instant coding answers via the command line.\nInvoke - A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\nPathPicker - Select files out of bash output.\npercol - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\nthefuck - Correcting your previous console command.\ntmuxp - A tmux session manager.\ntry - A dead simple CLI to try out python packages - it's never been easier.\n\n\nCLI Enhancements\n\nhttpie - A command line HTTP client, a user-friendly cURL replacement.\niredis - Redis CLI with autocompletion and syntax highlighting.\nkube-shell - An integrated shell for working with the Kubernetes CLI.\nlitecli - SQLite CLI with autocompletion and syntax highlighting.\nmycli - MySQL CLI with autocompletion and syntax highlighting.\npgcli - PostgreSQL CLI with autocompletion and syntax highlighting.\nsaws - A Supercharged aws-cli.\n\n\n\nCompatibility\nLibraries for migrating from Python 2 to 3.\n\npython-future - The missing compatibility layer between Python 2 and Python 3.\nmodernize - Modernizes Python code for eventual Python 3 migration.\nsix - Python 2 and 3 compatibility utilities.\n\nComputer Vision\nLibraries for Computer Vision.\n\nEasyOCR - Ready-to-use OCR with 40+ languages supported.\nFace Recognition - Simple facial recognition library.\nKornia - Open Source Differentiable Computer Vision Library for PyTorch.\nOpenCV - Open Source Computer Vision Library.\npytesseract - A wrapper for Google Tesseract OCR.\nSimpleCV - An open source framework for building computer vision applications.\ntesserocr - Another simple, Pillow-friendly, wrapper around the tesseract-ocr API for OCR.\n\nConcurrency and Parallelism\nLibraries for concurrent and parallel execution. Also see awesome-asyncio.\n\nconcurrent.futures - (Python standard library) A high-level interface for asynchronously executing callables.\neventlet - Asynchronous framework with WSGI support.\ngevent - A coroutine-based Python networking library that uses greenlet.\nmultiprocessing - (Python standard library) Process-based parallelism.\nscoop - Scalable Concurrent Operations in Python.\nuvloop - Ultra fast implementation of asyncio event loop on top of libuv.\n\nConfiguration\nLibraries for storing and parsing configuration options.\n\nconfigobj - INI file parser with validation.\nconfigparser - (Python standard library) INI file parser.\nhydra - Hydra is a framework for elegantly configuring complex applications.\nprofig - Config from multiple formats with value conversion.\npython-decouple - Strict separation of settings from code.\n\nCryptography\n\ncryptography - A package designed to expose cryptographic primitives and recipes to Python developers.\nparamiko - The leading native Python SSHv2 protocol library.\npasslib - Secure password storage\/hashing library, very high level.\npynacl - Python binding to the Networking and Cryptography (NaCl) library.\n\nData Analysis\nLibraries for data analyzing.\n\nAWS Data Wrangler - Pandas on AWS.\nBlaze - NumPy and Pandas interface to Big Data.\nOpen Mining - Business Intelligence (BI) in Pandas interface.\nOptimus - Agile Data Science Workflows made easy with PySpark.\nOrange - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\nPandas - A library providing high-performance, easy-to-use data structures and data analysis tools.\n\nData Validation\nLibraries for validating data. Used for forms in many cases.\n\nCerberus - A lightweight and extensible data validation library.\ncolander - Validating and deserializing data obtained via XML, JSON, an HTML form post.\njsonschema - An implementation of JSON Schema for Python.\nschema - A library for validating Python data structures.\nSchematics - Data Structure Validation.\nvalideer - Lightweight extensible data validation and adaptation library.\nvoluptuous - A Python data validation library.\n\nData Visualization\nLibraries for visualizing data. Also see awesome-javascript.\n\nAltair - Declarative statistical visualization library for Python.\nBokeh - Interactive Web Plotting for Python.\nbqplot - Interactive Plotting Library for the Jupyter Notebook\nCartopy - A cartographic python library with matplotlib support\nDash - Built on top of Flask, React and Plotly aimed at analytical web applications.\n\nawesome-dash\n\n\ndiagrams - Diagram as Code.\nMatplotlib - A Python 2D plotting library.\nplotnine - A grammar of graphics for Python based on ggplot2.\nPygal - A Python SVG Charts Creator.\nPyGraphviz - Python interface to Graphviz.\nPyQtGraph - Interactive and realtime 2D\/3D\/Image plotting and science\/engineering widgets.\nSeaborn - Statistical data visualization using Matplotlib.\nVisPy - High-performance scientific visualization based on OpenGL.\n\nDatabase\nDatabases implemented in Python.\n\npickleDB - A simple and lightweight key-value store for Python.\ntinydb - A tiny, document-oriented database.\nZODB - A native object database for Python. A key-value and object graph database.\n\nDatabase Drivers\nLibraries for connecting and operating databases.\n\nMySQL - awesome-mysql\n\nmysqlclient - MySQL connector with Python 3 support (mysql-python fork).\nPyMySQL - A pure Python MySQL driver compatible to mysql-python.\n\n\nPostgreSQL - awesome-postgres\n\npsycopg2 - The most popular PostgreSQL adapter for Python.\nqueries - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n\n\nOther Relational Databases\n\npymssql - A simple database interface to Microsoft SQL Server.\nSuperSQLite - A supercharged SQLite library built on top of apsw.\n\n\nNoSQL Databases\n\ncassandra-driver - The Python Driver for Apache Cassandra.\nhappybase - A developer-friendly library for Apache HBase.\nkafka-python - The Python client for Apache Kafka.\npy2neo - A client library and toolkit for working with Neo4j.\npymongo - The official Python client for MongoDB.\nredis-py - The Python client for Redis.\n\n\nAsynchronous Clients\n\nmotor - The async Python driver for MongoDB.\n\n\n\nDate and Time\nLibraries for working with dates and times.\n\nArrow - A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\nChronyk - A Python 3 library for parsing human-written times and dates.\ndateutil - Extensions to the standard Python datetime module.\ndelorean - A library for clearing up the inconvenient truths that arise dealing with datetimes.\nmaya - Datetimes for Humans.\nmoment - A Python library for dealing with dates\/times. Inspired by Moment.js.\nPendulum - Python datetimes made easy.\nPyTime - An easy-to-use Python module which aims to operate date\/time\/datetime by string.\npytz - World timezone definitions, modern and historical. Brings the tz database into Python.\nwhen.py - Providing user-friendly functions to help perform common date and time actions.\n\nDebugging Tools\nLibraries for debugging code.\n\npdb-like Debugger\n\nipdb - IPython-enabled pdb.\npdb++ - Another drop-in replacement for pdb.\npudb - A full-screen, console-based Python debugger.\nwdb - An improbable web debugger through WebSockets.\n\n\nTracing\n\nlptrace - strace for Python programs.\nmanhole - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\npyringe - Debugger capable of attaching to and injecting code into Python processes.\npython-hunter - A flexible code tracing toolkit.\n\n\nProfiler\n\nline_profiler - Line-by-line profiling.\nmemory_profiler - Monitor Memory usage of Python code.\nprofiling - An interactive Python profiler.\npy-spy - A sampling profiler for Python programs. Written in Rust.\npyflame - A ptracing profiler For Python.\nvprof - Visual Python profiler.\n\n\nOthers\n\ndjango-debug-toolbar - Display various debug information for Django.\ndjango-devserver - A drop-in replacement for Django's runserver.\nflask-debugtoolbar - A port of the django-debug-toolbar to flask.\nicecream - Inspect variables, expressions, and program execution with a single, simple function call.\npyelftools - Parsing and analyzing ELF files and DWARF debugging information.\n\n\n\nDeep Learning\nFrameworks for Neural Networks and Deep Learning. Also see awesome-deep-learning.\n\ncaffe - A fast open framework for deep learning..\nkeras - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\nmxnet - A deep learning framework designed for both efficiency and flexibility.\npytorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\nSerpentAI - Game agent framework. Use any video game as a deep learning sandbox.\ntensorflow - The most popular Deep Learning framework created by Google.\nTheano - A library for fast numerical computation.\n\nDevOps Tools\nSoftware and libraries for DevOps.\n\nConfiguration Management\n\nansible - A radically simple IT automation platform.\ncloudinit - A multi-distribution package that handles early initialization of a cloud instance.\nOpenStack - Open source software for building private and public clouds.\npyinfra - A versatile CLI tools and python libraries to automate infrastructure.\nsaltstack - Infrastructure automation and management system.\n\n\nSSH-style Deployment\n\ncuisine - Chef-like functionality for Fabric.\nfabric - A simple, Pythonic tool for remote execution and deployment.\nfabtools - Tools for writing awesome Fabric files.\n\n\nProcess Management\n\nhoncho - A Python clone of Foreman, for managing Procfile-based applications.\nsupervisor - Supervisor process control system for UNIX.\n\n\nMonitoring\n\npsutil - A cross-platform process and system utilities module.\n\n\nBackup\n\nBorgBackup - A deduplicating archiver with compression and encryption.\n\n\nOthers\n\ndocker-compose - Fast, isolated development environments using Docker.\n\n\n\nDistributed Computing\nFrameworks and libraries for Distributed Computing.\n\nBatch Processing\n\ndask - A flexible parallel computing library for analytic computing.\nluigi - A module that helps you build complex pipelines of batch jobs.\nmrjob - Run MapReduce jobs on Hadoop or Amazon Web Services.\nPySpark - Apache Spark Python API.\nRay - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n\n\nStream Processing\n\nfaust - A stream processing library, porting the ideas from Kafka Streams to Python.\nstreamparse - Run Python code against real-time streams of data via Apache Storm.\n\n\n\nDistribution\nLibraries to create packaged executables for release distribution.\n\ndh-virtualenv - Build and distribute a virtualenv as a Debian package.\nNuitka - Compile scripts, modules, packages to an executable or extension module.\npy2app - Freezes Python scripts (Mac OS X).\npy2exe - Freezes Python scripts (Windows).\npyarmor - A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\nPyInstaller - Converts Python programs into stand-alone executables (cross-platform).\npynsist - A tool to build Windows installers, installers bundle Python itself.\nshiv - A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\n\nDocumentation\nLibraries for generating project documentation.\n\nsphinx - Python Documentation generator.\n\nawesome-sphinxdoc\n\n\npdoc - Epydoc replacement to auto generate API documentation for Python libraries.\npycco - The literate-programming-style documentation generator.\n\nDownloader\nLibraries for downloading.\n\nakshare - A financial data interface library, built for human beings!\ns3cmd - A command line tool for managing Amazon S3 and CloudFront.\ns4cmd - Super S3 command line tool, good for higher performance.\nyou-get - A YouTube\/Youku\/Niconico video downloader written in Python 3.\nyoutube-dl - A small command-line program to download videos from YouTube.\n\nE-commerce\nFrameworks and libraries for e-commerce and payments.\n\nalipay - Unofficial Alipay API for Python.\nCartridge - A shopping cart app built using the Mezzanine.\ndjango-oscar - An open-source e-commerce framework for Django.\ndjango-shop - A Django based shop system.\nforex-python - Foreign exchange rates, Bitcoin price index and currency conversion.\nmerchant - A Django app to accept payments from various payment processors.\nmoney - Money class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.\npython-currencies - Display money format and its filthy currencies.\nsaleor - An e-commerce storefront for Django.\nshoop - An open source E-Commerce platform based on Django.\n\nEditor Plugins and IDEs\n\nEmacs\n\nelpy - Emacs Python Development Environment.\n\n\nSublime Text\n\nanaconda - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\nSublimeJEDI - A Sublime Text plugin to the awesome auto-complete library Jedi.\n\n\nVim\n\njedi-vim - Vim bindings for the Jedi auto-completion library for Python.\npython-mode - An all in one plugin for turning Vim into a Python IDE.\nYouCompleteMe - Includes Jedi-based completion engine for Python.\n\n\nVisual Studio\n\nPTVS - Python Tools for Visual Studio.\n\n\nVisual Studio Code\n\nPython - The official VSCode extension with rich support for Python.\n\n\nIDE\n\nPyCharm - Commercial Python IDE by JetBrains. Has free community edition available.\nspyder - Open Source Python IDE.\n\n\n\nEmail\nLibraries for sending and parsing email.\n\nMail Servers\n\nmodoboa - A mail hosting and management platform including a modern Web UI.\nsalmon - A Python Mail Server.\n\n\nClients\n\nimbox - Python IMAP for Humans.\nyagmail - Yet another Gmail\/SMTP client.\n\n\nOthers\n\nflanker - An email address and Mime parsing library.\nmailer - High-performance extensible mail delivery framework.\n\n\n\nEnterprise Application Integrations\nPlatforms and tools for systems integrations in enterprise environments\n\nZato - ESB, SOA, REST, APIs and Cloud Integrations in Python.\n\nEnvironment Management\nLibraries for Python version and virtual environment management.\n\npyenv - Simple Python version management.\nvirtualenv - A tool to create isolated Python environments.\n\nFiles\nLibraries for file manipulation and MIME type detection.\n\nmimetypes - (Python standard library) Map filenames to MIME types.\npath.py - A module wrapper for os.path.\npathlib - (Python standard library) An cross-platform, object-oriented path library.\nPyFilesystem2 - Python's filesystem abstraction layer.\npython-magic - A Python interface to the libmagic file type identification library.\nUnipath - An object-oriented approach to file\/directory operations.\nwatchdog - API and shell utilities to monitor file system events.\n\nForeign Function Interface\nLibraries for providing foreign function interface.\n\ncffi - Foreign Function Interface for Python calling C code.\nctypes - (Python standard library) Foreign Function Interface for Python calling C code.\nPyCUDA - A Python wrapper for Nvidia's CUDA API.\nSWIG - Simplified Wrapper and Interface Generator.\n\nForms\nLibraries for working with forms.\n\nDeform - Python HTML form generation library influenced by the formish form generation library.\ndjango-bootstrap3 - Bootstrap 3 integration with Django.\ndjango-bootstrap4 - Bootstrap 4 integration with Django.\ndjango-crispy-forms - A Django app which lets you create beautiful forms in a very elegant and DRY way.\ndjango-remote-forms - A platform independent Django form serializer.\nWTForms - A flexible forms validation and rendering library.\n\nFunctional Programming\nFunctional Programming with Python.\n\nCoconut - A variant of Python built for simple, elegant, Pythonic functional programming.\nCyToolz - Cython implementation of Toolz: High performance functional utilities.\nfn.py - Functional programming in Python: implementation of missing features to enjoy FP.\nfuncy - A fancy and practical functional tools.\nmore-itertools - More routines for operating on iterables, beyond itertools.\nreturns - A set of type-safe monads, transformers, and composition utilities.\nToolz - A collection of functional utilities for iterators, functions, and dictionaries.\n\nGUI Development\nLibraries for working with graphical user interface applications.\n\ncurses - Built-in wrapper for ncurses used to create terminal GUI applications.\nEel - A library for making simple Electron-like offline HTML\/JS GUI apps.\nenaml - Creating beautiful user-interfaces with Declarative Syntax like QML.\nFlexx - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\nGooey - Turn command line programs into a full GUI application with one line.\nkivy - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\npyglet - A cross-platform windowing and multimedia library for Python.\nPyGObject - Python Bindings for GLib\/GObject\/GIO\/GTK+ (GTK+3).\nPyQt - Python bindings for the Qt cross-platform application and UI framework.\nPySimpleGUI - Wrapper for tkinter, Qt, WxPython and Remi.\npywebview - A lightweight cross-platform native wrapper around a webview component.\nTkinter - Tkinter is Python's de-facto standard GUI package.\nToga - A Python native, OS native GUI toolkit.\nurwid - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\nwxPython - A blending of the wxWidgets C++ class library with the Python.\nDearPyGui - A Simple GPU accelerated Python GUI framework\n\nGraphQL\nLibraries for working with GraphQL.\n\ngraphene - GraphQL framework for Python.\ntartiflette-aiohttp - An aiohttp-based wrapper for Tartiflette to expose GraphQL APIs over HTTP.\ntartiflette-asgi - ASGI support for the Tartiflette GraphQL engine.\ntartiflette - SDL-first GraphQL engine implementation for Python 3.6+ and asyncio.\n\nGame Development\nAwesome game development libraries.\n\nArcade - Arcade is a modern Python framework for crafting games with compelling graphics and sound.\nCocos2d - cocos2d is a framework for building 2D games, demos, and other graphical\/interactive applications.\nHarfang3D - Python framework for 3D, VR and game development.\nPanda3D - 3D game engine developed by Disney.\nPygame - Pygame is a set of Python modules designed for writing games.\nPyOgre - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\nPyOpenGL - Python ctypes bindings for OpenGL and it's related APIs.\nPySDL2 - A ctypes based wrapper for the SDL2 library.\nRenPy - A Visual Novel engine.\n\nGeolocation\nLibraries for geocoding addresses and working with latitudes and longitudes.\n\ndjango-countries - A Django app that provides a country field for models and forms.\nGeoDjango - A world-class geographic web framework.\nGeoIP - Python API for MaxMind GeoIP Legacy Database.\ngeojson - Python bindings and utilities for GeoJSON.\ngeopy - Python Geocoding Toolbox.\npygeoip - Pure Python GeoIP API.\n\nHTML Manipulation\nLibraries for working with HTML and XML.\n\nBeautifulSoup - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\nbleach - A whitelist-based HTML sanitization and text linkification library.\ncssutils - A CSS library for Python.\nhtml5lib - A standards-compliant library for parsing and serializing HTML documents and fragments.\nlxml - A very fast, easy-to-use and versatile library for handling HTML and XML.\nMarkupSafe - Implements a XML\/HTML\/XHTML Markup safe string for Python.\npyquery - A jQuery-like library for parsing HTML.\nuntangle - Converts XML documents to Python objects for easy access.\nWeasyPrint - A visual rendering engine for HTML and CSS that can export to PDF.\nxmldataset - Simple XML Parsing.\nxmltodict - Working with XML feel like you are working with JSON.\n\nHTTP Clients\nLibraries for working with HTTP.\n\ngrequests - requests + gevent for asynchronous HTTP requests.\nhttplib2 - Comprehensive HTTP client library.\nhttpx - A next generation HTTP client for Python.\nrequests - HTTP Requests for Humans.\ntreq - Python requests like API built on top of Twisted's HTTP client.\nurllib3 - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\nHardware\nLibraries for programming with hardware.\n\nino - Command line toolkit for working with Arduino.\nkeyboard - Hook and simulate global keyboard events on Windows and Linux.\nmouse - Hook and simulate global mouse events on Windows and Linux.\nPingo - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\nPyUserInput - A module for cross-platform control of the mouse and keyboard.\nscapy - A brilliant packet manipulation library.\nwifi - A Python library and command line tool for working with WiFi on Linux.\n\nImage Processing\nLibraries for manipulating images.\n\nhmap - Image histogram remapping.\nimgSeek - A project for searching a collection of images using visual similarity.\nnude.py - Nudity detection.\npagan - Retro identicon (Avatar) generation based on input string and hash.\npillow - Pillow is the friendly PIL fork.\npython-barcode - Create barcodes in Python with no extra dependencies.\npygram - Instagram-like image filters.\nPyMatting - A library for alpha matting.\npython-qrcode - A pure Python QR Code generator.\npywal - A tool that generates color schemes from images.\npyvips - A fast image processing library with low memory needs.\nQuads - Computer art based on quadtrees.\nscikit-image - A Python library for (scientific) image processing.\nthumbor - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\nwand - Python bindings for MagickWand, C API for ImageMagick.\n\nImplementations\nImplementations of Python.\n\nCLPython - Implementation of the Python programming language written in Common Lisp.\nCPython - Default, most widely used implementation of the Python programming language written in C.\nCython - Optimizing Static Compiler for Python.\nGrumpy - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\nIronPython - Implementation of the Python programming language written in C#.\nJython - Implementation of Python programming language written in Java for the JVM.\nMicroPython - A lean and efficient Python programming language implementation.\nNumba - Python JIT compiler to LLVM aimed at scientific Python.\nPeachPy - x86-64 assembler embedded in Python.\nPyjion - A JIT for Python based upon CoreCLR.\nPyPy - A very fast and compliant implementation of the Python language.\nPyston - A Python implementation using JIT techniques.\nStackless Python - An enhanced version of the Python programming language.\n\nInteractive Interpreter\nInteractive Python interpreters (REPL).\n\nbpython - A fancy interface to the Python interpreter.\nJupyter Notebook (IPython) - A rich toolkit to help you make the most out of using Python interactively.\n\nawesome-jupyter\n\n\nptpython - Advanced Python REPL built on top of the python-prompt-toolkit.\n\nInternationalization\nLibraries for working with i18n.\n\nBabel - An internationalization library for Python.\nPyICU - A wrapper of International Components for Unicode C++ library (ICU).\n\nJob Scheduler\nLibraries for scheduling jobs.\n\nAirflow - Airflow is a platform to programmatically author, schedule and monitor workflows.\nAPScheduler - A light but powerful in-process task scheduler that lets you schedule functions.\ndjango-schedule - A calendaring app for Django.\ndoit - A task runner and build tool.\ngunnery - Multipurpose task execution tool for distributed systems with web-based interface.\nJoblib - A set of tools to provide lightweight pipelining in Python.\nPlan - Writing crontab file in Python like a charm.\nPrefect - A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines.\nschedule - Python job scheduling for humans.\nSpiff - A powerful workflow engine implemented in pure Python.\nTaskFlow - A Python library that helps to make task execution easy, consistent and reliable.\n\nLogging\nLibraries for generating and working with logs.\n\nlogbook - Logging replacement for Python.\nlogging - (Python standard library) Logging facility for Python.\nloguru - Library which aims to bring enjoyable logging in Python.\nsentry-python - Sentry SDK for Python.\nstructlog - Structured logging made easy.\n\nMachine Learning\nLibraries for Machine Learning. Also see awesome-machine-learning.\n\ngym - A toolkit for developing and comparing reinforcement learning algorithms.\nH2O - Open Source Fast Scalable Machine Learning Platform.\nMetrics - Machine learning evaluation metrics.\nNuPIC - Numenta Platform for Intelligent Computing.\nscikit-learn - The most popular Python library for Machine Learning.\nSpark ML - Apache Spark's scalable Machine Learning library.\nvowpal_porpoise - A lightweight Python wrapper for Vowpal Wabbit.\nxgboost - A scalable, portable, and distributed gradient boosting library.\nMindsDB - MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries.\n\nMicrosoft Windows\nPython programming on Microsoft Windows.\n\nPython(x,y) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\npythonlibs - Unofficial Windows binaries for Python extension packages.\nPythonNet - Python Integration with the .NET Common Language Runtime (CLR).\nPyWin32 - Python Extensions for Windows.\nWinPython - Portable development environment for Windows 7\/8.\n\nMiscellaneous\nUseful libraries or tools that don't fit in the categories above.\n\nblinker - A fast Python in-process signal\/event dispatching system.\nboltons - A set of pure-Python utilities.\nitsdangerous - Various helpers to pass trusted data to untrusted environments.\nmagenta - A tool to generate music and art using artificial intelligence.\npluginbase - A simple but flexible plugin system for Python.\ntryton - A general purpose business framework.\n\nNatural Language Processing\nLibraries for working with human languages.\n\nGeneral\n\ngensim - Topic Modeling for Humans.\nlangid.py - Stand-alone language identification system.\nnltk - A leading platform for building Python programs to work with human language data.\npattern - A web mining module.\npolyglot - Natural language pipeline supporting hundreds of languages.\npytext - A natural language modeling framework based on PyTorch.\nPyTorch-NLP - A toolkit enabling rapid deep learning NLP prototyping for research.\nspacy - A library for industrial-strength natural language processing in Python and Cython.\nStanza - The Stanford NLP Group's official Python library, supporting 60+ languages.\n\n\nChinese\n\nfunNLP - A collection of tools and datasets for Chinese NLP.\njieba - The most popular Chinese text segmentation library.\npkuseg-python - A toolkit for Chinese word segmentation in various domains.\nsnownlp - A library for processing Chinese text.\n\n\n\nNetwork Virtualization\nTools and libraries for Virtual Networking and SDN (Software Defined Networking).\n\nmininet - A popular network emulator and API written in Python.\nnapalm - Cross-vendor API to manipulate network devices.\npox - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\nNews Feed\nLibraries for building user's activities.\n\ndjango-activity-stream - Generating generic activity streams from the actions on your site.\nStream Framework - Building news feed and notification systems using Cassandra and Redis.\n\nORM\nLibraries that implement Object-Relational Mapping or data mapping techniques.\n\nRelational Databases\n\nDjango Models - The Django ORM.\nSQLAlchemy - The Python SQL Toolkit and Object Relational Mapper.\n\nawesome-sqlalchemy\n\n\ndataset - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\norator -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\norm - An async ORM.\npeewee - A small, expressive ORM.\npony - ORM that provides a generator-oriented interface to SQL.\npydal - A pure Python Database Abstraction Layer.\n\n\nNoSQL Databases\n\nhot-redis - Rich Python data types for Redis.\nmongoengine - A Python Object-Document-Mapper for working with MongoDB.\nPynamoDB - A Pythonic interface for Amazon DynamoDB.\nredisco - A Python Library for Simple Models and Containers Persisted in Redis.\n\n\n\nPackage Management\nLibraries for package and dependency management.\n\npip - The package installer for Python.\n\npip-tools - A set of tools to keep your pinned Python dependencies fresh.\nPyPI\n\n\nconda - Cross-platform, Python-agnostic binary package manager.\npoetry - Python dependency management and packaging made easy.\n\nPackage Repositories\nLocal PyPI repository server and proxies.\n\nbandersnatch - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\ndevpi - PyPI server and packaging\/testing\/release tool.\nlocalshop - Local PyPI server (custom packages and auto-mirroring of pypi).\nwarehouse - Next generation Python Package Repository (PyPI).\n\nPenetration Testing\nFrameworks and tools for penetration testing.\n\nfsociety - A Penetration testing framework.\nsetoolkit - A toolkit for social engineering.\nsqlmap - Automatic SQL injection and database takeover tool.\n\nPermissions\nLibraries that allow or deny users access to data or functionality.\n\ndjango-guardian - Implementation of per object permissions for Django 1.2+\ndjango-rules - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\nProcesses\nLibraries for starting and communicating with OS processes.\n\ndelegator.py - Subprocesses for Humans 2.0.\nsarge - Yet another wrapper for subprocess.\nsh - A full-fledged subprocess replacement for Python.\n\nRecommender Systems\nLibraries for building recommender systems.\n\nannoy - Approximate Nearest Neighbors in C++\/Python optimized for memory usage.\nfastFM - A library for Factorization Machines.\nimplicit - A fast Python implementation of collaborative filtering for implicit datasets.\nlibffm - A library for Field-aware Factorization Machine (FFM).\nlightfm - A Python implementation of a number of popular recommendation algorithms.\nspotlight - Deep recommender models using PyTorch.\nSurprise - A scikit for building and analyzing recommender systems.\ntensorrec - A Recommendation Engine Framework in TensorFlow.\n\nRefactoring\nRefactoring tools and libraries for Python\n\nBicycle Repair Man - Bicycle Repair Man, a refactoring tool for Python.\nBowler - Safe code refactoring for modern Python.\nRope -  Rope is a python refactoring library.\n\nRESTful API\nLibraries for building RESTful APIs.\n\nDjango\n\ndjango-rest-framework - A powerful and flexible toolkit to build web APIs.\ndjango-tastypie - Creating delicious APIs for Django apps.\n\n\nFlask\n\neve - REST API framework powered by Flask, MongoDB and good intentions.\nflask-api - Browsable Web APIs for Flask.\nflask-restful - Quickly building REST APIs for Flask.\n\n\nPyramid\n\ncornice - A RESTful framework for Pyramid.\n\n\nFramework agnostic\n\napistar - A smart Web API framework, designed for Python 3.\nfalcon - A high-performance framework for building cloud APIs and web app backends.\nfastapi - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\nhug - A Python 3 framework for cleanly exposing APIs.\nsandman2 - Automated REST APIs for existing database-driven systems.\nsanic - A Python 3.6+ web server and web framework that's written to go fast.\nvibora - Fast, efficient and asynchronous Web framework inspired by Flask.\n\n\n\nRobotics\nLibraries for robotics.\n\nPythonRobotics - This is a compilation of various robotics algorithms with visualizations.\nrospy - This is a library for ROS (Robot Operating System).\n\nRPC Servers\nRPC-compatible servers.\n\nRPyC (Remote Python Call) - A transparent and symmetric RPC library for Python\nzeroRPC - zerorpc is a flexible RPC implementation based on ZeroMQ and MessagePack.\n\nScience\nLibraries for scientific computing. Also see Python-for-Scientists.\n\nastropy - A community Python library for Astronomy.\nbcbio-nextgen - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\nbccb - Collection of useful code related to biological analysis.\nBiopython - Biopython is a set of freely available tools for biological computation.\ncclib - A library for parsing and interpreting the results of computational chemistry packages.\nColour - Implementing a comprehensive number of colour theory transformations and algorithms.\nKarate Club - Unsupervised machine learning toolbox for graph structured data.\nNetworkX - A high-productivity software for complex networks.\nNIPY - A collection of neuroimaging toolkits.\nNumPy - A fundamental package for scientific computing with Python.\nObsPy - A Python toolbox for seismology.\nOpen Babel - A chemical toolbox designed to speak the many languages of chemical data.\nPyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\nPyMC - Markov Chain Monte Carlo sampling toolkit.\nQuTiP - Quantum Toolbox in Python.\nRDKit - Cheminformatics and Machine Learning Software.\nSciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nSimPy -  A process-based discrete-event simulation framework.\nstatsmodels - Statistical modeling and econometrics in Python.\nSymPy - A Python library for symbolic mathematics.\nZipline - A Pythonic algorithmic trading library.\n\nSearch\nLibraries and software for indexing and performing search queries on data.\n\ndjango-haystack - Modular search for Django.\nelasticsearch-dsl-py - The official high-level Python client for Elasticsearch.\nelasticsearch-py - The official low-level Python client for Elasticsearch.\npysolr - A lightweight Python wrapper for Apache Solr.\nwhoosh - A fast, pure Python search engine library.\n\nSerialization\nLibraries for serializing complex data types\n\nmarshmallow - A lightweight library for converting complex objects to and from simple Python datatypes.\npysimdjson - A Python bindings for simdjson.\npython-rapidjson - A Python wrapper around RapidJSON.\nultrajson - A fast JSON decoder and encoder written in C with Python bindings.\n\nServerless Frameworks\nFrameworks for developing serverless Python code.\n\npython-lambda - A toolkit for developing and deploying Python code in AWS Lambda.\nZappa - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\nShell\nShells based on Python.\n\nxonsh - A Python-powered, cross-platform, Unix-gazing shell language and command prompt.\n\nSpecific Formats Processing\nLibraries for parsing and manipulating specific text formats.\n\nGeneral\n\ntablib - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n\n\nOffice\n\ndocxtpl - Editing a docx document by jinja2 template\nopenpyxl - A library for reading and writing Excel 2010 xlsx\/xlsm\/xltx\/xltm files.\npyexcel - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\npython-docx - Reads, queries and modifies Microsoft Word 2007\/2008 docx files.\npython-pptx - Python library for creating and updating PowerPoint (.pptx) files.\nunoconv - Convert between any document format supported by LibreOffice\/OpenOffice.\nXlsxWriter - A Python module for creating Excel .xlsx files.\nxlwings - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\nxlwt \/ xlrd - Writing and reading data and formatting information from Excel files.\n\n\nPDF\n\nPDFMiner - A tool for extracting information from PDF documents.\nPyPDF2 - A library capable of splitting, merging and transforming PDF pages.\nReportLab - Allowing Rapid creation of rich PDF documents.\n\n\nMarkdown\n\nMistune - Fastest and full featured pure Python parsers of Markdown.\nPython-Markdown - A Python implementation of John Gruber\u2019s Markdown.\n\n\nYAML\n\nPyYAML - YAML implementations for Python.\n\n\nCSV\n\ncsvkit - Utilities for converting to and working with CSV.\n\n\nArchive\n\nunp - A command line tool that can unpack archives easily.\n\n\n\nStatic Site Generator\nStatic site generator is a software that takes some text + templates as input and produces HTML files on the output.\n\nlektor - An easy to use static CMS and blog engine.\nmkdocs - Markdown friendly documentation generator.\nmakesite - Simple, lightweight, and magic-free static site\/blog generator (< 130 lines).\nnikola - A static website and blog generator.\npelican - Static site generator that supports Markdown and reST syntax.\n\nTagging\nLibraries for tagging items.\n\ndjango-taggit - Simple tagging for Django.\n\nTask Queues\nLibraries for working with task queues.\n\ncelery - An asynchronous task queue\/job queue based on distributed message passing.\ndaramatiq - A fast and reliable background task processing library for Python 3.\nhuey - Little multi-threaded task queue.\nmrq - A distributed worker task queue in Python using Redis & gevent.\nrq - Simple job queues for Python.\n\nTemplate Engine\nLibraries and tools for templating and lexing.\n\nGenshi - Python templating toolkit for generation of web-aware output.\nJinja2 - A modern and designer friendly templating language.\nMako - Hyperfast and lightweight templating for the Python platform.\n\nTesting\nLibraries for testing codebases and generating test data.\n\nTesting Frameworks\n\nhypothesis - Hypothesis is an advanced Quickcheck style property based testing library.\nnose2 - The successor to nose, based on `unittest2.\npytest - A mature full-featured Python testing tool.\nRobot Framework - A generic test automation framework.\nunittest - (Python standard library) Unit testing framework.\n\n\nTest Runners\n\ngreen - A clean, colorful test runner.\nmamba - The definitive testing tool for Python. Born under the banner of BDD.\ntox - Auto builds and tests distributions in multiple Python versions\n\n\nGUI \/ Web Testing\n\nlocust - Scalable user load testing tool written in Python.\nPyAutoGUI - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\nSchemathesis - A tool for automatic property-based testing of web applications built with Open API \/ Swagger specifications.\nSelenium - Python bindings for Selenium WebDriver.\nsixpack - A language-agnostic A\/B Testing framework.\nsplinter - Open source tool for testing web applications.\n\n\nMock\n\ndoublex - Powerful test doubles framework for Python.\nfreezegun - Travel through time by mocking the datetime module.\nhttmock - A mocking library for requests for Python 2.6+ and 3.2+.\nhttpretty - HTTP request mock tool for Python.\nmock - (Python standard library) A mocking and patching library.\nmocket - A socket mock framework with gevent\/asyncio\/SSL support.\nresponses - A utility library for mocking out the requests Python library.\nVCR.py - Record and replay HTTP interactions on your tests.\n\n\nObject Factories\n\nfactory_boy - A test fixtures replacement for Python.\nmixer - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.\nmodel_mommy - Creating random fixtures for testing in Django.\n\n\nCode Coverage\n\ncoverage - Code coverage measurement.\n\n\nFake Data\n\nfake2db - Fake database generator.\nfaker - A Python package that generates fake data.\nmimesis - is a Python library that help you generate fake data.\nradar - Generate random datetime \/ time.\n\n\n\nText Processing\nLibraries for parsing and manipulating plain texts.\n\nGeneral\n\nchardet - Python 2\/3 compatible character encoding detector.\ndifflib - (Python standard library) Helpers for computing deltas.\nftfy - Makes Unicode text less broken and more consistent automagically.\nfuzzywuzzy - Fuzzy String Matching.\nLevenshtein - Fast computation of Levenshtein distance and string similarity.\npangu.py - Paranoid text spacing.\npyfiglet - An implementation of figlet written in Python.\npypinyin - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\ntextdistance - Compute distance between sequences with 30+ algorithms.\nunidecode - ASCII transliterations of Unicode text.\n\n\nSlugify\n\nawesome-slugify - A Python slugify library that can preserve unicode.\npython-slugify - A Python slugify library that translates unicode to ASCII.\nunicode-slugify - A slugifier that generates unicode slugs with Django as a dependency.\n\n\nUnique identifiers\n\nhashids - Implementation of hashids in Python.\nshortuuid - A generator library for concise, unambiguous and URL-safe UUIDs.\n\n\nParser\n\nply - Implementation of lex and yacc parsing tools for Python.\npygments - A generic syntax highlighter.\npyparsing - A general purpose framework for generating parsers.\npython-nameparser - Parsing human names into their individual components.\npython-phonenumbers - Parsing, formatting, storing and validating international phone numbers.\npython-user-agents - Browser user agent parser.\nsqlparse - A non-validating SQL parser.\n\n\n\nThird-party APIs\nLibraries for accessing third party services APIs. Also see List of Python API Wrappers and Libraries.\n\napache-libcloud - One Python library for all clouds.\nboto3 - Python interface to Amazon Web Services.\ndjango-wordpress - WordPress models and views for Django.\nfacebook-sdk - Facebook Platform Python SDK.\ngoogle-api-python-client - Google APIs Client Library for Python.\ngspread - Google Spreadsheets Python API.\ntwython - A Python wrapper for the Twitter API.\n\nURL Manipulation\nLibraries for parsing URLs.\n\nfurl - A small Python library that makes parsing and manipulating URLs easy.\npurl - A simple, immutable URL class with a clean API for interrogation and manipulation.\npyshorteners - A pure Python URL shortening lib.\nwebargs - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\nVideo\nLibraries for manipulating video and GIFs.\n\nmoviepy - A module for script-based movie editing with many formats, including animated GIFs.\nscikit-video - Video processing routines for SciPy.\nvidgear - Most Powerful multi-threaded Video Processing framework.\n\nWeb Asset Management\nTools for managing, compressing and minifying website assets.\n\ndjango-compressor - Compresses linked and inline JavaScript or CSS into a single cached file.\ndjango-pipeline - An asset packaging library for Django.\ndjango-storages - A collection of custom storage back ends for Django.\nfanstatic - Packages, optimizes, and serves static file dependencies as Python packages.\nfileconveyor - A daemon to detect and sync files to CDNs, S3 and FTP.\nflask-assets - Helps you integrate webassets into your Flask app.\nwebassets - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\nWeb Content Extracting\nLibraries for extracting web contents.\n\nhtml2text - Convert HTML to Markdown-formatted text.\nlassie - Web Content Retrieval for Humans.\nmicawber - A small library for extracting rich content from URLs.\nnewspaper - News extraction, article extraction and content curation in Python.\npython-readability - Fast Python port of arc90's readability tool.\nrequests-html - Pythonic HTML Parsing for Humans.\nsumy - A module for automatic summarization of text documents and HTML pages.\ntextract - Extract text from any document, Word, PowerPoint, PDFs, etc.\ntoapi - Every web site provides APIs.\n\nWeb Crawling\nLibraries to automate web scraping.\n\ncola - A distributed crawling framework.\nfeedparser - Universal feed parser.\ngrab - Site scraping framework.\nMechanicalSoup - A Python library for automating interaction with websites.\nportia - Visual scraping for Scrapy.\npyspider - A powerful spider system.\nrobobrowser - A simple, Pythonic library for browsing the web without a standalone web browser.\nscrapy - A fast high-level screen scraping and web crawling framework.\n\nWeb Frameworks\nTraditional full stack web frameworks. Also see RESTful API.\n\nSynchronous\n\nDjango - The most popular web framework in Python.\n\nawesome-django\nawesome-django\n\n\nFlask - A microframework for Python.\n\nawesome-flask\n\n\nPyramid - A small, fast, down-to-earth, open source Python web framework.\n\nawesome-pyramid\n\n\nMasonite - The modern and developer centric Python web framework.\n\n\nAsynchronous\n\nTornado - A web framework and asynchronous networking library.\n\n\n\nWebSocket\nLibraries for working with WebSocket.\n\nautobahn-python - WebSocket & WAMP for Python on Twisted and asyncio.\nchannels - Developer-friendly asynchrony for Django.\nwebsockets - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\nWSGI Servers\nWSGI-compatible web servers.\n\nbjoern - Asynchronous, very fast and written in C.\ngunicorn - Pre-forked, partly written in C.\nuWSGI - A project aims at developing a full stack for building hosting services, written in C.\nwaitress - Multi-threaded, powers Pyramid.\nwerkzeug - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\nResources\nWhere to discover learning resources or new Python libraries.\nBooks\n\nFluent Python\nThink Python\n\nWebsites\n\nTutorials\n\nFull Stack Python\nPython Cheatsheet\nReal Python\nThe Hitchhiker\u2019s Guide to Python\nUltimate Python study guide\n\n\nLibraries\n\nAwesome Python @LibHunt\n\n\nOthers\n\nPython ZEEF\nPythonic News\nWhat the f*ck Python!\n\n\n\nNewsletters\n\nAwesome Python Newsletter\nPycoder's Weekly\nPython Tricks\nPython Weekly\n\nPodcasts\n\nDjango Chat\nPodcast.__init__\nPython Bytes\nRunning in Production\nTalk Python To Me\nTest and Code\nThe Real Python Podcast\n\nContributing\nYour contributions are always welcome! Please take a look at the contribution guidelines first.\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could vote for them by adding \ud83d\udc4d to them. Pull requests will be merged when their votes reach 20.\n\nIf you have any question about this opinionated list, do not hesitate to contact me @VintaChen on Twitter or open an issue on GitHub.\n","115":"\nyoutube-dl - download videos from youtube.com or other video platforms\n\nINSTALLATION\nDESCRIPTION\nOPTIONS\nCONFIGURATION\nOUTPUT TEMPLATE\nFORMAT SELECTION\nVIDEO SELECTION\nFAQ\nDEVELOPER INSTRUCTIONS\nEMBEDDING YOUTUBE-DL\nBUGS\nCOPYRIGHT\n\nINSTALLATION\nTo install it right away for all UNIX users (Linux, macOS, etc.), type:\nsudo curl -L https:\/\/yt-dl.org\/downloads\/latest\/youtube-dl -o \/usr\/local\/bin\/youtube-dl\nsudo chmod a+rx \/usr\/local\/bin\/youtube-dl\n\nIf you do not have curl, you can alternatively use a recent wget:\nsudo wget https:\/\/yt-dl.org\/downloads\/latest\/youtube-dl -O \/usr\/local\/bin\/youtube-dl\nsudo chmod a+rx \/usr\/local\/bin\/youtube-dl\n\nWindows users can download an .exe file and place it in any location on their PATH except for %SYSTEMROOT%\\System32 (e.g. do not put in C:\\Windows\\System32).\nYou can also use pip:\nsudo -H pip install --upgrade youtube-dl\n\nThis command will update youtube-dl if you have already installed it. See the pypi page for more information.\nmacOS users can install youtube-dl with Homebrew:\nbrew install youtube-dl\n\nOr with MacPorts:\nsudo port install youtube-dl\n\nAlternatively, refer to the developer instructions for how to check out and work with the git repository. For further options, including PGP signatures, see the youtube-dl Download Page.\nDESCRIPTION\nyoutube-dl is a command-line program to download videos from YouTube.com and a few more sites. It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is not platform specific. It should work on your Unix box, on Windows or on macOS. It is released to the public domain, which means you can modify it, redistribute it or use it however you like.\nyoutube-dl [OPTIONS] URL [URL...]\n\nOPTIONS\n-h, --help                       Print this help text and exit\n--version                        Print program version and exit\n-U, --update                     Update this program to latest version. Make\n                                 sure that you have sufficient permissions\n                                 (run with sudo if needed)\n-i, --ignore-errors              Continue on download errors, for example to\n                                 skip unavailable videos in a playlist\n--abort-on-error                 Abort downloading of further videos (in the\n                                 playlist or the command line) if an error\n                                 occurs\n--dump-user-agent                Display the current browser identification\n--list-extractors                List all supported extractors\n--extractor-descriptions         Output descriptions of all supported\n                                 extractors\n--force-generic-extractor        Force extraction to use the generic\n                                 extractor\n--default-search PREFIX          Use this prefix for unqualified URLs. For\n                                 example \"gvsearch2:\" downloads two videos\n                                 from google videos for youtube-dl \"large\n                                 apple\". Use the value \"auto\" to let\n                                 youtube-dl guess (\"auto_warning\" to emit a\n                                 warning when guessing). \"error\" just throws\n                                 an error. The default value \"fixup_error\"\n                                 repairs broken URLs, but emits an error if\n                                 this is not possible instead of searching.\n--ignore-config                  Do not read configuration files. When given\n                                 in the global configuration file\n                                 \/etc\/youtube-dl.conf: Do not read the user\n                                 configuration in ~\/.config\/youtube-\n                                 dl\/config (%APPDATA%\/youtube-dl\/config.txt\n                                 on Windows)\n--config-location PATH           Location of the configuration file; either\n                                 the path to the config or its containing\n                                 directory.\n--flat-playlist                  Do not extract the videos of a playlist,\n                                 only list them.\n--mark-watched                   Mark videos watched (YouTube only)\n--no-mark-watched                Do not mark videos watched (YouTube only)\n--no-color                       Do not emit color codes in output\n\nNetwork Options:\n--proxy URL                      Use the specified HTTP\/HTTPS\/SOCKS proxy.\n                                 To enable SOCKS proxy, specify a proper\n                                 scheme. For example\n                                 socks5:\/\/127.0.0.1:1080\/. Pass in an empty\n                                 string (--proxy \"\") for direct connection\n--socket-timeout SECONDS         Time to wait before giving up, in seconds\n--source-address IP              Client-side IP address to bind to\n-4, --force-ipv4                 Make all connections via IPv4\n-6, --force-ipv6                 Make all connections via IPv6\n\nGeo Restriction:\n--geo-verification-proxy URL     Use this proxy to verify the IP address for\n                                 some geo-restricted sites. The default\n                                 proxy specified by --proxy (or none, if the\n                                 option is not present) is used for the\n                                 actual downloading.\n--geo-bypass                     Bypass geographic restriction via faking\n                                 X-Forwarded-For HTTP header\n--no-geo-bypass                  Do not bypass geographic restriction via\n                                 faking X-Forwarded-For HTTP header\n--geo-bypass-country CODE        Force bypass geographic restriction with\n                                 explicitly provided two-letter ISO 3166-2\n                                 country code\n--geo-bypass-ip-block IP_BLOCK   Force bypass geographic restriction with\n                                 explicitly provided IP block in CIDR\n                                 notation\n\nVideo Selection:\n--playlist-start NUMBER          Playlist video to start at (default is 1)\n--playlist-end NUMBER            Playlist video to end at (default is last)\n--playlist-items ITEM_SPEC       Playlist video items to download. Specify\n                                 indices of the videos in the playlist\n                                 separated by commas like: \"--playlist-items\n                                 1,2,5,8\" if you want to download videos\n                                 indexed 1, 2, 5, 8 in the playlist. You can\n                                 specify range: \"--playlist-items\n                                 1-3,7,10-13\", it will download the videos\n                                 at index 1, 2, 3, 7, 10, 11, 12 and 13.\n--match-title REGEX              Download only matching titles (regex or\n                                 caseless sub-string)\n--reject-title REGEX             Skip download for matching titles (regex or\n                                 caseless sub-string)\n--max-downloads NUMBER           Abort after downloading NUMBER files\n--min-filesize SIZE              Do not download any videos smaller than\n                                 SIZE (e.g. 50k or 44.6m)\n--max-filesize SIZE              Do not download any videos larger than SIZE\n                                 (e.g. 50k or 44.6m)\n--date DATE                      Download only videos uploaded in this date\n--datebefore DATE                Download only videos uploaded on or before\n                                 this date (i.e. inclusive)\n--dateafter DATE                 Download only videos uploaded on or after\n                                 this date (i.e. inclusive)\n--min-views COUNT                Do not download any videos with less than\n                                 COUNT views\n--max-views COUNT                Do not download any videos with more than\n                                 COUNT views\n--match-filter FILTER            Generic video filter. Specify any key (see\n                                 the \"OUTPUT TEMPLATE\" for a list of\n                                 available keys) to match if the key is\n                                 present, !key to check if the key is not\n                                 present, key > NUMBER (like \"comment_count\n                                 > 12\", also works with >=, <, <=, !=, =) to\n                                 compare against a number, key = 'LITERAL'\n                                 (like \"uploader = 'Mike Smith'\", also works\n                                 with !=) to match against a string literal\n                                 and & to require multiple matches. Values\n                                 which are not known are excluded unless you\n                                 put a question mark (?) after the operator.\n                                 For example, to only match videos that have\n                                 been liked more than 100 times and disliked\n                                 less than 50 times (or the dislike\n                                 functionality is not available at the given\n                                 service), but who also have a description,\n                                 use --match-filter \"like_count > 100 &\n                                 dislike_count <? 50 & description\" .\n--no-playlist                    Download only the video, if the URL refers\n                                 to a video and a playlist.\n--yes-playlist                   Download the playlist, if the URL refers to\n                                 a video and a playlist.\n--age-limit YEARS                Download only videos suitable for the given\n                                 age\n--download-archive FILE          Download only videos not listed in the\n                                 archive file. Record the IDs of all\n                                 downloaded videos in it.\n--include-ads                    Download advertisements as well\n                                 (experimental)\n\nDownload Options:\n-r, --limit-rate RATE            Maximum download rate in bytes per second\n                                 (e.g. 50K or 4.2M)\n-R, --retries RETRIES            Number of retries (default is 10), or\n                                 \"infinite\".\n--fragment-retries RETRIES       Number of retries for a fragment (default\n                                 is 10), or \"infinite\" (DASH, hlsnative and\n                                 ISM)\n--skip-unavailable-fragments     Skip unavailable fragments (DASH, hlsnative\n                                 and ISM)\n--abort-on-unavailable-fragment  Abort downloading when some fragment is not\n                                 available\n--keep-fragments                 Keep downloaded fragments on disk after\n                                 downloading is finished; fragments are\n                                 erased by default\n--buffer-size SIZE               Size of download buffer (e.g. 1024 or 16K)\n                                 (default is 1024)\n--no-resize-buffer               Do not automatically adjust the buffer\n                                 size. By default, the buffer size is\n                                 automatically resized from an initial value\n                                 of SIZE.\n--http-chunk-size SIZE           Size of a chunk for chunk-based HTTP\n                                 downloading (e.g. 10485760 or 10M) (default\n                                 is disabled). May be useful for bypassing\n                                 bandwidth throttling imposed by a webserver\n                                 (experimental)\n--playlist-reverse               Download playlist videos in reverse order\n--playlist-random                Download playlist videos in random order\n--xattr-set-filesize             Set file xattribute ytdl.filesize with\n                                 expected file size\n--hls-prefer-native              Use the native HLS downloader instead of\n                                 ffmpeg\n--hls-prefer-ffmpeg              Use ffmpeg instead of the native HLS\n                                 downloader\n--hls-use-mpegts                 Use the mpegts container for HLS videos,\n                                 allowing to play the video while\n                                 downloading (some players may not be able\n                                 to play it)\n--external-downloader COMMAND    Use the specified external downloader.\n                                 Currently supports\n                                 aria2c,avconv,axel,curl,ffmpeg,httpie,wget\n--external-downloader-args ARGS  Give these arguments to the external\n                                 downloader\n\nFilesystem Options:\n-a, --batch-file FILE            File containing URLs to download ('-' for\n                                 stdin), one URL per line. Lines starting\n                                 with '#', ';' or ']' are considered as\n                                 comments and ignored.\n--id                             Use only video ID in file name\n-o, --output TEMPLATE            Output filename template, see the \"OUTPUT\n                                 TEMPLATE\" for all the info\n--autonumber-start NUMBER        Specify the start value for %(autonumber)s\n                                 (default is 1)\n--restrict-filenames             Restrict filenames to only ASCII\n                                 characters, and avoid \"&\" and spaces in\n                                 filenames\n-w, --no-overwrites              Do not overwrite files\n-c, --continue                   Force resume of partially downloaded files.\n                                 By default, youtube-dl will resume\n                                 downloads if possible.\n--no-continue                    Do not resume partially downloaded files\n                                 (restart from beginning)\n--no-part                        Do not use .part files - write directly\n                                 into output file\n--no-mtime                       Do not use the Last-modified header to set\n                                 the file modification time\n--write-description              Write video description to a .description\n                                 file\n--write-info-json                Write video metadata to a .info.json file\n--write-annotations              Write video annotations to a\n                                 .annotations.xml file\n--load-info-json FILE            JSON file containing the video information\n                                 (created with the \"--write-info-json\"\n                                 option)\n--cookies FILE                   File to read cookies from and dump cookie\n                                 jar in\n--cache-dir DIR                  Location in the filesystem where youtube-dl\n                                 can store some downloaded information\n                                 permanently. By default\n                                 $XDG_CACHE_HOME\/youtube-dl or\n                                 ~\/.cache\/youtube-dl . At the moment, only\n                                 YouTube player files (for videos with\n                                 obfuscated signatures) are cached, but that\n                                 may change.\n--no-cache-dir                   Disable filesystem caching\n--rm-cache-dir                   Delete all filesystem cache files\n\nThumbnail images:\n--write-thumbnail                Write thumbnail image to disk\n--write-all-thumbnails           Write all thumbnail image formats to disk\n--list-thumbnails                Simulate and list all available thumbnail\n                                 formats\n\nVerbosity \/ Simulation Options:\n-q, --quiet                      Activate quiet mode\n--no-warnings                    Ignore warnings\n-s, --simulate                   Do not download the video and do not write\n                                 anything to disk\n--skip-download                  Do not download the video\n-g, --get-url                    Simulate, quiet but print URL\n-e, --get-title                  Simulate, quiet but print title\n--get-id                         Simulate, quiet but print id\n--get-thumbnail                  Simulate, quiet but print thumbnail URL\n--get-description                Simulate, quiet but print video description\n--get-duration                   Simulate, quiet but print video length\n--get-filename                   Simulate, quiet but print output filename\n--get-format                     Simulate, quiet but print output format\n-j, --dump-json                  Simulate, quiet but print JSON information.\n                                 See the \"OUTPUT TEMPLATE\" for a description\n                                 of available keys.\n-J, --dump-single-json           Simulate, quiet but print JSON information\n                                 for each command-line argument. If the URL\n                                 refers to a playlist, dump the whole\n                                 playlist information in a single line.\n--print-json                     Be quiet and print the video information as\n                                 JSON (video is still being downloaded).\n--newline                        Output progress bar as new lines\n--no-progress                    Do not print progress bar\n--console-title                  Display progress in console titlebar\n-v, --verbose                    Print various debugging information\n--dump-pages                     Print downloaded pages encoded using base64\n                                 to debug problems (very verbose)\n--write-pages                    Write downloaded intermediary pages to\n                                 files in the current directory to debug\n                                 problems\n--print-traffic                  Display sent and read HTTP traffic\n-C, --call-home                  Contact the youtube-dl server for debugging\n--no-call-home                   Do NOT contact the youtube-dl server for\n                                 debugging\n\nWorkarounds:\n--encoding ENCODING              Force the specified encoding (experimental)\n--no-check-certificate           Suppress HTTPS certificate validation\n--prefer-insecure                Use an unencrypted connection to retrieve\n                                 information about the video. (Currently\n                                 supported only for YouTube)\n--user-agent UA                  Specify a custom user agent\n--referer URL                    Specify a custom referer, use if the video\n                                 access is restricted to one domain\n--add-header FIELD:VALUE         Specify a custom HTTP header and its value,\n                                 separated by a colon ':'. You can use this\n                                 option multiple times\n--bidi-workaround                Work around terminals that lack\n                                 bidirectional text support. Requires bidiv\n                                 or fribidi executable in PATH\n--sleep-interval SECONDS         Number of seconds to sleep before each\n                                 download when used alone or a lower bound\n                                 of a range for randomized sleep before each\n                                 download (minimum possible number of\n                                 seconds to sleep) when used along with\n                                 --max-sleep-interval.\n--max-sleep-interval SECONDS     Upper bound of a range for randomized sleep\n                                 before each download (maximum possible\n                                 number of seconds to sleep). Must only be\n                                 used along with --min-sleep-interval.\n\nVideo Format Options:\n-f, --format FORMAT              Video format code, see the \"FORMAT\n                                 SELECTION\" for all the info\n--all-formats                    Download all available video formats\n--prefer-free-formats            Prefer free video formats unless a specific\n                                 one is requested\n-F, --list-formats               List all available formats of requested\n                                 videos\n--youtube-skip-dash-manifest     Do not download the DASH manifests and\n                                 related data on YouTube videos\n--merge-output-format FORMAT     If a merge is required (e.g.\n                                 bestvideo+bestaudio), output to given\n                                 container format. One of mkv, mp4, ogg,\n                                 webm, flv. Ignored if no merge is required\n\nSubtitle Options:\n--write-sub                      Write subtitle file\n--write-auto-sub                 Write automatically generated subtitle file\n                                 (YouTube only)\n--all-subs                       Download all the available subtitles of the\n                                 video\n--list-subs                      List all available subtitles for the video\n--sub-format FORMAT              Subtitle format, accepts formats\n                                 preference, for example: \"srt\" or\n                                 \"ass\/srt\/best\"\n--sub-lang LANGS                 Languages of the subtitles to download\n                                 (optional) separated by commas, use --list-\n                                 subs for available language tags\n\nAuthentication Options:\n-u, --username USERNAME          Login with this account ID\n-p, --password PASSWORD          Account password. If this option is left\n                                 out, youtube-dl will ask interactively.\n-2, --twofactor TWOFACTOR        Two-factor authentication code\n-n, --netrc                      Use .netrc authentication data\n--video-password PASSWORD        Video password (vimeo, smotri, youku)\n\nAdobe Pass Options:\n--ap-mso MSO                     Adobe Pass multiple-system operator (TV\n                                 provider) identifier, use --ap-list-mso for\n                                 a list of available MSOs\n--ap-username USERNAME           Multiple-system operator account login\n--ap-password PASSWORD           Multiple-system operator account password.\n                                 If this option is left out, youtube-dl will\n                                 ask interactively.\n--ap-list-mso                    List all supported multiple-system\n                                 operators\n\nPost-processing Options:\n-x, --extract-audio              Convert video files to audio-only files\n                                 (requires ffmpeg or avconv and ffprobe or\n                                 avprobe)\n--audio-format FORMAT            Specify audio format: \"best\", \"aac\",\n                                 \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or\n                                 \"wav\"; \"best\" by default; No effect without\n                                 -x\n--audio-quality QUALITY          Specify ffmpeg\/avconv audio quality, insert\n                                 a value between 0 (better) and 9 (worse)\n                                 for VBR or a specific bitrate like 128K\n                                 (default 5)\n--recode-video FORMAT            Encode the video to another format if\n                                 necessary (currently supported:\n                                 mp4|flv|ogg|webm|mkv|avi)\n--postprocessor-args ARGS        Give these arguments to the postprocessor\n-k, --keep-video                 Keep the video file on disk after the post-\n                                 processing; the video is erased by default\n--no-post-overwrites             Do not overwrite post-processed files; the\n                                 post-processed files are overwritten by\n                                 default\n--embed-subs                     Embed subtitles in the video (only for mp4,\n                                 webm and mkv videos)\n--embed-thumbnail                Embed thumbnail in the audio as cover art\n--add-metadata                   Write metadata to the video file\n--metadata-from-title FORMAT     Parse additional metadata like song title \/\n                                 artist from the video title. The format\n                                 syntax is the same as --output. Regular\n                                 expression with named capture groups may\n                                 also be used. The parsed parameters replace\n                                 existing values. Example: --metadata-from-\n                                 title \"%(artist)s - %(title)s\" matches a\n                                 title like \"Coldplay - Paradise\". Example\n                                 (regex): --metadata-from-title\n                                 \"(?P<artist>.+?) - (?P<title>.+)\"\n--xattrs                         Write metadata to the video file's xattrs\n                                 (using dublin core and xdg standards)\n--fixup POLICY                   Automatically correct known faults of the\n                                 file. One of never (do nothing), warn (only\n                                 emit a warning), detect_or_warn (the\n                                 default; fix file if we can, warn\n                                 otherwise)\n--prefer-avconv                  Prefer avconv over ffmpeg for running the\n                                 postprocessors\n--prefer-ffmpeg                  Prefer ffmpeg over avconv for running the\n                                 postprocessors (default)\n--ffmpeg-location PATH           Location of the ffmpeg\/avconv binary;\n                                 either the path to the binary or its\n                                 containing directory.\n--exec CMD                       Execute a command on the file after\n                                 downloading and post-processing, similar to\n                                 find's -exec syntax. Example: --exec 'adb\n                                 push {} \/sdcard\/Music\/ && rm {}'\n--convert-subs FORMAT            Convert the subtitles to other format\n                                 (currently supported: srt|ass|vtt|lrc)\n\nCONFIGURATION\nYou can configure youtube-dl by placing any supported command line option to a configuration file. On Linux and macOS, the system wide configuration file is located at \/etc\/youtube-dl.conf and the user wide configuration file at ~\/.config\/youtube-dl\/config. On Windows, the user wide configuration file locations are %APPDATA%\\youtube-dl\\config.txt or C:\\Users\\<user name>\\youtube-dl.conf. Note that by default configuration file may not exist so you may need to create it yourself.\nFor example, with the following configuration file youtube-dl will always extract the audio, not copy the mtime, use a proxy and save all videos under Movies directory in your home directory:\n# Lines starting with # are comments\n\n# Always extract audio\n-x\n\n# Do not copy the mtime\n--no-mtime\n\n# Use this proxy\n--proxy 127.0.0.1:3128\n\n# Save all videos under Movies directory in your home directory\n-o ~\/Movies\/%(title)s.%(ext)s\n\nNote that options in configuration file are just the same options aka switches used in regular command line calls thus there must be no whitespace after - or --, e.g. -o or --proxy but not - o or -- proxy.\nYou can use --ignore-config if you want to disable the configuration file for a particular youtube-dl run.\nYou can also use --config-location if you want to use custom configuration file for a particular youtube-dl run.\nAuthentication with .netrc file\nYou may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with --username and --password) in order not to pass credentials as command line arguments on every youtube-dl execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a .netrc file on a per extractor basis. For that you will need to create a .netrc file in your $HOME and restrict permissions to read\/write by only you:\ntouch $HOME\/.netrc\nchmod a-rwx,u+rw $HOME\/.netrc\n\nAfter that you can add credentials for an extractor in the following format, where extractor is the name of the extractor in lowercase:\nmachine <extractor> login <login> password <password>\n\nFor example:\nmachine youtube login myaccount@gmail.com password my_youtube_password\nmachine twitch login my_twitch_account_name password my_twitch_password\n\nTo activate authentication with the .netrc file you should pass --netrc to youtube-dl or place it in the configuration file.\nOn Windows you may also need to setup the %HOME% environment variable manually. For example:\nset HOME=%USERPROFILE%\n\nOUTPUT TEMPLATE\nThe -o option allows users to indicate a template for the output file names.\ntl;dr: navigate me to examples.\nThe basic usage is not to set any template arguments when downloading a single file, like in youtube-dl -o funny_video.flv \"https:\/\/some\/video\". However, it may contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to python string formatting operations. For example, %(NAME)s or %(NAME)05d. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations. Allowed names along with sequence type are:\n\nid (string): Video identifier\ntitle (string): Video title\nurl (string): Video URL\next (string): Video filename extension\nalt_title (string): A secondary title of the video\ndisplay_id (string): An alternative identifier for the video\nuploader (string): Full name of the video uploader\nlicense (string): License name the video is licensed under\ncreator (string): The creator of the video\nrelease_date (string): The date (YYYYMMDD) when the video was released\ntimestamp (numeric): UNIX timestamp of the moment the video became available\nupload_date (string): Video upload date (YYYYMMDD)\nuploader_id (string): Nickname or id of the video uploader\nchannel (string): Full name of the channel the video is uploaded on\nchannel_id (string): Id of the channel\nlocation (string): Physical location where the video was filmed\nduration (numeric): Length of the video in seconds\nview_count (numeric): How many users have watched the video on the platform\nlike_count (numeric): Number of positive ratings of the video\ndislike_count (numeric): Number of negative ratings of the video\nrepost_count (numeric): Number of reposts of the video\naverage_rating (numeric): Average rating give by users, the scale used depends on the webpage\ncomment_count (numeric): Number of comments on the video\nage_limit (numeric): Age restriction for the video (years)\nis_live (boolean): Whether this video is a live stream or a fixed-length video\nstart_time (numeric): Time in seconds where the reproduction should start, as specified in the URL\nend_time (numeric): Time in seconds where the reproduction should end, as specified in the URL\nformat (string): A human-readable description of the format\nformat_id (string): Format code specified by --format\nformat_note (string): Additional info about the format\nwidth (numeric): Width of the video\nheight (numeric): Height of the video\nresolution (string): Textual description of width and height\ntbr (numeric): Average bitrate of audio and video in KBit\/s\nabr (numeric): Average audio bitrate in KBit\/s\nacodec (string): Name of the audio codec in use\nasr (numeric): Audio sampling rate in Hertz\nvbr (numeric): Average video bitrate in KBit\/s\nfps (numeric): Frame rate\nvcodec (string): Name of the video codec in use\ncontainer (string): Name of the container format\nfilesize (numeric): The number of bytes, if known in advance\nfilesize_approx (numeric): An estimate for the number of bytes\nprotocol (string): The protocol that will be used for the actual download\nextractor (string): Name of the extractor\nextractor_key (string): Key name of the extractor\nepoch (numeric): Unix epoch when creating the file\nautonumber (numeric): Number that will be increased with each download, starting at --autonumber-start\nplaylist (string): Name or id of the playlist that contains the video\nplaylist_index (numeric): Index of the video in the playlist padded with leading zeros according to the total length of the playlist\nplaylist_id (string): Playlist identifier\nplaylist_title (string): Playlist title\nplaylist_uploader (string): Full name of the playlist uploader\nplaylist_uploader_id (string): Nickname or id of the playlist uploader\n\nAvailable for the video that belongs to some logical chapter or section:\n\nchapter (string): Name or title of the chapter the video belongs to\nchapter_number (numeric): Number of the chapter the video belongs to\nchapter_id (string): Id of the chapter the video belongs to\n\nAvailable for the video that is an episode of some series or programme:\n\nseries (string): Title of the series or programme the video episode belongs to\nseason (string): Title of the season the video episode belongs to\nseason_number (numeric): Number of the season the video episode belongs to\nseason_id (string): Id of the season the video episode belongs to\nepisode (string): Title of the video episode\nepisode_number (numeric): Number of the video episode within a season\nepisode_id (string): Id of the video episode\n\nAvailable for the media that is a track or a part of a music album:\n\ntrack (string): Title of the track\ntrack_number (numeric): Number of the track within an album or a disc\ntrack_id (string): Id of the track\nartist (string): Artist(s) of the track\ngenre (string): Genre(s) of the track\nalbum (string): Title of the album the track belongs to\nalbum_type (string): Type of the album\nalbum_artist (string): List of all artists appeared on the album\ndisc_number (numeric): Number of the disc or other physical medium the track belongs to\nrelease_year (numeric): Year (YYYY) when the album was released\n\nEach aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with NA.\nFor example for -o %(title)s-%(id)s.%(ext)s and an mp4 video with title youtube-dl test video and id BaW_jenozKcj, this will result in a youtube-dl test video-BaW_jenozKcj.mp4 file created in the current directory.\nFor numeric sequences you can use numeric related formatting, for example, %(view_count)05d will result in a string with view count padded with zeros up to 5 characters, like in 00042.\nOutput templates can also contain arbitrary hierarchical path, e.g. -o '%(playlist)s\/%(playlist_index)s - %(title)s.%(ext)s' which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.\nTo use percent literals in an output template use %%. To output to stdout use -o -.\nThe current default template is %(title)s-%(id)s.%(ext)s.\nIn some cases, you don't want special characters such as \u4e2d, spaces, or &, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the --restrict-filenames flag to get a shorter title:\nOutput template and Windows batch files\nIf you are using an output template inside a Windows batch file then you must escape plain percent characters (%) by doubling, so that -o \"%(title)s-%(id)s.%(ext)s\" should become -o \"%%(title)s-%%(id)s.%%(ext)s\". However you should not touch %'s that are not plain characters, e.g. environment variables for expansion should stay intact: -o \"C:\\%HOMEPATH%\\Desktop\\%%(title)s.%%(ext)s\".\nOutput template examples\nNote that on Windows you may need to use double quotes instead of single.\n$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc\nyoutube-dl test video ''_\u00e4\u21ad\ud835\udd50.mp4    # All kinds of weird characters\n\n$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc --restrict-filenames\nyoutube-dl_test_video_.mp4          # A simple file name\n\n# Download YouTube playlist videos in separate directory indexed by video order in a playlist\n$ youtube-dl -o '%(playlist)s\/%(playlist_index)s - %(title)s.%(ext)s' https:\/\/www.youtube.com\/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\n\n# Download all playlists of YouTube channel\/user keeping each playlist in separate directory:\n$ youtube-dl -o '%(uploader)s\/%(playlist)s\/%(playlist_index)s - %(title)s.%(ext)s' https:\/\/www.youtube.com\/user\/TheLinuxFoundation\/playlists\n\n# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home\n$ youtube-dl -u user -p password -o '~\/MyVideos\/%(playlist)s\/%(chapter_number)s - %(chapter)s\/%(title)s.%(ext)s' https:\/\/www.udemy.com\/java-tutorial\/\n\n# Download entire series season keeping each series and each season in separate directory under C:\/MyVideos\n$ youtube-dl -o \"C:\/MyVideos\/%(series)s\/%(season_number)s - %(season)s\/%(episode_number)s - %(episode)s.%(ext)s\" https:\/\/videomore.ru\/kino_v_detalayah\/5_sezon\/367617\n\n# Stream the video being downloaded to stdout\n$ youtube-dl -o - BaW_jenozKc\nFORMAT SELECTION\nBy default youtube-dl tries to download the best available quality, i.e. if you want the best quality you don't need to pass any special options, youtube-dl will guess it for you by default.\nBut sometimes you may want to download in a different format, for example when you are on a slow or intermittent connection. The key mechanism for achieving this is so-called format selection based on which you can explicitly specify desired format, select formats based on some criterion or criteria, setup precedence and much more.\nThe general syntax for format selection is --format FORMAT or shorter -f FORMAT where FORMAT is a selector expression, i.e. an expression that describes format or formats you would like to download.\ntl;dr: navigate me to examples.\nThe simplest case is requesting a specific format, for example with -f 22 you can download the format with format code equal to 22. You can get the list of available format codes for particular video using --list-formats or -F. Note that these format codes are extractor specific.\nYou can also use a file extension (currently 3gp, aac, flv, m4a, mp3, mp4, ogg, wav, webm are supported) to download the best quality format of a particular file extension served as a single file, e.g. -f webm will download the best quality format with the webm extension served as a single file.\nYou can also use special names to select particular edge case formats:\n\nbest: Select the best quality format represented by a single file with video and audio.\nworst: Select the worst quality format represented by a single file with video and audio.\nbestvideo: Select the best quality video-only format (e.g. DASH video). May not be available.\nworstvideo: Select the worst quality video-only format. May not be available.\nbestaudio: Select the best quality audio only-format. May not be available.\nworstaudio: Select the worst quality audio only-format. May not be available.\n\nFor example, to download the worst quality video-only format you can use -f worstvideo.\nIf you want to download multiple videos and they don't have the same formats available, you can specify the order of preference using slashes. Note that slash is left-associative, i.e. formats on the left hand side are preferred, for example -f 22\/17\/18 will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.\nIf you want to download several formats of the same video use a comma as a separator, e.g. -f 22,17,18 will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: -f 136\/137\/mp4\/bestvideo,140\/m4a\/bestaudio.\nYou can also filter the video formats by putting a condition in brackets, as in -f \"best[height=720]\" (or -f \"[filesize>10M]\").\nThe following numeric meta fields can be used with comparisons <, <=, >, >=, = (equals), != (not equals):\n\nfilesize: The number of bytes, if known in advance\nwidth: Width of the video, if known\nheight: Height of the video, if known\ntbr: Average bitrate of audio and video in KBit\/s\nabr: Average audio bitrate in KBit\/s\nvbr: Average video bitrate in KBit\/s\nasr: Audio sampling rate in Hertz\nfps: Frame rate\n\nAlso filtering work for comparisons = (equals), ^= (starts with), $= (ends with), *= (contains) and following string meta fields:\n\next: File extension\nacodec: Name of the audio codec in use\nvcodec: Name of the video codec in use\ncontainer: Name of the container format\nprotocol: The protocol that will be used for the actual download, lower-case (http, https, rtsp, rtmp, rtmpe, mms, f4m, ism, http_dash_segments, m3u8, or m3u8_native)\nformat_id: A short description of the format\n\nAny string comparison may be prefixed with negation ! in order to produce an opposite comparison, e.g. !*= (does not contain).\nNote that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the video hoster.\nFormats for which the value is not known are excluded unless you put a question mark (?) after the operator. You can combine format filters, so -f \"[height <=? 720][tbr>500]\" selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit\/s.\nYou can merge the video and audio of two formats into a single file using -f <video-format>+<audio-format> (requires ffmpeg or avconv installed), for example -f bestvideo+bestaudio will download the best video-only format, the best audio-only format and mux them together with ffmpeg\/avconv.\nFormat selectors can also be grouped using parentheses, for example if you want to download the best mp4 and webm formats with a height lower than 480 you can use -f '(mp4,webm)[height<480]'.\nSince the end of April 2015 and version 2015.04.26, youtube-dl uses -f bestvideo+bestaudio\/best as the default format selection (see #5447, #5456). If ffmpeg or avconv are installed this results in downloading bestvideo and bestaudio separately and muxing them together into a single file giving the best overall quality available. Otherwise it falls back to best and results in downloading the best available quality served as a single file. best is also needed for videos that don't come from YouTube because they don't provide the audio and video in two different files. If you want to only download some DASH formats (for example if you are not interested in getting videos with a resolution higher than 1080p), you can add -f bestvideo[height<=?1080]+bestaudio\/best to your configuration file. Note that if you use youtube-dl to stream to stdout (and most likely to pipe it to your media player then), i.e. you explicitly specify output template as -o -, youtube-dl still uses -f best format selection in order to start content delivery immediately to your player and not to wait until bestvideo and bestaudio are downloaded and muxed.\nIf you want to preserve the old format selection behavior (prior to youtube-dl 2015.04.26), i.e. you want to download the best available quality media served as a single file, you should explicitly specify your choice with -f best. You may want to add it to the configuration file in order not to type it every time you run youtube-dl.\nFormat selection examples\nNote that on Windows you may need to use double quotes instead of single.\n# Download best mp4 format available or any other best if no mp4 available\n$ youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]\/best[ext=mp4]\/best'\n\n# Download best format available but no better than 480p\n$ youtube-dl -f 'bestvideo[height<=480]+bestaudio\/best[height<=480]'\n\n# Download best video only format but no bigger than 50 MB\n$ youtube-dl -f 'best[filesize<50M]'\n\n# Download best format available via direct link over HTTP\/HTTPS protocol\n$ youtube-dl -f '(bestvideo+bestaudio\/best)[protocol^=http]'\n\n# Download the best video format and the best audio format without merging them\n$ youtube-dl -f 'bestvideo,bestaudio' -o '%(title)s.f%(format_id)s.%(ext)s'\nNote that in the last example, an output template is recommended as bestvideo and bestaudio may have the same file name.\nVIDEO SELECTION\nVideos can be filtered by their upload date using the options --date, --datebefore or --dateafter. They accept dates in two formats:\n\nAbsolute dates: Dates in the format YYYYMMDD.\nRelative dates: Dates in the format (now|today)[+-][0-9](day|week|month|year)(s)?\n\nExamples:\n# Download only the videos uploaded in the last 6 months\n$ youtube-dl --dateafter now-6months\n\n# Download only the videos uploaded on January 1, 1970\n$ youtube-dl --date 19700101\n\n$ # Download only the videos uploaded in the 200x decade\n$ youtube-dl --dateafter 20000101 --datebefore 20091231\nFAQ\nHow do I update youtube-dl?\nIf you've followed our manual installation instructions, you can simply run youtube-dl -U (or, on Linux, sudo youtube-dl -U).\nIf you have used pip, a simple sudo pip install -U youtube-dl is sufficient to update.\nIf you have installed youtube-dl using a package manager like apt-get or yum, use the standard system update mechanism to update. Note that distribution packages are often outdated. As a rule of thumb, youtube-dl releases at least once a month, and often weekly or even daily. Simply go to https:\/\/yt-dl.org to find out the current version. Unfortunately, there is nothing we youtube-dl developers can do if your distribution serves a really outdated version. You can (and should) complain to your distribution in their bugtracker or support forum.\nAs a last resort, you can also uninstall the version installed by your package manager and follow our manual installation instructions. For that, remove the distribution's package, with a line like\nsudo apt-get remove -y youtube-dl\n\nAfterwards, simply follow our manual installation instructions:\nsudo wget https:\/\/yt-dl.org\/downloads\/latest\/youtube-dl -O \/usr\/local\/bin\/youtube-dl\nsudo chmod a+rx \/usr\/local\/bin\/youtube-dl\nhash -r\n\nAgain, from then on you'll be able to update with sudo youtube-dl -U.\nyoutube-dl is extremely slow to start on Windows\nAdd a file exclusion for youtube-dl.exe in Windows Defender settings.\nI'm getting an error Unable to extract OpenGraph title on YouTube playlists\nYouTube changed their playlist format in March 2014 and later on, so you'll need at least youtube-dl 2014.07.25 to download all YouTube videos.\nIf you have installed youtube-dl with a package manager, pip, setup.py or a tarball, please use that to update. Note that Ubuntu packages do not seem to get updated anymore. Since we are not affiliated with Ubuntu, there is little we can do. Feel free to report bugs to the Ubuntu packaging people - all they have to do is update the package to a somewhat recent version. See above for a way to update.\nI'm getting an error when trying to use output template: error: using output template conflicts with using title, video ID or auto number\nMake sure you are not using -o with any of these options -t, --title, --id, -A or --auto-number set in command line or in a configuration file. Remove the latter if any.\nDo I always have to pass -citw?\nBy default, youtube-dl intends to have the best options (incidentally, if you have a convincing case that these should be different, please file an issue where you explain that). Therefore, it is unnecessary and sometimes harmful to copy long option strings from webpages. In particular, the only option out of -citw that is regularly useful is -i.\nCan you please put the -b option back?\nMost people asking this question are not aware that youtube-dl now defaults to downloading the highest available quality as reported by YouTube, which will be 1080p or 720p in some cases, so you no longer need the -b option. For some specific videos, maybe YouTube does not report them to be available in a specific high quality format you're interested in. In that case, simply request it with the -f option and youtube-dl will try to download it.\nI get HTTP error 402 when trying to download a video. What's this?\nApparently YouTube requires you to pass a CAPTCHA test if you download too much. We're considering to provide a way to let you solve the CAPTCHA, but at the moment, your best course of action is pointing a web browser to the youtube URL, solving the CAPTCHA, and restart youtube-dl.\nDo I need any other programs?\nyoutube-dl works fine on its own on most sites. However, if you want to convert video\/audio, you'll need avconv or ffmpeg. On some sites - most notably YouTube - videos can be retrieved in a higher quality format without sound. youtube-dl will detect whether avconv\/ffmpeg is present and automatically pick the best option.\nVideos or video formats streamed via RTMP protocol can only be downloaded when rtmpdump is installed. Downloading MMS and RTSP videos requires either mplayer or mpv to be installed.\nI have downloaded a video but how can I play it?\nOnce the video is fully downloaded, use any video player, such as mpv, vlc or mplayer.\nI extracted a video URL with -g, but it does not play on another machine \/ in my web browser.\nIt depends a lot on the service. In many cases, requests for the video (to download\/play it) must come from the same IP address and with the same cookies and\/or HTTP headers. Use the --cookies option to write the required cookies into a file, and advise your downloader to read cookies from that file. Some sites also require a common user agent to be used, use --dump-user-agent to see the one in use by youtube-dl. You can also get necessary cookies and HTTP headers from JSON output obtained with --dump-json.\nIt may be beneficial to use IPv6; in some cases, the restrictions are only applied to IPv4. Some services (sometimes only for a subset of videos) do not restrict the video URL by IP address, cookie, or user-agent, but these are the exception rather than the rule.\nPlease bear in mind that some URL protocols are not supported by browsers out of the box, including RTMP. If you are using -g, your own downloader must support these as well.\nIf you want to play the video on a machine that is not running youtube-dl, you can relay the video content from the machine that runs youtube-dl. You can use -o - to let youtube-dl stream a video to stdout, or simply allow the player to download the files written by youtube-dl in turn.\nERROR: no fmt_url_map or conn information found in video info\nYouTube has switched to a new video info format in July 2011 which is not supported by old versions of youtube-dl. See above for how to update youtube-dl.\nERROR: unable to download video\nYouTube requires an additional signature since September 2012 which is not supported by old versions of youtube-dl. See above for how to update youtube-dl.\nVideo URL contains an ampersand and I'm getting some strange output [1] 2839 or 'v' is not recognized as an internal or external command\nThat's actually the output from your shell. Since ampersand is one of the special shell characters it's interpreted by the shell preventing you from passing the whole URL to youtube-dl. To disable your shell from interpreting the ampersands (or any other special characters) you have to either put the whole URL in quotes or escape them with a backslash (which approach will work depends on your shell).\nFor example if your URL is https:\/\/www.youtube.com\/watch?t=4&v=BaW_jenozKc you should end up with following command:\nyoutube-dl 'https:\/\/www.youtube.com\/watch?t=4&v=BaW_jenozKc'\nor\nyoutube-dl https:\/\/www.youtube.com\/watch?t=4\\&v=BaW_jenozKc\nFor Windows you have to use the double quotes:\nyoutube-dl \"https:\/\/www.youtube.com\/watch?t=4&v=BaW_jenozKc\"\nExtractorError: Could not find JS function u'OF'\nIn February 2015, the new YouTube player contained a character sequence in a string that was misinterpreted by old versions of youtube-dl. See above for how to update youtube-dl.\nHTTP Error 429: Too Many Requests or 402: Payment Required\nThese two error codes indicate that the service is blocking your IP address because of overuse. Usually this is a soft block meaning that you can gain access again after solving CAPTCHA. Just open a browser and solve a CAPTCHA the service suggests you and after that pass cookies to youtube-dl. Note that if your machine has multiple external IPs then you should also pass exactly the same IP you've used for solving CAPTCHA with --source-address. Also you may need to pass a User-Agent HTTP header of your browser with --user-agent.\nIf this is not the case (no CAPTCHA suggested to solve by the service) then you can contact the service and ask them to unblock your IP address, or - if you have acquired a whitelisted IP address already - use the --proxy or --source-address options to select another IP address.\nSyntaxError: Non-ASCII character\nThe error\nFile \"youtube-dl\", line 2\nSyntaxError: Non-ASCII character '\\x93' ...\n\nmeans you're using an outdated version of Python. Please update to Python 2.6 or 2.7.\nWhat is this binary file? Where has the code gone?\nSince June 2012 (#342) youtube-dl is packed as an executable zipfile, simply unzip it (might need renaming to youtube-dl.zip first on some systems) or clone the git repository, as laid out above. If you modify the code, you can run it by executing the __main__.py file. To recompile the executable, run make youtube-dl.\nThe exe throws an error due to missing MSVCR100.dll\nTo run the exe you need to install first the Microsoft Visual C++ 2010 Redistributable Package (x86).\nOn Windows, how should I set up ffmpeg and youtube-dl? Where should I put the exe files?\nIf you put youtube-dl and ffmpeg in the same directory that you're running the command from, it will work, but that's rather cumbersome.\nTo make a different directory work - either for ffmpeg, or for youtube-dl, or for both - simply create the directory (say, C:\\bin, or C:\\Users\\<User name>\\bin), put all the executables directly in there, and then set your PATH environment variable to include that directory.\nFrom then on, after restarting your shell, you will be able to access both youtube-dl and ffmpeg (and youtube-dl will be able to find ffmpeg) by simply typing youtube-dl or ffmpeg, no matter what directory you're in.\nHow do I put downloads into a specific folder?\nUse the -o to specify an output template, for example -o \"\/home\/user\/videos\/%(title)s-%(id)s.%(ext)s\". If you want this for all of your downloads, put the option into your configuration file.\nHow do I download a video starting with a -?\nEither prepend https:\/\/www.youtube.com\/watch?v= or separate the ID from the options with --:\nyoutube-dl -- -wNyEUrxzFU\nyoutube-dl \"https:\/\/www.youtube.com\/watch?v=-wNyEUrxzFU\"\n\nHow do I pass cookies to youtube-dl?\nUse the --cookies option, for example --cookies \/path\/to\/cookies\/file.txt.\nIn order to extract cookies from browser use any conforming browser extension for exporting cookies. For example, cookies.txt (for Chrome) or cookies.txt (for Firefox).\nNote that the cookies file must be in Mozilla\/Netscape format and the first line of the cookies file must be either # HTTP Cookie File or # Netscape HTTP Cookie File. Make sure you have correct newline format in the cookies file and convert newlines if necessary to correspond with your OS, namely CRLF (\\r\\n) for Windows and LF (\\n) for Unix and Unix-like systems (Linux, macOS, etc.). HTTP Error 400: Bad Request when using --cookies is a good sign of invalid newline format.\nPassing cookies to youtube-dl is a good way to workaround login when a particular extractor does not implement it explicitly. Another use case is working around CAPTCHA some websites require you to solve in particular cases in order to get access (e.g. YouTube, CloudFlare).\nHow do I stream directly to media player?\nYou will first need to tell youtube-dl to stream media to stdout with -o -, and also tell your media player to read from stdin (it must be capable of this for streaming) and then pipe former to latter. For example, streaming to vlc can be achieved with:\nyoutube-dl -o - \"https:\/\/www.youtube.com\/watch?v=BaW_jenozKcj\" | vlc -\n\nHow do I download only new videos from a playlist?\nUse download-archive feature. With this feature you should initially download the complete playlist with --download-archive \/path\/to\/download\/archive\/file.txt that will record identifiers of all the videos in a special file. Each subsequent run with the same --download-archive will download only new videos and skip all videos that have been downloaded before. Note that only successful downloads are recorded in the file.\nFor example, at first,\nyoutube-dl --download-archive archive.txt \"https:\/\/www.youtube.com\/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\nwill download the complete PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re playlist and create a file archive.txt. Each subsequent run will only download new videos if any:\nyoutube-dl --download-archive archive.txt \"https:\/\/www.youtube.com\/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\nShould I add --hls-prefer-native into my config?\nWhen youtube-dl detects an HLS video, it can download it either with the built-in downloader or ffmpeg. Since many HLS streams are slightly invalid and ffmpeg\/youtube-dl each handle some invalid cases better than the other, there is an option to switch the downloader if needed.\nWhen youtube-dl knows that one particular downloader works better for a given website, that downloader will be picked. Otherwise, youtube-dl will pick the best downloader for general compatibility, which at the moment happens to be ffmpeg. This choice may change in future versions of youtube-dl, with improvements of the built-in downloader and\/or ffmpeg.\nIn particular, the generic extractor (used when your website is not in the list of supported sites by youtube-dl cannot mandate one specific downloader.\nIf you put either --hls-prefer-native or --hls-prefer-ffmpeg into your configuration, a different subset of videos will fail to download correctly. Instead, it is much better to file an issue or a pull request which details why the native or the ffmpeg HLS downloader is a better choice for your use case.\nCan you add support for this anime video site, or site which shows current movies for free?\nAs a matter of policy (as well as legality), youtube-dl does not include support for services that specialize in infringing copyright. As a rule of thumb, if you cannot easily find a video that the service is quite obviously allowed to distribute (i.e. that has been uploaded by the creator, the creator's distributor, or is published under a free license), the service is probably unfit for inclusion to youtube-dl.\nA note on the service that they don't host the infringing content, but just link to those who do, is evidence that the service should not be included into youtube-dl. The same goes for any DMCA note when the whole front page of the service is filled with videos they are not allowed to distribute. A \"fair use\" note is equally unconvincing if the service shows copyright-protected videos in full without authorization.\nSupport requests for services that do purchase the rights to distribute their content are perfectly fine though. If in doubt, you can simply include a source that mentions the legitimate purchase of content.\nHow can I speed up work on my issue?\n(Also known as: Help, my important issue not being solved!) The youtube-dl core developer team is quite small. While we do our best to solve as many issues as possible, sometimes that can take quite a while. To speed up your issue, here's what you can do:\nFirst of all, please do report the issue at our issue tracker. That allows us to coordinate all efforts by users and developers, and serves as a unified point. Unfortunately, the youtube-dl project has grown too large to use personal email as an effective communication channel.\nPlease read the bug reporting instructions below. A lot of bugs lack all the necessary information. If you can, offer proxy, VPN, or shell access to the youtube-dl developers. If you are able to, test the issue from multiple computers in multiple countries to exclude local censorship or misconfiguration issues.\nIf nobody is interested in solving your issue, you are welcome to take matters into your own hands and submit a pull request (or coerce\/pay somebody else to do so).\nFeel free to bump the issue from time to time by writing a small comment (\"Issue is still present in youtube-dl version ...from France, but fixed from Belgium\"), but please not more than once a month. Please do not declare your issue as important or urgent.\nHow can I detect whether a given URL is supported by youtube-dl?\nFor one, have a look at the list of supported sites. Note that it can sometimes happen that the site changes its URL scheme (say, from https:\/\/example.com\/video\/1234567 to https:\/\/example.com\/v\/1234567 ) and youtube-dl reports an URL of a service in that list as unsupported. In that case, simply report a bug.\nIt is not possible to detect whether a URL is supported or not. That's because youtube-dl contains a generic extractor which matches all URLs. You may be tempted to disable, exclude, or remove the generic extractor, but the generic extractor not only allows users to extract videos from lots of websites that embed a video from another service, but may also be used to extract video from a service that it's hosting itself. Therefore, we neither recommend nor support disabling, excluding, or removing the generic extractor.\nIf you want to find out whether a given URL is supported, simply call youtube-dl with it. If you get no videos back, chances are the URL is either not referring to a video or unsupported. You can find out which by examining the output (if you run youtube-dl on the console) or catching an UnsupportedError exception if you run it from a Python program.\nWhy do I need to go through that much red tape when filing bugs?\nBefore we had the issue template, despite our extensive bug reporting instructions, about 80% of the issue reports we got were useless, for instance because people used ancient versions hundreds of releases old, because of simple syntactic errors (not in youtube-dl but in general shell usage), because the problem was already reported multiple times before, because people did not actually read an error message, even if it said \"please install ffmpeg\", because people did not mention the URL they were trying to download and many more simple, easy-to-avoid problems, many of whom were totally unrelated to youtube-dl.\nyoutube-dl is an open-source project manned by too few volunteers, so we'd rather spend time fixing bugs where we are certain none of those simple problems apply, and where we can be reasonably confident to be able to reproduce the issue without asking the reporter repeatedly. As such, the output of youtube-dl -v YOUR_URL_HERE is really all that's required to file an issue. The issue template also guides you through some basic steps you can do, such as checking that your version of youtube-dl is current.\nDEVELOPER INSTRUCTIONS\nMost users do not need to build youtube-dl and can download the builds or get them from their distribution.\nTo run youtube-dl as a developer, you don't need to build anything either. Simply execute\npython -m youtube_dl\n\nTo run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:\npython -m unittest discover\npython test\/test_download.py\nnosetests\n\nSee item 6 of new extractor tutorial for how to run extractor specific test cases.\nIf you want to create a build of youtube-dl yourself, you'll need\n\npython\nmake (only GNU make is supported)\npandoc\nzip\nnosetests\n\nAdding support for a new site\nIf you want to add support for a new site, first of all make sure this site is not dedicated to copyright infringement. youtube-dl does not support such sites thus pull requests adding support for them will be rejected.\nAfter you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called yourextractor):\n\n\nFork this repository\n\n\nCheck out the source code with:\n git clone git@github.com:YOUR_GITHUB_USERNAME\/youtube-dl.git\n\n\n\nStart a new git branch with\n cd youtube-dl\n git checkout -b yourextractor\n\n\n\nStart with this simple template and save it to youtube_dl\/extractor\/yourextractor.py:\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass YourExtractorIE(InfoExtractor):\n    _VALID_URL = r'https?:\/\/(?:www\\.)?yourextractor\\.com\/watch\/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'https:\/\/yourextractor.com\/watch\/42',\n        'md5': 'TODO: md5 sum of the first 10241 bytes of the video file (use --test)',\n        'info_dict': {\n            'id': '42',\n            'ext': 'mp4',\n            'title': 'Video title goes here',\n            'thumbnail': r're:^https?:\/\/.*\\.jpg$',\n            # TODO more properties, either as:\n            # * A value\n            # * MD5 checksum; start the string with md5:\n            # * A regular expression; start the string with re:\n            # * Any Python type (for example int or float)\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        # TODO more code goes here, for example ...\n        title = self._html_search_regex(r'<h1>(.+?)<\/h1>', webpage, 'title')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': self._og_search_description(webpage),\n            'uploader': self._search_regex(r'<div[^>]+id=\"uploader\"[^>]*>([^<]+)<', webpage, 'uploader', fatal=False),\n            # TODO more properties (see youtube_dl\/extractor\/common.py)\n        }\n\n\nAdd an import in youtube_dl\/extractor\/extractors.py.\n\n\nRun python test\/test_download.py TestDownload.test_YourExtractor. This should fail at first, but you can continually re-run it until you're done. If you decide to add more than one test, then rename _TEST to _TESTS and make it into a list of dictionaries. The tests will then be named TestDownload.test_YourExtractor, TestDownload.test_YourExtractor_1, TestDownload.test_YourExtractor_2, etc. Note that tests with only_matching key in test's dict are not counted in.\n\n\nHave a look at youtube_dl\/extractor\/common.py for possible helper methods and a detailed description of what your extractor should and may return. Add tests and code for as many as you want.\n\n\nMake sure your code follows youtube-dl coding conventions and check the code with flake8:\n $ flake8 youtube_dl\/extractor\/yourextractor.py\n\n\n\nMake sure your code works under all Python versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.\n\n\nWhen the tests pass, add the new files and commit them and push the result, like this:\n$ git add youtube_dl\/extractor\/extractors.py\n$ git add youtube_dl\/extractor\/yourextractor.py\n$ git commit -m '[yourextractor] Add new extractor'\n$ git push origin yourextractor\n\n\n\nFinally, create a pull request. We'll then review and merge it.\n\n\nIn any case, thank you very much for your contributions!\nyoutube-dl coding conventions\nThis section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.\nExtractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source's layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros' packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.\nMandatory and optional metafields\nFor extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an information dictionary or simply info dict. Only the following meta fields in the info dict are considered mandatory for a successful extraction process by youtube-dl:\n\nid (media identifier)\ntitle (media title)\nurl (media download URL) or formats\n\nIn fact only the last option is technically mandatory (i.e. if you can't figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats id and title as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.\nAny field apart from the aforementioned ones are considered optional. That means that extraction should be tolerant to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and future-proof in order not to break the extraction of general purpose mandatory fields.\nExample\nSay you have some source dictionary meta that you've fetched as JSON with HTTP request and it has a key summary:\nmeta = self._download_json(url, video_id)\nAssume at this point meta's layout is:\n{\n    ...\n    \"summary\": \"some fancy summary text\",\n    ...\n}\nAssume you want to extract summary and put it into the resulting info dict as description. Since description is an optional meta field you should be ready that this key may be missing from the meta dict, so that you should extract it like:\ndescription = meta.get('summary')  # correct\nand not like:\ndescription = meta['summary']  # incorrect\nThe latter will break extraction process with KeyError if summary disappears from meta at some later time but with the former approach extraction will just go ahead with description set to None which is perfectly fine (remember None is equivalent to the absence of data).\nSimilarly, you should pass fatal=False when extracting optional data from a webpage with _search_regex, _html_search_regex or similar methods, for instance:\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', fatal=False)\nWith fatal set to False if _search_regex fails to extract description it will emit a warning and continue extraction.\nYou can also pass default=<some fallback value>, for example:\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', default=None)\nOn failure this code will silently continue the extraction with description set to None. That is useful for metafields that may or may not be present.\nProvide fallbacks\nWhen extracting metadata try to do so from multiple sources. For example if title is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.\nExample\nSay meta from the previous example has a title and you are about to extract it. Since title is a mandatory meta field you should end up with something like:\ntitle = meta['title']\nIf title disappears from meta in future due to some changes on the hoster's side the extraction would fail since title is mandatory. That's expected.\nAssume that you have some another source you can extract title from, for example og:title HTML meta of a webpage. In this case you can provide a fallback scenario:\ntitle = meta.get('title') or self._og_search_title(webpage)\nThis code will try to extract from meta first and if it fails it will try extracting og:title from a webpage.\nRegular expressions\nDon't capture groups you don't use\nCapturing group must be an indication that it's used somewhere in the code. Any group that is not used must be non capturing.\nExample\nDon't capture id attribute name here since you can't use it for anything anyway.\nCorrect:\nr'(?:id|ID)=(?P<id>\\d+)'\nIncorrect:\nr'(id|ID)=(?P<id>\\d+)'\nMake regular expressions relaxed and flexible\nWhen using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.\nExample\nSay you need to extract title from the following HTML code:\n<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">some fancy title<\/span>\nThe code for that task should look similar to:\ntitle = self._search_regex(\n    r'<span[^>]+class=\"title\"[^>]*>([^<]+)', webpage, 'title')\nOr even better:\ntitle = self._search_regex(\n    r'<span[^>]+class=([\"\\'])title\\1[^>]*>(?P<title>[^<]+)',\n    webpage, 'title', group='title')\nNote how you tolerate potential changes in the style attribute's value or switch from using double quotes to single for class attribute:\nThe code definitely should not look like:\ntitle = self._search_regex(\n    r'<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">(.*?)<\/span>',\n    webpage, 'title', group='title')\nLong lines policy\nThere is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.\nFor example, you should never split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:\nCorrect:\n'https:\/\/www.youtube.com\/watch?v=FqZTN594JQw&list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\nIncorrect:\n'https:\/\/www.youtube.com\/watch?v=FqZTN594JQw&list='\n'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\nInline values\nExtracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.\nExample\nCorrect:\ntitle = self._html_search_regex(r'<title>([^<]+)<\/title>', webpage, 'title')\nIncorrect:\nTITLE_RE = r'<title>([^<]+)<\/title>'\n# ...some lines of code...\ntitle = self._html_search_regex(TITLE_RE, webpage, 'title')\nCollapse fallbacks\nMultiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.\nExample\nGood:\ndescription = self._html_search_meta(\n    ['og:description', 'description', 'twitter:description'],\n    webpage, 'description', default=None)\nUnwieldy:\ndescription = (\n    self._og_search_description(webpage, default=None)\n    or self._html_search_meta('description', webpage, default=None)\n    or self._html_search_meta('twitter:description', webpage, default=None))\nMethods supporting list of patterns are: _search_regex, _html_search_regex, _og_search_property, _html_search_meta.\nTrailing parentheses\nAlways move trailing parentheses after the last argument.\nExample\nCorrect:\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list)\nIncorrect:\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list,\n)\nUse convenience conversion and parsing functions\nWrap all extracted numeric data into safe functions from youtube_dl\/utils.py: int_or_none, float_or_none. Use them for string to number conversions as well.\nUse url_or_none for safe URL processing.\nUse try_get for safe metadata extraction from parsed JSON.\nUse unified_strdate for uniform upload_date or any YYYYMMDD meta field extraction, unified_timestamp for uniform timestamp extraction, parse_filesize for filesize extraction, parse_count for count meta fields extraction, parse_resolution, parse_duration for duration extraction, parse_age_limit for age_limit extraction.\nExplore youtube_dl\/utils.py for more useful convenience functions.\nMore examples\nSafely extract optional description from parsed JSON\ndescription = try_get(response, lambda x: x['result']['video'][0]['summary'], compat_str)\nSafely extract more optional metadata\nvideo = try_get(response, lambda x: x['result']['video'][0], dict) or {}\ndescription = video.get('summary')\nduration = float_or_none(video.get('durationMs'), scale=1000)\nview_count = int_or_none(video.get('views'))\nEMBEDDING YOUTUBE-DL\nyoutube-dl makes the best effort to be a good command-line program, and thus should be callable from any programming language. If you encounter any problems parsing its output, feel free to create a report.\nFrom a Python program, you can embed youtube-dl in a more powerful fashion, like this:\nfrom __future__ import unicode_literals\nimport youtube_dl\n\nydl_opts = {}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https:\/\/www.youtube.com\/watch?v=BaW_jenozKc'])\nMost likely, you'll want to use various options. For a list of options available, have a look at youtube_dl\/YoutubeDL.py. For a start, if you want to intercept youtube-dl's output, set a logger object.\nHere's a more complete example of a program that outputs only errors (and a short message after the download is finished), and downloads\/converts the video to an mp3 file:\nfrom __future__ import unicode_literals\nimport youtube_dl\n\n\nclass MyLogger(object):\n    def debug(self, msg):\n        pass\n\n    def warning(self, msg):\n        pass\n\n    def error(self, msg):\n        print(msg)\n\n\ndef my_hook(d):\n    if d['status'] == 'finished':\n        print('Done downloading, now converting ...')\n\n\nydl_opts = {\n    'format': 'bestaudio\/best',\n    'postprocessors': [{\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'mp3',\n        'preferredquality': '192',\n    }],\n    'logger': MyLogger(),\n    'progress_hooks': [my_hook],\n}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https:\/\/www.youtube.com\/watch?v=BaW_jenozKc'])\nBUGS\nBugs and suggestions should be reported at: https:\/\/github.com\/ytdl-org\/youtube-dl\/issues. Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in the IRC channel #youtube-dl on freenode (webchat).\nPlease include the full output of youtube-dl when run with -v, i.e. add -v flag to your command line, copy the whole output and post it in the issue body wrapped in ``` for better formatting. It should look similar to this:\n$ youtube-dl -v <your command line>\n[debug] System config: []\n[debug] User config: []\n[debug] Command-line args: [u'-v', u'https:\/\/www.youtube.com\/watch?v=BaW_jenozKcj']\n[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n[debug] youtube-dl version 2015.12.06\n[debug] Git HEAD: 135392e\n[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2\n[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n[debug] Proxy map: {}\n...\n\nDo not post screenshots of verbose logs; only plain text is acceptable.\nThe output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.\nPlease re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):\nIs the description of the issue itself sufficient?\nWe often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources. Many contributors, including myself, are also not native speakers, so we may misread some parts.\nSo please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it's obvious\n\nWhat the problem is\nHow it could be fixed\nHow your proposed solution would look like\n\nIf your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We're often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.\nFor bug reports, this means that your report should contain the complete output of youtube-dl when called with the -v flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.\nIf your server has multiple IPs or you suspect censorship, adding --call-home may be a good idea to get more diagnostics. If the error is ERROR: Unable to extract ... and you cannot reproduce it from multiple countries, add --dump-pages (warning: this will yield a rather large output, redirect it to the file log.txt by adding >log.txt 2>&1 to your command-line) or upload the .dump files you get when you add --write-pages somewhere.\nSite support requests must contain an example URL. An example URL is a URL you might want to download, like https:\/\/www.youtube.com\/watch?v=BaW_jenozKc. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. https:\/\/www.youtube.com\/) is not an example URL.\nAre you using the latest version?\nBefore reporting any issue, type youtube-dl -U. This should report that you're up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.\nIs the issue already documented?\nMake sure that someone has not already opened the issue you're trying to open. Search at the top of the window or browse the GitHub Issues of this repository. If there is an issue, feel free to write something along the lines of \"This affects me as well, with version 2015.01.01. Here is some more information on the issue: ...\". While some issues may be old, a new post into them often spurs rapid activity.\nWhy are existing options not enough?\nBefore requesting a new feature, please have a quick peek at the list of supported options. Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do not solve your problem.\nIs there enough context in your bug report?\nPeople want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).\nWe are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.\nDoes the issue involve one problem, and one problem only?\nSome of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.\nIn particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don't post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.\nIs anyone going to need the feature?\nOnly post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.\nIs your question about youtube-dl?\nIt may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter's own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.\nCOPYRIGHT\nyoutube-dl is released into the public domain by the copyright holders.\nThis README file was originally written by Daniel Bolton and is likewise released into the public domain.\n","116":"\nWelcome to the Model Garden for TensorFlow\nThe TensorFlow Model Garden is a repository with a number of different implementations of state-of-the-art (SOTA) models and modeling solutions for TensorFlow users. We aim to demonstrate the best practices for modeling so that TensorFlow users\ncan take full advantage of TensorFlow for their research and product development.\n\n\n\nDirectory\nDescription\n\n\n\n\nofficial\n\u2022 A collection of example implementations for SOTA models using the latest TensorFlow 2's high-level APIs\u2022 Officially maintained, supported, and kept up to date with the latest TensorFlow 2 APIs by TensorFlow\u2022 Reasonably optimized for fast performance while still being easy to read\n\n\nresearch\n\u2022 A collection of research model implementations in TensorFlow 1 or 2 by researchers\u2022 Maintained and supported by researchers\n\n\ncommunity\n\u2022 A curated list of the GitHub repositories with machine learning models and implementations powered by TensorFlow 2\n\n\norbit\n\u2022 A flexible and lightweight library that users can easily use or fork when writing customized training loop code in TensorFlow 2.x. It seamlessly integrates with tf.distribute and supports running on different device types (CPU, GPU, and TPU).\n\n\n\nAnnouncements\n\n\n\nDate\nNews\n\n\n\n\nJuly 10, 2020\nTensorFlow 2 meets the Object Detection API (Blog)\n\n\nJune 30, 2020\nSpineNet: Learning Scale-Permuted Backbone for Recognition and Localization released (Tweet)\n\n\nJune 17, 2020\nContext R-CNN: Long Term Temporal Context for Per-Camera Object Detection released (Tweet)\n\n\nMay 21, 2020\nUnifying Deep Local and Global Features for Image Search (DELG) code released\n\n\nMay 19, 2020\nMobileDets: Searching for Object Detection Architectures for Mobile Accelerators released\n\n\nMay 7, 2020\nMnasFPN with MobileNet-V2 backbone released for object detection\n\n\nMay 1, 2020\nDELF: DEep Local Features updated to support TensorFlow 2.1\n\n\nMarch 31, 2020\nIntroducing the Model Garden for TensorFlow 2 (Tweet)\n\n\n\nContributions\n\nIf you want to contribute, please review the contribution guidelines.\nLicense\nApache License 2.0\n","117":"The Fuck     \nThe Fuck is a magnificent app, inspired by a @liamosaur\ntweet,\nthat corrects errors in previous console commands.\nIs The Fuck too slow? Try the experimental instant mode!\n\nMore examples:\n\u279c apt-get install vim\nE: Could not open lock file \/var\/lib\/dpkg\/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (\/var\/lib\/dpkg\/), are you root?\n\n\u279c fuck\nsudo apt-get install vim [enter\/\u2191\/\u2193\/ctrl+c]\n[sudo] password for nvbn:\nReading package lists... Done\n...\n\u279c git push\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n\u279c fuck\ngit push --set-upstream origin master [enter\/\u2191\/\u2193\/ctrl+c]\nCounting objects: 9, done.\n...\n\u279c puthon\nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nzsh: command not found: puthon\n\n\u279c fuck\npython [enter\/\u2191\/\u2193\/ctrl+c]\nPython 3.4.2 (default, Oct  8 2014, 13:08:17)\n...\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\n\nDid you mean this?\n    branch\n\n\u279c fuck\ngit branch [enter\/\u2191\/\u2193\/ctrl+c]\n* master\n\u279c lein rpl\n'rpl' is not a task. See 'lein help'.\n\nDid you mean this?\n         repl\n\n\u279c fuck\nlein repl [enter\/\u2191\/\u2193\/ctrl+c]\nnREPL server started on port 54848 on host 127.0.0.1 - nrepl:\/\/127.0.0.1:54848\nREPL-y 0.3.1\n...\nIf you're not afraid of blindly running corrected commands, the\nrequire_confirmation settings option can be disabled:\n\u279c apt-get install vim\nE: Could not open lock file \/var\/lib\/dpkg\/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (\/var\/lib\/dpkg\/), are you root?\n\n\u279c fuck\nsudo apt-get install vim\n[sudo] password for nvbn:\nReading package lists... Done\n...\nRequirements\n\npython (3.4+)\npip\npython-dev\n\nInstallation\nOn OS X, you can install The Fuck via Homebrew (or via Linuxbrew on Linux):\nbrew install thefuck\nOn Ubuntu \/ Mint, install The Fuck with the following commands:\nsudo apt update\nsudo apt install python3-dev python3-pip python3-setuptools\nsudo pip3 install thefuck\nOn FreeBSD, install The Fuck with the following commands:\npkg install thefuck\nOn ChromeOS, install The Fuck using chromebrew with the following command:\ncrew install thefuck\nOn other systems, install The Fuck  by using pip:\npip install thefuck\nAlternatively, you may use an OS package manager (OS X, Ubuntu, Arch).\n#\nIt is recommended that you place this command in your .bash_profile,\n.bashrc, .zshrc or other startup script:\neval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\nOr in your shell config (Bash, Zsh, Fish, Powershell, tcsh).\nChanges are only available in a new shell session. To make changes immediately\navailable, run source ~\/.bashrc (or your shell config file like .zshrc).\nTo run fixed commands without confirmation, use the --yeah option (or just -y for short, or --hard if you're especially frustrated):\nfuck --yeah\nTo fix commands recursively until succeeding, use the -r option:\nfuck -r\nUpdating\npip3 install thefuck --upgrade\nNote: Alias functionality was changed in v1.34 of The Fuck\nHow it works\nThe Fuck attempts to match the previous command with a rule. If a match is\nfound, a new command is created using the matched rule and executed. The\nfollowing rules are enabled by default:\n\nadb_unknown_command \u2013 fixes misspelled commands like adb logcta;\nag_literal \u2013 adds -Q to ag when suggested;\naws_cli \u2013 fixes misspelled commands like aws dynamdb scan;\naz_cli \u2013 fixes misspelled commands like az providers;\ncargo \u2013 runs cargo build instead of cargo;\ncargo_no_command \u2013 fixes wrongs commands like cargo buid;\ncat_dir \u2013 replaces cat with ls when you try to cat a directory;\ncd_correction \u2013 spellchecks and correct failed cd commands;\ncd_mkdir \u2013 creates directories before cd'ing into them;\ncd_parent \u2013 changes cd.. to cd ..;\nchmod_x \u2013 add execution bit;\nchoco_install \u2013 append common suffixes for chocolatey packages;\ncomposer_not_command \u2013 fixes composer command name;\ncp_create_destination \u2013 creates a new directory when you attempt to cp or mv to a non existent one\ncp_omitting_directory \u2013 adds -a when you cp directory;\ncpp11 \u2013 adds missing -std=c++11 to g++ or clang++;\ndirty_untar \u2013 fixes tar x command that untarred in the current directory;\ndirty_unzip \u2013 fixes unzip command that unzipped in the current directory;\ndjango_south_ghost \u2013 adds --delete-ghost-migrations to failed because ghosts django south migration;\ndjango_south_merge \u2013 adds --merge to inconsistent django south migration;\ndocker_login \u2013 executes a docker login and repeats the previous command;\ndocker_not_command \u2013 fixes wrong docker commands like docker tags;\ndocker_image_being_used_by_container \u2010 removes the container that is using the image before removing the image;\ndry \u2013 fixes repetitions like git git push;\nfab_command_not_found \u2013 fix misspelled fabric commands;\nfix_alt_space \u2013 replaces Alt+Space with Space character;\nfix_file \u2013 opens a file with an error in your $EDITOR;\ngem_unknown_command \u2013 fixes wrong gem commands;\ngit_add \u2013 fixes \"pathspec 'foo' did not match any file(s) known to git.\";\ngit_add_force \u2013 adds --force to git add <pathspec>... when paths are .gitignore'd;\ngit_bisect_usage \u2013 fixes git bisect strt, git bisect goood, git bisect rset, etc. when bisecting;\ngit_branch_delete \u2013 changes git branch -d to git branch -D;\ngit_branch_delete_checked_out \u2013 changes git branch -d to git checkout master && git branch -D when trying to delete a checked out branch;\ngit_branch_exists \u2013 offers git branch -d foo, git branch -D foo or git checkout foo when creating a branch that already exists;\ngit_branch_list \u2013 catches git branch list in place of git branch and removes created branch;\ngit_checkout \u2013 fixes branch name or creates new branch;\ngit_clone_git_clone \u2013 replaces git clone git clone ... with git clone ...\ngit_commit_amend \u2013 offers git commit --amend after previous commit;\ngit_commit_reset \u2013 offers git reset HEAD~ after previous commit;\ngit_diff_no_index \u2013 adds --no-index to previous git diff on untracked files;\ngit_diff_staged \u2013 adds --staged to previous git diff with unexpected output;\ngit_fix_stash \u2013 fixes git stash commands (misspelled subcommand and missing save);\ngit_flag_after_filename \u2013 fixes fatal: bad flag '...' after filename\ngit_help_aliased \u2013 fixes git help <alias> commands replacing  with the aliased command;\ngit_hook_bypass \u2013 adds --no-verify flag previous to git am, git commit, or git push command;\ngit_lfs_mistype \u2013 fixes mistyped git lfs <command> commands;\ngit_merge \u2013 adds remote to branch names;\ngit_merge_unrelated \u2013 adds --allow-unrelated-histories when required\ngit_not_command \u2013 fixes wrong git commands like git brnch;\ngit_pull \u2013 sets upstream before executing previous git pull;\ngit_pull_clone \u2013 clones instead of pulling when the repo does not exist;\ngit_pull_uncommitted_changes \u2013 stashes changes before pulling and pops them afterwards;\ngit_push \u2013 adds --set-upstream origin $branch to previous failed git push;\ngit_push_different_branch_names \u2013 fixes pushes when local brach name does not match remote branch name;\ngit_push_pull \u2013 runs git pull when push was rejected;\ngit_push_without_commits \u2013 Creates an initial commit if you forget and only git add ., when setting up a new project;\ngit_rebase_no_changes \u2013 runs git rebase --skip instead of git rebase --continue when there are no changes;\ngit_remote_delete \u2013 replaces git remote delete remote_name with git remote remove remote_name;\ngit_rm_local_modifications \u2013  adds -f or --cached when you try to rm a locally modified file;\ngit_rm_recursive \u2013 adds -r when you try to rm a directory;\ngit_rm_staged \u2013  adds -f or --cached when you try to rm a file with staged changes\ngit_rebase_merge_dir \u2013 offers git rebase (--continue | --abort | --skip) or removing the .git\/rebase-merge dir when a rebase is in progress;\ngit_remote_seturl_add \u2013 runs git remote add when git remote set_url on nonexistent remote;\ngit_stash \u2013 stashes your local modifications before rebasing or switching branch;\ngit_stash_pop \u2013 adds your local modifications before popping stash, then resets;\ngit_tag_force \u2013 adds --force to git tag <tagname> when the tag already exists;\ngit_two_dashes \u2013 adds a missing dash to commands like git commit -amend or git rebase -continue;\ngo_run \u2013 appends .go extension when compiling\/running Go programs;\ngo_unknown_command \u2013 fixes wrong go commands, for example go bulid;\ngradle_no_task \u2013 fixes not found or ambiguous gradle task;\ngradle_wrapper \u2013 replaces gradle with .\/gradlew;\ngrep_arguments_order \u2013 fixes grep arguments order for situations like grep -lir . test;\ngrep_recursive \u2013 adds -r when you try to grep directory;\ngrunt_task_not_found \u2013 fixes misspelled grunt commands;\ngulp_not_task \u2013 fixes misspelled gulp tasks;\nhas_exists_script \u2013 prepends .\/ when script\/binary exists;\nheroku_multiple_apps \u2013 add --app <app> to heroku commands like heroku pg;\nheroku_not_command \u2013 fixes wrong heroku commands like heroku log;\nhistory \u2013 tries to replace command with most similar command from history;\nhostscli \u2013 tries to fix hostscli usage;\nifconfig_device_not_found \u2013 fixes wrong device names like wlan0 to wlp2s0;\njava \u2013 removes .java extension when running Java programs;\njavac \u2013 appends missing .java when compiling Java files;\nlein_not_task \u2013 fixes wrong lein tasks like lein rpl;\nlong_form_help \u2013 changes -h to --help when the short form version is not supported\nln_no_hard_link \u2013 catches hard link creation on directories, suggest symbolic link;\nln_s_order \u2013 fixes ln -s arguments order;\nls_all \u2013 adds -A to ls when output is empty;\nls_lah \u2013 adds -lah to ls;\nman \u2013 changes manual section;\nman_no_space \u2013 fixes man commands without spaces, for example mandiff;\nmercurial \u2013 fixes wrong hg commands;\nmissing_space_before_subcommand \u2013 fixes command with missing space like npminstall;\nmkdir_p \u2013 adds -p when you try to create a directory without parent;\nmvn_no_command \u2013 adds clean package to mvn;\nmvn_unknown_lifecycle_phase \u2013 fixes misspelled life cycle phases with mvn;\nnpm_missing_script \u2013 fixes npm custom script name in npm run-script <script>;\nnpm_run_script \u2013 adds missing run-script for custom npm scripts;\nnpm_wrong_command \u2013 fixes wrong npm commands like npm urgrade;\nno_command \u2013 fixes wrong console commands, for example vom\/vim;\nno_such_file \u2013 creates missing directories with mv and cp commands;\nopen \u2013 either prepends http:\/\/ to address passed to open or create a new file or directory and passes it to open;\npip_install \u2013 fixes permission issues with pip install commands by adding --user or prepending sudo if necessary;\npip_unknown_command \u2013 fixes wrong pip commands, for example pip instatl\/pip install;\nphp_s \u2013 replaces -s by -S when trying to run a local php server;\nport_already_in_use \u2013 kills process that bound port;\nprove_recursively \u2013 adds -r when called with directory;\npyenv_no_such_command \u2013 fixes wrong pyenv commands like pyenv isntall or pyenv list;\npython_command \u2013 prepends python when you try to run non-executable\/without .\/ python script;\npython_execute \u2013 appends missing .py when executing Python files;\nquotation_marks \u2013 fixes uneven usage of ' and \" when containing args';\npath_from_history \u2013 replaces not found path with similar absolute path from history;\nreact_native_command_unrecognized \u2013 fixes unrecognized react-native commands;\nremove_shell_prompt_literal \u2013 remove leading shell prompt symbol $, common when copying commands from documentations;\nremove_trailing_cedilla \u2013 remove trailing cedillas \u00e7, a common typo for european keyboard layouts;\nrm_dir \u2013 adds -rf when you try to remove a directory;\nscm_correction \u2013 corrects wrong scm like hg log to git log;\nsed_unterminated_s \u2013 adds missing '\/' to sed's s commands;\nsl_ls \u2013 changes sl to ls;\nssh_known_hosts \u2013 removes host from known_hosts on warning;\nsudo \u2013 prepends sudo to previous command if it failed because of permissions;\nsudo_command_from_user_path \u2013 runs commands from users $PATH with sudo;\nswitch_lang \u2013 switches command from your local layout to en;\nsystemctl \u2013 correctly orders parameters of confusing systemctl;\nterraform_init.py \u2013 run terraform init before plan or apply;\ntest.py \u2013 runs py.test instead of test.py;\ntouch \u2013 creates missing directories before \"touching\";\ntsuru_login \u2013 runs tsuru login if not authenticated or session expired;\ntsuru_not_command \u2013 fixes wrong tsuru commands like tsuru shell;\ntmux \u2013 fixes tmux commands;\nunknown_command \u2013 fixes hadoop hdfs-style \"unknown command\", for example adds missing '-' to the command on hdfs dfs ls;\nunsudo \u2013 removes sudo from previous command if a process refuses to run on super user privilege.\nvagrant_up \u2013 starts up the vagrant instance;\nwhois \u2013 fixes whois command;\nworkon_doesnt_exists \u2013 fixes virtualenvwrapper env name os suggests to create new.\nyarn_alias \u2013 fixes aliased yarn commands like yarn ls;\nyarn_command_not_found \u2013 fixes misspelled yarn commands;\nyarn_command_replaced \u2013 fixes replaced yarn commands;\nyarn_help \u2013 makes it easier to open yarn documentation;\n\nThe following rules are enabled by default on specific platforms only:\n\napt_get \u2013 installs app from apt if it not installed (requires python-commandnotfound \/ python3-commandnotfound);\napt_get_search \u2013 changes trying to search using apt-get with searching using apt-cache;\napt_invalid_operation \u2013 fixes invalid apt and apt-get calls, like apt-get isntall vim;\napt_list_upgradable \u2013 helps you run apt list --upgradable after apt update;\napt_upgrade \u2013 helps you run apt upgrade after apt list --upgradable;\nbrew_cask_dependency \u2013 installs cask dependencies;\nbrew_install \u2013 fixes formula name for brew install;\nbrew_reinstall \u2013 turns brew install <formula> into brew reinstall <formula>;\nbrew_link \u2013 adds --overwrite --dry-run if linking fails;\nbrew_uninstall \u2013 adds --force to brew uninstall if multiple versions were installed;\nbrew_unknown_command \u2013 fixes wrong brew commands, for example brew docto\/brew doctor;\nbrew_update_formula \u2013 turns brew update <formula> into brew upgrade <formula>;\ndnf_no_such_command \u2013 fixes mistyped DNF commands;\nnixos_cmd_not_found \u2013 installs apps on NixOS;\npacman \u2013 installs app with pacman if it is not installed (uses yay or yaourt if available);\npacman_invalid_option \u2013 replaces lowercase pacman options with uppercase.\npacman_not_found \u2013 fixes package name with pacman, yay or yaourt.\nyum_invalid_operation \u2013 fixes invalid yum calls, like yum isntall vim;\n\nThe following commands are bundled with The Fuck, but are not enabled by\ndefault:\n\ngit_push_force \u2013 adds --force-with-lease to a git push (may conflict with git_push_pull);\nrm_root \u2013 adds --no-preserve-root to rm -rf \/ command.\n\nCreating your own rules\nTo add your own rule, create a file named your-rule-name.py\nin ~\/.config\/thefuck\/rules. The rule file must contain two functions:\nmatch(command: Command) -> bool\nget_new_command(command: Command) -> str | list[str]\nAdditionally, rules can contain optional functions:\nside_effect(old_command: Command, fixed_command: str) -> None\nRules can also contain the optional variables enabled_by_default, requires_output and priority.\nCommand has three attributes: script, output and script_parts.\nYour rule should not change Command.\nRules api changed in 3.0: To access a rule's settings, import it with\nfrom thefuck.conf import settings\nsettings is a special object assembled from ~\/.config\/thefuck\/settings.py,\nand values from env (see more below).\nA simple example rule for running a script with sudo:\ndef match(command):\n    return ('permission denied' in command.output.lower()\n            or 'EACCES' in command.output)\n\n\ndef get_new_command(command):\n    return 'sudo {}'.format(command.script)\n\n# Optional:\nenabled_by_default = True\n\ndef side_effect(command, fixed_command):\n    subprocess.call('chmod 777 .', shell=True)\n\npriority = 1000  # Lower first, default is 1000\n\nrequires_output = True\nMore examples of rules,\nutility functions for rules,\napp\/os-specific helpers.\nSettings\nSeveral The Fuck parameters can be changed in the file $XDG_CONFIG_HOME\/thefuck\/settings.py\n($XDG_CONFIG_HOME defaults to ~\/.config):\n\nrules \u2013 list of enabled rules, by default thefuck.const.DEFAULT_RULES;\nexclude_rules \u2013 list of disabled rules, by default [];\nrequire_confirmation \u2013 requires confirmation before running new command, by default True;\nwait_command \u2013 max amount of time in seconds for getting previous command output;\nno_colors \u2013 disable colored output;\npriority \u2013 dict with rules priorities, rule with lower priority will be matched first;\ndebug \u2013 enables debug output, by default False;\nhistory_limit \u2013 numeric value of how many history commands will be scanned, like 2000;\nalter_history \u2013 push fixed command to history, by default True;\nwait_slow_command \u2013 max amount of time in seconds for getting previous command output if it in slow_commands list;\nslow_commands \u2013 list of slow commands;\nnum_close_matches \u2013 maximum number of close matches to suggest, by default 3.\n\nAn example of settings.py:\nrules = ['sudo', 'no_command']\nexclude_rules = ['git_push']\nrequire_confirmation = True\nwait_command = 10\nno_colors = False\npriority = {'sudo': 100, 'no_command': 9999}\ndebug = False\nhistory_limit = 9999\nwait_slow_command = 20\nslow_commands = ['react-native', 'gradle']\nnum_close_matches = 5\nOr via environment variables:\n\nTHEFUCK_RULES \u2013 list of enabled rules, like DEFAULT_RULES:rm_root or sudo:no_command;\nTHEFUCK_EXCLUDE_RULES \u2013 list of disabled rules, like git_pull:git_push;\nTHEFUCK_REQUIRE_CONFIRMATION \u2013 require confirmation before running new command, true\/false;\nTHEFUCK_WAIT_COMMAND \u2013 max amount of time in seconds for getting previous command output;\nTHEFUCK_NO_COLORS \u2013 disable colored output, true\/false;\nTHEFUCK_PRIORITY \u2013 priority of the rules, like no_command=9999:apt_get=100,\nrule with lower priority will be matched first;\nTHEFUCK_DEBUG \u2013 enables debug output, true\/false;\nTHEFUCK_HISTORY_LIMIT \u2013 how many history commands will be scanned, like 2000;\nTHEFUCK_ALTER_HISTORY \u2013 push fixed command to history true\/false;\nTHEFUCK_WAIT_SLOW_COMMAND \u2013 max amount of time in seconds for getting previous command output if it in slow_commands list;\nTHEFUCK_SLOW_COMMANDS \u2013 list of slow commands, like lein:gradle;\nTHEFUCK_NUM_CLOSE_MATCHES \u2013 maximum number of close matches to suggest, like 5.\n\nFor example:\nexport THEFUCK_RULES='sudo:no_command'\nexport THEFUCK_EXCLUDE_RULES='git_pull:git_push'\nexport THEFUCK_REQUIRE_CONFIRMATION='true'\nexport THEFUCK_WAIT_COMMAND=10\nexport THEFUCK_NO_COLORS='false'\nexport THEFUCK_PRIORITY='no_command=9999:apt_get=100'\nexport THEFUCK_HISTORY_LIMIT='2000'\nexport THEFUCK_NUM_CLOSE_MATCHES='5'\nThird-party packages with rules\nIf you'd like to make a specific set of non-public rules, but would still like\nto share them with others, create a package named thefuck_contrib_* with\nthe following structure:\nthefuck_contrib_foo\n  thefuck_contrib_foo\n    rules\n      __init__.py\n      *third-party rules*\n    __init__.py\n    *third-party-utils*\n  setup.py\n\nThe Fuck will find rules located in the rules module.\nExperimental instant mode\nThe default behavior of The Fuck requires time to re-run previous commands.\nWhen in instant mode, The Fuck saves time by logging output with script,\nthen reading the log.\n\nCurrently, instant mode only supports Python 3 with bash or zsh. zsh's autocorrect function also needs to be disabled in order for thefuck to work properly.\nTo enable instant mode, add --enable-experimental-instant-mode\nto the alias initialization in .bashrc, .bash_profile or .zshrc.\nFor example:\neval $(thefuck --alias --enable-experimental-instant-mode)\nDeveloping\nSee CONTRIBUTING.md\nLicense MIT\nProject License can be found here.\n","118":"Django\nDjango is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. Thanks for checking it out.\nAll documentation is in the \"docs\" directory and online at\nhttps:\/\/docs.djangoproject.com\/en\/stable\/. If you're just getting started,\nhere's how we recommend you read the docs:\n\nFirst, read docs\/intro\/install.txt for instructions on installing Django.\nNext, work through the tutorials in order (docs\/intro\/tutorial01.txt,\ndocs\/intro\/tutorial02.txt, etc.).\nIf you want to set up an actual deployment server, read\ndocs\/howto\/deployment\/index.txt for instructions.\nYou'll probably want to read through the topical guides (in docs\/topics)\nnext; from there you can jump to the HOWTOs (in docs\/howto) for specific\nproblems, and check out the reference (docs\/ref) for gory details.\nSee docs\/README for instructions on building an HTML version of the docs.\n\nDocs are updated rigorously. If you find any problems in the docs, or think\nthey should be clarified in any way, please take 30 seconds to fill out a\nticket here: https:\/\/code.djangoproject.com\/newticket\nTo get more help:\n\nJoin the #django channel on irc.freenode.net. Lots of helpful people hang\nout there. See https:\/\/freenode.net\/kb\/answer\/chat if you're new to IRC.\nJoin the django-users mailing list, or read the archives, at\nhttps:\/\/groups.google.com\/group\/django-users.\n\nTo contribute to Django:\n\nCheck out https:\/\/docs.djangoproject.com\/en\/dev\/internals\/contributing\/ for\ninformation about getting involved.\n\nTo run Django's test suite:\n\nFollow the instructions in the \"Unit tests\" section of\ndocs\/internals\/contributing\/writing-code\/unit-tests.txt, published online at\nhttps:\/\/docs.djangoproject.com\/en\/dev\/internals\/contributing\/writing-code\/unit-tests\/#running-the-unit-tests\n\n\nSupporting the Development of Django\nDjango's development depends on your contributions.\nIf you depend on Django, remember to support the Django Software Foundation: https:\/\/www.djangoproject.com\/fundraising\/\n","119":"Flask\nFlask is a lightweight WSGI web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around Werkzeug\nand Jinja and has become one of the most popular Python web\napplication frameworks.\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\nInstalling\nInstall and update using pip:\npip install -U Flask\n\n\nA Simple Example\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"\/\")\ndef hello():\n    return \"Hello, World!\"\n$ env FLASK_APP=hello.py flask run\n * Serving Flask app \"hello\"\n * Running on http:\/\/127.0.0.1:5000\/ (Press CTRL+C to quit)\n\n\nContributing\nFor guidance on setting up a development environment and how to make a\ncontribution to Flask, see the contributing guidelines.\n\nDonate\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, please\ndonate today.\n\nLinks\n\nWebsite: https:\/\/palletsprojects.com\/p\/flask\/\nDocumentation: https:\/\/flask.palletsprojects.com\/\nReleases: https:\/\/pypi.org\/project\/Flask\/\nCode: https:\/\/github.com\/pallets\/flask\nIssue tracker: https:\/\/github.com\/pallets\/flask\/issues\nTest status: https:\/\/dev.azure.com\/pallets\/flask\/_build\nOfficial chat: https:\/\/discord.gg\/pallets\n\n","120":"HTTPie: human-friendly CLI HTTP client for the API era\nHTTPie (pronounced aitch-tee-tee-pie) is a command-line HTTP client.\nIts goal is to make CLI interaction with web services as human-friendly as possible.\nHTTPie is designed for testing, debugging, and generally interacting with APIs & HTTP servers.\nThe http & https commands allow for creating and sending arbitrary HTTP requests.\nThey use simple and natural syntax and provide formatted and colorized output.\n  \n   \n\n\nContents\n\n1\u00a0\u00a0\u00a0About this document\n2\u00a0\u00a0\u00a0Main features\n3\u00a0\u00a0\u00a0Installation\n3.1\u00a0\u00a0\u00a0macOS\n3.2\u00a0\u00a0\u00a0Linux\n3.3\u00a0\u00a0\u00a0Windows, etc.\n3.4\u00a0\u00a0\u00a0Python version\n3.5\u00a0\u00a0\u00a0Unstable version\n\n\n4\u00a0\u00a0\u00a0Usage\n4.1\u00a0\u00a0\u00a0Examples\n\n\n5\u00a0\u00a0\u00a0HTTP method\n6\u00a0\u00a0\u00a0Request URL\n6.1\u00a0\u00a0\u00a0Querystring parameters\n6.2\u00a0\u00a0\u00a0URL shortcuts for localhost\n6.3\u00a0\u00a0\u00a0Other default schemes\n6.4\u00a0\u00a0\u00a0--path-as-is\n\n\n7\u00a0\u00a0\u00a0Request items\n7.1\u00a0\u00a0\u00a0Escaping rules\n\n\n8\u00a0\u00a0\u00a0JSON\n8.1\u00a0\u00a0\u00a0Default behaviour\n8.2\u00a0\u00a0\u00a0Explicit JSON\n8.3\u00a0\u00a0\u00a0Non-string JSON fields\n8.4\u00a0\u00a0\u00a0Raw and complex JSON\n\n\n9\u00a0\u00a0\u00a0Forms\n9.1\u00a0\u00a0\u00a0Regular forms\n9.2\u00a0\u00a0\u00a0File upload forms\n\n\n10\u00a0\u00a0\u00a0HTTP headers\n10.1\u00a0\u00a0\u00a0Default request headers\n10.2\u00a0\u00a0\u00a0Empty headers and header un-setting\n10.3\u00a0\u00a0\u00a0Limiting response headers\n\n\n11\u00a0\u00a0\u00a0Offline mode\n12\u00a0\u00a0\u00a0Cookies\n13\u00a0\u00a0\u00a0Authentication\n13.1\u00a0\u00a0\u00a0Basic auth\n13.2\u00a0\u00a0\u00a0Digest auth\n13.3\u00a0\u00a0\u00a0Password prompt\n13.4\u00a0\u00a0\u00a0Empty password\n13.5\u00a0\u00a0\u00a0.netrc\n13.6\u00a0\u00a0\u00a0Auth plugins\n\n\n14\u00a0\u00a0\u00a0HTTP redirects\n14.1\u00a0\u00a0\u00a0Follow Location\n14.2\u00a0\u00a0\u00a0Showing intermediary redirect responses\n14.3\u00a0\u00a0\u00a0Limiting maximum redirects followed\n\n\n15\u00a0\u00a0\u00a0Proxies\n15.1\u00a0\u00a0\u00a0Environment variables\n15.2\u00a0\u00a0\u00a0SOCKS\n\n\n16\u00a0\u00a0\u00a0HTTPS\n16.1\u00a0\u00a0\u00a0Server SSL certificate verification\n16.2\u00a0\u00a0\u00a0Custom CA bundle\n16.3\u00a0\u00a0\u00a0Client side SSL certificate\n16.4\u00a0\u00a0\u00a0SSL version\n16.5\u00a0\u00a0\u00a0SSL ciphers\n\n\n17\u00a0\u00a0\u00a0Output options\n17.1\u00a0\u00a0\u00a0What parts of the HTTP exchange should be printed\n17.2\u00a0\u00a0\u00a0Verbose output\n17.3\u00a0\u00a0\u00a0Quiet output\n17.4\u00a0\u00a0\u00a0Viewing intermediary requests\/responses\n17.5\u00a0\u00a0\u00a0Conditional body download\n\n\n18\u00a0\u00a0\u00a0Redirected Input\n18.1\u00a0\u00a0\u00a0Request data from a filename\n\n\n19\u00a0\u00a0\u00a0Chunked transfer encoding\n20\u00a0\u00a0\u00a0Terminal output\n20.1\u00a0\u00a0\u00a0Colors and formatting\n20.2\u00a0\u00a0\u00a0Binary data\n\n\n21\u00a0\u00a0\u00a0Redirected output\n22\u00a0\u00a0\u00a0Download mode\n22.1\u00a0\u00a0\u00a0Downloaded filename\n22.2\u00a0\u00a0\u00a0Piping while downloading\n22.3\u00a0\u00a0\u00a0Resuming downloads\n22.4\u00a0\u00a0\u00a0Other notes\n\n\n23\u00a0\u00a0\u00a0Streamed responses\n23.1\u00a0\u00a0\u00a0Disabling buffering\n23.2\u00a0\u00a0\u00a0Examples use cases\n\n\n24\u00a0\u00a0\u00a0Sessions\n24.1\u00a0\u00a0\u00a0Named sessions\n24.2\u00a0\u00a0\u00a0Anonymous sessions\n24.3\u00a0\u00a0\u00a0Readonly session\n24.4\u00a0\u00a0\u00a0Cookie Storage Behaviour\n\n\n25\u00a0\u00a0\u00a0Config\n25.1\u00a0\u00a0\u00a0Config file directory\n25.2\u00a0\u00a0\u00a0Configurable options\n25.2.1\u00a0\u00a0\u00a0default_options\n\n\n25.3\u00a0\u00a0\u00a0Un-setting previously specified options\n\n\n26\u00a0\u00a0\u00a0Scripting\n26.1\u00a0\u00a0\u00a0Best practices\n\n\n27\u00a0\u00a0\u00a0Meta\n27.1\u00a0\u00a0\u00a0Interface design\n27.2\u00a0\u00a0\u00a0User support\n27.3\u00a0\u00a0\u00a0Related projects\n27.3.1\u00a0\u00a0\u00a0Dependencies\n27.3.2\u00a0\u00a0\u00a0HTTPie friends\n27.3.3\u00a0\u00a0\u00a0Alternatives\n\n\n27.4\u00a0\u00a0\u00a0Contributing\n27.5\u00a0\u00a0\u00a0Change log\n27.6\u00a0\u00a0\u00a0Artwork\n27.7\u00a0\u00a0\u00a0Licence\n27.8\u00a0\u00a0\u00a0Authors\n\n\n\n\n\n1\u00a0\u00a0\u00a0About this document\nThis documentation is best viewed at httpie.org\/docs,\nwhere you can select your corresponding HTTPie version as well as run examples directly from the\nbrowser using a termible.io embedded terminal.\nIf you are reading this on GitHub, then this text covers the current development version.\nYou are invited to submit fixes and improvements to the the docs by editing\nREADME.rst.\n\n2\u00a0\u00a0\u00a0Main features\n\nExpressive and intuitive syntax\nFormatted and colorized terminal output\nBuilt-in JSON support\nForms and file uploads\nHTTPS, proxies, and authentication\nArbitrary request data\nCustom headers\nPersistent sessions\nWget-like downloads\nLinux, macOS and Windows support\nPlugins\nDocumentation\nTest coverage\n\n\n\n3\u00a0\u00a0\u00a0Installation\n\n3.1\u00a0\u00a0\u00a0macOS\nOn macOS, HTTPie can be installed via Homebrew\n(recommended):\n$ brew install httpie\nA MacPorts port is also available:\n$ port install httpie\n\n3.2\u00a0\u00a0\u00a0Linux\nMost Linux distributions provide a package that can be installed using the\nsystem package manager, for example:\n# Debian, Ubuntu, etc.\n$ apt install httpie\n# Fedora\n$ dnf install httpie\n# CentOS, RHEL, ...\n$ yum install httpie\n# Gentoo\n$ emerge httpie\n# Arch Linux\n$ pacman -S httpie\n\n3.3\u00a0\u00a0\u00a0Windows, etc.\nA universal installation method (that works on Windows, Mac OS X, Linux, \u2026,\nand always provides the latest version) is to use pip:\n# Make sure we have an up-to-date version of pip and setuptools:\n$ pip install --upgrade pip setuptools\n\n$ pip install --upgrade httpie\n(If pip installation fails for some reason, you can try\neasy_install httpie as a fallback.)\n\n3.4\u00a0\u00a0\u00a0Python version\nPython version 3.6 or greater is required.\n\n3.5\u00a0\u00a0\u00a0Unstable version\nYou can also install the latest unreleased development version directly from\nthe master branch on GitHub.  It is a work-in-progress of a future stable\nrelease so the experience might be not as smooth.\n\n\nOn macOS you can install it with Homebrew:\n$ brew uninstall --force httpie\n$ brew install --HEAD httpie\nOtherwise with pip:\n$ pip install --upgrade https:\/\/github.com\/httpie\/httpie\/archive\/master.tar.gz\nVerify that now we have the\ncurrent development version identifier\nwith the -dev suffix, for example:\n$ http --version\n# 2.0.0-dev\n\n4\u00a0\u00a0\u00a0Usage\nHello World:\n$ https httpie.io\/hello\nSynopsis:\n$ http [flags] [METHOD] URL [ITEM [ITEM]]\nSee also http --help.\n\n4.1\u00a0\u00a0\u00a0Examples\nCustom HTTP method, HTTP headers and JSON data:\n$ http PUT httpbin.org\/put X-API-Token:123 name=John\nSubmitting forms:\n$ http -f POST httpbin.org\/post hello=World\nSee the request that is being sent using one of the output options:\n$ http -v httpbin.org\/get\nBuild and print a request without sending it using offline mode:\n$ http --offline httpbin.org\/post hello=offline\nUse GitHub API to post a comment on an\nissue\nwith authentication:\n$ http -a USERNAME POST https:\/\/api.github.com\/repos\/httpie\/httpie\/issues\/83\/comments body='HTTPie is awesome! :heart:'\nUpload a file using redirected input:\n$ http httpbin.org\/post < files\/data.json\nDownload a file and save it via redirected output:\n$ http httpbin.org\/image\/png > image.png\nDownload a file wget style:\n$ http --download httpbin.org\/image\/png\nUse named sessions to make certain aspects of the communication persistent\nbetween requests to the same host:\n$ http --session=logged-in -a username:password httpbin.org\/get API-Key:123\n$ http --session=logged-in httpbin.org\/headers\nSet a custom Host header to work around missing DNS records:\n$ http localhost:8000 Host:example.com\n\n5\u00a0\u00a0\u00a0HTTP method\nThe name of the HTTP method comes right before the URL argument:\n$ http DELETE httpbin.org\/delete\nWhich looks similar to the actual Request-Line that is sent:\nDELETE \/delete HTTP\/1.1\nWhen the METHOD argument is omitted from the command, HTTPie defaults to\neither GET (with no request data) or POST (with request data).\n\n6\u00a0\u00a0\u00a0Request URL\nThe only information HTTPie needs to perform a request is a URL.\nThe default scheme is http:\/\/ and can be omitted from the argument:\n$ http example.org\n# => http:\/\/example.org\nHTTPie also installs an https executable, where the default\nscheme is https:\/\/:\n$ https example.org\n# => https:\/\/example.org\n\n6.1\u00a0\u00a0\u00a0Querystring parameters\nIf you find yourself manually constructing URLs with querystring parameters\non the terminal, you may appreciate the param==value syntax for appending\nURL parameters.\nWith that, you don\u2019t have to worry about escaping the &\nseparators for your shell. Additionally, any special characters in the\nparameter name or value get automatically URL-escaped\n(as opposed to parameters specified in the full URL, which HTTPie doesn\u2019t\nmodify).\n$ http https:\/\/api.github.com\/search\/repositories q==httpie per_page==1\nGET \/search\/repositories?q=httpie&per_page=1 HTTP\/1.1\n\n6.2\u00a0\u00a0\u00a0URL shortcuts for localhost\nAdditionally, curl-like shorthand for localhost is supported.\nThis means that, for example :3000 would expand to http:\/\/localhost:3000\nIf the port is omitted, then port 80 is assumed.\n$ http :\/foo\nGET \/foo HTTP\/1.1\nHost: localhost\n$ http :3000\/bar\nGET \/bar HTTP\/1.1\nHost: localhost:3000\n$ http :\nGET \/ HTTP\/1.1\nHost: localhost\n\n6.3\u00a0\u00a0\u00a0Other default schemes\nWhen HTTPie is invoked as https then the default scheme is https:\/\/\n($ https example.org will make a request to https:\/\/example.org).\nYou can also use the --default-scheme <URL_SCHEME> option to create\nshortcuts for other protocols than HTTP (possibly supported via plugins).\nExample for the httpie-unixsocket plugin:\n# Before\n$ http http+unix:\/\/%2Fvar%2Frun%2Fdocker.sock\/info\n# Create an alias\n$ alias http-unix='http --default-scheme=\"http+unix\"'\n# Now the scheme can be omitted\n$ http-unix %2Fvar%2Frun%2Fdocker.sock\/info\n\n6.4\u00a0\u00a0\u00a0--path-as-is\nThe standard behaviour of HTTP clients is to normalize the path portion of URLs by squashing dot segments\nas a typically filesystem would:\n$ http -v example.org\/.\/..\/..\/etc\/password\nGET \/etc\/password HTTP\/1.1\nThe --path-as-is option allows you to disable this behavior:\n$ http --path-as-is -v example.org\/.\/..\/..\/etc\/password\nGET \/..\/..\/etc\/password HTTP\/1.1\n\n7\u00a0\u00a0\u00a0Request items\nThere are a few different request item types that provide a\nconvenient mechanism for specifying HTTP headers, simple JSON and\nform data, files, and URL parameters.\nThey are key\/value pairs specified after the URL. All have in\ncommon that they become part of the actual request that is sent and that\ntheir type is distinguished only by the separator used:\n:, =, :=, ==, @, =@, and :=@. The ones with an\n@ expect a file path as value.\n\n\nItem Type\nDescription\n\n\n\nHTTP Headers\nName:Value\nArbitrary HTTP header, e.g. X-API-Token:123.\n\nURL parameters\nname==value\nAppends the given name\/value pair as a query\nstring parameter to the URL.\nThe == separator is used.\n\nData Fields\nfield=value,\nfield=@file.txt\nRequest data fields to be serialized as a JSON\nobject (default), to be form-encoded\n(with --form, -f), or to be serialized as\nmultipart\/form-data (with --multipart).\n\nRaw JSON fields\nfield:=json,\nfield:=@file.json\nUseful when sending JSON and one or\nmore fields need to be a Boolean, Number,\nnested Object, or an Array,  e.g.,\nmeals:='[\"ham\",\"spam\"]' or pies:=[1,2,3]\n(note the quotes).\n\nFields upload fields\nfield@\/dir\/file\nfield@file;type\nOnly available with --form, -f and\n--multipart.\nFor example screenshot@~\/Pictures\/img.png, or\n'cv@cv.txt;text\/markdown'.\nWith --form, the presence of a file field\nresults in a --multipart request.\n\n\n\nNote that data fields aren\u2019t the only way to specify request data:\nRedirected input is a mechanism for passing arbitrary request data.\n\n7.1\u00a0\u00a0\u00a0Escaping rules\nYou can use \\ to escape characters that shouldn\u2019t be used as separators\n(or parts thereof). For instance, foo\\==bar will become a data key\/value\npair (foo= and bar) instead of a URL parameter.\nOften it is necessary to quote the values, e.g. foo='bar baz'.\nIf any of the field names or headers starts with a minus\n(e.g., -fieldname), you need to place all such items after the special\ntoken -- to prevent confusion with --arguments:\n$ http httpbin.org\/post  --  -name-starting-with-dash=foo -Unusual-Header:bar\nPOST \/post HTTP\/1.1\n-Unusual-Header: bar\nContent-Type: application\/json\n\n{\n    \"-name-starting-with-dash\": \"foo\"\n}\n\n8\u00a0\u00a0\u00a0JSON\nJSON is the lingua franca of modern web services and it is also the\nimplicit content type HTTPie uses by default.\nSimple example:\n$ http PUT httpbin.org\/put name=John email=john@example.org\nPUT \/ HTTP\/1.1\nAccept: application\/json, *\/*;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application\/json\nHost: httpbin.org\n\n{\n    \"name\": \"John\",\n    \"email\": \"john@example.org\"\n}\n\n8.1\u00a0\u00a0\u00a0Default behaviour\nIf your command includes some data request items, they are serialized as a JSON\nobject by default. HTTPie also automatically sets the following headers,\nboth of which can be overwritten:\n\n\nContent-Type\napplication\/json\n\nAccept\napplication\/json, *\/*;q=0.5\n\n\n\n\n8.2\u00a0\u00a0\u00a0Explicit JSON\nYou can use --json, -j to explicitly set Accept\nto application\/json regardless of whether you are sending data\n(it\u2019s a shortcut for setting the header via the usual header notation:\nhttp url Accept:'application\/json, *\/*;q=0.5'). Additionally,\nHTTPie will try to detect JSON responses even when the\nContent-Type is incorrectly text\/plain or unknown.\n\n8.3\u00a0\u00a0\u00a0Non-string JSON fields\nNon-string JSON fields use the := separator, which allows you to embed arbitrary JSON data\ninto the resulting JSON object. Additionally, text and raw JSON files can also be embedded into\nfields using =@ and :=@:\n$ http PUT httpbin.org\/put \\\n    name=John \\                        # String (default)\n    age:=29 \\                          # Raw JSON \u2014 Number\n    married:=false \\                   # Raw JSON \u2014 Boolean\n    hobbies:='[\"http\", \"pies\"]' \\      # Raw JSON \u2014 Array\n    favorite:='{\"tool\": \"HTTPie\"}' \\   # Raw JSON \u2014 Object\n    bookmarks:=@files\/data.json \\      # Embed JSON file\n    description=@files\/text.txt        # Embed text file\nPUT \/person\/1 HTTP\/1.1\nAccept: application\/json, *\/*;q=0.5\nContent-Type: application\/json\nHost: httpbin.org\n\n{\n    \"age\": 29,\n    \"hobbies\": [\n        \"http\",\n        \"pies\"\n    ],\n    \"description\": \"John is a nice guy who likes pies.\",\n    \"married\": false,\n    \"name\": \"John\",\n    \"favorite\": {\n        \"tool\": \"HTTPie\"\n    },\n    \"bookmarks\": {\n        \"HTTPie\": \"https:\/\/httpie.org\",\n    }\n}\n\n8.4\u00a0\u00a0\u00a0Raw and complex JSON\nPlease note that with the request items data field syntax, commands\ncan quickly become unwieldy when sending complex structures.\nIn such cases, it\u2019s better to pass the full raw JSON data via\nredirected input, for example:\n$ echo '{\"hello\": \"world\"}' | http POST httpbin.org\/post\n$ http POST httpbin.org\/post < files\/data.json\nFurthermore, this syntax only allows you to send an object as the JSON document, but not an array, etc.\nHere, again, the solution is to use redirected input.\n\n9\u00a0\u00a0\u00a0Forms\nSubmitting forms is very similar to sending JSON requests. Often the only\ndifference is in adding the --form, -f option, which ensures that\ndata fields are serialized as, and Content-Type is set to,\napplication\/x-www-form-urlencoded; charset=utf-8. It is possible to make\nform data the implicit content type instead of JSON\nvia the config file.\n\n9.1\u00a0\u00a0\u00a0Regular forms\n$ http --form POST httpbin.org\/post name='John Smith'\nPOST \/post HTTP\/1.1\nContent-Type: application\/x-www-form-urlencoded; charset=utf-8\n\nname=John+Smith\n\n9.2\u00a0\u00a0\u00a0File upload forms\nIf one or more file fields is present, the serialization and content type is\nmultipart\/form-data:\n$ http -f POST httpbin.org\/post name='John Smith' cv@~\/files\/data.xml\nThe request above is the same as if the following HTML form were\nsubmitted:\n<form enctype=\"multipart\/form-data\" method=\"post\" action=\"http:\/\/example.com\/jobs\">\n    <input type=\"text\" name=\"name\" \/>\n    <input type=\"file\" name=\"cv\" \/>\n<\/form>\nPlease note that @ is used to simulate a file upload form field, whereas\n=@ just embeds the file content as a regular text field value.\nWhen uploading files, their content type is inferred from the file name. You can manually\noverride the inferred content type:\n$ http -f POST httpbin.org\/post name='John Smith' cv@'~\/files\/data.bin;type=application\/pdf'\nTo perform a multipart\/form-data request even without any files, use\n--multipart instead of --form:\n$ http --multipart --offline example.org hello=world\nPOST \/ HTTP\/1.1\nContent-Length: 129\nContent-Type: multipart\/form-data; boundary=c31279ab254f40aeb06df32b433cbccb\nHost: example.org\n\n--c31279ab254f40aeb06df32b433cbccb\nContent-Disposition: form-data; name=\"hello\"\n\nworld\n--c31279ab254f40aeb06df32b433cbccb--\nFile uploads are always streamed to avoid memory issues with large files.\nBy default, HTTPie uses a random unique string as the multipart boundary\nbut you can use --boundary to specify a custom string instead:\n$ http --form --multipart --boundary=xoxo --offline example.org hello=world\nPOST \/ HTTP\/1.1\nContent-Length: 129\nContent-Type: multipart\/form-data; boundary=xoxo\nHost: example.org\n\n--xoxo\nContent-Disposition: form-data; name=\"hello\"\n\nworld\n--xoxo--\nIf you specify a custom Content-Type header without including the boundary\nbit, HTTPie will add the boundary value (explicitly specified or auto-generated)\nto the header automatically:\nhttp --form --multipart --offline example.org hello=world Content-Type:multipart\/letter\nPOST \/ HTTP\/1.1\nContent-Length: 129\nContent-Type: multipart\/letter; boundary=c31279ab254f40aeb06df32b433cbccb\nHost: example.org\n\n--c31279ab254f40aeb06df32b433cbccb\nContent-Disposition: form-data; name=\"hello\"\n\nworld\n--c31279ab254f40aeb06df32b433cbccb--\n\n10\u00a0\u00a0\u00a0HTTP headers\nTo set custom headers you can use the Header:Value notation:\n$ http httpbin.org\/headers  User-Agent:Bacon\/1.0  'Cookie:valued-visitor=yes;foo=bar'  \\\n    X-Foo:Bar  Referer:https:\/\/httpie.org\/\nGET \/headers HTTP\/1.1\nAccept: *\/*\nAccept-Encoding: gzip, deflate\nCookie: valued-visitor=yes;foo=bar\nHost: httpbin.org\nReferer: https:\/\/httpie.org\/\nUser-Agent: Bacon\/1.0\nX-Foo: Bar\n\n10.1\u00a0\u00a0\u00a0Default request headers\nThere are a couple of default headers that HTTPie sets:\nGET \/ HTTP\/1.1\nAccept: *\/*\nAccept-Encoding: gzip, deflate\nUser-Agent: HTTPie\/<version>\nHost: <taken-from-URL>\nAny of these can be overwritten and some of them unset (see bellow).\n\n10.2\u00a0\u00a0\u00a0Empty headers and header un-setting\nTo unset a previously specified header\n(such a one of the default headers), use Header::\n$ http httpbin.org\/headers Accept: User-Agent:\nTo send a header with an empty value, use Header;:\n$ http httpbin.org\/headers 'Header;'\n\n10.3\u00a0\u00a0\u00a0Limiting response headers\nThe --max-headers=n options allows you to control the number of headers\nHTTPie reads before giving up (the default 0, i.e., there\u2019s no limit).\n$ http --max-headers=100 httpbin.org\/get\n\n11\u00a0\u00a0\u00a0Offline mode\nUse --offline to construct HTTP requests without sending them anywhere.\nWith --offline, HTTPie builds a request based on the specified options and arguments, prints it to stdout,\nand then exits. It works completely offline; no network connection is ever made.\nThis has a number of use cases, including:\nGenerating API documentation examples that you can copy & paste without sending a request:\n$ http --offline POST server.chess\/api\/games API-Key:ZZZ w=magnus b=hikaru t=180 i=2\n$ http --offline MOVE server.chess\/api\/games\/123 API-Key:ZZZ p=b a=R1a3 t=77\nGenerating raw requests that can be sent with any other client:\n# 1. save a raw request to a file:\n$ http --offline POST httpbin.org\/post hello=world > request.http\n# 2. send it over the wire with, for example, the fantastic netcat tool:\n$ nc httpbin.org 80 < request.http\nYou can also use the --offline mode for debugging and exploring HTTP and HTTPie, and for \u201cdry runs\u201d.\n--offline has the side-effect of automatically activating --print=HB, i.e., both the request headers and the body\nare printed. You can customize the output with the usual output options, with the exception that there\nis not response to be printed. You can use --offline in combination with all the other options (e.g., --session).\n\n12\u00a0\u00a0\u00a0Cookies\nHTTP clients send cookies to the server as regular HTTP headers. That means,\nHTTPie does not offer any special syntax for specifying cookies \u2014 the usual\nHeader:Value notation is used:\nSend a single cookie:\n$ http httpbin.org\/cookies Cookie:sessionid=foo\nGET \/ HTTP\/1.1\nAccept: *\/*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: sessionid=foo\nHost: httpbin.org\nUser-Agent: HTTPie\/0.9.9\nSend multiple cookies\n(note the header is quoted to prevent the shell from interpreting the ;):\n$ http httpbin.org\/cookies 'Cookie:sessionid=foo;another-cookie=bar'\nGET \/ HTTP\/1.1\nAccept: *\/*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: sessionid=foo;another-cookie=bar\nHost: httpbin.org\nUser-Agent: HTTPie\/0.9.9\nIf you often deal with cookies in your requests, then chances are you\u2019d appreciate\nthe sessions feature.\n\n13\u00a0\u00a0\u00a0Authentication\nThe currently supported authentication schemes are Basic and Digest\n(see auth plugins for more). There are two flags that control authentication:\n\n\n--auth, -a\nPass a username:password pair as\nthe argument. Or, if you only specify a username\n(-a username), you\u2019ll be prompted for\nthe password before the request is sent.\nTo send an empty password, pass username:.\nThe username:password@hostname URL syntax is\nsupported as well (but credentials passed via -a\nhave higher priority).\n\n--auth-type, -A\nSpecify the auth mechanism. Possible values are\nbasic, digest, or the name of any auth plugins you have installed. The default value is\nbasic so it can often be omitted.\n\n\n\n\n13.1\u00a0\u00a0\u00a0Basic auth\n$ http -a username:password httpbin.org\/basic-auth\/username\/password\n\n13.2\u00a0\u00a0\u00a0Digest auth\n$ http -A digest -a username:password httpbin.org\/digest-auth\/httpie\/username\/password\n\n13.3\u00a0\u00a0\u00a0Password prompt\n$ http -a username httpbin.org\/basic-auth\/username\/password\n\n13.4\u00a0\u00a0\u00a0Empty password\n$ http -a username: httpbin.org\/headers\n\n13.5\u00a0\u00a0\u00a0.netrc\nAuthentication information from your ~\/.netrc\nfile is by default honored as well.\nFor example:\n$ cat ~\/.netrc\nmachine httpbin.org\nlogin httpie\npassword test\n$ http httpbin.org\/basic-auth\/httpie\/test\nHTTP\/1.1 200 OK\n[...]\nThis can be disabled with the --ignore-netrc option:\n$ http --ignore-netrc httpbin.org\/basic-auth\/httpie\/test\nHTTP\/1.1 401 UNAUTHORIZED\n[...]\n\n13.6\u00a0\u00a0\u00a0Auth plugins\nAdditional authentication mechanism can be installed as plugins.\nThey can be found on the Python Package Index.\nHere\u2019s a few picks:\n\nhttpie-api-auth: ApiAuth\nhttpie-aws-auth: AWS \/ Amazon S3\nhttpie-edgegrid: EdgeGrid\nhttpie-hmac-auth: HMAC\nhttpie-jwt-auth: JWTAuth (JSON Web Tokens)\nhttpie-negotiate: SPNEGO (GSS Negotiate)\nhttpie-ntlm: NTLM (NT LAN Manager)\nhttpie-oauth: OAuth\nrequests-hawk: Hawk\n\n\n14\u00a0\u00a0\u00a0HTTP redirects\nBy default, HTTP redirects are not followed and only the first\nresponse is shown:\n$ http httpbin.org\/redirect\/3\n\n14.1\u00a0\u00a0\u00a0Follow Location\nTo instruct HTTPie to follow the Location header of 30x responses\nand show the final response instead, use the --follow, -F option:\n$ http --follow httpbin.org\/redirect\/3\n\n14.2\u00a0\u00a0\u00a0Showing intermediary redirect responses\nIf you additionally wish to see the intermediary requests\/responses,\nthen use the --all option as well:\n$ http --follow --all httpbin.org\/redirect\/3\n\n14.3\u00a0\u00a0\u00a0Limiting maximum redirects followed\nTo change the default limit of maximum 30 redirects, use the\n--max-redirects=<limit> option:\n$ http --follow --all --max-redirects=2 httpbin.org\/redirect\/3\n\n15\u00a0\u00a0\u00a0Proxies\nYou can specify proxies to be used through the --proxy argument for each\nprotocol (which is included in the value in case of redirects across protocols):\n$ http --proxy=http:http:\/\/10.10.1.10:3128 --proxy=https:https:\/\/10.10.1.10:1080 example.org\nWith Basic authentication:\n$ http --proxy=http:http:\/\/user:pass@10.10.1.10:3128 example.org\n\n15.1\u00a0\u00a0\u00a0Environment variables\nYou can also configure proxies by environment variables ALL_PROXY,\nHTTP_PROXY and HTTPS_PROXY, and the underlying Requests library will\npick them up as well. If you want to disable proxies configured through\nthe environment variables for certain hosts, you can specify them in NO_PROXY.\nIn your ~\/.bash_profile:\nexport HTTP_PROXY=http:\/\/10.10.1.10:3128\nexport HTTPS_PROXY=https:\/\/10.10.1.10:1080\nexport NO_PROXY=localhost,example.com\n\n15.2\u00a0\u00a0\u00a0SOCKS\nUsage is the same as for other types of proxies:\n$ http --proxy=http:socks5:\/\/user:pass@host:port --proxy=https:socks5:\/\/user:pass@host:port example.org\n\n16\u00a0\u00a0\u00a0HTTPS\n\n16.1\u00a0\u00a0\u00a0Server SSL certificate verification\nTo skip the host\u2019s SSL certificate verification, you can pass --verify=no\n(default is yes):\n$ http --verify=no https:\/\/httpbin.org\/get\n\n16.2\u00a0\u00a0\u00a0Custom CA bundle\nYou can also use --verify=<CA_BUNDLE_PATH> to set a custom CA bundle path:\n$ http --verify=\/ssl\/custom_ca_bundle https:\/\/example.org\n\n16.3\u00a0\u00a0\u00a0Client side SSL certificate\nTo use a client side certificate for the SSL communication, you can pass\nthe path of the cert file with --cert:\n$ http --cert=client.pem https:\/\/example.org\nIf the private key is not contained in the cert file you may pass the\npath of the key file with --cert-key:\n$ http --cert=client.crt --cert-key=client.key https:\/\/example.org\n\n16.4\u00a0\u00a0\u00a0SSL version\nUse the --ssl=<PROTOCOL> option to specify the desired protocol version to\nuse. This will default to SSL v2.3 which will negotiate the highest protocol\nthat both the server and your installation of OpenSSL support. The available\nprotocols are\nssl2.3, ssl3, tls1, tls1.1, tls1.2, tls1.3.\n(The actually available set of protocols may vary depending on your OpenSSL\ninstallation.)\n# Specify the vulnerable SSL v3 protocol to talk to an outdated server:\n$ http --ssl=ssl3 https:\/\/vulnerable.example.org\n\n16.5\u00a0\u00a0\u00a0SSL ciphers\nYou can specify the available ciphers with --ciphers.\nIt should be a string in the\nOpenSSL cipher list format.\n$ http --ciphers=ECDHE-RSA-AES128-GCM-SHA256  https:\/\/httpbin.org\/get\nNote: these cipher strings do not change the negotiated version of SSL or TLS,\nthey only affect the list of available cipher suites.\nTo see the default cipher string, run http --help and see\nthe --ciphers section under SSL.\n\n17\u00a0\u00a0\u00a0Output options\nBy default, HTTPie only outputs the final response and the whole response\nmessage is printed (headers as well as the body). You can control what should\nbe printed via several options:\n\n\n--headers, -h\nOnly the response headers are printed.\n\n--body, -b\nOnly the response body is printed.\n\n--verbose, -v\nPrint the whole HTTP exchange (request and response).\nThis option also enables --all (see below).\n\n--print, -p\nSelects parts of the HTTP exchange.\n\n--quiet, -q\nDon't print anything to stdout and stderr.\n\n\n\n\n17.1\u00a0\u00a0\u00a0What parts of the HTTP exchange should be printed\nAll the other output options are under the hood just shortcuts for\nthe more powerful --print, -p. It accepts a string of characters each\nof which represents a specific part of the HTTP exchange:\n\n\nCharacter\nStands for\n\n\n\nH\nrequest headers\n\nB\nrequest body\n\nh\nresponse headers\n\nb\nresponse body\n\n\n\nPrint request and response headers:\n$ http --print=Hh PUT httpbin.org\/put hello=world\n\n17.2\u00a0\u00a0\u00a0Verbose output\n--verbose can often be useful for debugging the request and generating\ndocumentation examples:\n$ http --verbose PUT httpbin.org\/put hello=world\nPUT \/put HTTP\/1.1\nAccept: application\/json, *\/*;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application\/json\nHost: httpbin.org\nUser-Agent: HTTPie\/0.2.7dev\n\n{\n    \"hello\": \"world\"\n}\n\n\nHTTP\/1.1 200 OK\nConnection: keep-alive\nContent-Length: 477\nContent-Type: application\/json\nDate: Sun, 05 Aug 2012 00:25:23 GMT\nServer: gunicorn\/0.13.4\n\n{\n    [\u2026]\n}\n\n17.3\u00a0\u00a0\u00a0Quiet output\n--quiet redirects all output that would otherwise go to stdout\nand stderr  (except for error messages) to \/dev\/null.\nThis doesn\u2019t affect output to a file via --output or --download.\n# There will be no output:\n$ http --quiet httpbin.org\/post enjoy='the silence'\n\n17.4\u00a0\u00a0\u00a0Viewing intermediary requests\/responses\nTo see all the HTTP communication, i.e. the final request\/response as\nwell as any possible  intermediary requests\/responses, use the --all\noption. The intermediary HTTP communication include followed redirects\n(with --follow), the first unauthorized request when HTTP digest\nauthentication is used (--auth=digest), etc.\n# Include all responses that lead to the final one:\n$ http --all --follow httpbin.org\/redirect\/3\nThe intermediary requests\/response are by default formatted according to\n--print, -p (and its shortcuts described above). If you\u2019d like to change\nthat, use the --history-print, -P option. It takes the same\narguments as --print, -p but applies to the intermediary requests only.\n# Print the intermediary requests\/responses differently than the final one:\n$ http -A digest -a foo:bar --all -p Hh -P H httpbin.org\/digest-auth\/auth\/foo\/bar\n\n17.5\u00a0\u00a0\u00a0Conditional body download\nAs an optimization, the response body is downloaded from the server\nonly if it\u2019s part of the output. This is similar to performing a HEAD\nrequest, except that it applies to any HTTP method you use.\nLet\u2019s say that there is an API that returns the whole resource when it is\nupdated, but you are only interested in the response headers to see the\nstatus code after an update:\n$ http --headers PATCH httpbin.org\/patch name='New Name'\nSince we are only printing the HTTP headers here, the connection to the server\nis closed as soon as all the response headers have been received.\nTherefore, bandwidth and time isn\u2019t wasted downloading the body\nwhich you don\u2019t care about. The response headers are downloaded always,\neven if they are not part of the output\n\n18\u00a0\u00a0\u00a0Redirected Input\nThe universal method for passing request data is through redirected stdin\n(standard input)\u2014piping.\nBy default, stdin data is buffered and then with no further processing\nused as the request body. If you provide Content-Length, then the request\nbody is streamed without buffering. You can also use --chunked to enable\nstreaming via chunked transfer encoding.\nThere are multiple useful ways to use piping:\nRedirect from a file:\n$ http PUT httpbin.org\/put X-API-Token:123 < files\/data.json\nOr the output of another program:\n$ grep '401 Unauthorized' \/var\/log\/httpd\/error_log | http POST httpbin.org\/post\nYou can use echo for simple data:\n$ echo '{\"name\": \"John\"}' | http PATCH httpbin.org\/patch X-API-Token:123\nYou can also use a Bash here string:\n$ http httpbin.org\/post <<<'{\"name\": \"John\"}'\nYou can even pipe web services together using HTTPie:\n$ http GET https:\/\/api.github.com\/repos\/httpie\/httpie | http POST httpbin.org\/post\nYou can use cat to enter multiline data on the terminal:\n$ cat | http POST httpbin.org\/post\n<paste>\n^D\n$ cat | http POST httpbin.org\/post Content-Type:text\/plain\n- buy milk\n- call parents\n^D\nOn OS X, you can send the contents of the clipboard with pbpaste:\n$ pbpaste | http PUT httpbin.org\/put\nPassing data through stdin cannot be combined with data fields specified\non the command line:\n$ echo 'data' | http POST example.org more=data   # This is invalid\nTo prevent HTTPie from reading stdin data you can use the\n--ignore-stdin option.\n\n18.1\u00a0\u00a0\u00a0Request data from a filename\nAn alternative to redirected stdin is specifying a filename (as\n@\/path\/to\/file) whose content is used as if it came from stdin.\nIt has the advantage that the Content-Type\nheader is automatically set to the appropriate value based on the\nfilename extension. For example, the following request sends the\nverbatim contents of that XML file with Content-Type: application\/xml:\n$ http PUT httpbin.org\/put @files\/data.xml\nFile uploads are always streamed to avoid memory issues with large files.\n\n19\u00a0\u00a0\u00a0Chunked transfer encoding\nYou can use the --chunked flag to instruct HTTPie to use\nTransfer-Encoding: chunked:\n$ http --chunked PUT httpbin.org\/put hello=world\n$ http --chunked --multipart PUT httpbin.org\/put hello=world foo@files\/data.xml\n$ http --chunked httpbin.org\/post @files\/data.xml\n$ cat files\/data.xml | http --chunked httpbin.org\/post\n\n20\u00a0\u00a0\u00a0Terminal output\nHTTPie does several things by default in order to make its terminal output\neasy to read.\n\n20.1\u00a0\u00a0\u00a0Colors and formatting\nSyntax highlighting is applied to HTTP headers and bodies (where it makes\nsense). You can choose your preferred color scheme via the --style option\nif you don\u2019t like the default one. There dozens of styles available, here are just a few special or notable ones:\n\n\nauto\nFollows your terminal ANSI color styles. This is the default style used by HTTPie.\n\ndefault\nDefault styles of the underlying Pygments library. Not actually used by default by HTTPie.\nYou can enable it with --style=default\n\nmonokai\nA popular color scheme. Enable with --style=monokai.\n\nfruity\nA bold, colorful scheme. Enable with --style=fruity.\n\n\u2026\nSee $ http --help for all the possible --style values.\n\n\n\nAlso, the following formatting is applied:\n\nHTTP headers are sorted by name.\nJSON data is indented, sorted by keys, and unicode escapes are converted\nto the characters they represent.\n\nOne of these options can be used to control output processing:\n\n\n--pretty=all\nApply both colors and formatting.\nDefault for terminal output.\n\n--pretty=colors\nApply colors.\n\n--pretty=format\nApply formatting.\n\n--pretty=none\nDisables output processing.\nDefault for redirected output.\n\n\n\nYou can control the applied formatting via the --format-options option.\nThe following options are available:\nFor example, this is how you would disable the default header and JSON key\nsorting, and specify a custom JSON indent size:\n$ http --format-options headers.sort:false,json.sort_keys:false,json.indent:2 httpbin.org\/get\nThis is something you will typically store as one of the default options in your\nconfig file. See http --help for all the available formatting options.\nThere are also two shortcuts that allow you to quickly disable and re-enable\nsorting-related format options (currently it means JSON keys and headers):\n--unsorted and --sorted.\n\n20.2\u00a0\u00a0\u00a0Binary data\nBinary data is suppressed for terminal output, which makes it safe to perform\nrequests to URLs that send back binary data. Binary data is suppressed also in\nredirected, but prettified output. The connection is closed as soon as we know\nthat the response body is binary,\n$ http httpbin.org\/bytes\/2000\nYou will nearly instantly see something like this:\nHTTP\/1.1 200 OK\nContent-Type: application\/octet-stream\n\n+-----------------------------------------+\n| NOTE: binary data not shown in terminal |\n+-----------------------------------------+\n\n21\u00a0\u00a0\u00a0Redirected output\nHTTPie uses a different set of defaults for redirected output than for\nterminal output. The differences being:\n\nFormatting and colors aren\u2019t applied (unless --pretty is specified).\nOnly the response body is printed (unless one of the output options is set).\nAlso, binary data isn\u2019t suppressed.\n\nThe reason is to make piping HTTPie\u2019s output to another programs and\ndownloading files work with no extra flags. Most of the time, only the raw\nresponse body is of an interest when the output is redirected.\nDownload a file:\n$ http httpbin.org\/image\/png > image.png\nDownload an image of Octocat, resize it using ImageMagick, upload it elsewhere:\n$ http octodex.github.com\/images\/original.jpg | convert - -resize 25% -  | http example.org\/Octocats\nForce colorizing and formatting, and show both the request and the response in\nless pager:\n$ http --pretty=all --verbose httpbin.org\/get | less -R\nThe -R flag tells less to interpret color escape sequences included\nHTTPie`s output.\nYou can create a shortcut for invoking HTTPie with colorized and paged output\nby adding the following to your ~\/.bash_profile:\nfunction httpless {\n    # `httpless example.org'\n    http --pretty=all --print=hb \"$@\" | less -R;\n}\n\n22\u00a0\u00a0\u00a0Download mode\nHTTPie features a download mode in which it acts similarly to wget.\nWhen enabled using the --download, -d flag, response headers are printed to\nthe terminal (stderr), and a progress bar is shown while the response body\nis being saved to a file.\n$ http --download https:\/\/github.com\/httpie\/httpie\/archive\/master.tar.gz\nHTTP\/1.1 200 OK\nContent-Disposition: attachment; filename=httpie-master.tar.gz\nContent-Length: 257336\nContent-Type: application\/x-gzip\n\nDownloading 251.30 kB to \"httpie-master.tar.gz\"\nDone. 251.30 kB in 2.73862s (91.76 kB\/s)\n\n22.1\u00a0\u00a0\u00a0Downloaded filename\nThere are three mutually exclusive ways through which HTTPie determines\nthe output filename (with decreasing priority):\n\nYou can explicitly provide it via --output, -o.\nThe file gets overwritten if it already exists\n(or appended to with --continue, -c).\nThe server may specify the filename in the optional Content-Disposition\nresponse header. Any leading dots are stripped from a server-provided filename.\nThe last resort HTTPie uses is to generate the filename from a combination\nof the request URL and the response Content-Type.\nThe initial URL is always used as the basis for\nthe generated filename \u2014 even if there has been one or more redirects.\n\nTo prevent data loss by overwriting, HTTPie adds a unique numerical suffix to the\nfilename when necessary (unless specified with --output, -o).\n\n22.2\u00a0\u00a0\u00a0Piping while downloading\nYou can also redirect the response body to another program while the response\nheaders and progress are still shown in the terminal:\n$ http -d https:\/\/github.com\/httpie\/httpie\/archive\/master.tar.gz |  tar zxf -\n\n22.3\u00a0\u00a0\u00a0Resuming downloads\nIf --output, -o is specified, you can resume a partial download using the\n--continue, -c option. This only works with servers that support\nRange requests and 206 Partial Content responses. If the server doesn\u2019t\nsupport that, the whole file will simply be downloaded:\n$ http -dco file.zip example.org\/file\n\n22.4\u00a0\u00a0\u00a0Other notes\n\nThe --download option only changes how the response body is treated.\nYou can still set custom headers, use sessions, --verbose, -v, etc.\n--download always implies --follow (redirects are followed).\n--download also implies --check-status\n(error HTTP status will result in a non-zero exist static code).\nHTTPie exits with status code 1 (error) if the body hasn\u2019t been fully\ndownloaded.\nAccept-Encoding cannot be set with --download.\n\n\n23\u00a0\u00a0\u00a0Streamed responses\nResponses are downloaded and printed in chunks which allows for streaming\nand large file downloads without using too much memory. However, when\ncolors and formatting is applied, the whole response is buffered and only\nthen processed at once.\n\n23.1\u00a0\u00a0\u00a0Disabling buffering\nYou can use the --stream, -S flag to make two things happen:\n\nThe output is flushed in much smaller chunks without any buffering,\nwhich makes HTTPie behave kind of like tail -f for URLs.\nStreaming becomes enabled even when the output is prettified: It will be\napplied to each line of the response and flushed immediately. This makes\nit possible to have a nice output for long-lived requests, such as one\nto the Twitter streaming API.\n\n\n23.2\u00a0\u00a0\u00a0Examples use cases\nPrettified streamed response:\n$ http --stream -f -a YOUR-TWITTER-NAME https:\/\/stream.twitter.com\/1\/statuses\/filter.json track='Justin Bieber'\nStreamed output by small chunks \u00e0 la tail -f:\n# Send each new tweet (JSON object) mentioning \"Apple\" to another\n# server as soon as it arrives from the Twitter streaming API:\n$ http --stream -f -a YOUR-TWITTER-NAME https:\/\/stream.twitter.com\/1\/statuses\/filter.json track=Apple \\\n| while read tweet; do echo \"$tweet\" | http POST example.org\/tweets ; done\n\n24\u00a0\u00a0\u00a0Sessions\nBy default, every request HTTPie makes is completely independent of any\nprevious ones to the same host.\nHowever, HTTPie also supports persistent\nsessions via the --session=SESSION_NAME_OR_PATH option. In a session,\ncustom HTTP headers (except for the ones starting with Content- or If-),\nauthentication, and cookies\n(manually specified or sent by the server) persist between requests\nto the same host.\n# Create a new session:\n$ http --session=.\/session.json httpbin.org\/headers API-Token:123\n# Inspect \/ edit the generated session file:\n$ cat session.json\n# Re-use the existing session \u2014 the API-Token header will be set:\n$ http --session=.\/session.json httpbin.org\/headers\nAll session data, including credentials, cookie data,\nand custom headers are stored in plain text.\nThat means session files can also be created and edited manually in a text\neditor\u2014they are regular JSON. It also means that they can be read by anyone\nwho has access to the session file.\n\n24.1\u00a0\u00a0\u00a0Named sessions\nYou can create one or more named session per host. For example, this is how\nyou can create a new session named user1 for httpbin.org:\n$ http --session=user1 -a user1:password httpbin.org\/get X-Foo:Bar\nFrom now on, you can refer to the session by its name (user1). When you choose\nto use the session again, any previously specified authentication or HTTP headers\nwill automatically be set:\n$ http --session=user1 httpbin.org\/get\nTo create or reuse a different session, simple specify a different name:\n$ http --session=user2 -a user2:password httpbin.org\/get X-Bar:Foo\nNamed sessions\u2019s data is stored in JSON files inside the sessions\nsubdirectory of the config directory, typically:\n~\/.config\/httpie\/sessions\/<host>\/<name>.json\n(%APPDATA%\\httpie\\sessions\\<host>\\<name>.json on Windows).\nIf you have executed the above commands on a unix machine,\nyou should be able list the generated sessions files using:\n$ ls -l ~\/.config\/httpie\/sessions\/httpbin.org\n\n24.2\u00a0\u00a0\u00a0Anonymous sessions\nInstead of a name, you can also directly specify a path to a session file. This\nallows for sessions to be re-used across multiple hosts:\n# Create a session:\n$ http --session=\/tmp\/session.json example.org\n# Use the session to make a request to another host:\n$ http --session=\/tmp\/session.json admin.example.org\n# You can also refer to a previously created named session:\n$ http --session=~\/.config\/httpie\/sessions\/another.example.org\/test.json example.org\nWhen creating anonymous sessions, please remember to always include at least\none \/, even if the session files is located in the current directory\n(i.e., --session=.\/session.json instead of just --session=session.json),\notherwise HTTPie assumes a named session instead.\n\n24.3\u00a0\u00a0\u00a0Readonly session\nTo use an existing session file without updating it from the request\/response\nexchange after it has been created, specify the session name via\n--session-read-only=SESSION_NAME_OR_PATH instead.\n# If the session file doesn\u2019t exist, then it is created:\n$ http --session-read-only=.\/ro-session.json httpbin.org\/headers Custom-Header:orig-value\n# But it is not updated:\n$ http --session-read-only=.\/ro-session.json httpbin.org\/headers Custom-Header:new-value\n\n24.4\u00a0\u00a0\u00a0Cookie Storage Behaviour\nTL;DR: Cookie storage priority: Server response > Command line request > Session file\nTo set a cookie within a Session there are three options:\n\nGet a Set-Cookie header in a response from a server\n\n$ http --session=.\/session.json httpbin.org\/cookie\/set?foo=bar\n\nSet the cookie name and value through the command line as seen in cookies\n\n$ http --session=.\/session.json httpbin.org\/headers Cookie:foo=bar\n\nManually set cookie parameters in the json file of the session\n\n{\n    \"__meta__\": {\n    \"about\": \"HTTPie session file\",\n    \"help\": \"https:\/\/httpie.org\/doc#sessions\",\n    \"httpie\": \"2.2.0-dev\"\n    },\n    \"auth\": {\n        \"password\": null,\n        \"type\": null,\n        \"username\": null\n    },\n    \"cookies\": {\n        \"foo\": {\n            \"expires\": null,\n            \"path\": \"\/\",\n            \"secure\": false,\n            \"value\": \"bar\"\n            }\n    }\n}\nCookies will be set in the session file with the priority specified above. For example, a cookie\nset through the command line will overwrite a cookie of the same name stored\nin the session file. If the server returns a Set-Cookie header with a\ncookie of the same name, the returned cookie will overwrite the preexisting cookie.\nExpired cookies are never stored. If a cookie in a session file expires, it will be removed before\nsending a new request. If the server expires an existing cookie, it will also be removed from the\nsession file.\n\n25\u00a0\u00a0\u00a0Config\nHTTPie uses a simple config.json file. The file doesn\u2019t exist by default\nbut you can create it manually.\n\n25.1\u00a0\u00a0\u00a0Config file directory\nTo see the exact location for your installation, run http --debug and\nlook for config_dir in the output.\nThe default location of the configuration file on most platforms is\n$XDG_CONFIG_HOME\/httpie\/config.json (defaulting to\n~\/.config\/httpie\/config.json).\nFor backwards compatibility, if the directory ~\/.httpie exists,\nthe configuration file there will be used instead.\nOn Windows, the config file is located at %APPDATA%\\httpie\\config.json.\nThe config directory can be changed by setting the $HTTPIE_CONFIG_DIR\nenvironment variable:\n$ export HTTPIE_CONFIG_DIR=\/tmp\/httpie\n$ http httpbin.org\/get\n\n25.2\u00a0\u00a0\u00a0Configurable options\nCurrently HTTPie offers a single configurable option:\n\n25.2.1\u00a0\u00a0\u00a0default_options\nAn Array (by default empty) of default options that should be applied to\nevery invocation of HTTPie.\nFor instance, you can use this config option to change your default color theme:\n$ cat ~\/.config\/httpie\/config.json\n{\n    \"default_options\": [\n      \"--style=fruity\"\n    ]\n}\nEven though it is technically possible to include there any of HTTPie\u2019s\noptions, it is not recommended to modify the default behaviour in a way\nthat would break your compatibility with the wider world as that can\ngenerate a lot of confusion.\n\n25.3\u00a0\u00a0\u00a0Un-setting previously specified options\nDefault options from the config file, or specified any other way,\ncan be unset for a particular invocation via --no-OPTION arguments passed\non the command line (e.g., --no-style or --no-session).\n\n26\u00a0\u00a0\u00a0Scripting\nWhen using HTTPie from shell scripts, it can be handy to set the\n--check-status flag. It instructs HTTPie to exit with an error if the\nHTTP status is one of 3xx, 4xx, or 5xx. The exit status will\nbe 3 (unless --follow is set), 4, or 5,\nrespectively.\n#!\/bin\/bash\n\nif http --check-status --ignore-stdin --timeout=2.5 HEAD httpbin.org\/get &> \/dev\/null; then\n    echo 'OK!'\nelse\n    case $? in\n        2) echo 'Request timed out!' ;;\n        3) echo 'Unexpected HTTP 3xx Redirection!' ;;\n        4) echo 'HTTP 4xx Client Error!' ;;\n        5) echo 'HTTP 5xx Server Error!' ;;\n        6) echo 'Exceeded --max-redirects=<n> redirects!' ;;\n        *) echo 'Other Error!' ;;\n    esac\nfi\n\n26.1\u00a0\u00a0\u00a0Best practices\nThe default behaviour of automatically reading stdin is typically not\ndesirable during non-interactive invocations. You most likely want to\nuse the --ignore-stdin option to disable it.\nIt is a common gotcha that without this option HTTPie seemingly hangs.\nWhat happens is that when HTTPie is invoked for example from a cron job,\nstdin is not connected to a terminal.\nTherefore, rules for redirected input apply, i.e., HTTPie starts to read it\nexpecting that the request body will be passed through.\nAnd since there\u2019s no data nor EOF, it will be stuck. So unless you\u2019re\npiping some data to HTTPie, this flag should be used in scripts.\nAlso, it might be good to set a connection --timeout limit to prevent\nyour program from hanging if the server never responds.\n\n27\u00a0\u00a0\u00a0Meta\n\n27.1\u00a0\u00a0\u00a0Interface design\nThe syntax of the command arguments closely corresponds to the actual HTTP\nrequests sent over the wire. It has the advantage  that it\u2019s easy to remember\nand read. It is often possible to translate an HTTP request to an HTTPie\nargument list just by inlining the request elements. For example, compare this\nHTTP request:\nPOST \/post HTTP\/1.1\nHost: httpbin.org\nX-API-Key: 123\nUser-Agent: Bacon\/1.0\nContent-Type: application\/x-www-form-urlencoded\n\nname=value&name2=value2\nwith the HTTPie command that sends it:\n$ http -f POST httpbin.org\/post \\\n  X-API-Key:123 \\\n  User-Agent:Bacon\/1.0 \\\n  name=value \\\n  name2=value2\nNotice that both the order of elements and the syntax is very similar,\nand that only a small portion of the command is used to control HTTPie and\ndoesn\u2019t directly correspond to any part of the request (here it\u2019s only -f\nasking HTTPie to send a form request).\nThe two modes, --pretty=all (default for terminal) and --pretty=none\n(default for redirected output), allow for both user-friendly interactive use\nand usage from scripts, where HTTPie serves as a generic HTTP client.\nAs HTTPie is still under heavy development, the existing command line\nsyntax and some of the --OPTIONS may change slightly before\nHTTPie reaches its final version 1.0. All changes are recorded in the\nchange log.\n\n27.2\u00a0\u00a0\u00a0User support\nPlease use the following support channels:\n\nGitHub issues\nfor bug reports and feature requests.\nOur Gitter chat room\nto ask questions, discuss features, and for general discussion.\nStackOverflow\nto ask questions (please make sure to use the\nhttpie tag).\nTweet directly to @httpie.\nYou can also tweet directly to @jakubroztocil.\n\n\n27.3\u00a0\u00a0\u00a0Related projects\n\n27.3.1\u00a0\u00a0\u00a0Dependencies\nUnder the hood, HTTPie uses these two amazing libraries:\n\nRequests\n\u2014 Python HTTP library for humans\nPygments\n\u2014 Python syntax highlighter\n\n\n27.3.2\u00a0\u00a0\u00a0HTTPie friends\nHTTPie plays exceptionally well with the following tools:\n\nhttp-prompt\n\u2014  interactive shell for HTTPie featuring autocomplete\nand command syntax highlighting\njq\n\u2014 CLI JSON processor that\nworks great in conjunction with HTTPie\n\nHelpers to convert from other client tools:\n\nCurliPie help convert cURL command line to HTTPie command line.\n\n\n27.3.3\u00a0\u00a0\u00a0Alternatives\n\nhttpcat \u2014 a lower-level sister utility\nof HTTPie for constructing raw HTTP requests on the command line.\ncurl \u2014 a \"Swiss knife\" command line tool and\nan exceptional library for transferring data with URLs.\n\n\n27.4\u00a0\u00a0\u00a0Contributing\nSee CONTRIBUTING.rst.\n\n27.5\u00a0\u00a0\u00a0Change log\nSee CHANGELOG.\n\n27.6\u00a0\u00a0\u00a0Artwork\n\nLogo by Cl\u00e1udia Delgado.\nAnimation by Allen Smith of GitHub.\n\n\n27.7\u00a0\u00a0\u00a0Licence\nBSD-3-Clause: LICENSE.\n\n27.8\u00a0\u00a0\u00a0Authors\nJakub Roztocil  (@jakubroztocil) created HTTPie and these fine people\nhave contributed.\n","121":"Awesome Machine Learning \nA curated list of awesome machine learning frameworks, libraries and software (by language). Inspired by awesome-php.\nIf you want to contribute to this list (please do), send me a pull request or contact me @josephmisiti.\nAlso, a listed repository should be deprecated if:\n\nRepository's owner explicitly say that \"this library is not maintained\".\nNot committed for a long time (2~3 years).\n\nFurther resources:\n\n\nFor a list of free machine learning books available for download, go here.\n\n\nFor a list of professional machine learning events, go here.\n\n\nFor a list of (mostly) free machine learning courses available online, go here.\n\n\nFor a list of blogs and newsletters on data science and machine learning, go here.\n\n\nFor a list of free-to-attend meetups and local events, go here.\n\n\nTable of Contents\nFrameworks and Libraries\n\nAwesome Machine Learning \n\nTable of Contents\n\nFrameworks and Libraries\nTools\n\n\nAPL\n\nGeneral-Purpose Machine Learning\n\n\nC\n\nGeneral-Purpose Machine Learning\nComputer Vision\n\n\nC++\n\nComputer Vision\nGeneral-Purpose Machine Learning\nNatural Language Processing\nSpeech Recognition\nSequence Analysis\nGesture Detection\n\n\nCommon Lisp\n\nGeneral-Purpose Machine Learning\n\n\nClojure\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nDeep Learning\nData Analysis\nData Visualization\nInterop\nMisc\nExtra\n\n\nCrystal\n\nGeneral-Purpose Machine Learning\n\n\nElixir\n\nGeneral-Purpose Machine Learning\nNatural Language Processing\n\n\nErlang\n\nGeneral-Purpose Machine Learning\n\n\nFortran\n\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\n\n\nGo\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nSpatial analysis and geometry\nData Analysis \/ Data Visualization\nComputer vision\nReinforcement learning\n\n\nHaskell\n\nGeneral-Purpose Machine Learning\n\n\nJava\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nSpeech Recognition\nData Analysis \/ Data Visualization\nDeep Learning\n\n\nJavascript\n\nNatural Language Processing\nData Analysis \/ Data Visualization\nGeneral-Purpose Machine Learning\nMisc\nDemos and Scripts\n\n\nJulia\n\nGeneral-Purpose Machine Learning\nNatural Language Processing\nData Analysis \/ Data Visualization\nMisc Stuff \/ Presentations\n\n\nLua\n\nGeneral-Purpose Machine Learning\nDemos and Scripts\n\n\nMatlab\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\n\n\n.NET\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\n\n\nObjective C\n\nGeneral-Purpose Machine Learning\n\n\nOCaml\n\nGeneral-Purpose Machine Learning\n\n\nPerl\n\nData Analysis \/ Data Visualization\nGeneral-Purpose Machine Learning\n\n\nPerl 6\n\nData Analysis \/ Data Visualization\nGeneral-Purpose Machine Learning\n\n\nPHP\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\n\n\nPython\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\nMisc Scripts \/ iPython Notebooks \/ Codebases\nNeural Networks\nKaggle Competition Source Code\nReinforcement Learning\n\n\nRuby\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\nMisc\n\n\nRust\n\nGeneral-Purpose Machine Learning\n\n\nR\n\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\n\n\nSAS\n\nGeneral-Purpose Machine Learning\nData Analysis \/ Data Visualization\nNatural Language Processing\nDemos and Scripts\n\n\nScala\n\nNatural Language Processing\nData Analysis \/ Data Visualization\nGeneral-Purpose Machine Learning\n\n\nScheme\n\nNeural Networks\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\n\n\n\n\nTools\n\nNeural Networks\nMisc\n\nCredits\n\nAPL\n\nGeneral-Purpose Machine Learning\n\nnaive-apl - Naive Bayesian Classifier implementation in APL. [Deprecated]\n\n\nC\n\nGeneral-Purpose Machine Learning\n\nDarknet - Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.\nRecommender - A C library for product recommendations\/suggestions using collaborative filtering (CF).\nHybrid Recommender System - A hybrid recommender system based upon scikit-learn algorithms. [Deprecated]\nneonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.\ncONNXr - An ONNX runtime written in pure C (99) with zero dependencies focused on small embedded devices. Run inference on your machine learning models no matter which framework you train it with. Easy to install and compiles everywhere, even in very old devices.\n\n\nComputer Vision\n\nCCV - C-based\/Cached\/Core Computer Vision Library, A Modern Computer Vision Library.\nVLFeat - VLFeat is an open and portable library of computer vision algorithms, which has a Matlab toolbox.\n\n\nC++\n\nComputer Vision\n\nDLib - DLib has C++ and Python interfaces for face detection and training general object detectors.\nEBLearn - Eblearn is an object-oriented C++ library that implements various machine learning models [Deprecated]\nOpenCV - OpenCV has C++, C, Python, Java and MATLAB interfaces and supports Windows, Linux, Android and Mac OS.\nVIGRA - VIGRA is a genertic cross-platform C++ computer vision and machine learning library for volumes of arbitrary dimensionality with Python bindings.\nOpenpose - A real-time multi-person keypoint detection library for body, face, hands, and foot estimation\n\n\nGeneral-Purpose Machine Learning\n\nBanditLib - A simple Multi-armed Bandit library. [Deprecated]\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind. [DEEP LEARNING]\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.\nCNTK - The Computational Network Toolkit (CNTK) by Microsoft Research, is a unified deep-learning toolkit that describes neural networks as a series of computational steps via a directed graph.\nCUDA - This is a fast C++\/CUDA implementation of convolutional [DEEP LEARNING]\nDeepDetect - A machine learning API and server written in C++11. It makes state of the art machine learning easy to work with and integrate into existing applications.\nDistributed Machine learning Tool Kit (DMTK) - A distributed machine learning (parameter server) framework by Microsoft. Enables training models on large data sets across multiple machines. Current tools bundled with it include: LightLDA and Distributed (Multisense) Word Embedding.\nDLib - A suite of ML tools designed to be easy to imbed in other applications.\nDSSTNE - A software library created by Amazon for training and deploying deep neural networks using GPUs which emphasizes speed and scale over experimental flexibility.\nDyNet - A dynamic neural network library working well with networks that have dynamic structures that change for every training instance. Written in C++ with bindings in Python.\nFido - A highly-modular C++ machine learning library for embedded electronics and robotics.\nigraph - General purpose graph library.\nIntel(R) DAAL - A high performance software library developed by Intel and optimized for Intel's architectures. Library provides algorithmic building blocks for all stages of data analytics and allows to process data in batch, online and distributed modes.\nLightGBM - Microsoft's fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.\nlibfm - A generic approach that allows to mimic most factorization models by feature engineering.\nMLDB - The Machine Learning Database is a database designed for machine learning. Send it commands over a RESTful API to store data, explore it using SQL, then train machine learning models and expose them as APIs.\nmlpack - A scalable C++ machine learning library.\nMXNet - Lightweight, Portable, Flexible Distributed\/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nParaMonte - A general-purpose library with C\/C++ interface for Bayesian data analysis and visualization via serial\/parallel Monte Carlo and MCMC simulations. Documentation can be found here.\nproNet-core - A general-purpose network embedding framework: pair-wise representations optimization Network Edit.\nPyCUDA - Python interface to CUDA\nROOT - A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualization and storage.\nshark - A fast, modular, feature-rich open-source C++ machine learning library.\nShogun - The Shogun Machine Learning Toolbox.\nsofia-ml - Suite of fast incremental algorithms.\nStan - A probabilistic programming language implementing full Bayesian statistical inference with Hamiltonian Monte Carlo sampling.\nTimbl - A software package\/C++ library implementing several memory-based learning algorithms, among which IB1-IG, an implementation of k-nearest neighbor classification, and IGTree, a decision-tree approximation of IB1-IG. Commonly used for NLP.\nVowpal Wabbit (VW) - A fast out-of-core learning system.\nWarp-CTC - A fast parallel implementation of Connectionist Temporal Classification (CTC), on both CPU and GPU.\nXGBoost - A parallelized optimized general purpose gradient boosting library.\nThunderGBM - A fast library for GBDTs and Random Forests on GPUs.\nThunderSVM - A fast SVM library on GPUs and CPUs.\nLKYDeepNN - A header-only C++11 Neural Network library. Low dependency, native traditional chinese document.\nxLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertising and recommender systems.\nFeaturetools - A library for automated feature engineering. It excels at transforming transactional and relational datasets into feature matrices for machine learning using reusable feature engineering \"primitives\".\nskynet - A library for learning neural networks, has C-interface, net set in JSON. Written in C++ with bindings in Python, C++ and C#.\nFeast - A feature store for the management, discovery, and access of machine learning features. Feast provides a consistent view of feature data for both model training and model serving.\nHopsworks - A data-intensive platform for AI with the industry's first open-source feature store. The Hopsworks Feature Store provides both a feature warehouse for training and batch based on Apache Hive and a feature serving database, based on MySQL Cluster, for online applications.\nPolyaxon - A platform for reproducible and scalable machine learning and deep learning.\n\n\nNatural Language Processing\n\nBLLIP Parser - BLLIP Natural Language Parser (also known as the Charniak-Johnson parser).\ncolibri-core - C++ library, command line tools, and Python binding for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.\nCRF++ - Open source implementation of Conditional Random Fields (CRFs) for segmenting\/labeling sequential data & other Natural Language Processing tasks. [Deprecated]\nCRFsuite - CRFsuite is an implementation of Conditional Random Fields (CRFs) for labeling sequential data. [Deprecated]\nfrog - Memory-based NLP suite developed for Dutch: PoS tagger, lemmatiser, dependency parser, NER, shallow parser, morphological analyzer.\nlibfolia - C++ library for the FoLiA format\nMeTA - MeTA : ModErn Text Analysis is a C++ Data Sciences Toolkit that facilitates mining big text data.\nMIT Information Extraction Toolkit - C, C++, and Python tools for named entity recognition and relation extraction\nucto - Unicode-aware regular-expression based tokenizer for various languages. Tool and C++ library. Supports FoLiA format.\n\n\nSpeech Recognition\n\nKaldi - Kaldi is a toolkit for speech recognition written in C++ and licensed under the Apache License v2.0. Kaldi is intended for use by speech recognition researchers.\n\n\nSequence Analysis\n\nToPS - This is an object-oriented framework that facilitates the integration of probabilistic models for sequences over a user defined alphabet. [Deprecated]\n\n\nGesture Detection\n\ngrt - The Gesture Recognition Toolkit (GRT) is a cross-platform, open-source, C++ machine learning library designed for real-time gesture recognition.\n\n\nCommon Lisp\n\nGeneral-Purpose Machine Learning\n\nmgl - Neural networks (boltzmann machines, feed-forward and recurrent nets), Gaussian Processes.\nmgl-gpr - Evolutionary algorithms. [Deprecated]\ncl-libsvm - Wrapper for the libsvm support vector machine library. [Deprecated]\ncl-online-learning - Online learning algorithms (Perceptron, AROW, SCW, Logistic Regression).\ncl-random-forest - Implementation of Random Forest in Common Lisp.\n\n\nClojure\n\nNatural Language Processing\n\nClojure-openNLP - Natural Language Processing in Clojure (opennlp).\nInfections-clj - Rails-like inflection library for Clojure and ClojureScript.\n\n\nGeneral-Purpose Machine Learning\n\ntech.ml - A machine learning platform based on tech.ml.dataset, supporting not just ml algorithms, but also relevant ETL processing; wraps multiple machine learning libraries\nclj-ml - A machine learning library for Clojure built on top of Weka and friends.\nclj-boost - Wrapper for XGBoost\nTouchstone - Clojure A\/B testing library.\nClojush - The Push programming language and the PushGP genetic programming system implemented in Clojure.\nlambda-ml - Simple, concise implementations of machine learning techniques and utilities in Clojure.\nInfer - Inference and machine learning in Clojure. [Deprecated]\nEncog - Clojure wrapper for Encog (v3) (Machine-Learning framework that specializes in neural-nets). [Deprecated]\nFungp - A genetic programming library for Clojure. [Deprecated]\nStatistiker - Basic Machine Learning algorithms in Clojure. [Deprecated]\nclortex - General Machine Learning library using Numenta\u2019s Cortical Learning Algorithm. [Deprecated]\ncomportex - Functionally composable Machine Learning library using Numenta\u2019s Cortical Learning Algorithm. [Deprecated]\n\n\nDeep Learning\n\nMXNet - Bindings to Apache MXNet - part of the MXNet project\nDeep Diamond - A fast Clojure Tensor & Deep Learning library\njutsu.ai - Clojure wrapper for deeplearning4j with some added syntactic sugar.\ncortex - Neural networks, regression and feature learning in Clojure.\nFlare - Dynamic Tensor Graph library in Clojure (think PyTorch, DynNet, etc.)\ndl4clj - Clojure wrapper for Deeplearning4j.\n\n\nData Analysis\n\ntech.ml.dataset - Clojure dataframe library and pipeline for data processing and machine learning\nTablecloth - A dataframe grammar wrapping tech.ml.dataset, inspired by several R libraries\nPanthera - Clojure API wrapping Python's Pandas library\nIncanter - Incanter is a Clojure-based, R-like platform for statistical computing and graphics.\nPigPen - Map-Reduce for Clojure.\nGeni - a Clojure dataframe library that runs on Apache Spark\n\n\nData Visualization\n\nHanami : Clojure(Script) library and framework for creating interactive visualization applications based in Vega-Lite (VGL) and\/or Vega (VG) specifications. Automatic framing and layouts along with a powerful templating system for abstracting visualization specs\nSaite -  Clojure(Script) client\/server application for dynamic interactive explorations and the creation of live shareable documents capturing them using Vega\/Vega-Lite, CodeMirror, markdown, and LaTeX\nOz - Data visualisation using Vega\/Vega-Lite and Hiccup, and a live-reload platform for literate-programming\nEnvision - Clojure Data Visualisation library, based on Statistiker and D3.\nPink Gorilla Notebook - A Clojure\/Clojurescript notebook application\/-library based on Gorilla-REPL\nclojupyter -  A Jupyter kernel for Clojure - run Clojure code in Jupyter Lab, Notebook and Console.\nnotespace - Notebook experience in your Clojure namespace\nDelight - A listener that streams your spark events logs to delight, a free and improved spark UI\n\n\nInterop\n\nJava Interop - Clojure has Native Java Interop from which Java's ML ecosystem can be accessed\nJavaScript Interop - ClojureScript has Native JavaScript Interop from which JavaScript's ML ecosystem can be accessed\nLibpython-clj - Interop with Python\nClojisR - Interop with R and Renjin (R on the JVM)\n\n\nMisc\n\nNeanderthal - Fast Clojure Matrix Library (native CPU, GPU, OpenCL, CUDA)\nkixistats - A library of statistical distribution sampling and transducing functions\nfastmath - A collection of functions for mathematical and statistical computing, macine learning, etc., wrapping several JVM libraries\nmatlib - a Clojure library of optimisation and control theory tools and convenience functions based on Neanderthal.\n\n\nExtra\n\nScicloj - Curated list of ML related resources for Clojure.\n\n\nCrystal\n\nGeneral-Purpose Machine Learning\n\nmachine - Simple machine learning algorithm.\ncrystal-fann - FANN (Fast Artificial Neural Network) binding.\n\n\nElixir\n\nGeneral-Purpose Machine Learning\n\nSimple Bayes - A Simple Bayes \/ Naive Bayes implementation in Elixir.\nemel - A simple and functional machine learning library written in Elixir.\nTensorflex - Tensorflow bindings for the Elixir programming language.\n\n\nNatural Language Processing\n\nStemmer - An English (Porter2) stemming implementation in Elixir.\n\n\nErlang\n\nGeneral-Purpose Machine Learning\n\nDisco - Map Reduce in Erlang. [Deprecated]\n\n\nFortran\n\nGeneral-Purpose Machine Learning\n\nneural-fortran - A parallel neural net microframework.\nRead the paper here.\n\n\nData Analysis \/ Data Visualization\n\nParaMonte - A general-purpose Fortran library for Bayesian data analysis and visualization via serial\/parallel Monte Carlo and MCMC simulations. Documentation can be found here.\n\n\nGo\n\nNatural Language Processing\n\nsnowball - Snowball Stemmer for Go.\nword-embedding - Word Embeddings: the full implementation of word2vec, GloVe in Go.\nsentences - Golang implementation of Punkt sentence tokenizer.\ngo-ngram - In-memory n-gram index with compression. [Deprecated]\npaicehusk - Golang implementation of the Paice\/Husk Stemming Algorithm. [Deprecated]\ngo-porterstemmer - A native Go clean room implementation of the Porter Stemming algorithm. [Deprecated]\n\n\nGeneral-Purpose Machine Learning\n\nbirdland - A recommendation library in Go.\neaopt - An evolutionary optimization library.\nleaves - A pure Go implementation of the prediction part of GBRTs, including XGBoost and LightGBM.\ngobrain - Neural Networks written in Go.\ngo-mxnet-predictor - Go binding for MXNet c_predict_api to do inference with a pre-trained model.\ngo-ml-transpiler - An open source Go transpiler for machine learning models.\ngolearn - Machine learning for Go.\ngoml - Machine learning library written in pure Go.\ngorgonia - Deep learning in Go.\ngoro - A high-level machine learning library in the vein of Keras.\ngorse - An offline recommender system backend based on collaborative filtering written in Go.\ntherfoo - An embedded deep learning library for Go.\nneat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT). [Deprecated]\ngo-pr - Pattern recognition package in Go lang. [Deprecated]\ngo-ml - Linear \/ Logistic regression, Neural Networks, Collaborative Filtering and Gaussian Multivariate Distribution. [Deprecated]\nGoNN - GoNN is an implementation of Neural Network in Go Language, which includes BPNN, RBF, PCN. [Deprecated]\nbayesian - Naive Bayesian Classification for Golang. [Deprecated]\ngo-galib - Genetic Algorithms library written in Go \/ Golang. [Deprecated]\nCloudforest - Ensembles of decision trees in Go\/Golang. [Deprecated]\ngo-dnn - Deep Neural Networks for Golang (powered by MXNet)\n\n\nSpatial analysis and geometry\n\ngo-geom - Go library to handle geometries.\ngogeo - Spherical geometry in Go.\n\n\nData Analysis \/ Data Visualization\n\ndataframe-go - Dataframes for machine-learning and statistics (similar to pandas).\ngota - Dataframes.\ngonum\/mat - A linear algebra package for Go.\ngonum\/optimize - Implementations of optimization algorithms.\ngonum\/plot - A plotting library.\ngonum\/stat - A statistics library.\nSVGo - The Go Language library for SVG generation.\nglot - Glot is a plotting library for Golang built on top of gnuplot.\nglobe - Globe wireframe visualization.\ngonum\/graph - General-purpose graph library.\ngo-graph - Graph library for Go\/Golang language. [Deprecated]\nRF - Random forests implementation in Go. [Deprecated]\n\n\nComputer vision\n\nGoCV - Package for computer vision using OpenCV 4 and beyond.\n\n\nReinforcement learning\n\ngold - A reinforcement learning library.\n\n\nHaskell\n\nGeneral-Purpose Machine Learning\n\nhaskell-ml - Haskell implementations of various ML algorithms. [Deprecated]\nHLearn - a suite of libraries for interpreting machine learning models according to their algebraic structure. [Deprecated]\nhnn - Haskell Neural Network library.\nhopfield-networks - Hopfield Networks for unsupervised learning in Haskell. [Deprecated]\nDNNGraph - A DSL for deep neural networks. [Deprecated]\nLambdaNet - Configurable Neural Networks in Haskell. [Deprecated]\n\n\nJava\n\nNatural Language Processing\n\nCortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain.\nIRIS - Cortical.io's FREE NLP, Retina API Analysis Tool (written in JavaFX!) - See the Tutorial Video.\nCoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words.\nStanford Parser - A natural language parser is a program that works out the grammatical structure of sentences.\nStanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger).\nStanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.\nStanford Word Segmenter - Tokenization of raw text is a standard pre-processing step for many NLP tasks.\nTregex, Tsurgeon and Semgrex - Tregex is a utility for matching patterns in trees, based on tree relationships and regular expression matches on nodes (the name is short for \"tree regular expressions\").\nStanford Phrasal: A Phrase-Based Translation System\nStanford English Tokenizer - Stanford Phrasal is a state-of-the-art statistical phrase-based machine translation system, written in Java.\nStanford Tokens Regex - A tokenizer divides text into a sequence of tokens, which roughly correspond to \"words\".\nStanford Temporal Tagger - SUTime is a library for recognizing and normalizing time expressions.\nStanford SPIED - Learning entities from unlabeled text starting with seed sets using patterns in an iterative fashion.\nTwitter Text Java - A Java implementation of Twitter's text processing library.\nMALLET - A Java-based package for statistical natural language processing, document classification, clustering, topic modeling, information extraction, and other machine learning applications to text.\nOpenNLP - a machine learning based toolkit for the processing of natural language text.\nLingPipe - A tool kit for processing text using computational linguistics.\nClearTK - ClearTK provides a framework for developing statistical natural language processing (NLP) components in Java and is built on top of Apache UIMA. [Deprecated]\nApache cTAKES - Apache Clinical Text Analysis and Knowledge Extraction System (cTAKES) is an open-source natural language processing system for information extraction from electronic medical record clinical free-text.\nNLP4J - The NLP4J project provides software and resources for natural language processing. The project started at the Center for Computational Language and EducAtion Research, and is currently developed by the Center for Language and Information Research at Emory University. [Deprecated]\nCogcompNLP - This project collects a number of core libraries for Natural Language Processing (NLP) developed in the University of Illinois' Cognitive Computation Group, for example illinois-core-utilities which provides a set of NLP-friendly data structures and a number of NLP-related utilities that support writing NLP applications, running experiments, etc, illinois-edison a library for feature extraction from illinois-core-utilities data structures and many other packages.\n\n\nGeneral-Purpose Machine Learning\n\naerosolve - A machine learning library by Airbnb designed from the ground up to be human friendly.\nAMIDST Toolbox - A Java Toolbox for Scalable Probabilistic Machine Learning.\nDatumbox - Machine Learning framework for rapid development of Machine Learning and Statistical applications.\nELKI - Java toolkit for data mining. (unsupervised: clustering, outlier detection etc.)\nEncog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.\nFlinkML in Apache Flink - Distributed machine learning library in Flink.\nH2O - ML engine that supports distributed learning on Hadoop, Spark or your laptop via APIs in R, Python, Scala, REST\/JSON.\nhtm.java - General Machine Learning library using Numenta\u2019s Cortical Learning Algorithm.\nliblinear-java - Java version of liblinear.\nMahout - Distributed machine learning.\nMeka - An open source implementation of methods for multi-label classification and evaluation (extension to Weka).\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nNeuroph - Neuroph is lightweight Java neural network framework\nORYX - Lambda Architecture Framework using Apache Spark and Apache Kafka with a specialization for real-time large-scale machine learning.\nSamoa SAMOA is a framework that includes distributed machine learning for data streams with an interface to plug-in different stream processing platforms.\nRankLib - RankLib is a library of learning to rank algorithms. [Deprecated]\nrapaio - statistics, data mining and machine learning toolbox in Java.\nRapidMiner - RapidMiner integration into Java code.\nStanford Classifier - A classifier is a machine learning tool that will take data items and place them into one of k classes.\nSmile - Statistical Machine Intelligence & Learning Engine.\nSystemML - flexible, scalable machine learning (ML) language.\nWeka - Weka is a collection of machine learning algorithms for data mining tasks.\nLBJava - Learning Based Java is a modeling language for the rapid development of software systems, offers a convenient, declarative syntax for classifier and constraint definition directly in terms of the objects in the programmer's application.\n\n\nSpeech Recognition\n\nCMU Sphinx - Open Source Toolkit For Speech Recognition purely based on Java speech recognition library.\n\n\nData Analysis \/ Data Visualization\n\nFlink - Open source platform for distributed stream and batch data processing.\nHadoop - Hadoop\/HDFS.\nOnyx - Distributed, masterless, high performance, fault tolerant data processing. Written entirely in Clojure.\nSpark - Spark is a fast and general engine for large-scale data processing.\nStorm - Storm is a distributed realtime computation system.\nImpala - Real-time Query for Hadoop.\nDataMelt - Mathematics software for numeric computation, statistics, symbolic calculations, data analysis and data visualization.\nDr. Michael Thomas Flanagan's Java Scientific Library [Deprecated]\n\n\nDeep Learning\n\nDeeplearning4j - Scalable deep learning for industry with parallel GPUs.\nKeras Beginner Tutorial - Friendly guide on using Keras to implement a simple Neural Network in Python\n\n\nJavascript\n\nNatural Language Processing\n\nTwitter-text - A JavaScript implementation of Twitter's text processing library.\nnatural - General natural language facilities for node.\nKnwl.js - A Natural Language Processor in JS.\nRetext - Extensible system for analyzing and manipulating natural language.\nNLP Compromise - Natural Language processing in the browser.\nnlp.js - An NLP library built in node over Natural, with entity extraction, sentiment analysis, automatic language identify, and so more\n\n\nData Analysis \/ Data Visualization\n\nD3.js\nHigh Charts\nNVD3.js\ndc.js\nchartjs\ndimple\namCharts\nD3xter - Straight forward plotting built on D3. [Deprecated]\nstatkit - Statistics kit for JavaScript. [Deprecated]\ndatakit - A lightweight framework for data analysis in JavaScript\nscience.js - Scientific and statistical computing in JavaScript. [Deprecated]\nZ3d - Easily make interactive 3d plots built on Three.js [Deprecated]\nSigma.js - JavaScript library dedicated to graph drawing.\nC3.js - customizable library based on D3.js for easy chart drawing.\nDatamaps - Customizable SVG map\/geo visualizations using D3.js. [Deprecated]\nZingChart - library written on Vanilla JS for big data visualization.\ncheminfo - Platform for data visualization and analysis, using the visualizer project.\nLearn JS Data\nAnyChart\nFusionCharts\nNivo - built on top of the awesome d3 and Reactjs libraries\n\n\nGeneral-Purpose Machine Learning\n\nAuto ML - Automated machine learning, data formatting, ensembling, and hyperparameter optimization for competitions and exploration- just give it a .csv file!\nConvnet.js - ConvNetJS is a Javascript library for training Deep Learning models[DEEP LEARNING] [Deprecated]\nClusterfck - Agglomerative hierarchical clustering implemented in Javascript for Node.js and the browser. [Deprecated]\nClustering.js - Clustering algorithms implemented in Javascript for Node.js and the browser. [Deprecated]\nDecision Trees - NodeJS Implementation of Decision Tree using ID3 Algorithm. [Deprecated]\nDN2A - Digital Neural Networks Architecture. [Deprecated]\nfigue - K-means, fuzzy c-means and agglomerative clustering.\nGaussian Mixture Model - Unsupervised machine learning with multivariate Gaussian mixture model.\nNode-fann - FANN (Fast Artificial Neural Network Library) bindings for Node.js [Deprecated]\nKeras.js - Run Keras models in the browser, with GPU support provided by WebGL 2.\nKmeans.js - Simple Javascript implementation of the k-means algorithm, for node.js and the browser. [Deprecated]\nLDA.js - LDA topic modeling for Node.js\nLearning.js - Javascript implementation of logistic regression\/c4.5 decision tree [Deprecated]\nmachinelearn.js - Machine Learning library for the web, Node.js and developers\nmil-tokyo - List of several machine learning libraries.\nNode-SVM - Support Vector Machine for Node.js\nBrain - Neural networks in JavaScript [Deprecated]\nBrain.js - Neural networks in JavaScript - continued community fork of Brain.\nBayesian-Bandit - Bayesian bandit implementation for Node and the browser. [Deprecated]\nSynaptic - Architecture-free neural network library for Node.js and the browser.\nkNear - JavaScript implementation of the k nearest neighbors algorithm for supervised learning.\nNeuralN - C++ Neural Network library for Node.js. It has advantage on large dataset and multi-threaded training. [Deprecated]\nkalman - Kalman filter for Javascript. [Deprecated]\nshaman - Node.js library with support for both simple and multiple linear regression. [Deprecated]\nml.js - Machine learning and numerical analysis tools for Node.js and the Browser!\nml5 - Friendly machine learning for the web!\nPavlov.js - Reinforcement learning using Markov Decision Processes.\nMXNet - Lightweight, Portable, Flexible Distributed\/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nTensorFlow.js - A WebGL accelerated, browser based JavaScript library for training and deploying ML models.\nJSMLT - Machine learning toolkit with classification and clustering for Node.js; supports visualization (see visualml.io).\nxgboost-node - Run XGBoost model and make predictions in Node.js.\nNetron - Visualizer for machine learning models.\nWebDNN - Fast Deep Neural Network Javascript Framework. WebDNN uses next generation JavaScript API, WebGPU for GPU execution, and WebAssembly for CPU execution.\n\n\nMisc\n\nstdlib - A standard library for JavaScript and Node.js, with an emphasis on numeric computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.\nsylvester - Vector and Matrix math for JavaScript. [Deprecated]\nsimple-statistics - A JavaScript implementation of descriptive, regression, and inference statistics. Implemented in literate JavaScript with no dependencies, designed to work in all modern browsers (including IE) as well as in Node.js.\nregression-js - A javascript library containing a collection of least squares fitting methods for finding a trend in a set of data.\nLyric - Linear Regression library. [Deprecated]\nGreatCircle - Library for calculating great circle distance.\nMLPleaseHelp - MLPleaseHelp is a simple ML resource search engine. You can use this search engine right now at https:\/\/jgreenemi.github.io\/MLPleaseHelp\/, provided via Github Pages.\nPipcook - A JavaScript application framework for machine learning and its engineering.\n\n\nDemos and Scripts\n\nThe Bot - Example of how the neural network learns to predict the angle between two points created with Synaptic.\nHalf Beer - Beer glass classifier created with Synaptic.\nNSFWJS - Indecent content checker with TensorFlow.js\nRock Paper Scissors - Rock Paper Scissors trained in the browser with TensorFlow.js\n\n\nJulia\n\nGeneral-Purpose Machine Learning\n\nMachineLearning - Julia Machine Learning library. [Deprecated]\nMLBase - A set of functions to support the development of machine learning algorithms.\nPGM - A Julia framework for probabilistic graphical models.\nDA - Julia package for Regularized Discriminant Analysis.\nRegression - Algorithms for regression analysis (e.g. linear regression and logistic regression). [Deprecated]\nLocal Regression - Local regression, so smooooth!\nNaive Bayes - Simple Naive Bayes implementation in Julia. [Deprecated]\nMixed Models - A Julia package for fitting (statistical) mixed-effects models.\nSimple MCMC - basic mcmc sampler implemented in Julia. [Deprecated]\nDistances - Julia module for Distance evaluation.\nDecision Tree - Decision Tree Classifier and Regressor.\nNeural - A neural network in Julia.\nMCMC - MCMC tools for Julia. [Deprecated]\nMamba - Markov chain Monte Carlo (MCMC) for Bayesian analysis in Julia.\nGLM - Generalized linear models in Julia.\nGaussian Processes - Julia package for Gaussian processes.\nOnline Learning [Deprecated]\nGLMNet - Julia wrapper for fitting Lasso\/ElasticNet GLM models using glmnet.\nClustering - Basic functions for clustering data: k-means, dp-means, etc.\nSVM - SVM for Julia. [Deprecated]\nKernel Density - Kernel density estimators for julia.\nMultivariateStats - Methods for dimensionality reduction.\nNMF - A Julia package for non-negative matrix factorization.\nANN - Julia artificial neural networks. [Deprecated]\nMocha - Deep Learning framework for Julia inspired by Caffe. [Deprecated]\nXGBoost - eXtreme Gradient Boosting Package in Julia.\nManifoldLearning - A Julia package for manifold learning and nonlinear dimensionality reduction.\nMXNet - Lightweight, Portable, Flexible Distributed\/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nMerlin - Flexible Deep Learning Framework in Julia.\nROCAnalysis - Receiver Operating Characteristics and functions for evaluation probabilistic binary classifiers.\nGaussianMixtures - Large scale Gaussian Mixture Models.\nScikitLearn - Julia implementation of the scikit-learn API.\nKnet - Ko\u00e7 University Deep Learning Framework.\nFlux - Relax! Flux is the ML library that doesn't make you tensor\nMLJ - A Julia machine learning framework\n\n\nNatural Language Processing\n\nTopic Models - TopicModels for Julia. [Deprecated]\nText Analysis - Julia package for text analysis.\nWord Tokenizers - Tokenizers for Natural Language Processing in Julia\nCorpus Loaders - A julia package providing a variety of loaders for various NLP corpora.\nEmbeddings - Functions and data dependencies for loading various word embeddings\nLanguages - Julia package for working with various human languages\nWordNet - A Julia package for Princeton's WordNet\n\n\nData Analysis \/ Data Visualization\n\nGraph Layout - Graph layout algorithms in pure Julia.\nLightGraphs - Graph modeling and analysis.\nData Frames Meta - Metaprogramming tools for DataFrames.\nJulia Data - library for working with tabular data in Julia. [Deprecated]\nData Read - Read files from Stata, SAS, and SPSS.\nHypothesis Tests - Hypothesis tests for Julia.\nGadfly - Crafty statistical graphics for Julia.\nStats - Statistical tests for Julia.\nRDataSets - Julia package for loading many of the data sets available in R.\nDataFrames - library for working with tabular data in Julia.\nDistributions - A Julia package for probability distributions and associated functions.\nData Arrays - Data structures that allow missing values. [Deprecated]\nTime Series - Time series toolkit for Julia.\nSampling - Basic sampling algorithms for Julia.\n\n\nMisc Stuff \/ Presentations\n\nDSP - Digital Signal Processing (filtering, periodograms, spectrograms, window functions).\nJuliaCon Presentations - Presentations for JuliaCon.\nSignalProcessing - Signal Processing tools for Julia.\nImages - An image library for Julia.\nDataDeps - Reproducible data setup for reproducible science.\n\n\nLua\n\nGeneral-Purpose Machine Learning\n\nTorch7\n\ncephes - Cephes mathematical functions library, wrapped for Torch. Provides and wraps the 180+ special mathematical functions from the Cephes mathematical library, developed by Stephen L. Moshier. It is used, among many other places, at the heart of SciPy. [Deprecated]\nautograd - Autograd automatically differentiates native Torch code. Inspired by the original Python version.\ngraph - Graph package for Torch. [Deprecated]\nrandomkit - Numpy's randomkit, wrapped for Torch. [Deprecated]\nsignal - A signal processing toolbox for Torch-7. FFT, DCT, Hilbert, cepstrums, stft.\nnn - Neural Network package for Torch.\ntorchnet - framework for torch which provides a set of abstractions aiming at encouraging code re-use as well as encouraging modular programming.\nnngraph - This package provides graphical computation for nn library in Torch7.\nnnx - A completely unstable and experimental package that extends Torch's builtin nn library.\nrnn - A Recurrent Neural Network library that extends Torch's nn. RNNs, LSTMs, GRUs, BRNNs, BLSTMs, etc.\ndpnn - Many useful features that aren't part of the main nn package.\ndp - A deep learning library designed for streamlining research and development using the Torch7 distribution. It emphasizes flexibility through the elegant use of object-oriented design patterns. [Deprecated]\noptim - An optimization library for Torch. SGD, Adagrad, Conjugate-Gradient, LBFGS, RProp and more.\nunsup - A package for unsupervised learning in Torch. Provides modules that are compatible with nn (LinearPsd, ConvPsd, AutoEncoder, ...), and self-contained algorithms (k-means, PCA). [Deprecated]\nmanifold - A package to manipulate manifolds.\nsvm - Torch-SVM library. [Deprecated]\nlbfgs - FFI Wrapper for liblbfgs. [Deprecated]\nvowpalwabbit - An old vowpalwabbit interface to torch. [Deprecated]\nOpenGM - OpenGM is a C++ library for graphical modeling, and inference. The Lua bindings provide a simple way of describing graphs, from Lua, and then optimizing them with OpenGM. [Deprecated]\nspaghetti - Spaghetti (sparse linear) module for torch7 by @MichaelMathieu [Deprecated]\nLuaSHKit - A lua wrapper around the Locality sensitive hashing library SHKit [Deprecated]\nkernel smoothing - KNN, kernel-weighted average, local linear regression smoothers. [Deprecated]\ncutorch - Torch CUDA Implementation.\ncunn - Torch CUDA Neural Network Implementation.\nimgraph - An image\/graph library for Torch. This package provides routines to construct graphs on images, segment them, build trees out of them, and convert them back to images. [Deprecated]\nvideograph - A video\/graph library for Torch. This package provides routines to construct graphs on videos, segment them, build trees out of them, and convert them back to videos. [Deprecated]\nsaliency - code and tools around integral images. A library for finding interest points based on fast integral histograms. [Deprecated]\nstitch - allows us to use hugin to stitch images and apply same stitching to a video sequence. [Deprecated]\nsfm - A bundle adjustment\/structure from motion package. [Deprecated]\nfex - A package for feature extraction in Torch. Provides SIFT and dSIFT modules. [Deprecated]\nOverFeat - A state-of-the-art generic dense feature extractor. [Deprecated]\nwav2letter - a simple and efficient end-to-end Automatic Speech Recognition (ASR) system from Facebook AI Research.\n\n\nNumeric Lua\nLunatic Python\nSciLua\nLua - Numerical Algorithms [Deprecated]\nLunum [Deprecated]\n\n\nDemos and Scripts\n\nCore torch7 demos repository.\n\nlinear-regression, logistic-regression\nface detector (training and detection as separate demos)\nmst-based-segmenter\ntrain-a-digit-classifier\ntrain-autoencoder\noptical flow demo\ntrain-on-housenumbers\ntrain-on-cifar\ntracking with deep nets\nkinect demo\nfilter-bank visualization\nsaliency-networks\n\n\nTraining a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)\nMusic Tagging - Music Tagging scripts for torch7.\ntorch-datasets - Scripts to load several popular datasets including:\n\nBSR 500\nCIFAR-10\nCOIL\nStreet View House Numbers\nMNIST\nNORB\n\n\nAtari2600 - Scripts to generate a dataset with static frames from the Arcade Learning Environment.\n\n\nMatlab\n\nComputer Vision\n\nContourlets - MATLAB source code that implements the contourlet transform and its utility functions.\nShearlets - MATLAB code for shearlet transform.\nCurvelets - The Curvelet transform is a higher dimensional generalization of the Wavelet transform designed to represent images at different scales and different angles.\nBandlets - MATLAB code for bandlet transform.\nmexopencv - Collection and a development kit of MATLAB mex functions for OpenCV library.\n\n\nNatural Language Processing\n\nNLP - A NLP library for Matlab.\n\n\nGeneral-Purpose Machine Learning\n\nTraining a deep autoencoder or a classifier\non MNIST digits - Training a deep autoencoder or a classifier\non MNIST digits[DEEP LEARNING].\nConvolutional-Recursive Deep Learning for 3D Object Classification - Convolutional-Recursive Deep Learning for 3D Object Classification[DEEP LEARNING].\nSpider - The spider is intended to be a complete object orientated environment for machine learning in Matlab.\nLibSVM - A Library for Support Vector Machines.\nThunderSVM - An Open-Source SVM Library on GPUs and CPUs\nLibLinear - A Library for Large Linear Classification.\nMachine Learning Module - Class on machine w\/ PDF, lectures, code\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.\nPattern Recognition Toolbox - A complete object-oriented environment for machine learning in Matlab.\nPattern Recognition and Machine Learning - This package contains the matlab implementation of the algorithms described in the book Pattern Recognition and Machine Learning by C. Bishop.\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly with MATLAB.\nMXNet - Lightweight, Portable, Flexible Distributed\/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nMachine Learning in MatLab\/Octave - examples of popular machine learning algorithms (neural networks, linear\/logistic regressions, K-Means, etc.) with code examples and mathematics behind them being explained.\n\n\nData Analysis \/ Data Visualization\n\nParaMonte - A general-purpose MATLAB library for Bayesian data analysis and visualization via serial\/parallel Monte Carlo and MCMC simulations. Documentation can be found here.\nmatlab_bgl - MatlabBGL is a Matlab package for working with graphs.\ngaimc - Efficient pure-Matlab implementations of graph algorithms to complement MatlabBGL's mex functions.\n\n\n.NET\n\nComputer Vision\n\nOpenCVDotNet - A wrapper for the OpenCV project to be used with .NET applications.\nEmgu CV - Cross platform wrapper of OpenCV which can be compiled in Mono to be run on Windows, Linus, Mac OS X, iOS, and Android.\nAForge.NET - Open source C# framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence. Development has now shifted to GitHub.\nAccord.NET - Together with AForge.NET, this library can provide image processing and computer vision algorithms to Windows, Windows RT and Windows Phone. Some components are also available for Java and Android.\n\n\nNatural Language Processing\n\nStanford.NLP for .NET - A full port of Stanford NLP packages to .NET and also available precompiled as a NuGet package.\n\n\nGeneral-Purpose Machine Learning\n\nAccord-Framework -The Accord.NET Framework is a complete framework for building machine learning, computer vision, computer audition, signal processing and statistical applications.\nAccord.MachineLearning - Support Vector Machines, Decision Trees, Naive Bayesian models, K-means, Gaussian Mixture models and general algorithms such as Ransac, Cross-validation and Grid-Search for machine-learning applications. This package is part of the Accord.NET Framework.\nDiffSharp - An automatic differentiation (AD) library providing exact and efficient derivatives (gradients, Hessians, Jacobians, directional derivatives, and matrix-free Hessian- and Jacobian-vector products) for machine learning and optimization applications. Operations can be nested to any level, meaning that you can compute exact higher-order derivatives and differentiate functions that are internally making use of differentiation, for applications such as hyperparameter optimization.\nEncog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.\nGeneticSharp - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.\nInfer.NET - Infer.NET is a framework for running Bayesian inference in graphical models. One can use Infer.NET to solve many different kinds of machine learning problems, from standard problems like classification, recommendation or clustering through to customized solutions to domain-specific problems. Infer.NET has been used in a wide variety of domains including information retrieval, bioinformatics, epidemiology, vision, and many others.\nML.NET - ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers. ML.NET was originally developed in Microsoft Research and evolved into a significant framework over the last decade and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel and more.\nNeural Network Designer - DBMS management system and designer for neural networks. The designer application is developed using WPF, and is a user interface which allows you to design your neural network, query the network, create and configure chat bots that are capable of asking questions and learning from your feedback. The chat bots can even scrape the internet for information to return in their output as well as to use for learning.\nSynapses - Neural network library in F#.\nVulpes - Deep belief and deep learning implementation written in F# and leverages CUDA GPU execution with Alea.cuBase.\nMxNet.Sharp - .NET Standard bindings for Apache MxNet with Imperative, Symbolic and Gluon Interface for developing, training and deploying Machine Learning models in C#. https:\/\/mxnet.tech-quantum.com\/\n\n\nData Analysis \/ Data Visualization\n\nnuml - numl is a machine learning library intended to ease the use of using standard modeling techniques for both prediction and clustering.\nMath.NET Numerics - Numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and everyday use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone\/SL 8, WindowsPhone 8.1 and Windows 8 with PCL Portable Profiles 47 and 344; Android\/iOS with Xamarin.\nSho - Sho is an interactive environment for data analysis and scientific computing that lets you seamlessly connect scripts (in IronPython) with compiled code (in .NET) to enable fast and flexible prototyping. The environment includes powerful and efficient libraries for linear algebra as well as data visualization that can be used from any .NET language, as well as a feature-rich interactive shell for rapid development.\n\n\nObjective C\n\nGeneral-Purpose Machine Learning\n\nYCML - A Machine Learning framework for Objective-C and Swift (OS X \/ iOS).\nMLPNeuralNet - Fast multilayer perceptron neural network library for iOS and Mac OS X. MLPNeuralNet predicts new examples by trained neural networks. It is built on top of the Apple's Accelerate Framework, using vectorized operations and hardware acceleration if available. [Deprecated]\nMAChineLearning - An Objective-C multilayer perceptron library, with full support for training through backpropagation. Implemented using vDSP and vecLib, it's 20 times faster than its Java equivalent. Includes sample code for use from Swift.\nBPN-NeuralNetwork - It implemented 3 layers of neural networks ( Input Layer, Hidden Layer and Output Layer ) and it was named Back Propagation Neural Networks (BPN). This network can be used in products recommendation, user behavior analysis, data mining and data analysis. [Deprecated]\nMulti-Perceptron-NeuralNetwork - it implemented multi-perceptrons neural network (\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) based on Back Propagation Neural Networks (BPN) and designed unlimited-hidden-layers.\nKRHebbian-Algorithm - It is a non-supervisor and self-learning algorithm (adjust the weights) in the neural network of Machine Learning. [Deprecated]\nKRKmeans-Algorithm - It implemented K-Means  clustering and classification algorithm. It could be used in data mining and image compression. [Deprecated]\nKRFuzzyCMeans-Algorithm - It implemented Fuzzy C-Means (FCM) the fuzzy clustering \/ classification algorithm on Machine Learning. It could be used in data mining and image compression. [Deprecated]\n\n\nOCaml\n\nGeneral-Purpose Machine Learning\n\nOml - A general statistics and machine learning library.\nGPR - Efficient Gaussian Process Regression in OCaml.\nLibra-Tk - Algorithms for learning and inference with discrete probabilistic models.\nTensorFlow - OCaml bindings for TensorFlow.\n\n\nPerl\n\nData Analysis \/ Data Visualization\n\nPerl Data Language, a pluggable architecture for data and image processing, which can\nbe used for machine learning.\n\n\nGeneral-Purpose Machine Learning\n\nMXnet for Deep Learning, in Perl,\nalso released in CPAN.\nPerl Data Language,\nusing AWS machine learning platform from Perl.\nAlgorithm::SVMLight,\nimplementation of Support Vector Machines with SVMLight under it. [Deprecated]\nSeveral machine learning and artificial intelligence models are\nincluded in the AI\nnamespace. For instance, you can\nfind Na\u00efve Bayes.\n\n\nPerl 6\n\nSupport Vector Machines\nNa\u00efve Bayes\n\nData Analysis \/ Data Visualization\n\nPerl Data Language,\na pluggable architecture for data and image processing, which can\nbe\nused for machine learning.\n\nGeneral-Purpose Machine Learning\n\nPHP\n\nNatural Language Processing\n\njieba-php - Chinese Words Segmentation Utilities.\n\n\nGeneral-Purpose Machine Learning\n\nPHP-ML - Machine Learning library for PHP. Algorithms, Cross Validation, Neural Network, Preprocessing, Feature Extraction and much more in one library.\nPredictionBuilder - A library for machine learning that builds predictions using a linear regression.\nRubix ML - A high-level machine learning (ML) library that lets you build programs that learn from data using the PHP language.\n19 Questions - A machine learning \/ bayesian inference assigning attributes to objects.\n\n\nPython\n\nComputer Vision\n\nScikit-Image - A collection of algorithms for image processing in Python.\nScikit-Opt - Swarm Intelligence in Python (Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Algorithm, Immune Algorithm,Artificial Fish Swarm Algorithm in Python)\nSimpleCV - An open source computer vision framework that gives access to several high-powered computer vision libraries, such as OpenCV. Written on Python and runs on Mac, Windows, and Ubuntu Linux.\nVigranumpy - Python bindings for the VIGRA C++ computer vision library.\nOpenFace - Free and open source face recognition with deep neural networks.\nPCV - Open source Python module for computer vision. [Deprecated]\nface_recognition - Face recognition library that recognizes and manipulates faces from Python or from the command line.\ndockerface - Easy to install and use deep learning Faster R-CNN face detection for images and video in a docker container.\nDetectron - FAIR's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework. [Deprecated]\ndetectron2 - FAIR's next-generation research platform for object detection and segmentation. It is a ground-up rewrite of the previous version, Detectron, and is powered by the PyTorch deep learning framework.\nalbumentations - \u0410 fast and framework agnostic image augmentation library that implements a diverse set of augmentation techniques. Supports classification, segmentation, detection out of the box. Was used to win a number of Deep Learning competitions at Kaggle, Topcoder and those that were a part of the CVPR workshops.\npytessarct - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and \"read\" the text embedded in images. Python-tesseract is a wrapper for Google's Tesseract-OCR Engine.\nimutils - A library containing Convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.\nPyTorchCV - A PyTorch-Based Framework for Deep Learning in Computer Vision.\nSelf-supervised learning\nneural-style-pt - A PyTorch implementation of Justin Johnson's neural-style (neural style transfer).\nDetecto - Train and run a computer vision model with 5-10 lines of code.\nneural-dream - A PyTorch implementation of DeepDream.\nOpenpose - A real-time multi-person keypoint detection library for body, face, hands, and foot estimation\nDeep High-Resolution-Net - A PyTorch implementation of CVPR2019 paper \"Deep High-Resolution Representation Learning for Human Pose Estimation\"\ndream-creator - A PyTorch implementation of DeepDream. Allows individuals to quickly and easily train their own custom GoogleNet models with custom datasets for DeepDream.\nLucent - Tensorflow and OpenAI Clarity's Lucid adapted for PyTorch.\nlightly - Lightly is a computer vision framework for self-supervised learning.\n\n\nNatural Language Processing\n\npkuseg-python - A better version of Jieba, developed by Peking University.\nNLTK - A leading platform for building Python programs to work with human language data.\nPattern - A web mining module for the Python programming language. It has tools for natural language processing, machine learning, among others.\nQuepy - A python framework to transform natural language questions to queries in a database query language.\nTextBlob - Providing a consistent API for diving into common natural language processing (NLP) tasks. Stands on the giant shoulders of NLTK and Pattern, and plays nicely with both.\nYAlign - A sentence aligner, a friendly tool for extracting parallel sentences from comparable corpora. [Deprecated]\njieba - Chinese Words Segmentation Utilities.\nSnowNLP - A library for processing Chinese text.\nspammy - A library for email Spam filtering built on top of nltk\nloso - Another Chinese segmentation library. [Deprecated]\ngenius - A Chinese segment based on Conditional Random Field.\nKoNLPy - A Python package for Korean natural language processing.\nnut - Natural language Understanding Toolkit. [Deprecated]\nRosetta - Text processing tools and wrappers (e.g. Vowpal Wabbit)\nBLLIP Parser - Python bindings for the BLLIP Natural Language Parser (also known as the Charniak-Johnson parser). [Deprecated]\nPyNLPl - Python Natural Language Processing Library. General purpose NLP library for Python. Also contains some specific modules for parsing common NLP formats, most notably for FoLiA, but also ARPA language models, Moses phrasetables, GIZA++ alignments.\nPySS3 - Python package that implements a novel white-box machine learning model for text classification, called SS3. Since SS3 has the ability to visually explain its rationale, this package also comes with easy-to-use interactive visualizations tools (online demos).\npython-ucto - Python binding to ucto (a unicode-aware rule-based tokenizer for various languages).\npython-frog - Python binding to Frog, an NLP suite for Dutch. (pos tagging, lemmatisation, dependency parsing, NER)\npython-zpar - Python bindings for ZPar, a statistical part-of-speech-tagger, constituency parser, and dependency parser for English.\ncolibri-core - Python binding to C++ library for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.\nspaCy - Industrial strength NLP with Python and Cython.\nPyStanfordDependencies - Python interface for converting Penn Treebank trees to Stanford Dependencies.\nDistance - Levenshtein and Hamming distance computation. [Deprecated]\nFuzzy Wuzzy - Fuzzy String Matching in Python.\njellyfish - a python library for doing approximate and phonetic matching of strings.\neditdistance - fast implementation of edit distance.\ntextacy - higher-level NLP built on Spacy.\nstanford-corenlp-python - Python wrapper for Stanford CoreNLP [Deprecated]\nCLTK - The Classical Language Toolkit.\nrasa_nlu - turn natural language into structured data.\nyase - Transcode sentence (or other sequence) to list of word vector .\nPolyglot - Multilingual text (NLP) processing toolkit.\nDrQA - Reading Wikipedia to answer open-domain questions.\nDedupe - A python library for accurate and scalable fuzzy matching, record deduplication and entity-resolution.\nSnips NLU - Natural Language Understanding library for intent classification and entity extraction\nNeuroNER - Named-entity recognition using neural networks providing state-of-the-art-results\nDeepPavlov - conversational AI library with many pre-trained Russian NLP models.\nBigARTM - topic modelling platform.\n\n\nGeneral-Purpose Machine Learning\n\nigel -> A delightful machine learning tool that allows you to train\/fit, test and use models without writing code\nML Model building -> A Repository Containing Classification, Clustering, Regression, Recommender Notebooks with illustration to make them.\nML\/DL project template\nPyTorch Geometric Temporal -> A temporal extension of PyTorch Geometric for dynamic graph representation learning.\nLittle Ball of Fur -> A graph sampling extension library for NetworkX with a Scikit-Learn like API.\nKarate Club -> An unsupervised machine learning extension library for NetworkX with a Scikit-Learn like API.\nAuto_ViML -> Automatically Build Variant Interpretable ML models fast! Auto_ViML is pronounced \"auto vimal\", is a comprehensive and scalable Python AutoML toolkit with imbalanced handling, ensembling, stacking and built-in feature selection. Featured in Medium article.\nPyOD -> Python Outlier Detection, comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data. Featured for Advanced models, including Neural Networks\/Deep Learning and Outlier Ensembles.\nsteppy -> Lightweight, Python library for fast and reproducible machine learning experimentation. Introduces a very simple interface that enables clean machine learning pipeline design.\nsteppy-toolkit -> Curated collection of the neural networks, transformers and models that make your machine learning work faster and more effective.\nCNTK - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. Documentation can be found here.\nCouler - Unified interface for constructing and managing machine learning workflows on different workflow engines, such as Argo Workflows, Tekton Pipelines, and Apache Airflow.\nauto_ml - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for NLP, XGBoost, CatBoost, LightGBM, and soon, deep learning.\nmachine learning - automated build consisting of a web-interface, and set of programmatic-interface API, for support vector machines. Corresponding dataset(s) are stored into a SQL database, then generated model(s) used for prediction(s), are stored into a NoSQL datastore.\nXGBoost - Python bindings for eXtreme Gradient Boosting (Tree) Library.\nApache SINGA - An Apache Incubating project for developing an open source machine learning library.\nBayesian Methods for Hackers - Book\/iPython notebooks on Probabilistic Programming in Python.\nFeatureforge A set of tools for creating and testing machine learning features, with a scikit-learn compatible API.\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nscikit-learn - A Python module for machine learning built on top of SciPy.\nmetric-learn - A Python module for metric learning.\nSimpleAI Python implementation of many of the artificial intelligence algorithms described in the book \"Artificial Intelligence, a Modern Approach\". It focuses on providing an easy to use, well documented and tested library.\nastroML - Machine Learning and Data Mining for Astronomy.\ngraphlab-create - A library with various machine learning models (regression, clustering, recommender systems, graph analytics, etc.) implemented on top of a disk-backed DataFrame.\nBigML - A library that contacts external servers.\npattern - Web mining module for Python.\nNuPIC - Numenta Platform for Intelligent Computing.\nPylearn2 - A Machine Learning library based on Theano. [Deprecated]\nkeras - High-level neural networks frontend for TensorFlow, CNTK and Theano.\nLasagne - Lightweight library to build and train neural networks in Theano.\nhebel - GPU-Accelerated Deep Learning Library in Python. [Deprecated]\nChainer - Flexible neural network framework.\nprophet - Fast and automated time series forecasting framework by Facebook.\ngensim - Topic Modelling for Humans.\ntopik - Topic modelling toolkit. [Deprecated]\nPyBrain - Another Python Machine Learning Library.\nBrainstorm - Fast, flexible and fun neural networks. This is the successor of PyBrain.\nSurprise - A scikit for building and analyzing recommender systems.\nimplicit - Fast Python Collaborative Filtering for Implicit Datasets.\nLightFM -  A Python implementation of a number of popular recommendation algorithms for both implicit and explicit feedback.\nCrab - A flexible, fast recommender engine. [Deprecated]\npython-recsys - A Python library for implementing a Recommender System.\nthinking bayes - Book on Bayesian Analysis.\nImage-to-Image Translation with Conditional Adversarial Networks - Implementation of image to image (pix2pix) translation from the paper by isola et al.[DEEP LEARNING]\nRestricted Boltzmann Machines -Restricted Boltzmann Machines in Python. [DEEP LEARNING]\nBolt - Bolt Online Learning Toolbox. [Deprecated]\nCoverTree - Python implementation of cover trees, near-drop-in replacement for scipy.spatial.kdtree [Deprecated]\nnilearn - Machine learning for NeuroImaging in Python.\nneuropredict - Aimed at novice machine learners and non-expert programmers, this package offers easy (no coding needed) and comprehensive machine learning (evaluation and full report of predictive performance WITHOUT requiring you to code) in Python for NeuroImaging and any other type of features. This is aimed at absorbing much of the ML workflow, unlike other packages like nilearn and pymvpa, which require you to learn their API and code to produce anything useful.\nimbalanced-learn - Python module to perform under sampling and oversampling with various techniques.\nShogun - The Shogun Machine Learning Toolbox.\nPyevolve - Genetic algorithm framework. [Deprecated]\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.\nbreze - Theano based library for deep and recurrent neural networks.\nCortex - Open source platform for deploying machine learning models in production.\npyhsmm - library for approximate unsupervised inference in Bayesian Hidden Markov Models (HMMs) and explicit-duration Hidden semi-Markov Models (HSMMs), focusing on the Bayesian Nonparametric extensions, the HDP-HMM and HDP-HSMM, mostly with weak-limit approximations.\nSKLL - A wrapper around scikit-learn that makes it simpler to conduct experiments.\nneurolab\nSpearmint - Spearmint is a package to perform Bayesian optimization according to the algorithms outlined in the paper: Practical Bayesian Optimization of Machine Learning Algorithms. Jasper Snoek, Hugo Larochelle and Ryan P. Adams. Advances in Neural Information Processing Systems, 2012. [Deprecated]\nPebl - Python Environment for Bayesian Learning. [Deprecated]\nTheano - Optimizing GPU-meta-programming code generating array oriented optimizing math compiler in Python.\nTensorFlow - Open source software library for numerical computation using data flow graphs.\npomegranate - Hidden Markov Models for Python, implemented in Cython for speed and efficiency.\npython-timbl - A Python extension module wrapping the full TiMBL C++ programming interface. Timbl is an elaborate k-Nearest Neighbours machine learning toolkit.\ndeap - Evolutionary algorithm framework.\npydeep - Deep Learning In Python. [Deprecated]\nmlxtend - A library consisting of useful tools for data science and machine learning tasks.\nneon - Nervana's high-performance Python-based Deep Learning framework [DEEP LEARNING]. [Deprecated]\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search.\nNeural Networks and Deep Learning - Code samples for my book \"Neural Networks and Deep Learning\" [DEEP LEARNING].\nAnnoy - Approximate nearest neighbours implementation.\nTPOT - Tool that automatically creates and optimizes machine learning pipelines using genetic programming. Consider it your personal data science assistant, automating a tedious part of machine learning.\npgmpy A python library for working with Probabilistic Graphical Models.\nDIGITS - The Deep Learning GPU Training System (DIGITS) is a web application for training deep learning models.\nOrange - Open source data visualization and data analysis for novices and experts.\nMXNet - Lightweight, Portable, Flexible Distributed\/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nmilk - Machine learning toolkit focused on supervised classification. [Deprecated]\nTFLearn - Deep learning library featuring a higher-level API for TensorFlow.\nREP - an IPython-based environment for conducting data-driven research in a consistent and reproducible way. REP is not trying to substitute scikit-learn, but extends it and provides better user experience. [Deprecated]\nrgf_python - Python bindings for Regularized Greedy Forest (Tree) Library.\nskbayes - Python package for Bayesian Machine Learning with scikit-learn API.\nfuku-ml - Simple machine learning library, including Perceptron, Regression, Support Vector Machine, Decision Tree and more, it's easy to use and easy to learn for beginners.\nXcessiv - A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling.\nPyTorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration\nPyTorch Lightning - The lightweight PyTorch wrapper for high-performance AI research.\nPyTorch Lightning Bolts - Toolbox of models, callbacks, and datasets for AI\/ML researchers.\nskorch - A scikit-learn compatible neural network library that wraps PyTorch.\nML-From-Scratch - Implementations of Machine Learning models from scratch in Python with a focus on transparency. Aims to showcase the nuts and bolts of ML in an accessible way.\nEdward - A library for probabilistic modeling, inference, and criticism. Built on top of TensorFlow.\nxRBM - A library for Restricted Boltzmann Machine (RBM) and its conditional variants in Tensorflow.\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, well documented and supports CPU and GPU (even multi-GPU) computation.\nstacked_generalization - Implementation of machine learning stacking technique as a handy library in Python.\nmodAL - A modular active learning framework for Python, built on top of scikit-learn.\nCogitare: A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python.\nParris - Parris, the automated infrastructure setup tool for machine learning algorithms.\nneonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.\nTuri Create - Machine learning from Apple. Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app.\nxLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.\nmlens - A high performance, memory efficient, maximally parallelized ensemble learning, integrated with scikit-learn.\nNetron - Visualizer for machine learning models.\nThampi - Machine Learning Prediction System on AWS Lambda\nMindsDB - Open Source framework to streamline use of neural networks.\nMicrosoft Recommenders: Examples and best practices for building recommendation systems, provided as Jupyter notebooks. The repo contains some of the latest state of the art algorithms from Microsoft Research as well as from other companies and institutions.\nStellarGraph: Machine Learning on Graphs, a Python library for machine learning on graph-structured (network-structured) data.\nBentoML: Toolkit for package and deploy machine learning models for serving in production\nMiraiML: An asynchronous engine for continuous & autonomous machine learning, built for real-time usage.\nnumpy-ML: Reference implementations of ML models written in numpy\ncreme: A framework for online machine learning.\nNeuraxle: A framework providing the right abstractions to ease research, development, and deployment of your ML pipelines.\nCornac - A comparative framework for multimodal recommender systems with a focus on models leveraging auxiliary data.\nJAX - JAX is Autograd and XLA, brought together for high-performance machine learning research.\nCatalyst - High-level utils for PyTorch DL & RL research. It was developed with a focus on reproducibility, fast experimentation and code\/ideas reusing. Being able to research\/develop something new, rather than write another regular train loop.\nFastai - High-level wrapper built on the top of Pytorch which supports vision, text, tabular data and collaborative filtering.\nscikit-multiflow - A machine learning framework for multi-output\/multi-label and stream data.\nLightwood - A Pytorch based framework that breaks down machine learning problems into smaller blocks that can be glued together seamlessly with objective to build predictive models with one line of code.\nbayeso - A simple, but essential Bayesian optimization package, written in Python.\nmljar-supervised - An Automated Machine Learning (AutoML) python package for tabular data. It can handle: Binary Classification, MultiClass Classification and Regression. It provides explanations and markdown reports.\nevostra - A fast Evolution Strategy implementation in Python.\nDetermined - Scalable deep learning training platform, including integrated support for distributed training, hyperparameter tuning, experiment tracking, and model management.\nPySyft - A Python library for secure and private Deep Learning built on PyTorch and TensorFlow.\nPyGrid - Peer-to-peer network of data owners and data scientists who can collectively train AI models using PySyft\nsktime - A unified framework for machine learning with time series\n\n\nData Analysis \/ Data Visualization\n\nDataVisualization - A Github Repository Where you can Learn Datavisualizatoin Basics to Intermediate level.\nCartopy - Cartopy is a Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses.\nSciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nNumPy - A fundamental package for scientific computing with Python.\nAutoViz AutoViz performs automatic visualization of any dataset with a single line of Python code. Give it any input file (CSV, txt or json) of any size and AutoViz will visualize it. See Medium article.\nNumba - Python JIT (just in time) compiler to LLVM aimed at scientific Python by the developers of Cython and NumPy.\nMars - A tensor-based framework for large-scale data computation which is often regarded as a parallel and distributed version of NumPy.\nNetworkX - A high-productivity software for complex networks.\nigraph - binding to igraph library - General purpose graph library.\nPandas - A library providing high-performance, easy-to-use data structures and data analysis tools.\nParaMonte - A general-purpose Python library for Bayesian data analysis and visualization via serial\/parallel Monte Carlo and MCMC simulations. Documentation can be found here.\nOpen Mining - Business Intelligence (BI) in Python (Pandas web interface) [Deprecated]\nPyMC - Markov Chain Monte Carlo sampling toolkit.\nzipline - A Pythonic algorithmic trading library.\nPyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.\nSymPy - A Python library for symbolic mathematics.\nstatsmodels - Statistical modeling and econometrics in Python.\nastropy - A community Python library for Astronomy.\nmatplotlib - A Python 2D plotting library.\nbokeh - Interactive Web Plotting for Python.\nplotly - Collaborative web plotting for Python and matplotlib.\naltair - A Python to Vega translator.\nd3py - A plotting library for Python, based on D3.js.\nPyDexter - Simple plotting for Python. Wrapper for D3xterjs; easily render charts in-browser.\nggplot - Same API as ggplot2 for R. [Deprecated]\nggfortify - Unified interface to ggplot2 popular R packages.\nKartograph.py - Rendering beautiful SVG maps in Python.\npygal - A Python SVG Charts Creator.\nPyQtGraph - A pure-python graphics and GUI library built on PyQt4 \/ PySide and NumPy.\npycascading [Deprecated]\nPetrel - Tools for writing, submitting, debugging, and monitoring Storm topologies in pure Python.\nBlaze - NumPy and Pandas interface to Big Data.\nemcee - The Python ensemble sampling toolkit for affine-invariant MCMC.\nwindML - A Python Framework for Wind Energy Analysis and Prediction.\nvispy - GPU-based high-performance interactive OpenGL 2D\/3D data visualization library.\ncerebro2 A web-based visualization and debugging platform for NuPIC. [Deprecated]\nNuPIC Studio An all-in-one NuPIC Hierarchical Temporal Memory visualization and debugging super-tool! [Deprecated]\nSparklingPandas Pandas on PySpark (POPS).\nSeaborn - A python visualization library based on matplotlib.\nbqplot - An API for plotting in Jupyter (IPython).\npastalog - Simple, realtime visualization of neural network training performance.\nSuperset - A data exploration platform designed to be visual, intuitive, and interactive.\nDora - Tools for exploratory data analysis in Python.\nRuffus - Computation Pipeline library for python.\nSOMPY - Self Organizing Map written in Python (Uses neural networks for data analysis).\nsomoclu Massively parallel self-organizing maps: accelerate training on multicore CPUs, GPUs, and clusters, has python API.\nHDBScan - implementation of the hdbscan algorithm in Python - used for clustering\nvisualize_ML - A python package for data exploration and data analysis. [Deprecated]\nscikit-plot - A visualization library for quick and easy generation of common plots in data analysis and machine learning.\nBowtie - A dashboard library for interactive visualizations using flask socketio and react.\nlime - Lime is about explaining what machine learning classifiers (or models) are doing. It is able to explain any black box classifier, with two or more classes.\nPyCM - PyCM is a multi-class confusion matrix library written in Python that supports both input data vectors and direct matrix, and a proper tool for post-classification model evaluation that supports most classes and overall statistics parameters\nDash - A framework for creating analytical web applications built on top of Plotly.js, React, and Flask\nLambdo - A workflow engine for solving machine learning problems by combining in one analysis pipeline (i) feature engineering and machine learning (ii) model training and prediction (iii) table population and column evaluation via user-defined (Python) functions.\nTensorWatch - Debugging and visualization tool for machine learning and data science. It extensively leverages Jupyter Notebook to show real-time visualizations of data in running processes such as machine learning training.\ndowel - A little logger for machine learning research. Output any object to the terminal, CSV, TensorBoard, text logs on disk, and more with just one call to logger.log().\n\n\nMisc Scripts \/ iPython Notebooks \/ Codebases\n\nMiniGrad \u2013\u00a0A minimal, educational, Pythonic implementation of autograd (~100 loc).\nMap\/Reduce implementations of common ML algorithms: Jupyter notebooks that cover how to implement from scratch different ML algorithms (ordinary least squares, gradient descent, k-means, alternating least squares), using Python NumPy, and how to then make these implementations scalable using Map\/Reduce and Spark.\nBioPy - Biologically-Inspired and Machine Learning Algorithms in Python. [Deprecated]\nSVM Explorer - Interactive SVM Explorer, using Dash and scikit-learn\npattern_classification\nthinking stats 2\nhyperopt\nnumpic\n2012-paper-diginorm\nA gallery of interesting IPython notebooks\nipython-notebooks\ndata-science-ipython-notebooks - Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.\ndecision-weights\nSarah Palin LDA - Topic Modeling the Sarah Palin emails.\nDiffusion Segmentation - A collection of image segmentation algorithms based on diffusion methods.\nScipy Tutorials - SciPy tutorials. This is outdated, check out scipy-lecture-notes.\nCrab - A recommendation engine library for Python.\nBayesPy - Bayesian Inference Tools in Python.\nscikit-learn tutorials - Series of notebooks for learning scikit-learn.\nsentiment-analyzer - Tweets Sentiment Analyzer\nsentiment_classifier - Sentiment classifier using word sense disambiguation.\ngroup-lasso - Some experiments with the coordinate descent algorithm used in the (Sparse) Group Lasso model.\njProcessing - Kanji \/ Hiragana \/ Katakana to Romaji Converter. Edict Dictionary & parallel sentences Search. Sentence Similarity between two JP Sentences. Sentiment Analysis of Japanese Text. Run Cabocha(ISO--8859-1 configured) in Python.\nmne-python-notebooks - IPython notebooks for EEG\/MEG data processing using mne-python.\nNeon Course - IPython notebooks for a complete course around understanding Nervana's Neon.\npandas cookbook - Recipes for using Python's pandas library.\nclimin - Optimization library focused on machine learning, pythonic implementations of gradient descent, LBFGS, rmsprop, adadelta and others.\nAllen Downey\u2019s Data Science Course - Code for Data Science at Olin College, Spring 2014.\nAllen Downey\u2019s Think Bayes Code - Code repository for Think Bayes.\nAllen Downey\u2019s Think Complexity Code - Code for Allen Downey's book Think Complexity.\nAllen Downey\u2019s Think OS Code - Text and supporting code for Think OS: A Brief Introduction to Operating Systems.\nPython Programming for the Humanities - Course for Python programming for the Humanities, assuming no prior knowledge. Heavy focus on text processing \/ NLP.\nGreatCircle - Library for calculating great circle distance.\nOptunity examples - Examples demonstrating how to use Optunity in synergy with machine learning libraries.\nDive into Machine Learning  with Python Jupyter notebook and scikit-learn - \"I learned Python by hacking first, and getting serious later. I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.\"\nTDB - TensorDebugger (TDB) is a visual debugger for deep learning. It features interactive, node-by-node debugging and visualization for TensorFlow.\nSuiron - Machine Learning for RC Cars.\nIntroduction to machine learning with scikit-learn - IPython notebooks from Data School's video tutorials on scikit-learn.\nPractical XGBoost in Python - comprehensive online course about using XGBoost in Python.\nIntroduction to Machine Learning with Python - Notebooks and code for the book \"Introduction to Machine Learning with Python\"\nPydata book - Materials and IPython notebooks for \"Python for Data Analysis\" by Wes McKinney, published by O'Reilly Media\nHomemade Machine Learning - Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explained\nProdmodel - Build tool for data science pipelines.\nthe-elements-of-statistical-learning - This repository contains Jupyter notebooks implementing the algorithms found in the book and summary of the textbook.\nHyperparameter-Optimization-of-Machine-Learning-Algorithms - Code for hyperparameter tuning\/optimization of machine learning and deep learning algorithms.\n\n\nNeural Networks\n\n\nnn_builder - nn_builder is a python package that lets you build neural networks in 1 line\n\n\nNeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences.\n\n\nNeuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg\u2013Marquardt algorithm.\n\n\nNeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences. [Deprecated]\n\n\nNeuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg\u2013Marquardt algorithm. [Deprecated]\n\n\nData Driven Code - Very simple implementation of neural networks for dummies in python without using any libraries, with detailed comments.\n\n\nMachine Learning, Data Science and Deep Learning with Python - LiveVideo course that covers machine learning, Tensorflow, artificial intelligence, and neural networks.\n\n\nTResNet: High Performance GPU-Dedicated Architecture - TResNet models were designed and optimized to give the best speed-accuracy tradeoff out there on GPUs.\n\n\nTResNet: Simple and powerful neural network library for python - Variety of supported types of Artificial Neural Network and learning algorithms.\n\n\n\nKaggle Competition Source Code\n\nopen-solution-home-credit -> source code and experiments results for Home Credit Default Risk.\nopen-solution-googleai-object-detection -> source code and experiments results for Google AI Open Images - Object Detection Track.\nopen-solution-salt-identification -> source code and experiments results for TGS Salt Identification Challenge.\nopen-solution-ship-detection -> source code and experiments results for Airbus Ship Detection Challenge.\nopen-solution-data-science-bowl-2018 -> source code and experiments results for 2018 Data Science Bowl.\nopen-solution-value-prediction -> source code and experiments results for Santander Value Prediction Challenge.\nopen-solution-toxic-comments -> source code for Toxic Comment Classification Challenge.\nwiki challenge - An implementation of Dell Zhang's solution to Wikipedia's Participation Challenge on Kaggle.\nkaggle insults - Kaggle Submission for \"Detecting Insults in Social Commentary\".\nkaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.\nkaggle-cifar - Code for the CIFAR-10 competition at Kaggle, uses cuda-convnet.\nkaggle-blackbox - Deep learning made easy.\nkaggle-accelerometer - Code for Accelerometer Biometric Competition at Kaggle.\nkaggle-advertised-salaries - Predicting job salaries from ads - a Kaggle competition.\nkaggle amazon - Amazon access control challenge.\nkaggle-bestbuy_big - Code for the Best Buy competition at Kaggle.\nkaggle-bestbuy_small\nKaggle Dogs vs. Cats - Code for Kaggle Dogs vs. Cats competition.\nKaggle Galaxy Challenge - Winning solution for the Galaxy Challenge on Kaggle.\nKaggle Gender - A Kaggle competition: discriminate gender based on handwriting.\nKaggle Merck - Merck challenge at Kaggle.\nKaggle Stackoverflow - Predicting closed questions on Stack Overflow.\nkaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.\nwine-quality - Predicting wine quality.\n\n\nReinforcement Learning\n\nDeepMind Lab - DeepMind Lab is a 3D learning environment based on id Software's Quake III Arena via ioquake3 and other open source software. Its primary purpose is to act as a testbed for research in artificial intelligence, especially deep reinforcement learning.\nGym - OpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms.\nSerpent.AI - Serpent.AI is a game agent framework that allows you to turn any video game you own into a sandbox to develop AI and machine learning experiments. For both researchers and hobbyists.\nViZDoom - ViZDoom allows developing AI bots that play Doom using only the visual information (the screen buffer). It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.\nRoboschool - Open-source software for robot simulation, integrated with OpenAI Gym.\nRetro - Retro Games in Gym\nSLM Lab - Modular Deep Reinforcement Learning framework in PyTorch.\nCoach - Reinforcement Learning Coach by Intel\u00ae AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms\ngarage - A toolkit for reproducible reinforcement learning research\nmetaworld - An open source robotics benchmark for meta- and multi-task reinforcement learning\nacme - An Open Source Distributed Framework for Reinforcement Learning that makes build and train your agents easily.\nSpinning Up - An educational resource designed to let anyone learn to become a skilled practitioner in deep reinforcement learning\n\n\nRuby\n\nNatural Language Processing\n\nAwesome NLP with Ruby - Curated link list for practical natural language processing in Ruby.\nTreat - Text REtrieval and Annotation Toolkit, definitely the most comprehensive toolkit I\u2019ve encountered so far for Ruby.\nStemmer - Expose libstemmer_c to Ruby. [Deprecated]\nRaspell - raspell is an interface binding for ruby. [Deprecated]\nUEA Stemmer - Ruby port of UEALite Stemmer - a conservative stemmer for search and indexing.\nTwitter-text-rb - A library that does auto linking and extraction of usernames, lists and hashtags in tweets.\n\n\nGeneral-Purpose Machine Learning\n\nAwesome Machine Learning with Ruby - Curated list of ML related resources for Ruby.\nRuby Machine Learning - Some Machine Learning algorithms, implemented in Ruby. [Deprecated]\nMachine Learning Ruby [Deprecated]\njRuby Mahout - JRuby Mahout is a gem that unleashes the power of Apache Mahout in the world of JRuby. [Deprecated]\nCardMagic-Classifier - A general classifier module to allow Bayesian and other types of classifications.\nrb-libsvm - Ruby language bindings for LIBSVM which is a Library for Support Vector Machines.\nScoruby - Creates Random Forest classifiers from PMML files.\nrumale - Rumale is a machine learning library in Ruby\n\n\nData Analysis \/ Data Visualization\n\nrsruby - Ruby - R bridge.\ndata-visualization-ruby - Source code and supporting content for my Ruby Manor presentation on Data Visualisation with Ruby. [Deprecated]\nruby-plot - gnuplot wrapper for Ruby, especially for plotting ROC curves into SVG files. [Deprecated]\nplot-rb - A plotting library in Ruby built on top of Vega and D3. [Deprecated]\nscruffy - A beautiful graphing toolkit for Ruby.\nSciRuby\nGlean - A data management tool for humans. [Deprecated]\nBioruby\nArel [Deprecated]\n\n\nMisc\n\nBig Data For Chimps\nListof - Community based data collection, packed in gem. Get list of pretty much anything (stop words, countries, non words) in txt, json or hash. Demo\/Search for a list\n\n\nRust\n\nGeneral-Purpose Machine Learning\n\ndeeplearn-rs - deeplearn-rs provides simple networks that use matrix multiplication, addition, and ReLU under the MIT license.\nrustlearn - a machine learning framework featuring logistic regression, support vector machines, decision trees and random forests.\nrusty-machine - a pure-rust machine learning library.\nleaf - open source framework for machine intelligence, sharing concepts from TensorFlow and Caffe. Available under the MIT license. [Deprecated]\nRustNN - RustNN is a feedforward neural network library. [Deprecated]\nRusticSOM - A Rust library for Self Organising Maps (SOM).\n\n\nR\n\nGeneral-Purpose Machine Learning\n\nahaz - ahaz: Regularization for semiparametric additive hazards regression. [Deprecated]\narules - arules: Mining Association Rules and Frequent Itemsets\nbiglasso - biglasso: Extending Lasso Model Fitting to Big Data in R.\nbmrm - bmrm: Bundle Methods for Regularized Risk Minimization Package.\nBoruta - Boruta: A wrapper algorithm for all-relevant feature selection.\nbst - bst: Gradient Boosting.\nC50 - C50: C5.0 Decision Trees and Rule-Based Models.\ncaret - Classification and Regression Training: Unified interface to ~150 ML algorithms in R.\ncaretEnsemble - caretEnsemble: Framework for fitting multiple caret models as well as creating ensembles of such models. [Deprecated]\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box for R.\nClever Algorithms For Machine Learning\nCORElearn - CORElearn: Classification, regression, feature evaluation and ordinal evaluation.\nCoxBoost - CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks [Deprecated]\nCubist - Cubist: Rule- and Instance-Based Regression Modeling.\ne1071 - e1071: Misc Functions of the Department of Statistics (e1071), TU Wien\nearth - earth: Multivariate Adaptive Regression Spline Models\nelasticnet - elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA.\nElemStatLearn - ElemStatLearn: Data sets, functions and examples from the book: \"The Elements of Statistical Learning, Data Mining, Inference, and Prediction\" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Prediction\" by Trevor Hastie, Robert Tibshirani and Jerome Friedman.\nevtree - evtree: Evolutionary Learning of Globally Optimal Trees.\nforecast - forecast: Timeseries forecasting using ARIMA, ETS, STLM, TBATS, and neural network models.\nforecastHybrid - forecastHybrid: Automatic ensemble and cross validation of ARIMA, ETS, STLM, TBATS, and neural network models from the \"forecast\" package.\nfpc - fpc: Flexible procedures for clustering.\nfrbs - frbs: Fuzzy Rule-based Systems for Classification and Regression Tasks. [Deprecated]\nGAMBoost - GAMBoost: Generalized linear and additive models by likelihood based boosting. [Deprecated]\ngamboostLSS - gamboostLSS: Boosting Methods for GAMLSS.\ngbm - gbm: Generalized Boosted Regression Models.\nglmnet - glmnet: Lasso and elastic-net regularized generalized linear models.\nglmpath - glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model.\nGMMBoost - GMMBoost: Likelihood-based Boosting for Generalized mixed models. [Deprecated]\ngrplasso - grplasso: Fitting user specified models with Group Lasso penalty.\ngrpreg - grpreg: Regularization paths for regression models with grouped covariates.\nh2o - A framework for fast, parallel, and distributed machine learning algorithms at scale -- Deeplearning, Random forests, GBM, KMeans, PCA, GLM.\nhda - hda: Heteroscedastic Discriminant Analysis. [Deprecated]\nIntroduction to Statistical Learning\nipred - ipred: Improved Predictors.\nkernlab - kernlab: Kernel-based Machine Learning Lab.\nklaR - klaR: Classification and visualization.\nL0Learn - L0Learn: Fast algorithms for best subset selection.\nlars - lars: Least Angle Regression, Lasso and Forward Stagewise. [Deprecated]\nlasso2 - lasso2: L1 constrained estimation aka \u2018lasso\u2019.\nLiblineaR - LiblineaR: Linear Predictive Models Based On The Liblinear C\/C++ Library.\nLogicReg - LogicReg: Logic Regression.\nMachine Learning For Hackers\nmaptree - maptree: Mapping, pruning, and graphing tree models. [Deprecated]\nmboost - mboost: Model-Based Boosting.\nmedley - medley: Blending regression models, using a greedy stepwise approach.\nmlr - mlr: Machine Learning in R.\nncvreg - ncvreg: Regularization paths for SCAD- and MCP-penalized regression models.\nnnet - nnet: Feed-forward Neural Networks and Multinomial Log-Linear Models. [Deprecated]\npamr - pamr: Pam: prediction analysis for microarrays. [Deprecated]\nparty - party: A Laboratory for Recursive Partitioning\npartykit - partykit: A Toolkit for Recursive Partitioning.\npenalized - penalized: L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model.\npenalizedLDA - penalizedLDA: Penalized classification using Fisher's linear discriminant. [Deprecated]\npenalizedSVM - penalizedSVM: Feature Selection SVM using penalty functions.\nquantregForest - quantregForest: Quantile Regression Forests.\nrandomForest - randomForest: Breiman and Cutler's random forests for classification and regression.\nrandomForestSRC - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).\nrattle - rattle: Graphical user interface for data mining in R.\nrda - rda: Shrunken Centroids Regularized Discriminant Analysis.\nrdetools - rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces. [Deprecated]\nREEMtree - REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data. [Deprecated]\nrelaxo - relaxo: Relaxed Lasso. [Deprecated]\nrgenoud - rgenoud: R version of GENetic Optimization Using Derivatives\nRmalschains - Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R.\nrminer - rminer: Simpler use of data mining methods (e.g. NN and SVM) in classification and regression. [Deprecated]\nROCR - ROCR: Visualizing the performance of scoring classifiers. [Deprecated]\nRoughSets - RoughSets: Data Analysis Using Rough Set and Fuzzy Rough Set Theories. [Deprecated]\nrpart - rpart: Recursive Partitioning and Regression Trees.\nRPMM - RPMM: Recursively Partitioned Mixture Model.\nRSNNS - RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS).\nRWeka - RWeka: R\/Weka interface.\nRXshrink - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression.\nsda - sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection. [Deprecated]\nspectralGraphTopology - spectralGraphTopology: Learning Graphs from Data via Spectral Constraints.\nSuperLearner - Multi-algorithm ensemble learning packages.\nsvmpath - svmpath: svmpath: the SVM Path algorithm. [Deprecated]\ntgp - tgp: Bayesian treed Gaussian process models. [Deprecated]\ntree - tree: Classification and regression trees.\nvarSelRF - varSelRF: Variable selection using random forests.\nXGBoost.R - R binding for eXtreme Gradient Boosting (Tree) Library.\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly to R.\nigraph - binding to igraph library - General purpose graph library.\nMXNet - Lightweight, Portable, Flexible Distributed\/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nTDSP-Utilities - Two data science utilities in R from Microsoft: 1) Interactive Data Exploration, Analysis, and Reporting (IDEAR) ; 2) Automated Modeling and Reporting (AMR).\n\n\nData Manipulation | Data Analysis | Data Visualization\n\ndplyr - A data manipulation package that helps to solve the most common data manipulation problems.\nggplot2 - A data visualization package based on the grammar of graphics.\ntmap for visualizing geospatial data with static maps and leaflet for interactive maps\ntm and quanteda are the main packages for managing,  analyzing, and visualizing textual data.\nshiny is the basis for truly interactive displays and dashboards in R. However, some measure of interactivity can be achieved with htmlwidgets bringing javascript libraries to R. These include, plotly, dygraphs, highcharter, and several others.\n\n\nSAS\n\nGeneral-Purpose Machine Learning\n\nVisual Data Mining and Machine Learning - Interactive, automated, and programmatic modeling with the latest machine learning algorithms in and end-to-end analytics environment, from data prep to deployment. Free trial available.\nEnterprise Miner - Data mining and machine learning that creates deployable models using a GUI or code.\nFactory Miner - Automatically creates deployable machine learning models across numerous market or customer segments using a GUI.\n\n\nData Analysis \/ Data Visualization\n\nSAS\/STAT - For conducting advanced statistical analysis.\nUniversity Edition - FREE! Includes all SAS packages necessary for data analysis and visualization, and includes online SAS courses.\n\n\nNatural Language Processing\n\nContextual Analysis - Add structure to unstructured text using a GUI.\nSentiment Analysis - Extract sentiment from text using a GUI.\nText Miner - Text mining using a GUI or code.\n\n\nDemos and Scripts\n\nML_Tables - Concise cheat sheets containing machine learning best practices.\nenlighten-apply - Example code and materials that illustrate applications of SAS machine learning techniques.\nenlighten-integration - Example code and materials that illustrate techniques for integrating SAS with other analytics technologies in Java, PMML, Python and R.\nenlighten-deep - Example code and materials that illustrate using neural networks with several hidden layers in SAS.\ndm-flow - Library of SAS Enterprise Miner process flow diagrams to help you learn by example about specific data mining topics.\n\n\nScala\n\nNatural Language Processing\n\nScalaNLP - ScalaNLP is a suite of machine learning and numerical computing libraries.\nBreeze - Breeze is a numerical processing library for Scala.\nChalk - Chalk is a natural language processing library. [Deprecated]\nFACTORIE - FACTORIE is a toolkit for deployable probabilistic modeling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.\nMontague - Montague is a semantic parsing library for Scala with an easy-to-use DSL.\nSpark NLP - Natural language processing library built on top of Apache Spark ML to provide simple, performant, and accurate NLP annotations for machine learning pipelines, that scale easily in a distributed environment.\n\n\nData Analysis \/ Data Visualization\n\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nScalding - A Scala API for Cascading.\nSumming Bird - Streaming MapReduce with Scalding and Storm.\nAlgebird - Abstract Algebra for Scala.\nxerial - Data management utilities for Scala. [Deprecated]\nPredictionIO - PredictionIO, a machine learning server for software developers and data engineers.\nBIDMat - CPU and GPU-accelerated matrix library intended to support large-scale exploratory data analysis.\nFlink - Open source platform for distributed stream and batch data processing.\nSpark Notebook - Interactive and Reactive Data Science using Scala and Spark.\n\n\nGeneral-Purpose Machine Learning\n\nDeepLearning.scala - Creating statically typed dynamic neural networks from object-oriented & functional programming constructs.\nConjecture - Scalable Machine Learning in Scalding.\nbrushfire - Distributed decision tree ensemble learning in Scala.\nganitha - Scalding powered machine learning. [Deprecated]\nadam - A genomics processing engine and specialized file format built using Apache Avro, Apache Spark and Parquet. Apache 2 licensed.\nbioscala - Bioinformatics for the Scala programming language\nBIDMach - CPU and GPU-accelerated Machine Learning Library.\nFigaro - a Scala library for constructing probabilistic models.\nH2O Sparkling Water - H2O and Spark interoperability.\nFlinkML in Apache Flink - Distributed machine learning library in Flink.\nDynaML - Scala Library\/REPL for Machine Learning Research.\nSaul - Flexible Declarative Learning-Based Programming.\nSwiftLearner - Simply written algorithms to help study ML or write your own implementations.\nSmile - Statistical Machine Intelligence and Learning Engine.\ndoddle-model - An in-memory machine learning library built on top of Breeze. It provides immutable objects and exposes its functionality through a scikit-learn-like API.\nTensorFlow Scala -   Strongly-typed Scala API for TensorFlow.\n\n\nScheme\n\nNeural Networks\n\nlayer - Neural network inference from the command line, implemented in CHICKEN Scheme.\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\nBender - Fast Neural Networks framework built on top of Metal. Supports TensorFlow models.\nSwift AI - Highly optimized artificial intelligence and machine learning library written in Swift.\nSwift for Tensorflow - a next-generation platform for machine learning, incorporating the latest research across machine learning, compilers, differentiable programming, systems design, and beyond.\nBrainCore - The iOS and OS X neural network framework.\nswix - A bare bones library that includes a general matrix language and wraps some OpenCV for iOS development. [Deprecated]\nAIToolbox - A toolbox framework of AI modules written in Swift: Graphs\/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.\nMLKit - A simple Machine Learning Framework written in Swift. Currently features Simple Linear Regression, Polynomial Regression, and Ridge Regression.\nSwift Brain - The first neural network \/ machine learning library written in Swift. This is a project for AI algorithms in Swift for iOS and OS X development. This project includes algorithms focused on Bayes theorem, neural networks, SVMs, Matrices, etc...\nPerfect TensorFlow - Swift Language Bindings of TensorFlow. Using native TensorFlow models on both macOS \/ Linux.\nPredictionBuilder - A library for machine learning that builds predictions using a linear regression.\nAwesome CoreML - A curated list of pretrained CoreML models.\nAwesome Core ML Models - A curated list of machine learning models in CoreML format.\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\nAwesome TensorFlow - A list of all things related to TensorFlow.\nGolden TensorFlow - A page of content on TensorFlow, including academic papers and links to related topics.\n\n\nTools\n\nNeural Networks\n\nlayer - Neural network inference from the command line\n\n\nMisc\n\nCatalyzeX - Browser extension (Chrome and Firefox) that automatically finds and shows code implementations for machine learning papers anywhere: Google, Twitter, Arxiv, Scholar, etc.\nML Workspace - All-in-one web-based IDE for machine learning and data science. The workspace is deployed as a docker container and is preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch) and dev tools (e.g., Jupyter, VS Code).\nNotebooks - A starter kit for Jupyter notebooks and machine learning. Companion docker images consist of all combinations of python versions, machine learning frameworks (Keras, PyTorch and Tensorflow) and CPU\/CUDA versions.\nDVC - Data Science Version Control is an open-source version control system for machine learning projects with pipelines support. It makes ML projects reproducible and shareable.\nKedro - Kedro is a data and development workflow framework that implements best practices for data pipelines with an eye towards productionizing machine learning models.\nguild.ai - Tool to log, analyze, compare and \"optimize\" experiments. It's cross-platform and framework independent, and provided integrated visualizers such as tensorboard.\nSacred - Python tool to help  you configure, organize, log and reproduce experiments. Like a notebook lab in the context of Chemistry\/Biology. The community has built multiple add-ons leveraging the proposed standard.\nMLFlow - platform to manage the ML lifecycle, including experimentation, reproducibility and deployment. Framework and language agnostic, take a look at all the built-in integrations.\nWeights & Biases - Machine learning experiment tracking, dataset versioning, hyperparameter search, visualization, and collaboration\nMore tools to improve the ML lifecycle: Catalyst, PachydermIO. The following are Github-alike and targeting teams Weights & Biases, Neptune.Ml, Comet.ml, Valohai.ai, DAGsHub.\nMachineLearningWithTensorFlow2ed - a book on general purpose machine learning techniques regression, classification, unsupervised clustering, reinforcement learning, auto encoders, convolutional neural networks, RNNs, LSTMs, using TensorFlow 1.14.1.\nm2cgen - A tool that allows the conversion of ML models into native code (Java, C, Python, Go, JavaScript, Visual Basic, C#, R, PowerShell, PHP, Dart) with zero dependencies.\nCML - A library for doing continuous integration with ML projects. Use GitHub Actions & GitLab CI to train and evaluate models in production like environments and automatically generate visual reports with metrics and graphs in pull\/merge requests. Framework & language agnostic.\nPythonizr - An online tool to generate boilerplate machine learning code that uses scikit-learn.\n\n\nCredits\n\nSome of the python libraries were cut-and-pasted from vinta\nReferences for Go were mostly cut-and-pasted from gopherdata\n\n","122":"\n \n \n  \n \n \n \n\nAnsible\nAnsible is a radically simple IT automation system. It handles\nconfiguration management, application deployment, cloud provisioning,\nad-hoc task execution, network automation, and multi-node orchestration. Ansible makes complex\nchanges like zero-downtime rolling updates with load balancers easy. More information on the Ansible website.\n\nDesign Principles\n\nHave a dead-simple setup process with a minimal learning curve.\nManage machines very quickly and in parallel.\nAvoid custom-agents and additional open ports, be agentless by\nleveraging the existing SSH daemon.\nDescribe infrastructure in a language that is both machine and human\nfriendly.\nFocus on security and easy auditability\/review\/rewriting of content.\nManage new remote machines instantly, without bootstrapping any\nsoftware.\nAllow module development in any dynamic language, not just Python.\nBe usable as non-root.\nBe the easiest IT automation system to use, ever.\n\n\nUse Ansible\nYou can install a released version of Ansible with pip or a package manager. See our\ninstallation guide for details on installing Ansible\non a variety of platforms.\nRed Hat offers supported builds of Ansible Engine.\nPower users and developers can run the devel branch, which has the latest\nfeatures and fixes, directly. Although it is reasonably stable, you are more likely to encounter\nbreaking changes when running the devel branch. We recommend getting involved\nin the Ansible community if you want to run the devel branch.\n\nGet Involved\n\nRead Community\nInformation for all\nkinds of ways to contribute to and interact with the project,\nincluding mailing list information and how to submit bug reports and\ncode to Ansible.\nJoin a Working Group, an organized community devoted to a specific technology domain or platform.\nSubmit a proposed code update through a pull request to the devel branch.\nTalk to us before making larger changes\nto avoid duplicate efforts. This not only helps everyone\nknow what is going on, it also helps save time and effort if we decide\nsome changes are needed.\nFor a list of email lists, IRC channels and Working Groups, see the\nCommunication page\n\n\nCoding Guidelines\nWe document our Coding Guidelines in the Developer Guide. We particularly suggest you review:\n\nContributing your module to Ansible\nConventions, tips and pitfalls\n\n\nBranch Info\n\nThe devel branch corresponds to the release actively under development.\nThe stable-2.X branches correspond to stable releases.\nCreate a branch based on devel and set up a dev environment if you want to open a PR.\nSee the Ansible release and maintenance page for information about active branches.\n\n\nRoadmap\nBased on team and community feedback, an initial roadmap will be published for a major or minor version (ex: 2.7, 2.8).\nThe Ansible Roadmap page details what is planned and how to influence the roadmap.\n\nAuthors\nAnsible was created by Michael DeHaan\nand has contributions from over 5000 users (and growing). Thanks everyone!\nAnsible is sponsored by Red Hat, Inc.\n\nLicense\nGNU General Public License v3.0 or later\nSee COPYING to see the full text.\n","123":"Requests\nRequests is a simple, yet elegant HTTP library.\n>>> import requests\n>>> r = requests.get('https:\/\/api.github.com\/user', auth=('user', 'pass'))\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'application\/json; charset=utf8'\n>>> r.encoding\n'utf-8'\n>>> r.text\n'{\"type\":\"User\"...'\n>>> r.json()\n{'disk_usage': 368627, 'private_gists': 484, ...}\nRequests allows you to send HTTP\/1.1 requests extremely easily. There\u2019s no need to manually add query strings to your URLs, or to form-encode your PUT & POST data \u2014 but nowadays, just use the json method!\nRequests is one of the most downloaded Python package today, pulling in around 14M downloads \/ week\u2014 according to GitHub, Requests is currently depended upon by 500,000+ repositories. You may certainly put your trust in this code.\n\n\n\nInstalling Requests and Supported Versions\nRequests is available on PyPI:\n$ python -m pip install requests\nRequests officially supports Python 2.7 & 3.5+.\nSupported Features & Best\u2013Practices\nRequests is ready for the demands of building robust and reliable HTTP\u2013speaking applications, for the needs of today.\n\nKeep-Alive & Connection Pooling\nInternational Domains and URLs\nSessions with Cookie Persistence\nBrowser-style TLS\/SSL Verification\nBasic & Digest Authentication\nFamiliar dict\u2013like Cookies\nAutomatic Content Decompression and Decoding\nMulti-part File Uploads\nSOCKS Proxy Support\nConnection Timeouts\nStreaming Downloads\nAutomatic honoring of .netrc\nChunked HTTP Requests\n\nAPI Reference and User Guide available on Read the Docs\n\n\n \n","124":"     \n \n\n\nscikit-learn is a Python module for machine learning built on top of\nSciPy and is distributed under the 3-Clause BSD license.\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe About us page\nfor a list of core contributors.\nIt is currently maintained by a team of volunteers.\nWebsite: https:\/\/scikit-learn.org\n\nInstallation\n\nDependencies\nscikit-learn requires:\n\nPython (>= 3.6)\nNumPy (>= 1.13.3)\nSciPy (>= 0.19.1)\njoblib (>= 0.11)\nthreadpoolctl (>= 2.0.0)\n\n\nScikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.\nscikit-learn 0.23 and later require Python 3.6 or newer.\nScikit-learn plotting capabilities (i.e., functions start with plot_ and\nclasses end with \"Display\") require Matplotlib (>= 2.1.1).\nFor running the examples Matplotlib >= 2.1.1 is required.\nA few examples require scikit-image >= 0.13, a few examples\nrequire pandas >= 0.25.0, some examples require seaborn >=\n0.9.0.\n\nUser installation\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install scikit-learn is using pip\npip install -U scikit-learn\n\nor conda:\nconda install -c conda-forge scikit-learn\n\nThe documentation includes more detailed installation instructions.\n\nChangelog\nSee the changelog\nfor a history of notable changes to scikit-learn.\n\nDevelopment\nWe welcome new contributors of all experience levels. The scikit-learn\ncommunity goals are to be helpful, welcoming, and effective. The\nDevelopment Guide\nhas detailed information about contributing code, documentation, tests, and\nmore. We've included some basic information in this README.\n\nImportant links\n\nOfficial source code repo: https:\/\/github.com\/scikit-learn\/scikit-learn\nDownload releases: https:\/\/pypi.org\/project\/scikit-learn\/\nIssue tracker: https:\/\/github.com\/scikit-learn\/scikit-learn\/issues\n\n\nSource code\nYou can check the latest sources with the command:\ngit clone https:\/\/github.com\/scikit-learn\/scikit-learn.git\n\n\nContributing\nTo learn more about making a contribution to scikit-learn, please see our\nContributing guide.\n\nTesting\nAfter installation, you can launch the test suite from outside the source\ndirectory (you will need to have pytest >= 5.0.1 installed):\npytest sklearn\n\nSee the web page https:\/\/scikit-learn.org\/dev\/developers\/advanced_installation.html#testing\nfor more information.\n\nRandom number generation can be controlled during testing by setting\nthe SKLEARN_SEED environment variable.\n\nSubmitting a Pull Request\nBefore opening a Pull Request, have a look at the\nfull Contributing page to make sure your code complies\nwith our guidelines: https:\/\/scikit-learn.org\/stable\/developers\/index.html\n\nProject History\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe About us page\nfor a list of core contributors.\nThe project is currently maintained by a team of volunteers.\nNote: scikit-learn was previously referred to as scikits.learn.\n\nHelp and Support\n\nDocumentation\n\nHTML documentation (stable release): https:\/\/scikit-learn.org\nHTML documentation (development version): https:\/\/scikit-learn.org\/dev\/\nFAQ: https:\/\/scikit-learn.org\/stable\/faq.html\n\n\nCommunication\n\nMailing list: https:\/\/mail.python.org\/mailman\/listinfo\/scikit-learn\nIRC channel: #scikit-learn at webchat.freenode.net\nGitter: https:\/\/gitter.im\/scikit-learn\/scikit-learn\nTwitter: https:\/\/twitter.com\/scikit_learn\nStack Overflow: https:\/\/stackoverflow.com\/questions\/tagged\/scikit-learn\nWebsite: https:\/\/scikit-learn.org\n\n\nCitation\nIf you use scikit-learn in a scientific publication, we would appreciate citations: https:\/\/scikit-learn.org\/stable\/about.html#citing-scikit-learn\n","125":"Scrapy\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverview\nScrapy is a fast high-level web crawling and web scraping framework, used to\ncrawl websites and extract structured data from their pages. It can be used for\na wide range of purposes, from data mining to monitoring and automated testing.\nCheck the Scrapy homepage at https:\/\/scrapy.org for more information,\nincluding a list of features.\n\nRequirements\n\nPython 3.6+\nWorks on Linux, Windows, macOS, BSD\n\n\nInstall\nThe quick way:\npip install scrapy\n\nSee the install section in the documentation at\nhttps:\/\/docs.scrapy.org\/en\/latest\/intro\/install.html for more details.\n\nDocumentation\nDocumentation is available online at https:\/\/docs.scrapy.org\/ and in the docs\ndirectory.\n\nReleases\nYou can check https:\/\/docs.scrapy.org\/en\/latest\/news.html for the release notes.\n\nCommunity (blog, twitter, mail list, IRC)\nSee https:\/\/scrapy.org\/community\/ for details.\n\nContributing\nSee https:\/\/docs.scrapy.org\/en\/master\/contributing.html for details.\n\nCode of Conduct\nPlease note that this project is released with a Contributor Code of Conduct\n(see https:\/\/github.com\/scrapy\/scrapy\/blob\/master\/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\nPlease report unacceptable behavior to opensource@scrapinghub.com.\n\nCompanies using Scrapy\nSee https:\/\/scrapy.org\/companies\/ for a list.\n\nCommercial Support\nSee https:\/\/scrapy.org\/support\/ for details.\n","126":"Big List of Naughty Strings\nThe Big List of Naughty Strings is an evolving list of strings which have a high probability of causing issues when used as user-input data. This is intended for use in helping both automated and manual QA testing; useful for whenever your QA engineer walks into a bar.\nWhy Test Naughty Strings?\nEven multi-billion dollar companies with huge amounts of automated testing can't find every bad input. For example, look at what happens when you try to Tweet a zero-width space (U+200B) on Twitter:\n\nAlthough this is not a malicious error, and typical users aren't Tweeting weird unicode, an \"internal server error\" for unexpected input is never a positive experience for the user, and may in fact be a symptom of deeper string-validation issues. The Big List of Naughty Strings is intended to help reveal such issues.\nUsage\nblns.txt consists of newline-delimited strings and comments which are preceded with #. The comments divide the strings into sections for easy manual reading and copy\/pasting into input forms. For those who want to access the strings programmatically, a blns.json file is provided containing an array with all the comments stripped out (the scripts folder contains a Python script used to generate the blns.json).\nContributions\nFeel free to send a pull request to add more strings, or additional sections. However, please do not send pull requests with very-long strings (255+ characters), as that makes the list much more difficult to view.\nLikewise, please do not send pull requests which compromise manual usability of the file. This includes the EICAR test string, which can cause the file to be flagged by antivirus scanners, and files which alter the encoding of blns.txt. Also, do not send a null character (U+0000) string, as it changes the file format on GitHub to binary and renders it unreadable in pull requests. Finally, when adding or removing a string please update all files when you perform a pull request.\nDisclaimer\nThe Big List of Naughty Strings is intended to be used for software you own and manage. Some of the Naughty Strings can indicate security vulnerabilities, and as a result using such strings with third-party software may be a crime. The maintainer is not responsible for any negative actions that result from the use of the list.\nAdditionally, the Big List of Naughty Strings is not a fully-comprehensive substitute for formal security\/penetration testing for your service.\nLibrary \/ Packages\nVarious implementations of the Big List of Naughty Strings have made it to various package managers.  Those are maintained by outside parties, but can be found here:\n\n\n\nLibrary\nLink\n\n\n\n\nNode\nhttps:\/\/www.npmjs.com\/package\/blns\n\n\nNode\nhttps:\/\/www.npmjs.com\/package\/big-list-of-naughty-strings\n\n\n.NET\nhttps:\/\/github.com\/SimonCropp\/NaughtyStrings\n\n\nPHP\nhttps:\/\/github.com\/mattsparks\/blns-php\n\n\nC++\nhttps:\/\/github.com\/eliabieri\/blnscpp\n\n\n\nPlease open a PR to list others.\nMaintainer\/Creator\nMax Woolf (@minimaxir)\nSocial Media Discussions\n\nJune 10, 2015 [Hacker News]: Show HN: Big List of Naughty Strings for testing user-input data\nAugust 17, 2015 [Reddit]: Big list of naughty strings.\nFebruary 9, 2016 [Reddit]: Big List of Naughty Strings\nJanuary 15, 2017 [Hacker News]: Naughty Strings: A list of strings likely to cause issues as user-input data\nJanuary 16, 2017 [Reddit]: Naughty Strings: A list of strings likely to cause issues as user-input data\nNovember 16, 2018 [Hacker News]: Big List of Naughty Strings\nNovember 16, 2018 [Reddit]: Naughty Strings - A list of strings which have a high probability of causing issues when used as user-input data\n\nLicense\nMIT\n","127":"Home Assistant \n\nOpen source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.\nCheck out home-assistant.io for a\ndemo, installation instructions,\ntutorials and documentation.\n\n\nFeatured integrations\n\nThe system is built using a modular approach so support for other devices or actions can be implemented easily. See also the section on architecture and the section on creating your own\ncomponents.\nIf you run into issues while using Home Assistant or during development\nof a component, check the Home Assistant help section of our website for further help and information.\n","128":"You-Get\n\n\n\nNOTICE: Read this if you are looking for the conventional \"Issues\" tab.\n\nYou-Get is a tiny command-line utility to download media contents (videos, audios, images) from the Web, in case there is no other handy way to do it.\nHere's how you use you-get to download a video from YouTube:\n$ you-get 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\nsite:                YouTube\ntitle:               Me at the zoo\nstream:\n    - itag:          43\n      container:     webm\n      quality:       medium\n      size:          0.5 MiB (564215 bytes)\n    # download-with: you-get --itag=43 [URL]\n\nDownloading Me at the zoo.webm ...\n 100% (  0.5\/  0.5MB) \u251c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2524[1\/1]    6 MB\/s\n\nSaving Me at the zoo.en.srt ... Done.\nAnd here's why you might want to use it:\n\nYou enjoyed something on the Internet, and just want to download them for your own pleasure.\nYou watch your favorite videos online from your computer, but you are prohibited from saving them. You feel that you have no control over your own computer. (And it's not how an open Web is supposed to work.)\nYou want to get rid of any closed-source technology or proprietary JavaScript code, and disallow things like Flash running on your computer.\nYou are an adherent of hacker culture and free software.\n\nWhat you-get can do for you:\n\nDownload videos \/ audios from popular websites such as YouTube, Youku, Niconico, and a bunch more. (See the full list of supported sites)\nStream an online video in your media player. No web browser, no more ads.\nDownload images (of interest) by scraping a web page.\nDownload arbitrary non-HTML contents, i.e., binary files.\n\nInterested? Install it now and get started by examples.\nAre you a Python programmer? Then check out the source and fork it!\n\nInstallation\nPrerequisites\nThe following dependencies are necessary:\n\nPython  3.2 or above\nFFmpeg 1.0 or above\n(Optional) RTMPDump\n\nOption 1: Install via pip\nThe official release of you-get is distributed on PyPI, and can be installed easily from a PyPI mirror via the pip package manager. Note that you must use the Python 3 version of pip:\n$ pip3 install you-get\n\nOption 2: Install via Antigen (for Zsh users)\nAdd the following line to your .zshrc:\nantigen bundle soimort\/you-get\n\nOption 3: Download from GitHub\nYou may either download the stable (identical with the latest release on PyPI) or the develop (more hotfixes, unstable features) branch of you-get. Unzip it, and put the directory containing the you-get script into your PATH.\nAlternatively, run\n$ [sudo] python3 setup.py install\n\nOr\n$ python3 setup.py install --user\n\nto install you-get to a permanent path.\nOption 4: Git clone\nThis is the recommended way for all developers, even if you don't often code in Python.\n$ git clone git:\/\/github.com\/soimort\/you-get.git\n\nThen put the cloned directory into your PATH, or run .\/setup.py install to install you-get to a permanent path.\nOption 5: Homebrew (Mac only)\nYou can install you-get easily via:\n$ brew install you-get\n\nOption 6: pkg (FreeBSD only)\nYou can install you-get easily via:\n# pkg install you-get\n\nShell completion\nCompletion definitions for Bash, Fish and Zsh can be found in contrib\/completion. Please consult your shell's manual for how to take advantage of them.\nUpgrading\nBased on which option you chose to install you-get, you may upgrade it via:\n$ pip3 install --upgrade you-get\n\nor download the latest release via:\n$ you-get https:\/\/github.com\/soimort\/you-get\/archive\/master.zip\n\nIn order to get the latest develop branch without messing up the PIP, you can try:\n$ pip3 install --upgrade git+https:\/\/github.com\/soimort\/you-get@develop\n\nGetting Started\nDownload a video\nWhen you get a video of interest, you might want to use the --info\/-i option to see all available quality and formats:\n$ you-get -i 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\nsite:                YouTube\ntitle:               Me at the zoo\nstreams:             # Available quality and codecs\n    [ DASH ] ____________________________________\n    - itag:          242\n      container:     webm\n      quality:       320x240\n      size:          0.6 MiB (618358 bytes)\n    # download-with: you-get --itag=242 [URL]\n\n    - itag:          395\n      container:     mp4\n      quality:       320x240\n      size:          0.5 MiB (550743 bytes)\n    # download-with: you-get --itag=395 [URL]\n\n    - itag:          133\n      container:     mp4\n      quality:       320x240\n      size:          0.5 MiB (498558 bytes)\n    # download-with: you-get --itag=133 [URL]\n\n    - itag:          278\n      container:     webm\n      quality:       192x144\n      size:          0.4 MiB (392857 bytes)\n    # download-with: you-get --itag=278 [URL]\n\n    - itag:          160\n      container:     mp4\n      quality:       192x144\n      size:          0.4 MiB (370882 bytes)\n    # download-with: you-get --itag=160 [URL]\n\n    - itag:          394\n      container:     mp4\n      quality:       192x144\n      size:          0.4 MiB (367261 bytes)\n    # download-with: you-get --itag=394 [URL]\n\n    [ DEFAULT ] _________________________________\n    - itag:          43\n      container:     webm\n      quality:       medium\n      size:          0.5 MiB (568748 bytes)\n    # download-with: you-get --itag=43 [URL]\n\n    - itag:          18\n      container:     mp4\n      quality:       small\n    # download-with: you-get --itag=18 [URL]\n\n    - itag:          36\n      container:     3gp\n      quality:       small\n    # download-with: you-get --itag=36 [URL]\n\n    - itag:          17\n      container:     3gp\n      quality:       small\n    # download-with: you-get --itag=17 [URL]\n\nBy default, the one on the top is the one you will get. If that looks cool to you, download it:\n$ you-get 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\nsite:                YouTube\ntitle:               Me at the zoo\nstream:\n    - itag:          242\n      container:     webm\n      quality:       320x240\n      size:          0.6 MiB (618358 bytes)\n    # download-with: you-get --itag=242 [URL]\n\nDownloading Me at the zoo.webm ...\n 100% (  0.6\/  0.6MB) \u251c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2524[2\/2]    2 MB\/s\nMerging video parts... Merged into Me at the zoo.webm\n\nSaving Me at the zoo.en.srt ... Done.\n\n(If a YouTube video has any closed captions, they will be downloaded together with the video file, in SubRip subtitle format.)\nOr, if you prefer another format (mp4), just use whatever the option you-get shows to you:\n$ you-get --itag=18 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\n\nNote:\n\nAt this point, format selection has not been generally implemented for most of our supported sites; in that case, the default format to download is the one with the highest quality.\nffmpeg is a required dependency, for downloading and joining videos streamed in multiple parts (e.g. on some sites like Youku), and for YouTube videos of 1080p or high resolution.\nIf you don't want you-get to join video parts after downloading them, use the --no-merge\/-n option.\n\nDownload anything else\nIf you already have the URL of the exact resource you want, you can download it directly with:\n$ you-get https:\/\/stallman.org\/rms.jpg\nSite:       stallman.org\nTitle:      rms\nType:       JPEG Image (image\/jpeg)\nSize:       0.06 MiB (66482 Bytes)\n\nDownloading rms.jpg ...\n100.0% (  0.1\/0.1  MB) \u251c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2524[1\/1]  127 kB\/s\n\nOtherwise, you-get will scrape the web page and try to figure out if there's anything interesting to you:\n$ you-get http:\/\/kopasas.tumblr.com\/post\/69361932517\nSite:       Tumblr.com\nTitle:      kopasas\nType:       Unknown type (None)\nSize:       0.51 MiB (536583 Bytes)\n\nSite:       Tumblr.com\nTitle:      tumblr_mxhg13jx4n1sftq6do1_1280\nType:       Portable Network Graphics (image\/png)\nSize:       0.51 MiB (536583 Bytes)\n\nDownloading tumblr_mxhg13jx4n1sftq6do1_1280.png ...\n100.0% (  0.5\/0.5  MB) \u251c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2524[1\/1]   22 MB\/s\n\nNote:\n\nThis feature is an experimental one and far from perfect. It works best on scraping large-sized images from popular websites like Tumblr and Blogger, but there is really no universal pattern that can apply to any site on the Internet.\n\nSearch on Google Videos and download\nYou can pass literally anything to you-get. If it isn't a valid URL, you-get will do a Google search and download the most relevant video for you. (It might not be exactly the thing you wish to see, but still very likely.)\n$ you-get \"Richard Stallman eats\"\n\nPause and resume a download\nYou may use Ctrl+C to interrupt a download.\nA temporary .download file is kept in the output directory. Next time you run you-get with the same arguments, the download progress will resume from the last session. In case the file is completely downloaded (the temporary .download extension is gone), you-get will just skip the download.\nTo enforce re-downloading, use the --force\/-f option. (Warning: doing so will overwrite any existing file or temporary file with the same name!)\nSet the path and name of downloaded file\nUse the --output-dir\/-o option to set the path, and --output-filename\/-O to set the name of the downloaded file:\n$ you-get -o ~\/Videos -O zoo.webm 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\n\nTips:\n\nThese options are helpful if you encounter problems with the default video titles, which may contain special characters that do not play well with your current shell \/ operating system \/ filesystem.\nThese options are also helpful if you write a script to batch download files and put them into designated folders with designated names.\n\nProxy settings\nYou may specify an HTTP proxy for you-get to use, via the --http-proxy\/-x option:\n$ you-get -x 127.0.0.1:8087 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\n\nHowever, the system proxy setting (i.e. the environment variable http_proxy) is applied by default. To disable any proxy, use the --no-proxy option.\nTips:\n\nIf you need to use proxies a lot (in case your network is blocking certain sites), you might want to use you-get with proxychains and set alias you-get=\"proxychains -q you-get\" (in Bash).\nFor some websites (e.g. Youku), if you need access to some videos that are only available in mainland China, there is an option of using a specific proxy to extract video information from the site: --extractor-proxy\/-y.\n\nWatch a video\nUse the --player\/-p option to feed the video into your media player of choice, e.g. mpv or vlc, instead of downloading it:\n$ you-get -p vlc 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\n\nOr, if you prefer to watch the video in a browser, just without ads or comment section:\n$ you-get -p chromium 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw'\n\nTips:\n\nIt is possible to use the -p option to start another download manager, e.g., you-get -p uget-gtk 'https:\/\/www.youtube.com\/watch?v=jNQXAC9IVRw', though they may not play together very well.\n\nLoad cookies\nNot all videos are publicly available to anyone. If you need to log in your account to access something (e.g., a private video), it would be unavoidable to feed the browser cookies to you-get via the --cookies\/-c option.\nNote:\n\nAs of now, we are supporting two formats of browser cookies: Mozilla cookies.sqlite and Netscape cookies.txt.\n\nReuse extracted data\nUse --url\/-u to get a list of downloadable resource URLs extracted from the page. Use --json to get an abstract of extracted data in the JSON format.\nWarning:\n\nFor the time being, this feature has NOT been stabilized and the JSON schema may have breaking changes in the future.\n\nSupported Sites\n\n\n\nSite\nURL\nVideos?\nImages?\nAudios?\n\n\n\n\nYouTube\nhttps:\/\/www.youtube.com\/\n\u2713\n\n\n\n\nTwitter\nhttps:\/\/twitter.com\/\n\u2713\n\u2713\n\n\n\nVK\nhttp:\/\/vk.com\/\n\u2713\n\u2713\n\n\n\nVine\nhttps:\/\/vine.co\/\n\u2713\n\n\n\n\nVimeo\nhttps:\/\/vimeo.com\/\n\u2713\n\n\n\n\nVeoh\nhttp:\/\/www.veoh.com\/\n\u2713\n\n\n\n\nTumblr\nhttps:\/\/www.tumblr.com\/\n\u2713\n\u2713\n\u2713\n\n\nTED\nhttp:\/\/www.ted.com\/\n\u2713\n\n\n\n\nSoundCloud\nhttps:\/\/soundcloud.com\/\n\n\n\u2713\n\n\nSHOWROOM\nhttps:\/\/www.showroom-live.com\/\n\u2713\n\n\n\n\nPinterest\nhttps:\/\/www.pinterest.com\/\n\n\u2713\n\n\n\nMTV81\nhttp:\/\/www.mtv81.com\/\n\u2713\n\n\n\n\nMixcloud\nhttps:\/\/www.mixcloud.com\/\n\n\n\u2713\n\n\nMetacafe\nhttp:\/\/www.metacafe.com\/\n\u2713\n\n\n\n\nMagisto\nhttp:\/\/www.magisto.com\/\n\u2713\n\n\n\n\nKhan Academy\nhttps:\/\/www.khanacademy.org\/\n\u2713\n\n\n\n\nInternet Archive\nhttps:\/\/archive.org\/\n\u2713\n\n\n\n\nInstagram\nhttps:\/\/instagram.com\/\n\u2713\n\u2713\n\n\n\nInfoQ\nhttp:\/\/www.infoq.com\/presentations\/\n\u2713\n\n\n\n\nImgur\nhttp:\/\/imgur.com\/\n\n\u2713\n\n\n\nHeavy Music Archive\nhttp:\/\/www.heavy-music.ru\/\n\n\n\u2713\n\n\nFreesound\nhttp:\/\/www.freesound.org\/\n\n\n\u2713\n\n\nFlickr\nhttps:\/\/www.flickr.com\/\n\u2713\n\u2713\n\n\n\nFC2 Video\nhttp:\/\/video.fc2.com\/\n\u2713\n\n\n\n\nFacebook\nhttps:\/\/www.facebook.com\/\n\u2713\n\n\n\n\neHow\nhttp:\/\/www.ehow.com\/\n\u2713\n\n\n\n\nDailymotion\nhttp:\/\/www.dailymotion.com\/\n\u2713\n\n\n\n\nCoub\nhttp:\/\/coub.com\/\n\u2713\n\n\n\n\nCBS\nhttp:\/\/www.cbs.com\/\n\u2713\n\n\n\n\nBandcamp\nhttp:\/\/bandcamp.com\/\n\n\n\u2713\n\n\nAliveThai\nhttp:\/\/alive.in.th\/\n\u2713\n\n\n\n\ninterest.me\nhttp:\/\/ch.interest.me\/tvn\n\u2713\n\n\n\n\n755\u30ca\u30ca\u30b4\u30fc\u30b4\u30fc\nhttp:\/\/7gogo.jp\/\n\u2713\n\u2713\n\n\n\nniconico\u30cb\u30b3\u30cb\u30b3\u52d5\u753b\nhttp:\/\/www.nicovideo.jp\/\n\u2713\n\n\n\n\n163\u7f51\u6613\u89c6\u9891\u7f51\u6613\u4e91\u97f3\u4e50\nhttp:\/\/v.163.com\/http:\/\/music.163.com\/\n\u2713\n\n\u2713\n\n\n56\u7f51\nhttp:\/\/www.56.com\/\n\u2713\n\n\n\n\nAcFun\nhttp:\/\/www.acfun.cn\/\n\u2713\n\n\n\n\nBaidu\u767e\u5ea6\u8d34\u5427\nhttp:\/\/tieba.baidu.com\/\n\u2713\n\u2713\n\n\n\n\u7206\u7c73\u82b1\u7f51\nhttp:\/\/www.baomihua.com\/\n\u2713\n\n\n\n\nbilibili\u54d4\u54e9\u54d4\u54e9\nhttp:\/\/www.bilibili.com\/\n\u2713\n\u2713\n\u2713\n\n\n\u8c46\u74e3\nhttp:\/\/www.douban.com\/\n\u2713\n\n\u2713\n\n\n\u6597\u9c7c\nhttp:\/\/www.douyutv.com\/\n\u2713\n\n\n\n\n\u51e4\u51f0\u89c6\u9891\nhttp:\/\/v.ifeng.com\/\n\u2713\n\n\n\n\n\u98ce\u884c\u7f51\nhttp:\/\/www.fun.tv\/\n\u2713\n\n\n\n\niQIYI\u7231\u5947\u827a\nhttp:\/\/www.iqiyi.com\/\n\u2713\n\n\n\n\n\u6fc0\u52a8\u7f51\nhttp:\/\/www.joy.cn\/\n\u2713\n\n\n\n\n\u91776\u7f51\nhttp:\/\/www.ku6.com\/\n\u2713\n\n\n\n\n\u9177\u72d7\u97f3\u4e50\nhttp:\/\/www.kugou.com\/\n\n\n\u2713\n\n\n\u9177\u6211\u97f3\u4e50\nhttp:\/\/www.kuwo.cn\/\n\n\n\u2713\n\n\n\u4e50\u89c6\u7f51\nhttp:\/\/www.le.com\/\n\u2713\n\n\n\n\n\u8354\u679dFM\nhttp:\/\/www.lizhi.fm\/\n\n\n\u2713\n\n\n\u79d2\u62cd\nhttp:\/\/www.miaopai.com\/\n\u2713\n\n\n\n\nMioMio\u5f39\u5e55\u7f51\nhttp:\/\/www.miomio.tv\/\n\u2713\n\n\n\n\nMissEvan\u732b\u8033FM\nhttp:\/\/www.missevan.com\/\n\n\n\u2713\n\n\n\u75de\u5ba2\u90a6\nhttps:\/\/www.pixnet.net\/\n\u2713\n\n\n\n\nPPTV\u805a\u529b\nhttp:\/\/www.pptv.com\/\n\u2713\n\n\n\n\n\u9f50\u9c81\u7f51\nhttp:\/\/v.iqilu.com\/\n\u2713\n\n\n\n\nQQ\u817e\u8baf\u89c6\u9891\nhttp:\/\/v.qq.com\/\n\u2713\n\n\n\n\n\u4f01\u9e45\u76f4\u64ad\nhttp:\/\/live.qq.com\/\n\u2713\n\n\n\n\nSina\u65b0\u6d6a\u89c6\u9891\u5fae\u535a\u79d2\u62cd\u89c6\u9891\nhttp:\/\/video.sina.com.cn\/http:\/\/video.weibo.com\/\n\u2713\n\n\n\n\nSohu\u641c\u72d0\u89c6\u9891\nhttp:\/\/tv.sohu.com\/\n\u2713\n\n\n\n\nTudou\u571f\u8c46\nhttp:\/\/www.tudou.com\/\n\u2713\n\n\n\n\n\u867e\u7c73\nhttp:\/\/www.xiami.com\/\n\u2713\n\n\u2713\n\n\n\u9633\u5149\u536b\u89c6\nhttp:\/\/www.isuntv.com\/\n\u2713\n\n\n\n\n\u97f3\u60a6Tai\nhttp:\/\/www.yinyuetai.com\/\n\u2713\n\n\n\n\nYouku\u4f18\u9177\nhttp:\/\/www.youku.com\/\n\u2713\n\n\n\n\n\u6218\u65d7TV\nhttp:\/\/www.zhanqi.tv\/lives\n\u2713\n\n\n\n\n\u592e\u89c6\u7f51\nhttp:\/\/www.cntv.cn\/\n\u2713\n\n\n\n\nNaver\ub124\uc774\ubc84\nhttp:\/\/tvcast.naver.com\/\n\u2713\n\n\n\n\n\u8292\u679cTV\nhttp:\/\/www.mgtv.com\/\n\u2713\n\n\n\n\n\u706b\u732bTV\nhttp:\/\/www.huomao.com\/\n\u2713\n\n\n\n\n\u9633\u5149\u5bbd\u9891\u7f51\nhttp:\/\/www.365yg.com\/\n\u2713\n\n\n\n\n\u897f\u74dc\u89c6\u9891\nhttps:\/\/www.ixigua.com\/\n\u2713\n\n\n\n\n\u65b0\u7247\u573a\nhttps:\/\/www.xinpianchang.com\/\/\n\u2713\n\n\n\n\n\u5feb\u624b\nhttps:\/\/www.kuaishou.com\/\n\u2713\n\u2713\n\n\n\n\u6296\u97f3\nhttps:\/\/www.douyin.com\/\n\u2713\n\n\n\n\nTikTok\nhttps:\/\/www.tiktok.com\/\n\u2713\n\n\n\n\n\u4e2d\u56fd\u4f53\u80b2(TV)\nhttp:\/\/v.zhibo.tv\/ http:\/\/video.zhibo.tv\/\n\u2713\n\n\n\n\n\u77e5\u4e4e\nhttps:\/\/www.zhihu.com\/\n\u2713\n\n\n\n\n\nFor all other sites not on the list, the universal extractor will take care of finding and downloading interesting resources from the page.\nKnown bugs\nIf something is broken and you-get can't get you things you want, don't panic. (Yes, this happens all the time!)\nCheck if it's already a known problem on https:\/\/github.com\/soimort\/you-get\/wiki\/Known-Bugs. If not, follow the guidelines on how to report an issue.\nGetting Involved\nYou can reach us on the Gitter channel #soimort\/you-get (here's how you set up your IRC client for Gitter). If you have a quick question regarding you-get, ask it there.\nIf you are seeking to report an issue or contribute, please make sure to read the guidelines first.\nLegal Issues\nThis software is distributed under the MIT license.\nIn particular, please be aware that\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nTranslated to human words:\nIn case your use of the software forms the basis of copyright infringement, or you use the software for any other illegal purposes, the authors cannot take any responsibility for you.\nWe only ship the code here, and how you are going to use it is left to your own discretion.\nAuthors\nMade by @soimort, who is in turn powered by \u2615, \ud83c\udf7a and \ud83c\udf5c.\nYou can find the list of all contributors here.\n","129":"Face Recognition\nYou can also read a translated version of this file in Chinese \u7b80\u4f53\u4e2d\u6587\u7248 or in Korean \ud55c\uad6d\uc5b4 or in Japanese \u65e5\u672c\u8a9e.\nRecognize and manipulate faces from Python or from the command line with\nthe world's simplest face recognition library.\nBuilt using dlib's state-of-the-art face recognition\nbuilt with deep learning. The model has an accuracy of 99.38% on the\nLabeled Faces in the Wild benchmark.\nThis also provides a simple face_recognition command line tool that lets\nyou do face recognition on a folder of images from the command line!\n\n\n\nFeatures\nFind faces in pictures\nFind all the faces that appear in a picture:\n\nimport face_recognition\nimage = face_recognition.load_image_file(\"your_file.jpg\")\nface_locations = face_recognition.face_locations(image)\nFind and manipulate facial features in pictures\nGet the locations and outlines of each person's eyes, nose, mouth and chin.\n\nimport face_recognition\nimage = face_recognition.load_image_file(\"your_file.jpg\")\nface_landmarks_list = face_recognition.face_landmarks(image)\nFinding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff\nlike applying digital make-up (think 'Meitu'):\n\nIdentify faces in pictures\nRecognize who appears in each photo.\n\nimport face_recognition\nknown_image = face_recognition.load_image_file(\"biden.jpg\")\nunknown_image = face_recognition.load_image_file(\"unknown.jpg\")\n\nbiden_encoding = face_recognition.face_encodings(known_image)[0]\nunknown_encoding = face_recognition.face_encodings(unknown_image)[0]\n\nresults = face_recognition.compare_faces([biden_encoding], unknown_encoding)\nYou can even use this library with other Python libraries to do real-time face recognition:\n\nSee this example for the code.\nOnline Demos\nUser-contributed shared Jupyter notebook demo (not officially supported): \nInstallation\nRequirements\n\nPython 3.3+ or Python 2.7\nmacOS or Linux (Windows not officially supported, but might work)\n\nInstallation Options:\nInstalling on Mac or Linux\nFirst, make sure you have dlib already installed with Python bindings:\n\nHow to install dlib from source on macOS or Ubuntu\n\nThen, make sure you have cmake installed:\nbrew install cmake\nFinally, install this module from pypi using pip3 (or pip2 for Python 2):\npip3 install face_recognition\nAlternatively, you can try this library with Docker, see this section.\nIf you are having trouble with installation, you can also try out a\npre-configured VM.\nInstalling on an Nvidia Jetson Nano board\n\nJetson Nano installation instructions\n\nPlease follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don't follow the instructions in the article to comment out a line in dlib and recompile it.\n\n\n\nInstalling on Raspberry Pi 2+\n\nRaspberry Pi 2+ installation instructions\n\nInstalling on FreeBSD\npkg install graphics\/py-face_recognition\nInstalling on Windows\nWhile Windows isn't officially supported, helpful users have posted instructions on how to install this library:\n\n@masoudr's Windows 10 installation guide (dlib + face_recognition)\n\nInstalling a pre-configured Virtual Machine image\n\nDownload the pre-configured VM image (for VMware Player or VirtualBox).\n\nUsage\nCommand-Line Interface\nWhen you install face_recognition, you get two simple command-line\nprograms:\n\nface_recognition - Recognize faces in a photograph or folder full for\nphotographs.\nface_detection - Find faces in a photograph or folder full for photographs.\n\nface_recognition command line tool\nThe face_recognition command lets you recognize faces in a photograph or\nfolder full  for photographs.\nFirst, you need to provide a folder with one picture of each person you\nalready know. There should be one image file for each person with the\nfiles named according to who is in the picture:\n\nNext, you need a second folder with the files you want to identify:\n\nThen in you simply run the command face_recognition, passing in\nthe folder of known people and the folder (or single image) with unknown\npeople and it tells you who is in each image:\n$ face_recognition .\/pictures_of_people_i_know\/ .\/unknown_pictures\/\n\n\/unknown_pictures\/unknown.jpg,Barack Obama\n\/face_recognition_test\/unknown_pictures\/unknown.jpg,unknown_person\nThere's one line in the output for each face. The data is comma-separated\nwith the filename and the name of the person found.\nAn unknown_person is a face in the image that didn't match anyone in\nyour folder of known people.\nface_detection command line tool\nThe face_detection command lets you find the location (pixel coordinatates)\nof any faces in an image.\nJust run the command face_detection, passing in a folder of images\nto check (or a single image):\n$ face_detection  .\/folder_with_pictures\/\n\nexamples\/image1.jpg,65,215,169,112\nexamples\/image2.jpg,62,394,211,244\nexamples\/image2.jpg,95,941,244,792\nIt prints one line for each face that was detected. The coordinates\nreported are the top, right, bottom and left coordinates of the face (in pixels).\nAdjusting Tolerance \/ Sensitivity\nIf you are getting multiple matches for the same person, it might be that\nthe people in your photos look very similar and a lower tolerance value\nis needed to make face comparisons more strict.\nYou can do that with the --tolerance parameter. The default tolerance\nvalue is 0.6 and lower numbers make face comparisons more strict:\n$ face_recognition --tolerance 0.54 .\/pictures_of_people_i_know\/ .\/unknown_pictures\/\n\n\/unknown_pictures\/unknown.jpg,Barack Obama\n\/face_recognition_test\/unknown_pictures\/unknown.jpg,unknown_person\nIf you want to see the face distance calculated for each match in order\nto adjust the tolerance setting, you can use --show-distance true:\n$ face_recognition --show-distance true .\/pictures_of_people_i_know\/ .\/unknown_pictures\/\n\n\/unknown_pictures\/unknown.jpg,Barack Obama,0.378542298956785\n\/face_recognition_test\/unknown_pictures\/unknown.jpg,unknown_person,None\nMore Examples\nIf you simply want to know the names of the people in each photograph but don't\ncare about file names, you could do this:\n$ face_recognition .\/pictures_of_people_i_know\/ .\/unknown_pictures\/ | cut -d ',' -f2\n\nBarack Obama\nunknown_person\nSpeeding up Face Recognition\nFace recognition can be done in parallel if you have a computer with\nmultiple CPU cores. For example, if your system has 4 CPU cores, you can\nprocess about 4 times as many images in the same amount of time by using\nall your CPU cores in parallel.\nIf you are using Python 3.4 or newer, pass in a --cpus <number_of_cpu_cores_to_use> parameter:\n$ face_recognition --cpus 4 .\/pictures_of_people_i_know\/ .\/unknown_pictures\/\nYou can also pass in --cpus -1 to use all CPU cores in your system.\nPython Module\nYou can import the face_recognition module and then easily manipulate\nfaces with just a couple of lines of code. It's super easy!\nAPI Docs: https:\/\/face-recognition.readthedocs.io.\nAutomatically find all the faces in an image\nimport face_recognition\n\nimage = face_recognition.load_image_file(\"my_picture.jpg\")\nface_locations = face_recognition.face_locations(image)\n\n# face_locations is now an array listing the co-ordinates of each face!\nSee this example\nto try it out.\nYou can also opt-in to a somewhat more accurate deep-learning-based face detection model.\nNote: GPU acceleration (via NVidia's CUDA library) is required for good\nperformance with this model. You'll also want to enable CUDA support\nwhen compliling dlib.\nimport face_recognition\n\nimage = face_recognition.load_image_file(\"my_picture.jpg\")\nface_locations = face_recognition.face_locations(image, model=\"cnn\")\n\n# face_locations is now an array listing the co-ordinates of each face!\nSee this example\nto try it out.\nIf you have a lot of images and a GPU, you can also\nfind faces in batches.\nAutomatically locate the facial features of a person in an image\nimport face_recognition\n\nimage = face_recognition.load_image_file(\"my_picture.jpg\")\nface_landmarks_list = face_recognition.face_landmarks(image)\n\n# face_landmarks_list is now an array with the locations of each facial feature in each face.\n# face_landmarks_list[0]['left_eye'] would be the location and outline of the first person's left eye.\nSee this example\nto try it out.\nRecognize faces in images and identify who they are\nimport face_recognition\n\npicture_of_me = face_recognition.load_image_file(\"me.jpg\")\nmy_face_encoding = face_recognition.face_encodings(picture_of_me)[0]\n\n# my_face_encoding now contains a universal 'encoding' of my facial features that can be compared to any other picture of a face!\n\nunknown_picture = face_recognition.load_image_file(\"unknown.jpg\")\nunknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]\n\n# Now we can see the two face encodings are of the same person with `compare_faces`!\n\nresults = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)\n\nif results[0] == True:\n    print(\"It's a picture of me!\")\nelse:\n    print(\"It's not a picture of me!\")\nSee this example\nto try it out.\nPython Code Examples\nAll the examples are available here.\nFace Detection\n\nFind faces in a photograph\nFind faces in a photograph (using deep learning)\nFind faces in batches of images w\/ GPU (using deep learning)\nBlur all the faces in a live video using your webcam (Requires OpenCV to be installed)\n\nFacial Features\n\nIdentify specific facial features in a photograph\nApply (horribly ugly) digital make-up\n\nFacial Recognition\n\nFind and recognize unknown faces in a photograph based on photographs of known people\nIdentify and draw boxes around each person in a photo\nCompare faces by numeric face distance instead of only True\/False matches\nRecognize faces in live video using your webcam - Simple \/ Slower Version (Requires OpenCV to be installed)\nRecognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)\nRecognize faces in a video file and write out new video file (Requires OpenCV to be installed)\nRecognize faces on a Raspberry Pi w\/ camera\nRun a web service to recognize faces via HTTP (Requires Flask to be installed)\nRecognize faces with a K-nearest neighbors classifier\nTrain multiple images per person then recognize faces using a SVM\n\nCreating a Standalone Executable\nIf you want to create a standalone executable that can run without the need to install python or face_recognition, you can use PyInstaller. However, it requires some custom configuration to work with this library. See this issue for how to do it.\nArticles and Guides that cover face_recognition\n\nMy article on how Face Recognition works: Modern Face Recognition with Deep Learning\n\nCovers the algorithms and how they generally work\n\n\nFace recognition with OpenCV, Python, and deep learning by Adrian Rosebrock\n\nCovers how to use face recognition in practice\n\n\nRaspberry Pi Face Recognition by Adrian Rosebrock\n\nCovers how to use this on a Raspberry Pi\n\n\nFace clustering with Python by Adrian Rosebrock\n\nCovers how to automatically cluster photos based on who appears in each photo using unsupervised learning\n\n\n\nHow Face Recognition Works\nIf you want to learn how face location and recognition work instead of\ndepending on a black box library, read my article.\nCaveats\n\nThe face recognition model is trained on adults and does not work very well on children. It tends to mix\nup children quite easy using the default comparison threshold of 0.6.\nAccuracy may vary between ethnic groups. Please see this wiki page for more details.\n\nDeployment to Cloud Hosts (Heroku, AWS, etc)\nSince face_recognition depends on dlib which is written in C++, it can be tricky to deploy an app\nusing it to a cloud hosting provider like Heroku or AWS.\nTo make things easier, there's an example Dockerfile in this repo that shows how to run an app built with\nface_recognition in a Docker container. With that, you should be able to deploy\nto any service that supports Docker images.\nYou can try the Docker image locally by running: docker-compose up --build\nLinux users with a GPU (drivers >= 384.81) and Nvidia-Docker installed can run the example on the GPU: Open the docker-compose.yml file and uncomment the dockerfile: Dockerfile.gpu and runtime: nvidia lines.\nHaving problems?\nIf you run into problems, please read the Common Errors section of the wiki before filing a github issue.\nThanks\n\nMany, many thanks to Davis King (@nulhom)\nfor creating dlib and for providing the trained facial feature detection and face encoding models\nused in this library. For more information on the ResNet that powers the face encodings, check out\nhis blog post.\nThanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image,\npillow, etc, etc that makes this kind of stuff so easy and fun in Python.\nThanks to Cookiecutter and the\naudreyr\/cookiecutter-pypackage project template\nfor making Python project packaging way more tolerable.\n\n","130":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nState-of-the-art Natural Language Processing for PyTorch and TensorFlow 2.0\n\n\ud83e\udd17 Transformers provides thousands of pretrained models to perform tasks on texts such as classification, information extraction, question answering, summarization, translation, text generation, etc in 100+ languages. Its aim is to make cutting-edge NLP easier to use for everyone.\n\ud83e\udd17 Transformers provides APIs to quickly download and use those pretrained models on a given text, fine-tune them on your own datasets then share them with the community on our model hub. At the same time, each python module defining an architecture can be used as a standalone and modified to enable quick research experiments.\n\ud83e\udd17 Transformers is backed by the two most popular deep learning libraries, PyTorch and TensorFlow, with a seamless integration between them, allowing you to train your models with one then load it for inference with the other.\nRecent contributors\n\nOnline demos\nYou can test most of our models directly on their pages from the model hub. We also offer an inference API to use those models.\nHere are a few examples:\n\nMasked word completion with BERT\nName Entity Recognition with Electra\nText generation with GPT-2\nNatural Langugage Inference with RoBERTa\nSummarization with BART\nQuestion answering with DistilBERT\nTranslation with T5\n\nWrite With Transformer, built by the Hugging Face team, is the official demo of this repo\u2019s text generation capabilities.\nQuick tour\nTo immediately use a model on a given text, we provide the pipeline API. Pipelines group together a pretrained model with the preprocessing that was used during that model training. Here is how to quickly use a pipeline to classify positive versus negative texts\n>>> from transformers import pipeline\n\n# Allocate a pipeline for sentiment-analysis\n>>> classifier = pipeline('sentiment-analysis')\n>>> classifier('We are very happy to include pipeline into the transformers repository.')\n[{'label': 'POSITIVE', 'score': 0.9978193640708923}]\nThe second line of code downloads and caches the pretrained model used by the pipeline, the third line evaluates it on the given text. Here the answer is \"positive\" with a confidence of 99.8%.\nThis is another example of pipeline used for that can extract question answers from some context:\n>>> from transformers import pipeline\n\n# Allocate a pipeline for question-answering\n>>> question_answerer = pipeline('question-answering')\n>>> question_answerer({\n...     'question': 'What is the name of the repository ?',\n...     'context': 'Pipeline have been included in the huggingface\/transformers repository'\n... })\n{'score': 0.5135612454720828, 'start': 35, 'end': 59, 'answer': 'huggingface\/transformers'}\nOn top of the answer, the pretrained model used here returned its confidence score, along with the start position and its end position in the tokenized sentence. You can learn more about the tasks supported by the pipeline API in this tutorial.\nTo download and use any of the pretrained models on your given task, you just need to use those three lines of codes (PyTorch version):\n>>> from transformers import AutoTokenizer, AutoModel\n\n>>> tokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n>>> model = AutoModel.from_pretrained(\"bert-base-uncased\")\n\n>>> inputs = tokenizer(\"Hello world!\", return_tensors=\"pt\")\n>>> outputs = model(**inputs)\nor for TensorFlow:\n>>> from transformers import AutoTokenizer, TFAutoModel\n\n>>> tokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n>>> model = TFAutoModel.from_pretrained(\"bert-base-uncased\")\n\n>>> inputs = tokenizer(\"Hello world!\", return_tensors=\"tf\")\n>>> outputs = model(**inputs)\nThe tokenizer is responsible for all the preprocessing the pretrained model expects, and can be called directly on one (or list) of texts (as we can see on the fourth line of both code examples). It will output a dictionary you can directly pass to your model (which is done on the fifth line).\nThe model itself is a regular Pytorch nn.Module or a TensorFlow tf.keras.Model (depending on your backend) which you can use normally. For instance, this tutorial explains how to integrate such a model in classic PyTorch or TensorFlow training loop, or how to use our Trainer API to quickly fine-tune the on a new dataset.\nWhy should I use transformers?\n\n\nEasy-to-use state-of-the-art models:\n\nHigh performance on NLU and NLG tasks.\nLow barrier to entry for educators and practitioners.\nFew user-facing abstractions with just three classes to learn.\nA unified API for using all our pretrained models.\n\n\n\nLower compute costs, smaller carbon footprint:\n\nResearchers can share trained models instead of always retraining.\nPractitioners can reduce compute time and production costs.\nDozens of architectures with over 2,000 pretrained models, some in more than 100 languages.\n\n\n\nChoose the right framework for every part of a model's lifetime:\n\nTrain state-of-the-art models in 3 lines of code.\nMove a single model between TF2.0\/PyTorch frameworks at will.\nSeamlessly pick the right framework for training, evaluation, production.\n\n\n\nEasily customize a model or an example to your needs:\n\nExamples for each architecture to reproduce the results by the official authors of said architecture.\nExpose the models internal as consistently as possible.\nModel files can be used independently of the library for quick experiments.\n\n\n\nWhy shouldn't I use transformers?\n\nThis library is not a modular toolbox of building blocks for neural nets. The code in the model files is not refactored with additional abstractions on purpose, so that researchers can quickly iterate on each of the models without diving in additional abstractions\/files.\nThe training API is not intended to work on any model but is optimized to work with the models provided by the library. For generic machine learning loops, you should use another library.\nWhile we strive to present as many use cases as possible, the scripts in our examples folder are just that: examples. It is expected that they won't work out-of-the box on your specific problem and that you will be required to change a few lines of code to adapt them to your needs.\n\nInstallation\nThis repository is tested on Python 3.6+, PyTorch 1.0.0+ (PyTorch 1.3.1+ for examples) and TensorFlow 2.0.\nYou should install \ud83e\udd17 Transformers in a virtual environment. If you're unfamiliar with Python virtual environments, check out the user guide.\nFirst, create a virtual environment with the version of Python you're going to use and activate it.\nThen, you will need to install one of, or both, TensorFlow 2.0 and PyTorch.\nPlease refer to TensorFlow installation page and\/or PyTorch installation page regarding the specific install command for your platform.\nWhen TensorFlow 2.0 and\/or PyTorch has been installed, \ud83e\udd17 Transformers can be installed using pip as follows:\npip install transformers\nIf you'd like to play with the examples, you must install the library from source.\nModels architectures\n\ud83e\udd17 Transformers currently provides the following architectures (see here for a high-level summary of each them):\n\nALBERT (from Google Research and the Toyota Technological Institute at Chicago) released with the paper ALBERT: A Lite BERT for Self-supervised Learning of Language Representations, by Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, Radu Soricut.\nBART (from Facebook) released with the paper BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension by Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov and Luke Zettlemoyer.\nBERT (from Google) released with the paper BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding by Jacob Devlin, Ming-Wei Chang, Kenton Lee and Kristina Toutanova.\nBERT For Sequence Generation (from Google) released with the paper Leveraging Pre-trained Checkpoints for Sequence Generation Tasks by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.\nBlenderbot (from Facebook) released with the paper Recipes for building an open-domain chatbot by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.\nCamemBERT (from Inria\/Facebook\/Sorbonne) released with the paper CamemBERT: a Tasty French Language Model by Louis Martin*, Benjamin Muller*, Pedro Javier Ortiz Su\u00e1rez*, Yoann Dupont, Laurent Romary, \u00c9ric Villemonte de la Clergerie, Djam\u00e9 Seddah and Beno\u00eet Sagot.\nCTRL (from Salesforce) released with the paper CTRL: A Conditional Transformer Language Model for Controllable Generation by Nitish Shirish Keskar*, Bryan McCann*, Lav R. Varshney, Caiming Xiong and Richard Socher.\nDeBERTa (from Microsoft Research) released with the paper DeBERTa: Decoding-enhanced BERT with Disentangled Attention by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.\nDialoGPT (from Microsoft Research) released with the paper DialoGPT: Large-Scale Generative Pre-training for Conversational Response Generation by Yizhe Zhang, Siqi Sun, Michel Galley, Yen-Chun Chen, Chris Brockett, Xiang Gao, Jianfeng Gao, Jingjing Liu, Bill Dolan.\nDistilBERT (from HuggingFace), released together with the paper DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter by Victor Sanh, Lysandre Debut and Thomas Wolf. The same method has been applied to compress GPT2 into DistilGPT2, RoBERTa into DistilRoBERTa, Multilingual BERT into DistilmBERT and a German version of DistilBERT.\nDPR (from Facebook) released with the paper Dense Passage Retrieval\nfor Open-Domain Question Answering by Vladimir Karpukhin, Barlas O\u011fuz, Sewon\nMin, Patrick Lewis, Ledell Wu, Sergey Edunov, Danqi Chen, and Wen-tau Yih.\nELECTRA (from Google Research\/Stanford University) released with the paper ELECTRA: Pre-training text encoders as discriminators rather than generators by Kevin Clark, Minh-Thang Luong, Quoc V. Le, Christopher D. Manning.\nFlauBERT (from CNRS) released with the paper FlauBERT: Unsupervised Language Model Pre-training for French by Hang Le, Lo\u00efc Vial, Jibril Frej, Vincent Segonne, Maximin Coavoux, Benjamin Lecouteux, Alexandre Allauzen, Beno\u00eet Crabb\u00e9, Laurent Besacier, Didier Schwab.\nFunnel Transformer (from CMU\/Google Brain) released with the paper Funnel-Transformer: Filtering out Sequential Redundancy for Efficient Language Processing by Zihang Dai, Guokun Lai, Yiming Yang, Quoc V. Le.\nGPT (from OpenAI) released with the paper Improving Language Understanding by Generative Pre-Training by Alec Radford, Karthik Narasimhan, Tim Salimans and Ilya Sutskever.\nGPT-2 (from OpenAI) released with the paper Language Models are Unsupervised Multitask Learners by Alec Radford*, Jeffrey Wu*, Rewon Child, David Luan, Dario Amodei** and Ilya Sutskever**.\nLayoutLM (from Microsoft Research Asia) released with the paper LayoutLM: Pre-training of Text and Layout for Document Image Understanding by Yiheng Xu, Minghao Li, Lei Cui, Shaohan Huang, Furu Wei, Ming Zhou.\nLongformer (from AllenAI) released with the paper Longformer: The Long-Document Transformer by Iz Beltagy, Matthew E. Peters, Arman Cohan.\nLXMERT (from UNC Chapel Hill) released with the paper LXMERT: Learning Cross-Modality Encoder Representations from Transformers for Open-Domain Question Answering by Hao Tan and Mohit Bansal.\nMarianMT Machine translation models trained using OPUS data by J\u00f6rg Tiedemann. The Marian Framework is being developed by the Microsoft Translator Team.\nMBart (from Facebook) released with the paper Multilingual Denoising Pre-training for Neural Machine Translation by Yinhan Liu, Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov, Marjan Ghazvininejad, Mike Lewis, Luke Zettlemoyer.\nMT5 (from Google AI) released with the paper mT5: A massively multilingual pre-trained text-to-text transformer by Linting Xue, Noah Constant, Adam Roberts, Mihir Kale, Rami Al-Rfou, Aditya Siddhant, Aditya Barua, Colin Raffel.\nPegasus (from Google) released with the paper PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization> by Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu.\nProphetNet (from Microsoft Research) released with the paper ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.\nReformer (from Google Research) released with the paper Reformer: The Efficient Transformer by Nikita Kitaev, \u0141ukasz Kaiser, Anselm Levskaya.\nRoBERTa (from Facebook), released together with the paper a Robustly Optimized BERT Pretraining Approach by Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov.\nultilingual BERT into DistilmBERT and a German version of DistilBERT.\nSqueezeBert released with the paper SqueezeBERT: What can computer vision teach NLP about efficient neural networks? by Forrest N. Iandola, Albert E. Shaw, Ravi Krishna, and Kurt W. Keutzer.\nT5 (from Google AI) released with the paper Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.\nTransformer-XL (from Google\/CMU) released with the paper Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context by Zihang Dai*, Zhilin Yang*, Yiming Yang, Jaime Carbonell, Quoc V. Le, Ruslan Salakhutdinov.\nXLM (from Facebook) released together with the paper Cross-lingual Language Model Pretraining by Guillaume Lample and Alexis Conneau.\nXLM-ProphetNet (from Microsoft Research) released with the paper ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.\nXLM-RoBERTa (from Facebook AI), released together with the paper Unsupervised Cross-lingual Representation Learning at Scale by Alexis Conneau*, Kartikay Khandelwal*, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzm\u00e1n, Edouard Grave, Myle Ott, Luke Zettlemoyer and Veselin Stoyanov.\nXLNet (from Google\/CMU) released with the paper \u200bXLNet: Generalized Autoregressive Pretraining for Language Understanding by Zhilin Yang*, Zihang Dai*, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, Quoc V. Le.\nOther community models, contributed by the community.\nWant to contribute a new model? We have added a detailed guide and templates to guide you in the process of adding a new model. You can find them in the templates folder of the repository. Be sure to check the contributing guidelines and contact the maintainers or open an issue to collect feedbacks before starting your PR.\n\nThese implementations have been tested on several datasets (see the example scripts) and should match the performances of the original implementations. You can find more details on the performances in the Examples section of the documentation.\nLearn more\n\n\n\nSection\nDescription\n\n\n\n\nDocumentation\nFull API documentation and tutorials\n\n\nTask summary\nTasks supported by \ud83e\udd17 Transformers\n\n\nPreprocessing tutorial\nUsing the Tokenizer class to prepare data for the models\n\n\nTraining and fine-tuning\nUsing the models provided by \ud83e\udd17 Transformers in a PyTorch\/TensorFlow training loop and the Trainer API\n\n\nQuick tour: Fine-tuning\/usage scripts\nExample scripts for fine-tuning models on a wide range of tasks\n\n\nModel sharing and uploading\nUpload and share your fine-tuned models with the community\n\n\nMigration\nMigrate to \ud83e\udd17 Transformers from pytorch-transformers or pytorch-pretrained-bert\n\n\n\nCitation\nWe now have a paper you can cite for the \ud83e\udd17 Transformers library:\n@article{Wolf2019HuggingFacesTS,\n  title={HuggingFace's Transformers: State-of-the-art Natural Language Processing},\n  author={Thomas Wolf and Lysandre Debut and Victor Sanh and Julien Chaumond and Clement Delangue and Anthony Moi and Pierric Cistac and Tim Rault and R\u00e9mi Louf and Morgan Funtowicz and Joe Davison and Sam Shleifer and Patrick von Platen and Clara Ma and Yacine Jernite and Julien Plu and Canwen Xu and Teven Le Scao and Sylvain Gugger and Mariama Drame and Quentin Lhoest and Alexander M. Rush},\n  journal={ArXiv},\n  year={2019},\n  volume={abs\/1910.03771}\n}\n","131":"\n\n\u4e2d\u6587 | English\nHelloGitHub \u5206\u4eab GitHub \u4e0a\u6709\u8da3\u3001\u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee\u3002\u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c\u8fd9\u91cc\u80fd\u591f\u5e2e\u4f60\u627e\u5230\u7f16\u7a0b\u7684\u5174\u8da3\uff01\n\n\n\n\n\n\n\n\u7b80\u4ecb\n\u8fd9\u662f\u4e00\u4e2a\u9762\u5411\u7f16\u7a0b\u65b0\u624b\u3001\u70ed\u7231\u7f16\u7a0b\u3001\u5bf9\u5f00\u6e90\u793e\u533a\u611f\u5174\u8da3\u4eba\u7fa4\u7684\u9879\u76ee\uff0c\u5185\u5bb9\u6bcf\u6708 28 \u53f7\u4ee5\u6708\u520a\u7684\u5f62\u5f0f\u66f4\u65b0\u53d1\u5e03\u3002\u5185\u5bb9\u5305\u62ec\uff1a\u6d41\u884c\u9879\u76ee\u3001\u5165\u95e8\u7ea7\u9879\u76ee\u3001\u8ba9\u751f\u6d3b\u53d8\u5f97\u66f4\u7f8e\u597d\u7684\u5de5\u5177\u3001\u4e66\u7c4d\u3001\u5b66\u4e60\u5fc3\u5f97\u7b14\u8bb0\u3001\u4f01\u4e1a\u7ea7\u9879\u76ee\u7b49\uff0c\u8fd9\u4e9b\u5f00\u6e90\u9879\u76ee\u5927\u591a\u90fd\u662f\u975e\u5e38\u5bb9\u6613\u4e0a\u624b\u3001\u5f88 Cool\uff0c\u80fd\u591f\u8ba9\u4f60\u7528\u5f88\u77ed\u65f6\u95f4\u611f\u53d7\u5230\u7f16\u7a0b\u7684\u9b45\u529b\u548c\u4fbf\u6377\u3002\u4ece\u800c\u8ba9\u5927\u5bb6\u611f\u53d7\u5230\u7f16\u7a0b\u7684\u4e50\u8da3\uff0c\u52a8\u624b\u5f00\u59cb\u7f16\u7a0b\u3002\n\u5e0c\u671b\u901a\u8fc7\u672c\u9879\u76ee\u80fd\u591f\u6709\u66f4\u591a\u4eba\u52a0\u5165\u5230\u5f00\u6e90\u793e\u533a\u3001\u56de\u9988\u793e\u533a\u3002\u8ba9\u6709\u8da3\u3001\u6709\u4ef7\u503c\u7684\u9879\u76ee\u88ab\u66f4\u591a\u4eba\u53d1\u73b0\u548c\u52a0\u5165\u3002\u5728\u53c2\u4e0e\u8fd9\u4e9b\u9879\u76ee\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5f97\u5230\uff1a\u70ed\u7231\u7f16\u7a0b\u7684\u5c0f\u4f19\u4f34\ud83d\udd7a \u3001\u66f4\u591a\u7f16\u7a0b\u77e5\u8bc6\ud83d\udcda \u3001\u4f18\u79c0\u7684\u7f16\u7a0b\u6280\u5de7\ud83d\udcbb \u3001\u627e\u5230\u7f16\u7a0b\u7684\u4e50\u8da3\ud83c\udfae \u3002\n\n\u300e\u6bcf\u65e5\u7cbe\u9009\u300f \u5173\u6ce8\u6211\u4eec\u7684\u6700\u60e8\u5b98\u5fae\u83b7\u53d6\u6bcf\u65e5\u9879\u76ee\u63a8\u8350\u3002\n\u300e\u8bb2\u89e3\u5f00\u6e90\u9879\u76ee\u300f \u6709\u8da3\u7684\u9879\u76ee\u4e0d\u77e5\u9053\u600e\u4e48\u8fd0\u884c\u548c\u73a9\u800d\uff1f\u70b9\u51fb\u9605\u8bfb\u8bb2\u89e3\u5f00\u6e90\u7cfb\u5217\u3002\n\n\u5185\u5bb9\n\u6bcf\u6708 28 \u53f7\u53d1\u5e03\u6700\u65b0\u4e00\u671f | \u5b98\u7f51\n\n\n\n\ud83d\udcc7\n\ud83c\udf83\n\ud83c\udf7a\n\ud83c\udf65\n\n\n\n\n\n\u7b2c 55 \u671f\n\u7b2c 54 \u671f\n\u7b2c 53 \u671f\n\u7b2c 52 \u671f\n\u7b2c 51 \u671f\n\n\n\u7b2c 50 \u671f\n\u7b2c 49 \u671f\n\u7b2c 48 \u671f\n\u7b2c 47 \u671f\n\u7b2c 46 \u671f\n\n\n\u7b2c 45 \u671f\n\u7b2c 44 \u671f\n\u7b2c 43 \u671f\n\u7b2c 42 \u671f\n\u7b2c 41 \u671f\n\n\n\u7b2c 40 \u671f\n\u7b2c 39 \u671f\n\u7b2c 38 \u671f\n\u7b2c 37 \u671f\n\u7b2c 36 \u671f\n\n\n\u7b2c 35 \u671f\n\u7b2c 34 \u671f\n\u7b2c 33 \u671f\n\u7b2c 32 \u671f\n\u7b2c 31 \u671f\n\n\n\u7b2c 30 \u671f\n\u7b2c 29 \u671f\n\u7b2c 28 \u671f\n\u7b2c 27 \u671f\n\u7b2c 26 \u671f\n\n\n\u7b2c 25 \u671f\n\u7b2c 24 \u671f\n\u7b2c 23 \u671f\n\u7b2c 22 \u671f\n\u7b2c 21 \u671f\n\n\n\u7b2c 20 \u671f\n\u7b2c 19 \u671f\n\u7b2c 18 \u671f\n\u7b2c 17 \u671f\n\u7b2c 16 \u671f\n\n\n\u7b2c 15 \u671f\n\u7b2c 14 \u671f\n\u7b2c 13 \u671f\n\u7b2c 12 \u671f\n\u7b2c 11 \u671f\n\n\n\u7b2c 10 \u671f\n\u7b2c 09 \u671f\n\u7b2c 08 \u671f\n\u7b2c 07 \u671f\n\u7b2c 06 \u671f\n\n\n\u7b2c 05 \u671f\n\u7b2c 04 \u671f\n\u7b2c 03 \u671f\n\u7b2c 02 \u671f\n\u7b2c 01 \u671f\n\n\n\n\u6b22\u8fce\u63a8\u8350\u6216\u81ea\u8350\u9879\u76ee\u6210\u4e3a HelloGitHub \u7684\u8d21\u732e\u8005\n\u8d5e\u52a9\n\n\n\n\n\n\n\u725b\u5ba2\u7f51\nIT \u9762\u8bd5\/\u7b14\u8bd5\u9898\u5e93\n\n\n\n\n\n\u4e91\u4e3b\u673a\n\u4ec5 62 \u5143\/\u5e74\n\n\n\n\n\nCDN\n\u5f00\u542f\u5168\u7f51\u52a0\u901f\n\n\n\n\n\n\u8d5e\u52a9\u6708\u520a\n5 \u5143\/\u6708\n\n\n\n\n\n\u8d21\u732e\u8005\n\n\n\n\n\n\nChungZH\n\n\n\n\n\nhellowHuaairen\n\n\n\n\n\n\u66f4\u591a\u8d21\u732e\u8005\n\n\n\n\n\n\u58f0\u660e\n\u672c\u4f5c\u54c1\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645 \u8fdb\u884c\u8bb8\u53ef\u3002\n","132":"This is Python version 3.10.0 alpha 2\n\n\n\n\n\n\n\n\nCopyright (c) 2001-2020 Python Software Foundation.  All rights reserved.\nSee the end of this file for further copyright and license information.\n\nContents\n\nGeneral Information\nContributing to CPython\nUsing Python\nBuild Instructions\nProfile Guided Optimization\nLink Time Optimization\n\n\nWhat's New\nDocumentation\nConverting From Python 2.x to 3.x\nTesting\nInstalling multiple versions\nIssue Tracker and Mailing List\nProposals for enhancement\nRelease Schedule\nCopyright and License Information\n\n\n\nGeneral Information\n\nWebsite: https:\/\/www.python.org\nSource code: https:\/\/github.com\/python\/cpython\nIssue tracker: https:\/\/bugs.python.org\nDocumentation: https:\/\/docs.python.org\nDeveloper's Guide: https:\/\/devguide.python.org\/\n\n\nContributing to CPython\nFor more complete instructions on contributing to CPython development,\nsee the Developer Guide.\n\nUsing Python\nInstallable Python kits, and information about using Python, are available at\npython.org.\n\nBuild Instructions\nOn Unix, Linux, BSD, macOS, and Cygwin:\n.\/configure\nmake\nmake test\nsudo make install\n\nThis will install Python as python3.\nYou can pass many options to the configure script; run .\/configure --help\nto find out more.  On macOS case-insensitive file systems and on Cygwin,\nthe executable is called python.exe; elsewhere it's just python.\nBuilding a complete Python installation requires the use of various\nadditional third-party libraries, depending on your build platform and\nconfigure options.  Not all standard library modules are buildable or\nuseable on all platforms.  Refer to the\nInstall dependencies\nsection of the Developer Guide for current detailed information on\ndependencies for various Linux distributions and macOS.\nOn macOS, there are additional configure and build options related\nto macOS framework and universal builds.  Refer to Mac\/README.rst.\nOn Windows, see PCbuild\/readme.txt.\nIf you wish, you can create a subdirectory and invoke configure from there.\nFor example:\nmkdir debug\ncd debug\n..\/configure --with-pydebug\nmake\nmake test\n\n(This will fail if you also built at the top-level directory.  You should do\na make clean at the top-level first.)\nTo get an optimized build of Python, configure --enable-optimizations\nbefore you run make.  This sets the default make targets up to enable\nProfile Guided Optimization (PGO) and may be used to auto-enable Link Time\nOptimization (LTO) on some platforms.  For more details, see the sections\nbelow.\n\nProfile Guided Optimization\nPGO takes advantage of recent versions of the GCC or Clang compilers.  If used,\neither via configure --enable-optimizations or by manually running\nmake profile-opt regardless of configure flags, the optimized build\nprocess will perform the following steps:\nThe entire Python directory is cleaned of temporary files that may have\nresulted from a previous compilation.\nAn instrumented version of the interpreter is built, using suitable compiler\nflags for each flavour. Note that this is just an intermediary step.  The\nbinary resulting from this step is not good for real life workloads as it has\nprofiling instructions embedded inside.\nAfter the instrumented interpreter is built, the Makefile will run a training\nworkload.  This is necessary in order to profile the interpreter execution.\nNote also that any output, both stdout and stderr, that may appear at this step\nis suppressed.\nThe final step is to build the actual interpreter, using the information\ncollected from the instrumented one.  The end result will be a Python binary\nthat is optimized; suitable for distribution or production installation.\n\nLink Time Optimization\nEnabled via configure's --with-lto flag.  LTO takes advantage of the\nability of recent compiler toolchains to optimize across the otherwise\narbitrary .o file boundary when building final executables or shared\nlibraries for additional performance gains.\n\nWhat's New\nWe have a comprehensive overview of the changes in the What's New in Python\n3.10 document.  For a more\ndetailed change log, read Misc\/NEWS, but a full\naccounting of changes can only be gleaned from the commit history.\nIf you want to install multiple versions of Python, see the section below\nentitled \"Installing multiple versions\".\n\nDocumentation\nDocumentation for Python 3.10 is online,\nupdated daily.\nIt can also be downloaded in many formats for faster access.  The documentation\nis downloadable in HTML, PDF, and reStructuredText formats; the latter version\nis primarily for documentation authors, translators, and people with special\nformatting requirements.\nFor information about building Python's documentation, refer to Doc\/README.rst.\n\nConverting From Python 2.x to 3.x\nSignificant backward incompatible changes were made for the release of Python\n3.0, which may cause programs written for Python 2 to fail when run with Python\n3.  For more information about porting your code from Python 2 to Python 3, see\nthe Porting HOWTO.\n\nTesting\nTo test the interpreter, type make test in the top-level directory.  The\ntest set produces some output.  You can generally ignore the messages about\nskipped tests due to optional features which can't be imported.  If a message\nis printed about a failed test or a traceback or core dump is produced,\nsomething is wrong.\nBy default, tests are prevented from overusing resources like disk space and\nmemory.  To enable these tests, run make testall.\nIf any tests fail, you can re-run the failing test(s) in verbose mode.  For\nexample, if test_os and test_gdb failed, you can run:\nmake test TESTOPTS=\"-v test_os test_gdb\"\n\nIf the failure persists and appears to be a problem with Python rather than\nyour environment, you can file a bug report and\ninclude relevant output from that command to show the issue.\nSee Running & Writing Tests\nfor more on running tests.\n\nInstalling multiple versions\nOn Unix and Mac systems if you intend to install multiple versions of Python\nusing the same installation prefix (--prefix argument to the configure\nscript) you must take care that your primary python executable is not\noverwritten by the installation of a different version.  All files and\ndirectories installed using make altinstall contain the major and minor\nversion and can thus live side-by-side.  make install also creates\n${prefix}\/bin\/python3 which refers to ${prefix}\/bin\/pythonX.Y.  If you\nintend to install multiple versions using the same prefix you must decide which\nversion (if any) is your \"primary\" version.  Install that version using make\ninstall.  Install all other versions using make altinstall.\nFor example, if you want to install Python 2.7, 3.6, and 3.10 with 3.10 being the\nprimary version, you would execute make install in your 3.10 build directory\nand make altinstall in the others.\n\nIssue Tracker and Mailing List\nBug reports are welcome!  You can use the issue tracker to report bugs, and\/or submit pull requests on\nGitHub.\nYou can also follow development discussion on the python-dev mailing list.\n\nProposals for enhancement\nIf you have a proposal to change Python, you may want to send an email to the\ncomp.lang.python or python-ideas mailing lists for initial feedback.  A\nPython Enhancement Proposal (PEP) may be submitted if your idea gains ground.\nAll current PEPs, as well as guidelines for submitting a new PEP, are listed at\npython.org\/dev\/peps\/.\n\nRelease Schedule\nSee PEP 619 for Python 3.10 release details.\n\nCopyright and License Information\nCopyright (c) 2001-2020 Python Software Foundation.  All rights reserved.\nCopyright (c) 2000 BeOpen.com.  All rights reserved.\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.  All\nrights reserved.\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.\nSee the LICENSE for\ninformation on the history of this software, terms & conditions for usage, and a\nDISCLAIMER OF ALL WARRANTIES.\nThis Python distribution contains no GNU General Public License (GPL) code,\nso it may be used in proprietary projects.  There are interfaces to some GNU\ncode but these are entirely optional.\nAll trademarks referenced herein are property of their respective holders.\n","133":"deepfakes_faceswap\n\n\nFaceSwap is a tool that utilizes deep learning to recognize and swap faces in pictures and videos.\n\n\n\n\n\n\n\n\n\nJennifer Lawrence\/Steve Buscemi FaceSwap using the Villain model\n\n \nMake sure you check out INSTALL.md before getting started.\n\ndeepfakes_faceswap\nManifesto\n\nFaceSwap has ethical uses.\n\n\nHow To setup and run the project\nOverview\n\nExtract\nTrain\nConvert\nGUI\n\n\nGeneral notes:\nHelp I need support!\n\nDiscord Server\nFaceSwap Forum\n\n\nDonate\n\nPatreon\nOne time Donations\n\n@torzdf\n@andenixa\n@kvrooman\n\n\n\n\nHow to contribute\n\nFor people interested in the generative models\nFor devs\nFor non-dev advanced users\nFor end-users\nFor haters\n\n\nAbout github.com\/deepfakes\n\nWhat is this repo?\nWhy this repo?\nWhy is it named 'deepfakes' if it is not \/u\/deepfakes?\nWhat if \/u\/deepfakes feels bad about that?\n\n\nAbout machine learning\n\nHow does a computer know how to recognize\/shape faces? How does machine learning work? What is a neural network?\n\n\n\nManifesto\nFaceSwap has ethical uses.\nWhen faceswapping was first developed and published, the technology was groundbreaking, it was a huge step in AI development. It was also completely ignored outside of academia because the code was confusing and fragmentary. It required a thorough understanding of complicated AI techniques and took a lot of effort to figure it out. Until one individual brought it together into a single, cohesive collection. It ran, it worked, and as is so often the way with new technology emerging on the internet, it was immediately used to create inappropriate content. Despite the inappropriate uses the software was given originally, it was the first AI code that anyone could download, run and learn by experimentation without having a Ph.D. in math, computer theory, psychology, and more. Before \"deepfakes\" these techniques were like black magic, only practiced by those who could understand all of the inner workings as described in esoteric and endlessly complicated books and papers.\n\"Deepfakes\" changed all that and anyone could participate in AI development. To us, developers, the release of this code opened up a fantastic learning opportunity. It allowed us to build on ideas developed by others, collaborate with a variety of skilled coders, experiment with AI whilst learning new skills and ultimately contribute towards an emerging technology which will only see more mainstream use as it progresses.\nAre there some out there doing horrible things with similar software? Yes. And because of this, the developers have been following strict ethical standards. Many of us don't even use it to create videos, we just tinker with the code to see what it does. Sadly, the media concentrates only on the unethical uses of this software. That is, unfortunately, the nature of how it was first exposed to the public, but it is not representative of why it was created, how we use it now, or what we see in its future. Like any technology, it can be used for good or it can be abused. It is our intention to develop FaceSwap in a way that its potential for abuse is minimized whilst maximizing its potential as a tool for learning, experimenting and, yes, for legitimate faceswapping.\nWe are not trying to denigrate celebrities or to demean anyone. We are programmers, we are engineers, we are Hollywood VFX artists, we are activists, we are hobbyists, we are human beings. To this end, we feel that it's time to come out with a standard statement of what this software is and isn't as far as us developers are concerned.\n\nFaceSwap is not for creating inappropriate content.\nFaceSwap is not for changing faces without consent or with the intent of hiding its use.\nFaceSwap is not for any illicit, unethical, or questionable purposes.\nFaceSwap exists to experiment and discover AI techniques, for social or political commentary, for movies, and for any number of ethical and reasonable uses.\n\nWe are very troubled by the fact that FaceSwap can be used for unethical and disreputable things. However, we support the development of tools and techniques that can be used ethically as well as provide education and experience in AI for anyone who wants to learn it hands-on. We will take a zero tolerance approach to anyone using this software for any unethical purposes and will actively discourage any such uses.\nHow To setup and run the project\nFaceSwap is a Python program that will run on multiple Operating Systems including Windows, Linux, and MacOS.\nSee INSTALL.md for full installation instructions. You will need a modern GPU with CUDA support for best performance. AMD GPUs are partially supported.\nOverview\nThe project has multiple entry points. You will have to:\n\nGather photos and\/or videos\nExtract faces from your raw photos\nTrain a model on the faces extracted from the photos\/videos\nConvert your sources with the model\n\nCheck out USAGE.md for more detailed instructions.\nExtract\nFrom your setup folder, run python faceswap.py extract. This will take photos from src folder and extract faces into extract folder.\nTrain\nFrom your setup folder, run python faceswap.py train. This will take photos from two folders containing pictures of both faces and train a model that will be saved inside the models folder.\nConvert\nFrom your setup folder, run python faceswap.py convert. This will take photos from original folder and apply new faces into modified folder.\nGUI\nAlternatively, you can run the GUI by running python faceswap.py gui\nGeneral notes:\n\nAll of the scripts mentioned have -h\/--help options with arguments that they will accept. You're smart, you can figure out how this works, right?!\n\nNB: there is a conversion tool for video. This can be accessed by running python tools.py effmpeg -h. Alternatively, you can use ffmpeg to convert video into photos, process images, and convert images back to the video.\nSome tips:\nReusing existing models will train much faster than starting from nothing.\nIf there is not enough training data, start with someone who looks similar, then switch the data.\nHelp I need support!\nDiscord Server\nYour best bet is to join the FaceSwap Discord server where there are plenty of users willing to help. Please note that, like this repo, this is a SFW Server!\nFaceSwap Forum\nAlternatively, you can post questions in the FaceSwap Forum. Please do not post general support questions in this repo as they are liable to be deleted without response.\nDonate\nThe developers work tirelessly to improve and develop FaceSwap. Many hours have been put in to provide the software as it is today, but this is an extremely time-consuming process with no financial reward. If you enjoy using the software, please consider donating to the devs, so they can spend more time implementing improvements.\nPatreon\nThe best way to support us is through our Patreon page:\n\nOne time Donations\nAlternatively you can give a one off donation to any of our Devs:\n@torzdf\nThere is very little FaceSwap code that hasn't been touched by torzdf. He is responsible for implementing the GUI, FAN aligner, MTCNN detector and porting the Villain, DFL-H128 and DFaker models to FaceSwap, as well as significantly improving many areas of the code.\nBitcoin: 385a1r9tyZpt5LyZcNk1FALTxC8ZHta7yq\nEthereum: 0x18CBbff5fA7C78de7B949A2b0160A0d1bd649f80\nPaypal: \n@andenixa\nCreator of the Unbalanced and OHR models, as well as expanding various capabilities within the training process. Andenixa is currently working on new models and will take requests for donations.\nPaypal: \n@kvrooman\nResponsible for consolidating the converters, adding a lot of code to fix model stability issues, and helping significantly towards making the training process more modular, kvrooman continues to be a very active contributor.\nEthereum: 0x18CBbff5fA7C78de7B949A2b0160A0d1bd649f80\nHow to contribute\nFor people interested in the generative models\n\nGo to the 'faceswap-model' to discuss\/suggest\/commit alternatives to the current algorithm.\n\nFor devs\n\nRead this README entirely\nFork the repo\nPlay with it\nCheck issues with the 'dev' tag\nFor devs more interested in computer vision and openCV, look at issues with the 'opencv' tag. Also feel free to add your own alternatives\/improvements\n\nFor non-dev advanced users\n\nRead this README entirely\nClone the repo\nPlay with it\nCheck issues with the 'advuser' tag\nAlso go to the 'faceswap Forum' and help others.\n\nFor end-users\n\nGet the code here and play with it if you can\nYou can also go to the faceswap Forum and help or get help from others.\nBe patient. This is a relatively new technology for developers as well. Much effort is already being put into making this program easy to use for the average user. It just takes time!\nNotice Any issue related to running the code has to be opened in the faceswap Forum!\n\nFor haters\nSorry, no time for that.\nAbout github.com\/deepfakes\nWhat is this repo?\nIt is a community repository for active users.\nWhy this repo?\nThe joshua-wu repo seems not active. Simple bugs like missing http:\/\/ in front of urls have not been solved since days.\nWhy is it named 'deepfakes' if it is not \/u\/deepfakes?\n\nBecause a typosquat would have happened sooner or later as project grows\nBecause we wanted to recognize the original author\nBecause it will better federate contributors and users\n\nWhat if \/u\/deepfakes feels bad about that?\nThis is a friendly typosquat, and it is fully dedicated to the project. If \/u\/deepfakes wants to take over this repo\/user and drive the project, he is welcomed to do so (Raise an issue, and he will be contacted on Reddit). Please do not send \/u\/deepfakes messages for help with the code you find here.\nAbout machine learning\nHow does a computer know how to recognize\/shape faces? How does machine learning work? What is a neural network?\nIt's complicated. Here's a good video that makes the process understandable:\n\nHere's a slightly more in depth video that tries to explain the basic functioning of a neural network:\n\ntl;dr: training data + trial and error\n","134":"Removed according to regulations.\n","135":"\nSuperset\n\n\n\n\n\n\n\n\n\n\nA modern, enterprise-ready business intelligence web application.\nWhy Superset |\nSupported Databases |\nInstallation and Configuration |\nGet Help |\nContributor Guide |\nResources |\nSuperset Users\nScreenshots & Gifs\nGallery\n\nView Dashboards\n\nSlice & dice your data\n\nQuery and visualize your data with SQL Lab\n\nVisualize geospatial data with deck.gl\n\nChoose from a wide array of visualizations\n\nWhy Superset\nSuperset provides:\n\nAn intuitive interface to explore and visualize datasets, and\ncreate interactive dashboards.\nA wide array of beautiful visualizations to showcase your data.\nEasy, code-free, user flows to drill down and slice and dice the data\nunderlying exposed dashboards. The dashboards and charts act as a starting\npoint for deeper analysis.\nA state of the art SQL editor\/IDE exposing a rich metadata browser, and\nan easy workflow to create visualizations out of any result set.\nAn extensible, high granularity security model allowing intricate rules\non who can access which product features and datasets.\nIntegration with major\nauthentication backends (database, OpenID, LDAP, OAuth, REMOTE_USER, ...)\nA lightweight semantic layer, allowing to control how data sources are\nexposed to the user by defining dimensions and metrics\nOut of the box support for most SQL-speaking databases\nDeep integration with Druid allows for Superset to stay blazing fast while\nslicing and dicing large, realtime datasets\nFast loading dashboards with configurable caching\n\nSupported Databases\nSuperset speaks many SQL dialects through SQLAlchemy - a Python\nSQL toolkit that is compatible with most databases. Here are some of the major database solutions that are supported:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA complete list of supported databases can be found\nhere.\nInstallation and Configuration\nSee in the documentation\nGet Involved\n\nAsk and answer questions on StackOverflow\nJoin our community's Slack\nand please read our Slack Community Guidelines\nJoin our dev@superset.apache.org Mailing list\n\nContributor Guide\nInterested in contributing? Check out our\nCONTRIBUTING.md\nto find resources around contributing along with a detailed guide on\nhow to set up a development environment.\nResources\n\nSuperset 101 -- Getting Started Guide (From Preset Blog)\n\nInstalling Apache Superset Locally\nInstalling Database Drivers\nConnect Superset To Google Sheets\nCreate Your First Chart\nCreate Time Series Charts\n\n\nDocker image\nYoutube Channel\n\nMay 2020: Virtual Meetup Recording. Topics: 0.36 Overview, Committers Self-Intro, Roadmap\nJuly 2020: Virtual Meetup Recording. Topics: Visualization Plugins, 0.37 Preview, Demo\n\n\nSo, You Want to Build a Superset Viz Plugin...\n\n","136":"XX-Net\n\u4e2d\u6587\u6587\u6863 \u00a0 \u00a0 \u00a0English \u00a0 \u00a0 \u00a0\u0641\u0627\u0631\u0633\u06cc \u0635\u0641\u062d\u0647 \u0627\u0635\u0644\u06cc\n\n\u6613\u7528\u7684\u7ffb\u5899\u5de5\u5177\n\u5305\u542b\u7684GAE_proxy\u548cX-Tunnel\uff1a\n\n\n\n\n\u6a21\u5757\nGAE_proxy\nX-Tunnel\n\n\n\n\n\u8054\u901a\u6027\n\u4f9d\u8d56IP\u626b\u63cf\n\u66f4\u591a\u901a\u9053\n\n\n\u901f\u5ea6\n\u6d41\u7545\n\u4e0b\u8f7d\u5feb\u901f\uff0c\u7a0d\u5fae\u5ef6\u8fdf\n\n\n\u5b89\u5168\u6027\nGoogle\u53ef\u770b\u5230\u901a\u4fe1\u5185\u5bb9\n\u652f\u6301\u5b8c\u6574https\u52a0\u5bc6\n\n\n\u6613\u7528\n\u9700\u90e8\u7f72\u670d\u52a1\u7aef\uff0c\u7ed1\u5b9a\u4fe1\u7528\u5361\uff0c\u5bfc\u5165\u8bc1\u4e66\n\u7b80\u5355\n\n\n\u517c\u5bb9\u6027\n\u90e8\u5206\u7f51\u7ad9\u4e0d\u517c\u5bb9\n\u65e0\u95ee\u9898\n\n\n\u6536\u8d39\n\u514d\u8d39\n\u4ed8\u8d39\n\n\n\n\n\u4e0b\u8f7d\u9875\u9762\n\n\u6700\u65b0\u72b6\u6001\uff1a\n2020-9-2\n\n\u65b0\u7248 4.5.2 \u63d0\u5347X-tunnel\u6027\u80fd\u3002\nGAE \u90e8\u5206\u5730\u533a\u88ab\u5c01\u8bf7\u4f7f\u7528X-Tunnel\uff0c\u514d\u8d39\u7528\u6237\u6bcf\u5929100M\uff0c\u6709\u80fd\u529b\u8005\u8bf7\u8d2d\u4e70\u5957\u9910\u652f\u6301\u9879\u76ee\u5f00\u53d1\uff01\n5\u67081\u65e5\u8d77\uff0cappid\u9700\u8981\u7ed1\u5b9a\u94f6\u884c\u5361\u624d\u80fd\u90e8\u7f72\u3002\n\u5df2\u7ecf\u90e8\u7f72\u8fc7\u7684appid\u4e0d\u9700\u8981\u91cd\u65b0\u90e8\u7f72\u3002\n\u90e8\u7f72\u9700\u8981\u4f7f\u7528\u5b98\u65b9gcloud\u5de5\u5177\uff0c\u5ba2\u6237\u7aef\u4e0d\u518d\u652f\u6301\u90e8\u7f72\u529f\u80fd\u3002\n\n\n\u63d0\u793a\uff1a\n\n\u6709\u95ee\u9898\u8bf7\u5148\u770bWiki\u6587\u6863\n\u63d0\u95ee\u524d\uff0c\u8bf7\u5148\u770b\u6700\u8fd1\u8ba8\u8bba\u4e3b\u9898\uff0c\u907f\u514d\u91cd\u590d\u53d1\u95ee\u3002\n\n","137":"2020\u5e74\u6700\u65b0\u603b\u7ed3\uff0c\u963f\u91cc\uff0c\u817e\u8baf\uff0c\u767e\u5ea6\uff0c\u7f8e\u56e2\uff0c\u5934\u6761\u7b49\u6280\u672f\u9762\u8bd5\u9898\u76ee\uff0c\u4ee5\u53ca\u7b54\u6848\uff0c\u4e13\u5bb6\u51fa\u9898\u4eba\u5206\u6790\u6c47\u603b\u3002\u6301\u7eed\u66f4\u65b0\u4e2d\u3002\n\n\u963f\u91cc\u7bc7\n\u534e\u4e3a\u7bc7\n\u767e\u5ea6\u7bc7\n\u817e\u8baf\u7bc7\n\u7f8e\u56e2\u7bc7\n\u5934\u6761\u7bc7\n\u6ef4\u6ef4\u7bc7\n\u4eac\u4e1c\u7bc7\nMySQL\u7bc7\nRedis\u7bc7\nMongoDB\u7bc7\nZookeeper\u7bc7\nNginx\u7bc7\n\u7b97\u6cd5\u7bc7\n\u5185\u5b58\u7bc7\ncpu\u7bc7\n\u78c1\u76d8\u7bc7\n\u7f51\u7edc\u901a\u4fe1\u7bc7\n\u5b89\u5168\u7bc7\n\u5e76\u53d1\u7bc7\n\n\u963f\u91cc\u7bc7\n\n1.1.1 \u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u9ad8\u6548\u7684\u5355\u5411\u94fe\u8868\u9006\u5e8f\u8f93\u51fa\uff1f\n1.1.2 \u5df2\u77e5sqrt(2)\u7ea6\u7b49\u4e8e1.414\uff0c\u8981\u6c42\u4e0d\u7528\u6570\u5b66\u5e93\uff0c\u6c42sqrt(2)\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e10\u4f4d\n1.1.3 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811(BST)\uff0c\u627e\u5230\u6811\u4e2d\u7b2c K \u5c0f\u7684\u8282\u70b9\n1.1.4 LRU\u7f13\u5b58\u673a\u5236\n1.1.5 \u5173\u4e8eepoll\u548cselect\u7684\u533a\u522b\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u8bf4\u6cd5\u662f\u6b63\u786e\u7684\n1.1.6 \u4eceinnodb\u7684\u7d22\u5f15\u7ed3\u6784\u5206\u6790\uff0c\u4e3a\u4ec0\u4e48\u7d22\u5f15\u7684 key \u957f\u5ea6\u4e0d\u80fd\u592a\u957f\n1.1.7 MySQL\u7684\u6570\u636e\u5982\u4f55\u6062\u590d\u5230\u4efb\u610f\u65f6\u95f4\u70b9\uff1f\n1.1.8 NFS \u548c SMB \u662f\u6700\u5e38\u89c1\u7684\u4e24\u79cd NAS\uff08Network Attached Storage\uff09\u534f\u8bae\uff0c\u5f53\u628a\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u540c\u65f6\u901a\u8fc7 NFS \u548c SMB \u534f\u8bae\u5171\u4eab\u7ed9\u591a\u4e2a\u4e3b\u673a\u8bbf\u95ee\u65f6\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u8bf4\u6cd5\u662f\u9519\u8bef\u7684\n1.1.9 \u8f93\u5165 ping IP \u540e\u6572\u56de\u8f66\uff0c\u53d1\u5305\u524d\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n1.2.0 \u8bf7\u89e3\u91ca\u4e0b\u4e3a\u4ec0\u4e48\u9e7f\u6657\u53d1\u5e03\u604b\u60c5\u7684\u65f6\u5019\uff0c\u5fae\u535a\u7cfb\u7edf\u4f1a\u5d29\u6e83\uff0c\u5982\u4f55\u89e3\u51b3\uff1f\n1.2.1 \u73b0\u6709\u4e00\u6279\u90ae\u4ef6\u9700\u8981\u53d1\u9001\u7ed9\u8ba2\u9605\u987e\u5ba2\uff0c\u4e14\u6709\u4e00\u4e2a\u96c6\u7fa4\uff08\u96c6\u7fa4\u7684\u8282\u70b9\u6570\u4e0d\u5b9a\uff0c\u4f1a\u52a8\u6001\u6269\u5bb9\u7f29\u5bb9\uff09\u6765\u8d1f\u8d23\u5177\u4f53\u7684\u90ae\u4ef6\u53d1\u9001\u4efb\u52a1\uff0c\u5982\u4f55\u8ba9\u7cfb\u7edf\u5c3d\u5feb\u5730\u5b8c\u6210\u53d1\u9001\uff1f\n1.2.2 \u6709\u4e00\u6279\u6c14\u8c61\u89c2\u6d4b\u7ad9\uff0c\u73b0\u9700\u8981\u83b7\u53d6\u8fd9\u4e9b\u7ad9\u70b9\u7684\u89c2\u6d4b\u6570\u636e\uff0c\u5e76\u5b58\u50a8\u5230 Hive \u4e2d\u3002\u4f46\u662f\u6c14\u8c61\u5c40\u53ea\u63d0\u4f9b\u4e86 api \u67e5\u8be2\uff0c\u6bcf\u6b21\u53ea\u80fd\u67e5\u8be2\u5355\u4e2a\u89c2\u6d4b\u70b9\u3002\u90a3\u4e48\u5982\u679c\u80fd\u591f\u65b9\u4fbf\u5feb\u901f\u5730\u83b7\u53d6\u5230\u6240\u6709\u7684\u89c2\u6d4b\u70b9\u7684\u6570\u636e\uff1f\n1.2.3 \u5982\u4f55\u5b9e\u73b0\u4e24\u91d1\u989d\u6570\u636e\u76f8\u52a0\uff08\u6700\u591a\u5c0f\u6570\u70b9\u4e24\u4f4d\uff09\n1.2.4 \u5173\u4e8e\u5e76\u884c\u8ba1\u7b97\u7684\u4e00\u4e9b\u57fa\u7840\u5f00\u653e\u95ee\u9898\n1.2.5 \u8bf7\u8ba1\u7b97XILINX\u516c\u53f8VU9P\u82af\u7247\u7684\u7b97\u529b\u76f8\u5f53\u4e8e\u591a\u5c11TOPS\uff0c\u7ed9\u51fa\u8ba1\u7b97\u8fc7\u7a0b\u4e0e\u516c\u5f0f\n1.2.6 \u4e00\u9897\u73b0\u4ee3\u5904\u7406\u5668\uff0c\u6bcf\u79d2\u5927\u6982\u53ef\u4ee5\u6267\u884c\u591a\u5c11\u6761\u7b80\u5355\u7684MOV\u6307\u4ee4\uff0c\u6709\u54ea\u4e9b\u4e3b\u8981\u7684\u5f71\u54cd\u56e0\u7d20\n1.2.7 \u8bf7\u5206\u6790 MaxCompute \u4ea7\u54c1\u4e0e\u5206\u5e03\u5f0f\u6280\u672f\u7684\u5173\u7cfb\u3001\u5f53\u524d\u5927\u6570\u636e\u8ba1\u7b97\u5e73\u53f0\u7c7b\u4ea7\u54c1\u7684\u5e02\u573a\u73b0\u72b6\u548c\u53d1\u5c55\u8d8b\u52bf\n1.2.8 \u5bf9\u5927\u6570\u636e\u5e73\u53f0\u4e2d\u7684\u5143\u6570\u636e\u7ba1\u7406\u662f\u600e\u4e48\u7406\u89e3\u7684\uff0c\u5143\u6570\u636e\u6536\u96c6\u7ba1\u7406\u4f53\u7cfb\u662f\u600e\u4e48\u6837\u7684\uff0c\u4f1a\u5bf9\u5927\u6570\u636e\u5e94\u7528\u6709\u4ec0\u4e48\u6837\u7684\u5f71\u54cd\n1.2.9 \u4f60\u7406\u89e3\u5e38\u89c1\u5982\u963f\u91cc\uff0c\u548c\u53cb\u5546\u5927\u6570\u636e\u5e73\u53f0\u7684\u6280\u672f\u4f53\u7cfb\u5dee\u5f02\u4ee5\u53ca\u53d1\u5c55\u8d8b\u52bf\u548c\u6280\u672f\u74f6\u9888\uff0c\u5728\u5b58\u50a8\u548c\u8ba1\u7b97\u4e24\u4e2a\u65b9\u9762\u8fdb\u884c\u6982\u8ff0\n1.3.0 \u5728\u4e91\u8ba1\u7b97\u5927\u6570\u636e\u5904\u7406\u573a\u666f\u4e2d\uff0c\u6bcf\u5929\u8fd0\u884c\u7740\u6210\u5343\u4e0a\u4e07\u7684\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8981\u8fdb\u884c IO \u8bfb\u5199\u3002\u5b58\u50a8\u7cfb\u7edf\u4e3a\u4e86\u66f4\u597d\u7684\u670d\u52a1\uff0c\u7ecf\u5e38\u4f1a\u4fdd\u8bc1\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4f18\u5148\u6267\u884c\u3002\u5f53\u591a\u4e2a\u4f5c\u4e1a\u6216\u7528\u6237\u8bbf\u95ee\u5b58\u50a8\u7cfb\u7edf\u65f6,\u5982\u4f55\u4fdd\u8bc1\u4f18\u5148\u7ea7\u548c\u516c\u5e73\u6027\n1.3.1 \u6700\u5927\u9891\u7387\u6808\n1.3.2 \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\n1.3.3 \u5982\u679c\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u901a\u7528\u7684\u3001\u652f\u6301\u5404\u79cd\u6570\u636e\u5e93\u79d2\u7ea7\u5907\u4efd\u548c\u6062\u590d\u7684\u7cfb\u7edf\uff0c\u4f60\u4f1a\u5982\u4f55\u8bbe\u8ba1\n1.3.4 \u5982\u679c\u8ba9\u4f60\u6765\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u6570\u636e\u5e93\u3001NOSQL \u548c\u5927\u6570\u636e\u4e4b\u95f4\u6570\u636e\u5b9e\u65f6\u6d41\u52a8\u7684\u6570\u636e\u6d41\u53ca\u5904\u7406\u7684\u7cfb\u7edf\uff0c\u4f60\u4f1a\u8003\u8651\u54ea\u4e9b\u95ee\u9898\uff1f\u5982\u4f55\u8bbe\u8ba1\uff1f\n1.3.5 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\u7684\u7d22\u5f15\uff0c\u8fd9\u4e24\u4e2a\u7d22\u5f15\u6307\u5411\u7684\u6570\u5b57\u7684\u52a0\u548c\u7b49\u4e8e\u6307\u5b9a\u7684\u6574\u6570\u3002\u9700\u8981\u6700\u4f18\u7684\u7b97\u6cd5\uff0c\u5206\u6790\u7b97\u6cd5\u7684\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\n1.3.6 \u5047\u5982\u7ed9\u4f60\u4e00\u4e2a\u65b0\u4ea7\u54c1\uff0c\u4f60\u5c06\u4ece\u54ea\u4e9b\u65b9\u9762\u6765\u4fdd\u969c\u5b83\u7684\u8d28\u91cf\uff1f\n1.3.7 \u8bf7\u8bc4\u4f30\u4e00\u4e0b\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\uff1f\n\n\u534e\u4e3a\u7bc7\n\n2.1.0 static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\n2.1.1 \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n2.1.2 \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027\n2.1.3 \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f\n2.1.4 \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f\n2.1.5 \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f\n2.1.6 \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f\n2.1.7 \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f\n2.1.8 \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\n2.1.9 Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f\n2.2.0 Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f\n2.2.1 IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f\n2.2.2 \u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002\n2.2.3 \u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\n2.2.4 int A[nSize]\uff0c\u5176\u4e2d\u9690\u85cf\u7740\u82e5\u5e720\uff0c\u5176\u4f59\u975e0\u6574\u6570\uff0c\u5199\u4e00\u4e2a\u51fd\u6570int Func(int* A, int nSize)\uff0c\u4f7fA\u628a0\u79fb\u81f3\u540e\u9762\uff0c\u975e0\u6574\u6570\u79fb\u81f3\u6570\u7ec4\u524d\u9762\u5e76\u4fdd\u6301\u6709\u5e8f\uff0c\u8fd4\u56de\u503c\u4e3a\u539f\u6570\u636e\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a0\u7684\u4e0b\u6807\u3002\n2.2.5 \u5199\u4e00\u4e2a\u7a0b\u5e8f, \u8981\u6c42\u529f\u80fd\uff1a\u6c42\u51fa\u75281\uff0c2\uff0c5\u8fd9\u4e09\u4e2a\u6570\u4e0d\u540c\u4e2a\u6570\u7ec4\u5408\u7684\u548c\u4e3a100\u7684\u7ec4\u5408\u4e2a\u6570\n2.2.6 \u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u4ece\u5c0f\u5199\u8f6c\u4e3a\u5927\u5199\n2.2.7 \u968f\u673a\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u5bf9\u79f0\u6570\uff08\u56de\u6587\u6570\uff09\uff08\u59823\uff0c121\uff0c12321\uff0c45254\uff09\u3002\u4e0d\u80fd\u7528\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\n2.2.8 \u6c422~2000\u7684\u6240\u6709\u7d20\u6570.\u6709\u8db3\u591f\u7684\u5185\u5b58,\u8981\u6c42\u5c3d\u91cf\u5feb\n2.2.9 A,B,C,D\u56db\u4e2a\u8fdb\u7a0b\uff0cA\u5411buf\u91cc\u9762\u5199\u6570\u636e\uff0cB,C,D\u5411buf\u91cc\u9762\u8bfb\u6570\u636e\uff0c\u5f53A\u5199\u5b8c\uff0c\u4e14B\uff0cC\uff0cD\u90fd\u8bfb\u4e00\u6b21\u540e\uff0cA\u624d\u80fd\u518d\u5199\u3002\u7528P\uff0cV\u64cd\u4f5c\u5b9e\u73b0\u3002\n2.3.0 \u5c06\u5355\u5411\u94fe\u8868reverse\uff0c\u5982ABCD\u53d8\u6210DCBA\uff0c\u53ea\u80fd\u641c\u7d22\u94fe\u8868\u4e00\u6b21\u3002\n2.3.1 \u5c06\u4e8c\u53c9\u6811\u7684\u4e24\u4e2a\u5b69\u5b50\u6362\u4f4d\u7f6e\uff0c\u5373\u5de6\u53d8\u53f3\uff0c\u53f3\u53d8\u5de6\u3002\u4e0d\u80fd\u7528\u9012\u89c4\u3002\n2.3.2 \u4ee5\u4e0b\u5c5e\u4e8e\u7269\u7406\u5c42\u7684\u8bbe\u5907\u662f\uff1f\n2.3.3 \u5728\u4ee5\u592a\u7f51\u4e2d\uff0c\u662f\u6839\u636e\uff08\uff09\u5730\u5740\u6765\u533a\u5206\u4e0d\u540c\u7684\u8bbe\u5907\u7684\uff1f\n2.3.4 \u4ee5\u4e0b\u4e3a\u4f20\u8f93\u5c42\u534f\u8bae\u7684\u662f\uff1f\n2.3.5 \u4ee5\u4e0b\u5bf9MAC\u5730\u5740\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff1f\n2.3.6 \u4ee5\u4e0b\u5c5e\u4e8e\u6570\u636e\u94fe\u8def\u5c42\u529f\u80fd\u7684\u662f\uff1f\n2.3.7 IEEE802.3u\u6807\u51c6\u662f\u6307\uff1f\n2.3.8 \u5982\u679c\u8981\u5c06\u4e24\u8ba1\u7b97\u673a\u901a\u8fc7\u53cc\u7ede\u7ebf\u76f4\u63a5\u8fde\u63a5\uff0c\u6b63\u786e\u7684\u7ebf\u5e8f\u662f\uff1f\n2.3.9 \u5728V.35\u548cV.24\u89c4\u7a0b\u4e2d\uff0c\u63a7\u5236\u4fe1\u53f7RTS\u8868\u793a\uff1f\n2.4.0 \u8def\u7531\u5668\u4f5c\u4e3a\u7f51\u7edc\u4e92\u8fde\u8bbe\u5907\uff0c\u5fc5\u987b\u5177\u5907\u4ee5\u4e0b\u54ea\u4e9b\u7279\u70b9\uff1f\n2.4.1 \u8def\u7531\u5668\u7684\u4f5c\u7528\u6709\uff1f\n2.4.2 \u8c03\u7528\u4e0a\u4e00\u6761\u5386\u53f2\u547d\u4ee4\u7684\u5feb\u6377\u952e\u662f\uff1f\n2.4.3 \u4ea4\u6362\u673a\u5de5\u4f5c\u5728OSI\u4e03\u5c42\u7684\u54ea\u4e00\u5c42\uff1f\n2.4.4 \u4ee5\u4e0b\u5bf9CSMA\/CD\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff1f\n2.4.5 \u4ee5\u4e0b\u5bf9STORE ANDFORWARD\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff1f\n2.4.6 \u4ee5\u4e0b\u5bf9\u4ea4\u6362\u673a\u5de5\u4f5c\u65b9\u5f0f\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff1f\n2.4.7 VLAN\u7684\u4e3b\u8981\u4f5c\u7528\u6709\uff1f\n2.4.8 \u5728\u4ea4\u6362\u673a\u4e2d\u7528\u6237\u6743\u9650\u5206\u4e3a\u51e0\u4e2a\u7ea7\u522b\uff1f\n2.4.9 \u5728\u8def\u7531\u5668\u7684\u914d\u7f6e\u8fc7\u7a0b\u4e2d\u67e5\u8be2\u4ee5S\u5f00\u5934\u6240\u6709\u547d\u4ee4\u7684\u65b9\u6cd5\u662f\uff1f\n2.5.0 \u7b2c\u4e00\u6b21\u914d\u7f6e\u8def\u7531\u5668\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\u4e3a\uff1f\n2.5.1 \u5728\u4f55\u79cd\u72b6\u6001\u4e0b\u53ef\u4ee5\u4e3a\u8def\u7531\u5668\u6539\u540d\uff1f\n2.5.2 \u67d0\u516c\u53f8\u7533\u8bf7\u5230\u4e00\u4e2aC\u7c7bIP\u5730\u5740\uff0c\u4f46\u8981\u8fde\u63a56\u4e2a\u7684\u5b50\u516c\u53f8\uff0c\u6700\u5927\u7684\u4e00\u4e2a\u5b50\u516c\u53f8\u6709 26\u53f0\u8ba1\u7b97\u673a\uff0c\u6bcf\u4e2a\u5b50\u516c\u53f8\u5728\u4e00\u4e2a\u7f51\u6bb5\u4e2d\uff0c\u5219\u5b50\u7f51\u63a9\u7801\u5e94\u8bbe\u4e3a\uff1f\n2.5.3 \u4e0e10.110.12.29mask 255.255.255.224\u5c5e\u4e8e\u540c\u4e00\u7f51\u6bb5\u7684\u4e3b\u673aIP\u5730\u5740\u662f\uff1f\n2.5.4 ARP\u534f\u8bae\u7684\u4f5c\u7528\u662f\uff1f\n2.5.5 \u5f53\u8def\u7531\u5668\u63a5\u6536\u7684IP\u62a5\u6587\u7684TTL\u503c\u7b49\u4e8e1\u65f6\uff0c\u91c7\u53d6\u7684\u7b56\u7565\u662f\uff1f\n2.5.6 \u5728NetWare \u7f51\u7edc\u4e2d\uff0c\u5ba2\u6237\u9700\u8981\u8bbf\u95ee\u67d0\u4e2a\u7c7b\u578b\u7684\u670d\u52a1\u5668\u65f6\uff0c\u9996\u5148\u8981\u53d1\u9001\u4e00\u4e2a \uff08\uff09\u5e7f\u64ad\u62a5\u6587\u6765\u5bfb\u627e\u670d\u52a1\u5668\uff1f\n2.5.7 IPX\u5730\u5740\u7f51\u7edc\u5730\u5740\u6709\uff08 \uff09\u4e2a\u5b57\u8282\uff1f\n2.5.8 \u5bf9\u4e8e\u5e27\u4e2d\u7ee7\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff1f\n2.5.9 \u5bf9\u4e8eINVERSE ARP\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff1f\n\n\u767e\u5ea6\u7bc7\n\n3.1.0 \u5728\u51fd\u6570\u5185\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u7528gets\u51fd\u6570\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u5982\u679c\u8f93\u5165\u8d8a\u754c\uff0c\u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u4f1a\u5d29\u6e83\uff1f\n3.1.1 C++\u4e2d\u5f15\u7528\u4e0e\u6307\u9488\u7684\u533a\u522b\n3.1.2 C\/C++\u7a0b\u5e8f\u7684\u5185\u5b58\u5206\u533a\n3.1.3 \u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\u3001\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u5b9e\u73b0\u4ee5\u53ca\u4f18\u5316\u65b9\u6cd5\n3.1.4 IO\u6a21\u578b\u2014\u2014IO\u591a\u8def\u590d\u7528\u673a\u5236?\n3.1.5 \u5e38\u7528\u7684Linux\u547d\u4ee4\n3.1.6 C\u4e2d\u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u578b\u6709\u54ea\u4e9b\uff1f\n3.1.7 \u52a8\u6001\u89c4\u5212\u7684\u672c\u8d28\n3.1.8 \u5b9e\u8df5\u4e2d\u5982\u4f55\u4f18\u5316MySQL?\n3.1.9 \u4ec0\u4e48\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e86\u7d22\u5f15\u4f46\u65e0\u6cd5\u4f7f\u7528?\n3.2.0 SQL\u8bed\u53e5\u7684\u4f18\u5316\n3.2.1 \u6570\u636e\u5e93\u7d22\u5f15\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u548c\u4f18\u5316\n3.2.2 HTTP\u548cHTTPS\u7684\u4e3b\u8981\u533a\u522b?\n3.2.3 \u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u9ad8\u5e76\u53d1\u7684\u7cfb\u7edf?\n3.2.4 \u4e24\u6761\u76f8\u4ea4\u7684\u5355\u5411\u94fe\u8868\uff0c\u5982\u4f55\u6c42\u4ed6\u4eec\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9?\n3.2.5 \u6c42\u5355\u5411\u5c40\u90e8\u5faa\u73af\u94fe\u8868\u7684\u73af\u5165\u53e3?\n3.2.6 IP\u5730\u5740\u5982\u4f55\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8?\n3.2.7 new\/delete\u548cmalloc\/free\u7684\u5e95\u5c42\u5b9e\u73b0?\n3.2.8 overload\u3001override\u3001overwrite\u7684\u4ecb\u7ecd?\n3.2.9 \u5c0f\u7aef\/\u5927\u7aef\u673a\u5668?\n3.3.0 \u5b88\u62a4\u8fdb\u7a0b\n3.3.1 \u591a\u7ebf\u7a0b\u7684\u4f18\u7f3a\u70b9\n3.3.2 \u957f\u8fde\u63a5\u4e0e\u77ed\u8fde\u63a5\n3.3.3 \u4e8c\u5206\u56fe\u5e94\u7528\u4e8e\u6700\u4f73\u5339\u914d\u95ee\u9898\uff08\u6e38\u5ba2\u5bf9\u623f\u95f4\u7684\u6ee1\u610f\u5ea6\u4e4b\u548c\u6700\u5927\u95ee\u9898\uff09\n3.3.4 class\u4e0estruct\u7684\u533a\u522b\uff1f\n3.3.5 \u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\n3.3.6 menset()\u51fd\u6570\n3.3.7 \u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u5bf9\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u7b97\u5f97\u52301\u9700\u8981\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\u64cd\u4f5c\u89c4\u5219\u4e3a\uff1a\u5982\u679cn\u4e3a\u5076\u6570\uff0c\u5c06\u5176\u9664\u4ee52\uff1b\u5982\u679cn\u4e3a\u5947\u6570\uff0c\u53ef\u4ee5\u52a01\u6216\u51cf1\uff1b\u4e00\u76f4\u5904\u7406\u4e0b\u53bb\u3002\n3.3.8 \u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7ec4\n3.3.9 \u4e00\u4e2a\u5927\u7684\u542b\u670950M\u4e2aURL\u7684\u8bb0\u5f55\uff0c\u4e00\u4e2a\u5c0f\u7684\u542b\u6709500\u4e2aURL\u7684\u8bb0\u5f55\uff0c\u627e\u51fa\u4e24\u4e2a\u8bb0\u5f55\u91cc\u76f8\u540c\u7684URL\n3.4.0 \u6d77\u91cf\u65e5\u5fd7\u6570\u636e\uff0c\u63d0\u53d6\u51fa\u67d0\u65e5\u8bbf\u95ee\u767e\u5ea6\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2aIP\n3.4.1 \u670910\u4e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef61G\uff0c\u6bcf\u4e2a\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\u90fd\u5b58\u653e\u7684\u662f\u7528\u6237\u7684query\uff0c\u6bcf\u4e2a\u6587\u4ef6\u7684query\u90fd\u53ef\u80fd\u91cd\u590d\u3002\u5982\u4f55\u6309\u7167query\u7684\u9891\u5ea6\u6392\u5e8f\uff1f\n3.4.2 \u8682\u8681\u722c\u6746\u95ee\u9898\n3.4.3 \u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4e00\u4e2aurl\u540e\u56de\u8f66\uff0c\u540e\u53f0\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6bd4\u5982\u8f93\u5165url\u540e\uff0c\u4f60\u770b\u5230\u4e86\u767e\u5ea6\u7684\u9996\u9875\uff0c\u90a3\u4e48\u8fd9\u4e00\u5207\u662f\u5982\u4f55\u53d1\u751f\u7684\u5462\uff1f\n3.4.4 \u5224\u65ad\u4e24\u68f5\u6811\u662f\u5426\u76f8\u7b49\uff0c\u8bf7\u5b9e\u73b0\u4e24\u68f5\u6811\u662f\u5426\u76f8\u7b49\u7684\u6bd4\u8f83\uff0c\u76f8\u7b49\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de\u5176\u4ed6\u503c\uff0c\u5e76\u8bf4\u660e\u7b97\u6cd5\u590d\u6742\u5ea6\n3.4.5 \u4e09\u4e2a\u8b66\u5bdf\u548c\u4e09\u4e2a\u56da\u5f92\u7684\u8fc7\u6cb3\u95ee\u9898\n3.4.6 \u4ece300\u4e07\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u6700\u70ed\u95e8\u768410\u6761\n3.4.7 \u5982\u4f55\u627e\u51fa\u5b57\u5178\u4e2d\u7684\u5144\u5f1f\u5355\u8bcd\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcda\uff0c\u5982\u679c\u901a\u8fc7\u4ea4\u6362\u5355\u8bcd\u4e2d\u5b57\u6bcd\u7684\u987a\u5e8f\u53ef\u4ee5\u5f97\u5230\u53e6\u5916\u7684\u5355\u8bcdb\uff0c\u90a3\u4e48\u5b9a\u4e49b\u662fa\u7684\u5144\u5f1f\u5355\u8bcd\u3002\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u5178\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u5355\u8bcd\uff0c\u5982\u4f55\u6839\u636e\u5b57\u5178\u627e\u51fa\u8fd9\u4e2a\u5355\u8bcd\u6709\u591a\u5c11\u4e2a\u5144\u5f1f\u5355\u8bcd\uff1f\n3.4.8 \u627e\u51fa\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u6570\u7ec4\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u8d85\u8fc7\u4e86\u4e00\u534a\uff0c\u8bf7\u7528O(n)\u7684\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u627e\u51fa\u8fd9\u4e2a\u6570\u3002\n3.4.9 \u627e\u51fa\u88ab\u4fee\u6539\u8fc7\u7684\u6570\u5b57\n3.5.0 \u8bbe\u8ba1DNS\u670d\u52a1\u5668\u4e2dcache\u7684\u6570\u636e\u7ed3\u6784\u3002\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2aDNS\u7684Cache\u7ed3\u6784\uff0c\u8981\u6c42\u80fd\u591f\u6ee1\u8db3\u6bcf\u79d25000\u4ee5\u4e0a\u7684\u67e5\u8be2\uff0c\u6ee1\u8db3IP\u6570\u636e\u7684\u5feb\u901f\u63d2\u5165\uff0c\u67e5\u8be2\u7684\u901f\u5ea6\u8981\u5feb\u3002\uff08\u9898\u76ee\u8fd8\u7ed9\u51fa\u4e86\u4e00\u7cfb\u5217\u7684\u6570\u636e\uff0c\u6bd4\u5982\uff1a\u7ad9\u70b9\u6570\u603b\u5171\u4e3a5000\u4e07\uff0cIP\u5730\u5740\u67091000\u4e07\uff0c\u7b49\u7b49\uff09\n3.5.1 \u627e\u51fa\u7ed9\u5b9a\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5e8f\u53f7\n3.5.2 \u627e\u51fa\u7b2ck\u5927\u7684\u6570\u5b57\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u30013\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\n3.5.3 \u7ed940\u4ebf\u4e2a\u4e0d\u91cd\u590d\u7684unsigned int\u7684\u6574\u6570\uff0c\u6ca1\u6392\u8fc7\u5e8f\u7684\uff0c\u7136\u540e\u518d\u7ed9\u51e0\u4e2a\u6570\uff0c\u5982\u4f55\u5feb\u901f\u5224\u65ad\u8fd9\u51e0\u4e2a\u6570\u662f\u5426\u5728\u90a340\u4ebf\u4e2a\u6570\u5f53\u4e2d?\n3.5.4 \u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u670910G\u4e2a\u6574\u6570\uff0c\u4e71\u5e8f\u6392\u5217\uff0c\u8981\u6c42\u627e\u51fa\u4e2d\u4f4d\u6570\u3002\u5185\u5b58\u9650\u5236\u4e3a2G\u3002\n3.5.5 \u65f6\u5206\u79d2\u9488\u5728\u4e00\u5929\u4e4b\u7c7b\u91cd\u5408\u591a\u5c11\u6b21\uff1f\uff0824\u5c0f\u65f6\uff09\n3.5.6 \u5c06\u591a\u4e2a\u96c6\u5408\u5408\u5e76\u6210\u6ca1\u6709\u4ea4\u96c6\u7684\u96c6\u5408\u3002\n3.5.7 \u5e73\u9762\u5185\u670911\u4e2a\u70b9\uff0c\u7531\u5b83\u4eec\u8fde\u621048\u6761\u4e0d\u540c\u7684\u76f4\u7ebf\uff0c\u7531\u8fd9\u4e9b\u70b9\u53ef\u8fde\u6210\u591a\u5c11\u4e2a\u4e09\u89d2\u5f62\uff1f\n\n\u817e\u8baf\u7bc7\n\nJava\u57fa\u7840\n4.1.0 JAVA\u4e2d\u7684\u51e0\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u4ec0\u4e48\uff0c\u5404\u81ea\u5360\u7528\u591a\u5c11\u5b57\u8282\u3002\n4.1.1 String\u7c7b\u80fd\u88ab\u7ee7\u627f\u5417\uff0c\u4e3a\u4ec0\u4e48\u3002\n4.1.2 String\uff0cStringbuffer\uff0cStringBuilder\u7684\u533a\u522b\u3002\n4.1.3 ArrayList\u548cLinkedList\u6709\u4ec0\u4e48\u533a\u522b\u3002\n4.1.4 \u8bb2\u8bb2\u7c7b\u7684\u5b9e\u4f8b\u5316\u987a\u5e8f\uff0c\u6bd4\u5982\u7236\u7c7b\u9759\u6001\u6570\u636e\uff0c\u6784\u9020\u51fd\u6570\uff0c\u5b57\u6bb5\uff0c\u5b50\u7c7b\u9759\u6001\u6570\u636e\uff0c\u6784\u9020\u51fd\u6570\uff0c\u5b57\u6bb5\uff0c\u5f53new\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u7684\u6267\u884c\u987a\u5e8f\u3002\n4.1.5 \u7528\u8fc7\u54ea\u4e9bMap\u7c7b\uff0c\u90fd\u6709\u4ec0\u4e48\u533a\u522b\uff0cHashMap\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u5417,\u5e76\u53d1\u4e0b\u4f7f\u7528\u7684Map\u662f\u4ec0\u4e48\uff0c\u4ed6\u4eec\u5185\u90e8\u539f\u7406\u5206\u522b\u662f\u4ec0\u4e48\uff0c\u6bd4\u5982\u5b58\u50a8\u65b9\u5f0f\uff0chashcode\uff0c\u6269\u5bb9\uff0c\u9ed8\u8ba4\u5bb9\u91cf\u7b49\u3002\n4.1.6 JAVA8\u7684ConcurrentHashMap\u4e3a\u4ec0\u4e48\u653e\u5f03\u4e86\u5206\u6bb5\u9501\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff0c\u5982\u679c\u4f60\u6765\u8bbe\u8ba1\uff0c\u4f60\u5982\u4f55\u8bbe\u8ba1\u3002\n4.1.7 \u6709\u6ca1\u6709\u6709\u987a\u5e8f\u7684Map\u5b9e\u73b0\u7c7b\uff0c\u5982\u679c\u6709\uff0c\u4ed6\u4eec\u662f\u600e\u4e48\u4fdd\u8bc1\u6709\u5e8f\u7684\u3002\n4.1.8 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u533a\u522b\uff0c\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7c7b\u4e48\uff0c\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\u4e48,\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u4e48\u3002\n4.1.9 \u7ee7\u627f\u548c\u805a\u5408\u7684\u533a\u522b\u5728\u54ea\u3002\n4.2.0 IO\u6a21\u578b\u6709\u54ea\u4e9b\uff0c\u8bb2\u8bb2\u4f60\u7406\u89e3\u7684nio \uff0c\u4ed6\u548cbio\uff0caio\u7684\u533a\u522b\u662f\u5565\uff0c\u8c08\u8c08reactor\u6a21\u578b\u3002\n4.2.1 \u53cd\u5c04\u7684\u539f\u7406\uff0c\u53cd\u5c04\u521b\u5efa\u7c7b\u5b9e\u4f8b\u7684\u4e09\u79cd\u65b9\u5f0f\u662f\u4ec0\u4e48\u3002\n4.2.2 \u53cd\u5c04\u4e2d\uff0cClass.forName\u548cClassLoader\u533a\u522b \u3002\n4.2.3 \u63cf\u8ff0\u52a8\u6001\u4ee3\u7406\u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5206\u522b\u8bf4\u51fa\u76f8\u5e94\u7684\u4f18\u7f3a\u70b9\u3002\n4.2.4 \u52a8\u6001\u4ee3\u7406\u4e0ecglib\u5b9e\u73b0\u7684\u533a\u522b\u3002\n4.2.5 \u4e3a\u4ec0\u4e48CGlib\u65b9\u5f0f\u53ef\u4ee5\u5bf9\u63a5\u53e3\u5b9e\u73b0\u4ee3\u7406\u3002\n4.2.6 final\u7684\u7528\u9014\u3002\n4.2.7 \u5199\u51fa\u4e09\u79cd\u5355\u4f8b\u6a21\u5f0f\u5b9e\u73b0 \u3002\n4.2.8 \u5982\u4f55\u5728\u7236\u7c7b\u4e2d\u4e3a\u5b50\u7c7b\u81ea\u52a8\u5b8c\u6210\u6240\u6709\u7684hashcode\u548cequals\u5b9e\u73b0\uff1f\u8fd9\u4e48\u505a\u6709\u4f55\u4f18\u52a3\u3002\n4.2.9 \u8bf7\u7ed3\u5408OO\u8bbe\u8ba1\u7406\u5ff5\uff0c\u8c08\u8c08\u8bbf\u95ee\u4fee\u9970\u7b26public\u3001private\u3001protected\u3001default\u5728\u5e94\u7528\u8bbe\u8ba1\u4e2d\u7684\u4f5c\u7528\u3002\n4.3.0 \u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d\u533a\u522b\u3002\n4.3.1 \u6570\u7ec4\u548c\u94fe\u8868\u6570\u636e\u7ed3\u6784\u63cf\u8ff0\uff0c\u5404\u81ea\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n4.3.2 error\u548cexception\u7684\u533a\u522b\uff0cCheckedException\uff0cRuntimeException\u7684\u533a\u522b\u3002\n4.3.3 \u8bf7\u5217\u51fa5\u4e2a\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\n4.3.4 \u5728\u81ea\u5df1\u7684\u4ee3\u7801\u4e2d\uff0c\u5982\u679c\u521b\u5efa\u4e00\u4e2ajava.lang.String\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u662f\u5426\u53ef\u4ee5\u88ab\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\uff1f\u4e3a\u4ec0\u4e48\u3002\n4.3.5 \u8bf4\u4e00\u8bf4\u4f60\u5bf9java.lang.Object\u5bf9\u8c61\u4e2dhashCode\u548cequals\u65b9\u6cd5\u7684\u7406\u89e3\u3002\u5728\u4ec0\u4e48\u573a\u666f\u4e0b\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002\n4.3.6 \u5728jdk1.5\u4e2d\uff0c\u5f15\u5165\u4e86\u6cdb\u578b\uff0c\u6cdb\u578b\u7684\u5b58\u5728\u662f\u7528\u6765\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u3002\n4.3.7 \u8fd9\u6837\u7684a.hashcode() \u6709\u4ec0\u4e48\u7528\uff0c\u4e0ea.equals(b)\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\n4.3.8 \u6709\u6ca1\u6709\u53ef\u80fd2\u4e2a\u4e0d\u76f8\u7b49\u7684\u5bf9\u8c61\u6709\u76f8\u540c\u7684hashcode\u3002\n4.3.9 Java\u4e2d\u7684HashSet\u5185\u90e8\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n4.4.0 \u4ec0\u4e48\u662f\u5e8f\u5217\u5316\uff0c\u600e\u4e48\u5e8f\u5217\u5316\uff0c\u4e3a\u4ec0\u4e48\u5e8f\u5217\u5316\uff0c\u53cd\u5e8f\u5217\u5316\u4f1a\u9047\u5230\u4ec0\u4e48\u95ee\u9898\uff0c\u5982\u4f55\u89e3\u51b3\u3002\n4.4.1 java8\u7684\u65b0\u7279\u6027\u3002\nJVM\n4.4.2 \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u6808\u5185\u5b58\u6ea2\u51fa\u3002\n4.4.3 JVM\u7684\u5185\u5b58\u7ed3\u6784\uff0cEden\u548cSurvivor\u6bd4\u4f8b\u3002\n4.4.4 JVM\u5185\u5b58\u4e3a\u4ec0\u4e48\u8981\u5206\u6210\u65b0\u751f\u4ee3\uff0c\u8001\u5e74\u4ee3\uff0c\u6301\u4e45\u4ee3\u3002\u65b0\u751f\u4ee3\u4e2d\u4e3a\u4ec0\u4e48\u8981\u5206\u4e3aEden\u548cSurvivor\u3002\n4.4.5 JVM\u4e2d\u4e00\u6b21\u5b8c\u6574\u7684GC\u6d41\u7a0b\u662f\u600e\u6837\u7684\uff0c\u5bf9\u8c61\u5982\u4f55\u664b\u5347\u5230\u8001\u5e74\u4ee3\uff0c\u8bf4\u8bf4\u4f60\u77e5\u9053\u7684\u51e0\u79cd\u4e3b\u8981\u7684JVM\u53c2\u6570\u3002\n4.4.6 \u4f60\u77e5\u9053\u54ea\u51e0\u79cd\u5783\u573e\u6536\u96c6\u5668\uff0c\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\uff0c\u91cd\u70b9\u8bb2\u4e0bcms\u548cG1\uff0c\u5305\u62ec\u539f\u7406\uff0c\u6d41\u7a0b\uff0c\u4f18\u7f3a\u70b9\u3002\n4.4.7 \u5783\u573e\u56de\u6536\u7b97\u6cd5\u7684\u5b9e\u73b0\u539f\u7406\u3002\n4.4.8 \u5f53\u51fa\u73b0\u4e86\u5185\u5b58\u6ea2\u51fa\uff0c\u4f60\u600e\u4e48\u6392\u9519\u3002\n4.4.9 JVM\u5185\u5b58\u6a21\u578b\u7684\u76f8\u5173\u77e5\u8bc6\u4e86\u89e3\u591a\u5c11\uff0c\u6bd4\u5982\u91cd\u6392\u5e8f\uff0c\u5185\u5b58\u5c4f\u969c\uff0chappen-before\uff0c\u4e3b\u5185\u5b58\uff0c\u5de5\u4f5c\u5185\u5b58\u7b49\u3002\n4.5.0 \u7b80\u5355\u8bf4\u8bf4\u4f60\u4e86\u89e3\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u6253\u7834\u53cc\u4eb2\u59d4\u6d3e\u4e48\uff0c\u600e\u4e48\u6253\u7834\u3002\n4.5.1 \u8bb2\u8bb2JAVA\u7684\u53cd\u5c04\u673a\u5236\u3002\n4.5.2 \u4f60\u4eec\u7ebf\u4e0a\u5e94\u7528\u7684JVM\u53c2\u6570\u6709\u54ea\u4e9b\u3002\n4.5.3 g1\u548ccms\u533a\u522b,\u541e\u5410\u91cf\u4f18\u5148\u548c\u54cd\u5e94\u4f18\u5148\u7684\u5783\u573e\u6536\u96c6\u5668\u9009\u62e9\u3002\n4.5.4 \u600e\u4e48\u6253\u51fa\u7ebf\u7a0b\u6808\u4fe1\u606f\u3002\n\u5f00\u6e90\u6846\u67b6\n4.5.5 \u7b80\u5355\u8bb2\u8bb2tomcat\u7ed3\u6784\uff0c\u4ee5\u53ca\u5176\u7c7b\u52a0\u8f7d\u5668\u6d41\u7a0b\uff0c\u7ebf\u7a0b\u6a21\u578b\u7b49\u3002\n4.5.6 tomcat\u5982\u4f55\u8c03\u4f18\uff0c\u6d89\u53ca\u54ea\u4e9b\u53c2\u6570 \u3002\n4.5.7 \u8bb2\u8bb2Spring\u52a0\u8f7d\u6d41\u7a0b\u3002\n4.5.8 Spring AOP\u7684\u5b9e\u73b0\u539f\u7406\u3002\n4.5.9 \u8bb2\u8bb2Spring\u4e8b\u52a1\u7684\u4f20\u64ad\u5c5e\u6027\u3002\n4.6.0 Spring\u5982\u4f55\u7ba1\u7406\u4e8b\u52a1\u7684\u3002\n4.6.1 Spring\u600e\u4e48\u914d\u7f6e\u4e8b\u52a1\uff08\u5177\u4f53\u8bf4\u51fa\u4e00\u4e9b\u5173\u952e\u7684xml \u5143\u7d20\uff09\u3002\n4.6.2 \u8bf4\u8bf4\u4f60\u5bf9Spring\u7684\u7406\u89e3\uff0c\u975e\u5355\u4f8b\u6ce8\u5165\u7684\u539f\u7406\uff1f\u5b83\u7684\u751f\u547d\u5468\u671f\uff1f\u5faa\u73af\u6ce8\u5165\u7684\u539f\u7406\uff0caop\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u8bf4\u8bf4aop\u4e2d\u7684\u51e0\u4e2a\u672f\u8bed\uff0c\u5b83\u4eec\u662f\u600e\u4e48\u76f8\u4e92\u5de5\u4f5c\u7684\u3002\n4.6.3 Springmvc \u4e2dDispatcherServlet\u521d\u59cb\u5316\u8fc7\u7a0b\u3002\n4.6.4 netty\u7684\u7ebf\u7a0b\u6a21\u578b\uff0cnetty\u5982\u4f55\u57fa\u4e8ereactor\u6a21\u578b\u4e0a\u5b9e\u73b0\u7684\u3002\n4.6.5 \u4e3a\u4ec0\u4e48\u9009\u62e9netty\u3002\n4.6.6 \u4ec0\u4e48\u662fTCP\u7c98\u5305\uff0c\u62c6\u5305\u3002\u89e3\u51b3\u65b9\u5f0f\u662f\u4ec0\u4e48\u3002\n4.6.7 netty\u7684fashwheeltimer\u7684\u7528\u6cd5\uff0c\u5b9e\u73b0\u539f\u7406\uff0c\u662f\u5426\u51fa\u73b0\u8fc7\u8c03\u7528\u4e0d\u591f\u51c6\u65f6\uff0c\u600e\u4e48\u89e3\u51b3\u3002\n4.6.8 netty\u7684\u5fc3\u8df3\u5904\u7406\u5728\u5f31\u7f51\u4e0b\u600e\u4e48\u529e\u3002\n4.6.9 netty\u7684\u901a\u8baf\u534f\u8bae\u662f\u4ec0\u4e48\u6837\u7684\u3002\n4.7.0 springmvc\u7528\u5230\u7684\u6ce8\u89e3\uff0c\u4f5c\u7528\u662f\u4ec0\u4e48\uff0c\u539f\u7406\u3002\n4.7.1 springboot\u542f\u52a8\u673a\u5236\u3002\n\u64cd\u4f5c\u7cfb\u7edf\n4.7.2 Linux\u7cfb\u7edf\u4e0b\u4f60\u5173\u6ce8\u8fc7\u54ea\u4e9b\u5185\u6838\u53c2\u6570\uff0c\u8bf4\u8bf4\u4f60\u77e5\u9053\u7684\u3002\n4.7.3 Linux\u4e0bIO\u6a21\u578b\u6709\u51e0\u79cd\uff0c\u5404\u81ea\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002\n4.7.4 epoll\u548cpoll\u6709\u4ec0\u4e48\u533a\u522b\u3002\n4.7.5 \u5e73\u65f6\u7528\u5230\u54ea\u4e9bLinux\u547d\u4ee4\u3002\n4.7.6 \u7528\u4e00\u884c\u547d\u4ee4\u67e5\u770b\u6587\u4ef6\u7684\u6700\u540e\u4e94\u884c\u3002\n4.7.7 \u7528\u4e00\u884c\u547d\u4ee4\u8f93\u51fa\u6b63\u5728\u8fd0\u884c\u7684java\u8fdb\u7a0b\u3002\n4.7.8 \u4ecb\u7ecd\u4e0b\u4f60\u7406\u89e3\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7ebf\u7a0b\u5207\u6362\u8fc7\u7a0b\u3002\n4.7.9 \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\u3002\n4.8.0 top \u547d\u4ee4\u4e4b\u540e\u6709\u54ea\u4e9b\u5185\u5bb9\uff0c\u6709\u4ec0\u4e48\u4f5c\u7528\u3002\n4.8.1 \u7ebf\u4e0aCPU\u7206\u9ad8\uff0c\u8bf7\u95ee\u4f60\u5982\u4f55\u627e\u5230\u95ee\u9898\u6240\u5728\u3002\n\n\u7f8e\u56e2\u7bc7\n\n5.1.0 java\u865a\u62df\u673a\u5185\u5b58\u6a21\u578b\n5.1.1 \u5185\u5b58\u6ea2\u51fa\u4e00\u822c\u53d1\u751f\u5728\u54ea\u4e2a\u533a\uff1f\u6c38\u4e45\u4ee3\u4f1a\u4e0d\u4f1a\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\uff1f\n5.1.2 \u52a8\u6001\u52a0\u8f7d\u7c7b\u7684\u6846\u67b6\u4e86\u89e3\u54ea\u4e9b\uff1f\n5.1.3 \u52a8\u6001\u4ee3\u7406\u4e00\u822c\u6709\u54ea\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1f\u52a8\u6001\u4ee3\u7406\u7684\u5e94\u7528\u573a\u666f\u6709\u54ea\u4e9b\uff1f\n5.1.4 \u6808\u4f1a\u4e0d\u4f1a\u6ea2\u51fa\uff1f\u6808\u6ea2\u51fa\u4e00\u822c\u629b\u4ec0\u4e48\u5f02\u5e38\uff1fjvm\u5728\u54ea\u91cc\u8bbe\u7f6e\u6808\u7684\u5927\u5c0f\uff1f\u8bbe\u7f6e\u7684\u53c2\u6570\u662f\u4ec0\u4e48\uff1f\n5.1.5 \u7528\u8fc7\u54ea\u4e9b\u547d\u4ee4\u67e5\u770bjvm\u7684\u72b6\u6001\u3001\u5806\u6808\u4fe1\u606f\uff1f\n5.1.6 jvm\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff1f\n5.1.7 java\u7c7b\u52a0\u8f7d\u673a\u5236\uff1f\u5982\u4f55\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\uff1ffindClass\u4e0eloadClass\u7684\u533a\u522b\uff1f\n5.1.8 String\u3001StringBuffer\u3001StringBuilder\u7684\u533a\u522b\uff1f\u5bf9\u5e94\u7684\u4f7f\u7528\u573a\u666f\uff1f\n5.1.9 \u5982\u4f55\u5b9e\u73b0\u4e0d\u53ef\u53d8\u7684\u7c7b\uff1f\n5.2.0 \u6d45\u590d\u5236\u548c\u6df1\u590d\u5236\uff1f\u600e\u6837\u5b9e\u73b0\u6df1\u590d\u5236\uff1f\n5.2.1 HashMap\u3001HashTable\u3001ConcurrentHashMap\u7684\u533a\u522b\uff1f\n5.2.2 CAS\u662f\u4e00\u79cd\u4ec0\u4e48\u6837\u7684\u540c\u6b65\u673a\u5236\uff1f\n5.2.3 NIO\u7684\u539f\u7406\uff0c\u5305\u62ec\u54ea\u51e0\u4e2a\u7ec4\u4ef6\uff1f\n5.2.4 \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bjava\u7684\u53cd\u5c04\u673a\u5236\uff1f\u53cd\u5c04\u5728\u54ea\u4e9b\u5730\u65b9\u6709\u5e94\u7528\u573a\u666f\uff1f\n5.2.5 spring\u52a0\u8f7dbean\u7684\u6d41\u7a0b\uff1f\n5.2.6 java\u7ebf\u7a0b\u6c60\uff1f\u7ebf\u7a0b\u6c60\u6784\u9020\u51fd\u6570\u7684\u51e0\u4e2a\u53c2\u6570\u542b\u4e49\uff1fkeepAliveTime\u89e3\u91ca\u4e00\u4e0b\uff1f\n5.2.7 \u4e00\u4e2a\u63a5\u53e3\uff0c\u8981\u53bb\u8c03\u7528\u53e6\u59165\u4e2a\u63a5\u53e3\uff0c\u6bcf\u4e00\u4e2a\u63a5\u53e3\u90fd\u4f1a\u8fd4\u56de\u6570\u636e\u7ed9\u8fd9\u4e2a\u8c03\u7528\u63a5\u53e3\uff0c\u8c03\u7528\u63a5\u53e3\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u5408\u5e76\u5e76\u8fd4\u56de\u7ed9\u4e0a\u5c42\u3002\u8fd9\u6837\u4e00\u79cd\u573a\u666f\u53ef\u80fd\u7528\u5230\u5e76\u53d1\u5305\u4e0b\u7684\u54ea\u4e9b\u7c7b\uff1f\u4f60\u4f1a\u600e\u4e48\u53bb\u5b9e\u73b0\u8fd9\u6837\u7684\u4e1a\u52a1\u573a\u666f\uff1f\n5.2.8 CountDownLatch\u548cCyclicBarrier\u7684\u533a\u522b\uff1f\n5.2.9 \u7ebf\u7a0b\u52a0\u9501\u6709\u54ea\u4e9b\u65b9\u5f0f\uff1fsynchronized\u548clock\u7684\u533a\u522b\uff1f\n5.3.0 volatile\u5173\u952e\u5b57\u7684\u4f5c\u7528\uff1f\u4e3a\u4ec0\u4e48\u4f7f\u7528AtomicLong\u800c\u4e0d\u4f7f\u7528Long?AtomicLong\u7684\u5e95\u5c42\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\n5.3.1 mysql\u7684\u5b58\u50a8\u5f15\u64ce\u6709\u54ea\u51e0\u79cd\uff1f\n5.3.2 sql\u4f18\u5316\u6709\u54ea\u4e9b\u7740\u624b\u70b9\uff1f\u7ec4\u5408\u7d22\u5f15\u7684\u6700\u5de6\u524d\u7f00\u539f\u5219\u7684\u542b\u4e49\uff1f\n5.3.3 springmvc\u5904\u7406\u8bf7\u6c42\u7684\u6d41\u7a0b\uff1f\n5.3.4 spring\u7684\u4e8b\u52a1\u600e\u4e48\u4f7f\u7528\uff1f\u4e8b\u52a1\u56de\u6eda\uff1f\u81ea\u5b9a\u4e49\u5f02\u5e38\uff1f\n5.3.5 \u810f\u8bfb\uff1f\u5e7b\u8bfb\uff1f\n5.3.6 tcp\u56db\u6b21\u6325\u624b\u7684\u8fc7\u7a0b\uff1fTIME_WAIT\u4e3a\u4ec0\u4e48\u81f3\u5c11\u8bbe\u7f6e\u4e24\u500d\u7684MSL\u65f6\u95f4\uff1f\n5.3.7 get\u548cpost\u8bf7\u6c42\u7684\u533a\u522b\uff1f\n5.3.8 cookie\u548csession\u7684\u8bf7\u6c42\uff1f\n5.3.9 \u4e86\u89e3\u54ea\u4e9b\u5f00\u6e90\u7684\u4e2d\u95f4\u4ef6\uff1f\u7f13\u5b58\uff1f\u6d88\u606f\uff1f\u5206\u5e03\u5f0f\u6846\u67b6\uff1f\n5.4.0 \u7528\u5230\u8fc7\u54ea\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\uff1f\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0\uff1f\n5.4.1 \u6570\u636e\u5e93\u7684\u4e8b\u52a1\u5b9e\u73b0\u539f\u7406\u3001\u64cd\u4f5c\u8fc7\u7a0b\u3001\u5982\u4f55\u505a\u5230\u4e8b\u7269\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u7b49\u95ee\u9898\n5.4.2 \u6570\u636e\u5e93\u7684\u810f\u8bfb\uff0c\u5e7b\u8bfb\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u51fa\u73b0\u7684\u539f\u56e0\u539f\u7406\uff0c\u89e3\u51b3\u529e\u6cd5\n5.4.3 \u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b\u3001MVCC\n5.4.4 \u4e50\u89c2\u9501\u3001\u60b2\u89c2\u9501\u3001\u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501\u7684\u539f\u7406\u5b9e\u73b0\u4e0e\u533a\u522b\n5.4.5 \u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\n5.4.6 \u4e00\u81f4\u6027hash\u7b97\u6cd5\u539f\u7406\u4e0e\u5e94\u7528\n5.4.7 CAP\u539f\u5219\n5.4.8 CAS\u64cd\u4f5c\n5.4.9 \u5206\u5e03\u5f0fraft\u7b97\u6cd5\n\n\u5934\u6761\u7bc7\n\n6.1.0 5\u4e2a\u4eba\u53bb\u4e00\u4e2a\u6d77\u5c9b\u5bfb\u5b9d\uff0c\u6700\u540e\u4e00\u5171\u627e\u5230\u4e86100\u679a\u91d1\u5e01\u3002\u4ed6\u4eec\u7ea6\u5b9a\u4e86\u4e00\u4e2a\u5206\u914d\u65b9\u6848\u3002\n6.1.1 \u7ed9\u4f60\u4e00\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u6570\u53ef\u4ee5\u662f\u6b63\u6570\u3001\u8d1f\u6570\u3001\u96f6\uff0c\u8bf7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\uff1a\u8fd4\u56de\u8fd9\u4e2a\u6570\u7ec4\u6240\u6709\u6570\u7684\u5e73\u65b9\u503c\u4e2d\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u53d6\u503c\u3002\n6.1.2 \u4e00\u4e2a\u73af\u670910\u4e2a\u8282\u70b9\uff0c\u7f16\u53f70-9\u3002\u4ece0\u70b9\u51fa\u53d1\uff0c\u8d70N\u6b65\u53c8\u80fd\u56de\u52300\u70b9\uff0c\u5171\u6709\u591a\u5c11\u79cd\u8d70\u6cd5\uff1f\n6.1.3 \u4e00\u4e2a\u4e71\u5e8f\u6570\u7ec4\uff0c\u6c42\u7b2cK\u5927\u7684\u6570\u3002\u6392\u5e8f\u65b9\u5f0f\u4f7f\u7528\u5b57\u5178\u5e8f\u3002\n6.1.4 \u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6c42\u6700\u5927\u901a\u8def\u957f\u5ea6\u3002\uff08\u5373\u6700\u5927\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u4e4b\u548c\uff09\n6.1.5 \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\uff0c\u4f7f\u7528\u7ebf\u7a0b\u771f\u7684\u80fd\u8282\u7701\u65f6\u95f4\uff1f\n6.1.6 go\u534f\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f\uff0c\u4f7f\u7528\u534f\u7a0b\u771f\u7684\u80fd\u8282\u7701\u65f6\u95f4\uff1f\n6.1.7 \u6c34\u5e73\u89e6\u53d1\u8fb9\u6cbf\u89e6\u53d1\u7684\u533a\u522b\uff1f\u5728\u8fb9\u6cbf\u89e6\u53d1\u4e0b\uff0c\u4e00\u4e2asocket\u6709500\u7684\u6570\u636e\uff0c\u5df2\u8bfb\u53d6200\u7136\u540e\u4e0d\u518d\u5904\u7406\uff0c\u662f\u4e0d\u662f\u5269\u4e0b\u7684300\u5c31\u6c38\u8fdc\u65e0\u6cd5\u8bfb\u53d6\uff1f\n6.1.8 \u6709\u51fd\u6570\u5982\u4e0b\uff0c\u8f93\u51651\uff0c\u8fd4\u56de\u4ec0\u4e48\uff1f\n6.1.9 \u8bbe\u8ba1http\u534f\u8bae\uff0cA\u7aef\u53d1\u9001 AAAA\uff0c\u81f3\u5c11\u8ba9B\u7aef\u77e5\u9053AAAA\u5df2\u53d1\u9001\u5b8c\u6210\u3002\n6.2.0 \u6d41\u91cf\u603b\u5165\u53e3\u4e3aapi_gateway\uff0capi_gateway\u6302\u4e86\u4f1a\u5bfc\u81f4\u5168\u90e8\u6302\u6302\uff0c\u7528\u4ec0\u4e48\u673a\u5236\u589e\u5927\u53ef\u7528\u6027\uff1f\n6.2.1 mysql\u4e3a\u4ec0\u4e48\u8981\u7528b+\u6811\uff0c\u4e0d\u7528\u5e73\u8861\u4e8c\u53c9\u6811\u505a\u7d22\u5f15\u7ed3\u6784\uff1f\n6.2.2 \u521b\u5efa\u6570\u636e\u5e93\u7d22\u5f15\u5e94\u8be5\u600e\u4e48\u8003\u8651\uff1f\n6.2.3 \u4f7f\u7528int \u505aprimary key\u548c\u4f7f\u7528string \u6709\u4ec0\u4e48\u4f18\u52a3\uff1f\n6.2.4 \u6570\u636e\u5e93\u5206\u8868\u7684\u65b9\u6cd5\uff1f\n6.2.5 \u8868\u7ed3\u6784\uff0c\u8ba2\u5355\u7eaa\u5f55\u5982\u4e0b\uff0c\u5199\u4e00\u4e2a\u8bed\u53e5\uff0c\u6c42\u5356\u7684\u6700\u597d\u7684 top 10 product_id\u3002\n6.2.6 \u5fae\u670d\u52a1\uff0cA\u670d\u52a1\u8bf7\u6c42B\u670d\u52a1B1\u63a5\u53e3\uff0cB1\u63a5\u53e3\u53c8\u8bf7\u6c42A\u670d\u52a1A2\u63a5\u53e3\u3002\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898\uff1f\n6.2.7 \u4e0d\u4f7f\u7528\u9ad8\u7ea7\u5de5\u5177\uff0c\u53ea\u4f7f\u7528Linux\u81ea\u5e26\u7684\u5de5\u5177\uff0c\u4f60\u4f1a\u5982\u4f55debug?\n6.2.8 \u5982\u4f55\u9884\u4f30\u4e00\u4e2amysql\u8bed\u53e5\u7684\u6027\u80fd\uff1f\n6.2.9 go\u51fd\u6570\u4e2d\uff0c\u8fd4\u56de\u503c\u672a\u547d\u540d\uff0c\u53d1\u751f\u4e86panic\uff0c\u4f46\u662f\u5728\u51fd\u6570\u5185recover\u4e86\u3002\u51fd\u6570\u8fd4\u56de\u4ec0\u4e48\u503c\uff1f\n6.3.0 socket\u4e2d\uff0c\u5728tcp\u534f\u8bae\u5c42\u9762\uff0c\u6570\u636e\u5206\u4e3a10\u4e2a\u62a5\u6587\u53d1\u653e\u30021-7\u6b21\u5f88\u987a\u5229\uff0c\u7b2c8\u6b21\u4e22\u5931\u3002\u8fd9\u6b21\u901a\u4fe1\u4e00\u5b9a\u5931\u8d25\u5417\uff1f\u5982\u679c\u7b2c8\u6b21\u6570\u636e\u4f1a\u91cd\u53d1\uff0c\u90a3\u5728\u63a5\u6536\u7aef\u662f\u4e0d\u662f\uff1a\u5148\u8bfb\u53d6\u52301-7\u6b21\u7684\u6570\u636e\uff0c\u7136\u540e\u8bfb\u53d6\u52308-10\u6b21\u7684\u6570\u636e?\u8fd8\u662f9-10\u6b21\u7684\u6570\u636e\u4f1a\u5148\u5230\u8fbe\uff1f\n6.3.1 free -h\uff0cbuffers \u548ccached\u6709\u4ec0\u4e48\u4e0d\u540c\n6.3.2 \u540e\u53f0\u8fdb\u7a0b\u6709\u4ec0\u4e48\u7279\u70b9\uff0c\u5982\u679c\u8981\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u8fdb\u7a0b\u662f\u540e\u53f0\u8fdb\u7a0b\uff0c\u4f60\u4f1a\u8003\u8651\u4ec0\u4e48\n6.3.3 \u50f5\u5c38\u8fdb\u7a0b\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u4ea7\u751f\u4e00\u4e2a\u50f5\u5c38\u8fdb\u7a0b\uff0c\u5982\u4f55\u67e5\u627e\u50f5\u5c38\u8fdb\u7a0b\n6.3.4 \u5b64\u513f\u8fdb\u7a0b\u662f\u4ec0\u4e48\n6.3.5 \u4e00\u4e2a\u8fdb\u7a0b\u670920\u4e2a\u7ebf\u7a0b\uff0c\u5728\u67d0\u4e2a\u7ebf\u7a0b\u4e2d\u8c03\u7528fork\uff0c\u65b0\u7684\u8fdb\u7a0b\u4f1a\u670920\u4e2a\u7ebf\u7a0b\u5417\uff1f\n6.3.6 tcp\/ip \u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\n6.3.7 301\/302\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5e94\u7528\u4e0a\u6709\u4ec0\u4e48\u5f02\u540c\u3002\n6.3.8 50X\u76f8\u5173\u9519\u8bef\u7801\u7684\u5185\u6db5\u662f\u4ec0\u4e48\uff1f\n6.3.9 close wait\u548ctime wait\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u6392\u67e5\uff1f\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\n6.4.0 http req\u548cresp\u7684\u4e2d\u6570\u636e\u6709\u54ea\u4e9b\n6.4.1 \u4ec0\u4e48\u662f\u8fde\u63a5\u7684\u534a\u6253\u5f00\uff0c\u534a\u5173\u95ed\u72b6\u6001\n6.4.2 \u5047\u5982\u4e00\u4e2a\u4e1a\u52a1\u4f9d\u8d56\u5355\u70b9redis\uff0c\u6b64redis\u6545\u969c\u5c06\u5bfc\u81f4\u4e1a\u52a1\u4e0d\u53ef\u7528\uff0c\u5982\u4f55\u6539\u8fdb\n6.4.3 redis sharding\u6709\u54ea\u4e9b\u505a\u6cd5\n6.4.4 \u5f53\u5927\u91cf\u6570\u636e\u8981\u6c42\u7528redis\u4fdd\u5b58\uff0c\u5355\u673a\u5355\u70b9\u96be\u4ee5\u6ee1\u8db3\u9700\u8981\uff0c\u8bbe\u8ba1\uff08\u6362\u5bfb\u627e\uff09\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u6848\n6.4.5 \u5f53redis \u91c7\u7528hash\u505asharding\uff0c\u73b0\u5728\u67098\u4e2a\u8282\u70b9\uff0c\u8d1f\u8f7d\u65b9\u6848\u662f pos = hash(key) % 8\uff0c\u7136\u540e\u4fdd\u5b58\u5728pos\u8282\u70b9\u4e0a\u3002\u8fd9\u6837\u505a\u6709\u4ec0\u4e48\u597d\u5904\u574f\u5904\uff1f\u5f538\u4e2a\u8282\u70b9\u8981\u6269\u5145\u523010\u4e2a\u8282\u70b9\uff0c\u5e94\u8be5\u600e\u4e48\u529e\uff1f\u6709\u4ec0\u4e48\u66f4\u65b9\u4fbf\u6269\u5145\u7684\u65b9\u6848\u5417\uff1f\uff08\u4e00\u81f4\u6027hash, presharding\uff09\n6.4.6 \u5982\u4f55\u4fdd\u8bc1redis\u548c\u6570\u636e\u5e93\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u6bd4\u5982\u7528\u6237\u540d\u65e2\u4fdd\u5b58\u5728\u6570\u636e\u5e93\uff0c\u53c8\u4fdd\u5b58\u5728redis\u505a\u7f13\u5b58\u3002\u6709\u5982\u4e0b\u64cd\u4f5c update_db(username); update_redis(username)\u3002\u4f46\u662f\u6267\u884cupdate_db\u540e\u6545\u969c\uff0cupdate_redis\u6ca1\u6709\u6267\u884c\u3002\u6709\u4ec0\u4e48\u7b80\u5355\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n6.5.0 \u6570\u636e\u5e93\u8868\u5305\u542b\u4e09\u5217\uff1a\u5e7f\u544a\u7f16\u53f7ad_id\uff0c\u5e7f\u544a\u5f00\u59cb\u6295\u653e\u65f6\u95f4ad_start\uff0c\u5e7f\u544a\u6295\u653e\u7ed3\u675f\u65f6\u95f4ad_end\u3002\u7528\u4e00\u884cSQL\u8bed\u53e5\u67e5\u8be2\u7ed9\u5b9a\u65f6\u95f4\u6bb5\u5185\u5b58\u5728\u7684\u5e7f\u544a\u3002\n6.5.1 \u8bb2\u8bb2MapReduce\u7684\u539f\u7406\u3002\n6.5.2 \u4e3e\u51fa\u51e0\u79cd\u8fdb\u7a0b\u901a\u4fe1\u3001\u7ebf\u7a0b\u901a\u4fe1\u7684\u65b9\u5f0f\u3002\n6.5.3 \u5bf9\u5217\u8868\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u627e\u51fa\u6bd4\u5b83\u5927\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff1a\u8f93\u5165\u4e00\u4e2alistin\uff0c\u8fd4\u56de\u4e00\u4e2alistout\u3002\u5bf9\u4e8e\u4efb\u610flistin[x]\uff0c\u5c06\u6ee1\u8db3 y > x \u4e14 listin[y] > listin[x] \u7684\u7b2c\u4e00\u4e2a listin[y] \u503c\u4f5c\u4e3a listout[x] \u7684\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u9650\u5236\u4e3aO(n)\u3002\n\u6ef4\u6ef4\u7bc7\n\n7.1.0 B+\u6811\u3001B-\u6811\u7684\u533a\u522b?\n7.1.1 \u6570\u636e\u5e93\u9694\u79bb\u7ea7\u522b\uff0c\u5e7b\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\u7684\u533a\u522b\uff1f\n7.1.2 \u6709hell, well, hello, world\u7b49\u5b57\u7b26\u4e32\u7ec4\uff0c\u73b0\u5728\u95ee\u80fd\u5426\u62fc\u63a5\u6210helloworld\uff0c\u4ee3\u7801\u5b9e\u73b0\u3002\n7.1.3 \u5feb\u6392\u7b97\u6cd5\u5b9e\u73b0\n7.1.4 \u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f\n7.1.5 25\u5339\u9a6c\u8d5b\u8dd1\uff0c\u6709\u4e00\u4e2a\u8d5b\u573a\uff0c\u53ea\u6709\u4e94\u4e2a\u8d5b\u9053\uff0c\u6ca1\u6709\u8ba1\u65f6\u5668\uff0c\u53ea\u80fd\u901a\u8fc7\u76ee\u6d4b\u6765\u8bb0\u5f55\u5feb\u6162\uff0c\u6c42\u51fa\u7b2c\u4e093\u5feb\u7684\u9a6c\u8981\u591a\u5c11\u573a\u6bd4\u8d5b\uff1f\n7.1.6 kmp\u7b97\u6cd5next\u6570\u7ec4\u7684\u6c42\u89e3\u601d\u8def\n7.1.7 \u6570\u7ec4\u4e2d\u6709\u4e09\u4e2a\u6570\u5b57\u51fa\u73b0\u8d85\u8fc73\/4\uff0c\u6c42\u8fd9\u4e09\u4e2a\u6570\u5b57\uff1f\n7.1.8 1\u5230n+2\u4e2a\u6570\u7ec4\u4e2d\u7f3a\u4e86\u4e24\u4e2a\u6570\uff0c\u5982\u4f55\u7528O(n)\u65f6\u95f4\uff0cO(1)\u7a7a\u95f4\u627e\u5230\u8fd9\u4e24\u4e2a\u6570\u5b57\u3002\n7.1.9 \u4e00\u6761\u7ebf\u6bb5\u957f\u4e3a1\uff0c\u968f\u673a\u9009\u4e24\u4e2a\u70b9\uff0c\u5c06\u6539\u7ebf\u6bb5\u5206\u4e3a\u4e09\u6bb5\uff0c\u4e09\u6bb5\u80fd\u6210\u4e09\u89d2\u5f62\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\n7.2.0 \u6709\u4e00\u4e2a\u6559\u6388\uff0c\u4ed6\u4e09\u4e2a\u5b66\u751f\uff0c\u8111\u888b\u80cc\u540e\u5206\u522b\u5404\u5199\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5176\u4e2d\u4e00\u4e2a\u6570\u5b57\u662f\u53e6\u5916\u4e24\u4e2a\u6570\u5b57\u7684\u548c\uff0c\u7ecf\u8fc7\u51e0\u8f6e\u540e\uff0c\u6709\u4e00\u4e2a\u5b66\u751f\u731c\u51fa\u4e86\u81ea\u5df1\u7684\u6570\u5b57\u8bf7\u95ee\u662f\u4ec0\u4e48\u539f\u56e0\uff1f\n7.2.1 B+\u6811\u505a\u7d22\u5f15\u65f6\uff0cB+\u6811\u901a\u5e38\u9ad8\u5ea6\u4e3a\u591a\u5c11\u5c42\uff1f\u8981\u53c2\u8003\u54ea\u4e9b\u6761\u4ef6\uff1f\n\n\u4eac\u4e1c\u7bc7\n\n8.1.0 \u4e00\u822csql\u6ce8\u5165\u600e\u4e48\u53d1\u73b0\u89e6\u70b9\u7684\uff0c\u4ece\u6e90\u7801\u9610\u8ff0sqlmap\u5982\u4f55\u6d4b\u8bd5\u6ce8\u5165\u70b9\u7684\u3002\n8.1.1 masscan\u626b\u63cf\u7aef\u53e3\u65f6\u9760\u4ec0\u4e48\u68c0\u6d4b\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5feb? \u8bf7\u8be6\u8ff0.\n8.1.2 \u4f60\u5199\u8fc7\u54ea\u4e9b\u5c0f\u5de5\u5177\uff0c\u4f60\u4e3a\u4f60\u4f7f\u7528\u8fc7\u7684\u5de5\u5177\u505a\u8fc7\u4ec0\u4e48\u4fee\u6539.\n8.1.3 \u5982\u4f55\u63d0\u9ad8\u91c7\u7528python\u7f16\u5199\u7684\u626b\u63cf\u901f\u5ea6\uff0c\u8c08\u8c08\u5bf9GIL\u9501\u7684\u4e86\u89e3.\n8.1.4 \u4f60\u89c9\u5f97\u4f60\u53d1\u73b0\u7684\u90a3\u4e2a\u6f0f\u6d1e\u5f71\u54cd\u6bd4\u8f83\u5927.\n8.1.5 \u5e38\u89c1\u7684web\u6f0f\u6d1e\u6709\u54ea\u4e9b.\n8.1.6 \u6709\u6ca1\u6709\u73a9\u8fc7\u786c\u4ef6\u5b89\u5168\uff0c\u7814\u7a76\u7a0b\u5ea6\u5982\u4f55.\n8.1.7 \u53cd\u722c\u866b\uff0c\u5982\u679c\u662f\u4f60\u5982\u4f55\u8fdb\u884c\u53cd\u722c\u866b\uff0c\u5982\u4f55\u7ed5\u8fc7\u53cd\u722c\u63aa\u65bd\u3002 \u4f7f\u7528\u65e0\u5934\u6d4f\u89c8\u5668\u88ab\u68c0\u6d4b\u5230\u4e86\uff0c\u5982\u4f55\u7ed5\u8fc7\n8.1.8 nmap\u626b\u63cf\u5982\u4f55\u8fdb\u884c\u626b\u63cf\u3002\u53d1\u5305\u4e0e\u534f\u8bae\uff0c\u63e1\u624b\u548c\u4e0d\u63e1\u624b\uff0c\u54ea\u4e9b\u534f\u8bae\u63e1\u624b\uff0c\u54ea\u4e9b\u4e0d\u63e1\u624b. \u5982\u4f55\u4e0d\u76f4\u63a5\u63a5\u89e6\u76ee\u6807\u670d\u52a1\u5668\u63a2\u6d4b\u5bf9\u65b9\u7aef\u53e3\u662f\u5426\u5f00\u653e\n8.1.9 \u6709\u6ca1\u6709\u81ea\u5df1\u7f16\u5199\u8fc7yara\u626b\u63cf\u6a21\u5757\uff0c\u5982\u679c\u8981\u89e3\u51b3\u626b\u63cf{k1:v1, k2:v2, k3:v3} \uff0c\u4fdd\u8bc1\u540c\u65f6\u5728k1\u4e2d\u7684v1\u91cc\u51fa\u73b0\u7279\u5b9a\u503c\uff0ck2\u4e2d\u51fa\u73b0v2\u7279\u5b9a\u503c\uff0c\u4ee5\u53cak3,v3\u3002\u600e\u4e48\u5b9e\u73b0\n8.2.0 xss\u4ec0\u4e48\u539f\u7406\uff0c\u5982\u4f55\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2abeef\u7c7b\u4f3c\u7684xss\u5e73\u53f0. \u65e2\u7136\u8fd9\u6837\u5b9e\u73b0\uff0c\u9762\u4e34\u7684\u8de8\u57df\u5982\u4f55\u89e3\u51b3?\n8.2.1 ip \u9891\u7387\u9650\u5236, ip\u4fe1\u8a89\u5ea6\u6a21\u578b\uff1f\n8.2.2 SCTP\u534f\u8bae\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u4f7f\u7528 SCTP \u4f18\u5316\u7f51\u7edc\uff1f\n\nmysql\u7bc7\n\n9.1.0 \u4e3b\u952e \u8d85\u952e \u5019\u9009\u952e \u5916\u952e\n9.1.1 \u6570\u636e\u5e93\u4e8b\u52a1\u7684\u56db\u4e2a\u7279\u6027\u53ca\u542b\u4e49\n9.1.2 \u89c6\u56fe\u7684\u4f5c\u7528\uff0c\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48\uff1f\n9.1.3 drop,delete\u4e0etruncate\u7684\u533a\u522b\n9.1.4 \u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b\n9.1.5 \u8fde\u63a5\u7684\u79cd\u7c7b\n9.1.6 \u6570\u636e\u5e93\u8303\u5f0f\n9.1.7 \u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def\n9.1.8 \u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b\n\nredis\u7bc7\n\n10.1.0 \u4f7f\u7528Redis\u6709\u54ea\u4e9b\u597d\u5904\uff1f\n10.1.1 redis\u76f8\u6bd4memcached\u6709\u54ea\u4e9b\u4f18\u52bf\uff1f\n10.1.2 redis\u5e38\u89c1\u6027\u80fd\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\n10.1.3 MySQL\u91cc\u67092000w\u6570\u636e\uff0credis\u4e2d\u53ea\u5b5820w\u7684\u6570\u636e\uff0c\u5982\u4f55\u4fdd\u8bc1redis\u4e2d\u7684\u6570\u636e\u90fd\u662f\u70ed\u70b9\u6570\u636e\n10.1.4 Memcache\u4e0eRedis\u7684\u533a\u522b\u90fd\u6709\u54ea\u4e9b\uff1f\n10.1.5 Redis \u5e38\u89c1\u7684\u6027\u80fd\u95ee\u9898\u90fd\u6709\u54ea\u4e9b\uff1f\u5982\u4f55\u89e3\u51b3\uff1f\n10.1.6 redis \u6700\u9002\u5408\u7684\u573a\u666f\n10.1.7 Redis\u7684\u540c\u6b65\u673a\u5236\u4e86\u89e3\u4e48\uff1f\n10.1.8 \u662f\u5426\u4f7f\u7528\u8fc7Redis\u96c6\u7fa4\uff0c\u96c6\u7fa4\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f\n10.1.9 redis\u96c6\u7fa4\u5982\u4f55\u4fdd\u8bc1\u4e00\u81f4\u6027\uff1f\n\nMongoDB\u7bc7\n\n11.1.0 \u4ec0\u4e48\u662fMongoDB\uff1f\n11.1.1 MongoDB\u662f\u7531\u54ea\u79cd\u8bed\u8a00\u5199\u7684\uff1f\n11.1.2 MongoDB\u7684\u4f18\u52bf\u6709\u54ea\u4e9b\uff1f\n11.1.3 \u4ec0\u4e48\u662f\u6570\u636e\u5e93\uff1f\n11.1.4 \u4ec0\u4e48\u662f\u96c6\u5408\uff1f\n11.1.5 \u4ec0\u4e48\u662f\u6587\u6863\uff1f\n11.1.6 MongoDB\u548c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u672f\u8bed\u5bf9\u6bd4\u56fe\n11.1.7 \u4ec0\u4e48\u662f\u201cmongod\u201d\uff1f\n11.1.8 \u201cmongod\u201d\u53c2\u6570\u6709\u4ec0\u4e48\uff1f\n11.1.9 \u4ec0\u4e48\u662f\u201cmongo\u201d\uff1f\n11.2.0 MongoDB\u54ea\u4e2a\u547d\u4ee4\u53ef\u4ee5\u5207\u6362\u6570\u636e\u5e93\uff1f\n11.2.1 \u4ec0\u4e48\u662f\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff1f\n11.2.2 \u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6709\u54ea\u4e9b\u7c7b\u578b\uff1f\n11.2.3 \u4e3a\u4ec0\u4e48\u7528MongoDB\uff1f\n11.2.4 \u5728\u54ea\u4e9b\u573a\u666f\u4f7f\u7528MongoDB\uff1f\n11.2.5 MongoDB\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u662f\u4ec0\u4e48\u610f\u601d?\n11.2.6 \u54ea\u4e9b\u8bed\u8a00\u652f\u6301MongoDB?\n11.2.7 \u5728MongoDB\u4e2d\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\uff1f\n11.2.8 \u5728MongoDB\u4e2d\u5982\u4f55\u67e5\u770b\u6570\u636e\u5e93\u5217\u8868\uff1f\n11.2.9 MongoDB\u4e2d\u7684\u5206\u7247\u662f\u4ec0\u4e48\u610f\u601d\uff1f\n11.3.0 \u5982\u4f55\u67e5\u770b\u4f7f\u7528MongoDB\u7684\u8fde\u63a5\uff1f\n11.3.1 \u4ec0\u4e48\u662f\u590d\u5236\uff1f\n11.3.2 \u5728MongoDB\u4e2d\u5982\u4f55\u5728\u96c6\u5408\u4e2d\u63d2\u5165\u4e00\u4e2a\u6587\u6863\uff1f\n11.3.3 \u5728MongoDB\u4e2d\u5982\u4f55\u9664\u53bb\u4e00\u4e2a\u6570\u636e\u5e93\uff1f\n11.3.4 \u5728MongoDB\u4e2d\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\uff1f\n11.3.5 \u5728MongoDB\u4e2d\u5982\u4f55\u67e5\u770b\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u7684\u96c6\u5408\uff1f\n11.3.6 \u5728MongoDB\u4e2d\u5982\u4f55\u5220\u9664\u4e00\u4e2a\u96c6\u5408\uff1f\n11.3.7 \u4e3a\u4ec0\u4e48\u8981\u5728MongoDB\u4e2d\u4f7f\u7528\u5206\u6790\u5668\uff1f\n11.3.8 MongoDB\u652f\u6301\u4e3b\u952e\u5916\u952e\u5173\u7cfb\u5417\uff1f\n11.3.9 MongoDB\u652f\u6301\u54ea\u4e9b\u6570\u636e\u7c7b\u578b\uff1f\n11.4.0 \u4e3a\u4ec0\u4e48\u8981\u5728MongoDB\u4e2d\u7528\"Code\"\u6570\u636e\u7c7b\u578b\uff1f\n11.4.1 \u4e3a\u4ec0\u4e48\u8981\u5728MongoDB\u4e2d\u7528\"Regular Expression\"\u6570\u636e\u7c7b\u578b\uff1f\n11.4.2 \u4e3a\u4ec0\u4e48\u5728MongoDB\u4e2d\u4f7f\u7528\"Object ID\"\u6570\u636e\u7c7b\u578b\uff1f\n11.4.3 \u5982\u4f55\u5728\u96c6\u5408\u4e2d\u63d2\u5165\u4e00\u4e2a\u6587\u6863\uff1f\n11.4.4 \u201cObjectID\u201d\u6709\u54ea\u4e9b\u90e8\u5206\u7ec4\u6210\uff1f\n11.4.5 \u5728MongoDB\u4e2d\u4ec0\u4e48\u662f\u7d22\u5f15\uff1f\n11.4.6 \u5982\u4f55\u6dfb\u52a0\u7d22\u5f15\uff1f\n11.4.7 MongoDB\u6709\u54ea\u4e9b\u53ef\u66ff\u4ee3\u4ea7\u54c1\uff1f\n11.4.8 \u5982\u4f55\u67e5\u8be2\u96c6\u5408\u4e2d\u7684\u6587\u6863\uff1f\n11.4.9 \u7528\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u683c\u5f0f\u5316\u8f93\u51fa\u7ed3\u679c\uff1f\n11.5.0 \u5982\u4f55\u4f7f\u7528\"AND\"\u6216\"OR\"\u6761\u4ef6\u5faa\u73af\u67e5\u8be2\u96c6\u5408\u4e2d\u7684\u6587\u6863\uff1f\n11.5.1 \u5728MongoDB\u4e2d\u5982\u4f55\u66f4\u65b0\u6570\u636e\uff1f\n11.5.2 \u5982\u4f55\u5220\u9664\u6587\u6863\uff1f\n11.5.3 \u5728MongoDB\u4e2d\u5982\u4f55\u6392\u5e8f\uff1f\n11.5.4 \u4ec0\u4e48\u662f\u805a\u5408\uff1f\n11.5.5 \u5728MongoDB\u4e2d\u4ec0\u4e48\u662f\u526f\u672c\u96c6\uff1f\n11.5.6 Mongodb\u5b58\u50a8\u7279\u6027\u4e0e\u5185\u90e8\u539f\u7406?\n\nZookeeper\u7bc7\n\n12.1.0 zookeeper\u662f\u4ec0\u4e48\uff1f\n12.1.1 zookeeper\u63d0\u4f9b\u4e86\u4ec0\u4e48\uff1f\n12.1.2 zookeeper\u6587\u4ef6\u7cfb\u7edf\n12.1.3 zookeeper\u7684\u56db\u79cd\u7c7b\u578b\u7684znode\n12.1.4 zookeeper\u901a\u77e5\u673a\u5236\n12.1.5 zookeeper\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f\uff1f\n12.1.6 zk\u7684\u547d\u540d\u670d\u52a1\n12.1.7 zk\u7684\u914d\u7f6e\u7ba1\u7406\u670d\u52a1\n12.1.8 zk\u7684\u96c6\u7fa4\u7ba1\u7406\n12.1.9 zk\u7684\u5206\u5e03\u5f0f\u9501\n12.2.0 zk\u961f\u5217\u7ba1\u7406\n12.2.1 zk\u6570\u636e\u590d\u5236\n12.2.2 zk\u7684\u5de5\u4f5c\u539f\u7406\n12.2.3 zk\u662f\u5982\u4f55\u4fdd\u8bc1\u4e8b\u7269\u7684\u987a\u5e8f\u4e00\u81f4\u6027\n12.2.4 zk\u96c6\u7fa4\u4e0bserver\u5de5\u4f5c\u72b6\u6001\n12.2.5 zk\u662f\u5982\u4f55\u9009\u4e3eLeader\u7684\uff1f\n12.2.6 zk\u540c\u6b65\u6d41\u7a0b\n12.2.7 \u5206\u5e03\u5f0f\u901a\u77e5\u548c\u534f\u8c03\n12.2.8 zk\u7684session\u673a\u5236\n\nnginx\u7bc7\n\n13.1.0 \u8bf7\u89e3\u91ca\u4e00\u4e0b\u4ec0\u4e48\u662fNginx?\n13.1.1 \u8bf7\u5217\u4e3eNginx\u7684\u4e00\u4e9b\u7279\u6027?\n13.1.2 \u8bf7\u5217\u4e3eNginx\u548cApache \u4e4b\u95f4\u7684\u4e0d\u540c\u70b9?\n13.1.3 \u8bf7\u89e3\u91caNginx\u5982\u4f55\u5904\u7406HTTP\u8bf7\u6c42\u3002\n13.1.4 \u5728Nginx\u4e2d\uff0c\u5982\u4f55\u4f7f\u7528\u672a\u5b9a\u4e49\u7684\u670d\u52a1\u5668\u540d\u79f0\u6765\u963b\u6b62\u5904\u7406\u8bf7\u6c42?\n13.1.5 \u4f7f\u7528\u201c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u201d\u7684\u4f18\u70b9\u662f\u4ec0\u4e48?\n13.1.6 \u8bf7\u5217\u4e3eNginx\u670d\u52a1\u5668\u7684\u6700\u4f73\u7528\u9014\u3002\n13.1.7 \u8bf7\u89e3\u91caNginx\u670d\u52a1\u5668\u4e0a\u7684Master\u548cWorker\u8fdb\u7a0b\u5206\u522b\u662f\u4ec0\u4e48?\n13.1.8 \u8bf7\u89e3\u91ca\u4f60\u5982\u4f55\u901a\u8fc7\u4e0d\u540c\u4e8e80\u7684\u7aef\u53e3\u5f00\u542fNginx?\n13.1.9  \u8bf7\u89e3\u91ca\u662f\u5426\u6709\u53ef\u80fd\u5c06Nginx\u7684\u9519\u8bef\u66ff\u6362\u4e3a502\u9519\u8bef\u3001503?\n13.2.0 \u5728Nginx\u4e2d\uff0c\u89e3\u91ca\u5982\u4f55\u5728URL\u4e2d\u4fdd\u7559\u53cc\u659c\u7ebf?\n13.2.1 \u8bf7\u89e3\u91cangx_http_upstream_module\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?\n13.2.2 \u8bf7\u89e3\u91ca\u4ec0\u4e48\u662fC10K\u95ee\u9898\uff0c\u540e\u6765\u662f\u600e\u4e48\u89e3\u51b3\u7684\uff1f\n13.2.3 \u8bf7\u9648\u8ff0stub_status\u548csub_filter\u6307\u4ee4\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?\n13.2.4 \u89e3\u91caNginx\u662f\u5426\u652f\u6301\u5c06\u8bf7\u6c42\u538b\u7f29\u5230\u4e0a\u6e38?\n13.2.5 \u89e3\u91ca\u5982\u4f55\u5728Nginx\u4e2d\u83b7\u5f97\u5f53\u524d\u7684\u65f6\u95f4?\n13.2.6 \u7528Nginx\u670d\u52a1\u5668\u89e3\u91ca-s\u7684\u76ee\u7684\u662f\u4ec0\u4e48?\n13.2.7 \u89e3\u91ca\u5982\u4f55\u5728Nginx\u670d\u52a1\u5668\u4e0a\u6dfb\u52a0\u6a21\u5757?\n13.2.8 nginx\u4e2d\u591a\u4e2awork\u8fdb\u7a0b\u662f\u5982\u4f55\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u7684\uff1f\u5982\u4f55\u5904\u7406\u5ba2\u6237\u8fde\u63a5\u7684\u60ca\u7fa4\u95ee\u9898\uff1f\n13.2.9 nginx\u7a0b\u5e8f\u7684\u70ed\u66f4\u65b0\u662f\u5982\u4f55\u505a\u7684\uff1f\n\n\n\u8054\u7cfb\u6211\u4eec\n\n\u6bcf\u5929\u665a\u4e0a8\u70b9\u514d\u8d39\u6280\u672f\u5206\u4eab\u76f4\u64ad\uff0c\u626b\u7801\u5373\u53ef\u52a0\u5165\uff0c\u5c0f\u59d0\u59d0\u7ed9\u4f60\u53d1\u6bcf\u5929\u7684\u76f4\u64ad\u94fe\u63a5\uff0c\u5907\u6ce8\"github\u9762\u8bd5\" \n\u82e5\u7f51\u7edc\u95ee\u9898\uff0c\u4e8c\u7ef4\u7801\u65e0\u6cd5\u663e\u793a\uff0c\u53ef\u64a9\u5c0f\u59d0\u59d0wx: yy3007537140\n\n\u9e23\u8c22\n\u611f\u8c22\u5404\u4f4d\u8d21\u732epatch\u7684\u670b\u53cb\uff0c \u8fd8\u5f88\u591a\u5728issue\u91cc\u9762\u51fa\u8c0b\u5212\u7b56\u7684\u670b\u53cb\uff0c\u4e3a\u6b64\u8877\u5fc3\u611f\u8c22\u3002\u4f7f\u5f97\u8be5repo\u80fd\u591f\u5728github\u8d8b\u52bf\u699c\uff0c\u6301\u7eed\u4e00\u5468\u65f6\u95f4\u95ee\u9f0e\u6392\u884c\u699c\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u52a0\u5165 gitter \u8ba8\u8bba\u7ec4\nhttps:\/\/gitter.im\/im0voice\/interview_internal_reference\n","138":"\n\n\"Within C++ is a smaller, simpler, safer language struggling to get out.\"\n-- Bjarne Stroustrup\n\nThe C++ Core Guidelines are a collaborative effort led by Bjarne Stroustrup, much like the C++ language itself. They are the result of many\nperson-years of discussion and design across a number of organizations. Their design encourages general applicability and broad adoption but\nthey can be freely copied and modified to meet your organization's needs.\nGetting started\nThe guidelines themselves are found at CppCoreGuidelines. The document is in GH-flavored MarkDown. It is intentionally kept simple, mostly in ASCII, to allow automatic post-processing such as language translation and reformatting. The editors maintain one\nversion formatted for browsing. Note that it is manually integrated and can be slightly older than the version in the master branch.\nThe Guidelines are a constantly evolving document without a strict \"release\" cadence. Bjarne Stroustrup periodically reviews the document and increments the version number in the introduction. Checkins that increment the version number are tagged in git.\nMany of the guidelines make use of the header-only Guidelines Support Library. One implementation is available at GSL: Guidelines Support Library.\nBackground and scope\nThe aim of the guidelines is to help people to use modern C++ effectively. By \"modern C++\" we mean C++11, C++14, and C++17. In other\nwords, what would you like your code to look like in 5 years' time, given that you can start now? In 10 years' time?\nThe guidelines are focused on relatively higher-level issues, such as interfaces, resource management, memory management, and concurrency. Such\nrules affect application architecture and library design. Following the rules will lead to code that is statically type-safe, has no resource\nleaks, and catches many more programming logic errors than is common in code today. And it will run fast -- you can afford to do things right.\nWe are less concerned with low-level issues, such as naming conventions and indentation style. However, no topic that can help a programmer is\nout of bounds.\nOur initial set of rules emphasizes safety (of various forms) and simplicity. They may very well be too strict. We expect to have to introduce\nmore exceptions to better accommodate real-world needs. We also need more rules.\nYou will find some of the rules contrary to your expectations or even contrary to your experience. If we haven't suggested that you change your\ncoding style in any way, we have failed! Please try to verify or disprove rules! In particular, we'd really like to have some of our rules\nbacked up with measurements or better examples.\nYou will find some of the rules obvious or even trivial. Please remember that one purpose of a guideline is to help someone who is less\nexperienced or coming from a different background or language to get up to speed.\nThe rules are designed to be supported by an analysis tool. Violations of rules will be flagged with references (or links) to the relevant rule.\nWe do not expect you to memorize all the rules before trying to write code.\nThe rules are meant for gradual introduction into a code base. We plan to build tools for that and hope others will too.\nContributions and LICENSE\nComments and suggestions for improvements are most welcome. We plan to modify and extend this document as our understanding improves and the\nlanguage and the set of available libraries improve. More details are found at CONTRIBUTING and LICENSE.\nThanks to DigitalOcean for hosting the Standard C++ Foundation website.\n","139":"12306 \u8d2d\u7968\u5c0f\u52a9\u624b\npython\u7248\u672c\n\n 2.7.10 - 2.7.15\n 3.6 - 3.7.4\n 2.7.9\n\n\u5df2\u6709\u529f\u80fd\n\n \u81ea\u52a8\u6253\u7801\n \u81ea\u52a8\u767b\u5f55\n \u51c6\u70b9\u9884\u552e\u548c\u6361\u6f0f\n \u667a\u80fd\u5019\u8865\n \u90ae\u4ef6\u901a\u77e5\n server\u9171\u901a\u77e5\n\n\u4f9d\u8d56\u5e93\n\n\u9a8c\u8bc1\u7801\u76ee\u524d\u53ef\u4ee5\u672c\u5730\u8bc6\u522b\uff0c\u9700\u8981\u4e0b\u8f7d\u6a21\u578b\uff0c\u653e\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5168\u90e8\u4ee3\u7801\u6765\u6e90\u4e8e\u6b64\u9879\u76ee \u4f20\u9001\u95e8\uff0c\u8868\u793a\u611f\u8c22\n  1. \u6a21\u578b\u4e0b\u8f7d\u94fe\u63a5:https:\/\/pan.baidu.com\/s\/1rS155VjweWVWIJogakechA  \u5bc6\u7801:bmlm\n     \u7fa4\u91cc\u9762\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\n  2. git\u4ed3\u5e93\u4e0b\u8f7d\uff1ahttps:\/\/github.com\/testerSunshine\/12306model.git\n\n\n\u81ea\u6258\u7ba1\u4e91\u6253\u7801\u670d\u52a1\u5668\u642d\u5efa\uff1a12306_code_server\n\n\u5982\u679c\u5927\u5bb6\u6709\u7a7a\u95f2\u7684\u670d\u52a1\u5668\uff0c\u53ef\u642d\u5efa\u4e4b\u540e\u5728\u8fd9\u4e2a issues \u91cc\u9762\u586b\u5165\u81ea\u5df1\u7684\u670d\u52a1\u5668(\u8bf7\u6ce8\u610f\u670d\u52a1\u5668\u5b89\u5168\uff01)\n\n\n\u9879\u76ee\u4f9d\u8d56 requirements.txt\n\u5b89\u88c5\u65b9\u6cd5x:\n\nroot\u7528\u6237(\u907f\u514d\u591apython\u73af\u5883\u4ea7\u751f\u95ee\u9898): pip3 install -i https:\/\/pypi.tuna.tsinghua.edu.cn\/simple -r requirements.txt\n\u975eroot\u7528\u6237\uff08\u907f\u514d\u5b89\u88c5\u548c\u8fd0\u884c\u65f6\u4f7f\u7528\u4e86\u4e0d\u540c\u73af\u5883\uff09: pip3 install -i https:\/\/pypi.tuna.tsinghua.edu.cn\/simple -r requirements.txt\n\u8bb8\u591awindows\u7684\u7528\u6237\u88c5\u4e0d\u4e86tensorflow\u7684\u8bdd\uff0c\u53ef\u4ee5\u9002\u5f53\u964d\u4f4e\u7248\u672c\u6216\u8005\u5347\u9ad8\u7248\u672c\u90fd\u662f\u53ef\u4ee5\u7684\n1. tensorflow\u7684\u517c\u5bb9\u7248\u672c 1.14.0rc\\1.14.0rc\\1.15.0\\1.15.0rc\n\u4ee5\u4e0a\u7248\u672c\u90fd\u6d4b\u8bd5\u65e0\u95ee\u9898\n2. \u5982\u679cpip\u4ee3\u7406\u7684\u6e05\u534e\u6e90\u65e0\u6cd5\u4e0b\u8f7d\uff0c\u53ef\u4ee5\u66f4\u6362\u5176\u4ed6\u6e90\u89e3\u51b3\u6b64\u95ee\u9898\n\n\n\n\n\n\u9879\u76ee\u4f7f\u7528\u8bf4\u660e\n\n\u670d\u52a1\u5668\u542f\u52a8:\n\n\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\n\n\u53ef\u4ee5\u914d\u7f6e\u90ae\u7bb1,\u914d\u7f6e\u90ae\u7bb1\u7684\u683c\u5f0f\u5728\u914d\u7f6e\u91cc\u9762\u53ef\u4ee5\u770b\u5230ex\n# \u6d4b\u8bd5\u90ae\u7bb1\u548cserver\u9171\u662f\u5426\u53ef\u7528\uff0c server\u9171\u6d4b\u8bd5\u7684\u524d\u63d0\u662fserver\u9171\u5f00\u5173\u5f00\u542f\n# \u53ef\u4ee5\u914d\u7f6eserver\u9171\u63d0\u9192\uff08\u63a8\u8350\uff09[\u914d\u7f6e\u6559\u7a0b](https:\/\/www.jianshu.com\/p\/8d10b5b9c4e3)\n# \u7528python3 \u8fd8\u662fpython \u5b8c\u5168\u53d6\u51b3\u4e8e\u5b89\u88c5\u7684\u65f6\u5019\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u662f\u5426\u4e3apython3,\u4ee5\u4e0b\u542f\u52a8\u9ed8\u8ba4\u73af\u5883\u53d8\u91cf\u4e3apython3\npython3 run.py t\n\n\n\u914d\u7f6e\u914d\u7f6e\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u9700\u6ce8\u610f\u7a7a\u683c\u548c\u9075\u5faapython\u8bed\u6cd5\u683c\u5f0f\n\n\n\u542f\u52a8\u524d\u8bf7\u5148\u7b5b\u9009cdn\uff0c\u8fd9\u70b9\u5f88\u91cd\u8981\npython3 run.py c\n\n\n\u542f\u52a8\u670d\u52a1\npython3 run.py r\n\n\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u64cd\u4f5c\uff0c\u4e0b\u9762\u7684\u547d\u4ee4\u53ef\u80fd\u4f1a\u5e2e\u52a9\u4f60\npython3 run.py -h\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nsage: run.py [-h] operate\n\npositional arguments:\n  operate     r: \u8fd0\u884c\u62a2\u7968\u7a0b\u5e8f, c: \u8fc7\u6ee4cdn, t: \u6d4b\u8bd5\u90ae\u7bb1\u548cserver\u9171\uff0cserver\u9171\n\n\n\n\n\u5982\u679c\u4f60\u7684\u670d\u52a1\u5668\u5b89\u88c5\u4e86docker\u4e0edocker-compose, \u90a3\u4e48\u4f60\u53ef\u4ee5\u5ffd\u7565\u4e0a\u9762\u7684\u6240\u6709\u6b65\u9aa4\uff0c\u76f4\u63a5\u6309\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff0c\u5373\u53ef\u5f00\u59cb\u62a2\u7968\uff1a\n\n\u524d\u63d0\u6761\u4ef6:\n\n\u8bf7\u786e\u8ba4\u4f60\u5b89\u88c5\u7684docker\u7248\u672c\u4e3a18.09\u53ca\u4ee5\u4e0a: docker -v\n\u8bf7\u786e\u8ba4\u4f60\u5b89\u88c5\u7684docker-compose\u7248\u672c\u4e3a1.23.2\u53ca\u4ee5\u4e0a: docker-compose -v\n\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u4fee\u6539\u597d\u914d\u7f6e\u6587\u4ef6:TickerConfig.py\n\u8bf7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6TickerConfig.py\u4e2d\u7684\u53d8\u91cfAUTO_CODE_TYPE\u548cHOST\uff0cAUTO_CODE_TYPE\u6539\u4e3a3, HOST\u6539\u4e3a\"captcha:80\"\uff08\u8fd9\u91cc\u5f88\u91cd\u8981\uff0c\u8fd9\u662f\u672c\u5730\u6253\u7801\u670d\u52a1\u5668\u7684\u914d\u7f6e\uff09\n\n\n\u8fd0\u884c\u547d\u4ee4:\n\n\u5f00\u59cb\u62a2\u7968\uff1adocker-compose up --build -d\n\u505c\u6b62\u62a2\u7968\uff1adocker-compose down\n\u67e5\u770b\u62a2\u7968log: docker logs --follow ticket\n\n\n\n\n\n\u76ee\u5f55\u5bf9\u5e94\u8bf4\u660e\n\nagency - cdn\u4ee3\u7406\nconfig - \u9879\u76ee\u914d\u7f6e\nverify - \u81ea\u52a8\u6253\u7801\ninit - \u9879\u76ee\u4e3b\u8fd0\u884c\u76ee\u5f55\ninter - \u63a5\u53e3\nmyException - \u5f02\u5e38\nmyUrllib  request\u7f51\u7edc\u8bf7\u6c42\u5e93\n\n\u601d\u8def\u56fe\n\n\n\n\u9879\u76ee\u58f0\u660e\uff1a\n\n\u672c\u8f6f\u4ef6\u53ea\u4f9b\u5b66\u4e60\u4ea4\u6d41\u4f7f\u7528\uff0c\u52ff\u4f5c\u4e3a\u5546\u4e1a\u7528\u9014\uff0c\u4ea4\u6d41\u7fa4\u53f7\n\n1\u7fa4\uff1a286271084(\u5df2\u6ee1)\n2\u7fa4\uff1a649992274(\u5df2\u6ee1)\n3\u7fa4\uff1a632501142(\u5df2\u6ee1)\n4\u7fa4: 606340519(\u5df2\u6ee1)\n5\u7fa4: 948526733(\u5df2\u6ee1)\n7\u7fa4: 660689659(\u5df2\u6ee1)\n8\u7fa4: 620629239(\u5df2\u6ee1)\n6\u7fa4: 608792930(\u672a\u6ee1)\n9\u7fa4: 693035807(\u672a\u6ee1)\n\n\n\u8bf7\u4e0d\u8981\u91cd\u590d\u52a0\u7fa4\uff0c\u4e00\u4e2a\u7fa4\u5c31\u53ef\u4ee5\u4e86\uff0c\u628a\u673a\u4f1a\u7559\u7ed9\u66f4\u591a\u4eba\n\u8fdb\u7fa4\u5148\u770b\u516c\u544a\uff01\uff01\uff01\u8fdb\u7fa4\u5148\u770b\u516c\u544a\uff01\uff01\uff01\u8fdb\u7fa4\u5148\u770b\u516c\u544a\uff01\uff01\uff01 \u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\n\u80fd\u4e3a\u4f60\u62a2\u5230\u4e00\u5f20\u56de\u5bb6\u7684\u7968\uff0c\u662f\u6211\u6700\u5927\u7684\u5fc3\u613f\n\n\u65e5\u5fd7\u5217\u5b50\n\n\u6210\u529flog\uff0c\u5982\u679c\u662f\u8d2d\u7968\u5931\u8d25\u7684\uff0c\u8bf7\u5e26\u4e0a\u5931\u8d25\u7684log\u7ed9\u6211\uff0c\u6211\u5c3d\u529b\u5e2e\u4f60\u8c03\uff0c\u4e5f\u53ef\u52a0\u7fa4\u4e00\u8d77\u4ea4\u6d41\uff0c\u7a0b\u5e8f\u53ea\u662f\u52a0\u901f\u4e70\u7968\u7684\u8fc7\u7a0b\uff0c\u5e76\u4e0d\u4e00\u5b9a\u80fd\u4e70\u5230\u7968\n\u6b63\u5728\u7b2c355\u6b21\u67e5\u8be2  \u4e58\u8f66\u65e5\u671f: 2018-02-12  \u8f66\u6b21G4741,G2365,G1371,G1377,G1329 \u67e5\u8be2\u65e0\u7968  \u4ee3\u7406\u8bbe\u7f6e \u65e0  \u603b\u8017\u65f6429ms\n\u8f66\u6b21: G4741 \u59cb\u53d1\u8f66\u7ad9: \u4e0a\u6d77 \u7ec8\u70b9\u7ad9: \u90b5\u9633 \u4e8c\u7b49\u5ea7:\u6709\n\u6b63\u5728\u5c1d\u8bd5\u63d0\u4ea4\u8ba2\u7968...\n\u5c1d\u8bd5\u63d0\u4ea4\u8ba2\u5355...\n\u51fa\u7968\u6210\u529f\n\u6392\u961f\u6210\u529f, \u5f53\u524d\u4f59\u7968\u8fd8\u5269\u4f59: 359 \u5f20\n\u6b63\u5728\u4f7f\u7528\u81ea\u52a8\u8bc6\u522b\u9a8c\u8bc1\u7801\u529f\u80fd\n\u9a8c\u8bc1\u7801\u901a\u8fc7,\u6b63\u5728\u63d0\u4ea4\u8ba2\u5355\n\u63d0\u4ea4\u8ba2\u5355\u6210\u529f\uff01\n\u6392\u961f\u7b49\u5f85\u65f6\u95f4\u9884\u8ba1\u8fd8\u5269 -12 ms\n\u6392\u961f\u7b49\u5f85\u65f6\u95f4\u9884\u8ba1\u8fd8\u5269 -6 ms\n\u6392\u961f\u7b49\u5f85\u65f6\u95f4\u9884\u8ba1\u8fd8\u5269 -7 ms\n\u6392\u961f\u7b49\u5f85\u65f6\u95f4\u9884\u8ba1\u8fd8\u5269 -4 ms\n\u6392\u961f\u7b49\u5f85\u65f6\u95f4\u9884\u8ba1\u8fd8\u5269 -4 ms\n\u606d\u559c\u60a8\u8ba2\u7968\u6210\u529f\uff0c\u8ba2\u5355\u53f7\u4e3a\uff1aEB52743573, \u8bf7\u7acb\u5373\u6253\u5f00\u6d4f\u89c8\u5668\u767b\u5f5512306\uff0c\u8bbf\u95ee\u2018\u672a\u5b8c\u6210\u8ba2\u5355\u2019\uff0c\u572830\u5206\u949f\u5185\u5b8c\u6210\u652f\u4ed8\uff01\n\n\n\n\u4f7f\u7528\u5e2e\u52a9(\u4e00\u4e9b\u5b89\u88c5\u95ee\u9898\u548c\u4f7f\u7528\u53cd\u9988\u8f83\u591a\u7684\u95ee\u9898)\uff1a\n\n\n\u6d4b\u8bd5\u90ae\u7bb1\u662f\u5426\u53ef\u7528 \u90ae\u7bb1\u914d\u7f6e\u95ee\u9898\u770bissues\n\n\n\u5b66\u751f\u7968issues \u5b66\u751f\u7968\u4fee\u6539\n\n\n\u4f9d\u8d56\u5b89\u88c5\u4e0d\u5bf9\u7684\u95ee\u9898\uff08ImportError\uff09requirements.txt\u95ee\u9898\n\n\n\u82e5\u5feb\u8c46\u5b50\u7591\u95ee \u70b9\u6211\n\n\nIOError: \u3010Errno 0\u3011 Error \u95ee\u9898 \u70b9\u6211\n\n\n\u6d4b\u8bd5\u4e0b\u5355\u63a5\u53e3\u662f\u5426\u53ef\u7528\uff0c\u6709\u4e24\u4e2a\u4e0b\u5355\u63a5\u53e3\uff0c\u968f\u4fbf\u7528\u54ea\u4e2a\u90fdok\n\n\n\u5982\u679c\u4e0b\u8f7d\u9a8c\u8bc1\u7801\u8fc7\u671f\u6216\u8005\u4e0b\u8f7d\u5931\u8d25\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u662f12306\u5c01ip\u7684\u7b56\u7565\uff0c\u591a\u91cd\u8bd5\u51e0\u6b21\uff0c12306\u73b0\u5728\u5c01\u670d\u52a1\u5668(\u963f\u91cc\u4e91\u548c\u817e\u8baf\u4e91)ip\u6bd4\u8f83\u4e25\u91cd\uff0c\u5c3d\u91cf\u4e0d\u8981\u653e\u5728\u670d\u52a1\u5668\u91cc\u9762\n\n\n\u76ee\u524d12306\u5bf9\u670d\u52a1\u5668ip\u6bd4\u8f83\u654f\u611f\uff0c\u5927\u5bb6\u8fd8\u662f\u5728\u81ea\u5df1\u5bb6\u91cc\u6302\u7740\u5427\n\n\n\u81ea\u52a8\u66f4\u6362ip\u8f6f\u4ef6\u76ee\u524d\u5df2\u652f\u6301TPLINK\u548c\u5c0f\u7c73\u8def\u7531\u5668\uff0c\u53ea\u9650\u5bb6\u5ead\u7f51\u7edc\u70b9\u6211\u8df3\u8f6c\n\n\n\u611f\u8c22\u4e00\u4e0b\u5c0f\u4f19\u4f34\u5bf9\u672c\u9879\u76ee\u63d0\u4f9b\u7684\u5e2e\u52a9\n\n@sun7127@126.com\n@ \u624d\n@MonsterTan\n\u4ee5\u53ca\u6240\u6709\u4e3a\u6b64\u9879\u76ee\u63d0\u4f9bpr\u7684\u540c\u5b66\n\n\u66f4\u65b0\u65e5\u5fd7\n\n\u66f4\u65b0\u65e5\u5fd7\n\n","140":"Deep Learning Papers Reading Roadmap\n\nIf you are a newcomer to the Deep Learning area, the first question you may have is \"Which paper should I start reading from?\"\n\n\nHere is a reading roadmap of Deep Learning papers!\n\nThe roadmap is constructed in accordance with the following four guidelines:\n\nFrom outline to detail\nFrom old to state-of-the-art\nfrom generic to specific areas\nfocus on state-of-the-art\n\nYou will find many papers that are quite new but really worth reading.\nI would continue adding papers to this roadmap.\n\n1 Deep Learning History and Basics\n1.0 Book\n[0] Bengio, Yoshua, Ian J. Goodfellow, and Aaron Courville. \"Deep learning.\" An MIT Press book. (2015). [html] (Deep Learning Bible, you can read this book while reading following papers.) \u2b50\u2b50\u2b50\u2b50\u2b50\n1.1 Survey\n[1] LeCun, Yann, Yoshua Bengio, and Geoffrey Hinton. \"Deep learning.\" Nature 521.7553 (2015): 436-444. [pdf] (Three Giants' Survey) \u2b50\u2b50\u2b50\u2b50\u2b50\n1.2 Deep Belief Network(DBN)(Milestone of Deep Learning Eve)\n[2] Hinton, Geoffrey E., Simon Osindero, and Yee-Whye Teh. \"A fast learning algorithm for deep belief nets.\" Neural computation 18.7 (2006): 1527-1554. [pdf](Deep Learning Eve) \u2b50\u2b50\u2b50\n[3] Hinton, Geoffrey E., and Ruslan R. Salakhutdinov. \"Reducing the dimensionality of data with neural networks.\" Science 313.5786 (2006): 504-507. [pdf] (Milestone, Show the promise of deep learning) \u2b50\u2b50\u2b50\n1.3 ImageNet Evolution\uff08Deep Learning broke out from here\uff09\n[4] Krizhevsky, Alex, Ilya Sutskever, and Geoffrey E. Hinton. \"Imagenet classification with deep convolutional neural networks.\" Advances in neural information processing systems. 2012. [pdf] (AlexNet, Deep Learning Breakthrough) \u2b50\u2b50\u2b50\u2b50\u2b50\n[5] Simonyan, Karen, and Andrew Zisserman. \"Very deep convolutional networks for large-scale image recognition.\" arXiv preprint arXiv:1409.1556 (2014). [pdf] (VGGNet,Neural Networks become very deep!) \u2b50\u2b50\u2b50\n[6] Szegedy, Christian, et al. \"Going deeper with convolutions.\" Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2015. [pdf] (GoogLeNet) \u2b50\u2b50\u2b50\n[7] He, Kaiming, et al. \"Deep residual learning for image recognition.\" arXiv preprint arXiv:1512.03385 (2015). [pdf] (ResNet,Very very deep networks, CVPR best paper) \u2b50\u2b50\u2b50\u2b50\u2b50\n1.4 Speech Recognition Evolution\n[8] Hinton, Geoffrey, et al. \"Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups.\" IEEE Signal Processing Magazine 29.6 (2012): 82-97. [pdf] (Breakthrough in speech recognition)\u2b50\u2b50\u2b50\u2b50\n[9] Graves, Alex, Abdel-rahman Mohamed, and Geoffrey Hinton. \"Speech recognition with deep recurrent neural networks.\" 2013 IEEE international conference on acoustics, speech and signal processing. IEEE, 2013. [pdf] (RNN)\u2b50\u2b50\u2b50\n[10] Graves, Alex, and Navdeep Jaitly. \"Towards End-To-End Speech Recognition with Recurrent Neural Networks.\" ICML. Vol. 14. 2014. [pdf]\u2b50\u2b50\u2b50\n[11] Sak, Ha\u015fim, et al. \"Fast and accurate recurrent neural network acoustic models for speech recognition.\" arXiv preprint arXiv:1507.06947 (2015). [pdf] (Google Speech Recognition System) \u2b50\u2b50\u2b50\n[12] Amodei, Dario, et al. \"Deep speech 2: End-to-end speech recognition in english and mandarin.\" arXiv preprint arXiv:1512.02595 (2015). [pdf] (Baidu Speech Recognition System) \u2b50\u2b50\u2b50\u2b50\n[13] W. Xiong, J. Droppo, X. Huang, F. Seide, M. Seltzer, A. Stolcke, D. Yu, G. Zweig \"Achieving Human Parity in Conversational Speech Recognition.\" arXiv preprint arXiv:1610.05256 (2016). [pdf] (State-of-the-art in speech recognition, Microsoft) \u2b50\u2b50\u2b50\u2b50\n\nAfter reading above papers, you will have a basic understanding of the Deep Learning history, the basic architectures of Deep Learning model(including CNN, RNN, LSTM) and how deep learning can be applied to image and speech recognition issues. The following papers will take you in-depth understanding of the Deep Learning method, Deep Learning in different areas of application and the frontiers. I suggest that you can choose the following papers based on your interests and research direction.\n\n#2 Deep Learning Method\n2.1 Model\n[14] Hinton, Geoffrey E., et al. \"Improving neural networks by preventing co-adaptation of feature detectors.\" arXiv preprint arXiv:1207.0580 (2012). [pdf] (Dropout) \u2b50\u2b50\u2b50\n[15] Srivastava, Nitish, et al. \"Dropout: a simple way to prevent neural networks from overfitting.\" Journal of Machine Learning Research 15.1 (2014): 1929-1958. [pdf] \u2b50\u2b50\u2b50\n[16] Ioffe, Sergey, and Christian Szegedy. \"Batch normalization: Accelerating deep network training by reducing internal covariate shift.\" arXiv preprint arXiv:1502.03167 (2015). [pdf] (An outstanding Work in 2015) \u2b50\u2b50\u2b50\u2b50\n[17] Ba, Jimmy Lei, Jamie Ryan Kiros, and Geoffrey E. Hinton. \"Layer normalization.\" arXiv preprint arXiv:1607.06450 (2016). [pdf] (Update of Batch Normalization) \u2b50\u2b50\u2b50\u2b50\n[18] Courbariaux, Matthieu, et al. \"Binarized Neural Networks: Training Neural Networks with Weights and Activations Constrained to+ 1 or\u22121.\" [pdf] (New Model,Fast) \u2b50\u2b50\u2b50\n[19] Jaderberg, Max, et al. \"Decoupled neural interfaces using synthetic gradients.\" arXiv preprint arXiv:1608.05343 (2016). [pdf] (Innovation of Training Method,Amazing Work) \u2b50\u2b50\u2b50\u2b50\u2b50\n[20] Chen, Tianqi, Ian Goodfellow, and Jonathon Shlens. \"Net2net: Accelerating learning via knowledge transfer.\" arXiv preprint arXiv:1511.05641 (2015). [pdf] (Modify previously trained network to reduce training epochs) \u2b50\u2b50\u2b50\n[21] Wei, Tao, et al. \"Network Morphism.\" arXiv preprint arXiv:1603.01670 (2016). [pdf] (Modify previously trained network to reduce training epochs) \u2b50\u2b50\u2b50\n2.2 Optimization\n[22] Sutskever, Ilya, et al. \"On the importance of initialization and momentum in deep learning.\" ICML (3) 28 (2013): 1139-1147. [pdf] (Momentum optimizer) \u2b50\u2b50\n[23] Kingma, Diederik, and Jimmy Ba. \"Adam: A method for stochastic optimization.\" arXiv preprint arXiv:1412.6980 (2014). [pdf] (Maybe used most often currently) \u2b50\u2b50\u2b50\n[24] Andrychowicz, Marcin, et al. \"Learning to learn by gradient descent by gradient descent.\" arXiv preprint arXiv:1606.04474 (2016). [pdf] (Neural Optimizer,Amazing Work) \u2b50\u2b50\u2b50\u2b50\u2b50\n[25] Han, Song, Huizi Mao, and William J. Dally. \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding.\" CoRR, abs\/1510.00149 2 (2015). [pdf] (ICLR best paper, new direction to make NN running fast,DeePhi Tech Startup) \u2b50\u2b50\u2b50\u2b50\u2b50\n[26] Iandola, Forrest N., et al. \"SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and< 1MB model size.\" arXiv preprint arXiv:1602.07360 (2016). [pdf] (Also a new direction to optimize NN,DeePhi Tech Startup) \u2b50\u2b50\u2b50\u2b50\n2.3 Unsupervised Learning \/ Deep Generative Model\n[27] Le, Quoc V. \"Building high-level features using large scale unsupervised learning.\" 2013 IEEE international conference on acoustics, speech and signal processing. IEEE, 2013. [pdf] (Milestone, Andrew Ng, Google Brain Project, Cat) \u2b50\u2b50\u2b50\u2b50\n[28] Kingma, Diederik P., and Max Welling. \"Auto-encoding variational bayes.\" arXiv preprint arXiv:1312.6114 (2013). [pdf] (VAE) \u2b50\u2b50\u2b50\u2b50\n[29] Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in Neural Information Processing Systems. 2014. [pdf] (GAN,super cool idea) \u2b50\u2b50\u2b50\u2b50\u2b50\n[30] Radford, Alec, Luke Metz, and Soumith Chintala. \"Unsupervised representation learning with deep convolutional generative adversarial networks.\" arXiv preprint arXiv:1511.06434 (2015). [pdf] (DCGAN) \u2b50\u2b50\u2b50\u2b50\n[31] Gregor, Karol, et al. \"DRAW: A recurrent neural network for image generation.\" arXiv preprint arXiv:1502.04623 (2015). [pdf] (VAE with attention, outstanding work) \u2b50\u2b50\u2b50\u2b50\u2b50\n[32] Oord, Aaron van den, Nal Kalchbrenner, and Koray Kavukcuoglu. \"Pixel recurrent neural networks.\" arXiv preprint arXiv:1601.06759 (2016). [pdf] (PixelRNN) \u2b50\u2b50\u2b50\u2b50\n[33] Oord, Aaron van den, et al. \"Conditional image generation with PixelCNN decoders.\" arXiv preprint arXiv:1606.05328 (2016). [pdf] (PixelCNN) \u2b50\u2b50\u2b50\u2b50\n2.4 RNN \/ Sequence-to-Sequence Model\n[34] Graves, Alex. \"Generating sequences with recurrent neural networks.\" arXiv preprint arXiv:1308.0850 (2013). [pdf] (LSTM, very nice generating result, show the power of RNN) \u2b50\u2b50\u2b50\u2b50\n[35] Cho, Kyunghyun, et al. \"Learning phrase representations using RNN encoder-decoder for statistical machine translation.\" arXiv preprint arXiv:1406.1078 (2014). [pdf] (First Seq-to-Seq Paper) \u2b50\u2b50\u2b50\u2b50\n[36] Sutskever, Ilya, Oriol Vinyals, and Quoc V. Le. \"Sequence to sequence learning with neural networks.\" Advances in neural information processing systems. 2014. [pdf] (Outstanding Work) \u2b50\u2b50\u2b50\u2b50\u2b50\n[37] Bahdanau, Dzmitry, KyungHyun Cho, and Yoshua Bengio. \"Neural Machine Translation by Jointly Learning to Align and Translate.\" arXiv preprint arXiv:1409.0473 (2014). [pdf] \u2b50\u2b50\u2b50\u2b50\n[38] Vinyals, Oriol, and Quoc Le. \"A neural conversational model.\" arXiv preprint arXiv:1506.05869 (2015). [pdf] (Seq-to-Seq on Chatbot) \u2b50\u2b50\u2b50\n2.5 Neural Turing Machine\n[39] Graves, Alex, Greg Wayne, and Ivo Danihelka. \"Neural turing machines.\" arXiv preprint arXiv:1410.5401 (2014). [pdf] (Basic Prototype of Future Computer) \u2b50\u2b50\u2b50\u2b50\u2b50\n[40] Zaremba, Wojciech, and Ilya Sutskever. \"Reinforcement learning neural Turing machines.\" arXiv preprint arXiv:1505.00521 362 (2015). [pdf] \u2b50\u2b50\u2b50\n[41] Weston, Jason, Sumit Chopra, and Antoine Bordes. \"Memory networks.\" arXiv preprint arXiv:1410.3916 (2014). [pdf] \u2b50\u2b50\u2b50\n[42] Sukhbaatar, Sainbayar, Jason Weston, and Rob Fergus. \"End-to-end memory networks.\" Advances in neural information processing systems. 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\n[43] Vinyals, Oriol, Meire Fortunato, and Navdeep Jaitly. \"Pointer networks.\" Advances in Neural Information Processing Systems. 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\n[44] Graves, Alex, et al. \"Hybrid computing using a neural network with dynamic external memory.\" Nature (2016). [pdf] (Milestone,combine above papers' ideas) \u2b50\u2b50\u2b50\u2b50\u2b50\n2.6 Deep Reinforcement Learning\n[45] Mnih, Volodymyr, et al. \"Playing atari with deep reinforcement learning.\" arXiv preprint arXiv:1312.5602 (2013). [pdf]) (First Paper named deep reinforcement learning) \u2b50\u2b50\u2b50\u2b50\n[46] Mnih, Volodymyr, et al. \"Human-level control through deep reinforcement learning.\" Nature 518.7540 (2015): 529-533. [pdf] (Milestone) \u2b50\u2b50\u2b50\u2b50\u2b50\n[47] Wang, Ziyu, Nando de Freitas, and Marc Lanctot. \"Dueling network architectures for deep reinforcement learning.\" arXiv preprint arXiv:1511.06581 (2015). [pdf] (ICLR best paper,great idea) \u2b50\u2b50\u2b50\u2b50\n[48] Mnih, Volodymyr, et al. \"Asynchronous methods for deep reinforcement learning.\" arXiv preprint arXiv:1602.01783 (2016). [pdf] (State-of-the-art method) \u2b50\u2b50\u2b50\u2b50\u2b50\n[49] Lillicrap, Timothy P., et al. \"Continuous control with deep reinforcement learning.\" arXiv preprint arXiv:1509.02971 (2015). [pdf] (DDPG) \u2b50\u2b50\u2b50\u2b50\n[50] Gu, Shixiang, et al. \"Continuous Deep Q-Learning with Model-based Acceleration.\" arXiv preprint arXiv:1603.00748 (2016). [pdf] (NAF) \u2b50\u2b50\u2b50\u2b50\n[51] Schulman, John, et al. \"Trust region policy optimization.\" CoRR, abs\/1502.05477 (2015). [pdf] (TRPO) \u2b50\u2b50\u2b50\u2b50\n[52] Silver, David, et al. \"Mastering the game of Go with deep neural networks and tree search.\" Nature 529.7587 (2016): 484-489. [pdf] (AlphaGo) \u2b50\u2b50\u2b50\u2b50\u2b50\n2.7 Deep Transfer Learning \/ Lifelong Learning \/ especially for RL\n[53] Bengio, Yoshua. \"Deep Learning of Representations for Unsupervised and Transfer Learning.\" ICML Unsupervised and Transfer Learning 27 (2012): 17-36. [pdf] (A Tutorial) \u2b50\u2b50\u2b50\n[54] Silver, Daniel L., Qiang Yang, and Lianghao Li. \"Lifelong Machine Learning Systems: Beyond Learning Algorithms.\" AAAI Spring Symposium: Lifelong Machine Learning. 2013. [pdf] (A brief discussion about lifelong learning) \u2b50\u2b50\u2b50\n[55] Hinton, Geoffrey, Oriol Vinyals, and Jeff Dean. \"Distilling the knowledge in a neural network.\" arXiv preprint arXiv:1503.02531 (2015). [pdf] (Godfather's Work) \u2b50\u2b50\u2b50\u2b50\n[56] Rusu, Andrei A., et al. \"Policy distillation.\" arXiv preprint arXiv:1511.06295 (2015). [pdf] (RL domain) \u2b50\u2b50\u2b50\n[57] Parisotto, Emilio, Jimmy Lei Ba, and Ruslan Salakhutdinov. \"Actor-mimic: Deep multitask and transfer reinforcement learning.\" arXiv preprint arXiv:1511.06342 (2015). [pdf] (RL domain) \u2b50\u2b50\u2b50\n[58] Rusu, Andrei A., et al. \"Progressive neural networks.\" arXiv preprint arXiv:1606.04671 (2016). [pdf] (Outstanding Work, A novel idea) \u2b50\u2b50\u2b50\u2b50\u2b50\n2.8 One Shot Deep Learning\n[59] Lake, Brenden M., Ruslan Salakhutdinov, and Joshua B. Tenenbaum. \"Human-level concept learning through probabilistic program induction.\" Science 350.6266 (2015): 1332-1338. [pdf] (No Deep Learning,but worth reading) \u2b50\u2b50\u2b50\u2b50\u2b50\n[60] Koch, Gregory, Richard Zemel, and Ruslan Salakhutdinov. \"Siamese Neural Networks for One-shot Image Recognition.\"(2015) [pdf] \u2b50\u2b50\u2b50\n[61] Santoro, Adam, et al. \"One-shot Learning with Memory-Augmented Neural Networks.\" arXiv preprint arXiv:1605.06065 (2016). [pdf] (A basic step to one shot learning) \u2b50\u2b50\u2b50\u2b50\n[62] Vinyals, Oriol, et al. \"Matching Networks for One Shot Learning.\" arXiv preprint arXiv:1606.04080 (2016). [pdf] \u2b50\u2b50\u2b50\n[63] Hariharan, Bharath, and Ross Girshick. \"Low-shot visual object recognition.\" arXiv preprint arXiv:1606.02819 (2016). [pdf] (A step to large data) \u2b50\u2b50\u2b50\u2b50\n3 Applications\n3.1 NLP(Natural Language Processing)\n[1] Antoine Bordes, et al. \"Joint Learning of Words and Meaning Representations for Open-Text Semantic Parsing.\" AISTATS(2012) [pdf] \u2b50\u2b50\u2b50\u2b50\n[2] Mikolov, et al. \"Distributed representations of words and phrases and their compositionality.\" ANIPS(2013): 3111-3119 [pdf] (word2vec) \u2b50\u2b50\u2b50\n[3] Sutskever, et al. \"\u201cSequence to sequence learning with neural networks.\" ANIPS(2014) [pdf] \u2b50\u2b50\u2b50\n[4] Ankit Kumar, et al. \"\u201cAsk Me Anything: Dynamic Memory Networks for Natural Language Processing.\" arXiv preprint arXiv:1506.07285(2015) [pdf] \u2b50\u2b50\u2b50\u2b50\n[5] Yoon Kim, et al. \"Character-Aware Neural Language Models.\" NIPS(2015) arXiv preprint arXiv:1508.06615(2015) [pdf] \u2b50\u2b50\u2b50\u2b50\n[6] Jason Weston, et al. \"Towards AI-Complete Question Answering: A Set of Prerequisite Toy Tasks.\" arXiv preprint arXiv:1502.05698(2015) [pdf] (bAbI tasks) \u2b50\u2b50\u2b50\n[7] Karl Moritz Hermann, et al. \"Teaching Machines to Read and Comprehend.\" arXiv preprint arXiv:1506.03340(2015) [pdf] (CNN\/DailyMail cloze style questions) \u2b50\u2b50\n[8] Alexis Conneau, et al. \"Very Deep Convolutional Networks for Natural Language Processing.\" arXiv preprint arXiv:1606.01781(2016) [pdf] (state-of-the-art in text classification) \u2b50\u2b50\u2b50\n[9] Armand Joulin, et al. \"Bag of Tricks for Efficient Text Classification.\" arXiv preprint arXiv:1607.01759(2016) [pdf] (slightly worse than state-of-the-art, but a lot faster) \u2b50\u2b50\u2b50\n3.2 Object Detection\n[1] Szegedy, Christian, Alexander Toshev, and Dumitru Erhan. \"Deep neural networks for object detection.\" Advances in Neural Information Processing Systems. 2013. [pdf] \u2b50\u2b50\u2b50\n[2] Girshick, Ross, et al. \"Rich feature hierarchies for accurate object detection and semantic segmentation.\" Proceedings of the IEEE conference on computer vision and pattern recognition. 2014. [pdf] (RCNN) \u2b50\u2b50\u2b50\u2b50\u2b50\n[3] He, Kaiming, et al. \"Spatial pyramid pooling in deep convolutional networks for visual recognition.\" European Conference on Computer Vision. Springer International Publishing, 2014. [pdf] (SPPNet) \u2b50\u2b50\u2b50\u2b50\n[4] Girshick, Ross. \"Fast r-cnn.\" Proceedings of the IEEE International Conference on Computer Vision. 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\n[5] Ren, Shaoqing, et al. \"Faster R-CNN: Towards real-time object detection with region proposal networks.\" Advances in neural information processing systems. 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\n[6] Redmon, Joseph, et al. \"You only look once: Unified, real-time object detection.\" arXiv preprint arXiv:1506.02640 (2015). [pdf] (YOLO,Oustanding Work, really practical) \u2b50\u2b50\u2b50\u2b50\u2b50\n[7] Liu, Wei, et al. \"SSD: Single Shot MultiBox Detector.\" arXiv preprint arXiv:1512.02325 (2015). [pdf] \u2b50\u2b50\u2b50\n[8] Dai, Jifeng, et al. \"R-FCN: Object Detection via\nRegion-based Fully Convolutional Networks.\" arXiv preprint arXiv:1605.06409 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[9] He, Gkioxari, et al. \"Mask R-CNN\" arXiv preprint arXiv:1703.06870 (2017). [pdf] \u2b50\u2b50\u2b50\u2b50\n3.3 Visual Tracking\n[1] Wang, Naiyan, and Dit-Yan Yeung. \"Learning a deep compact image representation for visual tracking.\" Advances in neural information processing systems. 2013. [pdf] (First Paper to do visual tracking using Deep Learning,DLT Tracker) \u2b50\u2b50\u2b50\n[2] Wang, Naiyan, et al. \"Transferring rich feature hierarchies for robust visual tracking.\" arXiv preprint arXiv:1501.04587 (2015). [pdf] (SO-DLT) \u2b50\u2b50\u2b50\u2b50\n[3] Wang, Lijun, et al. \"Visual tracking with fully convolutional networks.\" Proceedings of the IEEE International Conference on Computer Vision. 2015. [pdf] (FCNT) \u2b50\u2b50\u2b50\u2b50\n[4] Held, David, Sebastian Thrun, and Silvio Savarese. \"Learning to Track at 100 FPS with Deep Regression Networks.\" arXiv preprint arXiv:1604.01802 (2016). [pdf] (GOTURN,Really fast as a deep learning method,but still far behind un-deep-learning methods) \u2b50\u2b50\u2b50\u2b50\n[5] Bertinetto, Luca, et al. \"Fully-Convolutional Siamese Networks for Object Tracking.\" arXiv preprint arXiv:1606.09549 (2016). [pdf] (SiameseFC,New state-of-the-art for real-time object tracking) \u2b50\u2b50\u2b50\u2b50\n[6] Martin Danelljan, Andreas Robinson, Fahad Khan, Michael Felsberg. \"Beyond Correlation Filters: Learning Continuous Convolution Operators for Visual Tracking.\" ECCV (2016) [pdf] (C-COT) \u2b50\u2b50\u2b50\u2b50\n[7] Nam, Hyeonseob, Mooyeol Baek, and Bohyung Han. \"Modeling and Propagating CNNs in a Tree Structure for Visual Tracking.\" arXiv preprint arXiv:1608.07242 (2016). [pdf] (VOT2016 Winner,TCNN) \u2b50\u2b50\u2b50\u2b50\n3.4 Image Caption\n[1] Farhadi,Ali,etal. \"Every picture tells a story: Generating sentences from images\". In Computer VisionECCV 2010. Springer Berlin Heidelberg:15-29, 2010. [pdf] \u2b50\u2b50\u2b50\n[2] Kulkarni, Girish, et al. \"Baby talk: Understanding and generating image descriptions\". In Proceedings of the 24th CVPR, 2011. [pdf]\u2b50\u2b50\u2b50\u2b50\n[3] Vinyals, Oriol, et al. \"Show and tell: A neural image caption generator\". In arXiv preprint arXiv:1411.4555, 2014. [pdf]\u2b50\u2b50\u2b50\n[4] Donahue, Jeff, et al. \"Long-term recurrent convolutional networks for visual recognition and description\". In arXiv preprint arXiv:1411.4389 ,2014. [pdf]\n[5] Karpathy, Andrej, and Li Fei-Fei. \"Deep visual-semantic alignments for generating image descriptions\". In arXiv preprint arXiv:1412.2306, 2014. [pdf]\u2b50\u2b50\u2b50\u2b50\u2b50\n[6] Karpathy, Andrej, Armand Joulin, and Fei Fei F. Li. \"Deep fragment embeddings for bidirectional image sentence mapping\". In Advances in neural information processing systems, 2014. [pdf]\u2b50\u2b50\u2b50\u2b50\n[7] Fang, Hao, et al. \"From captions to visual concepts and back\". In arXiv preprint arXiv:1411.4952, 2014. [pdf]\u2b50\u2b50\u2b50\u2b50\u2b50\n[8] Chen, Xinlei, and C. Lawrence Zitnick. \"Learning a recurrent visual representation for image caption generation\". In arXiv preprint arXiv:1411.5654, 2014. [pdf]\u2b50\u2b50\u2b50\u2b50\n[9] Mao, Junhua, et al. \"Deep captioning with multimodal recurrent neural networks (m-rnn)\". In arXiv preprint arXiv:1412.6632, 2014. [pdf]\u2b50\u2b50\u2b50\n[10] Xu, Kelvin, et al. \"Show, attend and tell: Neural image caption generation with visual attention\". In arXiv preprint arXiv:1502.03044, 2015. [pdf]\u2b50\u2b50\u2b50\u2b50\u2b50\n3.5 Machine Translation\n\nSome milestone papers are listed in RNN \/ Seq-to-Seq topic.\n\n[1] Luong, Minh-Thang, et al. \"Addressing the rare word problem in neural machine translation.\" arXiv preprint arXiv:1410.8206 (2014). [pdf] \u2b50\u2b50\u2b50\u2b50\n[2] Sennrich, et al. \"Neural Machine Translation of Rare Words with Subword Units\". In arXiv preprint arXiv:1508.07909, 2015. [pdf]\u2b50\u2b50\u2b50\n[3] Luong, Minh-Thang, Hieu Pham, and Christopher D. Manning. \"Effective approaches to attention-based neural machine translation.\" arXiv preprint arXiv:1508.04025 (2015). [pdf] \u2b50\u2b50\u2b50\u2b50\n[4] Chung, et al. \"A Character-Level Decoder without Explicit Segmentation for Neural Machine Translation\". In arXiv preprint arXiv:1603.06147, 2016. [pdf]\u2b50\u2b50\n[5] Lee, et al. \"Fully Character-Level Neural Machine Translation without Explicit Segmentation\". In arXiv preprint arXiv:1610.03017, 2016. [pdf]\u2b50\u2b50\u2b50\u2b50\u2b50\n[6] Wu, Schuster, Chen, Le, et al. \"Google's Neural Machine Translation System: Bridging the Gap between Human and Machine Translation\". In arXiv preprint arXiv:1609.08144v2, 2016. [pdf] (Milestone) \u2b50\u2b50\u2b50\u2b50\n3.6 Robotics\n[1] Koutn\u00edk, Jan, et al. \"Evolving large-scale neural networks for vision-based reinforcement learning.\" Proceedings of the 15th annual conference on Genetic and evolutionary computation. ACM, 2013. [pdf] \u2b50\u2b50\u2b50\n[2] Levine, Sergey, et al. \"End-to-end training of deep visuomotor policies.\" Journal of Machine Learning Research 17.39 (2016): 1-40. [pdf] \u2b50\u2b50\u2b50\u2b50\u2b50\n[3] Pinto, Lerrel, and Abhinav Gupta. \"Supersizing self-supervision: Learning to grasp from 50k tries and 700 robot hours.\" arXiv preprint arXiv:1509.06825 (2015). [pdf] \u2b50\u2b50\u2b50\n[4] Levine, Sergey, et al. \"Learning Hand-Eye Coordination for Robotic Grasping with Deep Learning and Large-Scale Data Collection.\" arXiv preprint arXiv:1603.02199 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[5] Zhu, Yuke, et al. \"Target-driven Visual Navigation in Indoor Scenes using Deep Reinforcement Learning.\" arXiv preprint arXiv:1609.05143 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[6] Yahya, Ali, et al. \"Collective Robot Reinforcement Learning with Distributed Asynchronous Guided Policy Search.\" arXiv preprint arXiv:1610.00673 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[7] Gu, Shixiang, et al. \"Deep Reinforcement Learning for Robotic Manipulation.\" arXiv preprint arXiv:1610.00633 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[8] A Rusu, M Vecerik, Thomas Roth\u00f6rl, N Heess, R Pascanu, R Hadsell.\"Sim-to-Real Robot Learning from Pixels with Progressive Nets.\" arXiv preprint arXiv:1610.04286 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[9] Mirowski, Piotr, et al. \"Learning to navigate in complex environments.\" arXiv preprint arXiv:1611.03673 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n3.7 Art\n[1] Mordvintsev, Alexander; Olah, Christopher; Tyka, Mike (2015). \"Inceptionism: Going Deeper into Neural Networks\". Google Research. [html] (Deep Dream)\n\u2b50\u2b50\u2b50\u2b50\n[2] Gatys, Leon A., Alexander S. Ecker, and Matthias Bethge. \"A neural algorithm of artistic style.\" arXiv preprint arXiv:1508.06576 (2015). [pdf] (Outstanding Work, most successful method currently) \u2b50\u2b50\u2b50\u2b50\u2b50\n[3] Zhu, Jun-Yan, et al. \"Generative Visual Manipulation on the Natural Image Manifold.\" European Conference on Computer Vision. Springer International Publishing, 2016. [pdf] (iGAN) \u2b50\u2b50\u2b50\u2b50\n[4] Champandard, Alex J. \"Semantic Style Transfer and Turning Two-Bit Doodles into Fine Artworks.\" arXiv preprint arXiv:1603.01768 (2016). [pdf] (Neural Doodle) \u2b50\u2b50\u2b50\u2b50\n[5] Zhang, Richard, Phillip Isola, and Alexei A. Efros. \"Colorful Image Colorization.\" arXiv preprint arXiv:1603.08511 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[6] Johnson, Justin, Alexandre Alahi, and Li Fei-Fei. \"Perceptual losses for real-time style transfer and super-resolution.\" arXiv preprint arXiv:1603.08155 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[7] Vincent Dumoulin, Jonathon Shlens and Manjunath Kudlur. \"A learned representation for artistic style.\" arXiv preprint arXiv:1610.07629 (2016). [pdf] \u2b50\u2b50\u2b50\u2b50\n[8] Gatys, Leon and Ecker, et al.\"Controlling Perceptual Factors in Neural Style Transfer.\" arXiv preprint arXiv:1611.07865 (2016). [pdf] (control style transfer over spatial location,colour information and across spatial scale)\u2b50\u2b50\u2b50\u2b50\n[9] Ulyanov, Dmitry and Lebedev, Vadim, et al. \"Texture Networks: Feed-forward Synthesis of Textures and Stylized Images.\" arXiv preprint arXiv:1603.03417(2016). [pdf] (texture generation and style transfer) \u2b50\u2b50\u2b50\u2b50\n3.8 Object Segmentation\n[1] J. Long, E. Shelhamer, and T. Darrell, \u201cFully convolutional networks for semantic segmentation.\u201d in CVPR, 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\u2b50\n[2] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and A. L. Yuille. \"Semantic image segmentation with deep convolutional nets and fully connected crfs.\" In ICLR, 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\u2b50\n[3] Pinheiro, P.O., Collobert, R., Dollar, P. \"Learning to segment object candidates.\" In: NIPS. 2015. [pdf] \u2b50\u2b50\u2b50\u2b50\n[4] Dai, J., He, K., Sun, J. \"Instance-aware semantic segmentation via multi-task network cascades.\" in CVPR. 2016 [pdf] \u2b50\u2b50\u2b50\n[5] Dai, J., He, K., Sun, J. \"Instance-sensitive Fully Convolutional Networks.\" arXiv preprint arXiv:1603.08678 (2016). [pdf] \u2b50\u2b50\u2b50\n","141":"\n\n\n\n\n\nManim is an animation engine for explanatory math videos. It's used to create precise animations programmatically, as seen in the videos at 3Blue1Brown.\nThis repository contains the version of manim used by 3Blue1Brown. There is also a community maintained version at https:\/\/github.com\/ManimCommunity\/manim\/.\nTo get help or to join the development effort, please join the discord.\nInstallation\nManim runs on Python 3.6 or higher version. You can install it from PyPI via pip:\npip3 install manimlib\nSystem requirements are cairo, ffmpeg, sox (optional, if you want to play the prompt tone after running), latex (optional, if you want to use LaTeX).\nYou can now use it via the manim command. For example:\nmanim my_project.py MyScene\nFor more options, take a look at the Using manim sections further below.\nDirectly\nIf you want to hack on manimlib itself, clone this repository and in that directory execute:\n# Install python requirements\npython3 -m pip install -r requirements.txt\n\n# Try it out\npython3 .\/manim.py example_scenes.py SquareToCircle -pl\nDirectly (Windows)\n\n\nInstall FFmpeg.\n\n\nInstall Cairo. For most users, pycairo\u20111.18.0\u2011cp37\u2011cp37m\u2011win32.whl will do fine (you can download it or other versions from here).\npip3 install C:\\path\\to\\wheel\\pycairo\u20111.18.0\u2011cp37\u2011cp37m\u2011win32.whl\n\n\nInstall a LaTeX distribution. MiKTeX is recommended.\n\n\nInstall SoX.\n\n\nInstall the remaining Python packages.\ngit clone https:\/\/github.com\/3b1b\/manim.git\ncd manim\npip3 install -r requirements.txt\npython3 manim.py example_scenes.py SquareToCircle -pl\n\n\nAnaconda Install\n\nInstall sox and latex as above.\nCreate a conda environment using conda env create -f environment.yml\nWINDOWS ONLY Install pyreadline via pip install pyreadline.\n\nUsing virtualenv and virtualenvwrapper\nAfter installing virtualenv and virtualenvwrapper\ngit clone https:\/\/github.com\/3b1b\/manim.git\nmkvirtualenv -a manim -r requirements.txt manim\npython3 -m manim example_scenes.py SquareToCircle -pl\nUsing Docker\nSince it's a bit tricky to get all the dependencies set up just right, there is a Dockerfile and Compose file provided in this repo as well as a premade image on Docker Hub. The Dockerfile contains instructions on how to build a manim image, while the Compose file contains instructions on how to run the image.\nThe prebuilt container image has manim repository included.\nINPUT_PATH is where the container looks for scene files. You must set the INPUT_PATH\nenvironment variable to the absolute path containing your scene file and the\nOUTPUT_PATH environment variable to the directory where you want media to be written.\n\nInstall Docker\nInstall Docker Compose\nRender an animation:\n\nINPUT_PATH=\/path\/to\/dir\/containing\/source\/code \\\nOUTPUT_PATH=\/path\/to\/output\/ \\\ndocker-compose run manim example_scenes.py SquareToCircle -l\nThe command needs to be run as root if your username is not in the docker group.\nYou can replace example.scenes.py with any relative path from your INPUT_PATH.\n\nAfter running the output will say files ready at \/tmp\/output\/, which refers to path inside the container. Your OUTPUT_PATH is bind mounted to this \/tmp\/output so any changes made by the container to \/tmp\/output will be mirrored on your OUTPUT_PATH. \/media\/ will be created in OUTPUT_PATH.\n-p won't work as manim would look for video player in the container system, which it does not have.\nThe first time you execute the above command, Docker will pull the image from Docker Hub and cache it. Any subsequent runs until the image is evicted will use the cached image.\nNote that the image doesn't have any development tools installed and can't preview animations. Its purpose is building and testing only.\nUsing manim\nTry running the following:\npython3 -m manim example_scenes.py SquareToCircle -pl\nThe -p flag in the command above is for previewing, meaning the video file will automatically open when it is done rendering. The -l flag is for a faster rendering at a lower quality.\nSome other useful flags include:\n\n-s to skip to the end and just show the final frame.\n-n <number> to skip ahead to the n'th animation of a scene.\n-f to show the file in finder (for OSX).\n\nSet MEDIA_DIR environment variable to specify where the image and animation files will be written.\nLook through the old_projects folder to see the code for previous 3b1b videos. Note, however, that developments are often made to the library without considering backwards compatibility with those old projects. To run an old project with a guarantee that it will work, you will have to go back to the commit which completed that project.\nWhile developing a scene, the -sp flags are helpful to just see what things look like at the end without having to generate the full animation. It can also be helpful to use the -n flag to skip over some number of animations.\nDocumentation\nDocumentation is in progress at eulertour.com\/docs. And there is also an all-in-one documentation and tutorials maintained by @manim-kindergarten: manim.ml (in Chinese).\nWalkthrough\nTodd Zimmerman put together a tutorial on getting started with manim, which has been updated to run on Python 3.7.\nmanim-kindergarten wrote and collected some useful extra classes and some codes of videos in manim_sandbox repo.\nContributing\nOnly accepts pull requests that fixes bugs \/ fixes typos \/ improves existing content (for more information, see #1243). Most pull requests should be directed to the community version.\nLicense\nAll files in the directory from_3b1b, which by and large generate the visuals for 3b1b videos, are copyright 3Blue1Brown.\nThe general purpose animation code found in the remainder of the repository, on the other hand, is under the MIT license.\n","142":"\n\n\n\n\n\n\n\n\nAI learning\n\u7f51\u7ad9\u5730\u5740\n\n\u7ec4\u7ec7\u6784\u5efa\n\n\nGitHub Pages(\u56fd\u5916): https:\/\/ailearning.apachecn.org\nGitee  Pages(\u56fd\u5185): https:\/\/apachecn.gitee.io\/ailearning\n\n\n\u7b2c\u4e09\u65b9\u7ad9\u957f\n\n\u5730\u5740A: xxx (\u6b22\u8fce\u7559\u8a00\uff0c\u6211\u4eec\u5b8c\u5584\u8865\u5145)\n\u4e0b\u8f7d\nDocker\ndocker pull apachecn0\/ailearning\ndocker run -tid -p <port>:80 apachecn0\/ailearning\n# \u8bbf\u95ee http:\/\/localhost:{port} \u67e5\u770b\u6587\u6863\n\nPYPI\npip install apachecn-ailearning\napachecn-ailearning <port>\n# \u8bbf\u95ee http:\/\/localhost:{port} \u67e5\u770b\u6587\u6863\n\nNPM\nnpm install -g ailearning\nailearning <port>\n# \u8bbf\u95ee http:\/\/localhost:{port} \u67e5\u770b\u6587\u6863\n\n\u7ec4\u7ec7\u4ecb\u7ecd\n\n\u5408\u4f5cor\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb: apachecn@163.com\n\u6211\u4eec\u4e0d\u662f Apache \u7684\u5b98\u65b9\u7ec4\u7ec7\/\u673a\u6784\/\u56e2\u4f53\uff0c\u53ea\u662f Apache \u6280\u672f\u6808\uff08\u4ee5\u53ca AI\uff09\u7684\u7231\u597d\u8005\uff01\nApacheCN - \u5b66\u4e60\u7fa4\u3010724187166\u3011\n\n\n\u6b22\u8fce\u4efb\u4f55\u4eba\u53c2\u4e0e\u548c\u5b8c\u5584: \u4e00\u4e2a\u4eba\u53ef\u4ee5\u8d70\u7684\u5f88\u5feb\uff0c\u4f46\u662f\u4e00\u7fa4\u4eba\u5374\u53ef\u4ee5\u8d70\u7684\u66f4\u8fdc\n\n\u8def\u7ebf\u56fe\n\n\u5165\u95e8\u53ea\u770b: \u6b65\u9aa4 1 => 2 => 3\uff0c\u4f60\u53ef\u4ee5\u5f53\u5927\u725b\uff01\n\u4e2d\u7ea7\u8865\u5145 - \u8d44\u6599\u5e93: https:\/\/github.com\/apachecn\/ai-roadmap\n\n\n\u8865\u5145\n\n\n\u5934\u6761\u89c6\u9891\u6c47\u603b: https:\/\/www.ixigua.com\/home\/85684906755\n\u7b97\u6cd5\u5237\u9898: https:\/\/www.ixigua.com\/pseries\/6822642486343631363\/\n\u9762\u8bd5\u6c42\u804c: https:\/\/www.ixigua.com\/pseries\/6822563009391493636\/\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218: https:\/\/www.ixigua.com\/pseries\/6822816341615968772\/\nNLP\u6559\u5b66\u89c6\u9891: https:\/\/www.ixigua.com\/pseries\/6828241431295951373\/\nAI\u5e38\u7528\u51fd\u6570\u8bf4\u660e: https:\/\/github.com\/apachecn\/AiLearning\/tree\/master\/AI\u5e38\u7528\u51fd\u6570\u8bf4\u660e.md\n\n1.\u673a\u5668\u5b66\u4e60 - \u57fa\u7840\n\u57fa\u672c\u4ecb\u7ecd\n\n\u8d44\u6599\u6765\u6e90: Machine Learning in Action(\u673a\u5668\u5b66\u4e60\u5b9e\u6218-\u4e2a\u4eba\u7b14\u8bb0)\n\u7edf\u4e00\u6570\u636e\u5730\u5740: https:\/\/github.com\/apachecn\/data\n\n\u767e\u5ea6\u4e91\u6253\u5305\u5730\u5740: https:\/\/github.com\/apachecn\/data\/issues\/3\n\n\n\u4e66\u7c4d\u4e0b\u8f7d\u5730\u5740: https:\/\/github.com\/apachecn\/data\/tree\/master\/book\n\u673a\u5668\u5b66\u4e60\u4e0b\u8f7d\u5730\u5740: https:\/\/github.com\/apachecn\/data\/tree\/master\/\u673a\u5668\u5b66\u4e60\n\u6df1\u5ea6\u5b66\u4e60\u6570\u636e\u5730\u5740: https:\/\/github.com\/apachecn\/data\/tree\/master\/\u6df1\u5ea6\u5b66\u4e60\n\u63a8\u8350\u7cfb\u7edf\u6570\u636e\u5730\u5740: https:\/\/github.com\/apachecn\/data\/tree\/master\/\u63a8\u8350\u7cfb\u7edf\n\u89c6\u9891\u7f51\u7ad9: \u4f18\u9177 \uff0fbilibili \/ Acfun \/ \u7f51\u6613\u4e91\u8bfe\u5802\uff0c\u53ef\u76f4\u63a5\u5728\u7ebf\u64ad\u653e\u3002\uff08\u6700\u4e0b\u65b9\u6709\u76f8\u5e94\u94fe\u63a5\uff09\n-- \u63a8\u8350 \u7ea2\u8272\u77f3\u5934: \u53f0\u6e7e\u5927\u5b66\u6797\u8f69\u7530\u673a\u5668\u5b66\u4e60\u7b14\u8bb0\n-- \u63a8\u8350 \u673a\u5668\u5b66\u4e60\u7b14\u8bb0: https:\/\/feisky.xyz\/machine-learning\n\n\u5b66\u4e60\u6587\u6863\n\n\n\n\u6a21\u5757\n\u7ae0\u8282\n\u7c7b\u578b\n\u8d1f\u8d23\u4eba(GitHub)\nQQ\n\n\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 1 \u7ae0: \u673a\u5668\u5b66\u4e60\u57fa\u7840\n\u4ecb\u7ecd\n@\u6bdb\u7ea2\u52a8\n1306014226\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 2 \u7ae0: KNN \u8fd1\u90bb\u7b97\u6cd5\n\u5206\u7c7b\n@\u5c24\u6c38\u6c5f\n279393323\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 3 \u7ae0: \u51b3\u7b56\u6811\n\u5206\u7c7b\n@\u666f\u6d9b\n844300439\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 4 \u7ae0: \u6734\u7d20\u8d1d\u53f6\u65af\n\u5206\u7c7b\n@wnma3mz@\u5206\u6790\n1003324213244970749\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 5 \u7ae0: Logistic\u56de\u5f52\n\u5206\u7c7b\n@\u5fae\u5149\u540c\u5c18\n529925688\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 6 \u7ae0: SVM \u652f\u6301\u5411\u91cf\u673a\n\u5206\u7c7b\n@\u738b\u5fb7\u7ea2\n934969547\n\n\n\u7f51\u4e0a\u7ec4\u5408\u5185\u5bb9\n\u7b2c 7 \u7ae0: \u96c6\u6210\u65b9\u6cd5\uff08\u968f\u673a\u68ee\u6797\u548c AdaBoost\uff09\n\u5206\u7c7b\n@\u7247\u523b\n529815144\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 8 \u7ae0: \u56de\u5f52\n\u56de\u5f52\n@\u5fae\u5149\u540c\u5c18\n529925688\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 9 \u7ae0: \u6811\u56de\u5f52\n\u56de\u5f52\n@\u5fae\u5149\u540c\u5c18\n529925688\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 10 \u7ae0: K-Means \u805a\u7c7b\n\u805a\u7c7b\n@\u5f90\u662d\u6e05\n827106588\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 11 \u7ae0: \u5229\u7528 Apriori \u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790\n\u9891\u7e41\u9879\u96c6\n@\u5218\u6d77\u98de\n1049498972\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 12 \u7ae0: FP-growth \u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6\n\u9891\u7e41\u9879\u96c6\n@\u7a0b\u5a01\n842725815\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 13 \u7ae0: \u5229\u7528 PCA \u6765\u7b80\u5316\u6570\u636e\n\u5de5\u5177\n@\u5ed6\u7acb\u5a1f\n835670618\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 14 \u7ae0: \u5229\u7528 SVD \u6765\u7b80\u5316\u6570\u636e\n\u5de5\u5177\n@\u5f20\u4fca\u7693\n714974242\n\n\n\u673a\u5668\u5b66\u4e60\u5b9e\u6218\n\u7b2c 15 \u7ae0: \u5927\u6570\u636e\u4e0e MapReduce\n\u5de5\u5177\n@wnma3mz\n1003324213\n\n\nMl\u9879\u76ee\u5b9e\u6218\n\u7b2c 16 \u7ae0: \u63a8\u8350\u7cfb\u7edf\uff08\u5df2\u8fc1\u79fb\uff09\n\u9879\u76ee\n\u63a8\u8350\u7cfb\u7edf\uff08\u8fc1\u79fb\u540e\u5730\u5740\uff09\n\n\n\n\u7b2c\u4e00\u671f\u7684\u603b\u7ed3\n2017-04-08: \u7b2c\u4e00\u671f\u7684\u603b\u7ed3\n\u603b\u7ed3\n\u603b\u7ed3\n529815144\n\n\n\n\u7f51\u7ad9\u89c6\u9891\n\n\u77e5\u4e4e\u95ee\u7b54-\u7206\u70b8\u5566-\u673a\u5668\u5b66\u4e60\u8be5\u600e\u4e48\u5165\u95e8\uff1f\n\n\u5f53\u7136\u6211\u77e5\u9053\uff0c\u7b2c\u4e00\u53e5\u5c31\u4f1a\u88ab\u5410\u69fd\uff0c\u56e0\u4e3a\u79d1\u73ed\u51fa\u8eab\u7684\u4eba\uff0c\u4e0d\u5c51\u7684\u5410\u4e86\u4e00\u53e3\u553e\u6cab\uff0c\u8bf4\u50bbX\uff0c\u8fd8\u8bc4\u8bba Andrew Ng \u7684\u89c6\u9891\u3002\u3002\n\u6211\u8fd8\u77e5\u9053\u8fd8\u6709\u4e00\u90e8\u5206\u4eba\uff0c\u770b Andrew Ng \u7684\u89c6\u9891\u5c31\u662f\u770b\u4e0d\u61c2\uff0c\u90a3\u795e\u79d8\u7684\u6570\u5b66\u63a8\u5bfc\uff0c\u90a3\u8ff7\u4e4b\u5fae\u7b11\u7684\u82f1\u6587\u7248\u7684\u6559\u5b66\uff0c\u6211\u4f55\u5c1d\u53c8\u4e0d\u662f\u8fd9\u6837\u8d70\u8fc7\u6765\u7684\uff1f\uff1f \u6211\u7684\u5fc3\u53ef\u80fd\u6bd4\u4f60\u4eec\u90fd\u75db\uff0c\u56e0\u4e3a\u6211\u5728\u7f51\u4e0a\u6536\u85cf\u8fc7\u4e0a10\u90e8\u300a\u673a\u5668\u5b66\u4e60\u300b\u76f8\u5173\u89c6\u9891\uff0c\u5916\u52a0\u56fd\u5185\u672c\u571f\u98ce\u683c\u7684\u6559\u7a0b: 7\u6708+\u5c0f\u8c61 \u7b49\u7b49\uff0c\u6211\u90fd\u5f88\u96be\u53bb\u542c\u61c2\uff0c\u76f4\u5230\u6709\u4e00\u5929\uff0c\u88ab\u4e00\u4e2a\u767e\u5ea6\u7684\u9ad8\u7ea7\u7b97\u6cd5\u5206\u6790\u5e08\u63a8\u8350\u8bf4: \u300a\u673a\u5668\u5b66\u4e60\u5b9e\u6218\u300b\u8fd8\u4e0d\u9519\uff0c\u901a\u4fd7\u6613\u61c2\uff0c\u4f60\u53bb\u8bd5\u8bd5\uff1f\uff1f\n\u6211\u8bd5\u4e86\u8bd5\uff0c\u8fd8\u597d\u6211\u7684Python\u57fa\u7840\u548c\u8c03\u8bd5\u80fd\u529b\u8fd8\u4e0d\u9519\uff0c\u57fa\u672c\u4e0a\u4ee3\u7801\u90fd\u8c03\u8bd5\u8fc7\u4e00\u904d\uff0c\u5f88\u591a\u9ad8\u5927\u4e0a\u7684 \"\u7406\u8bba+\u63a8\u5bfc\"\uff0c\u5728\u6211\u773c\u4e2d\u53d8\u6210\u4e86\u51e0\u4e2a \"\u52a0\u51cf\u4e58\u9664+\u5faa\u73af\"\uff0c\u6211\u60f3\u8fd9\u4e0d\u5c31\u662f\u50cf\u6211\u8fd9\u6837\u7684\u7a0b\u5e8f\u5458\u60f3\u8981\u7684\u5165\u95e8\u6559\u7a0b\u4e48\uff1f\n\u5f88\u591a\u7a0b\u5e8f\u5458\u8bf4\u673a\u5668\u5b66\u4e60 TM \u592a\u96be\u5b66\u4e86\uff0c\u662f\u7684\uff0c\u771f TM \u96be\u5b66\uff0c\u6211\u60f3\u6700\u96be\u7684\u662f: \u6ca1\u6709\u4e00\u672c\u50cf\u300a\u673a\u5668\u5b66\u4e60\u5b9e\u6218\u300b\u90a3\u6837\u7684\u4f5c\u8005\u613f\u610f\u4ee5\u7a0b\u5e8f\u5458 Coding \u89d2\u5ea6\u53bb\u7ed9\u5927\u5bb6\u8bb2\u89e3\uff01\uff01\n\u6700\u8fd1\u51e0\u5929\uff0cGitHub \u6da8\u4e86 300\u9897 star\uff0c\u52a0\u7fa4\u7684200\u4eba\uff0c \u73b0\u5728\u8fd8\u5728\u4e0d\u65ad\u7684\u589e\u52a0++\uff0c\u6211\u60f3\u5927\u5bb6\u53ef\u80fd\u90fd\u662f\u611f\u540c\u8eab\u53d7\u5427\uff01\n\u5f88\u591a\u60f3\u5165\u95e8\u65b0\u624b\u5c31\u662f\u88ab\u5ffd\u60a0\u7740\u6536\u85cf\u6536\u85cf\u518d\u6536\u85cf\uff0c\u4f46\u662f\u6700\u540e\u8fd8\u662f\u4ec0\u4e48\u90fd\u6ca1\u6709\u5b66\u5230\uff0c\u4e5f\u5c31\u662f\"\u8d44\u6e90\u6536\u85cf\u5bb6\"\uff0c\u4e5f\u8bb8\u65b0\u624b\u8981\u7684\u5c31\u662f MachineLearning(\u673a\u5668\u5b66\u4e60) \u5b66\u4e60\u8def\u7ebf\u56fe\u3002\u6ca1\u9519\uff0c\u6211\u53ef\u4ee5\u7ed9\u4f60\u4eec\u7684\u4e00\u4efd\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u901a\u8fc7\u89c6\u9891\u8bb0\u5f55\u4e0b\u6765\u6211\u4eec\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002\u6c34\u5e73\u5f53\u7136\u4e5f\u6709\u9650\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u65b0\u624b\u5165\u95e8\uff0c\u7edd\u5bf9\u6ca1\u95ee\u9898\uff0c\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1a\uff0c\u90a3\u7b97\u6211\u8f93\uff01\uff01\n\n\u89c6\u9891\u600e\u4e48\u770b\uff1f\n\n\n\n\u7406\u8bba\u79d1\u73ed\u51fa\u8eab-\u5efa\u8bae\u53bb\u5b66\u4e60 Andrew Ng \u7684\u89c6\u9891\uff08Ng \u7684\u89c6\u9891\u7edd\u5bf9\u662f\u6743\u5a01\uff0c\u8fd9\u4e2a\u6bcb\u5eb8\u7f6e\u7591\uff09\n\u7f16\u7801\u80fd\u529b\u5f3a - \u5efa\u8bae\u770b\u6211\u4eec\u7684\u300a\u673a\u5668\u5b66\u4e60\u5b9e\u6218-\u6559\u5b66\u7248\u300b\n\u7f16\u7801\u80fd\u529b\u5f31 - \u5efa\u8bae\u770b\u6211\u4eec\u7684\u300a\u673a\u5668\u5b66\u4e60\u5b9e\u6218-\u8ba8\u8bba\u7248\u300b\uff0c\u4e0d\u8fc7\u5728\u770b\u7406\u8bba\u7684\u65f6\u5019\uff0c\u770b \u6559\u5b66\u7248-\u7406\u8bba\u90e8\u5206\uff1b\u8ba8\u8bba\u7248\u7684\u5e9f\u8bdd\u592a\u591a\uff0c\u4e0d\u8fc7\u5728\u8bb2\u89e3\u4ee3\u7801\u7684\u65f6\u5019\u662f\u4e00\u884c\u4e00\u884c\u8bb2\u89e3\u7684\uff1b\u6240\u4ee5\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\uff0c\u81ea\u7531\u7684\u7ec4\u5408\u3002\n\n\n\u3010\u514d\u8d39\u3011\u6570\u5b66\u6559\u5b66\u89c6\u9891 - \u53ef\u6c57\u5b66\u9662 \u5165\u95e8\u7bc7\n\n\n@\u4e8e\u632f\u6893 \u63a8\u8350: \u53ef\u6c57\u5b66\u9662-\u7f51\u6613\u516c\u5f00\u8bfe\n\n\n\n\n\u6982\u7387\n\u7edf\u8ba1\n\u7ebf\u6027\u4ee3\u6570\n\n\n\n\n\u53ef\u6c57\u5b66\u9662(\u6982\u7387)\n\u53ef\u6c57\u5b66\u9662(\u7edf\u8ba1\u5b66)\n\u53ef\u6c57\u5b66\u9662(\u7ebf\u6027\u4ee3\u6570)\n\n\n\n\n\u673a\u5668\u5b66\u4e60\u89c6\u9891 - ApacheCN \u6559\u5b66\u7248\n\n\n\n\n\n\n\n\n\n\nAcFun\nB\u7ad9\n\n\n\n\n\n\n\u4f18\u9177\n\u7f51\u6613\u4e91\u8bfe\u5802\n\n\n\n\n\n\n\n\n\u3010\u514d\u8d39\u3011\u673a\u5668\/\u6df1\u5ea6\u5b66\u4e60\u89c6\u9891 - \u5434\u6069\u8fbe\n\n\n\n\n\u673a\u5668\u5b66\u4e60\n\u6df1\u5ea6\u5b66\u4e60\n\n\n\n\n\u5434\u6069\u8fbe\u673a\u5668\u5b66\u4e60\n\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60\n\n\n\n2.\u6df1\u5ea6\u5b66\u4e60\n\u5165\u95e8\u57fa\u7840\n\n\u53cd\u5411\u4f20\u9012: https:\/\/www.cnblogs.com\/charlotte77\/p\/5629865.html\nCNN\u539f\u7406: http:\/\/www.cnblogs.com\/charlotte77\/p\/7759802.html\nRNN\u539f\u7406: https:\/\/blog.csdn.net\/qq_39422642\/article\/details\/78676567\nLSTM\u539f\u7406: https:\/\/blog.csdn.net\/weixin_42111770\/article\/details\/80900575\n\nPytorch - \u6559\u7a0b\n-- \u5f85\u66f4\u65b0\nTensorFlow 2.0 - \u6559\u7a0b\n-- \u5f85\u66f4\u65b0\n\n\u76ee\u5f55\u7ed3\u6784:\n\n\n\u5b89\u88c5\u6307\u5357\nKeras \u5feb\u901f\u5165\u95e8\n\u5b9e\u6218\u9879\u76ee 1 \u7535\u5f71\u60c5\u611f\u5206\u7c7b\n\u5b9e\u6218\u9879\u76ee 2 \u6c7d\u8f66\u71c3\u6cb9\u6548\u7387\n\u5b9e\u6218\u9879\u76ee 3 \u4f18\u5316 \u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408\n\u5b9e\u6218\u9879\u76ee 4 \u53e4\u8bd7\u8bcd\u81ea\u52a8\u751f\u6210\n\n\u5207\u5206\uff08\u5206\u8bcd\uff09\n\u8bcd\u6027\u6807\u6ce8\n\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\n\u53e5\u6cd5\u5206\u6790\nWordNet\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u540c\u4e49\u8bcd\u8bcd\u5178\n\u8bcd\u5e72\u63d0\u53d6\uff08stemming\uff09\u4e0e\u8bcd\u5f62\u8fd8\u539f\uff08lemmatization\uff09\n\nhttps:\/\/www.biaodianfu.com\/nltk.html\/amp\n\nTensorFlow 2.0\u5b66\u4e60\u7f51\u5740\n\nhttps:\/\/github.com\/lyhue1991\/eat_tensorflow2_in_30_days\n\n3.\u81ea\u7136\u8bed\u8a00\u5904\u7406\n\u5b66\u4e60\u8fc7\u7a0b\u4e2d-\u5185\u5fc3\u590d\u6742\u7684\u53d8\u5316\uff01\uff01\uff01\n\u81ea\u4ece\u5b66\u4e60NLP\u4ee5\u540e\uff0c\u624d\u53d1\u73b0\u56fd\u5185\u4e0e\u56fd\u5916\u7684\u5178\u578b\u533a\u522b:\n1. \u5bf9\u8d44\u6e90\u7684\u6001\u5ea6\u662f\u5b8c\u5168\u76f8\u53cd\u7684:\n  1) \u56fd\u5185: \u5c31\u597d\u50cf\u4e3a\u4e86\u540d\u6c14\uff0c\u4e3e\u529e\u5de5\u4f5c\u88c5\u903c\u7684\u4f1a\u8bae\uff0c\u5c31\u662f\u6ca1\u6709\u5e72\u8d27\uff0c\u5168\u90e8\u90fd\u662f\u8c61\u5f81\u6027\u7684PPT\u4ecb\u7ecd\uff0c\u4e0d\u662f\u9488\u5bf9\u5728\u505a\u7684\u5404\u4f4d\n  2\uff09\u56fd\u5916: \u5c31\u597d\u50cf\u662f\u4e3a\u4e86\u63a8\u52a8nlp\u8fdb\u6b65\u4e00\u6837\uff0c\u5206\u4eab\u8005\u5404\u79cd\u5e72\u8d27\u8d44\u6599\u548c\u5177\u4f53\u7684\u5b9e\u73b0\u3002\uff08\u7279\u522b\u662f: python\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09\n2. \u8bba\u6587\u7684\u5b9e\u73b0: \n  1) \u5404\u79cd\u9ad8\u5927\u4e0a\u7684\u8bba\u6587\u5b9e\u73b0\uff0c\u5374\u8fd8\u662f\u6ca1\u770b\u5230\u4e00\u4e2a\u50cf\u6837\u7684GitHub\u9879\u76ee\uff01\uff08\u53ef\u80fd\u6211\u7684\u641c\u7d22\u80fd\u529b\u5dee\u4e86\u70b9\uff0c\u4e00\u76f4\u6ca1\u627e\u5230\uff09\n  2\uff09\u56fd\u5916\u5c31\u4e0d\u4e3e\u4f8b\u4e86\uff0c\u6211\u770b\u4e0d\u61c2\uff01\n3. \u5f00\u6e90\u7684\u6846\u67b6\n  1\uff09\u56fd\u5916\u7684\u5f00\u6e90\u6846\u67b6:  tensorflow\/pytorch \u6587\u6863+\u6559\u7a0b+\u89c6\u9891\uff08\u5b98\u65b9\u63d0\u4f9b\uff09\n  2) \u56fd\u5185\u7684\u5f00\u6e90\u6846\u67b6: \u989d\u989d\uff0c\u8fd8\u771f\u4e3e\u4f8b\u4e0d\u51fa\u6765\uff01\u4f46\u662f\u725b\u903c\u5439\u5f97\u4e0d\u6bd4\u56fd\u5916\u5dee\uff01\uff08MXNet\u867d\u7136\u6709\u4f17\u591a\u56fd\u4eba\u53c2\u4e0e\u5f00\u53d1\uff0c\u4f46\u4e0d\u80fd\u7b97\u662f\u56fd\u5185\u5f00\u6e90\u6846\u67b6\u3002\u57fa\u4e8eMXNet\u7684\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60(http:\/\/zh.d2l.ai & https:\/\/discuss.gluon.ai\/t\/topic\/753)\u4e2d\u6587\u6559\u7a0b,\u5df2\u7ecf\u7531\u6c90\u795e(\u674e\u6c90)\u4ee5\u53ca\u963f\u65af\u987f\u00b7\u5f20\u8bb2\u6388\u5f55\u5236\uff0c\u516c\u5f00\u53d1\u5e03(\u6587\u6863+\u7b2c\u4e00\u5b63\u6559\u7a0b+\u89c6\u9891\uff09\u3002)\n\u6bcf\u4e00\u6b21\u6df1\u5165\u90fd\u8981\u53bb\u7ffb\u5899\uff0c\u6bcf\u4e00\u6b21\u6df1\u5165\u90fd\u8981Google\uff0c\u6bcf\u4e00\u6b21\u770b\u7740\u56fd\u5185\u7684\u8bf4: \u54c8\u5de5\u5927\u3001\u8baf\u98de\u3001\u4e2d\u79d1\u5927\u3001\u767e\u5ea6\u3001\u963f\u91cc\u591a\u725b\u903c\uff0c\u4f46\u662f\u8d44\u6599\u8fd8\u662f\u5f97\u56fd\u5916\u53bb\u627e\uff01\n\u6709\u65f6\u5019\u771f\u7684\u633a\u6068\u7684\uff01\u771f\u7684\u6709\u70b9\u77a7\u4e0d\u8d77\u81ea\u5df1\u56fd\u5185\u7684\u6280\u672f\u73af\u5883\uff01\n\n\u5f53\u7136\u8c22\u8c22\u56fd\u5185\u5f88\u591a\u535a\u5ba2\u5927\u4f6c\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u5165\u95e8\u7684Demo\u548c\u57fa\u672c\u6982\u5ff5\u3002\u3010\u6df1\u5165\u7684\u6c34\u5e73\u6709\u9650\uff0c\u6ca1\u770b\u61c2\u3011\n\n\n\u3010\u5165\u95e8\u987b\u77e5\u3011\u5fc5\u987b\u4e86\u89e3: https:\/\/github.com\/apachecn\/AiLearning\/tree\/master\/docs\/nlp\n\u3010\u5165\u95e8\u6559\u7a0b\u3011\u5f3a\u70c8\u63a8\u8350: PyTorch \u81ea\u7136\u8bed\u8a00\u5904\u7406: https:\/\/github.com\/apachecn\/NLP-with-PyTorch\nPython \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u7b2c\u4e8c\u7248: https:\/\/usyiyi.github.io\/nlp-py-2e-zh\n\u63a8\u8350\u4e00\u4e2aliuhuanyong\u5927\u4f6c\u6574\u7406\u7684nlp\u5168\u9762\u77e5\u8bc6\u4f53\u7cfb: https:\/\/liuhuanyong.github.io\n\u5f00\u6e90 - \u8bcd\u5411\u91cf\u5e93\u96c6\u5408:\n\nhttps:\/\/www.cnblogs.com\/Darwin2000\/p\/5786984.html\nhttps:\/\/ai.tencent.com\/ailab\/nlp\/embedding.html\nhttps:\/\/blog.csdn.net\/xiezj007\/article\/details\/85073890\nhttps:\/\/github.com\/Embedding\/Chinese-Word-Vectors\nhttps:\/\/github.com\/brightmart\/nlp_chinese_corpus\nhttps:\/\/github.com\/codemayq\/chinese_chatbot_corpus\nhttps:\/\/github.com\/candlewill\/Dialog_Corpus\n\n\n\n1.\u4f7f\u7528\u573a\u666f \uff08\u767e\u5ea6\u516c\u5f00\u8bfe\uff09\n\n\u7b2c\u4e00\u90e8\u5206 \u5165\u95e8\u4ecb\u7ecd\n\n\n1.) \u81ea\u7136\u8bed\u8a00\u5904\u7406\u5165\u95e8\u4ecb\u7ecd\n\n\n\u7b2c\u4e8c\u90e8\u5206 \u673a\u5668\u7ffb\u8bd1\n\n\n2.) \u673a\u5668\u7ffb\u8bd1\n\n\n\u7b2c\u4e09\u90e8\u5206 \u7bc7\u7ae0\u5206\u6790\n\n\n3.1.) \u7bc7\u7ae0\u5206\u6790-\u5185\u5bb9\u6982\u8ff0\n3.2.) \u7bc7\u7ae0\u5206\u6790-\u5185\u5bb9\u6807\u7b7e\n3.3.) \u7bc7\u7ae0\u5206\u6790-\u60c5\u611f\u5206\u6790\n3.4.) \u7bc7\u7ae0\u5206\u6790-\u81ea\u52a8\u6458\u8981\n\n\n\u7b2c\u56db\u90e8\u5206 UNIT-\u8bed\u8a00\u7406\u89e3\u4e0e\u4ea4\u4e92\u6280\u672f\n\n\n4.) UNIT-\u8bed\u8a00\u7406\u89e3\u4e0e\u4ea4\u4e92\u6280\u672f\n\n\u5e94\u7528\u9886\u57df\n\u4e2d\u6587\u5206\u8bcd:\n\n\u6784\u5efaDAG\u56fe\n\u52a8\u6001\u89c4\u5212\u67e5\u627e\uff0c\u7efc\u5408\u6b63\u53cd\u5411\uff08\u6b63\u5411\u52a0\u6743\u53cd\u5411\u8f93\u51fa\uff09\u6c42\u5f97DAG\u6700\u5927\u6982\u7387\u8def\u5f84\n\u4f7f\u7528\u4e86SBME\u8bed\u6599\u8bad\u7ec3\u4e86\u4e00\u5957 HMM + Viterbi \u6a21\u578b\uff0c\u89e3\u51b3\u672a\u767b\u5f55\u8bcd\u95ee\u9898\n\n1.\u6587\u672c\u5206\u7c7b\uff08Text Classification\uff09\n\u6587\u672c\u5206\u7c7b\u662f\u6307\u6807\u8bb0\u53e5\u5b50\u6216\u6587\u6863\uff0c\u4f8b\u5982\u7535\u5b50\u90ae\u4ef6\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u548c\u60c5\u611f\u5206\u6790\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u6587\u672c\u5206\u7c7b\u6570\u636e\u96c6\u3002\n\n\u8def\u900f\u793eNewswire\u4e3b\u9898\u5206\u7c7b\uff08\u8def\u900f\u793e-21578\uff09\u30021987\u5e74\u8def\u900f\u793e\u51fa\u73b0\u7684\u4e00\u7cfb\u5217\u65b0\u95fb\u6587\u4ef6\uff0c\u6309\u7c7b\u522b\u7f16\u5236\u7d22\u5f15\u3002\u53e6\u89c1RCV1\uff0cRCV2\u548cTRC2\u3002\nIMDB\u7535\u5f71\u8bc4\u8bba\u60c5\u611f\u5206\u7c7b\uff08\u65af\u5766\u798f\uff09\u3002\u6765\u81ea\u7f51\u7ad9imdb.com\u7684\u4e00\u7cfb\u5217\u7535\u5f71\u8bc4\u8bba\u53ca\u5176\u79ef\u6781\u6216\u6d88\u6781\u7684\u60c5\u7eea\u3002\n\u65b0\u95fb\u7ec4\u7535\u5f71\u8bc4\u8bba\u60c5\u611f\u5206\u7c7b\uff08\u5eb7\u5948\u5c14\uff09\u3002\u6765\u81ea\u7f51\u7ad9imdb.com\u7684\u4e00\u7cfb\u5217\u7535\u5f71\u8bc4\u8bba\u53ca\u5176\u79ef\u6781\u6216\u6d88\u6781\u7684\u60c5\u7eea\u3002\n\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5e16\u5b50:\n\u5355\u6807\u7b7e\u6587\u672c\u5206\u7c7b\u7684\u6570\u636e\u96c6\u3002\n\n\u60c5\u611f\u5206\u6790\n\n\u6bd4\u8d5b\u5730\u5740: https:\/\/www.kaggle.com\/c\/word2vec-nlp-tutorial\n\n\u65b9\u6848\u4e00(0.86): WordCount + \u6734\u7d20 Bayes\n\u65b9\u6848\u4e8c(0.94): LDA + \u5206\u7c7b\u6a21\u578b\uff08knn\/\u51b3\u7b56\u6811\/\u903b\u8f91\u56de\u5f52\/svm\/xgboost\/\u968f\u673a\u68ee\u6797\uff09\n\na) \u51b3\u7b56\u6811\u6548\u679c\u4e0d\u662f\u5f88\u597d\uff0c\u8fd9\u79cd\u8fde\u7eed\u7279\u5f81\u4e0d\u592a\u9002\u5408\u7684\nb) \u901a\u8fc7\u53c2\u6570\u8c03\u6574 200 \u4e2atopic\uff0c\u4fe1\u606f\u91cf\u4fdd\u5b58\u6548\u679c\u8f83\u4f18\uff08\u8ba1\u7b97\u4e3b\u9898\uff09\n\n\n\u65b9\u6848\u4e09(0.72): word2vec + CNN\n\n\u8bf4\u5b9e\u8bdd: \u6ca1\u6709\u4e00\u4e2a\u597d\u7684\u673a\u5668\uff0c\u662f\u8c03\u4e0d\u51fa\u6765\u4e00\u4e2a\u597d\u7684\u7ed3\u679c (: \u9003\n\n\n\n\u901a\u8fc7AUC \u6765\u8bc4\u4f30\u6a21\u578b\u7684\u6548\u679c\n2.\u8bed\u8a00\u6a21\u578b\uff08Language Modeling\uff09\n\u8bed\u8a00\u5efa\u6a21\u6d89\u53ca\u5f00\u53d1\u4e00\u79cd\u7edf\u8ba1\u6a21\u578b\uff0c\u7528\u4e8e\u9884\u6d4b\u53e5\u5b50\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5355\u8bcd\u6216\u4e00\u4e2a\u5355\u8bcd\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5355\u8bcd\u3002\u5b83\u662f\u8bed\u97f3\u8bc6\u522b\u548c\u673a\u5668\u7ffb\u8bd1\u7b49\u4efb\u52a1\u4e2d\u7684\u524d\u7f6e\u4efb\u52a1\u3002\n\u5b83\u662f\u8bed\u97f3\u8bc6\u522b\u548c\u673a\u5668\u7ffb\u8bd1\u7b49\u4efb\u52a1\u4e2d\u7684\u524d\u7f6e\u4efb\u52a1\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u8bed\u8a00\u5efa\u6a21\u6570\u636e\u96c6\u3002\n\n\u53e4\u817e\u5821\u9879\u76ee\uff0c\u4e00\u7cfb\u5217\u514d\u8d39\u4e66\u7c4d\uff0c\u53ef\u4ee5\u7528\u7eaf\u6587\u672c\u68c0\u7d22\u5404\u79cd\u8bed\u8a00\u3002\n\u8fd8\u6709\u66f4\u591a\u6b63\u5f0f\u7684\u8bed\u6599\u5e93\u5f97\u5230\u4e86\u5f88\u597d\u7684\u7814\u7a76; \u4f8b\u5982:\n\u5e03\u6717\u5927\u5b66\u73b0\u4ee3\u7f8e\u56fd\u82f1\u8bed\u6807\u51c6\u8bed\u6599\u5e93\u3002\u5927\u91cf\u82f1\u8bed\u5355\u8bcd\u6837\u672c\u3002\n\u8c37\u6b4c10\u4ebf\u5b57\u8bed\u6599\u5e93\u3002\n\n\n\u65b0\u8bcd\u53d1\u73b0\n\n\n\u4e2d\u6587\u5206\u8bcd\u65b0\u8bcd\u53d1\u73b0\npython3\u5229\u7528\u4e92\u4fe1\u606f\u548c\u5de6\u53f3\u4fe1\u606f\u71b5\u7684\u4e2d\u6587\u5206\u8bcd\u65b0\u8bcd\u53d1\u73b0\nhttps:\/\/github.com\/zhanzecheng\/Chinese_segment_augment\n\n\n\u53e5\u5b50\u76f8\u4f3c\u5ea6\u8bc6\u522b\n\n\n\u9879\u76ee\u5730\u5740: https:\/\/www.kaggle.com\/c\/quora-question-pairs\n\u89e3\u51b3\u65b9\u6848: word2vec + Bi-GRU\n\n\n\u6587\u672c\u7ea0\u9519\n\n\nbi-gram + levenshtein\n\n3.\u56fe\u50cf\u5b57\u5e55\uff08Image Captioning\uff09\nmage\u5b57\u5e55\u662f\u4e3a\u7ed9\u5b9a\u56fe\u50cf\u751f\u6210\u6587\u672c\u63cf\u8ff0\u7684\u4efb\u52a1\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u56fe\u50cf\u5b57\u5e55\u6570\u636e\u96c6\u3002\n\n\u4e0a\u4e0b\u6587\u4e2d\u7684\u516c\u5171\u5bf9\u8c61\uff08COCO\uff09\u3002\u5305\u542b\u8d85\u8fc712\u4e07\u5f20\u5e26\u63cf\u8ff0\u7684\u56fe\u50cf\u7684\u96c6\u5408\nFlickr 8K\u3002\u4eceflickr.com\u83b7\u53d6\u76848\u5343\u4e2a\u63cf\u8ff0\u56fe\u50cf\u7684\u96c6\u5408\u3002\nFlickr 30K\u3002\u4eceflickr.com\u83b7\u53d6\u76843\u4e07\u4e2a\u63cf\u8ff0\u56fe\u50cf\u7684\u96c6\u5408\u3002\n\u6b32\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u770b\u5e16\u5b50:\n\n\u63a2\u7d22\u56fe\u50cf\u5b57\u5e55\u6570\u636e\u96c6\uff0c2016\u5e74\n4.\u673a\u5668\u7ffb\u8bd1\uff08Machine Translation\uff09\n\u673a\u5668\u7ffb\u8bd1\u662f\u5c06\u6587\u672c\u4ece\u4e00\u79cd\u8bed\u8a00\u7ffb\u8bd1\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\u7684\u4efb\u52a1\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u673a\u5668\u7ffb\u8bd1\u6570\u636e\u96c6\u3002\n\n\u52a0\u62ff\u5927\u7b2c36\u5c4a\u8bae\u4f1a\u7684\u534f\u8c03\u56fd\u4f1a\u8bae\u5458\u3002\u6210\u5bf9\u7684\u82f1\u8bed\u548c\u6cd5\u8bed\u53e5\u5b50\u3002\n\u6b27\u6d32\u8bae\u4f1a\u8bc9\u8bbc\u5e73\u884c\u8bed\u6599\u5e931996-2011\u3002\u53e5\u5b50\u5bf9\u4e00\u5957\u6b27\u6d32\u8bed\u8a00\u3002\n\u6709\u5927\u91cf\u6807\u51c6\u6570\u636e\u96c6\u7528\u4e8e\u5e74\u5ea6\u673a\u5668\u7ffb\u8bd1\u6311\u6218; \u770b\u5230:\n\n\u7edf\u8ba1\u673a\u5668\u7ffb\u8bd1\n\n\u673a\u5668\u7ffb\u8bd1\n\n\nEncoder + Decoder(Attention)\n\u53c2\u8003\u6848\u4f8b: http:\/\/pytorch.apachecn.org\/cn\/tutorials\/intermediate\/seq2seq_translation_tutorial.html\n\n5.\u95ee\u7b54\u7cfb\u7edf\uff08Question Answering\uff09\n\u95ee\u7b54\u662f\u4e00\u9879\u4efb\u52a1\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53e5\u5b50\u6216\u6587\u672c\u6837\u672c\uff0c\u4ece\u4e2d\u63d0\u51fa\u95ee\u9898\u5e76\u4e14\u5fc5\u987b\u56de\u7b54\u95ee\u9898\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u95ee\u9898\u56de\u7b54\u6570\u636e\u96c6\u3002\n\n\u65af\u5766\u798f\u95ee\u9898\u56de\u7b54\u6570\u636e\u96c6\uff08SQuAD\uff09\u3002\u56de\u7b54\u6709\u5173\u7ef4\u57fa\u767e\u79d1\u6587\u7ae0\u7684\u95ee\u9898\u3002\nDeepmind\u95ee\u9898\u56de\u7b54\u8bed\u6599\u5e93\u3002\u4ece\u6bcf\u65e5\u90ae\u62a5\u56de\u7b54\u6709\u5173\u65b0\u95fb\u6587\u7ae0\u7684\u95ee\u9898\u3002\n\u4e9a\u9a6c\u900a\u95ee\u7b54\u6570\u636e\u3002\u56de\u7b54\u6709\u5173\u4e9a\u9a6c\u900a\u4ea7\u54c1\u7684\u95ee\u9898\u3002\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5e16\u5b50:\n\n\u6570\u636e\u96c6: \u6211\u5982\u4f55\u83b7\u5f97\u95ee\u7b54\u7f51\u7ad9\u7684\u8bed\u6599\u5e93\uff0c\u5982Quora\u6216Yahoo Answers\u6216Stack Overflow\u6765\u5206\u6790\u7b54\u6848\u8d28\u91cf\uff1f\n6.\u8bed\u97f3\u8bc6\u522b\uff08Speech Recognition\uff09\n\u8bed\u97f3\u8bc6\u522b\u662f\u5c06\u53e3\u8bed\u7684\u97f3\u9891\u8f6c\u6362\u4e3a\u4eba\u7c7b\u53ef\u8bfb\u6587\u672c\u7684\u4efb\u52a1\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u8bed\u97f3\u8bc6\u522b\u6570\u636e\u96c6\u3002\n\nTIMIT\u58f0\u5b66 - \u8bed\u97f3\u8fde\u7eed\u8bed\u97f3\u8bed\u6599\u5e93\u3002\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u4f46\u56e0\u5176\u5e7f\u6cdb\u4f7f\u7528\u800c\u4e0a\u5e02\u3002\u53e3\u8bed\u7f8e\u56fd\u82f1\u8bed\u548c\u76f8\u5173\u7684\u8f6c\u5f55\u3002\nVoxForge\u3002\u7528\u4e8e\u6784\u5efa\u7528\u4e8e\u8bed\u97f3\u8bc6\u522b\u7684\u5f00\u6e90\u6570\u636e\u5e93\u7684\u9879\u76ee\u3002\nLibriSpeech ASR\u8bed\u6599\u5e93\u3002\u4eceLibriVox\u6536\u96c6\u7684\u5927\u91cf\u82f1\u8bed\u6709\u58f0\u8bfb\u7269\u3002\n\n7.\u81ea\u52a8\u6587\u6458\uff08Document Summarization\uff09\n\u6587\u6863\u6458\u8981\u662f\u521b\u5efa\u8f83\u5927\u6587\u6863\u7684\u7b80\u77ed\u6709\u610f\u4e49\u63cf\u8ff0\u7684\u4efb\u52a1\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5f88\u597d\u7684\u521d\u5b66\u8005\u6587\u6863\u6458\u8981\u6570\u636e\u96c6\u3002\n\n\u6cd5\u5f8b\u6848\u4f8b\u62a5\u544a\u6570\u636e\u96c6\u3002\u6536\u96c6\u4e864000\u4efd\u6cd5\u5f8b\u6848\u4ef6\u53ca\u5176\u6458\u8981\u3002\nTIPSTER\u6587\u672c\u6458\u8981\u8bc4\u4f30\u4f1a\u8bae\u8bed\u6599\u5e93\u3002\u6536\u96c6\u4e86\u8fd1200\u4efd\u6587\u4ef6\u53ca\u5176\u6458\u8981\u3002\n\u82f1\u8bed\u65b0\u95fb\u6587\u672c\u7684AQUAINT\u8bed\u6599\u5e93\u3002\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u800c\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u3002\u65b0\u95fb\u6587\u7ae0\u7684\u8bed\u6599\u5e93\u3002\n\u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f:\n\n\u6587\u6863\u7406\u89e3\u4f1a\u8bae\uff08DUC\uff09\u4efb\u52a1\u3002\n\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u7528\u4e8e\u6587\u672c\u6458\u8981\u7684\u826f\u597d\u6570\u636e\u96c6\uff1f\n\n\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\n\n\nBi-LSTM CRF\n\u53c2\u8003\u6848\u4f8b: http:\/\/pytorch.apachecn.org\/cn\/tutorials\/beginner\/nlp\/advanced_tutorial.html\nCRF\u63a8\u8350\u6587\u6863: https:\/\/www.jianshu.com\/p\/55755fc649b1\n\n\n\u6587\u672c\u6458\u8981\n\n\n\u62bd\u53d6\u5f0f\nword2vec + textrank\nword2vec\u63a8\u8350\u6587\u6863: https:\/\/www.zhihu.com\/question\/44832436\/answer\/266068967\ntextrank\u63a8\u8350\u6587\u6863: https:\/\/blog.csdn.net\/BaiHuaXiu123\/article\/details\/77847232\n\nGraph\u56fe\u8ba1\u7b97\u3010\u6162\u6162\u66f4\u65b0\u3011\n\n\u6570\u636e\u96c6: data\/nlp\/graph\n\u5b66\u4e60\u8d44\u6599: spark graphX\u5b9e\u6218.pdf \u3010\u6587\u4ef6\u592a\u5927\u4e0d\u65b9\u4fbf\u63d0\u4f9b\uff0c\u81ea\u5df1\u767e\u5ea6\u3011\n\n\u77e5\u8bc6\u56fe\u8c31\n\n\u77e5\u8bc6\u56fe\u8c31\uff0c\u6211\u53ea\u8ba4 SimmerChan: \u3010\u77e5\u8bc6\u56fe\u8c31-\u7ed9AI\u88c5\u4e2a\u5927\u8111\u3011\n\u8bf4\u5b9e\u8bdd\uff0c\u6211\u662f\u770b\u8fd9\u535a\u4e3b\u8001\u54e5\u5199\u7684\u535a\u5ba2\u957f\u5927\u7684\uff0c\u5199\u7684\u771f\u7684\u662f\u6df1\u5165\u6d45\u51fa\u3002\u6211\u5f88\u559c\u6b22\uff0c\u6240\u4ee5\u5c31\u5206\u4eab\u7ed9\u5927\u5bb6\uff0c\u5e0c\u671b\u4f60\u4eec\u4e5f\u559c\u6b22\u3002\n\n\u8fdb\u4e00\u6b65\u9605\u8bfb\n\u5982\u679c\u60a8\u5e0c\u671b\u66f4\u6df1\u5165\uff0c\u672c\u8282\u63d0\u4f9b\u4e86\u5176\u4ed6\u6570\u636e\u96c6\u5217\u8868\u3002\n\n\u7ef4\u57fa\u767e\u79d1\u7814\u7a76\u4e2d\u4f7f\u7528\u7684\u6587\u672c\u6570\u636e\u96c6\n\u6570\u636e\u96c6: \u8ba1\u7b97\u8bed\u8a00\u5b66\u5bb6\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u7684\u4e3b\u8981\u6587\u672c\u8bed\u6599\u5e93\u662f\u4ec0\u4e48\uff1f\n\u65af\u5766\u798f\u7edf\u8ba1\u81ea\u7136\u8bed\u8a00\u5904\u7406\u8bed\u6599\u5e93\n\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u7684NLP\u6570\u636e\u96c6\u5217\u8868\n\u8be5\u673a\u6784NLTK\n\u5728DL4J\u4e0a\u6253\u5f00\u6df1\u5ea6\u5b66\u4e60\u6570\u636e\nNLP\u6570\u636e\u96c6\n\u56fd\u5185\u5f00\u653e\u6570\u636e\u96c6: https:\/\/bosonnlp.com\/dev\/resource\n\n\u8d21\u732e\u8005\u4fe1\u606f\n\n\u8d21\u732e\u8005\/\u8d1f\u8d23\u4eba\/\u7fa4\u7ba1\u7406: https:\/\/github.com\/apachecn\/AiLearning\/issues\/595\n\n\u6b22\u8fce\u8d21\u732e\u8005\u4e0d\u65ad\u7684\u8ffd\u52a0\n\u514d\u8d23\u58f0\u660e - \u3010\u53ea\u4f9b\u5b66\u4e60\u53c2\u8003\u3011\n\nApacheCN \u7eaf\u7cb9\u51fa\u4e8e\u5b66\u4e60\u76ee\u7684\u4e0e\u4e2a\u4eba\u5174\u8da3\u7ffb\u8bd1\u672c\u4e66\nApacheCN \u4fdd\u7559\u5bf9\u6b64\u7248\u672c\u8bd1\u6587\u7684\u7f72\u540d\u6743\u53ca\u5176\u5b83\u76f8\u5173\u6743\u5229\n\n\u534f\u8bae\n\n\u4ee5\u5404\u9879\u76ee\u534f\u8bae\u4e3a\u51c6\u3002\nApacheCN \u8d26\u53f7\u4e0b\u6ca1\u6709\u534f\u8bae\u7684\u9879\u76ee\uff0c\u4e00\u5f8b\u89c6\u4e3a CC BY-NC-SA 4.0\u3002\n\n\n\u8d44\u6599\u6765\u6e90:\n\n\u3010\u6bd4\u8d5b\u6536\u96c6\u5e73\u53f0\u3011: https:\/\/github.com\/iphysresearch\/DataSciComp\nhttps:\/\/github.com\/pbharrin\/machinelearninginaction\nhttps:\/\/machinelearningmastery.com\/datasets-natural-language-processing\n\n\u611f\u8c22\u4fe1\n\u6700\u8fd1\u65e0\u610f\u6536\u5230\u7fa4\u53cb\u63a8\u9001\u7684\u94fe\u63a5\uff0c\u53d1\u73b0\u5f97\u5230\u5927\u4f6c\u9ad8\u5ea6\u7684\u8ba4\u53ef\uff0c\u5e76\u5728\u70ed\u5fc3\u7684\u63a8\u5e7f\n\u5728\u6b64\u611f\u8c22:\n\n\u91cf\u5b50\u4f4d: https:\/\/www.zhihu.com\/question\/20472776\/answer\/691646493\n\u4eba\u5de5\u667a\u80fd\u524d\u6cbf\u8bb2\u4e60: https:\/\/mp.weixin.qq.com\/s\/f2dqulxOPkt7k5hqPsydyQ\n\n\u8d5e\u52a9\u6211\u4eec\n\n","143":"Certbot is part of EFF\u2019s effort to encrypt the entire Internet. Secure communication over the Web relies on HTTPS, which requires the use of a digital certificate that lets browsers verify the identity of web servers (e.g., is that really google.com?). Web servers obtain their certificates from trusted third parties called certificate authorities (CAs). Certbot is an easy-to-use client that fetches a certificate from Let\u2019s Encrypt\u2014an open certificate authority launched by the EFF, Mozilla, and others\u2014and deploys it to a web server.\nAnyone who has gone through the trouble of setting up a secure website knows what a hassle getting and maintaining a certificate is. Certbot and Let\u2019s Encrypt can automate away the pain and let you turn on and manage HTTPS with simple commands. Using Certbot and Let's Encrypt is free, so there\u2019s no need to arrange payment.\nHow you use Certbot depends on the configuration of your web server. The best way to get started is to use our interactive guide. It generates instructions based on your configuration settings. In most cases, you\u2019ll need root or administrator access to your web server to run Certbot.\nCertbot is meant to be run directly on your web server, not on your personal computer. If you\u2019re using a hosted service and don\u2019t have direct access to your web server, you might not be able to use Certbot. Check with your hosting provider for documentation about uploading certificates or using certificates issued by Let\u2019s Encrypt.\nCertbot is a fully-featured, extensible client for the Let's\nEncrypt CA (or any other CA that speaks the ACME\nprotocol) that can automate the tasks of obtaining certificates and\nconfiguring webservers to use them. This client runs on Unix-based operating\nsystems.\nTo see the changes made to Certbot between versions please refer to our\nchangelog.\nUntil May 2016, Certbot was named simply letsencrypt or letsencrypt-auto,\ndepending on install method. Instructions on the Internet, and some pieces of the\nsoftware, may still refer to this older name.\n\nContributing\nIf you'd like to contribute to this project please read Developer Guide.\nThis project is governed by EFF's Public Projects Code of Conduct.\n\nHow to run the client\nThe easiest way to install and run Certbot is by visiting certbot.eff.org,\nwhere you can find the correct instructions for many web server and OS\ncombinations.  For more information, see Get Certbot.\n\nUnderstanding the client in more depth\nTo understand what the client is doing in detail, it's important to\nunderstand the way it uses plugins.  Please see the explanation of\nplugins in\nthe User Guide.\n\nLinks\nDocumentation: https:\/\/certbot.eff.org\/docs\nSoftware project: https:\/\/github.com\/certbot\/certbot\nNotes for developers: https:\/\/certbot.eff.org\/docs\/contributing.html\nMain Website: https:\/\/certbot.eff.org\nLet's Encrypt Website: https:\/\/letsencrypt.org\nCommunity: https:\/\/community.letsencrypt.org\nACME spec: RFC 8555\nACME working area in github (archived): https:\/\/github.com\/ietf-wg-acme\/acme\n\n\nSystem Requirements\nSee https:\/\/certbot.eff.org\/docs\/install.html#system-requirements.\n\nCurrent Features\n\nSupports multiple web servers:\napache\/2.x\nnginx\/0.8.48+\nwebroot (adds files to webroot directories in order to prove control of\ndomains and obtain certs)\nstandalone (runs its own simple webserver to prove you control a domain)\nother server software via third party plugins\n\n\nThe private key is generated locally on your system.\nCan talk to the Let's Encrypt CA or optionally to other ACME\ncompliant services.\nCan get domain-validated (DV) certificates.\nCan revoke certificates.\nAdjustable RSA key bit-length (2048 (default), 4096, ...).\nAdjustable [EC](https:\/\/en.wikipedia.org\/wiki\/Elliptic-curve_cryptography)\nkey (secp256r1 (default), secp384r1, secp521r1).\nCan optionally install a http -> https redirect, so your site effectively\nruns https only (Apache only)\nFully automated.\nConfiguration changes are logged and can be reverted.\nSupports an interactive text UI, or can be driven entirely from the\ncommand line.\nFree and Open Source Software, made with Python.\n\nFor extensive documentation on using and contributing to Certbot, go to https:\/\/certbot.eff.org\/docs. If you would like to contribute to the project or run the latest code from git, you should read our developer guide.\n","144":"   \n\n\n\n\n\nLocalStack - A fully functional local AWS cloud stack\n\nLocalStack provides an easy-to-use test\/mocking framework for developing Cloud applications.\nCurrently, the focus is primarily on supporting the AWS cloud stack.\nAnnouncements\n\n2020-09-15: A major (breaking) change has been merged in PR #2905 - starting with releases after v0.11.5, all services are now exposed via the edge service (port 4566) only! Please update your client configurations to use this new endpoint.\n2019-10-09: LocalStack Pro is out! We're incredibly excited to announce the launch of LocalStack Pro - the enterprise version of LocalStack with additional APIs and advanced features. Check out the free trial at https:\/\/localstack.cloud\n2018-01-10: Help wanted! Please fill out this survey to support a research study on the usage of Serverless and Function-as-a-Service (FaaS) services, conducted at the Chalmers University of Technology. The survey only takes 5-10 minutes of your time. Many thanks for your participation!!\n\nThe result from this study can be found here\n\n\n2017-08-27: We need your support! LocalStack is growing fast, we now have thousands of developers using the platform regularly. Last month we have recorded a staggering 100k test runs, with 25k+ DynamoDB tables, 20k+ SQS queues, 15k+ Kinesis streams, 13k+ S3 buckets, and 10k+ Lambda functions created locally - for 0$ costs (more details to be published soon). Bug and feature requests are pouring in, and we now need some support from you to keep the open-source version actively maintained. Please check out Open Collective and become a backer or supporter of the project today! Thanks, everybody for contributing. \u2665\n2017-07-20: Please note: Starting with version 0.7.0, the Docker image will be pushed\nand kept up to date under the new name localstack\/localstack. (This means that you may\nhave to update your CI configurations.) Please refer to the updated\nEnd-User License Agreement (EULA) for the new versions.\nThe old Docker image (atlassianlabs\/localstack) is still available but will not be maintained\nany longer.\n\nOverview\nLocalStack spins up the following core Cloud APIs on your local machine.\nNote: Starting with version 0.11.0, all APIs are exposed via a single edge service, which is\naccessible on http:\/\/localhost:4566 by default (customizable via EDGE_PORT, see further below).\n\nACM\nAPI Gateway\nCloudFormation\nCloudWatch\nCloudWatch Logs\nDynamoDB\nDynamoDB Streams\nEC2\nElasticsearch Service\nEventBridge (CloudWatch Events)\nFirehose\nIAM\nKinesis\nKMS\nLambda\nRedshift\nRoute53\nS3\nSecretsManager\nSES\nSNS\nSQS\nSSM\nStepFunctions\nSTS\n\nIn addition to the above, the Pro version of LocalStack supports additional APIs and advanced features, including:\n\nAmplify\nAPI Gateway V2 (WebSockets support)\nAppSync\nAthena\nCloudFront\nCloudTrail\nCognito\nECS\/ECR\/EKS\nElastiCache\nEMR\nGlacier \/ S3 Select\nIoT\nKinesis Data Analytics\nLambda Layers\nManaged Streaming for Kafka (MSK)\nMediaStore\nQLDB\nRDS\nTransfer\nXRay\nInteractive UIs to manage resources\nTest report dashboards\n...and much, much more to come!\n\nWhy LocalStack?\nLocalStack builds on existing best-of-breed mocking\/testing tools, notably\nkinesalite\/dynalite\nand moto, ElasticMQ,\nand others. While these tools are awesome (!), they lack functionality for certain use cases.\nLocalStack combines the tools, makes them interoperable, and adds important missing functionality\non top of them:\n\nError injection: LocalStack allows to inject errors frequently occurring in real Cloud environments,\nfor instance ProvisionedThroughputExceededException which is thrown by Kinesis or DynamoDB if the amount of\nread\/write throughput is exceeded.\nIsolated processes: Services in LocalStack can be run in separate processes.\nIn moto, components are often hard-wired in memory (e.g., when forwarding a message on an SNS topic to an\nSQS queue, the queue endpoint is looked up in a local hash map). In contrast, LocalStack services live in\nisolation (separate processes\/threads communicating via HTTP), which fosters true decoupling and more closely\nresembles the real cloud environment.\nPluggable services: All services in LocalStack are easily pluggable (and replaceable), due to the fact that\nwe are using isolated processes for each service. This allows us to keep the framework up-to-date and select\nbest-of-breed mocks for each individual service.\n\nRequirements\n\npython (both Python 2.x and 3.x supported)\npip (python package manager)\nDocker\n\nInstalling\nThe easiest way to install LocalStack is via pip:\npip install localstack\n\nNote: Please do not use sudo or the root user - LocalStack\nshould be installed and started entirely under a local non-root user. If you have problems\nwith permissions in MacOS X Sierra, install with pip install --user localstack\nRunning in Docker\nBy default, LocalStack gets started inside a Docker container using this command:\nlocalstack start\n\n(Note that on MacOS you may have to run TMPDIR=\/private$TMPDIR localstack start --docker if\n$TMPDIR contains a symbolic link that cannot be mounted by Docker.)\nNote: From 2020-07-11 onwards, the default image localstack\/localstack in Docker Hub refers to the \"light version\", which has some large dependency files like Elasticsearch removed (and lazily downloads them, if required). (Note that the localstack\/localstack-light image alias may get removed in the future). In case you need the full set of dependencies, the localstack\/localstack-full image can be used instead. Please also refer to the USE_LIGHT_IMAGE configuration below.\n(Note: Although it is strongly recommended to use Docker, the infrastructure can also be spun up directly on the host machine using the --host startup flag. Note that this will require additional dependencies, and is not supported on some operating systems, including Windows.)\nUsing docker-compose\nYou can also use the docker-compose.yml file from the repository and use this command (currently requires docker-compose version 1.9.0+):\ndocker-compose up\n\n(Note that on MacOS you may have to run TMPDIR=\/private$TMPDIR docker-compose up if\n$TMPDIR contains a symbolic link that cannot be mounted by Docker.)\nTo facilitate interoperability, configuration variables can be prefixed with LOCALSTACK_ in docker. For instance, setting LOCALSTACK_SERVICES=s3 is equivalent to SERVICES=s3.\nConfigurations\nYou can pass the following environment variables to LocalStack:\n\n\nEDGE_PORT: Port number for the edge service, the main entry point for all API invocations (default: 4566).\n\n\nSERVICES: Comma-separated list of service names (APIs) to start up. Service names basically correspond\nto the service names of the AWS CLI\n(kinesis, lambda, sqs, etc), although LocalStack only supports a subset of them.\nExample value: kinesis,lambda,sqs to start Kinesis, Lambda, and SQS.\nIn addition, the following shorthand values can be specified to run a predefined ensemble of services:\n\nserverless: run services often used for Serverless apps (iam, lambda, dynamodb, apigateway, s3, sns)\n\n\n\nDEFAULT_REGION: AWS region to use when talking to the API (default: us-east-1).\n\n\nHOSTNAME: Name of the host to expose the services internally (default: localhost).\nUse this to customize the framework-internal communication, e.g., if services are\nstarted in different containers using docker-compose.\n\n\nHOSTNAME_EXTERNAL: Name of the host to expose the services externally (default: localhost).\nThis host is used, e.g., when returning queue URLs from the SQS service to the client.\n\n\n<SERVICE>_PORT_EXTERNAL: Port number to expose a specific service externally (defaults to service ports above). SQS_PORT_EXTERNAL, for example, is used when returning queue URLs from the SQS service to the client.\n\n\nIMAGE_NAME: Specific name and tag of LocalStack Docker image to use, e.g., localstack\/localstack:0.11.0 (default: localstack\/localstack).\n\n\nUSE_LIGHT_IMAGE: Whether to use the light-weight Docker image (default: 1). Overwritten by IMAGE_NAME.\n\n\nKINESIS_ERROR_PROBABILITY: Decimal value between 0.0 (default) and 1.0 to randomly\ninject ProvisionedThroughputExceededException errors into Kinesis API responses.\n\n\nKINESIS_SHARD_LIMIT: Integer value (default: 100) or Infinity (to disable), causing the Kinesis API to start throwing exceptions to mimick the default shard limit.\n\n\nKINESIS_LATENCY: Integer value (default: 500) or 0 (to disable), causing the Kinesis API to delay returning a response in order to mimick latency from a live AWS call.\n\n\nDYNAMODB_ERROR_PROBABILITY: Decimal value between 0.0 (default) and 1.0 to randomly inject ProvisionedThroughputExceededException errors into DynamoDB API responses.\n\n\nDYNAMODB_HEAP_SIZE: Sets the JAVA EE maximum memory size for dynamodb values are (integer)m for MB, (integer)G for GB default(256m), full table scans require more memory\n\n\nSTEPFUNCTIONS_LAMBDA_ENDPOINT: URL to use as the Lambda service endpoint in Step Functions. By default this is the LocalStack Lambda endpoint. Use default to select the original AWS Lambda endpoint.\n\n\nLAMBDA_EXECUTOR: Method to use for executing Lambda functions. Possible values are:\n\nlocal: run Lambda functions in a temporary directory on the local machine\ndocker: run each function invocation in a separate Docker container\ndocker-reuse: create one Docker container per function and reuse it across invocations\n\nFor docker and docker-reuse, if LocalStack itself is started inside Docker, then\nthe docker command needs to be available inside the container (usually requires to run the\ncontainer in privileged mode). Default is docker, fallback to local if Docker is not available.\n\n\nLAMBDA_REMOTE_DOCKER determines whether Lambda code is copied or mounted into containers.\nPossible values are:\n\ntrue (default): your Lambda function definitions will be passed to the container by\ncopying the zip file (potentially slower). It allows for remote execution, where the host\nand the client are not on the same machine.\nfalse: your Lambda function definitions will be passed to the container by mounting a\nvolume (potentially faster). This requires to have the Docker client and the Docker\nhost on the same machine.\n\n\n\nLAMBDA_DOCKER_NETWORK: Optional Docker network for the container running your lambda function.\n\n\nLAMBDA_DOCKER_DNS: Optional DNS server for the container running your lambda function.\n\n\nLAMBDA_CONTAINER_REGISTRY Use an alternative docker registry to pull lambda execution containers (default: lambci\/lambda).\n\n\nLAMBDA_REMOVE_CONTAINERS: Whether to remove containers after Lambdas finished executing (default: true).\n\n\nDATA_DIR: Local directory for saving persistent data (currently only supported for these services:\nKinesis, DynamoDB, Elasticsearch, S3, Secretsmanager, SSM, SQS, SNS). Set it to \/tmp\/localstack\/data to enable persistence\n(\/tmp\/localstack is mounted into the Docker container), leave blank to disable\npersistence (default).\n\n\nPORT_WEB_UI: Port for the Web user interface \/ dashboard (default: 8080). Note that the Web UI is now deprecated, and requires to use the localstack\/localstack-full Docker image.\n\n\n<SERVICE>_BACKEND: Custom endpoint URL to use for a specific service, where <SERVICE> is the uppercase\nservice name (currently works for: APIGATEWAY, CLOUDFORMATION, DYNAMODB, ELASTICSEARCH,\nKINESIS, S3, SNS, SQS). This allows to easily integrate third-party services into LocalStack.\n\n\nFORCE_NONINTERACTIVE: when running with Docker, disables the --interactive and --tty flags. Useful when running headless.\n\n\nDOCKER_FLAGS: Allows to pass custom flags (e.g., volume mounts) to \"docker run\" when running LocalStack in Docker.\n\n\nDOCKER_CMD: Shell command used to run Docker containers, e.g., set to \"sudo docker\" to run as sudo (default: docker).\n\n\nSKIP_INFRA_DOWNLOADS: Whether to skip downloading additional infrastructure components (e.g., specific Elasticsearch versions).\n\n\nSTART_WEB: Flag to control whether the Web UI should be started in Docker (values: 0\/1; default: 1).\n\n\nLAMBDA_FALLBACK_URL: Fallback URL to use when a non-existing Lambda is invoked. Either records invocations in DynamoDB (value dynamodb:\/\/<table_name>) or forwards invocations as a POST request (value http(s):\/\/...).\n\n\nEXTRA_CORS_ALLOWED_HEADERS: Comma-separated list of header names to be be added to Access-Control-Allow-Headers CORS header\n\n\nEXTRA_CORS_EXPOSE_HEADERS: Comma-separated list of header names to be be added to Access-Control-Expose-Headers CORS header\n\n\nLAMBDA_JAVA_OPTS: Allow passing custom JVM options (e.g., -Xmx512M) to Java Lambdas executed in Docker. Use _debug_port_ placeholder to configure the debug port (e.g., -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=_debug_port_).\n\n\nMAIN_CONTAINER_NAME: Specify the main docker container name (default: localstack_main).\n\n\nINIT_SCRIPTS_PATH: Specify the path to the initializing files with extensions .sh that are found default in \/docker-entrypoint-initaws.d.\n\n\nThe following environment configurations are deprecated:\n\nUSE_SSL: Whether to use https:\/\/... URLs with SSL encryption (default: false). Deprecated as of version 0.11.3 - each service endpoint now supports multiplexing HTTP\/HTTPS traffic over the same port.\n\nAdditionally, the following read-only environment variables are available:\n\nLOCALSTACK_HOSTNAME: Name of the host where LocalStack services are available.\nUse this hostname as endpoint (e.g., http:\/\/${LOCALSTACK_HOSTNAME}:4566) in order\nto access the services from within your Lambda functions\n(e.g., to store an item to DynamoDB or S3 from a Lambda).\n\nAn example passing the above environment variables to LocalStack to start Kinesis, Lambda, Dynamodb and SQS:\nSERVICES=kinesis,lambda,sqs,dynamodb localstack start\n\nDynamically updating configuration at runtime\nEach of the service APIs listed above defines\na backdoor API under the path \/?_config_ which allows to dynamically update configuration variables\ndefined in config.py.\nFor example, to dynamically set KINESIS_ERROR_PROBABILITY=1 at runtime, use the following command:\ncurl -v -d '{\"variable\":\"KINESIS_ERROR_PROBABILITY\",\"value\":1}' 'http:\/\/localhost:4568\/?_config_'\n\nService health checks\nThe service \/health check endpoint on the edge port (http:\/\/localhost:4566\/health by default) provides basic information about the status of each service (e.g., {\"s3\":\"running\",\"es\":\"starting\"}). By default, the endpoint returns cached values that are determined during startup - the status values can be refreshed by adding the reload query parameter: http:\/\/localhost:4566\/health?reload.\nInitializing a fresh instance\nWhen a container is started for the first time, it will execute files with extensions .sh that are found in \/docker-entrypoint-initaws.d or an alternate path defined in INIT_SCRIPTS_PATH. Files will be executed in alphabetical order. You can easily create aws resources on localstack using awslocal (or aws) cli tool in the initialization scripts.\nUsing custom SSL certificates\nTo use your own SSL certificate instead of the randomly generated certificate, you can place a file server.test.pem into the LocalStack temporary directory ($TMPDIR\/localstack, or \/tmp\/localstack by default). The file server.test.pem must contain the key file, as well as the certificate file content:\n-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----\n\nUsing custom SSL certificates with docker-compose\nTypically with docker-compose you can add into docker-compose.yml this volume to the LocalStack services :\n  volumes:\n    - \"${PWD}\/ls_tmp:\/tmp\/localstack\"\n    - \"\/var\/run\/docker.sock:\/var\/run\/docker.sock\"\n\nThe local directory \/ls_tmp must contains the three files (server.test.pem, server.test.pem.crt, server.test.pem.key)\nAccessing the infrastructure via CLI or code\nYou can point your aws CLI to use the local infrastructure, for example:\naws --endpoint-url=http:\/\/localhost:4568 kinesis list-streams\n{\n    \"StreamNames\": []\n}\n\nUse the below command to install aws CLI, if not installed already.\npip install awscli\n\nSetting up local region and credentials to run LocalStack\naws requires the region and the credentials to be set in order to run the aws commands. Create the default configuration & the credentials. Below key will ask for the Access key id, secret Access Key, region & output format.\naws configure --profile default\n\n# Config & credential file will be created under ~\/.aws folder\n\nNOTE: Please use test as Access key id and secret Access Key to make S3 presign url work. We have added presign url signature verification algorithm to validate the presign url and its expiration. You can configure credentials into the system environment using export command in the linux\/Mac system. You also can add credentials in ~\/.aws\/credentials file directly.\nexport AWS_ACCESS_KEY_ID=test\nexport AWS_SECRET_ACCESS_KEY=test\n\nNEW: Check out awslocal, a thin CLI wrapper\nthat runs commands directly against LocalStack (no need to specify --endpoint-url anymore).\nInstall it via pip install awscli-local, and then use it as follows:\nawslocal kinesis list-streams\n{\n    \"StreamNames\": []\n}\n\nUPDATE: Use the environment variable $LOCALSTACK_HOSTNAME to determine the target host\ninside your Lambda function. See Configurations section for more details.\nUsing the official AWS CLI version 2 Docker image with Localstack Docker container\nBy default the container running amazon\/aws-cli is isolated from 0.0.0.0:4566 on the host machine, that means that aws-cli cannot reach localstack through your shell.\nTo ensure that the two docker containers can communicate create a network on the docker engine:\n$ \u25b6 docker network create localstack\n0c9cb3d37b0ea1bfeb6b77ade0ce5525e33c7929d69f49c3e5ed0af457bdf123\nThen modify the docker-compose.yml specifying the network to use:\nnetworks:\n  default:\n    external:\n      name: \"localstack\"\nRun AWS Cli v2 docker container using this network (example):\n$ \u25b6 docker run --network localstack --rm -it amazon\/aws-cli --endpoint-url=http:\/\/localstack:4566 lambda list-functions\n{\n    \"Functions\": []\n}\nIf you use AWS CLI v2 from a docker container often, create an alias:\n$ \u25b6 alias laws='docker run --network localstack --rm -it amazon\/aws-cli --endpoint-url=http:\/\/localstack:4566'\nSo you can type:\n$ \u25b6 laws lambda list-functions\n{\n    \"Functions\": []\n}\nClient Libraries\n\nPython: https:\/\/github.com\/localstack\/localstack-python-client\n\nalternatively, you can also use boto3 and use the endpoint_url parameter when creating a connection\n\n\n(more coming soon...)\n\nInvoking API Gateway\nWhile API Gateway endpoints on AWS use a custom DNS name to identify the API ID (e.g., https:\/\/nmafetnwf6.execute-api.us-east-1.amazonaws.com\/prod\/my\/path), LocalStack uses the special URL path indicator ...\/_user_request_\/... to indicate the execution of a REST API method.\nThe URL pattern for API Gateway executions is http:\/\/localhost:4566\/restapis\/<apiId>\/<stage>\/_user_request_\/<methodPath>. The example URL above would map to the following localhost URL:\n$ curl http:\/\/localhost:4566\/restapis\/nmafetnwf6\/prod\/_user_request_\/my\/path\n\nIntegration with nosetests\nIf you want to use LocalStack in your integration tests (e.g., nosetests), simply fire up the\ninfrastructure in your test setup method and then clean up everything in your teardown method:\nfrom localstack.services import infra\n\ndef setup():\n    infra.start_infra(asynchronous=True)\n\ndef teardown():\n    infra.stop_infra()\n\ndef my_app_test():\n    # here goes your test logic\n\nSee the example test file tests\/integration\/test_integration.py for more details.\nIntegration with Serverless\nYou can use the serverless-localstack plugin to easily run Serverless applications on LocalStack.\nFor more information, please check out the plugin repository here:\nhttps:\/\/github.com\/localstack\/serverless-localstack\nIntegration with Terraform\nYou can use Terraform to provision your resources locally. Please refer to the Terraform AWS Provider docs here on how to configure the API endpoints on localhost.\nUsing local code with Lambda\nIn order to mount a local folder, ensure that LAMBDA_REMOTE_DOCKER is set to false then set the S3 bucket name to __local__ and the S3 key to your local path:\nawslocal lambda create-function --function-name myLambda \\\n    --code S3Bucket=\"__local__\",S3Key=\"\/my\/local\/lambda\/folder\" \\\n    --handler index.myHandler \\\n    --runtime nodejs8.10 \\\n    --role whatever\n\nIntegration with Java\/JUnit\nIn order to use LocalStack with Java, the project ships with a simple JUnit runner, see sample below.\n...\nimport cloud.localstack.LocalstackTestRunner;\nimport cloud.localstack.TestUtils;\nimport cloud.localstack.docker.annotation.LocalstackDockerProperties;\n\n@RunWith(LocalstackTestRunner.class)\n@LocalstackDockerProperties(services = { \"s3\", \"sqs\", \"kinesis:77077\" })\npublic class MyCloudAppTest {\n\n  @Test\n  public void testLocalS3API() {\n    AmazonS3 s3 = TestUtils.getClientS3()\n    List<Bucket> buckets = s3.listBuckets();\n    ...\n  }\n}\n\nFor more details and a complete list of configuration parameters, please refer to the LocalStack Java Utils repository.\nTroubleshooting\n\n\nIf you're using AWS Java libraries with Kinesis, please, refer to CBOR protocol issues with the Java SDK guide how to disable CBOR protocol which is not supported by kinesalite.\n\n\nAccessing local S3: To avoid domain name resolution issues, you need to enable path style access on your S3 SDK client. Most AWS SDKs provide a config to achieve that, e.g., for Java:\n\n\ns3.setS3ClientOptions(S3ClientOptions.builder().setPathStyleAccess(true).build());\n\/\/ There is also an option to do this if you're using any of the client builder classes:\nAmazonS3ClientBuilder builder = AmazonS3ClientBuilder.standard();\nbuilder.withPathStyleAccessEnabled(true);\n...\n\n\n\nMounting the temp. directory: Note that on MacOS you may have to run TMPDIR=\/private$TMPDIR docker-compose up if\n$TMPDIR contains a symbolic link that cannot be mounted by Docker.\n(See details here: https:\/\/bitbucket.org\/atlassian\/localstack\/issues\/40\/getting-mounts-failed-on-docker-compose-up)\n\n\nIf you run into file permission issues on pip install under Mac OS (e.g., Permission denied: '\/Library\/Python\/2.7\/site-packages\/six.py'), then you may have to re-install pip via Homebrew (see this discussion thread). Alternatively, try installing\nwith the --user flag: pip install --user localstack\n\n\nIf you are deploying within OpenShift, please be aware: the pod must run as root, and the user must have capabilities added to the running pod, in order to allow Elasticsearch to be run as the non-root localstack user.\n\n\nIf you are experiencing slow performance with Lambdas in Mac OS, you could either (1) try mounting local code directly into the Lambda container, or (2) disable mounting the temporary directory into the LocalStack container in docker-compose. (See also https:\/\/github.com\/localstack\/localstack\/issues\/2515)\n\n\nThe environment variable no_proxy is rewritten by LocalStack. (Internal requests will go straight via localhost, bypassing any proxy configuration).\n\n\nFor troubleshooting LocalStack start issues, you can check debug logs by running DEBUG=1 localstack start\n\n\nIn case you get errors related to node\/nodejs, you may find (this issue comment: https:\/\/github.com\/localstack\/localstack\/issues\/227#issuecomment-319938530) helpful.\n\n\nIf you are using AWS Java libraries and need to disable SSL certificate checking, add -Dcom.amazonaws.sdk.disableCertChecking to the java invocation.\n\n\nDeveloping\nRequirements for developing or starting locally\nTo develop new features, or to start the stack locally (outside of Docker), the following additional tools are required:\n\nmake\nnpm (node.js package manager)\njava\/javac (Java 8 runtime environment and compiler)\nmvn (Maven, the build system for Java)\nmoto(for testing)\ndocker-compose (for running the localstack using docker-compose)\nmock (for unit testing)\npytest (for unit testing)\npytest-cov (to check the unit-testing coverage)\n\nDevelopment Environment\nIf you pull the repo in order to extend\/modify LocalStack, run this command to install\nall the dependencies:\nmake install\n\nThis will install the required pip dependencies in a local Python virtualenv directory\n.venv (your global python packages will remain untouched), as well as some node modules\nin .\/localstack\/node_modules\/. Depending on your system, some pip\/npm modules may require\nadditional native libs installed.\nThe Makefile contains a target to conveniently run the local infrastructure for development:\nmake infra\n\nCheck out the\ndeveloper guide which\ncontains a few instructions on how to get started with developing (and debugging) features for\nLocalStack.\nTesting\nThe project contains a set of unit and integration tests that can be kicked off via a make\ntarget:\nmake test\n\nTo check the Code Coverage\nOnce the new feature \/ bug fix is done, run the unit testing and check for the coverage.\n# To run the particular test file (sample)\npytest --cov=localstack tests\/unit\/test_common.py\n\n# To check the coverage in the console\ncoverage report\n\n# To check the coverage as html (output will be redirected to the html folder)\ncoverage html\n\nWeb Dashboard (deprecated)\nThe projects also comes with a simple Web dashboard that allows to view the deployed AWS\ncomponents and the relationship between them.\nlocalstack web\n\nPlease note that the Web UI requires using the extended version of the Docker image (localstack\/localstack-full).\nNote: The Web dashboard is not actively maintained anymore and may get removed in an upcoming release.\nOther UI Clients\n\nCommandeer desktop app\nDynamoDB Admin Web UI\n\nChange Log\nPlease refer to CHANGELOG.md to see the complete list of changes for each release.\nContributing\nWe welcome feedback, bug reports, and pull requests!\nFor pull requests, please stick to the following guidelines:\n\nAdd tests for any new features and bug fixes. Ideally, each PR should increase the test coverage.\nFollow the existing code style (e.g., indents). A PEP8 code linting target is included in the Makefile.\nPut a reasonable amount of comments into the code.\nFork localstack on your github user account, do your changes there and then create a PR against main localstack repository.\nSeparate unrelated changes into multiple pull requests.\n1 commit per PR: Please squash\/rebase multiple commits into one single commit (to keep the history clean).\n\nPlease note that by contributing any code or documentation to this repository (by\nraising pull requests, or otherwise) you explicitly agree to\nthe Contributor License Agreement.\nContributors\nThis project exists thanks to all the people who contribute.\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nStargazers over time\n\nLicense\nCopyright (c) 2017-2020 LocalStack maintainers and contributors.\nCopyright (c) 2016 Atlassian and others.\nThis version of LocalStack is released under the Apache License, Version 2.0 (see LICENSE.txt).\nBy downloading and using this software you agree to the\nEnd-User License Agreement (EULA).\nWe build on a number of third-party software tools, including the following:\n\n\n\nThird-Party software\nLicense\n\n\n\n\nPython\/pip modules:\n\n\n\nairspeed\nBSD License\n\n\namazon_kclpy\nAmazon Software License\n\n\nboto3\nApache License 2.0\n\n\ncoverage\nApache License 2.0\n\n\ndocopt\nMIT License\n\n\nelasticsearch\nApache License 2.0\n\n\nflask\nBSD License\n\n\nflask_swagger\nMIT License\n\n\njsonpath-rw\nApache License 2.0\n\n\nmoto\nApache License 2.0\n\n\nrequests\nApache License 2.0\n\n\nsubprocess32\nPSF License\n\n\nNode.js\/npm modules:\n\n\n\nkinesalite\nMIT License\n\n\nOther tools:\n\n\n\nElasticsearch\nApache License 2.0\n\n\nlocal-kms\nMIT License\n\n\n\n","145":"\n\n\n\npandas: powerful Python data analysis toolkit\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is it?\npandas is a Python package that provides fast, flexible, and expressive data\nstructures designed to make working with \"relational\" or \"labeled\" data both\neasy and intuitive. It aims to be the fundamental high-level building block for\ndoing practical, real world data analysis in Python. Additionally, it has\nthe broader goal of becoming the most powerful and flexible open source data\nanalysis \/ manipulation tool available in any language. It is already well on\nits way towards this goal.\nMain Features\nHere are just a few of the things that pandas does well:\n\nEasy handling of missing data (represented as\nNaN, NA, or NaT) in floating point as well as non-floating point data\nSize mutability: columns can be inserted and\ndeleted from DataFrame and higher dimensional\nobjects\nAutomatic and explicit data alignment: objects can\nbe explicitly aligned to a set of labels, or the user can simply\nignore the labels and let Series, DataFrame, etc. automatically\nalign the data for you in computations\nPowerful, flexible group by functionality to perform\nsplit-apply-combine operations on data sets, for both aggregating\nand transforming data\nMake it easy to convert ragged,\ndifferently-indexed data in other Python and NumPy data structures\ninto DataFrame objects\nIntelligent label-based slicing, fancy\nindexing, and subsetting of\nlarge data sets\nIntuitive merging and joining data\nsets\nFlexible reshaping and pivoting of\ndata sets\nHierarchical labeling of axes (possible to have multiple\nlabels per tick)\nRobust IO tools for loading data from flat files\n(CSV and delimited), Excel files, databases,\nand saving\/loading data from the ultrafast HDF5 format\nTime series-specific functionality: date range\ngeneration and frequency conversion, moving window statistics,\ndate shifting and lagging.\n\nWhere to get it\nThe source code is currently hosted on GitHub at:\nhttps:\/\/github.com\/pandas-dev\/pandas\nBinary installers for the latest released version are available at the Python\npackage index and on conda.\n# conda\nconda install pandas\n# or PyPI\npip install pandas\nDependencies\n\nNumPy\npython-dateutil\npytz\n\nSee the full installation instructions for minimum supported versions of required, recommended and optional dependencies.\nInstallation from sources\nTo install pandas from source you need Cython in addition to the normal\ndependencies above. Cython can be installed from pypi:\npip install cython\nIn the pandas directory (same one where you found this file after\ncloning the git repo), execute:\npython setup.py install\nor for installing in development mode:\npython -m pip install -e . --no-build-isolation --no-use-pep517\nIf you have make, you can also use make develop to run the same command.\nor alternatively\npython setup.py develop\nSee the full instructions for installing from source.\nLicense\nBSD 3\nDocumentation\nThe official documentation is hosted on PyData.org: https:\/\/pandas.pydata.org\/pandas-docs\/stable\nBackground\nWork on pandas started at AQR (a quantitative hedge fund) in 2008 and\nhas been under active development since then.\nGetting Help\nFor usage questions, the best place to go to is StackOverflow.\nFurther, general questions and discussions can also take place on the pydata mailing list.\nDiscussion and Development\nMost development discussions take place on github in this repo. Further, the pandas-dev mailing list can also be used for specialized discussions or design issues, and a Gitter channel is available for quick development related questions.\nContributing to pandas \nAll contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome.\nA detailed overview on how to contribute can be found in the contributing guide. There is also an overview on GitHub.\nIf you are simply looking to start working with the pandas codebase, navigate to the GitHub \"issues\" tab and start looking through interesting issues. There are a number of issues listed under Docs and good first issue where you could start out.\nYou can also triage issues which may include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to pandas on CodeTriage.\nOr maybe through using pandas you have an idea of your own or are looking for something in the documentation and thinking \u2018this can be improved\u2019...you can do something about it!\nFeel free to ask questions on the mailing list or on Gitter.\nAs contributors and maintainers to this project, you are expected to abide by pandas' code of conduct. More information can be found at: Contributor Code of Conduct\n","146":"\n\n\n\n\n\n\n    Users and logs provide clues. Sentry provides answers.\n  \n\nWhat's Sentry?\nSentry is a service that helps you monitor and fix crashes\nin realtime. The server is in Python, but it contains a full API for\nsending events from any language, in any application.\n\n\n\n\n\nOfficial Sentry SDKs\n\nJavaScript\nReact-Native\nPython\nRuby\nPHP\nGo\nRust\nJava\nObjective-C\/Swift\nC#\nPerl\nElixir\nLaravel\n\nResources\n\nDocumentation\nCommunity (Bugs, feature requests,\ngeneral questions)\nContributing\nBug Tracker\nCode\nTransifex (Translate\nSentry!)\n\n","147":"python-patterns\nA collection of design patterns and idioms in Python.\nCurrent Patterns\nCreational Patterns:\n\n\n\nPattern\nDescription\n\n\n\n\nabstract_factory\nuse a generic function with specific factories\n\n\nborg\na singleton with shared-state among instances\n\n\nbuilder\ninstead of using multiple constructors, builder object receives parameters and returns constructed objects\n\n\nfactory\ndelegate a specialized function\/method to create instances\n\n\nlazy_evaluation\nlazily-evaluated property pattern in Python\n\n\npool\npreinstantiate and maintain a group of instances of the same type\n\n\nprototype\nuse a factory and clones of a prototype for new instances (if instantiation is expensive)\n\n\n\nStructural Patterns:\n\n\n\nPattern\nDescription\n\n\n\n\n3-tier\ndata<->business logic<->presentation separation (strict relationships)\n\n\nadapter\nadapt one interface to another using a white-list\n\n\nbridge\na client-provider middleman to soften interface changes\n\n\ncomposite\nlets clients treat individual objects and compositions uniformly\n\n\ndecorator\nwrap functionality with other functionality in order to affect outputs\n\n\nfacade\nuse one class as an API to a number of others\n\n\nflyweight\ntransparently reuse existing instances of objects with similar\/identical state\n\n\nfront_controller\nsingle handler requests coming to the application\n\n\nmvc\nmodel<->view<->controller (non-strict relationships)\n\n\nproxy\nan object funnels operations to something else\n\n\n\nBehavioral Patterns:\n\n\n\nPattern\nDescription\n\n\n\n\nchain_of_responsibility\napply a chain of successive handlers to try and process the data\n\n\ncatalog\ngeneral methods will call different specialized methods based on construction parameter\n\n\nchaining_method\ncontinue callback next object method\n\n\ncommand\nbundle a command and arguments to call later\n\n\niterator\ntraverse a container and access the container's elements\n\n\niterator (alt. impl.)\ntraverse a container and access the container's elements\n\n\nmediator\nan object that knows how to connect other objects and act as a proxy\n\n\nmemento\ngenerate an opaque token that can be used to go back to a previous state\n\n\nobserver\nprovide a callback for notification of events\/changes to data\n\n\npublish_subscribe\na source syndicates events\/data to 0+ registered listeners\n\n\nregistry\nkeep track of all subclasses of a given class\n\n\nspecification\nbusiness rules can be recombined by chaining the business rules together using boolean logic\n\n\nstate\nlogic is organized into a discrete number of potential states and the next state that can be transitioned to\n\n\nstrategy\nselectable operations over the same data\n\n\ntemplate\nan object imposes a structure but takes pluggable components\n\n\nvisitor\ninvoke a callback for all items of a collection\n\n\n\nDesign for Testability Patterns:\n\n\n\nPattern\nDescription\n\n\n\n\ndependency_injection\n3 variants of dependency injection\n\n\n\nFundamental Patterns:\n\n\n\nPattern\nDescription\n\n\n\n\ndelegation_pattern\nan object handles a request by delegating to a second object (the delegate)\n\n\n\nOthers:\n\n\n\nPattern\nDescription\n\n\n\n\nblackboard\narchitectural model, assemble different sub-system knowledge to build a solution, AI approach - non gang of four pattern\n\n\ngraph_search\ngraphing algorithms - non gang of four pattern\n\n\nhsm\nhierarchical state machine - non gang of four pattern\n\n\n\nVideos\nDesign Patterns in Python by Peter Ullrich\nSebastian Buczy\u0144ski - Why you don't need design patterns in Python?\nYou Don't Need That!\nPluggable Libs Through Design Patterns\nContributing\nWhen an implementation is added or modified, please review the following guidelines:\nOutput\nAll files with example patterns have ### OUTPUT ### section at the bottom\n(migration to OUTPUT = \"\"\"...\"\"\" is in progress).\nRun append_output.sh (e.g. .\/append_output.sh borg.py) to generate\/update it.\nDocstrings\nAdd module level description in form of a docstring with links to corresponding references or other useful information.\nAdd \"Examples in Python ecosystem\" section if you know some. It shows how patterns could be applied to real-world problems.\nfacade.py has a good example of detailed description,\nbut sometimes the shorter one as in template.py would suffice.\nIn some cases class-level docstring with doctest would also help (see adapter.py)\nbut readable OUTPUT section is much better.\nPython 2 compatibility\nTo see Python 2 compatible versions of some patterns please check-out the legacy tag.\nUpdate README\nWhen everything else is done - update corresponding part of README.\nTravis CI\nPlease run tox or tox -e ci37 before submitting a patch to be sure your changes will pass CI.\nYou can also run flake8 or pytest commands manually. Examples can be found in tox.ini.\nContributing via issue triage \nYou can triage issues and pull requests which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to python-patterns on CodeTriage.\n","148":"\n\n\nNLP\u6c11\u5de5\u7684\u4e50\u56ed\nThe Most Powerful NLP-Weapon Arsenal\nNLP\u6c11\u5de5\u7684\u4e50\u56ed: \u51e0\u4e4e\u6700\u5168\u7684\u4e2d\u6587NLP\u8d44\u6e90\u5e93\n\n\u8bcd\u5e93\n\u5de5\u5177\u5305\n\u5b66\u4e60\u8d44\u6599\n\n\n\u5728\u5165\u95e8\u5230\u719f\u6089NLP\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7528\u5230\u4e86\u5f88\u591agithub\u4e0a\u7684\u5305\uff0c\u9042\u6574\u7406\u4e86\u4e00\u4e0b\uff0c\u5206\u4eab\u5728\u8fd9\u91cc\u3002\n\u5f88\u591a\u5305\u975e\u5e38\u6709\u8da3\uff0c\u503c\u5f97\u6536\u85cf\uff0c\u6ee1\u8db3\u5927\u5bb6\u7684\u6536\u96c6\u7656\uff01\n\u5982\u679c\u89c9\u5f97\u6709\u7528\uff0c\u8bf7\u5206\u4eab\u5e76star\uff0c\u8c22\u8c22\uff01\n\u957f\u671f\u4e0d\u5b9a\u65f6\u66f4\u65b0\uff0c\u6b22\u8fcewatch\u548cfork\uff01\n\u6d89\u53ca\u5185\u5bb9\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\u4e2d\u82f1\u6587\u654f\u611f\u8bcd\u3001\u8bed\u8a00\u68c0\u6d4b\u3001\u4e2d\u5916\u624b\u673a\/\u7535\u8bdd\u5f52\u5c5e\u5730\/\u8fd0\u8425\u5546\u67e5\u8be2\u3001\u540d\u5b57\u63a8\u65ad\u6027\u522b\u3001\u624b\u673a\u53f7\u62bd\u53d6\u3001\u8eab\u4efd\u8bc1\u62bd\u53d6\u3001\u90ae\u7bb1\u62bd\u53d6\u3001\u4e2d\u65e5\u6587\u4eba\u540d\u5e93\u3001\u4e2d\u6587\u7f29\u5199\u5e93\u3001\u62c6\u5b57\u8bcd\u5178\u3001\u8bcd\u6c47\u60c5\u611f\u503c\u3001\u505c\u7528\u8bcd\u3001\u53cd\u52a8\u8bcd\u8868\u3001\u66b4\u6050\u8bcd\u8868\u3001\u7e41\u7b80\u4f53\u8f6c\u6362\u3001\u82f1\u6587\u6a21\u62df\u4e2d\u6587\u53d1\u97f3\u3001\u6c6a\u5cf0\u6b4c\u8bcd\u751f\u6210\u5668\u3001\u804c\u4e1a\u540d\u79f0\u8bcd\u5e93\u3001\u540c\u4e49\u8bcd\u5e93\u3001\u53cd\u4e49\u8bcd\u5e93\u3001\u5426\u5b9a\u8bcd\u5e93\u3001\u6c7d\u8f66\u54c1\u724c\u8bcd\u5e93\u3001\u6c7d\u8f66\u96f6\u4ef6\u8bcd\u5e93\u3001\u8fde\u7eed\u82f1\u6587\u5207\u5272\u3001\u5404\u79cd\u4e2d\u6587\u8bcd\u5411\u91cf\u3001\u516c\u53f8\u540d\u5b57\u5927\u5168\u3001\u53e4\u8bd7\u8bcd\u5e93\u3001IT\u8bcd\u5e93\u3001\u8d22\u7ecf\u8bcd\u5e93\u3001\u6210\u8bed\u8bcd\u5e93\u3001\u5730\u540d\u8bcd\u5e93\u3001\u5386\u53f2\u540d\u4eba\u8bcd\u5e93\u3001\u8bd7\u8bcd\u8bcd\u5e93\u3001\u533b\u5b66\u8bcd\u5e93\u3001\u996e\u98df\u8bcd\u5e93\u3001\u6cd5\u5f8b\u8bcd\u5e93\u3001\u6c7d\u8f66\u8bcd\u5e93\u3001\u52a8\u7269\u8bcd\u5e93\u3001\u4e2d\u6587\u804a\u5929\u8bed\u6599\u3001\u4e2d\u6587\u8c23\u8a00\u6570\u636e\u3001\u767e\u5ea6\u4e2d\u6587\u95ee\u7b54\u6570\u636e\u96c6\u3001\u53e5\u5b50\u76f8\u4f3c\u5ea6\u5339\u914d\u7b97\u6cd5\u96c6\u5408\u3001bert\u8d44\u6e90\u3001\u6587\u672c\u751f\u6210&\u6458\u8981\u76f8\u5173\u5de5\u5177\u3001cocoNLP\u4fe1\u606f\u62bd\u53d6\u5de5\u5177\u3001\u56fd\u5185\u7535\u8bdd\u53f7\u7801\u6b63\u5219\u5339\u914d\u3001\u6e05\u534e\u5927\u5b66XLORE:\u4e2d\u82f1\u6587\u8de8\u8bed\u8a00\u767e\u79d1\u77e5\u8bc6\u56fe\u8c31\u3001\u6e05\u534e\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u6280\u672f\u7cfb\u5217\u62a5\u544a\u3001\u81ea\u7136\u8bed\u8a00\u751f\u6210\u3001NLU\u592a\u96be\u4e86\u7cfb\u5217\u3001\u81ea\u52a8\u5bf9\u8054\u6570\u636e\u53ca\u673a\u5668\u4eba\u3001\u7528\u6237\u540d\u9ed1\u540d\u5355\u5217\u8868\u3001\u7f6a\u540d\u6cd5\u52a1\u540d\u8bcd\u53ca\u5206\u7c7b\u6a21\u578b\u3001\u5fae\u4fe1\u516c\u4f17\u53f7\u8bed\u6599\u3001cs224n\u6df1\u5ea6\u5b66\u4e60\u81ea\u7136\u8bed\u8a00\u5904\u7406\u8bfe\u7a0b\u3001\u4e2d\u6587\u624b\u5199\u6c49\u5b57\u8bc6\u522b\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406 \u8bed\u6599\/\u6570\u636e\u96c6\u3001\u53d8\u91cf\u547d\u540d\u795e\u5668\u3001\u5206\u8bcd\u8bed\u6599\u5e93+\u4ee3\u7801\u3001\u4efb\u52a1\u578b\u5bf9\u8bdd\u82f1\u6587\u6570\u636e\u96c6\u3001ASR \u8bed\u97f3\u6570\u636e\u96c6 + \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u3001\u7b11\u58f0\u68c0\u6d4b\u5668\u3001Microsoft\u591a\u8bed\u8a00\u6570\u5b57\/\u5355\u4f4d\/\u5982\u65e5\u671f\u65f6\u95f4\u8bc6\u522b\u5305\u3001\u4e2d\u534e\u65b0\u534e\u5b57\u5178\u6570\u636e\u5e93\u53caapi(\u5305\u62ec\u5e38\u7528\u6b47\u540e\u8bed\u3001\u6210\u8bed\u3001\u8bcd\u8bed\u548c\u6c49\u5b57)\u3001\u6587\u6863\u56fe\u8c31\u81ea\u52a8\u751f\u6210\u3001SpaCy \u4e2d\u6587\u6a21\u578b\u3001Common Voice\u8bed\u97f3\u8bc6\u522b\u6570\u636e\u96c6\u65b0\u7248\u3001\u795e\u7ecf\u7f51\u7edc\u5173\u7cfb\u62bd\u53d6\u3001\u57fa\u4e8ebert\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u5173\u952e\u8bcd(Keyphrase)\u62bd\u53d6\u5305pke\u3001\u57fa\u4e8e\u533b\u7597\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u7684\u95ee\u7b54\u7cfb\u7edf\u3001\u57fa\u4e8e\u4f9d\u5b58\u53e5\u6cd5\u4e0e\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7684\u4e8b\u4ef6\u4e09\u5143\u7ec4\u62bd\u53d6\u3001\u4f9d\u5b58\u53e5\u6cd5\u5206\u67904\u4e07\u53e5\u9ad8\u8d28\u91cf\u6807\u6ce8\u6570\u636e\u3001cnocr\uff1a\u7528\u6765\u505a\u4e2d\u6587OCR\u7684Python3\u5305\u3001\u4e2d\u6587\u4eba\u7269\u5173\u7cfb\u77e5\u8bc6\u56fe\u8c31\u9879\u76ee\u3001\u4e2d\u6587nlp\u7ade\u8d5b\u9879\u76ee\u53ca\u4ee3\u7801\u6c47\u603b\u3001\u4e2d\u6587\u5b57\u7b26\u6570\u636e\u3001speech-aligner: \u4ece\u201c\u4eba\u58f0\u8bed\u97f3\u201d\u53ca\u5176\u201c\u8bed\u8a00\u6587\u672c\u201d\u4ea7\u751f\u97f3\u7d20\u7ea7\u522b\u65f6\u95f4\u5bf9\u9f50\u6807\u6ce8\u7684\u5de5\u5177\u3001AmpliGraph: \u77e5\u8bc6\u56fe\u8c31\u8868\u793a\u5b66\u4e60(Python)\u5e93\uff1a\u77e5\u8bc6\u56fe\u8c31\u6982\u5ff5\u94fe\u63a5\u9884\u6d4b\u3001Scattertext \u6587\u672c\u53ef\u89c6\u5316(python)\u3001\u8bed\u8a00\/\u77e5\u8bc6\u8868\u793a\u5de5\u5177\uff1aBERT & ERNIE\u3001\u4e2d\u6587\u5bf9\u6bd4\u82f1\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406NLP\u7684\u533a\u522b\u7efc\u8ff0\u3001Synonyms\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\u3001HarvestText\u9886\u57df\u81ea\u9002\u5e94\u6587\u672c\u6316\u6398\u5de5\u5177\uff08\u65b0\u8bcd\u53d1\u73b0-\u60c5\u611f\u5206\u6790-\u5b9e\u4f53\u94fe\u63a5\u7b49\uff09\u3001word2word\uff1a(Python)\u65b9\u4fbf\u6613\u7528\u7684\u591a\u8bed\u8a00\u8bcd-\u8bcd\u5bf9\u96c6\uff1a62\u79cd\u8bed\u8a00\/3,564\u4e2a\u591a\u8bed\u8a00\u5bf9\u3001\u8bed\u97f3\u8bc6\u522b\u8bed\u6599\u751f\u6210\u5de5\u5177\uff1a\u4ece\u5177\u6709\u97f3\u9891\/\u5b57\u5e55\u7684\u5728\u7ebf\u89c6\u9891\u521b\u5efa\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b(ASR)\u8bed\u6599\u5e93\u3001\u6784\u5efa\u533b\u7597\u5b9e\u4f53\u8bc6\u522b\u7684\u6a21\u578b\uff08\u5305\u542b\u8bcd\u5178\u548c\u8bed\u6599\u6807\u6ce8\uff09\u3001\u5355\u6587\u6863\u975e\u76d1\u7763\u7684\u5173\u952e\u8bcd\u62bd\u53d6\u3001Kashgari\u4e2d\u4f7f\u7528gpt-2\u8bed\u8a00\u6a21\u578b\u3001\u5f00\u6e90\u7684\u91d1\u878d\u6295\u8d44\u6570\u636e\u63d0\u53d6\u5de5\u5177\u3001\u6587\u672c\u81ea\u52a8\u6458\u8981\u5e93TextTeaser: \u4ec5\u652f\u6301\u82f1\u6587\u3001\u4eba\u6c11\u65e5\u62a5\u8bed\u6599\u5904\u7406\u5de5\u5177\u96c6\u3001\u4e00\u4e9b\u5173\u4e8e\u81ea\u7136\u8bed\u8a00\u7684\u57fa\u672c\u6a21\u578b\u3001\u57fa\u4e8e14W\u6b4c\u66f2\u77e5\u8bc6\u5e93\u7684\u95ee\u7b54\u5c1d\u8bd5--\u529f\u80fd\u5305\u62ec\u6b4c\u8bcd\u63a5\u9f99and\u5df2\u77e5\u6b4c\u8bcd\u627e\u6b4c\u66f2\u4ee5\u53ca\u6b4c\u66f2\u6b4c\u624b\u6b4c\u8bcd\u4e09\u89d2\u5173\u7cfb\u7684\u95ee\u7b54\u3001\u57fa\u4e8eSiamese bilstm\u6a21\u578b\u7684\u76f8\u4f3c\u53e5\u5b50\u5224\u5b9a\u6a21\u578b\u5e76\u63d0\u4f9b\u8bad\u7ec3\u6570\u636e\u96c6\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u3001\u7528Transformer\u7f16\u89e3\u7801\u6a21\u578b\u5b9e\u73b0\u7684\u6839\u636eHacker News\u6587\u7ae0\u6807\u9898\u81ea\u52a8\u751f\u6210\u8bc4\u8bba\u3001\u7528BERT\u8fdb\u884c\u5e8f\u5217\u6807\u8bb0\u548c\u6587\u672c\u5206\u7c7b\u7684\u6a21\u677f\u4ee3\u7801\u3001LitBank\uff1aNLP\u6570\u636e\u96c6\u2014\u2014\u652f\u6301\u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u8ba1\u7b97\u4eba\u6587\u5b66\u79d1\u4efb\u52a1\u7684100\u90e8\u5e26\u6807\u8bb0\u82f1\u6587\u5c0f\u8bf4\u8bed\u6599\u3001\u767e\u5ea6\u5f00\u6e90\u7684\u57fa\u51c6\u4fe1\u606f\u62bd\u53d6\u7cfb\u7edf\u3001\u865a\u5047\u65b0\u95fb\u6570\u636e\u96c6\u3001Facebook: LAMA\u8bed\u8a00\u6a21\u578b\u5206\u6790\uff0c\u63d0\u4f9bTransformer-XL\/BERT\/ELMo\/GPT\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u7684\u7edf\u4e00\u8bbf\u95ee\u63a5\u53e3\u3001CommonsenseQA\uff1a\u9762\u5411\u5e38\u8bc6\u7684\u82f1\u6587QA\u6311\u6218\u3001\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u8d44\u6599\u3001\u6570\u636e\u53ca\u5de5\u5177\u3001\u5404\u5927\u516c\u53f8\u5185\u90e8\u91cc\u5927\u725b\u5206\u4eab\u7684\u6280\u672f\u6587\u6863 PDF \u6216\u8005 PPT\u3001\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL\u8bed\u53e5\uff08\u82f1\u6587\uff09\u3001\u4e2d\u6587NLP\u6570\u636e\u589e\u5f3a\uff08EDA\uff09\u5de5\u5177\u3001\u82f1\u6587NLP\u6570\u636e\u589e\u5f3a\u5de5\u5177 \u3001\u57fa\u4e8e\u533b\u836f\u77e5\u8bc6\u56fe\u8c31\u7684\u667a\u80fd\u95ee\u7b54\u7cfb\u7edf\u3001\u4eac\u4e1c\u5546\u54c1\u77e5\u8bc6\u56fe\u8c31\u3001\u57fa\u4e8emongodb\u5b58\u50a8\u7684\u519b\u4e8b\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u95ee\u7b54\u9879\u76ee\u3001\u57fa\u4e8e\u8fdc\u76d1\u7763\u7684\u4e2d\u6587\u5173\u7cfb\u62bd\u53d6\u3001\u8bed\u97f3\u60c5\u611f\u5206\u6790\u3001\u4e2d\u6587ULMFiT-\u60c5\u611f\u5206\u6790-\u6587\u672c\u5206\u7c7b-\u8bed\u6599\u53ca\u6a21\u578b\u3001\u4e00\u4e2a\u62cd\u7167\u505a\u9898\u7a0b\u5e8f\u3001\u4e16\u754c\u5404\u56fd\u5927\u89c4\u6a21\u4eba\u540d\u5e93\u3001\u4e00\u4e2a\u5229\u7528\u6709\u8da3\u4e2d\u6587\u8bed\u6599\u5e93 qingyun \u8bad\u7ec3\u51fa\u6765\u7684\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba\u3001\u4e2d\u6587\u804a\u5929\u673a\u5668\u4ebaseqGAN\u3001\u7701\u5e02\u533a\u9547\u884c\u653f\u533a\u5212\u6570\u636e\u5e26\u62fc\u97f3\u6807\u6ce8\u3001\u6559\u80b2\u884c\u4e1a\u65b0\u95fb\u8bed\u6599\u5e93\u5305\u542b\u81ea\u52a8\u6587\u6458\u529f\u80fd\u3001\u5f00\u653e\u4e86\u5bf9\u8bdd\u673a\u5668\u4eba-\u77e5\u8bc6\u56fe\u8c31-\u8bed\u4e49\u7406\u89e3-\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u53ca\u6570\u636e\u3001\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\uff1a\u57fa\u4e8e\u767e\u5ea6\u767e\u79d1\u4e2d\u6587\u9875\u9762-\u62bd\u53d6\u4e09\u5143\u7ec4\u4fe1\u606f-\u6784\u5efa\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u3001masr: \u4e2d\u6587\u8bed\u97f3\u8bc6\u522b-\u63d0\u4f9b\u9884\u8bad\u7ec3\u6a21\u578b-\u9ad8\u8bc6\u522b\u7387\u3001Python\u97f3\u9891\u6570\u636e\u589e\u5e7f\u5e93\u3001\u4e2d\u6587\u5168\u8bcd\u8986\u76d6BERT\u53ca\u4e24\u4efd\u9605\u8bfb\u7406\u89e3\u6570\u636e\u3001ConvLab\uff1a\u5f00\u6e90\u591a\u57df\u7aef\u5230\u7aef\u5bf9\u8bdd\u7cfb\u7edf\u5e73\u53f0\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6570\u636e\u96c6\u3001\u57fa\u4e8e\u6700\u65b0\u7248\u672crasa\u642d\u5efa\u7684\u5bf9\u8bdd\u7cfb\u7edf\u3001\u57fa\u4e8eTensorFlow\u548cBERT\u7684\u7ba1\u9053\u5f0f\u5b9e\u4f53\u53ca\u5173\u7cfb\u62bd\u53d6\u3001\u4e00\u4e2a\u5c0f\u578b\u7684\u8bc1\u5238\u77e5\u8bc6\u56fe\u8c31\/\u77e5\u8bc6\u5e93\u3001\u590d\u76d8\u6240\u6709NLP\u6bd4\u8d5b\u7684TOP\u65b9\u6848\u3001OpenCLaP\uff1a\u591a\u9886\u57df\u5f00\u6e90\u4e2d\u6587\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u4ed3\u5e93\u3001UER\uff1a\u57fa\u4e8e\u4e0d\u540c\u8bed\u6599+\u7f16\u7801\u5668+\u76ee\u6807\u4efb\u52a1\u7684\u4e2d\u6587\u9884\u8bad\u7ec3\u6a21\u578b\u4ed3\u5e93\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5411\u91cf\u5408\u96c6\u3001\u57fa\u4e8e\u91d1\u878d-\u53f8\u6cd5\u9886\u57df(\u517c\u6709\u95f2\u804a\u6027\u8d28)\u7684\u804a\u5929\u673a\u5668\u4eba\u3001g2pC\uff1a\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u6c49\u8bed\u8bfb\u97f3\u81ea\u52a8\u6807\u8bb0\u6a21\u5757\u3001Zincbase \u77e5\u8bc6\u56fe\u8c31\u6784\u5efa\u5de5\u5177\u5305\u3001\u8bd7\u6b4c\u8d28\u91cf\u8bc4\u4ef7\/\u7ec6\u7c92\u5ea6\u60c5\u611f\u8bd7\u6b4c\u8bed\u6599\u5e93\u3001\u5feb\u901f\u8f6c\u5316\u300c\u4e2d\u6587\u6570\u5b57\u300d\u548c\u300c\u963f\u62c9\u4f2f\u6570\u5b57\u300d\u3001\u767e\u5ea6\u77e5\u9053\u95ee\u7b54\u8bed\u6599\u5e93\u3001\u57fa\u4e8e\u77e5\u8bc6\u56fe\u8c31\u7684\u95ee\u7b54\u7cfb\u7edf\u3001jieba_fast \u52a0\u901f\u7248\u7684jieba\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u6559\u7a0b\u3001\u4e2d\u6587\u9605\u8bfb\u7406\u89e3\u6570\u636e\u96c6\u3001\u57fa\u4e8eBERT\u7b49\u6700\u65b0\u8bed\u8a00\u6a21\u578b\u7684\u62bd\u53d6\u5f0f\u6458\u8981\u63d0\u53d6\u3001Python\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u8fdb\u884c\u6587\u672c\u6458\u8981\u7684\u7efc\u5408\u6307\u5357\u3001\u77e5\u8bc6\u56fe\u8c31\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u8d44\u6599\u6574\u7406\u3001\u7ef4\u57fa\u5927\u89c4\u6a21\u5e73\u884c\u6587\u672c\u8bed\u6599\u3001StanfordNLP 0.2.0\uff1a\u7eafPython\u7248\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5305\u3001NeuralNLP-NeuralClassifier\uff1a\u817e\u8baf\u5f00\u6e90\u6df1\u5ea6\u5b66\u4e60\u6587\u672c\u5206\u7c7b\u5de5\u5177\u3001\u7aef\u5230\u7aef\u7684\u5c01\u95ed\u57df\u5bf9\u8bdd\u7cfb\u7edf\u3001\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff1aNeuroNER vs. BertNER\u3001\u65b0\u95fb\u4e8b\u4ef6\u7ebf\u7d22\u62bd\u53d6\u30012019\u5e74\u767e\u5ea6\u7684\u4e09\u5143\u7ec4\u62bd\u53d6\u6bd4\u8d5b\uff1a\u201c\u79d1\u5b66\u7a7a\u95f4\u961f\u201d\u6e90\u7801\u3001\u57fa\u4e8e\u4f9d\u5b58\u53e5\u6cd5\u7684\u5f00\u653e\u57df\u6587\u672c\u77e5\u8bc6\u4e09\u5143\u7ec4\u62bd\u53d6\u548c\u77e5\u8bc6\u5e93\u6784\u5efa\u3001\u4e2d\u6587\u7684GPT2\u8bad\u7ec3\u4ee3\u7801\u3001ML-NLP - \u673a\u5668\u5b66\u4e60(Machine Learning)NLP\u9762\u8bd5\u4e2d\u5e38\u8003\u5230\u7684\u77e5\u8bc6\u70b9\u548c\u4ee3\u7801\u5b9e\u73b0\u3001nlp4han:\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u65ad\u53e5\/\u5206\u8bcd\/\u8bcd\u6027\u6807\u6ce8\/\u7ec4\u5757\/\u53e5\u6cd5\u5206\u6790\/\u8bed\u4e49\u5206\u6790\/NER\/N\u5143\u8bed\u6cd5\/HMM\/\u4ee3\u8bcd\u6d88\u89e3\/\u60c5\u611f\u5206\u6790\/\u62fc\u5199\u68c0\u67e5\u3001XLM\uff1aFacebook\u7684\u8de8\u8bed\u8a00\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u3001\u7528\u57fa\u4e8eBERT\u7684\u5fae\u8c03\u548c\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u6765\u8fdb\u884c\u77e5\u8bc6\u56fe\u8c31\u767e\u5ea6\u767e\u79d1\u4eba\u7269\u8bcd\u6761\u5c5e\u6027\u62bd\u53d6\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u76f8\u5173\u7684\u5f00\u653e\u4efb\u52a1-\u6570\u636e\u96c6-\u5f53\u524d\u6700\u4f73\u7ed3\u679c\u3001CoupletAI - \u57fa\u4e8eCNN+Bi-LSTM+Attention \u7684\u81ea\u52a8\u5bf9\u5bf9\u8054\u7cfb\u7edf\u3001\u62bd\u8c61\u77e5\u8bc6\u56fe\u8c31\u3001MiningZhiDaoQACorpus - 580\u4e07\u767e\u5ea6\u77e5\u9053\u95ee\u7b54\u6570\u636e\u6316\u6398\u9879\u76ee\u3001brat rapid annotation tool: \u5e8f\u5217\u6807\u6ce8\u5de5\u5177\u3001\u5927\u89c4\u6a21\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u6570\u636e\uff1a1.4\u4ebf\u5b9e\u4f53\u3001\u6570\u636e\u589e\u5f3a\u5728\u673a\u5668\u7ffb\u8bd1\u53ca\u5176\u4ed6nlp\u4efb\u52a1\u4e2d\u7684\u5e94\u7528\u53ca\u6548\u679c\u3001allennlp\u9605\u8bfb\u7406\u89e3:\u652f\u6301\u591a\u79cd\u6570\u636e\u548c\u6a21\u578b\u3001PDF\u8868\u683c\u6570\u636e\u63d0\u53d6\u5de5\u5177 \u3001 Graphbrain\uff1aAI\u5f00\u6e90\u8f6f\u4ef6\u5e93\u548c\u79d1\u7814\u5de5\u5177\uff0c\u76ee\u7684\u662f\u4fc3\u8fdb\u81ea\u52a8\u610f\u4e49\u63d0\u53d6\u548c\u6587\u672c\u7406\u89e3\u4ee5\u53ca\u77e5\u8bc6\u7684\u63a2\u7d22\u548c\u63a8\u65ad\u3001\u7b80\u5386\u81ea\u52a8\u7b5b\u9009\u7cfb\u7edf\u3001\u57fa\u4e8e\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u7b80\u5386\u81ea\u52a8\u6458\u8981\u3001\u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6\uff0c\u5305\u62ec\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6&\u57fa\u51c6\u6a21\u578b&\u8bed\u6599\u5e93&\u6392\u884c\u699c\u3001\u6811\u6d1e OCR \u6587\u5b57\u8bc6\u522b \u3001\u4ece\u5305\u542b\u8868\u683c\u7684\u626b\u63cf\u56fe\u7247\u4e2d\u8bc6\u522b\u8868\u683c\u548c\u6587\u5b57\u3001\u8bed\u58f0\u8fc1\u79fb\u3001Python\u53e3\u8bed\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u82f1\u6587)\u3001 similarity\uff1a\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u5de5\u5177\u5305\uff0cjava\u7f16\u5199\u3001\u6d77\u91cf\u4e2d\u6587\u9884\u8bad\u7ec3ALBERT\u6a21\u578b \u3001Transformers 2.0 \u3001\u57fa\u4e8e\u5927\u89c4\u6a21\u97f3\u9891\u6570\u636e\u96c6Audioset\u7684\u97f3\u9891\u589e\u5f3a \u3001Poplar\uff1a\u7f51\u9875\u7248\u81ea\u7136\u8bed\u8a00\u6807\u6ce8\u5de5\u5177\u3001\u56fe\u7247\u6587\u5b57\u53bb\u9664\uff0c\u53ef\u7528\u4e8e\u6f2b\u753b\u7ffb\u8bd1 \u3001186\u79cd\u8bed\u8a00\u7684\u6570\u5b57\u53eb\u6cd5\u5e93\u3001Amazon\u53d1\u5e03\u57fa\u4e8e\u77e5\u8bc6\u7684\u4eba-\u4eba\u5f00\u653e\u9886\u57df\u5bf9\u8bdd\u6570\u636e\u96c6 \u3001\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u6a21\u5757\u4ee3\u7801\u3001\u7e41\u7b80\u4f53\u8f6c\u6362 \u3001 Python\u5b9e\u73b0\u7684\u591a\u79cd\u6587\u672c\u53ef\u8bfb\u6027\u8bc4\u4ef7\u6307\u6807\u3001\u7c7b\u4f3c\u4e8e\u4eba\u540d\/\u5730\u540d\/\u7ec4\u7ec7\u673a\u6784\u540d\u7684\u547d\u540d\u4f53\u8bc6\u522b\u6570\u636e\u96c6 \u3001\u4e1c\u5357\u5927\u5b66\u300a\u77e5\u8bc6\u56fe\u8c31\u300b\u7814\u7a76\u751f\u8bfe\u7a0b(\u8d44\u6599)\u3001. \u82f1\u6587\u62fc\u5199\u68c0\u67e5\u5e93 \u3001 wwsearch\u662f\u4f01\u4e1a\u5fae\u4fe1\u540e\u53f0\u81ea\u7814\u7684\u5168\u6587\u68c0\u7d22\u5f15\u64ce\u3001CHAMELEON\uff1a\u6df1\u5ea6\u5b66\u4e60\u65b0\u95fb\u63a8\u8350\u7cfb\u7edf\u5143\u67b6\u6784 \u3001 8\u7bc7\u8bba\u6587\u68b3\u7406BERT\u76f8\u5173\u6a21\u578b\u8fdb\u5c55\u4e0e\u53cd\u601d\u3001DocSearch\uff1a\u514d\u8d39\u6587\u6863\u641c\u7d22\u5f15\u64ce\u3001 LIDA\uff1a\u8f7b\u91cf\u4ea4\u4e92\u5f0f\u5bf9\u8bdd\u6807\u6ce8\u5de5\u5177 \u3001aili - the fastest in-memory index in the East \u4e1c\u534a\u7403\u6700\u5feb\u5e76\u53d1\u7d22\u5f15 \u3001\u77e5\u8bc6\u56fe\u8c31\u8f66\u97f3\u5de5\u4f5c\u9879\u76ee\u3001\u81ea\u7136\u8bed\u8a00\u751f\u6210\u8d44\u6e90\u5927\u5168 \u3001\u4e2d\u65e5\u97e9\u5206\u8bcd\u5e93mecab\u7684Python\u63a5\u53e3\u5e93\u3001\u4e2d\u6587\u6587\u672c\u6458\u8981\/\u5173\u952e\u8bcd\u63d0\u53d6\u3001\u6c49\u5b57\u5b57\u7b26\u7279\u5f81\u63d0\u53d6\u5668 (featurizer)\uff0c\u63d0\u53d6\u6c49\u5b57\u7684\u7279\u5f81\uff08\u53d1\u97f3\u7279\u5f81\u3001\u5b57\u5f62\u7279\u5f81\uff09\u7528\u505a\u6df1\u5ea6\u5b66\u4e60\u7684\u7279\u5f81\u3001\u4e2d\u6587\u751f\u6210\u4efb\u52a1\u57fa\u51c6\u6d4b\u8bc4 \u3001\u4e2d\u6587\u7f29\u5199\u6570\u636e\u96c6\u3001\u4e2d\u6587\u4efb\u52a1\u57fa\u51c6\u6d4b\u8bc4 - \u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6-\u57fa\u51c6(\u9884\u8bad\u7ec3)\u6a21\u578b-\u8bed\u6599\u5e93-baseline-\u5de5\u5177\u5305-\u6392\u884c\u699c\u3001PySS3\uff1a\u9762\u5411\u53ef\u89e3\u91caAI\u7684SS3\u6587\u672c\u5206\u7c7b\u5668\u673a\u5668\u53ef\u89c6\u5316\u5de5\u5177 \u3001\u4e2d\u6587NLP\u6570\u636e\u96c6\u5217\u8868\u3001COPE - \u683c\u5f8b\u8bd7\u7f16\u8f91\u7a0b\u5e8f\u3001doccano\uff1a\u57fa\u4e8e\u7f51\u9875\u7684\u5f00\u6e90\u534f\u540c\u591a\u8bed\u8a00\u6587\u672c\u6807\u6ce8\u5de5\u5177 \u3001PreNLP\uff1a\u81ea\u7136\u8bed\u8a00\u9884\u5904\u7406\u5e93\u3001\u7b80\u5355\u7684\u7b80\u5386\u89e3\u6790\u5668\uff0c\u7528\u6765\u4ece\u7b80\u5386\u4e2d\u63d0\u53d6\u5173\u952e\u4fe1\u606f\u3001\u7528\u4e8e\u4e2d\u6587\u95f2\u804a\u7684GPT2\u6a21\u578b\uff1aGPT2-chitchat\u3001\u57fa\u4e8e\u68c0\u7d22\u804a\u5929\u673a\u5668\u4eba\u591a\u8f6e\u54cd\u5e94\u9009\u62e9\u76f8\u5173\u8d44\u6e90\u5217\u8868(Leaderboards\u3001Datasets\u3001Papers)\u3001(Colab)\u62bd\u8c61\u6587\u672c\u6458\u8981\u5b9e\u73b0\u96c6\u9526(\u6559\u7a0b \u3001\u8bcd\u8bed\u62fc\u97f3\u6570\u636e\u3001\u9ad8\u6548\u6a21\u7cca\u641c\u7d22\u5de5\u5177\u3001NLP\u6570\u636e\u589e\u5e7f\u8d44\u6e90\u96c6\u3001\u5fae\u8f6f\u5bf9\u8bdd\u673a\u5668\u4eba\u6846\u67b6 \u3001 GitHub Typo Corpus\uff1a\u5927\u89c4\u6a21GitHub\u591a\u8bed\u8a00\u62fc\u5199\u9519\u8bef\/\u8bed\u6cd5\u9519\u8bef\u6570\u636e\u96c6\u3001TextCluster\uff1a\u77ed\u6587\u672c\u805a\u7c7b\u9884\u5904\u7406\u6a21\u5757 Short text cluster\u3001\u9762\u5411\u8bed\u97f3\u8bc6\u522b\u7684\u4e2d\u6587\u6587\u672c\u89c4\u8303\u5316\u3001BLINK\uff1a\u6700\u5148\u8fdb\u7684\u5b9e\u4f53\u94fe\u63a5\u5e93\u3001BertPunc\uff1a\u57fa\u4e8eBERT\u7684\u6700\u5148\u8fdb\u6807\u70b9\u4fee\u590d\u6a21\u578b\u3001Tokenizer\uff1a\u5feb\u901f\u3001\u53ef\u5b9a\u5236\u7684\u6587\u672c\u8bcd\u6761\u5316\u5e93\u3001\u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6\uff0c\u5305\u62ec\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6\u3001\u57fa\u51c6(\u9884\u8bad\u7ec3)\u6a21\u578b\u3001\u8bed\u6599\u5e93\u3001\u6392\u884c\u699c\u3001spaCy \u533b\u5b66\u6587\u672c\u6316\u6398\u4e0e\u4fe1\u606f\u63d0\u53d6 \u3001 NLP\u4efb\u52a1\u793a\u4f8b\u9879\u76ee\u4ee3\u7801\u96c6\u3001 python\u62fc\u5199\u68c0\u67e5\u5e93\u3001chatbot-list - \u884c\u4e1a\u5185\u5173\u4e8e\u667a\u80fd\u5ba2\u670d\u3001\u804a\u5929\u673a\u5668\u4eba\u7684\u5e94\u7528\u548c\u67b6\u6784\u3001\u7b97\u6cd5\u5206\u4eab\u548c\u4ecb\u7ecd\u3001\u8bed\u97f3\u8d28\u91cf\u8bc4\u4ef7\u6307\u6807(MOSNet, BSSEval, STOI, PESQ, SRMR)\u3001 \u7528138GB\u8bed\u6599\u8bad\u7ec3\u7684\u6cd5\u6587RoBERTa\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b \u3001BERT-NER-Pytorch\uff1a\u4e09\u79cd\u4e0d\u540c\u6a21\u5f0f\u7684BERT\u4e2d\u6587NER\u5b9e\u9a8c\u3001\u65e0\u9053\u8bcd\u5178 - \u6709\u9053\u8bcd\u5178\u7684\u547d\u4ee4\u884c\u7248\u672c\uff0c\u652f\u6301\u82f1\u6c49\u4e92\u67e5\u548c\u5728\u7ebf\u67e5\u8be2\u30012019\u5e74NLP\u4eae\u70b9\u56de\u987e\u3001 Chinese medical dialogue data \u4e2d\u6587\u533b\u7597\u5bf9\u8bdd\u6570\u636e\u96c6 \u3001\u6700\u597d\u7684\u6c49\u5b57\u6570\u5b57(\u4e2d\u6587\u6570\u5b57)-\u963f\u62c9\u4f2f\u6570\u5b57\u8f6c\u6362\u5de5\u5177\u3001 \u57fa\u4e8e\u767e\u79d1\u77e5\u8bc6\u5e93\u7684\u4e2d\u6587\u8bcd\u8bed\u591a\u8bcd\u4e49\/\u4e49\u9879\u83b7\u53d6\u4e0e\u7279\u5b9a\u53e5\u5b50\u8bcd\u8bed\u8bed\u4e49\u6d88\u6b67\u3001awesome-nlp-sentiment-analysis - \u60c5\u611f\u5206\u6790\u3001\u60c5\u7eea\u539f\u56e0\u8bc6\u522b\u3001\u8bc4\u4ef7\u5bf9\u8c61\u548c\u8bc4\u4ef7\u8bcd\u62bd\u53d6\u3001LineFlow\uff1a\u9762\u5411\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684NLP\u6570\u636e\u9ad8\u6548\u52a0\u8f7d\u5668\u3001\u4e2d\u6587\u533b\u5b66NLP\u516c\u5f00\u8d44\u6e90\u6574\u7406 \u3001MedQuAD\uff1a(\u82f1\u6587)\u533b\u5b66\u95ee\u7b54\u6570\u636e\u96c6\u3001\u5c06\u81ea\u7136\u8bed\u8a00\u6570\u5b57\u4e32\u89e3\u6790\u8f6c\u6362\u4e3a\u6574\u6570\u548c\u6d6e\u70b9\u6570\u3001Transfer Learning in Natural Language Processing (NLP) \u3001\u9762\u5411\u8bed\u97f3\u8bc6\u522b\u7684\u4e2d\u6587\/\u82f1\u6587\u53d1\u97f3\u8f9e\u5178\u3001Tokenizers\uff1a\u6ce8\u91cd\u6027\u80fd\u4e0e\u591a\u529f\u80fd\u6027\u7684\u6700\u5148\u8fdb\u5206\u8bcd\u5668\u3001CLUENER \u7ec6\u7c92\u5ea6\u547d\u540d\u5b9e\u4f53\u8bc6\u522b Fine Grained Named Entity Recognition\u3001 \u57fa\u4e8eBERT\u7684\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u4e2d\u6587\u8c23\u8a00\u6570\u636e\u5e93\u3001NLP\u6570\u636e\u96c6\/\u57fa\u51c6\u4efb\u52a1\u5927\u5217\u8868\u3001nlp\u76f8\u5173\u7684\u4e00\u4e9b\u8bba\u6587\u53ca\u4ee3\u7801, \u5305\u62ec\u4e3b\u9898\u6a21\u578b\u3001\u8bcd\u5411\u91cf(Word Embedding)\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b(NER)\u3001\u6587\u672c\u5206\u7c7b(Text Classificatin)\u3001\u6587\u672c\u751f\u6210(Text Generation)\u3001\u6587\u672c\u76f8\u4f3c\u6027(Text Similarity)\u8ba1\u7b97\u7b49\uff0c\u6d89\u53ca\u5230\u5404\u79cd\u4e0enlp\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u57fa\u4e8ekeras\u548ctensorflow \u3001Python\u6587\u672c\u6316\u6398\/NLP\u5b9e\u6218\u793a\u4f8b\u3001 Blackstone\uff1a\u9762\u5411\u975e\u7ed3\u6784\u5316\u6cd5\u5f8b\u6587\u672c\u7684spaCy pipeline\u548cNLP\u6a21\u578b\u901a\u8fc7\u540c\u4e49\u8bcd\u66ff\u6362\u5b9e\u73b0\u6587\u672c\u201c\u53d8\u8138\u201d \u3001\u4e2d\u6587 \u9884\u8bad\u7ec3 ELECTREA \u6a21\u578b: \u57fa\u4e8e\u5bf9\u6297\u5b66\u4e60 pretrain Chinese Model \u3001albert-chinese-ner - \u7528\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578bALBERT\u505a\u4e2d\u6587NER \u3001\u57fa\u4e8eGPT2\u7684\u7279\u5b9a\u4e3b\u9898\u6587\u672c\u751f\u6210\/\u6587\u672c\u589e\u5e7f\u3001\u5f00\u6e90\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u5408\u96c6\u3001\u591a\u8bed\u8a00\u53e5\u5411\u91cf\u5305\u3001\u7f16\u7801\u3001\u6807\u8bb0\u548c\u5b9e\u73b0\uff1a\u4e00\u79cd\u53ef\u63a7\u9ad8\u6548\u7684\u6587\u672c\u751f\u6210\u65b9\u6cd5\u3001 \u82f1\u6587\u810f\u8bdd\u5927\u5217\u8868 \u3001attnvis\uff1aGPT2\u3001BERT\u7b49transformer\u8bed\u8a00\u6a21\u578b\u6ce8\u610f\u529b\u4ea4\u4e92\u53ef\u89c6\u5316\u3001CoVoST\uff1aFacebook\u53d1\u5e03\u7684\u591a\u8bed\u79cd\u8bed\u97f3-\u6587\u672c\u7ffb\u8bd1\u8bed\u6599\u5e93\uff0c\u5305\u62ec11\u79cd\u8bed\u8a00(\u6cd5\u8bed\u3001\u5fb7\u8bed\u3001\u8377\u5170\u8bed\u3001\u4fc4\u8bed\u3001\u897f\u73ed\u7259\u8bed\u3001\u610f\u5927\u5229\u8bed\u3001\u571f\u8033\u5176\u8bed\u3001\u6ce2\u65af\u8bed\u3001\u745e\u5178\u8bed\u3001\u8499\u53e4\u8bed\u548c\u4e2d\u6587)\u7684\u8bed\u97f3\u3001\u6587\u5b57\u8f6c\u5f55\u53ca\u82f1\u6587\u8bd1\u6587\u3001Jiagu\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177 - \u4ee5BiLSTM\u7b49\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u63d0\u4f9b\u77e5\u8bc6\u56fe\u8c31\u5173\u7cfb\u62bd\u53d6 \u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u60c5\u611f\u5206\u6790 \u65b0\u8bcd\u53d1\u73b0 \u5173\u952e\u8bcd \u6587\u672c\u6458\u8981 \u6587\u672c\u805a\u7c7b\u7b49\u529f\u80fd\u3001\u7528unet\u5b9e\u73b0\u5bf9\u6587\u6863\u8868\u683c\u7684\u81ea\u52a8\u68c0\u6d4b\uff0c\u8868\u683c\u91cd\u5efa\u3001NLP\u4e8b\u4ef6\u63d0\u53d6\u6587\u732e\u8d44\u6e90\u5217\u8868 \u3001 \u91d1\u878d\u9886\u57df\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7814\u7a76\u8d44\u6e90\u5927\u5217\u8868\u3001CLUEDatasetSearch - \u4e2d\u82f1\u6587NLP\u6570\u636e\u96c6\uff1a\u641c\u7d22\u6240\u6709\u4e2d\u6587NLP\u6570\u636e\u96c6\uff0c\u9644\u5e38\u7528\u82f1\u6587NLP\u6570\u636e\u96c6 \u3001medical_NER - \u4e2d\u6587\u533b\u5b66\u77e5\u8bc6\u56fe\u8c31\u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u3001(\u54c8\u4f5b)\u8bb2\u56e0\u679c\u63a8\u7406\u7684\u514d\u8d39\u4e66\u3001\u77e5\u8bc6\u56fe\u8c31\u76f8\u5173\u5b66\u4e60\u8d44\u6599\/\u6570\u636e\u96c6\/\u5de5\u5177\u8d44\u6e90\u5927\u5217\u8868\u3001Forte\uff1a\u7075\u6d3b\u5f3a\u5927\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406pipeline\u5de5\u5177\u96c6 \u3001Python\u5b57\u7b26\u4e32\u76f8\u4f3c\u6027\u7b97\u6cd5\u5e93\u3001PyLaia\uff1a\u9762\u5411\u624b\u5199\u6587\u6863\u5206\u6790\u7684\u6df1\u5ea6\u5b66\u4e60\u5de5\u5177\u5305\u3001TextFooler\uff1a\u9488\u5bf9\u6587\u672c\u5206\u7c7b\/\u63a8\u7406\u7684\u5bf9\u6297\u6587\u672c\u751f\u6210\u6a21\u5757\u3001Haystack\uff1a\u7075\u6d3b\u3001\u5f3a\u5927\u7684\u53ef\u6269\u5c55\u95ee\u7b54(QA)\u6846\u67b6\u3001\u4e2d\u6587\u5173\u952e\u77ed\u8bed\u62bd\u53d6\u5de5\u5177\u3002\n\n1. textfilter: \u4e2d\u82f1\u6587\u654f\u611f\u8bcd\u8fc7\u6ee4 observerss\/textfilter\n >>> f = DFAFilter()\n >>> f.add(\"sexy\")\n >>> f.filter(\"hello sexy baby\")\n hello **** baby\n\n\u654f\u611f\u8bcd\u5305\u62ec\u653f\u6cbb\u3001\u810f\u8bdd\u7b49\u8bdd\u9898\u8bcd\u6c47\u3002\u5176\u539f\u7406\u4e3b\u8981\u662f\u57fa\u4e8e\u8bcd\u5178\u7684\u67e5\u627e\uff08\u9879\u76ee\u4e2d\u7684keyword\u6587\u4ef6\uff09\uff0c\u5185\u5bb9\u5f88\u52b2\u7206\u3002\u3002\u3002\n2. langid\uff1a97\u79cd\u8bed\u8a00\u68c0\u6d4b https:\/\/github.com\/saffsd\/langid.py\n\npip install langid\n\n>>> import langid\n>>> langid.classify(\"This is a test\")\n('en', -54.41310358047485)\n\n3. langdetect\uff1a\u53e6\u4e00\u4e2a\u8bed\u8a00\u68c0\u6d4bhttps:\/\/code.google.com\/archive\/p\/language-detection\/\n\npip install langdetect\n\nfrom langdetect import detect\nfrom langdetect import detect_langs\n\ns1 = \"\u672c\u7bc7\u535a\u5ba2\u4e3b\u8981\u4ecb\u7ecd\u4e24\u6b3e\u8bed\u8a00\u63a2\u6d4b\u5de5\u5177\uff0c\u7528\u4e8e\u533a\u5206\u6587\u672c\u5230\u5e95\u662f\u4ec0\u4e48\u8bed\u8a00\uff0c\"\ns2 = 'We are pleased to introduce today a new technology'\nprint(detect(s1))\nprint(detect(s2))\nprint(detect_langs(s3))    # detect_langs()\u8f93\u51fa\u63a2\u6d4b\u51fa\u7684\u6240\u6709\u8bed\u8a00\u7c7b\u578b\u53ca\u5176\u6240\u5360\u7684\u6bd4\u4f8b\n\n\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u6ce8\uff1a\u8bed\u8a00\u7c7b\u578b\u4e3b\u8981\u53c2\u8003\u7684\u662fISO 639-1\u8bed\u8a00\u7f16\u7801\u6807\u51c6\uff0c\u8be6\u89c1ISO 639-1\u767e\u5ea6\u767e\u79d1\n\u8ddf\u4e0a\u4e00\u4e2a\u8bed\u8a00\u68c0\u6d4b\u6bd4\u8f83\uff0c\u51c6\u786e\u7387\u4f4e\uff0c\u6548\u7387\u9ad8\u3002\n4. phone \u4e2d\u56fd\u624b\u673a\u5f52\u5c5e\u5730\u67e5\u8be2\uff1a ls0f\/phone\n\n\u5df2\u96c6\u6210\u5230 python package cocoNLP\u4e2d\uff0c\u6b22\u8fce\u8bd5\u7528\n\nfrom phone import Phone\np  = Phone()\np.find(18100065143)\n#return {'phone': '18100065143', 'province': '\u4e0a\u6d77', 'city': '\u4e0a\u6d77', 'zip_code': '200000', 'area_code': '021', 'phone_type': '\u7535\u4fe1'}\n\n\u652f\u6301\u53f7\u6bb5: 13*,15*,18*,14[5,7],17[0,6,7,8]\n\u8bb0\u5f55\u6761\u6570: 360569 (updated:2017\u5e744\u6708)\n\u4f5c\u8005\u63d0\u4f9b\u4e86\u6570\u636ephone.dat \u65b9\u4fbf\u975epython\u7528\u6237Load\u6570\u636e\u3002\n5. phone\u56fd\u9645\u624b\u673a\u3001\u7535\u8bdd\u5f52\u5c5e\u5730\u67e5\u8be2\uff1aAfterShip\/phone\n\nnpm install phone\n\nimport phone from 'phone';\nphone('+852 6569-8900'); \/\/ return ['+85265698900', 'HKG']\nphone('(817) 569-8900'); \/\/ return ['+18175698900, 'USA']\n\n6. ngender \u6839\u636e\u540d\u5b57\u5224\u65ad\u6027\u522b\uff1aobserverss\/ngender \u57fa\u4e8e\u6734\u7d20\u8d1d\u53f6\u65af\u8ba1\u7b97\u7684\u6982\u7387\n\npip install ngender\n\n>>> import ngender\n>>> ngender.guess('\u8d75\u672c\u5c71')\n('male', 0.9836229687547046)\n>>> ngender.guess('\u5b8b\u4e39\u4e39')\n('female', 0.9759486128949907)\n\n7. \u62bd\u53d6email\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u5df2\u96c6\u6210\u5230 python package cocoNLP\u4e2d\uff0c\u6b22\u8fce\u8bd5\u7528\n\nemail_pattern = '^[*#\\u4e00-\\u9fa5 a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$'\nemails = re.findall(email_pattern, text, flags=0)\n\n8. \u62bd\u53d6phone_number\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u5df2\u96c6\u6210\u5230 python package cocoNLP\u4e2d\uff0c\u6b22\u8fce\u8bd5\u7528\n\ncellphone_pattern = '^((13[0-9])|(14[0-9])|(15[0-9])|(17[0-9])|(18[0-9]))\\d{8}$'\nphoneNumbers = re.findall(cellphone_pattern, text, flags=0)\n\n9. \u62bd\u53d6\u8eab\u4efd\u8bc1\u53f7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\nIDCards_pattern = r'^([1-9]\\d{5}[12]\\d{3}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])\\d{3}[0-9xX])$'\nIDs = re.findall(IDCards_pattern, text, flags=0)\n\n10.  \u4eba\u540d\u8bed\u6599\u5e93\uff1a wainshine\/Chinese-Names-Corpus\n\n\u4eba\u540d\u62bd\u53d6\u529f\u80fd python package cocoNLP\uff0c\u6b22\u8fce\u8bd5\u7528\n\n\u4e2d\u6587\uff08\u73b0\u4ee3\u3001\u53e4\u4ee3\uff09\u540d\u5b57\u3001\u65e5\u6587\u540d\u5b57\u3001\u4e2d\u6587\u7684\u59d3\u548c\u540d\u3001\u79f0\u547c\uff08\u5927\u59e8\u5988\u3001\u5c0f\u59e8\u5988\u7b49\uff09\u3001\u82f1\u6587->\u4e2d\u6587\u540d\u5b57\uff08\u674e\u7ea6\u7ff0\uff09\u3001\u6210\u8bed\u8bcd\u5178\n\n\uff08\u53ef\u7528\u4e8e\u4e2d\u6587\u5206\u8bcd\u3001\u59d3\u540d\u8bc6\u522b\uff09\n11. \u4e2d\u6587\u7f29\u5199\u5e93\uff1agithub\n\u5168\u56fd\u4eba\u5927: \u5168\u56fd\/n \u4eba\u6c11\/n \u4ee3\u8868\u5927\u4f1a\/n\n\u4e2d\u56fd: \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\/ns\n\u5973\u7f51\u8d5b: \u5973\u5b50\/n \u7f51\u7403\/n \u6bd4\u8d5b\/vn\n\n12. \u6c49\u8bed\u62c6\u5b57\u8bcd\u5178\uff1akfcd\/chaizi\n\u6f22\u5b57\t\u62c6\u6cd5 (\u4e00)\t\u62c6\u6cd5 (\u4e8c)\t\u62c6\u6cd5 (\u4e09)\n\u62c6\t\u624b \u65a5\t\u624c \u65a5\t\u624d \u65a5\n\n13. \u8bcd\u6c47\u60c5\u611f\u503c\uff1arainarch\/SentiBridge\n\u5c71\u6cc9\u6c34\t\u5145\u6c9b\t0.400704566541\t0.370067395878\n\u89c6\u91ce\t        \u5bbd\u5e7f\t0.305762728932\t0.325320747491\n\u5927\u5ce1\u8c37\t\u60ca\u9669\t0.312137906517\t0.378594957281\n\n14. \u4e2d\u6587\u8bcd\u5e93\u3001\u505c\u7528\u8bcd\u3001\u654f\u611f\u8bcd dongxiexidian\/Chinese\n\u6b64package\u7684\u654f\u611f\u8bcd\u5e93\u5206\u7c7b\u66f4\u7ec6\uff1a\n\u53cd\u52a8\u8bcd\u5e93\uff0c \u654f\u611f\u8bcd\u5e93\u8868\u7edf\u8ba1\uff0c \u66b4\u6050\u8bcd\u5e93\uff0c \u6c11\u751f\u8bcd\u5e93\uff0c \u8272\u60c5\u8bcd\u5e93\n15. \u6c49\u5b57\u8f6c\u62fc\u97f3\uff1amozillazg\/python-pinyin\n\u6587\u672c\u7ea0\u9519\u4f1a\u7528\u5230\n16. \u4e2d\u6587\u7e41\u7b80\u4f53\u4e92\u8f6c\uff1askydark\/nstools\n17. \u82f1\u6587\u6a21\u62df\u4e2d\u6587\u53d1\u97f3\u5f15\u64ce funny chinese text to speech enginee\uff1atinyfool\/ChineseWithEnglish\nsay wo i ni\n#\u8bf4\uff1a\u6211\u7231\u4f60\n\n\u76f8\u5f53\u4e8e\u7528\u82f1\u6587\u97f3\u6807\uff0c\u6a21\u62df\u4e2d\u6587\u53d1\u97f3\u3002\n18. \u6c6a\u5cf0\u6b4c\u8bcd\u751f\u6210\u5668\uff1aphunterlau\/wangfeng-rnn\n\u6211\u5728\u8fd9\u91cc\u4e2d\u7684\u591c\u91cc\n\u5c31\u50cf\u4e00\u573a\u662f\u4e00\u79cd\u751f\u547d\u7684\u610f\u65ea\n\u5c31\u50cf\u6211\u7684\u751f\u6d3b\u53d8\u5f97\u5728\u6211\u4e00\u6837\n\u53ef\u6211\u4eec\u8fd9\u662f\u4e00\u4e2a\u77e5\u9053\n\u6211\u53ea\u662f\u4e00\u5929\u4f60\u4f1a\u600e\u5417\n\n19. \u540c\u4e49\u8bcd\u5e93\u3001\u53cd\u4e49\u8bcd\u5e93\u3001\u5426\u5b9a\u8bcd\u5e93\uff1aguotong1988\/chinese_dictionary\n20. \u65e0\u7a7a\u683c\u82f1\u6587\u4e32\u5206\u5272\u3001\u62bd\u53d6\u5355\u8bcd\uff1awordninja\n>>> import wordninja\n>>> wordninja.split('derekanderson')\n['derek', 'anderson']\n>>> wordninja.split('imateapot')\n['im', 'a', 'teapot']\n\n21. IP\u5730\u5740\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a\n(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\n\n22. \u817e\u8bafQQ\u53f7\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a\n[1-9]([0-9]{5,11})\n\n23. \u56fd\u5185\u56fa\u8bdd\u53f7\u7801\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a\n[0-9-()\uff08\uff09]{7,18}\n\n24. \u7528\u6237\u540d\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a\n[A-Za-z0-9_\\-\\u4e00-\\u9fa5]+\n\n25. \u6c7d\u8f66\u54c1\u724c\u3001\u6c7d\u8f66\u96f6\u4ef6\u76f8\u5173\u8bcd\u6c47\uff1a\n\u89c1\u672crepo\u7684data\u6587\u4ef6 [data](https:\/\/github.com\/fighting41love\/funNLP\/tree\/master\/data)\n\n26. \u65f6\u95f4\u62bd\u53d6\uff1a\n\n\u5df2\u96c6\u6210\u5230 python package cocoNLP\u4e2d\uff0c\u6b22\u8fce\u8bd5\u7528\n\n\u57282016\u5e746\u67087\u65e59:44\u6267\u884c\u6e2c\u8a66\uff0c\u7ed3\u679c\u5982\u4e0b\n\nHi\uff0call\u3002\u4e0b\u5468\u4e00\u4e0b\u5348\u4e09\u70b9\u5f00\u4f1a\n\n>> 2016-06-13 15:00:00-false\n\n\u5468\u4e00\u5f00\u4f1a\n\n>> 2016-06-13 00:00:00-true\n\n\u4e0b\u4e0b\u5468\u4e00\u5f00\u4f1a\n\n>> 2016-06-20 00:00:00-true\n\njava version\npython version\n27. \u5404\u79cd\u4e2d\u6587\u8bcd\u5411\u91cf\uff1a github repo\n\u4e2d\u6587\u8bcd\u5411\u91cf\u5927\u5168\n28. \u516c\u53f8\u540d\u5b57\u5927\u5168\uff1a github repo\n29. \u53e4\u8bd7\u8bcd\u5e93\uff1a github repo \u66f4\u5168\u7684\u53e4\u8bd7\u8bcd\u5e93\n30. THU\u6574\u7406\u7684\u8bcd\u5e93\uff1a link\n\u5df2\u6574\u7406\u5230\u672crepo\u7684data\u6587\u4ef6\u5939\u4e2d.\nIT\u8bcd\u5e93\u3001\u8d22\u7ecf\u8bcd\u5e93\u3001\u6210\u8bed\u8bcd\u5e93\u3001\u5730\u540d\u8bcd\u5e93\u3001\u5386\u53f2\u540d\u4eba\u8bcd\u5e93\u3001\u8bd7\u8bcd\u8bcd\u5e93\u3001\u533b\u5b66\u8bcd\u5e93\u3001\u996e\u98df\u8bcd\u5e93\u3001\u6cd5\u5f8b\u8bcd\u5e93\u3001\u6c7d\u8f66\u8bcd\u5e93\u3001\u52a8\u7269\u8bcd\u5e93\n\n31. \u4e2d\u6587\u804a\u5929\u8bed\u6599 link\n\u8be5\u5e93\u641c\u96c6\u4e86\u5305\u542b:\u8c46\u74e3\u591a\u8f6e, PTT\u516b\u5366\u8bed\u6599, \u9752\u4e91\u8bed\u6599, \u7535\u89c6\u5267\u5bf9\u767d\u8bed\u6599, \u8d34\u5427\u8bba\u575b\u56de\u5e16\u8bed\u6599,\u5fae\u535a\u8bed\u6599,\u5c0f\u9ec4\u9e21\u8bed\u6599\n\n32. \u4e2d\u6587\u8c23\u8a00\u6570\u636e: github\n\u8be5\u6570\u636e\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e00\u884c\u4e3a\u4e00\u6761json\u683c\u5f0f\u7684\u8c23\u8a00\u6570\u636e\uff0c\u5b57\u6bb5\u91ca\u4e49\u5982\u4e0b\uff1a\n\nrumorCode: \u8be5\u6761\u8c23\u8a00\u7684\u552f\u4e00\u7f16\u7801\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u7f16\u7801\u76f4\u63a5\u8bbf\u95ee\u8be5\u8c23\u8a00\u4e3e\u62a5\u9875\u9762\u3002\ntitle: \u8be5\u6761\u8c23\u8a00\u88ab\u4e3e\u62a5\u7684\u6807\u9898\u5185\u5bb9\ninformerName: \u4e3e\u62a5\u8005\u5fae\u535a\u540d\u79f0\ninformerUrl: \u4e3e\u62a5\u8005\u5fae\u535a\u94fe\u63a5\nrumormongerName: \u53d1\u5e03\u8c23\u8a00\u8005\u7684\u5fae\u535a\u540d\u79f0\nrumormongerUr: \u53d1\u5e03\u8c23\u8a00\u8005\u7684\u5fae\u535a\u94fe\u63a5\nrumorText: \u8c23\u8a00\u5185\u5bb9\nvisitTimes: \u8be5\u8c23\u8a00\u88ab\u8bbf\u95ee\u6b21\u6570\nresult: \u8be5\u8c23\u8a00\u5ba1\u67e5\u7ed3\u679c\npublishTime: \u8be5\u8c23\u8a00\u88ab\u4e3e\u62a5\u65f6\u95f4\n\n33. \u60c5\u611f\u6ce2\u52a8\u5206\u6790\uff1agithub\n\u8bcd\u5e93\u5df2\u6574\u7406\u5230\u672crepo\u7684data\u6587\u4ef6\u5939\u4e2d.\n\u672crepo\u9879\u76ee\u662f\u4e00\u4e2a\u901a\u8fc7\u4e0e\u4eba\u5bf9\u8bdd\u83b7\u5f97\u5176\u60c5\u611f\u503c\u6ce2\u52a8\u56fe\u8c31, \u5185\u7528\u8bcd\u5e93\u5728data\u6587\u4ef6\u5939\u4e2d.\n\n34. \u4e2d\u6587\u95ee\u7b54\u6570\u636e\u96c6\uff1a\u94fe\u63a5 \u63d0\u53d6\u7801: 2dva\n35. \u53e5\u5b50\u3001QA\u76f8\u4f3c\u5ea6\u5339\u914d:MatchZoo github\n\u6587\u672c\u76f8\u4f3c\u5ea6\u5339\u914d\u7b97\u6cd5\u7684\u96c6\u5408\uff0c\u5305\u542b\u591a\u4e2a\u6df1\u5ea6\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u503c\u5f97\u5c1d\u8bd5\u3002\n36. bert\u8d44\u6e90\uff1a\n\nbert\u8bba\u6587\u4e2d\u6587\u7ffb\u8bd1: link\n\n\n\nbert\u539f\u4f5c\u8005\u7684slides: link\n\u63d0\u53d6\u7801: iarj\n\n\n\u6587\u672c\u5206\u7c7b\u5b9e\u8df5: github\n\n\nbert tutorial\u6587\u672c\u5206\u7c7b\u6559\u7a0b: github\n\n\nbert pytorch\u5b9e\u73b0:  github\n\n\nbert\u7528\u4e8e\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b tensorflow\u7248\u672c: github\n\n\nBERT\u751f\u6210\u53e5\u5411\u91cf\uff0cBERT\u505a\u6587\u672c\u5206\u7c7b\u3001\u6587\u672c\u76f8\u4f3c\u5ea6\u8ba1\u7b97github\n\n\nbert \u57fa\u4e8e keras \u7684\u5c01\u88c5\u5206\u7c7b\u6807\u6ce8\u6846\u67b6 Kashgari\uff0c\u51e0\u5206\u949f\u5373\u53ef\u642d\u5efa\u4e00\u4e2a\u5206\u7c7b\u6216\u8005\u5e8f\u5217\u6807\u6ce8\u6a21\u578b: github\n\n\nbert\u3001ELMO\u7684\u56fe\u89e3\uff1a github\n\n\nBERT: Pre-trained models and downstream applications: github\n\n\n37. Texar - Toolkit for Text Generation and Beyond: github\n\n\u57fa\u4e8eTensorflow\u7684\u5f00\u6e90\u5de5\u5177\u5305\uff0c\u65e8\u5728\u652f\u6301\u5e7f\u6cdb\u7684\u673a\u5668\u5b66\u4e60\uff0c\u7279\u522b\u662f\u6587\u672c\u751f\u6210\u4efb\u52a1\uff0c\u5982\u673a\u5668\u7ffb\u8bd1\u3001\u5bf9\u8bdd\u3001\u6458\u8981\u3001\u5185\u5bb9\u5904\u7f6e\u3001\u8bed\u8a00\u5efa\u6a21\u7b49\n\n38. \u4e2d\u6587\u4e8b\u4ef6\u62bd\u53d6\uff1a github\n\n\u4e2d\u6587\u590d\u5408\u4e8b\u4ef6\u62bd\u53d6\uff0c\u5305\u62ec\u6761\u4ef6\u4e8b\u4ef6\u3001\u56e0\u679c\u4e8b\u4ef6\u3001\u987a\u627f\u4e8b\u4ef6\u3001\u53cd\u8f6c\u4e8b\u4ef6\u7b49\u4e8b\u4ef6\u62bd\u53d6\uff0c\u5e76\u5f62\u6210\u4e8b\u7406\u56fe\u8c31\u3002\n\n39. cocoNLP: github\n\u4eba\u540d\u3001\u5730\u5740\u3001\u90ae\u7bb1\u3001\u624b\u673a\u53f7\u3001\u624b\u673a\u5f52\u5c5e\u5730 \u7b49\u4fe1\u606f\u7684\u62bd\u53d6\uff0crake\u77ed\u8bed\u62bd\u53d6\u7b97\u6cd5\u3002\n\npip install cocoNLP\n\n>>> from cocoNLP.extractor import extractor\n\n>>> ex = extractor()\n\n>>> text = '\u6025\u5bfb\u7279\u6717\u666e\uff0c\u7537\u5b69\uff0c\u4e8e2018\u5e7411\u670827\u53f711\u65f6\u5728\u9655\u897f\u7701\u5b89\u5eb7\u5e02\u6c49\u6ee8\u533a\u8d70\u5931\u3002\u4e22\u5931\u53d1\u578b\u77ed\u53d1\uff0c...\u5982\u6709\u7ebf\u7d22\uff0c\u8bf7\u8fc5\u901f\u4e0e\u8b66\u65b9\u8054\u7cfb\uff1a18100065143\uff0c132-6156-2938\uff0cbaizhantang@sina.com.cn \u548cyangyangfuture at gmail dot com'\n\n# \u62bd\u53d6\u90ae\u7bb1\n>>> emails = ex.extract_email(text)\n>>> print(emails)\n\n['baizhantang@sina.com.cn', 'yangyangfuture@gmail.com.cn']\n# \u62bd\u53d6\u624b\u673a\u53f7\n>>> cellphones = ex.extract_cellphone(text,nation='CHN')\n>>> print(cellphones)\n\n['18100065143', '13261562938']\n# \u62bd\u53d6\u624b\u673a\u5f52\u5c5e\u5730\u3001\u8fd0\u8425\u5546\n>>> cell_locs = [ex.extract_cellphone_location(cell,'CHN') for cell in cellphones]\n>>> print(cell_locs)\n\ncellphone_location [{'phone': '18100065143', 'province': '\u4e0a\u6d77', 'city': '\u4e0a\u6d77', 'zip_code': '200000', 'area_code': '021', 'phone_type': '\u7535\u4fe1'}]\n# \u62bd\u53d6\u5730\u5740\u4fe1\u606f\n>>> locations = ex.extract_locations(text)\n>>> print(locations)\n['\u9655\u897f\u7701\u5b89\u5eb7\u5e02\u6c49\u6ee8\u533a', '\u5b89\u5eb7\u5e02\u6c49\u6ee8\u533a', '\u6c49\u6ee8\u533a']\n# \u62bd\u53d6\u65f6\u95f4\u70b9\n>>> times = ex.extract_time(text)\n>>> print(times)\ntime {\"type\": \"timestamp\", \"timestamp\": \"2018-11-27 11:00:00\"}\n# \u62bd\u53d6\u4eba\u540d\n>>> name = ex.extract_name(text)\n>>> print(name)\n\u7279\u6717\u666e\n\n\n40. \u56fd\u5185\u7535\u8bdd\u53f7\u7801\u6b63\u5219\u5339\u914d\uff08\u4e09\u5927\u8fd0\u8425\u5546+\u865a\u62df\u7b49\uff09: github\n41. \u6e05\u534e\u5927\u5b66XLORE:\u4e2d\u82f1\u6587\u8de8\u8bed\u8a00\u767e\u79d1\u77e5\u8bc6\u56fe\u8c31: link\n\u4e0a\u8ff0\u94fe\u63a5\u4e2d\u5305\u542b\u4e86\u6240\u6709\u5b9e\u4f53\u53ca\u5173\u7cfb\u7684TTL\u6587\u4ef6\uff0c\u66f4\u591a\u6570\u636e\u5c06\u5728\u8fd1\u671f\u53d1\u5e03\u3002\n\u6982\u5ff5\uff0c\u5b9e\u4f8b\uff0c\u5c5e\u6027\u548c\u4e0a\u4e0b\u4f4d\u5173\u7cfb\u6570\u76ee\n\n\n\n\n\u767e\u5ea6\n\u4e2d\u6587\u7ef4\u57fa\n\u82f1\u6587\u7ef4\u57fa\n\u603b\u6570\n\n\n\n\n\u6982\u5ff5\u6570\u91cf\n32,009\n150,241\n326,518\n508,768\n\n\n\u5b9e\u4f8b\u6570\u91cf\n1,629,591\n640,622\n1,235,178\n3,505,391\n\n\n\u5c5e\u6027\u6570\u91cf\n157,370\n45,190\n26,723\n229.283\n\n\nInstanceOf\n7,584,931\n1,449,925\n3,032,515\n12,067,371\n\n\nSubClassOf\n2,784\n191,577\n555,538\n749,899\n\n\n\n\u8de8\u8bed\u8a00\u8fde\u63a5\uff08\u6982\u5ff5\/\u5b9e\u4f8b\uff09\n\n\n\n\n\u767e\u5ea6\n\u4e2d\u6587\u7ef4\u57fa\n\u82f1\u6587\u7ef4\u57fa\n\n\n\n\n\u767e\u5ea6\n-\n10,216\/336,890\n4,846\/303,108\n\n\n\u4e2d\u6587\u7ef4\u57fa\n10,216\/336,890\n-\n28,921\/454,579\n\n\n\u82f1\u6587\u7ef4\u57fa\n4,846\/303,108\n28,921\/454,579\n-\n\n\n\n42. \u6e05\u534e\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u6280\u672f\u7cfb\u5217\u62a5\u544a\uff1a link\n\u6bcf\u5e74\u4f1a\u51faAI\u9886\u57df\u76f8\u5173\u7684\u62a5\u544a\uff0c\u5185\u5bb9\u5305\u542b\n\n\u81ea\u7136\u8bed\u8a00\u5904\u7406 link\n\u77e5\u8bc6\u56fe\u8c31 link\n\u6570\u636e\u6316\u6398 link\n\u81ea\u52a8\u9a7e\u9a76 link\n\u673a\u5668\u7ffb\u8bd1 link\n\u533a\u5757\u94fe link\n\u673a\u5668\u4eba link\n\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66 link\n3D\u6253\u5370 link\n\u4eba\u8138\u8bc6\u522b link\n\u4eba\u5de5\u667a\u80fd\u82af\u7247 link\n\u7b49\u7b49\n\n43.\u81ea\u7136\u8bed\u8a00\u751f\u6210\u65b9\u9762:\n\nEhud Reiter\u6559\u6388\u7684\u535a\u5ba2  \u5317\u5927\u4e07\u5c0f\u519b\u6559\u6388\u5f3a\u529b\u63a8\u8350\uff0c\u8be5\u535a\u5ba2\u5bf9NLG\u6280\u672f\u3001\u8bc4\u4ef7\u4e0e\u5e94\u7528\u8fdb\u884c\u4e86\u6df1\u5165\u7684\u63a2\u8ba8\u4e0e\u53cd\u601d\u3002\n\u6587\u672c\u751f\u6210\u76f8\u5173\u8d44\u6e90\u5927\u5217\u8868\n\u81ea\u7136\u8bed\u8a00\u751f\u6210\uff1a\u8ba9\u673a\u5668\u638c\u63e1\u81ea\u52a8\u521b\u4f5c\u7684\u672c\u9886 - \u5f00\u653e\u57df\u5bf9\u8bdd\u751f\u6210\u53ca\u5728\u5fae\u8f6f\u5c0f\u51b0\u4e2d\u7684\u5b9e\u8df5\n\u6587\u672c\u751f\u6210\u63a7\u5236\n\u81ea\u7136\u8bed\u8a00\u751f\u6210\u76f8\u5173\u8d44\u6e90\u5927\u5217\u8868\n\u7528BLEURT\u8bc4\u4ef7\u81ea\u7136\u8bed\u8a00\u751f\u6210\n\n44.:\njieba\u548chanlp\u5c31\u4e0d\u5fc5\u4ecb\u7ecd\u4e86\u5427\u3002\n45.NLP\u592a\u96be\u4e86\u7cfb\u5217: github\n\n\u6765\u5230\u6768\u8fc7\u66fe\u7ecf\u751f\u6d3b\u8fc7\u7684\u5730\u65b9\uff0c\u5c0f\u9f99\u5973\u52a8\u60c5\u5730\u8bf4\uff1a\u201c\u6211\u4e5f\u60f3\u8fc7\u8fc7\u8fc7\u513f\u8fc7\u8fc7\u7684\u751f\u6d3b\u3002\u201d \u200b\u200b\u200b\n\u6765\u5230\u513f\u5b50\u7b49\u6821\u8f66\u7684\u5730\u65b9\uff0c\u9093\u8d85\u5bf9\u5b59\u4fea\u8bf4\uff1a\u201c\u6211\u4e5f\u60f3\u7b49\u7b49\u7b49\u7b49\u7b49\u8fc7\u7684\u90a3\u8f86\u8f66\u3002\u201d\n\u8d75\u654f\u8bf4\uff1a\u6211\u4e5f\u60f3\u63a7\u5fcc\u5fcc\u5df1\u4e0d\u60f3\u65e0\u5fcc\u3002\n\u4f60\u4e5f\u60f3\u72af\u8303\u8303\u8303\u73ae\u742a\u72af\u8fc7\u7684\u9519\u5417\n\u5bf9\u53d9\u6253\u51fb\u662f\u4e00\u6b21\u6027\u884c\u4e3a\uff1f\n\n46.\u81ea\u52a8\u5bf9\u8054\u6570\u636e\u53ca\u673a\u5668\u4eba:\n70\u4e07\u5bf9\u8054\u6570\u636e link\n\u4ee3\u7801 link\n\n\n\n\u4e0a\u8054\n\u4e0b\u8054\n\n\n\n\n\u6bb7\u52e4\u6015\u8d1f\u4e09\u6625\u610f\n\u6f47\u6d12\u96be\u4e66\u4e00\u5b57\u6101\n\n\n\u5982\u6b64\u6e05\u79cb\u4f55\u541d\u9152\n\u8fd9\u822c\u660e\u6708\u4e0d\u987b\u94b1\n\n\n\n47.\u7528\u6237\u540d\u9ed1\u540d\u5355\u5217\u8868\uff1a github\n\u5305\u542b\u4e86\u7528\u6237\u540d\u7981\u7528\u5217\u8868\uff0c\u6bd4\u5982: link\nadministrator\nadministration\nautoconfig\nautodiscover\nbroadcasthost\ndomain\neditor\nguest\nhost\nhostmaster\ninfo\nkeybase.txt\nlocaldomain\nlocalhost\nmaster\nmail\nmail0\nmail1\n\n48.\u7f6a\u540d\u6cd5\u52a1\u540d\u8bcd\u53ca\u5206\u7c7b\u6a21\u578b: github\n\u5305\u542b856\u9879\u7f6a\u540d\u77e5\u8bc6\u56fe\u8c31, \u57fa\u4e8e280\u4e07\u7f6a\u540d\u8bad\u7ec3\u5e93\u7684\u7f6a\u540d\u9884\u6d4b,\u57fa\u4e8e20W\u6cd5\u52a1\u95ee\u7b54\u5bf9\u768413\u7c7b\u95ee\u9898\u5206\u7c7b\u4e0e\u6cd5\u5f8b\u8d44\u8baf\u95ee\u7b54\u529f\u80fd\n\n49.\u5fae\u4fe1\u516c\u4f17\u53f7\u8bed\u6599: github\n3G\u8bed\u6599\uff0c\u5305\u542b\u90e8\u5206\u7f51\u7edc\u6293\u53d6\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u7684\u6587\u7ae0\uff0c\u5df2\u7ecf\u53bb\u9664HTML\uff0c\u53ea\u5305\u542b\u4e86\u7eaf\u6587\u672c\u3002\u6bcf\u884c\u4e00\u7bc7\uff0c\u662fJSON\u683c\u5f0f\uff0cname\u662f\u5fae\u4fe1\u516c\u4f17\u53f7\u540d\u5b57\uff0caccount\u662f\u5fae\u4fe1\u516c\u4f17\u53f7ID\uff0ctitle\u662f\u9898\u76ee\uff0ccontent\u662f\u6b63\u6587\n50.cs224n\u6df1\u5ea6\u5b66\u4e60\u81ea\u7136\u8bed\u8a00\u5904\u7406\u8bfe\u7a0b\uff1alink\n\n\u8bfe\u7a0b\u4e2d\u6a21\u578b\u7684pytorch\u5b9e\u73b0 link\n\u9762\u5411\u6df1\u5ea6\u5b66\u4e60\u7814\u7a76\u4eba\u5458\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5b9e\u4f8b\u6559\u7a0b link\n\n51.\u4e2d\u6587\u624b\u5199\u6c49\u5b57\u8bc6\u522b\uff1agithub\n52.\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406 \u8bed\u6599\/\u6570\u636e\u96c6\uff1agithub\n\u7ade\u54c1\uff1aTHUOCL\uff08THU Open Chinese Lexicon\uff09\u4e2d\u6587\u8bcd\u5e93\n53.\u53d8\u91cf\u547d\u540d\u795e\u5668\uff1agithub link\n54.\u5206\u8bcd\u8bed\u6599\u5e93+\u4ee3\u7801\uff1a\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\n\n\u63d0\u53d6\u7801: pea6\nkeras\u5b9e\u73b0\u7684\u57fa\u4e8eBi-LSTM + CRF\u7684\u4e2d\u6587\u5206\u8bcd+\u8bcd\u6027\u6807\u6ce8\n\u57fa\u4e8eUniversal Transformer + CRF \u7684\u4e2d\u6587\u5206\u8bcd\u548c\u8bcd\u6027\u6807\u6ce8\n\u5feb\u901f\u795e\u7ecf\u7f51\u7edc\u5206\u8bcd\u5305 java version\n\n55. NLP\u65b0\u4e66\u63a8\u8350\u300aNatural Language Processing\u300bby Jacob Eisenstein\uff1a link\n56. \u4efb\u52a1\u578b\u5bf9\u8bdd\u82f1\u6587\u6570\u636e\u96c6\uff1a github\n\u3010\u6700\u5168\u4efb\u52a1\u578b\u5bf9\u8bdd\u6570\u636e\u96c6\u3011\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e00\u4efd\u4efb\u52a1\u578b\u5bf9\u8bdd\u6570\u636e\u96c6\u5927\u5168\uff0c\u8fd9\u4efd\u6570\u636e\u96c6\u5927\u5168\u6db5\u76d6\u4e86\u5230\u76ee\u524d\u5728\u4efb\u52a1\u578b\u5bf9\u8bdd\u9886\u57df\u7684\u6240\u6709\u5e38\u7528\u6570\u636e\u96c6\u7684\u4e3b\u8981\u4fe1\u606f\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u5e2e\u52a9\u7814\u7a76\u8005\u66f4\u597d\u7684\u628a\u63e1\u9886\u57df\u8fdb\u5c55\u7684\u8109\u7edc\uff0c\u6211\u4eec\u4ee5Leaderboard\u7684\u5f62\u5f0f\u7ed9\u51fa\u4e86\u51e0\u4e2a\u6570\u636e\u96c6\u4e0a\u7684State-of-the-art\u5b9e\u9a8c\u7ed3\u679c\u3002\n57. ASR \u8bed\u97f3\u6570\u636e\u96c6 + \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\uff1a github\n\n\nData Sets \u6570\u636e\u96c6\n\n\n\u6e05\u534e\u5927\u5b66THCHS30\u4e2d\u6587\u8bed\u97f3\u6570\u636e\u96c6\ndata_thchs30.tgz\nOpenSLR\u56fd\u5185\u955c\u50cf\nOpenSLR\u56fd\u5916\u955c\u50cf\ntest-noise.tgz\nOpenSLR\u56fd\u5185\u955c\u50cf\nOpenSLR\u56fd\u5916\u955c\u50cf\nresource.tgz\nOpenSLR\u56fd\u5185\u955c\u50cf\nOpenSLR\u56fd\u5916\u955c\u50cf\n\n\nFree ST Chinese Mandarin Corpus\nST-CMDS-20170001_1-OS.tar.gz\nOpenSLR\u56fd\u5185\u955c\u50cf\nOpenSLR\u56fd\u5916\u955c\u50cf\n\n\nAIShell-1 \u5f00\u6e90\u7248\u6570\u636e\u96c6\ndata_aishell.tgz\nOpenSLR\u56fd\u5185\u955c\u50cf\nOpenSLR\u56fd\u5916\u955c\u50cf\n\n\n\u6ce8\uff1a\u6570\u636e\u96c6\u89e3\u538b\u65b9\u6cd5\n$ tar xzf data_aishell.tgz\n$ cd data_aishell\/wav\n$ for tar in *.tar.gz;  do tar xvf $tar; done\n\n\n\nPrimewords Chinese Corpus Set 1\nprimewords_md_2018_set1.tar.gz\nOpenSLR\u56fd\u5185\u955c\u50cf\nOpenSLR\u56fd\u5916\u955c\u50cf\n\n\n\n\n58. \u7b11\u58f0\u68c0\u6d4b\u5668\uff1a github\n59. Microsoft\u591a\u8bed\u8a00\u6570\u5b57\/\u5355\u4f4d\/\u5982\u65e5\u671f\u65f6\u95f4\u8bc6\u522b\u5305\uff1a [github](https:\/\/github.com\/Microsoft\/Recognizers-Text\n60. chinese-xinhua \u4e2d\u534e\u65b0\u534e\u5b57\u5178\u6570\u636e\u5e93\u53caapi\uff0c\u5305\u62ec\u5e38\u7528\u6b47\u540e\u8bed\u3001\u6210\u8bed\u3001\u8bcd\u8bed\u548c\u6c49\u5b57 github\n61. \u6587\u6863\u56fe\u8c31\u81ea\u52a8\u751f\u6210 github\n\nTextGrapher - Text Content Grapher based on keyinfo extraction by NLP method\u3002\u8f93\u5165\u4e00\u7bc7\u6587\u6863\uff0c\u5c06\u6587\u6863\u8fdb\u884c\u5173\u952e\u4fe1\u606f\u63d0\u53d6\uff0c\u8fdb\u884c\u7ed3\u6784\u5316\uff0c\u5e76\u6700\u7ec8\u7ec4\u7ec7\u6210\u56fe\u8c31\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u5f62\u6210\u5bf9\u6587\u7ae0\u8bed\u4e49\u4fe1\u606f\u7684\u56fe\u8c31\u5316\u5c55\u793a\n\n62. SpaCy \u4e2d\u6587\u6a21\u578b github\n\n\u5305\u542bParser, NER, \u8bed\u6cd5\u6811\u7b49\u529f\u80fd\u3002\u6709\u4e00\u4e9b\u82f1\u6587package\u4f7f\u7528spacy\u7684\u82f1\u6587\u6a21\u578b\u7684\uff0c\u5982\u679c\u8981\u9002\u914d\u4e2d\u6587\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528spacy\u4e2d\u6587\u6a21\u578b\u3002\n\n63. Common Voice\u8bed\u97f3\u8bc6\u522b\u6570\u636e\u96c6\u65b0\u7248 link\n\n\u5305\u62ec\u6765\u81ea42,000\u540d\u8d21\u732e\u8005\u8d85\u8fc71,400\u5c0f\u65f6\u7684\u8bed\u97f3\u6837\u672c\uff0c\u6db5github\n\n64. \u795e\u7ecf\u7f51\u7edc\u5173\u7cfb\u62bd\u53d6 pytorch github\n\n\u6682\u4e0d\u652f\u6301\u4e2d\u6587\n\n65. \u57fa\u4e8ebert\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b pytorch github\n\n\u6682\u4e0d\u652f\u6301\u4e2d\u6587\n\n66. \u5173\u952e\u8bcd(Keyphrase)\u62bd\u53d6\u5305 pke github\npke: an open source python-based keyphrase extraction toolkit\n\n\u6682\u4e0d\u652f\u6301\u4e2d\u6587\uff0c\u6211\u4e8e\u8fd1\u671f\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u5176\u9002\u914d\u4e2d\u6587\u3002\n\u8bf7\u5173\u6ce8\u6211\u7684github\u52a8\u6001\uff0c\u8c22\u8c22\uff01\n\n67. \u57fa\u4e8e\u533b\u7597\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u7684\u95ee\u7b54\u7cfb\u7edf github\n\n\u8be5repo\u53c2\u8003\u4e86github\n\n68. \u57fa\u4e8e\u4f9d\u5b58\u53e5\u6cd5\u4e0e\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7684\u4e8b\u4ef6\u4e09\u5143\u7ec4\u62bd\u53d6 github\n69. \u4f9d\u5b58\u53e5\u6cd5\u5206\u67904\u4e07\u53e5\u9ad8\u8d28\u91cf\u6807\u6ce8\u6570\u636e by \u82cf\u5dde\u5927\u5b66\u6c49\u8bed\u4f9d\u5b58\u6811\u5e93\uff08SUCDT\uff09\nHomepage\n\u6570\u636e\u4e0b\u8f7d\u8be6\u89c1homepage\u5e95\u90e8\uff0c\u9700\u8981\u7b7e\u7f72\u534f\u8bae\uff0c\u9700\u8981\u90ae\u4ef6\u63a5\u6536\u89e3\u538b\u5bc6\u7801\u3002\n70. cnocr\uff1a\u7528\u6765\u505a\u4e2d\u6587OCR\u7684Python3\u5305\uff0c\u81ea\u5e26\u4e86\u8bad\u7ec3\u597d\u7684\u8bc6\u522b\u6a21\u578b github\n71. \u4e2d\u6587\u4eba\u7269\u5173\u7cfb\u77e5\u8bc6\u56fe\u8c31\u9879\u76ee github\n\n\u4e2d\u6587\u4eba\u7269\u5173\u7cfb\u56fe\u8c31\u6784\u5efa\n\u57fa\u4e8e\u77e5\u8bc6\u5e93\u7684\u6570\u636e\u56de\u6807\n\u57fa\u4e8e\u8fdc\u7a0b\u76d1\u7763\u4e0ebootstrapping\u65b9\u6cd5\u7684\u4eba\u7269\u5173\u7cfb\u62bd\u53d6\n\u57fa\u4e8e\u77e5\u8bc6\u56fe\u8c31\u7684\u77e5\u8bc6\u95ee\u7b54\u7b49\u5e94\u7528\n\n72. \u4e2d\u6587nlp\u7ade\u8d5b\u9879\u76ee\u53ca\u4ee3\u7801\u6c47\u603b github\n\n\u6587\u672c\u751f\u6210\u3001\u6587\u672c\u6458\u8981\uff1aByte Cup 2018 \u56fd\u9645\u673a\u5668\u5b66\u4e60\u7ade\u8d5b\n\u77e5\u8bc6\u56fe\u8c31\uff1a\u745e\u91d1\u533b\u9662MMC\u4eba\u5de5\u667a\u80fd\u8f85\u52a9\u6784\u5efa\u77e5\u8bc6\u56fe\u8c31\u5927\u8d5b\n\u89c6\u9891\u8bc6\u522b \u95ee\u7b54\uff1a2018\u4e4b\u6c5f\u676f\u5168\u7403\u4eba\u5de5\u667a\u80fd\u5927\u8d5b\uff1a\u89c6\u9891\u8bc6\u522b&\u95ee\u7b54\n\n73. \u4e2d\u6587\u5b57\u7b26\u6570\u636e github\n\n\u7b80\/\u7e41\u4f53\u6c49\u5b57\u7b14\u987a\n\u77e2\u91cf\u7b14\u753b\n\n74. speech-aligner: \u4ece\u201c\u4eba\u58f0\u8bed\u97f3\u201d\u53ca\u5176\u201c\u8bed\u8a00\u6587\u672c\u201d\uff0c\u4ea7\u751f\u97f3\u7d20\u7ea7\u522b\u65f6\u95f4\u5bf9\u9f50\u6807\u6ce8\u7684\u5de5\u5177 github\n75. AmpliGraph: \u77e5\u8bc6\u56fe\u8c31\u8868\u793a\u5b66\u4e60(Python)\u5e93\uff1a\u77e5\u8bc6\u56fe\u8c31\u6982\u5ff5\u94fe\u63a5\u9884\u6d4b github\n\n\u57c3\u68ee\u54f2\u51fa\u54c1\uff0c\u76ee\u524d\u5c1a\u4e0d\u652f\u6301\u4e2d\u6587\n\n76. Scattertext \u6587\u672c\u53ef\u89c6\u5316(python) github\n\n\u5f88\u597d\u7528\u7684\u5de5\u5177\u5305\uff0c\u7b80\u5355\u4fee\u6539\u540e\u53ef\u652f\u6301\u4e2d\u6587\n\u80fd\u5426\u5206\u6790\u51fa\u67d0\u4e2a\u7c7b\u522b\u7684\u6587\u672c\u4e0e\u5176\u4ed6\u6587\u672c\u7684\u7528\u8bcd\u5dee\u5f02\n\n77. \u8bed\u8a00\/\u77e5\u8bc6\u8868\u793a\u5de5\u5177\uff1aBERT & ERNIE github\n\n\u767e\u5ea6\u51fa\u54c1\uff0cERNIE\u4e5f\u53f7\u79f0\u5728\u591a\u9879nlp\u4efb\u52a1\u4e2d\u51fb\u8d25\u4e86bert\n\n78. \u4e2d\u6587\u5bf9\u6bd4\u82f1\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406NLP\u7684\u533a\u522b\u7efc\u8ff0 link\n79. Synonyms\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305 github\n\nSynonyms \u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7684\u5f88\u591a\u4efb\u52a1\uff1a\u6587\u672c\u5bf9\u9f50\uff0c\u63a8\u8350\u7b97\u6cd5\uff0c\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff0c\u8bed\u4e49\u504f\u79fb\uff0c\u5173\u952e\u5b57\u63d0\u53d6\uff0c\u6982\u5ff5\u63d0\u53d6\uff0c\u81ea\u52a8\u6458\u8981\uff0c\u641c\u7d22\u5f15\u64ce\u7b49\n\n80. HarvestText\u9886\u57df\u81ea\u9002\u5e94\u6587\u672c\u6316\u6398\u5de5\u5177\uff08\u65b0\u8bcd\u53d1\u73b0-\u60c5\u611f\u5206\u6790-\u5b9e\u4f53\u94fe\u63a5\u7b49\uff09 github\n81. word2word\uff1a(Python)\u65b9\u4fbf\u6613\u7528\u7684\u591a\u8bed\u8a00\u8bcd-\u8bcd\u5bf9\u96c6\uff1a62\u79cd\u8bed\u8a00\/3,564\u4e2a\u591a\u8bed\u8a00\u5bf9 github\n82. \u8bed\u97f3\u8bc6\u522b\u8bed\u6599\u751f\u6210\u5de5\u5177\uff1a\u4ece\u5177\u6709\u97f3\u9891\/\u5b57\u5e55\u7684\u5728\u7ebf\u89c6\u9891\u521b\u5efa\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b(ASR)\u8bed\u6599\u5e93 github\n83. ASR\u8bed\u97f3\u5927\u8f9e\u5178\/\u8bcd\u5178\uff1a github\n84. \u6784\u5efa\u533b\u7597\u5b9e\u4f53\u8bc6\u522b\u7684\u6a21\u578b\uff0c\u5305\u542b\u8bcd\u5178\u548c\u8bed\u6599\u6807\u6ce8\uff0c\u57fa\u4e8epython: github\n85. \u5355\u6587\u6863\u975e\u76d1\u7763\u7684\u5173\u952e\u8bcd\u62bd\u53d6\uff1a github\n86. Kashgari\u4e2d\u4f7f\u7528gpt-2\u8bed\u8a00\u6a21\u578b github\n87.  \u5f00\u6e90\u7684\u91d1\u878d\u6295\u8d44\u6570\u636e\u63d0\u53d6\u5de5\u5177 github\n88. \u6587\u672c\u81ea\u52a8\u6458\u8981\u5e93TextTeaser: \u4ec5\u652f\u6301\u82f1\u6587 github\n89. \u4eba\u6c11\u65e5\u62a5\u8bed\u6599\u5904\u7406\u5de5\u5177\u96c6 github\n90. \u4e00\u4e9b\u5173\u4e8e\u81ea\u7136\u8bed\u8a00\u7684\u57fa\u672c\u6a21\u578b github\n91. \u57fa\u4e8e14W\u6b4c\u66f2\u77e5\u8bc6\u5e93\u7684\u95ee\u7b54\u5c1d\u8bd5\uff0c\u529f\u80fd\u5305\u62ec\u6b4c\u8bcd\u63a5\u9f99\uff0c\u5df2\u77e5\u6b4c\u8bcd\u627e\u6b4c\u66f2\u4ee5\u53ca\u6b4c\u66f2\u6b4c\u624b\u6b4c\u8bcd\u4e09\u89d2\u5173\u7cfb\u7684\u95ee\u7b54 github\n92. \u57fa\u4e8eSiamese bilstm\u6a21\u578b\u7684\u76f8\u4f3c\u53e5\u5b50\u5224\u5b9a\u6a21\u578b,\u63d0\u4f9b\u8bad\u7ec3\u6570\u636e\u96c6\u548c\u6d4b\u8bd5\u6570\u636e\u96c6 github\n\n\u63d0\u4f9b\u4e8610\u4e07\u4e2a\u8bad\u7ec3\u6837\u672c\n\n93. \u7528Transformer\u7f16\u89e3\u7801\u6a21\u578b\u5b9e\u73b0\u7684\u6839\u636eHacker News\u6587\u7ae0\u6807\u9898\u81ea\u52a8\u751f\u6210\u8bc4\u8bba github\n94. \u7528BERT\u8fdb\u884c\u5e8f\u5217\u6807\u8bb0\u548c\u6587\u672c\u5206\u7c7b\u7684\u6a21\u677f\u4ee3\u7801 github\n95. LitBank\uff1aNLP\u6570\u636e\u96c6\u2014\u2014\u652f\u6301\u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u8ba1\u7b97\u4eba\u6587\u5b66\u79d1\u4efb\u52a1\u7684100\u90e8\u5e26\u6807\u8bb0\u82f1\u6587\u5c0f\u8bf4\u8bed\u6599 github\n96. \u767e\u5ea6\u5f00\u6e90\u7684\u57fa\u51c6\u4fe1\u606f\u62bd\u53d6\u7cfb\u7edf github\n97. \u865a\u5047\u65b0\u95fb\u6570\u636e\u96c6 fake news corpus github\n98. Facebook: LAMA\u8bed\u8a00\u6a21\u578b\u5206\u6790\uff0c\u63d0\u4f9bTransformer-XL\/BERT\/ELMo\/GPT\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u7684\u7edf\u4e00\u8bbf\u95ee\u63a5\u53e3 github\n\n\u7528\u4e8e\u5206\u6790\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u4e2d\u5305\u542b\u7684\u4e8b\u5b9e\u548c\u5e38\u8bc6\u77e5\u8bc6\u7684\u63a2\u9488\u3002\n\n99. CommonsenseQA\uff1a\u9762\u5411\u5e38\u8bc6\u7684\u82f1\u6587QA\u6311\u6218 link\n100. \u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u8d44\u6599\u3001\u6570\u636e\u53ca\u5de5\u5177 github\n101. \u5404\u5927\u516c\u53f8\u5185\u90e8\u91cc\u5927\u725b\u5206\u4eab\u7684\u6280\u672f\u6587\u6863 PDF \u6216\u8005 PPT github\n102. \u81ea\u7136\u8bed\u8a00\u751f\u6210SQL\u8bed\u53e5\uff08\u82f1\u6587\uff09 github\n103. \u4e2d\u6587NLP\u6570\u636e\u589e\u5f3a\uff08EDA\uff09\u5de5\u5177 github\n\n \u82f1\u6587NLP\u6570\u636e\u589e\u5f3a\u5de5\u5177 github\n \u4e00\u952e\u4e2d\u6587\u6570\u636e\u589e\u5f3a\u5de5\u5177 github\n\n104. \u57fa\u4e8e\u533b\u836f\u77e5\u8bc6\u56fe\u8c31\u7684\u667a\u80fd\u95ee\u7b54\u7cfb\u7edf github\n105. \u4eac\u4e1c\u5546\u54c1\u77e5\u8bc6\u56fe\u8c31 github\n\n\u57fa\u4e8e\u4eac\u4e1c\u7f51\u7ad9\u76841300\u79cd\u5546\u54c1\u4e0a\u4e0b\u7ea7\u6982\u5ff5\uff0c\u7ea610\u4e07\u5546\u54c1\u54c1\u724c\uff0c\u7ea665\u4e07\u54c1\u724c\u9500\u552e\u5173\u7cfb\uff0c\u5546\u54c1\u63cf\u8ff0\u7ef4\u5ea6\u7b49\u77e5\u8bc6\u5e93\uff0c\u57fa\u4e8e\u8be5\u77e5\u8bc6\u5e93\u53ef\u4ee5\u652f\u6301\u5546\u54c1\u5c5e\u6027\u5e93\u6784\u5efa\uff0c\u5546\u54c1\u9500\u552e\u95ee\u7b54\uff0c\u54c1\u724c\u7269\u54c1\u751f\u4ea7\u7b49\u77e5\u8bc6\u67e5\u8be2\u670d\u52a1\uff0c\u4e5f\u53ef\u7528\u4e8e\u60c5\u611f\u5206\u6790\u7b49\u4e0b\u6e38\u5e94\u7528\uff0e\n\n106. \u57fa\u4e8emongodb\u5b58\u50a8\u7684\u519b\u4e8b\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u95ee\u7b54\u9879\u76ee github\n\n\u57fa\u4e8emongodb\u5b58\u50a8\u7684\u519b\u4e8b\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u95ee\u7b54\u9879\u76ee\uff0c\u5305\u62ec\u98de\u884c\u5668\u3001\u592a\u7a7a\u88c5\u5907\u7b498\u5927\u7c7b\uff0c100\u4f59\u5c0f\u7c7b\uff0c\u5171\u8ba15800\u9879\u7684\u519b\u4e8b\u6b66\u5668\u77e5\u8bc6\u5e93\uff0c\u8be5\u9879\u76ee\u4e0d\u4f7f\u7528\u56fe\u6570\u636e\u5e93\u8fdb\u884c\u5b58\u50a8\uff0c\u901a\u8fc7jieba\u8fdb\u884c\u95ee\u53e5\u89e3\u6790\uff0c\u95ee\u53e5\u5b9e\u4f53\u9879\u8bc6\u522b\uff0c\u57fa\u4e8e\u67e5\u8be2\u6a21\u677f\u5b8c\u6210\u591a\u7c7b\u95ee\u9898\u7684\u67e5\u8be2\uff0c\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u79cd\u5de5\u4e1a\u754c\u7684\u95ee\u7b54\u601d\u60f3demo\u3002\n\n107. \u57fa\u4e8e\u8fdc\u76d1\u7763\u7684\u4e2d\u6587\u5173\u7cfb\u62bd\u53d6 github\n108. \u8bed\u97f3\u60c5\u611f\u5206\u6790 github\n109. \u4e2d\u6587ULMFiT \u60c5\u611f\u5206\u6790 \u6587\u672c\u5206\u7c7b \u8bed\u6599\u53ca\u6a21\u578b github\n110. \u4e00\u4e2a\u62cd\u7167\u505a\u9898\u7a0b\u5e8f\u3002\u8f93\u5165\u4e00\u5f20\u5305\u542b\u6570\u5b66\u8ba1\u7b97\u9898\u7684\u56fe\u7247\uff0c\u8f93\u51fa\u8bc6\u522b\u51fa\u7684\u6570\u5b66\u8ba1\u7b97\u5f0f\u4ee5\u53ca\u8ba1\u7b97\u7ed3\u679c github\n111. \u4e16\u754c\u5404\u56fd\u5927\u89c4\u6a21\u4eba\u540d\u5e93 github\n112. \u4e00\u4e2a\u5229\u7528\u6709\u8da3\u4e2d\u6587\u8bed\u6599\u5e93 qingyun \u8bad\u7ec3\u51fa\u6765\u7684\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba github\n\n\u4f7f\u7528\u4e86\u9752\u4e91\u8bed\u659910\u4e07\u8bed\u6599\uff0c\u672crepo\u4e2d\u4e5f\u6709\u8be5\u8bed\u6599\u7684\u94fe\u63a5\n\n113. \u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba\uff0c \u6839\u636e\u81ea\u5df1\u7684\u8bed\u6599\u8bad\u7ec3\u51fa\u81ea\u5df1\u60f3\u8981\u7684\u804a\u5929\u673a\u5668\u4eba\uff0c\u53ef\u4ee5\u7528\u4e8e\u667a\u80fd\u5ba2\u670d\u3001\u5728\u7ebf\u95ee\u7b54\u3001\u667a\u80fd\u804a\u5929\u7b49\u573a\u666f github\n\n\u6839\u636e\u81ea\u5df1\u7684\u8bed\u6599\u8bad\u7ec3\u51fa\u81ea\u5df1\u60f3\u8981\u7684\u804a\u5929\u673a\u5668\u4eba\uff0c\u53ef\u4ee5\u7528\u4e8e\u667a\u80fd\u5ba2\u670d\u3001\u5728\u7ebf\u95ee\u7b54\u3001\u667a\u80fd\u804a\u5929\u7b49\u573a\u666f\u3002\u52a0\u5165seqGAN\u7248\u672c\u3002\nrepo\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4efd\u8d28\u91cf\u4e0d\u592a\u9ad8\u7684\u8bed\u6599\n\n114. \u7701\u5e02\u533a\u9547\u884c\u653f\u533a\u5212\u6570\u636e\u5e26\u62fc\u97f3\u6807\u6ce8 github\n\n\u56fd\u5bb6\u7edf\u8ba1\u5c40\u4e2d\u7684\u7701\u5e02\u533a\u9547\u884c\u653f\u533a\u5212\u6570\u636e\u5e26\u62fc\u97f3\u6807\u6ce8\uff0c\u9ad8\u5fb7\u5730\u56fe\u7684\u5750\u6807\u548c\u884c\u653f\u533a\u57df\u8fb9\u754c\u8303\u56f4\uff0c\u5728\u6d4f\u89c8\u5668\u91cc\u9762\u8fd0\u884cjs\u4ee3\u7801\u91c7\u96c6\u76842019\u5e74\u53d1\u5e03\u7684\u6700\u65b0\u6570\u636e\uff0c\u542b\u91c7\u96c6\u6e90\u7801\uff0c\u63d0\u4f9bcsv\u683c\u5f0f\u6570\u636e\uff0c\u652f\u6301csv\u8f6c\u6210\u7701\u5e02\u533a\u591a\u7ea7\u8054\u52a8js\u4ee3\u7801\n\u5750\u6807\u3001\u8fb9\u754c\u8303\u56f4\u3001\u540d\u79f0\u3001\u62fc\u97f3\u3001\u884c\u653f\u533a\u7b49\u591a\u7ea7\u5730\u5740\n\n115. \u6559\u80b2\u884c\u4e1a\u65b0\u95fb \u81ea\u52a8\u6587\u6458 \u8bed\u6599\u5e93 github\n116. \u5f00\u653e\u4e86\u5bf9\u8bdd\u673a\u5668\u4eba\u3001\u77e5\u8bc6\u56fe\u8c31\u3001\u8bed\u4e49\u7406\u89e3\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u53ca\u6570\u636e github\n\n\u53e6\u4e00\u4e2aqa\u5bf9\u7684\u673a\u5668\u4eba Amodel-for-Retrivalchatbot - \u5ba2\u670d\u673a\u5668\u4eba\uff0cChinese Retreival chatbot\uff08\u4e2d\u6587\u68c0\u7d22\u5f0f\u673a\u5668\u4eba\uff09\n\n117. \u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\uff1a\u57fa\u4e8e\u767e\u5ea6\u767e\u79d1\u4e2d\u6587\u9875\u9762\uff0c\u62bd\u53d6\u4e09\u5143\u7ec4\u4fe1\u606f\uff0c\u6784\u5efa\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31 github\n118. masr: \u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\uff0c\u63d0\u4f9b\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u9ad8\u8bc6\u522b\u7387 github\n119. Python\u97f3\u9891\u6570\u636e\u589e\u5e7f\u5e93 github\n120. \u4e2d\u6587\u5168\u8bcd\u8986\u76d6BERT\u53ca\u4e24\u4efd\u9605\u8bfb\u7406\u89e3\u6570\u636e github\n\nDRCD\u6570\u636e\u96c6\u7531\u4e2d\u56fd\u53f0\u6e7e\u53f0\u8fbe\u7814\u7a76\u9662\u53d1\u5e03\uff0c\u5176\u5f62\u5f0f\u4e0eSQuAD\u76f8\u540c\uff0c\u662f\u57fa\u4e8e\u7e41\u4f53\u4e2d\u6587\u7684\u62bd\u53d6\u5f0f\u9605\u8bfb\u7406\u89e3\u6570\u636e\u96c6\u3002\nCMRC 2018\u6570\u636e\u96c6\u662f\u54c8\u5de5\u5927\u8baf\u98de\u8054\u5408\u5b9e\u9a8c\u5ba4\u53d1\u5e03\u7684\u4e2d\u6587\u673a\u5668\u9605\u8bfb\u7406\u89e3\u6570\u636e\u3002\u6839\u636e\u7ed9\u5b9a\u95ee\u9898\uff0c\u7cfb\u7edf\u9700\u8981\u4ece\u7bc7\u7ae0\u4e2d\u62bd\u53d6\u51fa\u7247\u6bb5\u4f5c\u4e3a\u7b54\u6848\uff0c\u5f62\u5f0f\u4e0eSQuAD\u76f8\u540c\u3002\n\n121. ConvLab\uff1a\u5f00\u6e90\u591a\u57df\u7aef\u5230\u7aef\u5bf9\u8bdd\u7cfb\u7edf\u5e73\u53f0 github\n122. \u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6570\u636e\u96c6 github\n123. \u57fa\u4e8e\u6700\u65b0\u7248\u672crasa\u642d\u5efa\u7684\u5bf9\u8bdd\u7cfb\u7edf github\n124. \u57fa\u4e8eTensorFlow\u548cBERT\u7684\u7ba1\u9053\u5f0f\u5b9e\u4f53\u53ca\u5173\u7cfb\u62bd\u53d6 github\n\nEntity and Relation Extraction Based on TensorFlow and BERT. \u57fa\u4e8eTensorFlow\u548cBERT\u7684\u7ba1\u9053\u5f0f\u5b9e\u4f53\u53ca\u5173\u7cfb\u62bd\u53d6\uff0c2019\u8bed\u8a00\u4e0e\u667a\u80fd\u6280\u672f\u7ade\u8d5b\u4fe1\u606f\u62bd\u53d6\u4efb\u52a1\u89e3\u51b3\u65b9\u6848\u3002Schema based Knowledge Extraction, SKE 2019\n\n125. \u4e00\u4e2a\u5c0f\u578b\u7684\u8bc1\u5238\u77e5\u8bc6\u56fe\u8c31\/\u77e5\u8bc6\u5e93 github\n126. \u590d\u76d8\u6240\u6709NLP\u6bd4\u8d5b\u7684TOP\u65b9\u6848 github\n127. OpenCLaP\uff1a\u591a\u9886\u57df\u5f00\u6e90\u4e2d\u6587\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u4ed3\u5e93 github\n\u5305\u542b\u5982\u4e0b\u8bed\u8a00\u6a21\u578b\u53ca\u767e\u5ea6\u767e\u79d1\u6570\u636e\n\n\u6c11\u4e8b\u6587\u4e66BERT\tbert-base\t\u5168\u90e8\u6c11\u4e8b\u6587\u4e66\t2654\u4e07\u7bc7\u6587\u4e66\t22554\u8bcd\t370MB\n\u5211\u4e8b\u6587\u4e66BERT\tbert-base\t\u5168\u90e8\u5211\u4e8b\u6587\u4e66\t663\u4e07\u7bc7\u6587\u4e66\t22554\u8bcd\t370MB\n\u767e\u5ea6\u767e\u79d1BERT\tbert-base\t\u767e\u5ea6\u767e\u79d1\t903\u4e07\u7bc7\u8bcd\u6761\t22166\u8bcd\t367MB\n\n128. UER\uff1a\u57fa\u4e8e\u4e0d\u540c\u8bed\u6599\u3001\u7f16\u7801\u5668\u3001\u76ee\u6807\u4efb\u52a1\u7684\u4e2d\u6587\u9884\u8bad\u7ec3\u6a21\u578b\u4ed3\u5e93\uff08\u5305\u62ecBERT\u3001GPT\u3001ELMO\u7b49\uff09 github\n\n\u57fa\u4e8ePyTorch\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u6846\u67b6\uff0c\u652f\u6301\u5bf9\u7f16\u7801\u5668\uff0c\u76ee\u6807\u4efb\u52a1\u7b49\u8fdb\u884c\u4efb\u610f\u7684\u7ec4\u5408\uff0c\u4ece\u800c\u590d\u73b0\u5df2\u6709\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u6216\u5728\u5df2\u6709\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u4e0a\u8fdb\u4e00\u6b65\u6539\u8fdb\u3002\u57fa\u4e8eUER\u8bad\u7ec3\u4e86\u4e0d\u540c\u6027\u8d28\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff08\u4e0d\u540c\u8bed\u6599\u3001\u7f16\u7801\u5668\u3001\u76ee\u6807\u4efb\u52a1\uff09\uff0c\u6784\u6210\u4e86\u4e2d\u6587\u9884\u8bad\u7ec3\u6a21\u578b\u4ed3\u5e93\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f\u3002\n\n129. \u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5411\u91cf\u5408\u96c6 github\n\n\u5305\u62ec\u5b57\u5411\u91cf,\u62fc\u97f3\u5411\u91cf,\u8bcd\u5411\u91cf,\u8bcd\u6027\u5411\u91cf,\u4f9d\u5b58\u5173\u7cfb\u5411\u91cf.\u51715\u79cd\u7c7b\u578b\u7684\u5411\u91cf\n\n130. \u57fa\u4e8e\u91d1\u878d-\u53f8\u6cd5\u9886\u57df(\u517c\u6709\u95f2\u804a\u6027\u8d28)\u7684\u804a\u5929\u673a\u5668\u4eba github\n\n\u5176\u4e2d\u7684\u4e3b\u8981\u6a21\u5757\u6709\u4fe1\u606f\u62bd\u53d6\u3001NLU\u3001NLG\u3001\u77e5\u8bc6\u56fe\u8c31\u7b49\uff0c\u5e76\u4e14\u5229\u7528Django\u6574\u5408\u4e86\u524d\u7aef\u5c55\u793a,\u76ee\u524d\u5df2\u7ecf\u5c01\u88c5\u4e86nlp\u548ckg\u7684restful\u63a5\u53e3\n\n131. g2pC\uff1a\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u6c49\u8bed\u8bfb\u97f3\u81ea\u52a8\u6807\u8bb0\u6a21\u5757 github\n132. Zincbase \u77e5\u8bc6\u56fe\u8c31\u6784\u5efa\u5de5\u5177\u5305 github\n133. \u8bd7\u6b4c\u8d28\u91cf\u8bc4\u4ef7\/\u7ec6\u7c92\u5ea6\u60c5\u611f\u8bd7\u6b4c\u8bed\u6599\u5e93 github\n134. \u5feb\u901f\u8f6c\u5316\u300c\u4e2d\u6587\u6570\u5b57\u300d\u548c\u300c\u963f\u62c9\u4f2f\u6570\u5b57\u300d github\n\n\u4e2d\u6587\u3001\u963f\u62c9\u4f2f\u6570\u5b57\u4e92\u8f6c\n\u4e2d\u6587\u4e0e\u963f\u62c9\u4f2f\u6570\u5b57\u6df7\u5408\u7684\u60c5\u51b5\uff0c\u5728\u5f00\u53d1\u4e2d\n\n135. \u767e\u5ea6\u77e5\u9053\u95ee\u7b54\u8bed\u6599\u5e93 github\n\n\u8d85\u8fc7580\u4e07\u7684\u95ee\u9898\uff0c938\u4e07\u7684\u7b54\u6848\uff0c5800\u4e2a\u5206\u7c7b\u6807\u7b7e\u3002\u57fa\u4e8e\u8be5\u95ee\u7b54\u8bed\u6599\u5e93\uff0c\u53ef\u652f\u6301\u591a\u79cd\u5e94\u7528\uff0c\u5982\u95f2\u804a\u95ee\u7b54\uff0c\u903b\u8f91\u6316\u6398\n\n136. \u57fa\u4e8e\u77e5\u8bc6\u56fe\u8c31\u7684\u95ee\u7b54\u7cfb\u7edf github\n\nBERT\u505a\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u548c\u53e5\u5b50\u76f8\u4f3c\u5ea6\uff0c\u5206\u4e3aonline\u548coutline\u6a21\u5f0f\n\n137. jieba_fast \u52a0\u901f\u7248\u7684jieba github\n\n\u4f7f\u7528cpython\u91cd\u5199\u4e86jieba\u5206\u8bcd\u5e93\u4e2d\u8ba1\u7b97DAG\u548cHMM\u4e2d\u7684vitrebi\u51fd\u6570\uff0c\u901f\u5ea6\u5f97\u5230\u5927\u5e45\u63d0\u5347\n\n138. \u6b63\u5219\u8868\u8fbe\u5f0f\u6559\u7a0b github\n139. \u4e2d\u6587\u9605\u8bfb\u7406\u89e3\u6570\u636e\u96c6 github\n140. \u57fa\u4e8eBERT\u7b49\u6700\u65b0\u8bed\u8a00\u6a21\u578b\u7684\u62bd\u53d6\u5f0f\u6458\u8981\u63d0\u53d6 github\n141. Python\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u8fdb\u884c\u6587\u672c\u6458\u8981\u7684\u7efc\u5408\u6307\u5357 link\n142. \u77e5\u8bc6\u56fe\u8c31\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u8d44\u6599\u6574\u7406 github\n\n\u6df1\u5ea6\u5b66\u4e60\u4e0e\u81ea\u7136\u8bed\u8a00\u5904\u7406\u3001\u77e5\u8bc6\u56fe\u8c31\u3001\u5bf9\u8bdd\u7cfb\u7edf\u3002\u5305\u62ec\u77e5\u8bc6\u83b7\u53d6\u3001\u77e5\u8bc6\u5e93\u6784\u5efa\u3001\u77e5\u8bc6\u5e93\u5e94\u7528\u4e09\u5927\u6280\u672f\u7814\u7a76\u4e0e\u5e94\u7528\n\n143. \u7ef4\u57fa\u5927\u89c4\u6a21\u5e73\u884c\u6587\u672c\u8bed\u6599 github\n\n85\u79cd\u8bed\u8a00\u30011620\u79cd\u8bed\u8a00\u5bf9\u3001135M\u5bf9\u7167\u53e5\n\n144. StanfordNLP 0.2.0\uff1a\u7eafPython\u7248\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5305 link\n145. NeuralNLP-NeuralClassifier\uff1a\u817e\u8baf\u5f00\u6e90\u6df1\u5ea6\u5b66\u4e60\u6587\u672c\u5206\u7c7b\u5de5\u5177 github\n146. \u7aef\u5230\u7aef\u7684\u5c01\u95ed\u57df\u5bf9\u8bdd\u7cfb\u7edf github\n147. \u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff1aNeuroNER vs. BertNER github\n148. \u65b0\u95fb\u4e8b\u4ef6\u7ebf\u7d22\u62bd\u53d6 github\n\nAn exploration for Eventline (important news Rank organized by pulic time)\uff0c\u9488\u5bf9\u67d0\u4e00\u4e8b\u4ef6\u8bdd\u9898\u4e0b\u7684\u65b0\u95fb\u62a5\u9053\u96c6\u5408\uff0c\u901a\u8fc7\u4f7f\u7528docrank\u7b97\u6cd5\uff0c\u5bf9\u65b0\u95fb\u62a5\u9053\u8fdb\u884c\u91cd\u8981\u6027\u8bc6\u522b\uff0c\u5e76\u901a\u8fc7\u65b0\u95fb\u62a5\u9053\u65f6\u95f4\u6311\u9009\u51fa\u65f6\u95f4\u7ebf\u4e0a\u91cd\u8981\u65b0\u95fb\n\n149. 2019\u5e74\u767e\u5ea6\u7684\u4e09\u5143\u7ec4\u62bd\u53d6\u6bd4\u8d5b\uff0c\u201c\u79d1\u5b66\u7a7a\u95f4\u961f\u201d\u6e90\u7801(\u7b2c7\u540d) github\n150. \u57fa\u4e8e\u4f9d\u5b58\u53e5\u6cd5\u7684\u5f00\u653e\u57df\u6587\u672c\u77e5\u8bc6\u4e09\u5143\u7ec4\u62bd\u53d6\u548c\u77e5\u8bc6\u5e93\u6784\u5efa github\n151. \u4e2d\u6587\u7684GPT2\u8bad\u7ec3\u4ee3\u7801 github\n152. ML-NLP - \u673a\u5668\u5b66\u4e60(Machine Learning)\u3001NLP\u9762\u8bd5\u4e2d\u5e38\u8003\u5230\u7684\u77e5\u8bc6\u70b9\u548c\u4ee3\u7801\u5b9e\u73b0 github\n153. nlp4han:\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u65ad\u53e5\/\u5206\u8bcd\/\u8bcd\u6027\u6807\u6ce8\/\u7ec4\u5757\/\u53e5\u6cd5\u5206\u6790\/\u8bed\u4e49\u5206\u6790\/NER\/N\u5143\u8bed\u6cd5\/HMM\/\u4ee3\u8bcd\u6d88\u89e3\/\u60c5\u611f\u5206\u6790\/\u62fc\u5199\u68c0\u67e5 github\n154. XLM\uff1aFacebook\u7684\u8de8\u8bed\u8a00\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b github\n155. \u7528\u57fa\u4e8eBERT\u7684\u5fae\u8c03\u548c\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u6765\u8fdb\u884c\u77e5\u8bc6\u56fe\u8c31\u767e\u5ea6\u767e\u79d1\u4eba\u7269\u8bcd\u6761\u5c5e\u6027\u62bd\u53d6 github\n156. \u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u76f8\u5173\u7684\u5f00\u653e\u4efb\u52a1\uff0c\u6570\u636e\u96c6, \u4ee5\u53ca\u5f53\u524d\u6700\u4f73\u7ed3\u679c github\n157. CoupletAI - \u57fa\u4e8eCNN+Bi-LSTM+Attention \u7684\u81ea\u52a8\u5bf9\u5bf9\u8054\u7cfb\u7edf github\n158. \u62bd\u8c61\u77e5\u8bc6\u56fe\u8c31\uff0c\u76ee\u524d\u89c4\u6a2150\u4e07\uff0c\u652f\u6301\u540d\u8bcd\u6027\u5b9e\u4f53\u3001\u72b6\u6001\u6027\u63cf\u8ff0\u3001\u4e8b\u4ef6\u6027\u52a8\u4f5c\u8fdb\u884c\u62bd\u8c61 github\n159. MiningZhiDaoQACorpus - 580\u4e07\u767e\u5ea6\u77e5\u9053\u95ee\u7b54\u6570\u636e\u6316\u6398\u9879\u76ee github\n160. brat rapid annotation tool: \u5e8f\u5217\u6807\u6ce8\u5de5\u5177 link\n161. \u5927\u89c4\u6a21\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u6570\u636e\uff1a\uff1a1.4\u4ebf\u5b9e\u4f53 github\n162. \u6570\u636e\u589e\u5f3a\u5728\u673a\u5668\u7ffb\u8bd1\u53ca\u5176\u4ed6nlp\u4efb\u52a1\u4e2d\u7684\u5e94\u7528\u53ca\u6548\u679c link\n163. allennlp\u9605\u8bfb\u7406\u89e3:\u652f\u6301\u591a\u79cd\u6570\u636e\u548c\u6a21\u578b github\n164. PDF\u8868\u683c\u6570\u636e\u63d0\u53d6\u5de5\u5177 github\n165. Graphbrain\uff1aAI\u5f00\u6e90\u8f6f\u4ef6\u5e93\u548c\u79d1\u7814\u5de5\u5177\uff0c\u76ee\u7684\u662f\u4fc3\u8fdb\u81ea\u52a8\u610f\u4e49\u63d0\u53d6\u548c\u6587\u672c\u7406\u89e3\u4ee5\u53ca\u77e5\u8bc6\u7684\u63a2\u7d22\u548c\u63a8\u65ad github\n166. \u7b80\u5386\u81ea\u52a8\u7b5b\u9009\u7cfb\u7edf github\n167. \u57fa\u4e8e\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u7b80\u5386\u81ea\u52a8\u6458\u8981 github\n168. \u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6\uff0c\u5305\u62ec\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6&\u57fa\u51c6\u6a21\u578b&\u8bed\u6599\u5e93&\u6392\u884c\u699c github\n169. \u6811\u6d1e OCR \u6587\u5b57\u8bc6\u522b github\n\n\u4e00\u4e2ac++ OCR github\n\n\n170. \u4ece\u5305\u542b\u8868\u683c\u7684\u626b\u63cf\u56fe\u7247\u4e2d\u8bc6\u522b\u8868\u683c\u548c\u6587\u5b57 github\n171. \u8bed\u58f0\u8fc1\u79fb github\n172. Python\u53e3\u8bed\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u82f1\u6587) github\n173. similarity\uff1a\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u5de5\u5177\u5305\uff0cjava\u7f16\u5199 github\n\n\u7528\u4e8e\u8bcd\u8bed\u3001\u77ed\u8bed\u3001\u53e5\u5b50\u3001\u8bcd\u6cd5\u5206\u6790\u3001\u60c5\u611f\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u7b49\u76f8\u5173\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\n\n174. \u6d77\u91cf\u4e2d\u6587\u9884\u8bad\u7ec3ALBERT\u6a21\u578b github\n175. Transformers 2.0 github\n\n\u652f\u6301TensorFlow 2.0 \u548c PyTorch \u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b(BERT, GPT-2, RoBERTa, XLM, DistilBert, XLNet\u2026) 8\u79cd\u67b6\u6784\/33\u79cd\u9884\u8bad\u7ec3\u6a21\u578b\/102\u79cd\u8bed\u8a00\n\n176. \u57fa\u4e8e\u5927\u89c4\u6a21\u97f3\u9891\u6570\u636e\u96c6Audioset\u7684\u97f3\u9891\u589e\u5f3a github\n177. Poplar\uff1a\u7f51\u9875\u7248\u81ea\u7136\u8bed\u8a00\u6807\u6ce8\u5de5\u5177 github\n178. \u56fe\u7247\u6587\u5b57\u53bb\u9664\uff0c\u53ef\u7528\u4e8e\u6f2b\u753b\u7ffb\u8bd1 github\n179. 186\u79cd\u8bed\u8a00\u7684\u6570\u5b57\u53eb\u6cd5\u5e93 github\n180. Amazon\u53d1\u5e03\u57fa\u4e8e\u77e5\u8bc6\u7684\u4eba-\u4eba\u5f00\u653e\u9886\u57df\u5bf9\u8bdd\u6570\u636e\u96c6 github\n181. \u4e2d\u6587\u6587\u672c\u7ea0\u9519\u6a21\u5757\u4ee3\u7801 github\n182. \u7e41\u7b80\u4f53\u8f6c\u6362 github\n183. Python\u5b9e\u73b0\u7684\u591a\u79cd\u6587\u672c\u53ef\u8bfb\u6027\u8bc4\u4ef7\u6307\u6807 github\n184. \u7c7b\u4f3c\u4e8e\u4eba\u540d\/\u5730\u540d\/\u7ec4\u7ec7\u673a\u6784\u540d\u7684\u547d\u540d\u4f53\u8bc6\u522b\u6570\u636e\u96c6 github\n185. \u4e1c\u5357\u5927\u5b66\u300a\u77e5\u8bc6\u56fe\u8c31\u300b\u7814\u7a76\u751f\u8bfe\u7a0b(\u8d44\u6599) github\n186. \u82f1\u6587\u62fc\u5199\u68c0\u67e5\u5e93 github\nfrom spellchecker import SpellChecker\n\nspell = SpellChecker()\n\n# find those words that may be misspelled\nmisspelled = spell.unknown(['something', 'is', 'hapenning', 'here'])\n\nfor word in misspelled:\n    # Get the one `most likely` answer\n    print(spell.correction(word))\n\n    # Get a list of `likely` options\n    print(spell.candidates(word))\n\n187. wwsearch\u662f\u4f01\u4e1a\u5fae\u4fe1\u540e\u53f0\u81ea\u7814\u7684\u5168\u6587\u68c0\u7d22\u5f15\u64ce github\n188. CHAMELEON\uff1a\u6df1\u5ea6\u5b66\u4e60\u65b0\u95fb\u63a8\u8350\u7cfb\u7edf\u5143\u67b6\u6784 github\n189. 8\u7bc7\u8bba\u6587\u68b3\u7406BERT\u76f8\u5173\u6a21\u578b\u8fdb\u5c55\u4e0e\u53cd\u601d github\n190. DocSearch\uff1a\u514d\u8d39\u6587\u6863\u641c\u7d22\u5f15\u64ce github\n191. LIDA\uff1a\u8f7b\u91cf\u4ea4\u4e92\u5f0f\u5bf9\u8bdd\u6807\u6ce8\u5de5\u5177 github\n192. aili - the fastest in-memory index in the East \u4e1c\u534a\u7403\u6700\u5feb\u5e76\u53d1\u7d22\u5f15 github\n193. \u77e5\u8bc6\u56fe\u8c31\u8f66\u97f3\u5de5\u4f5c\u9879\u76ee github\n194. \u81ea\u7136\u8bed\u8a00\u751f\u6210\u8d44\u6e90\u5927\u5168 github\n\n\u5185\u542b\u82f1\u6587\u6570\u636e\u3001\u8bba\u6587\u3001\u4ee3\u7801\n\n195. \u4e2d\u65e5\u97e9\u5206\u8bcd\u5e93mecab\u7684Python\u63a5\u53e3\u5e93 github\n196. \u4e2d\u6587\u6587\u672c\u6458\u8981\/\u5173\u952e\u8bcd\u63d0\u53d6 github\n197. \u6c49\u5b57\u5b57\u7b26\u7279\u5f81\u63d0\u53d6\u5668 (featurizer)\uff0c\u63d0\u53d6\u6c49\u5b57\u7684\u7279\u5f81\uff08\u53d1\u97f3\u7279\u5f81\u3001\u5b57\u5f62\u7279\u5f81\uff09\u7528\u505a\u6df1\u5ea6\u5b66\u4e60\u7684\u7279\u5f81 github\n198. \u4e2d\u6587\u751f\u6210\u4efb\u52a1\u57fa\u51c6\u6d4b\u8bc4 github\n199. \u4e2d\u6587\u7f29\u5199\u6570\u636e\u96c6 github\n200. \u4e2d\u6587\u4efb\u52a1\u57fa\u51c6\u6d4b\u8bc4 - \u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6-\u57fa\u51c6(\u9884\u8bad\u7ec3)\u6a21\u578b-\u8bed\u6599\u5e93-baseline-\u5de5\u5177\u5305-\u6392\u884c\u699c github\n201. PySS3\uff1a\u9762\u5411\u53ef\u89e3\u91caAI\u7684SS3\u6587\u672c\u5206\u7c7b\u5668\u673a\u5668\u53ef\u89c6\u5316\u5de5\u5177 github\n202. \u4e2d\u6587NLP\u6570\u636e\u96c6\u5217\u8868 github\n203. COPE - \u683c\u5f8b\u8bd7\u7f16\u8f91\u7a0b\u5e8f github\n204. doccano\uff1a\u57fa\u4e8e\u7f51\u9875\u7684\u5f00\u6e90\u534f\u540c\u591a\u8bed\u8a00\u6587\u672c\u6807\u6ce8\u5de5\u5177 github\n205. PreNLP\uff1a\u81ea\u7136\u8bed\u8a00\u9884\u5904\u7406\u5e93 github\n206. \u7b80\u5355\u7684\u7b80\u5386\u89e3\u6790\u5668\uff0c\u7528\u6765\u4ece\u7b80\u5386\u4e2d\u63d0\u53d6\u5173\u952e\u4fe1\u606f github\n207. \u7528\u4e8e\u4e2d\u6587\u95f2\u804a\u7684GPT2\u6a21\u578b\uff1aGPT2-chitchat github\n208. \u57fa\u4e8e\u68c0\u7d22\u804a\u5929\u673a\u5668\u4eba\u591a\u8f6e\u54cd\u5e94\u9009\u62e9\u76f8\u5173\u8d44\u6e90\u5217\u8868(Leaderboards\u3001Datasets\u3001Papers) github\n209. (Colab)\u62bd\u8c61\u6587\u672c\u6458\u8981\u5b9e\u73b0\u96c6\u9526(\u6559\u7a0b github\n210. \u8bcd\u8bed\u62fc\u97f3\u6570\u636e github\n211. \u9ad8\u6548\u6a21\u7cca\u641c\u7d22\u5de5\u5177 github\n212. NLP\u6570\u636e\u589e\u5e7f\u8d44\u6e90\u96c6 github\n213. \u5fae\u8f6f\u5bf9\u8bdd\u673a\u5668\u4eba\u6846\u67b6 github\n214. GitHub Typo Corpus\uff1a\u5927\u89c4\u6a21GitHub\u591a\u8bed\u8a00\u62fc\u5199\u9519\u8bef\/\u8bed\u6cd5\u9519\u8bef\u6570\u636e\u96c6 github\n215. TextCluster\uff1a\u77ed\u6587\u672c\u805a\u7c7b\u9884\u5904\u7406\u6a21\u5757 Short text cluster github\n216. \u9762\u5411\u8bed\u97f3\u8bc6\u522b\u7684\u4e2d\u6587\u6587\u672c\u89c4\u8303\u5316 github\n217. BLINK\uff1a\u6700\u5148\u8fdb\u7684\u5b9e\u4f53\u94fe\u63a5\u5e93 github\n218. BertPunc\uff1a\u57fa\u4e8eBERT\u7684\u6700\u5148\u8fdb\u6807\u70b9\u4fee\u590d\u6a21\u578b github\n219. Tokenizer\uff1a\u5feb\u901f\u3001\u53ef\u5b9a\u5236\u7684\u6587\u672c\u8bcd\u6761\u5316\u5e93 github\n220. \u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6\uff0c\u5305\u62ec\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6\u3001\u57fa\u51c6(\u9884\u8bad\u7ec3)\u6a21\u578b\u3001\u8bed\u6599\u5e93\u3001\u6392\u884c\u699c github\n221. spaCy \u533b\u5b66\u6587\u672c\u6316\u6398\u4e0e\u4fe1\u606f\u63d0\u53d6 github\n222. NLP\u4efb\u52a1\u793a\u4f8b\u9879\u76ee\u4ee3\u7801\u96c6 github\n223. python\u62fc\u5199\u68c0\u67e5\u5e93 github\n224. chatbot-list - \u884c\u4e1a\u5185\u5173\u4e8e\u667a\u80fd\u5ba2\u670d\u3001\u804a\u5929\u673a\u5668\u4eba\u7684\u5e94\u7528\u548c\u67b6\u6784\u3001\u7b97\u6cd5\u5206\u4eab\u548c\u4ecb\u7ecd github\n225. \u8bed\u97f3\u8d28\u91cf\u8bc4\u4ef7\u6307\u6807(MOSNet, BSSEval, STOI, PESQ, SRMR) github\n226. \u7528138GB\u8bed\u6599\u8bad\u7ec3\u7684\u6cd5\u6587RoBERTa\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b link\n227. BERT-NER-Pytorch\uff1a\u4e09\u79cd\u4e0d\u540c\u6a21\u5f0f\u7684BERT\u4e2d\u6587NER\u5b9e\u9a8c github\n228. \u65e0\u9053\u8bcd\u5178 - \u6709\u9053\u8bcd\u5178\u7684\u547d\u4ee4\u884c\u7248\u672c\uff0c\u652f\u6301\u82f1\u6c49\u4e92\u67e5\u548c\u5728\u7ebf\u67e5\u8be2 github\n229. 2019\u5e74NLP\u4eae\u70b9\u56de\u987e download\n\n\u63d0\u53d6\u7801: yb6x\n\n230. Chinese medical dialogue data \u4e2d\u6587\u533b\u7597\u5bf9\u8bdd\u6570\u636e\u96c6 github\n231. \u6700\u597d\u7684\u6c49\u5b57\u6570\u5b57(\u4e2d\u6587\u6570\u5b57)-\u963f\u62c9\u4f2f\u6570\u5b57\u8f6c\u6362\u5de5\u5177 github\n232. \u57fa\u4e8e\u767e\u79d1\u77e5\u8bc6\u5e93\u7684\u4e2d\u6587\u8bcd\u8bed\u591a\u8bcd\u4e49\/\u4e49\u9879\u83b7\u53d6\u4e0e\u7279\u5b9a\u53e5\u5b50\u8bcd\u8bed\u8bed\u4e49\u6d88\u6b67 github\n233. awesome-nlp-sentiment-analysis - \u60c5\u611f\u5206\u6790\u3001\u60c5\u7eea\u539f\u56e0\u8bc6\u522b\u3001\u8bc4\u4ef7\u5bf9\u8c61\u548c\u8bc4\u4ef7\u8bcd\u62bd\u53d6 github\n234. LineFlow\uff1a\u9762\u5411\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684NLP\u6570\u636e\u9ad8\u6548\u52a0\u8f7d\u5668 github\n235. \u4e2d\u6587\u533b\u5b66NLP\u516c\u5f00\u8d44\u6e90\u6574\u7406 github\n236. MedQuAD\uff1a(\u82f1\u6587)\u533b\u5b66\u95ee\u7b54\u6570\u636e\u96c6 github\n237. \u5c06\u81ea\u7136\u8bed\u8a00\u6570\u5b57\u4e32\u89e3\u6790\u8f6c\u6362\u4e3a\u6574\u6570\u548c\u6d6e\u70b9\u6570 github\n238. Transfer Learning in Natural Language Processing (NLP) youtube\n239. \u9762\u5411\u8bed\u97f3\u8bc6\u522b\u7684\u4e2d\u6587\/\u82f1\u6587\u53d1\u97f3\u8f9e\u5178 github\n240. Tokenizers\uff1a\u6ce8\u91cd\u6027\u80fd\u4e0e\u591a\u529f\u80fd\u6027\u7684\u6700\u5148\u8fdb\u5206\u8bcd\u5668 github\n241. CLUENER \u7ec6\u7c92\u5ea6\u547d\u540d\u5b9e\u4f53\u8bc6\u522b Fine Grained Named Entity Recognition github\n242. \u57fa\u4e8eBERT\u7684\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b github\n243. \u4e2d\u6587\u8c23\u8a00\u6570\u636e\u5e93 github\n244. NLP\u6570\u636e\u96c6\/\u57fa\u51c6\u4efb\u52a1\u5927\u5217\u8868 github\n\n\u5927\u591a\u6570\u4e3a\u82f1\u6587\u6570\u636e\n\n245. nlp\u76f8\u5173\u7684\u4e00\u4e9b\u8bba\u6587\u53ca\u4ee3\u7801, \u5305\u62ec\u4e3b\u9898\u6a21\u578b\u3001\u8bcd\u5411\u91cf(Word Embedding)\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b(NER)\u3001\u6587\u672c\u5206\u7c7b(Text Classificatin)\u3001\u6587\u672c\u751f\u6210(Text Generation)\u3001\u6587\u672c\u76f8\u4f3c\u6027(Text Similarity)\u8ba1\u7b97\u7b49\uff0c\u6d89\u53ca\u5230\u5404\u79cd\u4e0enlp\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u57fa\u4e8ekeras\u548ctensorflow github\n246. Python\u6587\u672c\u6316\u6398\/NLP\u5b9e\u6218\u793a\u4f8b github\n247. Blackstone\uff1a\u9762\u5411\u975e\u7ed3\u6784\u5316\u6cd5\u5f8b\u6587\u672c\u7684spaCy pipeline\u548cNLP\u6a21\u578b github\n248. \u901a\u8fc7\u540c\u4e49\u8bcd\u66ff\u6362\u5b9e\u73b0\u6587\u672c\u201c\u53d8\u8138\u201d github\n249. \u4e2d\u6587 \u9884\u8bad\u7ec3 ELECTREA \u6a21\u578b: \u57fa\u4e8e\u5bf9\u6297\u5b66\u4e60 pretrain Chinese Model github\n250. albert-chinese-ner - \u7528\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578bALBERT\u505a\u4e2d\u6587NER github\n251. \u57fa\u4e8eGPT2\u7684\u7279\u5b9a\u4e3b\u9898\u6587\u672c\u751f\u6210\/\u6587\u672c\u589e\u5e7f github\n252. \u5f00\u6e90\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u5408\u96c6 github\n253. \u591a\u8bed\u8a00\u53e5\u5411\u91cf\u5305 github\n254. \u7f16\u7801\u3001\u6807\u8bb0\u548c\u5b9e\u73b0\uff1a\u4e00\u79cd\u53ef\u63a7\u9ad8\u6548\u7684\u6587\u672c\u751f\u6210\u65b9\u6cd5 github\n255. \u82f1\u6587\u810f\u8bdd\u5927\u5217\u8868 github\n256. attnvis\uff1aGPT2\u3001BERT\u7b49transformer\u8bed\u8a00\u6a21\u578b\u6ce8\u610f\u529b\u4ea4\u4e92\u53ef\u89c6\u5316 github\n257. CoVoST\uff1aFacebook\u53d1\u5e03\u7684\u591a\u8bed\u79cd\u8bed\u97f3-\u6587\u672c\u7ffb\u8bd1\u8bed\u6599\u5e93\uff0c\u5305\u62ec11\u79cd\u8bed\u8a00(\u6cd5\u8bed\u3001\u5fb7\u8bed\u3001\u8377\u5170\u8bed\u3001\u4fc4\u8bed\u3001\u897f\u73ed\u7259\u8bed\u3001\u610f\u5927\u5229\u8bed\u3001\u571f\u8033\u5176\u8bed\u3001\u6ce2\u65af\u8bed\u3001\u745e\u5178\u8bed\u3001\u8499\u53e4\u8bed\u548c\u4e2d\u6587)\u7684\u8bed\u97f3\u3001\u6587\u5b57\u8f6c\u5f55\u53ca\u82f1\u6587\u8bd1\u6587 github\n258. Jiagu\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177 - \u4ee5BiLSTM\u7b49\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u63d0\u4f9b\u77e5\u8bc6\u56fe\u8c31\u5173\u7cfb\u62bd\u53d6 \u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u60c5\u611f\u5206\u6790 \u65b0\u8bcd\u53d1\u73b0 \u5173\u952e\u8bcd \u6587\u672c\u6458\u8981 \u6587\u672c\u805a\u7c7b\u7b49\u529f\u80fd github\n259. \u7528unet\u5b9e\u73b0\u5bf9\u6587\u6863\u8868\u683c\u7684\u81ea\u52a8\u68c0\u6d4b\uff0c\u8868\u683c\u91cd\u5efa github\n260. NLP\u4e8b\u4ef6\u63d0\u53d6\u6587\u732e\u8d44\u6e90\u5217\u8868 github\n261. \u91d1\u878d\u9886\u57df\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7814\u7a76\u8d44\u6e90\u5927\u5217\u8868 github\n262. CLUEDatasetSearch - \u4e2d\u82f1\u6587NLP\u6570\u636e\u96c6\uff1a\u641c\u7d22\u6240\u6709\u4e2d\u6587NLP\u6570\u636e\u96c6\uff0c\u9644\u5e38\u7528\u82f1\u6587NLP\u6570\u636e\u96c6 github\n263. medical_NER - \u4e2d\u6587\u533b\u5b66\u77e5\u8bc6\u56fe\u8c31\u547d\u540d\u5b9e\u4f53\u8bc6\u522b github\n264. (\u54c8\u4f5b)\u8bb2\u56e0\u679c\u63a8\u7406\u7684\u514d\u8d39\u4e66 pdf\n265. \u77e5\u8bc6\u56fe\u8c31\u76f8\u5173\u5b66\u4e60\u8d44\u6599\/\u6570\u636e\u96c6\/\u5de5\u5177\u8d44\u6e90\u5927\u5217\u8868 github\n266. Forte\uff1a\u7075\u6d3b\u5f3a\u5927\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406pipeline\u5de5\u5177\u96c6 github\n267. Python\u5b57\u7b26\u4e32\u76f8\u4f3c\u6027\u7b97\u6cd5\u5e93 github\n268. PyLaia\uff1a\u9762\u5411\u624b\u5199\u6587\u6863\u5206\u6790\u7684\u6df1\u5ea6\u5b66\u4e60\u5de5\u5177\u5305 github\n269. TextFooler\uff1a\u9488\u5bf9\u6587\u672c\u5206\u7c7b\/\u63a8\u7406\u7684\u5bf9\u6297\u6587\u672c\u751f\u6210\u6a21\u5757 github\n270. Haystack\uff1a\u7075\u6d3b\u3001\u5f3a\u5927\u7684\u53ef\u6269\u5c55\u95ee\u7b54(QA)\u6846\u67b6 github\n271. \u4e2d\u6587\u5173\u952e\u77ed\u8bed\u62bd\u53d6\u5de5\u5177 github\n272. pdf\u6587\u6863\u89e3\u6790\u76f8\u5173\u5de5\u5177\u5305\n\npdf\u751f\u6210\n\nfdfgen: \u80fd\u591f\u81ea\u52a8\u521b\u5efapdf\u6587\u6863\uff0c\u5e76\u586b\u5199\u4fe1\u606f\n\n\npdf\u8868\u683c\u89e3\u6790\n\npdftabextract: \u7528\u4e8eOCR\u8bc6\u522b\u540e\u7684\u8868\u683c\u4fe1\u606f\u89e3\u6790\uff0c\u5f88\u5f3a\u5927\ntabula-py: \u76f4\u63a5\u5c06pdf\u4e2d\u7684\u8868\u683c\u4fe1\u606f\u8f6c\u6362\u4e3apandas\u7684dataframe\uff0c\u6709java\u548cpython\u4e24\u79cd\u7248\u672c\u4ee3\u7801\npdfx: \u81ea\u52a8\u62bd\u53d6\u51fa\u5f15\u7528\u53c2\u8003\u6587\u732e\uff0c\u5e76\u4e0b\u8f7d\u5bf9\u5e94\u7684pdf\u6587\u4ef6\ninvoice2data: \u53d1\u7968pdf\u4fe1\u606f\u62bd\u53d6\ncamelot: pdf\u8868\u683c\u89e3\u6790\npdfplumber: pdf\u8868\u683c\u89e3\u6790\npdf\u6587\u6863\u4fe1\u606f\u62bd\u53d6\n\n\npdf\u8bed\u4e49\u5206\u5272\n\nPubLayNet:\u80fd\u591f\u5212\u5206\u6bb5\u843d\u3001\u8bc6\u522b\u8868\u683c\u3001\u56fe\u7247\n\n\npdf\u8bfb\u53d6\u5de5\u5177\n\nPDFMiner\uff1aPDFMiner\u80fd\u83b7\u53d6\u9875\u9762\u4e2d\u6587\u672c\u7684\u51c6\u786e\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5b57\u4f53\u6216\u884c\u7b49\u5176\u4ed6\u4fe1\u606f\u3002\u5b83\u8fd8\u6709\u4e00\u4e2aPDF\u8f6c\u6362\u5668\uff0c\u53ef\u4ee5\u5c06PDF\u6587\u4ef6\u8f6c\u6362\u6210\u5176\u4ed6\u6587\u672c\u683c\u5f0f(\u5982HTML)\u3002\u8fd8\u6709\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u89e3\u6790\u5668PDF\uff0c\u53ef\u4ee5\u7528\u4e8e\u6587\u672c\u5206\u6790\u4ee5\u5916\u7684\u5176\u4ed6\u7528\u9014\u3002\nPyPDF2\uff1aPyPDF 2\u662f\u4e00\u4e2apython PDF\u5e93\uff0c\u80fd\u591f\u5206\u5272\u3001\u5408\u5e76\u3001\u88c1\u526a\u548c\u8f6c\u6362PDF\u6587\u4ef6\u7684\u9875\u9762\u3002\u5b83\u8fd8\u53ef\u4ee5\u5411PDF\u6587\u4ef6\u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6570\u636e\u3001\u67e5\u770b\u9009\u9879\u548c\u5bc6\u7801\u3002\u5b83\u53ef\u4ee5\u4ecePDF\u68c0\u7d22\u6587\u672c\u548c\u5143\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u5c06\u6574\u4e2a\u6587\u4ef6\u5408\u5e76\u5728\u4e00\u8d77\u3002\nReportLab\uff1aReportLab\u80fd\u5feb\u901f\u521b\u5efaPDF \u6587\u6863\u3002\u7ecf\u8fc7\u65f6\u95f4\u8bc1\u660e\u7684\u3001\u8d85\u597d\u7528\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u7528\u4e8e\u521b\u5efa\u590d\u6742\u7684\u3001\u6570\u636e\u9a71\u52a8\u7684PDF\u6587\u6863\u548c\u81ea\u5b9a\u4e49\u77e2\u91cf\u56fe\u5f62\u3002\u5b83\u662f\u514d\u8d39\u7684\uff0c\u5f00\u6e90\u7684\uff0c\u7528Python\u7f16\u5199\u7684\u3002\u8be5\u8f6f\u4ef6\u5305\u6bcf\u6708\u4e0b\u8f7d5\u4e07\u591a\u6b21\uff0c\u662f\u6807\u51c6Linux\u53d1\u884c\u7248\u7684\u4e00\u90e8\u5206\uff0c\u5d4c\u5165\u5230\u8bb8\u591a\u4ea7\u54c1\u4e2d\uff0c\u5e76\u88ab\u9009\u4e2d\u4e3aWikipedia\u7684\u6253\u5370\/\u5bfc\u51fa\u529f\u80fd\u63d0\u4f9b\u52a8\u529b\u3002\n\n\n\n\n273. \u4e2d\u6587\u8bcd\u8bed\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5 gihtub\n\n\u7efc\u5408\u4e86\u540c\u4e49\u8bcd\u8bcd\u6797\u6269\u5c55\u7248\u4e0e\u77e5\u7f51\uff08Hownet\uff09\u7684\u8bcd\u8bed\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\uff0c\u8bcd\u6c47\u8986\u76d6\u66f4\u591a\u3001\u7ed3\u679c\u66f4\u51c6\u786e\u3002\n\n274. \u4eba\u6c11\u65e5\u62a5\u8bed\u6599\u5e93\u5904\u7406\u5de5\u5177\u96c6 github\n275. stanza:\u65af\u5766\u798f\u56e2\u961fNLP\u5de5\u5177 github\n\n\u53ef\u5904\u7406\u516d\u5341\u591a\u79cd\u8bed\u8a00\n\n276. \u4e00\u4e2a\u5927\u89c4\u6a21\u533b\u7597\u5bf9\u8bdd\u6570\u636e\u96c6 github\n\n\u5305\u542b110\u4e07\u533b\u5b66\u54a8\u8be2\uff0c400\u4e07\u6761\u533b\u60a3\u5bf9\u8bdd\n\n277. \u65b0\u51a0\u80ba\u708e\u76f8\u5173\u6570\u636e\n\n\u65b0\u51a0\u53ca\u5176\u4ed6\u7c7b\u578b\u80ba\u708e\u4e2d\u6587\u533b\u7597\u5bf9\u8bdd\u6570\u636e\u96c6 github\n\u6e05\u534e\u5927\u5b66\u7b49\u673a\u6784\u7684\u5f00\u653e\u6570\u636e\u6e90\uff08COVID-19\uff09github\n\n278. DGL-KE \u56fe\u5d4c\u5165\u8868\u793a\u5b66\u4e60\u7b97\u6cd5 github\n279. nlp-recipes\uff1a\u5fae\u8f6f\u51fa\u54c1--\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6700\u4f73\u5b9e\u8df5\u548c\u8303\u4f8b github\n280. chinese_keyphrase_extractor (CKPE) - A tool for chinese keyphrase extraction \u4e00\u4e2a\u5feb\u901f\u4ece\u81ea\u7136\u8bed\u8a00\u6587\u672c\u4e2d\u63d0\u53d6\u548c\u8bc6\u522b\u5173\u952e\u77ed\u8bed\u7684\u5de5\u5177 github\n281. \u4f7f\u7528GAN\u751f\u6210\u8868\u683c\u6570\u636e\uff08\u4ec5\u652f\u6301\u82f1\u6587\uff09 github\n282. Google\u53d1\u5e03Taskmaster-2\u81ea\u7136\u8bed\u8a00\u4efb\u52a1\u5bf9\u8bdd\u6570\u636e\u96c6 github\n283. BDCI2019\u91d1\u878d\u8d1f\u9762\u4fe1\u606f\u5224\u5b9a github\n284. \u7528\u795e\u7ecf\u7f51\u7edc\u7b26\u53f7\u63a8\u7406\u6c42\u89e3\u590d\u6742\u6570\u5b66\u65b9\u7a0b github\n285. \u7ca4\u8bed\/\u82f1\u8bed\u4f1a\u8bdd\u53cc\u8bed\u8bed\u6599\u5e93 github\n286. \u4e2d\u6587ELECTRA\u9884\u8bad\u7ec3\u6a21\u578b github\n287. \u9762\u5411\u6df1\u5ea6\u5b66\u4e60\u7814\u7a76\u4eba\u5458\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5b9e\u4f8b\u6559\u7a0b github\n288. Parakeet\uff1a\u57fa\u4e8ePaddlePaddle\u7684\u6587\u672c-\u8bed\u97f3\u5408\u6210 github\n289. 103976\u4e2a\u82f1\u8bed\u5355\u8bcd\u5e93\uff08sql\u7248\uff0ccsv\u7248\uff0cExcel\u7248\uff09\u5305 github\n290. \u300a\u6d77\u8d3c\u738b\u300b\u77e5\u8bc6\u56fe\u8c31 github\n291. \u6cd5\u52a1\u667a\u80fd\u6587\u732e\u8d44\u6e90\u5217\u8868 github\n292. Datasaur.ai \u5728\u7ebf\u6570\u636e\u6807\u6ce8\u5de5\u4f5c\u6d41\u7ba1\u7406\u5de5\u5177 link\n293. (Java)\u51c6\u786e\u7684\u8bed\u97f3\u81ea\u7136\u8bed\u8a00\u68c0\u6d4b\u5e93 github\n294. \u9762\u5411\u5404\u8bed\u79cd\/\u4efb\u52a1\u7684BERT\u6a21\u578b\u5927\u5217\u8868\/\u641c\u7d22\u5f15\u64ce link\n295. CoVoST\uff1aFacebook\u53d1\u5e03\u7684\u591a\u8bed\u79cd\u8bed\u97f3-\u6587\u672c\u7ffb\u8bd1\u8bed\u6599\u5e93 github\n296. \u57fa\u4e8e\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u4e2d\u6587\u5173\u952e\u8bcd\u62bd\u53d6\u65b9\u6cd5 github\n297. Fancy-NLP:\u7528\u4e8e\u5efa\u8bbe\u5546\u54c1\u753b\u50cf\u7684\u6587\u672c\u77e5\u8bc6\u6316\u6398\u5de5\u5177 github\n298. \u57fa\u4e8e\u767e\u5ea6webqa\u4e0edureader\u6570\u636e\u96c6\u8bad\u7ec3\u7684Albert Large QA\u6a21\u578b github\n299. BERT\/CRF\u5b9e\u73b0\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b github\n300. ssc, Sound Shape Code, \u97f3\u5f62\u7801 - \u57fa\u4e8e\u201c\u97f3\u5f62\u7801\u201d\u7684\u4e2d\u6587\u5b57\u7b26\u4e32\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\n\nversion 1\nversion 2\nblog\/introduction\n\n301. \u4e2d\u6587\u6307\u4ee3\u6d88\u89e3\u6570\u636e github\n\nbaidu ink  code: a0qq\n\n302. \u5168\u9762\u7b80\u4fbf\u7684\u4e2d\u6587 NLP \u5de5\u5177\u5305 github\n303. \u4e2d\u6587\u5730\u5740\u5206\u8bcd\uff08\u5730\u5740\u5143\u7d20\u8bc6\u522b\u4e0e\u62bd\u53d6\uff09\uff0c\u901a\u8fc7\u5e8f\u5217\u6807\u6ce8\u8fdb\u884cNER github\n304. \u7528Transformers(BERT, XLNet, Bart, Electra, Roberta, XLM-Roberta)\u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd(\u6a21\u578b\u6bd4\u8f83) github\n305. \u6587\u672c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6700\u5148\u8fdb\u89e3\u91ca\u5668\u5e93 github\n306. \u591a\u6587\u6863\u6458\u8981\u6570\u636e\u96c6 github\n307. \u7528\u8bb0\u4e8b\u672c\u6e32\u67d33D\u56fe\u50cf github\n308. char_featurizer - \u6c49\u5b57\u5b57\u7b26\u7279\u5f81\u63d0\u53d6\u5de5\u5177 github\n309. SimBERT - \u57fa\u4e8eUniLM\u601d\u60f3\u3001\u878d\u68c0\u7d22\u4e0e\u751f\u6210\u4e8e\u4e00\u4f53\u7684BERT\u6a21\u578b github\n310. Python\u97f3\u9891\u7279\u5f81\u63d0\u53d6\u5305 github\n311. TensorFlow 2 \u5b9e\u73b0\u7684\u6587\u672c\u8bed\u97f3\u5408\u6210 github\n312. \u60c5\u611f\u5206\u6790\u6280\u672f\uff1a\u8ba9\u667a\u80fd\u5ba2\u670d\u66f4\u61c2\u4eba\u7c7b\u60c5\u611f github\n313. TensorFlow Hub\u6700\u65b0\u53d1\u5e0340+\u79cd\u8bed\u8a00\u7684\u65b0\u8bed\u8a00\u6a21\u578b(\u5305\u62ec\u4e2d\u6587) link\n314. \u6c49\u5b57\u5b57\u7b26\u7279\u5f81\u63d0\u53d6\u5668 (featurizer)\uff0c\u63d0\u53d6\u6c49\u5b57\u7684\u7279\u5f81\uff08\u53d1\u97f3\u7279\u5f81\u3001\u5b57\u5f62\u7279\u5f81\uff09\u7528\u505a\u6df1\u5ea6\u5b66\u4e60\u7684\u7279\u5f81 github\n315. \u5de5\u4e1a\u754c\u5e38\u7528\u57fa\u4e8eDSSM\u5411\u91cf\u5316\u53ec\u56depipeline\u590d\u73b0 github\n316. \u4e0d\u5b58\u5728\u7684\u8bcd\uff1a\u7528GPT-2\u53d8\u4f53\u4ece\u5934\u751f\u6210\u65b0\u8bcd\u53ca\u5176\u5b9a\u4e49\u3001\u4f8b\u53e5 github\n317. TextAttack\uff1a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u5bf9\u6297\u6027\u653b\u51fb\u6846\u67b6 github\n318. \u4ec7\u6068\u8a00\u8bba\u68c0\u6d4b\u8fdb\u5c55 link\n319. OPUS-100\uff1a\u4ee5\u82f1\u6587\u4e3a\u4e2d\u5fc3\u7684\u591a\u8bed(100\u79cd)\u5e73\u884c\u8bed\u6599 github\n320. \u4ece\u8bba\u6587\u4e2d\u63d0\u53d6\u8868\u683c\u6570\u636e github\n321. \u8ba9\u4eba\u4eba\u90fd\u53d8\u5f97\u201c\u5f6c\u5f6c\u6709\u793c\u201d\uff1a\u793c\u8c8c\u8fc1\u79fb\u4efb\u52a1\u2014\u2014\u5728\u4fdd\u7559\u610f\u4e49\u7684\u540c\u65f6\u5c06\u975e\u793c\u8c8c\u8bed\u53e5\u8f6c\u6362\u4e3a\u793c\u8c8c\u8bed\u53e5\uff0c\u63d0\u4f9b\u5305\u542b1.39M + \u5b9e\u4f8b\u7684\u6570\u636e\u96c6 paper and code\n322. \u7528BERT\u5728\u8868\u683c\u4e2d\u5bfb\u627e\u7b54\u6848 github\n323. PyTorch\u5b9e\u73b0\u7684BERT\u4e8b\u4ef6\u62bd\u53d6(ACE 2005 corpus) github\n324. \u8868\u683c\u95ee\u7b54\u7684\u7cfb\u5217\u6587\u7ae0\n\n\u7b80\u4ecb\n\u6a21\u578b\n\u5b8c\u7ed3\u7bc7\n\n325. LibKGE\uff1a\u9762\u5411\u53ef\u590d\u73b0\u7814\u7a76\u7684\u77e5\u8bc6\u56fe\u8c31\u5d4c\u5165\u5e93 github\n326. comparxiv :\u7528\u4e8e\u6bd4\u8f83arXiv\u4e0a\u4e24\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7684\u547d\u4ee4 pypi\n327. ViSQOL\uff1a\u97f3\u9891\u8d28\u91cf\u611f\u77e5\u5ba2\u89c2\u3001\u5b8c\u6574\u53c2\u8003\u6307\u6807\uff0c\u5206\u97f3\u9891\u3001\u8bed\u97f3\u4e24\u79cd\u6a21\u5f0f github\n328. \u65b9\u9762\u60c5\u611f\u5206\u6790\u5305 github\n329. dstlr\uff1a\u975e\u7ed3\u6784\u5316\u6587\u672c\u53ef\u6269\u5c55\u77e5\u8bc6\u56fe\u8c31\u6784\u5efa\u5e73\u53f0 github\n330. \u7531\u6587\u672c\u81ea\u52a8\u751f\u6210\u591a\u9879\u9009\u62e9\u9898 github\n331. \u5927\u89c4\u6a21\u8de8\u9886\u57df\u4e2d\u6587\u4efb\u52a1\u5bfc\u5411\u591a\u8f6e\u5bf9\u8bdd\u6570\u636e\u96c6\u53ca\u6a21\u578bCrossWOZ paper & data\n332. whatlies\uff1a\u8bcd\u5411\u91cf\u4ea4\u4e92\u53ef\u89c6\u5316 spacy\n\u5de5\u5177\n333. \u652f\u6301\u6279\u5e76\u884c\u7684LatticeLSTM\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b github\n334. \u57fa\u4e8eAlbert\u3001Electra\uff0c\u7528\u7ef4\u57fa\u767e\u79d1\u6587\u672c\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u7684\u95ee\u7b54\u5f15\u64ce github\n335. Deepmatch\uff1a\u9488\u5bf9\u63a8\u8350\u3001\u5e7f\u544a\u548c\u641c\u7d22\u7684\u6df1\u5ea6\u5339\u914d\u6a21\u578b\u5e93 github\n336. \u8bed\u97f3\u5de5\u5177\u5408\u96c6\n\nzhrtvc \u597d\u7528\u7684\u4e2d\u6587\u8bed\u97f3\u514b\u9686\u517c\u4e2d\u6587\u8bed\u97f3\u5408\u6210\u7cfb\u7edf github\naukit \u597d\u7528\u7684\u8bed\u97f3\u5904\u7406\u5de5\u5177\u7bb1\uff0c\u5305\u542b\u8bed\u97f3\u964d\u566a\u3001\u97f3\u9891\u683c\u5f0f\u8f6c\u6362\u3001\u7279\u5f81\u9891\u8c31\u751f\u6210\u7b49\u6a21\u5757 github\nphkit \u597d\u7528\u7684\u97f3\u7d20\u5904\u7406\u5de5\u5177\u7bb1\uff0c\u5305\u542b\u4e2d\u6587\u97f3\u7d20\u3001\u82f1\u6587\u97f3\u7d20\u3001\u6587\u672c\u8f6c\u62fc\u97f3\u3001\u6587\u672c\u6b63\u5219\u5316\u7b49\u6a21\u5757 github\nzhvoice \u4e2d\u6587\u8bed\u97f3\u8bed\u6599\uff0c\u8bed\u97f3\u66f4\u52a0\u6e05\u6670\u81ea\u7136\uff0c\u5305\u542b8\u4e2a\u5f00\u6e90\u6570\u636e\u96c6\uff0c3200\u4e2a\u8bf4\u8bdd\u4eba\uff0c900\u5c0f\u65f6\u8bed\u97f3\uff0c1300\u4e07\u5b57 github\n\n337. \u591a\u97f3\u5b57\u8bcd\u5178\u6570\u636e\u53ca\u4ee3\u7801 github\n338. audio\uff1a\u9762\u5411\u8bed\u97f3\u884c\u4e3a\u68c0\u6d4b\u3001\u4e8c\u503c\u5316\u3001\u8bf4\u8bdd\u4eba\u8bc6\u522b\u3001\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b\u3001\u60c5\u611f\u8bc6\u522b\u7b49\u4efb\u52a1\u7684\u97f3\u9891\u6807\u6ce8\u5de5\u5177 github\n339. \u5927\u89c4\u6a21\u3001\u7ed3\u6784\u5316\u3001\u4e2d\u82f1\u6587\u53cc\u8bed\u7684\u65b0\u51a0\u77e5\u8bc6\u56fe\u8c31(COKG-19) link\n\nCOKG-19\u5305\u542b\u4e86505\u4e2a\u6982\u5ff5\u3001393\u4e2a\u5c5e\u6027\u300126282\u4e2a\u5b9e\u4f8b\u548c32352\u4e2a\u77e5\u8bc6\u4e09\u5143\u7ec4\uff0c\u8986\u76d6\u4e86\u533b\u7597\u3001\u5065\u5eb7\u3001\u7269\u8d44\u3001\u9632\u63a7\u3001\u79d1\u7814\u548c\u4eba\u7269\u7b49\n\n340. 132\u4e2a\u77e5\u8bc6\u56fe\u8c31\u7684\u6570\u636e\u96c6 link\n\n\u6db5\u76d6\u5e38\u8bc6\u3001\u57ce\u5e02\u3001\u91d1\u878d\u3001\u519c\u4e1a\u3001\u5730\u7406\u3001\u6c14\u8c61\u3001\u793e\u4ea4\u3001\u7269\u8054\u7f51\u3001\u533b\u7597\u3001\u5a31\u4e50\u3001\u751f\u6d3b\u3001\u5546\u4e1a\u3001\u51fa\u884c\u3001\u79d1\u6559\n\n341. 42GB\u7684JD\u5ba2\u670d\u5bf9\u8bdd\u6570\u636e(CSDD) github\n\n12\u4ebf\u53e5\u5b50\u8bad\u7ec3\u5f97\u5230\u7684word embedding\n\n342. \u5408\u6210\u6570\u636e\u751f\u6210\u57fa\u51c6 github\n343. \u6c49\u5b57\u3001\u8bcd\u8bed\u3001\u6210\u8bed\u67e5\u8be2\u63a5\u53e3 github\n344. \u4e2d\u6587\u95ee\u9898\u53e5\u5b50\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u6bd4\u8d5b\u53ca\u65b9\u6848\u6c47\u603b github\n345. Texthero\uff1a\u6587\u672c\u6570\u636e\u9ad8\u6548\u5904\u7406\u5305\uff0c\u5305\u62ec\u9884\u5904\u7406\u3001\u5173\u952e\u8bcd\u63d0\u53d6\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u5411\u91cf\u7a7a\u95f4\u5206\u6790\u3001\u6587\u672c\u53ef\u89c6\u5316\u7b49 github\n346. SIMPdf\uff1aPython\u5199\u7684\u7b80\u5355PDF\u6587\u4ef6\u6587\u5b57\u7f16\u8f91\u5668 github\n347. \u300a\u914d\u8272\u8f9e\u5178\u300b\u6570\u636e\u96c6 github\n348. carefree-learn\uff1a(PyTorch)\u8868\u683c\u6570\u636e\u96c6\u81ea\u52a8\u5316\u673a\u5668\u5b66\u4e60(AutoML)\u5305 github\n349. token2index\uff1a\u4e0ePyTorch\/Tensorflow\u517c\u5bb9\u7684\u5f3a\u5927\u8f7b\u91cf\u8bcd\u6761\u7d22\u5f15\u5e93 github\n350. \u5f00\u6e90\u5bf9\u8bdd\u5f0f\u4fe1\u606f\u641c\u7d22\u5e73\u53f0 github\n351. \u5bf9\u8054\u6570\u636e github\n\n700,000 couplets, \u8d85\u8fc770\u4e07\u5bf9\u5bf9\u8054\n\u767e\u5ea6\u4e91\u76d8\uff1a\u94fe\u63a5  \u5bc6\u7801:egpt\n\n352. \u57fa\u4e8ePytorch\u7684Bert\u5e94\u7528\uff0c\u5305\u62ec\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u4ee5\u53ca\u6587\u672c\u76f8\u4f3c\u5ea6\u7b49 github\n353. TaBERT\uff1a\u7406\u89e3\u8868\u683c\u6570\u636e\u67e5\u8be2\u7684\u65b0\u6a21\u578b paper\n354. Dakshina\u6570\u636e\u96c6\uff1a\u5341\u4e8c\u79cd\u5357\u4e9a\u8bed\u8a00\u7684\u62c9\u4e01\/\u672c\u5730\u6587\u5b57\u5e73\u884c\u6570\u636e\u96c6\u5408 github\n355. NLP\u6807\u6ce8\u5e73\u53f0\u7efc\u8ff0 github\n356. \u5c01\u95ed\u57df\u5fae\u8c03\u8868\u683c\u68c0\u6d4b github\n357. \u6df1\u5ea6\u5b66\u4e60\u60c5\u611f\u6587\u672c\u8bed\u97f3\u5408\u6210 github\n358. \u4e2d\u6587\u5199\u4f5c\u6821\u5bf9\u5de5\u5177 github\n359. \u7528Quora\u95ee\u9898\u5bf9\u8bad\u7ec3\u7684T5\u95ee\u9898\u610f\u8bd1(Paraphrase) github\n360. \u60c5\u5883\u4e92\u52a8\u591a\u6a21\u6001\u5bf9\u8bdd\u6311\u62182020(DSTC9 2020) github\n361. nlpgnn\uff1a\u56fe\u795e\u7ecf\u7f51\u7edc\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u7bb1 github\n362. Macadam\uff1a\u4ee5Tensorflow(Keras)\u548cbert4keras\u4e3a\u57fa\u7840\uff0c\u4e13\u6ce8\u4e8e\u6587\u672c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u548c\u5173\u7cfb\u62bd\u53d6\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305 github\n363. \u7528\u65b0\u7248nlp\u5e93\u52a0\u8f7d17GB+\u82f1\u6587\u7ef4\u57fa\u8bed\u6599\u53ea\u5360\u75289MB\u5185\u5b58\u904d\u5386\u901f\u5ea62-3 Gbit\/s github\n","149":"BERT\n***** New March 11th, 2020: Smaller BERT Models *****\nThis is a release of 24 smaller BERT models (English only, uncased, trained with WordPiece masking) referenced in Well-Read Students Learn Better: On the Importance of Pre-training Compact Models.\nWe have shown that the standard BERT recipe (including model architecture and training objective) is effective on a wide range of model sizes, beyond BERT-Base and BERT-Large. The smaller BERT models are intended for environments with restricted computational resources. They can be fine-tuned in the same manner as the original BERT models. However, they are most effective in the context of knowledge distillation, where the fine-tuning labels are produced by a larger and more accurate teacher.\nOur goal is to enable research in institutions with fewer computational resources and encourage the community to seek directions of innovation alternative to increasing model capacity.\nYou can download all 24 from here, or individually from the table below:\n\n\n\n\nH=128\nH=256\nH=512\nH=768\n\n\n\n\nL=2\n2\/128 (BERT-Tiny)\n2\/256\n2\/512\n2\/768\n\n\nL=4\n4\/128\n4\/256 (BERT-Mini)\n4\/512 (BERT-Small)\n4\/768\n\n\nL=6\n6\/128\n6\/256\n6\/512\n6\/768\n\n\nL=8\n8\/128\n8\/256\n8\/512 (BERT-Medium)\n8\/768\n\n\nL=10\n10\/128\n10\/256\n10\/512\n10\/768\n\n\nL=12\n12\/128\n12\/256\n12\/512\n12\/768 (BERT-Base)\n\n\n\nNote that the BERT-Base model in this release is included for completeness only; it was re-trained under the same regime as the original model.\nHere are the corresponding GLUE scores on the test set:\n\n\n\nModel\nScore\nCoLA\nSST-2\nMRPC\nSTS-B\nQQP\nMNLI-m\nMNLI-mm\nQNLI(v2)\nRTE\nWNLI\nAX\n\n\n\n\nBERT-Tiny\n64.2\n0.0\n83.2\n81.1\/71.1\n74.3\/73.6\n62.2\/83.4\n70.2\n70.3\n81.5\n57.2\n62.3\n21.0\n\n\nBERT-Mini\n65.8\n0.0\n85.9\n81.1\/71.8\n75.4\/73.3\n66.4\/86.2\n74.8\n74.3\n84.1\n57.9\n62.3\n26.1\n\n\nBERT-Small\n71.2\n27.8\n89.7\n83.4\/76.2\n78.8\/77.0\n68.1\/87.0\n77.6\n77.0\n86.4\n61.8\n62.3\n28.6\n\n\nBERT-Medium\n73.5\n38.0\n89.6\n86.6\/81.6\n80.4\/78.4\n69.6\/87.9\n80.0\n79.1\n87.7\n62.2\n62.3\n30.5\n\n\n\nFor each task, we selected the best fine-tuning hyperparameters from the lists below, and trained for 4 epochs:\n\nbatch sizes: 8, 16, 32, 64, 128\nlearning rates: 3e-4, 1e-4, 5e-5, 3e-5\n\nIf you use these models, please cite the following paper:\n@article{turc2019,\n  title={Well-Read Students Learn Better: On the Importance of Pre-training Compact Models},\n  author={Turc, Iulia and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},\n  journal={arXiv preprint arXiv:1908.08962v2 },\n  year={2019}\n}\n\n***** New May 31st, 2019: Whole Word Masking Models *****\nThis is a release of several new models which were the result of an improvement\nthe pre-processing code.\nIn the original pre-processing code, we randomly select WordPiece tokens to\nmask. For example:\nInput Text: the man jumped up , put his basket on phil ##am ##mon ' s head\nOriginal Masked Input: [MASK] man [MASK] up , put his [MASK] on phil [MASK] ##mon ' s head\nThe new technique is called Whole Word Masking. In this case, we always mask\nall of the the tokens corresponding to a word at once. The overall masking\nrate remains the same.\nWhole Word Masked Input: the man [MASK] up , put his basket on [MASK] [MASK] [MASK] ' s head\nThe training is identical -- we still predict each masked WordPiece token\nindependently. The improvement comes from the fact that the original prediction\ntask was too 'easy' for words that had been split into multiple WordPieces.\nThis can be enabled during data generation by passing the flag\n--do_whole_word_mask=True to create_pretraining_data.py.\nPre-trained models with Whole Word Masking are linked below. The data and\ntraining were otherwise identical, and the models have identical structure and\nvocab to the original models. We only include BERT-Large models. When using\nthese models, please make it clear in the paper that you are using the Whole\nWord Masking variant of BERT-Large.\n\n\nBERT-Large, Uncased (Whole Word Masking):\n24-layer, 1024-hidden, 16-heads, 340M parameters\n\n\nBERT-Large, Cased (Whole Word Masking):\n24-layer, 1024-hidden, 16-heads, 340M parameters\n\n\n\n\n\nModel\nSQUAD 1.1 F1\/EM\nMulti NLI Accuracy\n\n\n\n\nBERT-Large, Uncased (Original)\n91.0\/84.3\n86.05\n\n\nBERT-Large, Uncased (Whole Word Masking)\n92.8\/86.7\n87.07\n\n\nBERT-Large, Cased (Original)\n91.5\/84.8\n86.09\n\n\nBERT-Large, Cased (Whole Word Masking)\n92.9\/86.7\n86.46\n\n\n\n***** New February 7th, 2019: TfHub Module *****\nBERT has been uploaded to TensorFlow Hub. See\nrun_classifier_with_tfhub.py for an example of how to use the TF Hub module,\nor run an example in the browser on\nColab.\n***** New November 23rd, 2018: Un-normalized multilingual model + Thai +\nMongolian *****\nWe uploaded a new multilingual model which does not perform any normalization\non the input (no lower casing, accent stripping, or Unicode normalization), and\nadditionally inclues Thai and Mongolian.\nIt is recommended to use this version for developing multilingual models,\nespecially on languages with non-Latin alphabets.\nThis does not require any code changes, and can be downloaded here:\n\nBERT-Base, Multilingual Cased:\n104 languages, 12-layer, 768-hidden, 12-heads, 110M parameters\n\n***** New November 15th, 2018: SOTA SQuAD 2.0 System *****\nWe released code changes to reproduce our 83% F1 SQuAD 2.0 system, which is\ncurrently 1st place on the leaderboard by 3%. See the SQuAD 2.0 section of the\nREADME for details.\n***** New November 5th, 2018: Third-party PyTorch and Chainer versions of\nBERT available *****\nNLP researchers from HuggingFace made a\nPyTorch version of BERT available\nwhich is compatible with our pre-trained checkpoints and is able to reproduce\nour results. Sosuke Kobayashi also made a\nChainer version of BERT available\n(Thanks!) We were not involved in the creation or maintenance of the PyTorch\nimplementation so please direct any questions towards the authors of that\nrepository.\n***** New November 3rd, 2018: Multilingual and Chinese models available\n*****\nWe have made two new BERT models available:\n\nBERT-Base, Multilingual\n(Not recommended, use Multilingual Cased instead): 102 languages,\n12-layer, 768-hidden, 12-heads, 110M parameters\nBERT-Base, Chinese:\nChinese Simplified and Traditional, 12-layer, 768-hidden, 12-heads, 110M\nparameters\n\nWe use character-based tokenization for Chinese, and WordPiece tokenization for\nall other languages. Both models should work out-of-the-box without any code\nchanges. We did update the implementation of BasicTokenizer in\ntokenization.py to support Chinese character tokenization, so please update if\nyou forked it. However, we did not change the tokenization API.\nFor more, see the\nMultilingual README.\n***** End new information *****\nIntroduction\nBERT, or Bidirectional Encoder Representations from\nTransformers, is a new method of pre-training language representations which\nobtains state-of-the-art results on a wide array of Natural Language Processing\n(NLP) tasks.\nOur academic paper which describes BERT in detail and provides full results on a\nnumber of tasks can be found here:\nhttps:\/\/arxiv.org\/abs\/1810.04805.\nTo give a few numbers, here are the results on the\nSQuAD v1.1 question answering\ntask:\n\n\n\nSQuAD v1.1 Leaderboard (Oct 8th 2018)\nTest EM\nTest F1\n\n\n\n\n1st Place Ensemble - BERT\n87.4\n93.2\n\n\n2nd Place Ensemble - nlnet\n86.0\n91.7\n\n\n1st Place Single Model - BERT\n85.1\n91.8\n\n\n2nd Place Single Model - nlnet\n83.5\n90.1\n\n\n\nAnd several natural language inference tasks:\n\n\n\nSystem\nMultiNLI\nQuestion NLI\nSWAG\n\n\n\n\nBERT\n86.7\n91.1\n86.3\n\n\nOpenAI GPT (Prev. SOTA)\n82.2\n88.1\n75.0\n\n\n\nPlus many other tasks.\nMoreover, these results were all obtained with almost no task-specific neural\nnetwork architecture design.\nIf you already know what BERT is and you just want to get started, you can\ndownload the pre-trained models and\nrun a state-of-the-art fine-tuning in only a few\nminutes.\nWhat is BERT?\nBERT is a method of pre-training language representations, meaning that we train\na general-purpose \"language understanding\" model on a large text corpus (like\nWikipedia), and then use that model for downstream NLP tasks that we care about\n(like question answering). BERT outperforms previous methods because it is the\nfirst unsupervised, deeply bidirectional system for pre-training NLP.\nUnsupervised means that BERT was trained using only a plain text corpus, which\nis important because an enormous amount of plain text data is publicly available\non the web in many languages.\nPre-trained representations can also either be context-free or contextual,\nand contextual representations can further be unidirectional or\nbidirectional. Context-free models such as\nword2vec or\nGloVe generate a single \"word\nembedding\" representation for each word in the vocabulary, so bank would have\nthe same representation in bank deposit and river bank. Contextual models\ninstead generate a representation of each word that is based on the other words\nin the sentence.\nBERT was built upon recent work in pre-training contextual representations \u2014\nincluding Semi-supervised Sequence Learning,\nGenerative Pre-Training,\nELMo, and\nULMFit\n\u2014 but crucially these models are all unidirectional or shallowly\nbidirectional. This means that each word is only contextualized using the words\nto its left (or right). For example, in the sentence I made a bank deposit the\nunidirectional representation of bank is only based on I made a but not\ndeposit. Some previous work does combine the representations from separate\nleft-context and right-context models, but only in a \"shallow\" manner. BERT\nrepresents \"bank\" using both its left and right context \u2014 I made a ... deposit\n\u2014 starting from the very bottom of a deep neural network, so it is deeply\nbidirectional.\nBERT uses a simple approach for this: We mask out 15% of the words in the input,\nrun the entire sequence through a deep bidirectional\nTransformer encoder, and then predict only\nthe masked words. For example:\nInput: the man went to the [MASK1] . he bought a [MASK2] of milk.\nLabels: [MASK1] = store; [MASK2] = gallon\n\nIn order to learn relationships between sentences, we also train on a simple\ntask which can be generated from any monolingual corpus: Given two sentences A\nand B, is B the actual next sentence that comes after A, or just a random\nsentence from the corpus?\nSentence A: the man went to the store .\nSentence B: he bought a gallon of milk .\nLabel: IsNextSentence\n\nSentence A: the man went to the store .\nSentence B: penguins are flightless .\nLabel: NotNextSentence\n\nWe then train a large model (12-layer to 24-layer Transformer) on a large corpus\n(Wikipedia + BookCorpus) for a long time (1M\nupdate steps), and that's BERT.\nUsing BERT has two stages: Pre-training and fine-tuning.\nPre-training is fairly expensive (four days on 4 to 16 Cloud TPUs), but is a\none-time procedure for each language (current models are English-only, but\nmultilingual models will be released in the near future). We are releasing a\nnumber of pre-trained models from the paper which were pre-trained at Google.\nMost NLP researchers will never need to pre-train their own model from scratch.\nFine-tuning is inexpensive. All of the results in the paper can be\nreplicated in at most 1 hour on a single Cloud TPU, or a few hours on a GPU,\nstarting from the exact same pre-trained model. SQuAD, for example, can be\ntrained in around 30 minutes on a single Cloud TPU to achieve a Dev F1 score of\n91.0%, which is the single system state-of-the-art.\nThe other important aspect of BERT is that it can be adapted to many types of\nNLP tasks very easily. In the paper, we demonstrate state-of-the-art results on\nsentence-level (e.g., SST-2), sentence-pair-level (e.g., MultiNLI), word-level\n(e.g., NER), and span-level (e.g., SQuAD) tasks with almost no task-specific\nmodifications.\nWhat has been released in this repository?\nWe are releasing the following:\n\nTensorFlow code for the BERT model architecture (which is mostly a standard\nTransformer architecture).\nPre-trained checkpoints for both the lowercase and cased version of\nBERT-Base and BERT-Large from the paper.\nTensorFlow code for push-button replication of the most important\nfine-tuning experiments from the paper, including SQuAD, MultiNLI, and MRPC.\n\nAll of the code in this repository works out-of-the-box with CPU, GPU, and Cloud\nTPU.\nPre-trained models\nWe are releasing the BERT-Base and BERT-Large models from the paper.\nUncased means that the text has been lowercased before WordPiece tokenization,\ne.g., John Smith becomes john smith. The Uncased model also strips out any\naccent markers. Cased means that the true case and accent markers are\npreserved. Typically, the Uncased model is better unless you know that case\ninformation is important for your task (e.g., Named Entity Recognition or\nPart-of-Speech tagging).\nThese models are all released under the same license as the source code (Apache\n2.0).\nFor information about the Multilingual and Chinese model, see the\nMultilingual README.\nWhen using a cased model, make sure to pass --do_lower=False to the training\nscripts. (Or pass do_lower_case=False directly to FullTokenizer if you're\nusing your own script.)\nThe links to the models are here (right-click, 'Save link as...' on the name):\n\nBERT-Large, Uncased (Whole Word Masking):\n24-layer, 1024-hidden, 16-heads, 340M parameters\nBERT-Large, Cased (Whole Word Masking):\n24-layer, 1024-hidden, 16-heads, 340M parameters\nBERT-Base, Uncased:\n12-layer, 768-hidden, 12-heads, 110M parameters\nBERT-Large, Uncased:\n24-layer, 1024-hidden, 16-heads, 340M parameters\nBERT-Base, Cased:\n12-layer, 768-hidden, 12-heads , 110M parameters\nBERT-Large, Cased:\n24-layer, 1024-hidden, 16-heads, 340M parameters\nBERT-Base, Multilingual Cased (New, recommended):\n104 languages, 12-layer, 768-hidden, 12-heads, 110M parameters\nBERT-Base, Multilingual Uncased (Orig, not recommended)\n(Not recommended, use Multilingual Cased instead): 102 languages,\n12-layer, 768-hidden, 12-heads, 110M parameters\nBERT-Base, Chinese:\nChinese Simplified and Traditional, 12-layer, 768-hidden, 12-heads, 110M\nparameters\n\nEach .zip file contains three items:\n\nA TensorFlow checkpoint (bert_model.ckpt) containing the pre-trained\nweights (which is actually 3 files).\nA vocab file (vocab.txt) to map WordPiece to word id.\nA config file (bert_config.json) which specifies the hyperparameters of\nthe model.\n\nFine-tuning with BERT\nImportant: All results on the paper were fine-tuned on a single Cloud TPU,\nwhich has 64GB of RAM. It is currently not possible to re-produce most of the\nBERT-Large results on the paper using a GPU with 12GB - 16GB of RAM, because\nthe maximum batch size that can fit in memory is too small. We are working on\nadding code to this repository which allows for much larger effective batch size\non the GPU. See the section on out-of-memory issues for\nmore details.\nThis code was tested with TensorFlow 1.11.0. It was tested with Python2 and\nPython3 (but more thoroughly with Python2, since this is what's used internally\nin Google).\nThe fine-tuning examples which use BERT-Base should be able to run on a GPU\nthat has at least 12GB of RAM using the hyperparameters given.\nFine-tuning with Cloud TPUs\nMost of the examples below assumes that you will be running training\/evaluation\non your local machine, using a GPU like a Titan X or GTX 1080.\nHowever, if you have access to a Cloud TPU that you want to train on, just add\nthe following flags to run_classifier.py or run_squad.py:\n  --use_tpu=True \\\n  --tpu_name=$TPU_NAME\n\nPlease see the\nGoogle Cloud TPU tutorial\nfor how to use Cloud TPUs. Alternatively, you can use the Google Colab notebook\n\"BERT FineTuning with Cloud TPUs\".\nOn Cloud TPUs, the pretrained model and the output directory will need to be on\nGoogle Cloud Storage. For example, if you have a bucket named some_bucket, you\nmight use the following flags instead:\n  --output_dir=gs:\/\/some_bucket\/my_output_dir\/\n\nThe unzipped pre-trained model files can also be found in the Google Cloud\nStorage folder gs:\/\/bert_models\/2018_10_18. For example:\nexport BERT_BASE_DIR=gs:\/\/bert_models\/2018_10_18\/uncased_L-12_H-768_A-12\n\nSentence (and sentence-pair) classification tasks\nBefore running this example you must download the\nGLUE data by running\nthis script\nand unpack it to some directory $GLUE_DIR. Next, download the BERT-Base\ncheckpoint and unzip it to some directory $BERT_BASE_DIR.\nThis example code fine-tunes BERT-Base on the Microsoft Research Paraphrase\nCorpus (MRPC) corpus, which only contains 3,600 examples and can fine-tune in a\nfew minutes on most GPUs.\nexport BERT_BASE_DIR=\/path\/to\/bert\/uncased_L-12_H-768_A-12\nexport GLUE_DIR=\/path\/to\/glue\n\npython run_classifier.py \\\n  --task_name=MRPC \\\n  --do_train=true \\\n  --do_eval=true \\\n  --data_dir=$GLUE_DIR\/MRPC \\\n  --vocab_file=$BERT_BASE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_BASE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_BASE_DIR\/bert_model.ckpt \\\n  --max_seq_length=128 \\\n  --train_batch_size=32 \\\n  --learning_rate=2e-5 \\\n  --num_train_epochs=3.0 \\\n  --output_dir=\/tmp\/mrpc_output\/\nYou should see output like this:\n***** Eval results *****\n  eval_accuracy = 0.845588\n  eval_loss = 0.505248\n  global_step = 343\n  loss = 0.505248\n\nThis means that the Dev set accuracy was 84.55%. Small sets like MRPC have a\nhigh variance in the Dev set accuracy, even when starting from the same\npre-training checkpoint. If you re-run multiple times (making sure to point to\ndifferent output_dir), you should see results between 84% and 88%.\nA few other pre-trained models are implemented off-the-shelf in\nrun_classifier.py, so it should be straightforward to follow those examples to\nuse BERT for any single-sentence or sentence-pair classification task.\nNote: You might see a message Running train on CPU. This really just means\nthat it's running on something other than a Cloud TPU, which includes a GPU.\nPrediction from classifier\nOnce you have trained your classifier you can use it in inference mode by using\nthe --do_predict=true command. You need to have a file named test.tsv in the\ninput folder. Output will be created in file called test_results.tsv in the\noutput folder. Each line will contain output for each sample, columns are the\nclass probabilities.\nexport BERT_BASE_DIR=\/path\/to\/bert\/uncased_L-12_H-768_A-12\nexport GLUE_DIR=\/path\/to\/glue\nexport TRAINED_CLASSIFIER=\/path\/to\/fine\/tuned\/classifier\n\npython run_classifier.py \\\n  --task_name=MRPC \\\n  --do_predict=true \\\n  --data_dir=$GLUE_DIR\/MRPC \\\n  --vocab_file=$BERT_BASE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_BASE_DIR\/bert_config.json \\\n  --init_checkpoint=$TRAINED_CLASSIFIER \\\n  --max_seq_length=128 \\\n  --output_dir=\/tmp\/mrpc_output\/\nSQuAD 1.1\nThe Stanford Question Answering Dataset (SQuAD) is a popular question answering\nbenchmark dataset. BERT (at the time of the release) obtains state-of-the-art\nresults on SQuAD with almost no task-specific network architecture modifications\nor data augmentation. However, it does require semi-complex data pre-processing\nand post-processing to deal with (a) the variable-length nature of SQuAD context\nparagraphs, and (b) the character-level answer annotations which are used for\nSQuAD training. This processing is implemented and documented in run_squad.py.\nTo run on SQuAD, you will first need to download the dataset. The\nSQuAD website does not seem to\nlink to the v1.1 datasets any longer, but the necessary files can be found here:\n\ntrain-v1.1.json\ndev-v1.1.json\nevaluate-v1.1.py\n\nDownload these to some directory $SQUAD_DIR.\nThe state-of-the-art SQuAD results from the paper currently cannot be reproduced\non a 12GB-16GB GPU due to memory constraints (in fact, even batch size 1 does\nnot seem to fit on a 12GB GPU using BERT-Large). However, a reasonably strong\nBERT-Base model can be trained on the GPU with these hyperparameters:\npython run_squad.py \\\n  --vocab_file=$BERT_BASE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_BASE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_BASE_DIR\/bert_model.ckpt \\\n  --do_train=True \\\n  --train_file=$SQUAD_DIR\/train-v1.1.json \\\n  --do_predict=True \\\n  --predict_file=$SQUAD_DIR\/dev-v1.1.json \\\n  --train_batch_size=12 \\\n  --learning_rate=3e-5 \\\n  --num_train_epochs=2.0 \\\n  --max_seq_length=384 \\\n  --doc_stride=128 \\\n  --output_dir=\/tmp\/squad_base\/\nThe dev set predictions will be saved into a file called predictions.json in\nthe output_dir:\npython $SQUAD_DIR\/evaluate-v1.1.py $SQUAD_DIR\/dev-v1.1.json .\/squad\/predictions.json\nWhich should produce an output like this:\n{\"f1\": 88.41249612335034, \"exact_match\": 81.2488174077578}\nYou should see a result similar to the 88.5% reported in the paper for\nBERT-Base.\nIf you have access to a Cloud TPU, you can train with BERT-Large. Here is a\nset of hyperparameters (slightly different than the paper) which consistently\nobtain around 90.5%-91.0% F1 single-system trained only on SQuAD:\npython run_squad.py \\\n  --vocab_file=$BERT_LARGE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_LARGE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_LARGE_DIR\/bert_model.ckpt \\\n  --do_train=True \\\n  --train_file=$SQUAD_DIR\/train-v1.1.json \\\n  --do_predict=True \\\n  --predict_file=$SQUAD_DIR\/dev-v1.1.json \\\n  --train_batch_size=24 \\\n  --learning_rate=3e-5 \\\n  --num_train_epochs=2.0 \\\n  --max_seq_length=384 \\\n  --doc_stride=128 \\\n  --output_dir=gs:\/\/some_bucket\/squad_large\/ \\\n  --use_tpu=True \\\n  --tpu_name=$TPU_NAME\nFor example, one random run with these parameters produces the following Dev\nscores:\n{\"f1\": 90.87081895814865, \"exact_match\": 84.38978240302744}\nIf you fine-tune for one epoch on\nTriviaQA before this the results will\nbe even better, but you will need to convert TriviaQA into the SQuAD json\nformat.\nSQuAD 2.0\nThis model is also implemented and documented in run_squad.py.\nTo run on SQuAD 2.0, you will first need to download the dataset. The necessary\nfiles can be found here:\n\ntrain-v2.0.json\ndev-v2.0.json\nevaluate-v2.0.py\n\nDownload these to some directory $SQUAD_DIR.\nOn Cloud TPU you can run with BERT-Large as follows:\npython run_squad.py \\\n  --vocab_file=$BERT_LARGE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_LARGE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_LARGE_DIR\/bert_model.ckpt \\\n  --do_train=True \\\n  --train_file=$SQUAD_DIR\/train-v2.0.json \\\n  --do_predict=True \\\n  --predict_file=$SQUAD_DIR\/dev-v2.0.json \\\n  --train_batch_size=24 \\\n  --learning_rate=3e-5 \\\n  --num_train_epochs=2.0 \\\n  --max_seq_length=384 \\\n  --doc_stride=128 \\\n  --output_dir=gs:\/\/some_bucket\/squad_large\/ \\\n  --use_tpu=True \\\n  --tpu_name=$TPU_NAME \\\n  --version_2_with_negative=True\nWe assume you have copied everything from the output directory to a local\ndirectory called .\/squad\/. The initial dev set predictions will be at\n.\/squad\/predictions.json and the differences between the score of no answer (\"\")\nand the best non-null answer for each question will be in the file\n.\/squad\/null_odds.json\nRun this script to tune a threshold for predicting null versus non-null answers:\npython $SQUAD_DIR\/evaluate-v2.0.py $SQUAD_DIR\/dev-v2.0.json\n.\/squad\/predictions.json --na-prob-file .\/squad\/null_odds.json\nAssume the script outputs \"best_f1_thresh\" THRESH. (Typical values are between\n-1.0 and -5.0). You can now re-run the model to generate predictions with the\nderived threshold or alternatively you can extract the appropriate answers from\n.\/squad\/nbest_predictions.json.\npython run_squad.py \\\n  --vocab_file=$BERT_LARGE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_LARGE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_LARGE_DIR\/bert_model.ckpt \\\n  --do_train=False \\\n  --train_file=$SQUAD_DIR\/train-v2.0.json \\\n  --do_predict=True \\\n  --predict_file=$SQUAD_DIR\/dev-v2.0.json \\\n  --train_batch_size=24 \\\n  --learning_rate=3e-5 \\\n  --num_train_epochs=2.0 \\\n  --max_seq_length=384 \\\n  --doc_stride=128 \\\n  --output_dir=gs:\/\/some_bucket\/squad_large\/ \\\n  --use_tpu=True \\\n  --tpu_name=$TPU_NAME \\\n  --version_2_with_negative=True \\\n  --null_score_diff_threshold=$THRESH\nOut-of-memory issues\nAll experiments in the paper were fine-tuned on a Cloud TPU, which has 64GB of\ndevice RAM. Therefore, when using a GPU with 12GB - 16GB of RAM, you are likely\nto encounter out-of-memory issues if you use the same hyperparameters described\nin the paper.\nThe factors that affect memory usage are:\n\n\nmax_seq_length: The released models were trained with sequence lengths\nup to 512, but you can fine-tune with a shorter max sequence length to save\nsubstantial memory. This is controlled by the max_seq_length flag in our\nexample code.\n\n\ntrain_batch_size: The memory usage is also directly proportional to\nthe batch size.\n\n\nModel type, BERT-Base vs. BERT-Large: The BERT-Large model\nrequires significantly more memory than BERT-Base.\n\n\nOptimizer: The default optimizer for BERT is Adam, which requires a lot\nof extra memory to store the m and v vectors. Switching to a more memory\nefficient optimizer can reduce memory usage, but can also affect the\nresults. We have not experimented with other optimizers for fine-tuning.\n\n\nUsing the default training scripts (run_classifier.py and run_squad.py), we\nbenchmarked the maximum batch size on single Titan X GPU (12GB RAM) with\nTensorFlow 1.11.0:\n\n\n\nSystem\nSeq Length\nMax Batch Size\n\n\n\n\nBERT-Base\n64\n64\n\n\n...\n128\n32\n\n\n...\n256\n16\n\n\n...\n320\n14\n\n\n...\n384\n12\n\n\n...\n512\n6\n\n\nBERT-Large\n64\n12\n\n\n...\n128\n6\n\n\n...\n256\n2\n\n\n...\n320\n1\n\n\n...\n384\n0\n\n\n...\n512\n0\n\n\n\nUnfortunately, these max batch sizes for BERT-Large are so small that they\nwill actually harm the model accuracy, regardless of the learning rate used. We\nare working on adding code to this repository which will allow much larger\neffective batch sizes to be used on the GPU. The code will be based on one (or\nboth) of the following techniques:\n\n\nGradient accumulation: The samples in a minibatch are typically\nindependent with respect to gradient computation (excluding batch\nnormalization, which is not used here). This means that the gradients of\nmultiple smaller minibatches can be accumulated before performing the weight\nupdate, and this will be exactly equivalent to a single larger update.\n\n\nGradient checkpointing:\nThe major use of GPU\/TPU memory during DNN training is caching the\nintermediate activations in the forward pass that are necessary for\nefficient computation in the backward pass. \"Gradient checkpointing\" trades\nmemory for compute time by re-computing the activations in an intelligent\nway.\n\n\nHowever, this is not implemented in the current release.\nUsing BERT to extract fixed feature vectors (like ELMo)\nIn certain cases, rather than fine-tuning the entire pre-trained model\nend-to-end, it can be beneficial to obtained pre-trained contextual\nembeddings, which are fixed contextual representations of each input token\ngenerated from the hidden layers of the pre-trained model. This should also\nmitigate most of the out-of-memory issues.\nAs an example, we include the script extract_features.py which can be used\nlike this:\n# Sentence A and Sentence B are separated by the ||| delimiter for sentence\n# pair tasks like question answering and entailment.\n# For single sentence inputs, put one sentence per line and DON'T use the\n# delimiter.\necho 'Who was Jim Henson ? ||| Jim Henson was a puppeteer' > \/tmp\/input.txt\n\npython extract_features.py \\\n  --input_file=\/tmp\/input.txt \\\n  --output_file=\/tmp\/output.jsonl \\\n  --vocab_file=$BERT_BASE_DIR\/vocab.txt \\\n  --bert_config_file=$BERT_BASE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_BASE_DIR\/bert_model.ckpt \\\n  --layers=-1,-2,-3,-4 \\\n  --max_seq_length=128 \\\n  --batch_size=8\nThis will create a JSON file (one line per line of input) containing the BERT\nactivations from each Transformer layer specified by layers (-1 is the final\nhidden layer of the Transformer, etc.)\nNote that this script will produce very large output files (by default, around\n15kb for every input token).\nIf you need to maintain alignment between the original and tokenized words (for\nprojecting training labels), see the Tokenization section\nbelow.\nNote: You may see a message like Could not find trained model in model_dir: \/tmp\/tmpuB5g5c, running initialization to predict. This message is expected, it\njust means that we are using the init_from_checkpoint() API rather than the\nsaved model API. If you don't specify a checkpoint or specify an invalid\ncheckpoint, this script will complain.\nTokenization\nFor sentence-level tasks (or sentence-pair) tasks, tokenization is very simple.\nJust follow the example code in run_classifier.py and extract_features.py.\nThe basic procedure for sentence-level tasks is:\n\n\nInstantiate an instance of tokenizer = tokenization.FullTokenizer\n\n\nTokenize the raw text with tokens = tokenizer.tokenize(raw_text).\n\n\nTruncate to the maximum sequence length. (You can use up to 512, but you\nprobably want to use shorter if possible for memory and speed reasons.)\n\n\nAdd the [CLS] and [SEP] tokens in the right place.\n\n\nWord-level and span-level tasks (e.g., SQuAD and NER) are more complex, since\nyou need to maintain alignment between your input text and output text so that\nyou can project your training labels. SQuAD is a particularly complex example\nbecause the input labels are character-based, and SQuAD paragraphs are often\nlonger than our maximum sequence length. See the code in run_squad.py to show\nhow we handle this.\nBefore we describe the general recipe for handling word-level tasks, it's\nimportant to understand what exactly our tokenizer is doing. It has three main\nsteps:\n\n\nText normalization: Convert all whitespace characters to spaces, and\n(for the Uncased model) lowercase the input and strip out accent markers.\nE.g., John Johanson's, \u2192 john johanson's,.\n\n\nPunctuation splitting: Split all punctuation characters on both sides\n(i.e., add whitespace around all punctuation characters). Punctuation\ncharacters are defined as (a) Anything with a P* Unicode class, (b) any\nnon-letter\/number\/space ASCII character (e.g., characters like $ which are\ntechnically not punctuation). E.g., john johanson's, \u2192 john johanson ' s ,\n\n\nWordPiece tokenization: Apply whitespace tokenization to the output of\nthe above procedure, and apply\nWordPiece\ntokenization to each token separately. (Our implementation is directly based\non the one from tensor2tensor, which is linked). E.g., john johanson ' s , \u2192 john johan ##son ' s ,\n\n\nThe advantage of this scheme is that it is \"compatible\" with most existing\nEnglish tokenizers. For example, imagine that you have a part-of-speech tagging\ntask which looks like this:\nInput:  John Johanson 's   house\nLabels: NNP  NNP      POS NN\n\nThe tokenized output will look like this:\nTokens: john johan ##son ' s house\n\nCrucially, this would be the same output as if the raw text were John Johanson's house (with no space before the 's).\nIf you have a pre-tokenized representation with word-level annotations, you can\nsimply tokenize each input word independently, and deterministically maintain an\noriginal-to-tokenized alignment:\n### Input\norig_tokens = [\"John\", \"Johanson\", \"'s\",  \"house\"]\nlabels      = [\"NNP\",  \"NNP\",      \"POS\", \"NN\"]\n\n### Output\nbert_tokens = []\n\n# Token map will be an int -> int mapping between the `orig_tokens` index and\n# the `bert_tokens` index.\norig_to_tok_map = []\n\ntokenizer = tokenization.FullTokenizer(\n    vocab_file=vocab_file, do_lower_case=True)\n\nbert_tokens.append(\"[CLS]\")\nfor orig_token in orig_tokens:\n  orig_to_tok_map.append(len(bert_tokens))\n  bert_tokens.extend(tokenizer.tokenize(orig_token))\nbert_tokens.append(\"[SEP]\")\n\n# bert_tokens == [\"[CLS]\", \"john\", \"johan\", \"##son\", \"'\", \"s\", \"house\", \"[SEP]\"]\n# orig_to_tok_map == [1, 2, 4, 6]\nNow orig_to_tok_map can be used to project labels to the tokenized\nrepresentation.\nThere are common English tokenization schemes which will cause a slight mismatch\nbetween how BERT was pre-trained. For example, if your input tokenization splits\noff contractions like do n't, this will cause a mismatch. If it is possible to\ndo so, you should pre-process your data to convert these back to raw-looking\ntext, but if it's not possible, this mismatch is likely not a big deal.\nPre-training with BERT\nWe are releasing code to do \"masked LM\" and \"next sentence prediction\" on an\narbitrary text corpus. Note that this is not the exact code that was used for\nthe paper (the original code was written in C++, and had some additional\ncomplexity), but this code does generate pre-training data as described in the\npaper.\nHere's how to run the data generation. The input is a plain text file, with one\nsentence per line. (It is important that these be actual sentences for the \"next\nsentence prediction\" task). Documents are delimited by empty lines. The output\nis a set of tf.train.Examples serialized into TFRecord file format.\nYou can perform sentence segmentation with an off-the-shelf NLP toolkit such as\nspaCy. The create_pretraining_data.py script will\nconcatenate segments until they reach the maximum sequence length to minimize\ncomputational waste from padding (see the script for more details). However, you\nmay want to intentionally add a slight amount of noise to your input data (e.g.,\nrandomly truncate 2% of input segments) to make it more robust to non-sentential\ninput during fine-tuning.\nThis script stores all of the examples for the entire input file in memory, so\nfor large data files you should shard the input file and call the script\nmultiple times. (You can pass in a file glob to run_pretraining.py, e.g.,\ntf_examples.tf_record*.)\nThe max_predictions_per_seq is the maximum number of masked LM predictions per\nsequence. You should set this to around max_seq_length * masked_lm_prob (the\nscript doesn't do that automatically because the exact value needs to be passed\nto both scripts).\npython create_pretraining_data.py \\\n  --input_file=.\/sample_text.txt \\\n  --output_file=\/tmp\/tf_examples.tfrecord \\\n  --vocab_file=$BERT_BASE_DIR\/vocab.txt \\\n  --do_lower_case=True \\\n  --max_seq_length=128 \\\n  --max_predictions_per_seq=20 \\\n  --masked_lm_prob=0.15 \\\n  --random_seed=12345 \\\n  --dupe_factor=5\nHere's how to run the pre-training. Do not include init_checkpoint if you are\npre-training from scratch. The model configuration (including vocab size) is\nspecified in bert_config_file. This demo code only pre-trains for a small\nnumber of steps (20), but in practice you will probably want to set\nnum_train_steps to 10000 steps or more. The max_seq_length and\nmax_predictions_per_seq parameters passed to run_pretraining.py must be the\nsame as create_pretraining_data.py.\npython run_pretraining.py \\\n  --input_file=\/tmp\/tf_examples.tfrecord \\\n  --output_dir=\/tmp\/pretraining_output \\\n  --do_train=True \\\n  --do_eval=True \\\n  --bert_config_file=$BERT_BASE_DIR\/bert_config.json \\\n  --init_checkpoint=$BERT_BASE_DIR\/bert_model.ckpt \\\n  --train_batch_size=32 \\\n  --max_seq_length=128 \\\n  --max_predictions_per_seq=20 \\\n  --num_train_steps=20 \\\n  --num_warmup_steps=10 \\\n  --learning_rate=2e-5\nThis will produce an output like this:\n***** Eval results *****\n  global_step = 20\n  loss = 0.0979674\n  masked_lm_accuracy = 0.985479\n  masked_lm_loss = 0.0979328\n  next_sentence_accuracy = 1.0\n  next_sentence_loss = 3.45724e-05\n\nNote that since our sample_text.txt file is very small, this example training\nwill overfit that data in only a few steps and produce unrealistically high\naccuracy numbers.\nPre-training tips and caveats\n\nIf using your own vocabulary, make sure to change vocab_size in\nbert_config.json. If you use a larger vocabulary without changing this,\nyou will likely get NaNs when training on GPU or TPU due to unchecked\nout-of-bounds access.\nIf your task has a large domain-specific corpus available (e.g., \"movie\nreviews\" or \"scientific papers\"), it will likely be beneficial to run\nadditional steps of pre-training on your corpus, starting from the BERT\ncheckpoint.\nThe learning rate we used in the paper was 1e-4. However, if you are doing\nadditional steps of pre-training starting from an existing BERT checkpoint,\nyou should use a smaller learning rate (e.g., 2e-5).\nCurrent BERT models are English-only, but we do plan to release a\nmultilingual model which has been pre-trained on a lot of languages in the\nnear future (hopefully by the end of November 2018).\nLonger sequences are disproportionately expensive because attention is\nquadratic to the sequence length. In other words, a batch of 64 sequences of\nlength 512 is much more expensive than a batch of 256 sequences of\nlength 128. The fully-connected\/convolutional cost is the same, but the\nattention cost is far greater for the 512-length sequences. Therefore, one\ngood recipe is to pre-train for, say, 90,000 steps with a sequence length of\n128 and then for 10,000 additional steps with a sequence length of 512. The\nvery long sequences are mostly needed to learn positional embeddings, which\ncan be learned fairly quickly. Note that this does require generating the\ndata twice with different values of max_seq_length.\nIf you are pre-training from scratch, be prepared that pre-training is\ncomputationally expensive, especially on GPUs. If you are pre-training from\nscratch, our recommended recipe is to pre-train a BERT-Base on a single\npreemptible Cloud TPU v2, which\ntakes about 2 weeks at a cost of about $500 USD (based on the pricing in\nOctober 2018). You will have to scale down the batch size when only training\non a single Cloud TPU, compared to what was used in the paper. It is\nrecommended to use the largest batch size that fits into TPU memory.\n\nPre-training data\nWe will not be able to release the pre-processed datasets used in the paper.\nFor Wikipedia, the recommended pre-processing is to download\nthe latest dump,\nextract the text with\nWikiExtractor.py, and then apply\nany necessary cleanup to convert it into plain text.\nUnfortunately the researchers who collected the\nBookCorpus no longer have it available for\npublic download. The\nProject Guttenberg Dataset\nis a somewhat smaller (200M word) collection of older books that are public\ndomain.\nCommon Crawl is another very large collection of\ntext, but you will likely have to do substantial pre-processing and cleanup to\nextract a usable corpus for pre-training BERT.\nLearning a new WordPiece vocabulary\nThis repository does not include code for learning a new WordPiece vocabulary.\nThe reason is that the code used in the paper was implemented in C++ with\ndependencies on Google's internal libraries. For English, it is almost always\nbetter to just start with our vocabulary and pre-trained models. For learning\nvocabularies of other languages, there are a number of open source options\navailable. However, keep in mind that these are not compatible with our\ntokenization.py library:\n\n\nGoogle's SentencePiece library\n\n\ntensor2tensor's WordPiece generation script\n\n\nRico Sennrich's Byte Pair Encoding library\n\n\nUsing BERT in Colab\nIf you want to use BERT with Colab, you can\nget started with the notebook\n\"BERT FineTuning with Cloud TPUs\".\nAt the time of this writing (October 31st, 2018), Colab users can access a\nCloud TPU completely for free. Note: One per user, availability limited,\nrequires a Google Cloud Platform account with storage (although storage may be\npurchased with free credit for signing up with GCP), and this capability may not\nlonger be available in the future. Click on the BERT Colab that was just linked\nfor more information.\nFAQ\nIs this code compatible with Cloud TPUs? What about GPUs?\nYes, all of the code in this repository works out-of-the-box with CPU, GPU, and\nCloud TPU. However, GPU training is single-GPU only.\nI am getting out-of-memory errors, what is wrong?\nSee the section on out-of-memory issues for more\ninformation.\nIs there a PyTorch version available?\nThere is no official PyTorch implementation. However, NLP researchers from\nHuggingFace made a\nPyTorch version of BERT available\nwhich is compatible with our pre-trained checkpoints and is able to reproduce\nour results. We were not involved in the creation or maintenance of the PyTorch\nimplementation so please direct any questions towards the authors of that\nrepository.\nIs there a Chainer version available?\nThere is no official Chainer implementation. However, Sosuke Kobayashi made a\nChainer version of BERT available\nwhich is compatible with our pre-trained checkpoints and is able to reproduce\nour results. We were not involved in the creation or maintenance of the Chainer\nimplementation so please direct any questions towards the authors of that\nrepository.\nWill models in other languages be released?\nYes, we plan to release a multi-lingual BERT model in the near future. We cannot\nmake promises about exactly which languages will be included, but it will likely\nbe a single model which includes most of the languages which have a\nsignificantly-sized Wikipedia.\nWill models larger than BERT-Large be released?\nSo far we have not attempted to train anything larger than BERT-Large. It is\npossible that we will release larger models if we are able to obtain significant\nimprovements.\nWhat license is this library released under?\nAll code and models are released under the Apache 2.0 license. See the\nLICENSE file for more information.\nHow do I cite BERT?\nFor now, cite the Arxiv paper:\n@article{devlin2018bert,\n  title={BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding},\n  author={Devlin, Jacob and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},\n  journal={arXiv preprint arXiv:1810.04805},\n  year={2018}\n}\n\nIf we submit the paper to a conference or journal, we will update the BibTeX.\nDisclaimer\nThis is not an official Google product.\nContact information\nFor help or issues using BERT, please submit a GitHub issue.\nFor personal communication related to BERT, please contact Jacob Devlin\n(jacobdevlin@google.com), Ming-Wei Chang (mingweichang@google.com), or\nKenton Lee (kentonl@google.com).\n","150":"jieba\n\u201c\u7ed3\u5df4\u201d\u4e2d\u6587\u5206\u8bcd\uff1a\u505a\u6700\u597d\u7684 Python \u4e2d\u6587\u5206\u8bcd\u7ec4\u4ef6\n\"Jieba\" (Chinese for \"to stutter\") Chinese text segmentation: built to be the best Python Chinese word segmentation module.\n\nScroll down for English documentation.\n\n\u7279\u70b9\n\n\u652f\u6301\u56db\u79cd\u5206\u8bcd\u6a21\u5f0f\uff1a\n\n\u7cbe\u786e\u6a21\u5f0f\uff0c\u8bd5\u56fe\u5c06\u53e5\u5b50\u6700\u7cbe\u786e\u5730\u5207\u5f00\uff0c\u9002\u5408\u6587\u672c\u5206\u6790\uff1b\n\u5168\u6a21\u5f0f\uff0c\u628a\u53e5\u5b50\u4e2d\u6240\u6709\u7684\u53ef\u4ee5\u6210\u8bcd\u7684\u8bcd\u8bed\u90fd\u626b\u63cf\u51fa\u6765, \u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u4e0d\u80fd\u89e3\u51b3\u6b67\u4e49\uff1b\n\u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\uff0c\u5728\u7cbe\u786e\u6a21\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u957f\u8bcd\u518d\u6b21\u5207\u5206\uff0c\u63d0\u9ad8\u53ec\u56de\u7387\uff0c\u9002\u5408\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u5206\u8bcd\u3002\npaddle\u6a21\u5f0f\uff0c\u5229\u7528PaddlePaddle\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u8bad\u7ec3\u5e8f\u5217\u6807\u6ce8\uff08\u53cc\u5411GRU\uff09\u7f51\u7edc\u6a21\u578b\u5b9e\u73b0\u5206\u8bcd\u3002\u540c\u65f6\u652f\u6301\u8bcd\u6027\u6807\u6ce8\u3002paddle\u6a21\u5f0f\u4f7f\u7528\u9700\u5b89\u88c5paddlepaddle-tiny\uff0cpip install paddlepaddle-tiny==1.6.1\u3002\u76ee\u524dpaddle\u6a21\u5f0f\u652f\u6301jieba v0.40\u53ca\u4ee5\u4e0a\u7248\u672c\u3002jieba v0.40\u4ee5\u4e0b\u7248\u672c\uff0c\u8bf7\u5347\u7ea7jieba\uff0cpip install jieba --upgrade \u3002PaddlePaddle\u5b98\u7f51\n\n\n\u652f\u6301\u7e41\u4f53\u5206\u8bcd\n\u652f\u6301\u81ea\u5b9a\u4e49\u8bcd\u5178\nMIT \u6388\u6743\u534f\u8bae\n\n\u5b89\u88c5\u8bf4\u660e\n\u4ee3\u7801\u5bf9 Python 2\/3 \u5747\u517c\u5bb9\n\n\u5168\u81ea\u52a8\u5b89\u88c5\uff1aeasy_install jieba \u6216\u8005 pip install jieba \/ pip3 install jieba\n\u534a\u81ea\u52a8\u5b89\u88c5\uff1a\u5148\u4e0b\u8f7d http:\/\/pypi.python.org\/pypi\/jieba\/ \uff0c\u89e3\u538b\u540e\u8fd0\u884c python setup.py install\n\u624b\u52a8\u5b89\u88c5\uff1a\u5c06 jieba \u76ee\u5f55\u653e\u7f6e\u4e8e\u5f53\u524d\u76ee\u5f55\u6216\u8005 site-packages \u76ee\u5f55\n\u901a\u8fc7 import jieba \u6765\u5f15\u7528\n\u5982\u679c\u9700\u8981\u4f7f\u7528paddle\u6a21\u5f0f\u4e0b\u7684\u5206\u8bcd\u548c\u8bcd\u6027\u6807\u6ce8\u529f\u80fd\uff0c\u8bf7\u5148\u5b89\u88c5paddlepaddle-tiny\uff0cpip install paddlepaddle-tiny==1.6.1\u3002\n\n\u7b97\u6cd5\n\n\u57fa\u4e8e\u524d\u7f00\u8bcd\u5178\u5b9e\u73b0\u9ad8\u6548\u7684\u8bcd\u56fe\u626b\u63cf\uff0c\u751f\u6210\u53e5\u5b50\u4e2d\u6c49\u5b57\u6240\u6709\u53ef\u80fd\u6210\u8bcd\u60c5\u51b5\u6240\u6784\u6210\u7684\u6709\u5411\u65e0\u73af\u56fe (DAG)\n\u91c7\u7528\u4e86\u52a8\u6001\u89c4\u5212\u67e5\u627e\u6700\u5927\u6982\u7387\u8def\u5f84, \u627e\u51fa\u57fa\u4e8e\u8bcd\u9891\u7684\u6700\u5927\u5207\u5206\u7ec4\u5408\n\u5bf9\u4e8e\u672a\u767b\u5f55\u8bcd\uff0c\u91c7\u7528\u4e86\u57fa\u4e8e\u6c49\u5b57\u6210\u8bcd\u80fd\u529b\u7684 HMM \u6a21\u578b\uff0c\u4f7f\u7528\u4e86 Viterbi \u7b97\u6cd5\n\n\u4e3b\u8981\u529f\u80fd\n\n\u5206\u8bcd\n\n\n\njieba.cut \u65b9\u6cd5\u63a5\u53d7\u56db\u4e2a\u8f93\u5165\u53c2\u6570: \u9700\u8981\u5206\u8bcd\u7684\u5b57\u7b26\u4e32\uff1bcut_all \u53c2\u6570\u7528\u6765\u63a7\u5236\u662f\u5426\u91c7\u7528\u5168\u6a21\u5f0f\uff1bHMM \u53c2\u6570\u7528\u6765\u63a7\u5236\u662f\u5426\u4f7f\u7528 HMM \u6a21\u578b\uff1buse_paddle \u53c2\u6570\u7528\u6765\u63a7\u5236\u662f\u5426\u4f7f\u7528paddle\u6a21\u5f0f\u4e0b\u7684\u5206\u8bcd\u6a21\u5f0f\uff0cpaddle\u6a21\u5f0f\u91c7\u7528\u5ef6\u8fdf\u52a0\u8f7d\u65b9\u5f0f\uff0c\u901a\u8fc7enable_paddle\u63a5\u53e3\u5b89\u88c5paddlepaddle-tiny\uff0c\u5e76\u4e14import\u76f8\u5173\u4ee3\u7801\uff1b\njieba.cut_for_search \u65b9\u6cd5\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff1a\u9700\u8981\u5206\u8bcd\u7684\u5b57\u7b26\u4e32\uff1b\u662f\u5426\u4f7f\u7528 HMM \u6a21\u578b\u3002\u8be5\u65b9\u6cd5\u9002\u5408\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u6784\u5efa\u5012\u6392\u7d22\u5f15\u7684\u5206\u8bcd\uff0c\u7c92\u5ea6\u6bd4\u8f83\u7ec6\n\u5f85\u5206\u8bcd\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u662f unicode \u6216 UTF-8 \u5b57\u7b26\u4e32\u3001GBK \u5b57\u7b26\u4e32\u3002\u6ce8\u610f\uff1a\u4e0d\u5efa\u8bae\u76f4\u63a5\u8f93\u5165 GBK \u5b57\u7b26\u4e32\uff0c\u53ef\u80fd\u65e0\u6cd5\u9884\u6599\u5730\u9519\u8bef\u89e3\u7801\u6210 UTF-8\njieba.cut \u4ee5\u53ca jieba.cut_for_search \u8fd4\u56de\u7684\u7ed3\u6784\u90fd\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684 generator\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u6765\u83b7\u5f97\u5206\u8bcd\u540e\u5f97\u5230\u7684\u6bcf\u4e00\u4e2a\u8bcd\u8bed(unicode)\uff0c\u6216\u8005\u7528\njieba.lcut \u4ee5\u53ca jieba.lcut_for_search \u76f4\u63a5\u8fd4\u56de list\njieba.Tokenizer(dictionary=DEFAULT_DICT) \u65b0\u5efa\u81ea\u5b9a\u4e49\u5206\u8bcd\u5668\uff0c\u53ef\u7528\u4e8e\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u8bcd\u5178\u3002jieba.dt \u4e3a\u9ed8\u8ba4\u5206\u8bcd\u5668\uff0c\u6240\u6709\u5168\u5c40\u5206\u8bcd\u76f8\u5173\u51fd\u6570\u90fd\u662f\u8be5\u5206\u8bcd\u5668\u7684\u6620\u5c04\u3002\n\n\u4ee3\u7801\u793a\u4f8b\n# encoding=utf-8\nimport jieba\n\njieba.enable_paddle()# \u542f\u52a8paddle\u6a21\u5f0f\u3002 0.40\u7248\u4e4b\u540e\u5f00\u59cb\u652f\u6301\uff0c\u65e9\u671f\u7248\u672c\u4e0d\u652f\u6301\nstrs=[\"\u6211\u6765\u5230\u5317\u4eac\u6e05\u534e\u5927\u5b66\",\"\u4e52\u4e53\u7403\u62cd\u5356\u5b8c\u4e86\",\"\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\"]\nfor str in strs:\n    seg_list = jieba.cut(str,use_paddle=True) # \u4f7f\u7528paddle\u6a21\u5f0f\n    print(\"Paddle Mode: \" + '\/'.join(list(seg_list)))\n\nseg_list = jieba.cut(\"\u6211\u6765\u5230\u5317\u4eac\u6e05\u534e\u5927\u5b66\", cut_all=True)\nprint(\"Full Mode: \" + \"\/ \".join(seg_list))  # \u5168\u6a21\u5f0f\n\nseg_list = jieba.cut(\"\u6211\u6765\u5230\u5317\u4eac\u6e05\u534e\u5927\u5b66\", cut_all=False)\nprint(\"Default Mode: \" + \"\/ \".join(seg_list))  # \u7cbe\u786e\u6a21\u5f0f\n\nseg_list = jieba.cut(\"\u4ed6\u6765\u5230\u4e86\u7f51\u6613\u676d\u7814\u5927\u53a6\")  # \u9ed8\u8ba4\u662f\u7cbe\u786e\u6a21\u5f0f\nprint(\", \".join(seg_list))\n\nseg_list = jieba.cut_for_search(\"\u5c0f\u660e\u7855\u58eb\u6bd5\u4e1a\u4e8e\u4e2d\u56fd\u79d1\u5b66\u9662\u8ba1\u7b97\u6240\uff0c\u540e\u5728\u65e5\u672c\u4eac\u90fd\u5927\u5b66\u6df1\u9020\")  # \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\nprint(\", \".join(seg_list))\n\u8f93\u51fa:\n\u3010\u5168\u6a21\u5f0f\u3011: \u6211\/ \u6765\u5230\/ \u5317\u4eac\/ \u6e05\u534e\/ \u6e05\u534e\u5927\u5b66\/ \u534e\u5927\/ \u5927\u5b66\n\n\u3010\u7cbe\u786e\u6a21\u5f0f\u3011: \u6211\/ \u6765\u5230\/ \u5317\u4eac\/ \u6e05\u534e\u5927\u5b66\n\n\u3010\u65b0\u8bcd\u8bc6\u522b\u3011\uff1a\u4ed6, \u6765\u5230, \u4e86, \u7f51\u6613, \u676d\u7814, \u5927\u53a6    (\u6b64\u5904\uff0c\u201c\u676d\u7814\u201d\u5e76\u6ca1\u6709\u5728\u8bcd\u5178\u4e2d\uff0c\u4f46\u662f\u4e5f\u88abViterbi\u7b97\u6cd5\u8bc6\u522b\u51fa\u6765\u4e86)\n\n\u3010\u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\u3011\uff1a \u5c0f\u660e, \u7855\u58eb, \u6bd5\u4e1a, \u4e8e, \u4e2d\u56fd, \u79d1\u5b66, \u5b66\u9662, \u79d1\u5b66\u9662, \u4e2d\u56fd\u79d1\u5b66\u9662, \u8ba1\u7b97, \u8ba1\u7b97\u6240, \u540e, \u5728, \u65e5\u672c, \u4eac\u90fd, \u5927\u5b66, \u65e5\u672c\u4eac\u90fd\u5927\u5b66, \u6df1\u9020\n\n\n\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8bcd\u5178\n\n\n\u8f7d\u5165\u8bcd\u5178\n\n\u5f00\u53d1\u8005\u53ef\u4ee5\u6307\u5b9a\u81ea\u5df1\u81ea\u5b9a\u4e49\u7684\u8bcd\u5178\uff0c\u4ee5\u4fbf\u5305\u542b jieba \u8bcd\u5e93\u91cc\u6ca1\u6709\u7684\u8bcd\u3002\u867d\u7136 jieba \u6709\u65b0\u8bcd\u8bc6\u522b\u80fd\u529b\uff0c\u4f46\u662f\u81ea\u884c\u6dfb\u52a0\u65b0\u8bcd\u53ef\u4ee5\u4fdd\u8bc1\u66f4\u9ad8\u7684\u6b63\u786e\u7387\n\u7528\u6cd5\uff1a jieba.load_userdict(file_name) # file_name \u4e3a\u6587\u4ef6\u7c7b\u5bf9\u8c61\u6216\u81ea\u5b9a\u4e49\u8bcd\u5178\u7684\u8def\u5f84\n\u8bcd\u5178\u683c\u5f0f\u548c dict.txt \u4e00\u6837\uff0c\u4e00\u4e2a\u8bcd\u5360\u4e00\u884c\uff1b\u6bcf\u4e00\u884c\u5206\u4e09\u90e8\u5206\uff1a\u8bcd\u8bed\u3001\u8bcd\u9891\uff08\u53ef\u7701\u7565\uff09\u3001\u8bcd\u6027\uff08\u53ef\u7701\u7565\uff09\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u987a\u5e8f\u4e0d\u53ef\u98a0\u5012\u3002file_name \u82e5\u4e3a\u8def\u5f84\u6216\u4e8c\u8fdb\u5236\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u5219\u6587\u4ef6\u5fc5\u987b\u4e3a UTF-8 \u7f16\u7801\u3002\n\u8bcd\u9891\u7701\u7565\u65f6\u4f7f\u7528\u81ea\u52a8\u8ba1\u7b97\u7684\u80fd\u4fdd\u8bc1\u5206\u51fa\u8be5\u8bcd\u7684\u8bcd\u9891\u3002\n\n\u4f8b\u5982\uff1a\n\u521b\u65b0\u529e 3 i\n\u4e91\u8ba1\u7b97 5\n\u51f1\u7279\u7433 nz\n\u53f0\u4e2d\n\n\n\n\u66f4\u6539\u5206\u8bcd\u5668\uff08\u9ed8\u8ba4\u4e3a jieba.dt\uff09\u7684 tmp_dir \u548c cache_file \u5c5e\u6027\uff0c\u53ef\u5206\u522b\u6307\u5b9a\u7f13\u5b58\u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u5939\u53ca\u5176\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u53d7\u9650\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\n\n\n\u8303\u4f8b\uff1a\n\n\n\u81ea\u5b9a\u4e49\u8bcd\u5178\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/userdict.txt\n\n\n\u7528\u6cd5\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/test_userdict.py\n\n\n\u4e4b\u524d\uff1a \u674e\u5c0f\u798f \/ \u662f \/ \u521b\u65b0 \/ \u529e \/ \u4e3b\u4efb \/ \u4e5f \/ \u662f \/ \u4e91 \/ \u8ba1\u7b97 \/ \u65b9\u9762 \/ \u7684 \/ \u4e13\u5bb6 \/\n\n\n\u52a0\u8f7d\u81ea\u5b9a\u4e49\u8bcd\u5e93\u540e\uff1a\u3000\u674e\u5c0f\u798f \/ \u662f \/ \u521b\u65b0\u529e \/ \u4e3b\u4efb \/ \u4e5f \/ \u662f \/ \u4e91\u8ba1\u7b97 \/ \u65b9\u9762 \/ \u7684 \/ \u4e13\u5bb6 \/\n\n\n\n\n\n\n\u8c03\u6574\u8bcd\u5178\n\n\n\u4f7f\u7528 add_word(word, freq=None, tag=None) \u548c del_word(word) \u53ef\u5728\u7a0b\u5e8f\u4e2d\u52a8\u6001\u4fee\u6539\u8bcd\u5178\u3002\n\n\n\u4f7f\u7528 suggest_freq(segment, tune=True) \u53ef\u8c03\u8282\u5355\u4e2a\u8bcd\u8bed\u7684\u8bcd\u9891\uff0c\u4f7f\u5176\u80fd\uff08\u6216\u4e0d\u80fd\uff09\u88ab\u5206\u51fa\u6765\u3002\n\n\n\u6ce8\u610f\uff1a\u81ea\u52a8\u8ba1\u7b97\u7684\u8bcd\u9891\u5728\u4f7f\u7528 HMM \u65b0\u8bcd\u53d1\u73b0\u529f\u80fd\u65f6\u53ef\u80fd\u65e0\u6548\u3002\n\n\n\u4ee3\u7801\u793a\u4f8b\uff1a\n>>> print('\/'.join(jieba.cut('\u5982\u679c\u653e\u5230post\u4e2d\u5c06\u51fa\u9519\u3002', HMM=False)))\n\u5982\u679c\/\u653e\u5230\/post\/\u4e2d\u5c06\/\u51fa\u9519\/\u3002\n>>> jieba.suggest_freq(('\u4e2d', '\u5c06'), True)\n494\n>>> print('\/'.join(jieba.cut('\u5982\u679c\u653e\u5230post\u4e2d\u5c06\u51fa\u9519\u3002', HMM=False)))\n\u5982\u679c\/\u653e\u5230\/post\/\u4e2d\/\u5c06\/\u51fa\u9519\/\u3002\n>>> print('\/'.join(jieba.cut('\u300c\u53f0\u4e2d\u300d\u6b63\u786e\u5e94\u8be5\u4e0d\u4f1a\u88ab\u5207\u5f00', HMM=False)))\n\u300c\/\u53f0\/\u4e2d\/\u300d\/\u6b63\u786e\/\u5e94\u8be5\/\u4e0d\u4f1a\/\u88ab\/\u5207\u5f00\n>>> jieba.suggest_freq('\u53f0\u4e2d', True)\n69\n>>> print('\/'.join(jieba.cut('\u300c\u53f0\u4e2d\u300d\u6b63\u786e\u5e94\u8be5\u4e0d\u4f1a\u88ab\u5207\u5f00', HMM=False)))\n\u300c\/\u53f0\u4e2d\/\u300d\/\u6b63\u786e\/\u5e94\u8be5\/\u4e0d\u4f1a\/\u88ab\/\u5207\u5f00\n\n\"\u901a\u8fc7\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u6765\u589e\u5f3a\u6b67\u4e49\u7ea0\u9519\u80fd\u529b\" --- https:\/\/github.com\/fxsjy\/jieba\/issues\/14\n\n\n\u5173\u952e\u8bcd\u63d0\u53d6\n\n\n\u57fa\u4e8e TF-IDF \u7b97\u6cd5\u7684\u5173\u952e\u8bcd\u62bd\u53d6\nimport jieba.analyse\n\njieba.analyse.extract_tags(sentence, topK=20, withWeight=False, allowPOS=())\n\nsentence \u4e3a\u5f85\u63d0\u53d6\u7684\u6587\u672c\ntopK \u4e3a\u8fd4\u56de\u51e0\u4e2a TF\/IDF \u6743\u91cd\u6700\u5927\u7684\u5173\u952e\u8bcd\uff0c\u9ed8\u8ba4\u503c\u4e3a 20\nwithWeight \u4e3a\u662f\u5426\u4e00\u5e76\u8fd4\u56de\u5173\u952e\u8bcd\u6743\u91cd\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a False\nallowPOS \u4ec5\u5305\u62ec\u6307\u5b9a\u8bcd\u6027\u7684\u8bcd\uff0c\u9ed8\u8ba4\u503c\u4e3a\u7a7a\uff0c\u5373\u4e0d\u7b5b\u9009\n\n\njieba.analyse.TFIDF(idf_path=None) \u65b0\u5efa TFIDF \u5b9e\u4f8b\uff0cidf_path \u4e3a IDF \u9891\u7387\u6587\u4ef6\n\n\u4ee3\u7801\u793a\u4f8b \uff08\u5173\u952e\u8bcd\u63d0\u53d6\uff09\nhttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags.py\n\u5173\u952e\u8bcd\u63d0\u53d6\u6240\u4f7f\u7528\u9006\u5411\u6587\u4ef6\u9891\u7387\uff08IDF\uff09\u6587\u672c\u8bed\u6599\u5e93\u53ef\u4ee5\u5207\u6362\u6210\u81ea\u5b9a\u4e49\u8bed\u6599\u5e93\u7684\u8def\u5f84\n\n\u7528\u6cd5\uff1a jieba.analyse.set_idf_path(file_name) # file_name\u4e3a\u81ea\u5b9a\u4e49\u8bed\u6599\u5e93\u7684\u8def\u5f84\n\u81ea\u5b9a\u4e49\u8bed\u6599\u5e93\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/extra_dict\/idf.txt.big\n\u7528\u6cd5\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags_idfpath.py\n\n\u5173\u952e\u8bcd\u63d0\u53d6\u6240\u4f7f\u7528\u505c\u6b62\u8bcd\uff08Stop Words\uff09\u6587\u672c\u8bed\u6599\u5e93\u53ef\u4ee5\u5207\u6362\u6210\u81ea\u5b9a\u4e49\u8bed\u6599\u5e93\u7684\u8def\u5f84\n\n\u7528\u6cd5\uff1a jieba.analyse.set_stop_words(file_name) # file_name\u4e3a\u81ea\u5b9a\u4e49\u8bed\u6599\u5e93\u7684\u8def\u5f84\n\u81ea\u5b9a\u4e49\u8bed\u6599\u5e93\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/extra_dict\/stop_words.txt\n\u7528\u6cd5\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags_stop_words.py\n\n\u5173\u952e\u8bcd\u4e00\u5e76\u8fd4\u56de\u5173\u952e\u8bcd\u6743\u91cd\u503c\u793a\u4f8b\n\n\u7528\u6cd5\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags_with_weight.py\n\n\u57fa\u4e8e TextRank \u7b97\u6cd5\u7684\u5173\u952e\u8bcd\u62bd\u53d6\n\njieba.analyse.textrank(sentence, topK=20, withWeight=False, allowPOS=('ns', 'n', 'vn', 'v')) \u76f4\u63a5\u4f7f\u7528\uff0c\u63a5\u53e3\u76f8\u540c\uff0c\u6ce8\u610f\u9ed8\u8ba4\u8fc7\u6ee4\u8bcd\u6027\u3002\njieba.analyse.TextRank() \u65b0\u5efa\u81ea\u5b9a\u4e49 TextRank \u5b9e\u4f8b\n\n\u7b97\u6cd5\u8bba\u6587\uff1a TextRank: Bringing Order into Texts\n\u57fa\u672c\u601d\u60f3:\n\n\u5c06\u5f85\u62bd\u53d6\u5173\u952e\u8bcd\u7684\u6587\u672c\u8fdb\u884c\u5206\u8bcd\n\u4ee5\u56fa\u5b9a\u7a97\u53e3\u5927\u5c0f(\u9ed8\u8ba4\u4e3a5\uff0c\u901a\u8fc7span\u5c5e\u6027\u8c03\u6574)\uff0c\u8bcd\u4e4b\u95f4\u7684\u5171\u73b0\u5173\u7cfb\uff0c\u6784\u5efa\u56fe\n\u8ba1\u7b97\u56fe\u4e2d\u8282\u70b9\u7684PageRank\uff0c\u6ce8\u610f\u662f\u65e0\u5411\u5e26\u6743\u56fe\n\n\u4f7f\u7528\u793a\u4f8b:\n\u89c1 test\/demo.py\n\n\u8bcd\u6027\u6807\u6ce8\n\n\n\njieba.posseg.POSTokenizer(tokenizer=None) \u65b0\u5efa\u81ea\u5b9a\u4e49\u5206\u8bcd\u5668\uff0ctokenizer \u53c2\u6570\u53ef\u6307\u5b9a\u5185\u90e8\u4f7f\u7528\u7684 jieba.Tokenizer \u5206\u8bcd\u5668\u3002jieba.posseg.dt \u4e3a\u9ed8\u8ba4\u8bcd\u6027\u6807\u6ce8\u5206\u8bcd\u5668\u3002\n\u6807\u6ce8\u53e5\u5b50\u5206\u8bcd\u540e\u6bcf\u4e2a\u8bcd\u7684\u8bcd\u6027\uff0c\u91c7\u7528\u548c ictclas \u517c\u5bb9\u7684\u6807\u8bb0\u6cd5\u3002\n\u9664\u4e86jieba\u9ed8\u8ba4\u5206\u8bcd\u6a21\u5f0f\uff0c\u63d0\u4f9bpaddle\u6a21\u5f0f\u4e0b\u7684\u8bcd\u6027\u6807\u6ce8\u529f\u80fd\u3002paddle\u6a21\u5f0f\u91c7\u7528\u5ef6\u8fdf\u52a0\u8f7d\u65b9\u5f0f\uff0c\u901a\u8fc7enable_paddle()\u5b89\u88c5paddlepaddle-tiny\uff0c\u5e76\u4e14import\u76f8\u5173\u4ee3\u7801\uff1b\n\u7528\u6cd5\u793a\u4f8b\n\n>>> import jieba\n>>> import jieba.posseg as pseg\n>>> words = pseg.cut(\"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\") #jieba\u9ed8\u8ba4\u6a21\u5f0f\n>>> jieba.enable_paddle() #\u542f\u52a8paddle\u6a21\u5f0f\u3002 0.40\u7248\u4e4b\u540e\u5f00\u59cb\u652f\u6301\uff0c\u65e9\u671f\u7248\u672c\u4e0d\u652f\u6301\n>>> words = pseg.cut(\"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\",use_paddle=True) #paddle\u6a21\u5f0f\n>>> for word, flag in words:\n...    print('%s %s' % (word, flag))\n...\n\u6211 r\n\u7231 v\n\u5317\u4eac ns\n\u5929\u5b89\u95e8 ns\npaddle\u6a21\u5f0f\u8bcd\u6027\u6807\u6ce8\u5bf9\u5e94\u8868\u5982\u4e0b\uff1a\npaddle\u6a21\u5f0f\u8bcd\u6027\u548c\u4e13\u540d\u7c7b\u522b\u6807\u7b7e\u96c6\u5408\u5982\u4e0b\u8868\uff0c\u5176\u4e2d\u8bcd\u6027\u6807\u7b7e 24 \u4e2a\uff08\u5c0f\u5199\u5b57\u6bcd\uff09\uff0c\u4e13\u540d\u7c7b\u522b\u6807\u7b7e 4 \u4e2a\uff08\u5927\u5199\u5b57\u6bcd\uff09\u3002\n\n\n\n\u6807\u7b7e\n\u542b\u4e49\n\u6807\u7b7e\n\u542b\u4e49\n\u6807\u7b7e\n\u542b\u4e49\n\u6807\u7b7e\n\u542b\u4e49\n\n\n\n\nn\n\u666e\u901a\u540d\u8bcd\nf\n\u65b9\u4f4d\u540d\u8bcd\ns\n\u5904\u6240\u540d\u8bcd\nt\n\u65f6\u95f4\n\n\nnr\n\u4eba\u540d\nns\n\u5730\u540d\nnt\n\u673a\u6784\u540d\nnw\n\u4f5c\u54c1\u540d\n\n\nnz\n\u5176\u4ed6\u4e13\u540d\nv\n\u666e\u901a\u52a8\u8bcd\nvd\n\u52a8\u526f\u8bcd\nvn\n\u540d\u52a8\u8bcd\n\n\na\n\u5f62\u5bb9\u8bcd\nad\n\u526f\u5f62\u8bcd\nan\n\u540d\u5f62\u8bcd\nd\n\u526f\u8bcd\n\n\nm\n\u6570\u91cf\u8bcd\nq\n\u91cf\u8bcd\nr\n\u4ee3\u8bcd\np\n\u4ecb\u8bcd\n\n\nc\n\u8fde\u8bcd\nu\n\u52a9\u8bcd\nxc\n\u5176\u4ed6\u865a\u8bcd\nw\n\u6807\u70b9\u7b26\u53f7\n\n\nPER\n\u4eba\u540d\nLOC\n\u5730\u540d\nORG\n\u673a\u6784\u540d\nTIME\n\u65f6\u95f4\n\n\n\n\n\u5e76\u884c\u5206\u8bcd\n\n\n\n\n\u539f\u7406\uff1a\u5c06\u76ee\u6807\u6587\u672c\u6309\u884c\u5206\u9694\u540e\uff0c\u628a\u5404\u884c\u6587\u672c\u5206\u914d\u5230\u591a\u4e2a Python \u8fdb\u7a0b\u5e76\u884c\u5206\u8bcd\uff0c\u7136\u540e\u5f52\u5e76\u7ed3\u679c\uff0c\u4ece\u800c\u83b7\u5f97\u5206\u8bcd\u901f\u5ea6\u7684\u53ef\u89c2\u63d0\u5347\n\n\n\u57fa\u4e8e python \u81ea\u5e26\u7684 multiprocessing \u6a21\u5757\uff0c\u76ee\u524d\u6682\u4e0d\u652f\u6301 Windows\n\n\n\u7528\u6cd5\uff1a\n\njieba.enable_parallel(4) # \u5f00\u542f\u5e76\u884c\u5206\u8bcd\u6a21\u5f0f\uff0c\u53c2\u6570\u4e3a\u5e76\u884c\u8fdb\u7a0b\u6570\njieba.disable_parallel() # \u5173\u95ed\u5e76\u884c\u5206\u8bcd\u6a21\u5f0f\n\n\n\n\u4f8b\u5b50\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/parallel\/test_file.py\n\n\n\u5b9e\u9a8c\u7ed3\u679c\uff1a\u5728 4 \u6838 3.4GHz Linux \u673a\u5668\u4e0a\uff0c\u5bf9\u91d1\u5eb8\u5168\u96c6\u8fdb\u884c\u7cbe\u786e\u5206\u8bcd\uff0c\u83b7\u5f97\u4e86 1MB\/s \u7684\u901f\u5ea6\uff0c\u662f\u5355\u8fdb\u7a0b\u7248\u7684 3.3 \u500d\u3002\n\n\n\u6ce8\u610f\uff1a\u5e76\u884c\u5206\u8bcd\u4ec5\u652f\u6301\u9ed8\u8ba4\u5206\u8bcd\u5668 jieba.dt \u548c jieba.posseg.dt\u3002\n\n\n\nTokenize\uff1a\u8fd4\u56de\u8bcd\u8bed\u5728\u539f\u6587\u7684\u8d77\u6b62\u4f4d\u7f6e\n\n\n\n\u6ce8\u610f\uff0c\u8f93\u5165\u53c2\u6570\u53ea\u63a5\u53d7 unicode\n\u9ed8\u8ba4\u6a21\u5f0f\n\nresult = jieba.tokenize(u'\u6c38\u548c\u670d\u88c5\u9970\u54c1\u6709\u9650\u516c\u53f8')\nfor tk in result:\n    print(\"word %s\\t\\t start: %d \\t\\t end:%d\" % (tk[0],tk[1],tk[2]))\nword \u6c38\u548c                start: 0                end:2\nword \u670d\u88c5                start: 2                end:4\nword \u9970\u54c1                start: 4                end:6\nword \u6709\u9650\u516c\u53f8            start: 6                end:10\n\n\n\n\u641c\u7d22\u6a21\u5f0f\n\nresult = jieba.tokenize(u'\u6c38\u548c\u670d\u88c5\u9970\u54c1\u6709\u9650\u516c\u53f8', mode='search')\nfor tk in result:\n    print(\"word %s\\t\\t start: %d \\t\\t end:%d\" % (tk[0],tk[1],tk[2]))\nword \u6c38\u548c                start: 0                end:2\nword \u670d\u88c5                start: 2                end:4\nword \u9970\u54c1                start: 4                end:6\nword \u6709\u9650                start: 6                end:8\nword \u516c\u53f8                start: 8                end:10\nword \u6709\u9650\u516c\u53f8            start: 6                end:10\n\n\nChineseAnalyzer for Whoosh \u641c\u7d22\u5f15\u64ce\n\n\n\n\u5f15\u7528\uff1a from jieba.analyse import ChineseAnalyzer\n\u7528\u6cd5\u793a\u4f8b\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/test_whoosh.py\n\n\n\u547d\u4ee4\u884c\u5206\u8bcd\n\n\n\u4f7f\u7528\u793a\u4f8b\uff1apython -m jieba news.txt > cut_result.txt\n\u547d\u4ee4\u884c\u9009\u9879\uff08\u7ffb\u8bd1\uff09\uff1a\n\u4f7f\u7528: python -m jieba [options] filename\n\n\u7ed3\u5df4\u547d\u4ee4\u884c\u754c\u9762\u3002\n\n\u56fa\u5b9a\u53c2\u6570:\n  filename              \u8f93\u5165\u6587\u4ef6\n\n\u53ef\u9009\u53c2\u6570:\n  -h, --help            \u663e\u793a\u6b64\u5e2e\u52a9\u4fe1\u606f\u5e76\u9000\u51fa\n  -d [DELIM], --delimiter [DELIM]\n                        \u4f7f\u7528 DELIM \u5206\u9694\u8bcd\u8bed\uff0c\u800c\u4e0d\u662f\u7528\u9ed8\u8ba4\u7684' \/ '\u3002\n                        \u82e5\u4e0d\u6307\u5b9a DELIM\uff0c\u5219\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002\n  -p [DELIM], --pos [DELIM]\n                        \u542f\u7528\u8bcd\u6027\u6807\u6ce8\uff1b\u5982\u679c\u6307\u5b9a DELIM\uff0c\u8bcd\u8bed\u548c\u8bcd\u6027\u4e4b\u95f4\n                        \u7528\u5b83\u5206\u9694\uff0c\u5426\u5219\u7528 _ \u5206\u9694\n  -D DICT, --dict DICT  \u4f7f\u7528 DICT \u4ee3\u66ff\u9ed8\u8ba4\u8bcd\u5178\n  -u USER_DICT, --user-dict USER_DICT\n                        \u4f7f\u7528 USER_DICT \u4f5c\u4e3a\u9644\u52a0\u8bcd\u5178\uff0c\u4e0e\u9ed8\u8ba4\u8bcd\u5178\u6216\u81ea\u5b9a\u4e49\u8bcd\u5178\u914d\u5408\u4f7f\u7528\n  -a, --cut-all         \u5168\u6a21\u5f0f\u5206\u8bcd\uff08\u4e0d\u652f\u6301\u8bcd\u6027\u6807\u6ce8\uff09\n  -n, --no-hmm          \u4e0d\u4f7f\u7528\u9690\u542b\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\n  -q, --quiet           \u4e0d\u8f93\u51fa\u8f7d\u5165\u4fe1\u606f\u5230 STDERR\n  -V, --version         \u663e\u793a\u7248\u672c\u4fe1\u606f\u5e76\u9000\u51fa\n\n\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u6587\u4ef6\u540d\uff0c\u5219\u4f7f\u7528\u6807\u51c6\u8f93\u5165\u3002\n\n--help \u9009\u9879\u8f93\u51fa\uff1a\n$> python -m jieba --help\nJieba command line interface.\n\npositional arguments:\n  filename              input file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d [DELIM], --delimiter [DELIM]\n                        use DELIM instead of ' \/ ' for word delimiter; or a\n                        space if it is used without DELIM\n  -p [DELIM], --pos [DELIM]\n                        enable POS tagging; if DELIM is specified, use DELIM\n                        instead of '_' for POS delimiter\n  -D DICT, --dict DICT  use DICT as dictionary\n  -u USER_DICT, --user-dict USER_DICT\n                        use USER_DICT together with the default dictionary or\n                        DICT (if specified)\n  -a, --cut-all         full pattern cutting (ignored with POS tagging)\n  -n, --no-hmm          don't use the Hidden Markov Model\n  -q, --quiet           don't print loading messages to stderr\n  -V, --version         show program's version number and exit\n\nIf no filename specified, use STDIN instead.\n\n\u5ef6\u8fdf\u52a0\u8f7d\u673a\u5236\njieba \u91c7\u7528\u5ef6\u8fdf\u52a0\u8f7d\uff0cimport jieba \u548c jieba.Tokenizer() \u4e0d\u4f1a\u7acb\u5373\u89e6\u53d1\u8bcd\u5178\u7684\u52a0\u8f7d\uff0c\u4e00\u65e6\u6709\u5fc5\u8981\u624d\u5f00\u59cb\u52a0\u8f7d\u8bcd\u5178\u6784\u5efa\u524d\u7f00\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u624b\u5de5\u521d\u59cb jieba\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u521d\u59cb\u5316\u3002\nimport jieba\njieba.initialize()  # \u624b\u52a8\u521d\u59cb\u5316\uff08\u53ef\u9009\uff09\n\n\u5728 0.28 \u4e4b\u524d\u7684\u7248\u672c\u662f\u4e0d\u80fd\u6307\u5b9a\u4e3b\u8bcd\u5178\u7684\u8def\u5f84\u7684\uff0c\u6709\u4e86\u5ef6\u8fdf\u52a0\u8f7d\u673a\u5236\u540e\uff0c\u4f60\u53ef\u4ee5\u6539\u53d8\u4e3b\u8bcd\u5178\u7684\u8def\u5f84:\njieba.set_dictionary('data\/dict.txt.big')\n\n\u4f8b\u5b50\uff1a https:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/test_change_dictpath.py\n\u5176\u4ed6\u8bcd\u5178\n\n\n\u5360\u7528\u5185\u5b58\u8f83\u5c0f\u7684\u8bcd\u5178\u6587\u4ef6\nhttps:\/\/github.com\/fxsjy\/jieba\/raw\/master\/extra_dict\/dict.txt.small\n\n\n\u652f\u6301\u7e41\u4f53\u5206\u8bcd\u66f4\u597d\u7684\u8bcd\u5178\u6587\u4ef6\nhttps:\/\/github.com\/fxsjy\/jieba\/raw\/master\/extra_dict\/dict.txt.big\n\n\n\u4e0b\u8f7d\u4f60\u6240\u9700\u8981\u7684\u8bcd\u5178\uff0c\u7136\u540e\u8986\u76d6 jieba\/dict.txt \u5373\u53ef\uff1b\u6216\u8005\u7528 jieba.set_dictionary('data\/dict.txt.big')\n\u5176\u4ed6\u8bed\u8a00\u5b9e\u73b0\n\u7ed3\u5df4\u5206\u8bcd Java \u7248\u672c\n\u4f5c\u8005\uff1apiaolingxue\n\u5730\u5740\uff1ahttps:\/\/github.com\/huaban\/jieba-analysis\n\u7ed3\u5df4\u5206\u8bcd C++ \u7248\u672c\n\u4f5c\u8005\uff1ayanyiwu\n\u5730\u5740\uff1ahttps:\/\/github.com\/yanyiwu\/cppjieba\n\u7ed3\u5df4\u5206\u8bcd Rust \u7248\u672c\n\u4f5c\u8005\uff1amessense, MnO2\n\u5730\u5740\uff1ahttps:\/\/github.com\/messense\/jieba-rs\n\u7ed3\u5df4\u5206\u8bcd Node.js \u7248\u672c\n\u4f5c\u8005\uff1ayanyiwu\n\u5730\u5740\uff1ahttps:\/\/github.com\/yanyiwu\/nodejieba\n\u7ed3\u5df4\u5206\u8bcd Erlang \u7248\u672c\n\u4f5c\u8005\uff1afalood\n\u5730\u5740\uff1ahttps:\/\/github.com\/falood\/exjieba\n\u7ed3\u5df4\u5206\u8bcd R \u7248\u672c\n\u4f5c\u8005\uff1aqinwf\n\u5730\u5740\uff1ahttps:\/\/github.com\/qinwf\/jiebaR\n\u7ed3\u5df4\u5206\u8bcd iOS \u7248\u672c\n\u4f5c\u8005\uff1ayanyiwu\n\u5730\u5740\uff1ahttps:\/\/github.com\/yanyiwu\/iosjieba\n\u7ed3\u5df4\u5206\u8bcd PHP \u7248\u672c\n\u4f5c\u8005\uff1afukuball\n\u5730\u5740\uff1ahttps:\/\/github.com\/fukuball\/jieba-php\n\u7ed3\u5df4\u5206\u8bcd .NET(C#) \u7248\u672c\n\u4f5c\u8005\uff1aanderscui\n\u5730\u5740\uff1ahttps:\/\/github.com\/anderscui\/jieba.NET\/\n\u7ed3\u5df4\u5206\u8bcd Go \u7248\u672c\n\n\u4f5c\u8005: wangbin \u5730\u5740: https:\/\/github.com\/wangbin\/jiebago\n\u4f5c\u8005: yanyiwu \u5730\u5740: https:\/\/github.com\/yanyiwu\/gojieba\n\n\u7ed3\u5df4\u5206\u8bcdAndroid\u7248\u672c\n\n\u4f5c\u8005   Dongliang.W  \u5730\u5740\uff1ahttps:\/\/github.com\/452896915\/jieba-android\n\n\u53cb\u60c5\u94fe\u63a5\n\nhttps:\/\/github.com\/baidu\/lac   \u767e\u5ea6\u4e2d\u6587\u8bcd\u6cd5\u5206\u6790\uff08\u5206\u8bcd+\u8bcd\u6027+\u4e13\u540d\uff09\u7cfb\u7edf\nhttps:\/\/github.com\/baidu\/AnyQ  \u767e\u5ea6FAQ\u81ea\u52a8\u95ee\u7b54\u7cfb\u7edf\nhttps:\/\/github.com\/baidu\/Senta \u767e\u5ea6\u60c5\u611f\u8bc6\u522b\u7cfb\u7edf\n\n\u7cfb\u7edf\u96c6\u6210\n\nSolr: https:\/\/github.com\/sing1ee\/jieba-solr\n\n\u5206\u8bcd\u901f\u5ea6\n\n1.5 MB \/ Second in Full Mode\n400 KB \/ Second in Default Mode\n\u6d4b\u8bd5\u73af\u5883: Intel(R) Core(TM) i7-2600 CPU @ 3.4GHz\uff1b\u300a\u56f4\u57ce\u300b.txt\n\n\u5e38\u89c1\u95ee\u9898\n1. \u6a21\u578b\u7684\u6570\u636e\u662f\u5982\u4f55\u751f\u6210\u7684\uff1f\n\u8be6\u89c1\uff1a https:\/\/github.com\/fxsjy\/jieba\/issues\/7\n2. \u201c\u53f0\u4e2d\u201d\u603b\u662f\u88ab\u5207\u6210\u201c\u53f0 \u4e2d\u201d\uff1f\uff08\u4ee5\u53ca\u7c7b\u4f3c\u60c5\u51b5\uff09\nP(\u53f0\u4e2d) \uff1c P(\u53f0)\u00d7P(\u4e2d)\uff0c\u201c\u53f0\u4e2d\u201d\u8bcd\u9891\u4e0d\u591f\u5bfc\u81f4\u5176\u6210\u8bcd\u6982\u7387\u8f83\u4f4e\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u5f3a\u5236\u8c03\u9ad8\u8bcd\u9891\njieba.add_word('\u53f0\u4e2d') \u6216\u8005 jieba.suggest_freq('\u53f0\u4e2d', True)\n3. \u201c\u4eca\u5929\u5929\u6c14 \u4e0d\u9519\u201d\u5e94\u8be5\u88ab\u5207\u6210\u201c\u4eca\u5929 \u5929\u6c14 \u4e0d\u9519\u201d\uff1f\uff08\u4ee5\u53ca\u7c7b\u4f3c\u60c5\u51b5\uff09\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u5f3a\u5236\u8c03\u4f4e\u8bcd\u9891\njieba.suggest_freq(('\u4eca\u5929', '\u5929\u6c14'), True)\n\u6216\u8005\u76f4\u63a5\u5220\u9664\u8be5\u8bcd jieba.del_word('\u4eca\u5929\u5929\u6c14')\n4. \u5207\u51fa\u4e86\u8bcd\u5178\u4e2d\u6ca1\u6709\u7684\u8bcd\u8bed\uff0c\u6548\u679c\u4e0d\u7406\u60f3\uff1f\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u5173\u95ed\u65b0\u8bcd\u53d1\u73b0\njieba.cut('\u4e30\u7530\u592a\u7701\u4e86', HMM=False)\njieba.cut('\u6211\u4eec\u4e2d\u51fa\u4e86\u4e00\u4e2a\u53db\u5f92', HMM=False)\n\u66f4\u591a\u95ee\u9898\u8bf7\u70b9\u51fb\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/issues?sort=updated&state=closed\n\u4fee\u8ba2\u5386\u53f2\nhttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/Changelog\n\njieba\n\"Jieba\" (Chinese for \"to stutter\") Chinese text segmentation: built to be the best Python Chinese word segmentation module.\nFeatures\n\nSupport three types of segmentation mode:\n\n\nAccurate Mode attempts to cut the sentence into the most accurate segmentations, which is suitable for text analysis.\nFull Mode gets all the possible words from the sentence. Fast but not accurate.\nSearch Engine Mode, based on the Accurate Mode, attempts to cut long words into several short words, which can raise the recall rate. Suitable for search engines.\n\n\nSupports Traditional Chinese\nSupports customized dictionaries\nMIT License\n\nOnline demo\nhttp:\/\/jiebademo.ap01.aws.af.cm\/\n(Powered by Appfog)\nUsage\n\nFully automatic installation: easy_install jieba or pip install jieba\nSemi-automatic installation: Download http:\/\/pypi.python.org\/pypi\/jieba\/ , run python setup.py install after extracting.\nManual installation: place the jieba directory in the current directory or python site-packages directory.\nimport jieba.\n\nAlgorithm\n\nBased on a prefix dictionary structure to achieve efficient word graph scanning. Build a directed acyclic graph (DAG) for all possible word combinations.\nUse dynamic programming to find the most probable combination based on the word frequency.\nFor unknown words, a HMM-based model is used with the Viterbi algorithm.\n\nMain Functions\n\nCut\n\n\n\nThe jieba.cut function accepts three input parameters: the first parameter is the string to be cut; the second parameter is cut_all, controlling the cut mode; the third parameter is to control whether to use the Hidden Markov Model.\njieba.cut_for_search accepts two parameter: the string to be cut; whether to use the Hidden Markov Model. This will cut the sentence into short words suitable for search engines.\nThe input string can be an unicode\/str object, or a str\/bytes object which is encoded in UTF-8 or GBK. Note that using GBK encoding is not recommended because it may be unexpectly decoded as UTF-8.\njieba.cut and jieba.cut_for_search returns an generator, from which you can use a for loop to get the segmentation result (in unicode).\njieba.lcut and jieba.lcut_for_search returns a list.\njieba.Tokenizer(dictionary=DEFAULT_DICT) creates a new customized Tokenizer, which enables you to use different dictionaries at the same time. jieba.dt is the default Tokenizer, to which almost all global functions are mapped.\n\nCode example: segmentation\n#encoding=utf-8\nimport jieba\n\nseg_list = jieba.cut(\"\u6211\u6765\u5230\u5317\u4eac\u6e05\u534e\u5927\u5b66\", cut_all=True)\nprint(\"Full Mode: \" + \"\/ \".join(seg_list))  # \u5168\u6a21\u5f0f\n\nseg_list = jieba.cut(\"\u6211\u6765\u5230\u5317\u4eac\u6e05\u534e\u5927\u5b66\", cut_all=False)\nprint(\"Default Mode: \" + \"\/ \".join(seg_list))  # \u9ed8\u8ba4\u6a21\u5f0f\n\nseg_list = jieba.cut(\"\u4ed6\u6765\u5230\u4e86\u7f51\u6613\u676d\u7814\u5927\u53a6\")\nprint(\", \".join(seg_list))\n\nseg_list = jieba.cut_for_search(\"\u5c0f\u660e\u7855\u58eb\u6bd5\u4e1a\u4e8e\u4e2d\u56fd\u79d1\u5b66\u9662\u8ba1\u7b97\u6240\uff0c\u540e\u5728\u65e5\u672c\u4eac\u90fd\u5927\u5b66\u6df1\u9020\")  # \u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\nprint(\", \".join(seg_list))\nOutput:\n[Full Mode]: \u6211\/ \u6765\u5230\/ \u5317\u4eac\/ \u6e05\u534e\/ \u6e05\u534e\u5927\u5b66\/ \u534e\u5927\/ \u5927\u5b66\n\n[Accurate Mode]: \u6211\/ \u6765\u5230\/ \u5317\u4eac\/ \u6e05\u534e\u5927\u5b66\n\n[Unknown Words Recognize] \u4ed6, \u6765\u5230, \u4e86, \u7f51\u6613, \u676d\u7814, \u5927\u53a6    (In this case, \"\u676d\u7814\" is not in the dictionary, but is identified by the Viterbi algorithm)\n\n[Search Engine Mode]\uff1a \u5c0f\u660e, \u7855\u58eb, \u6bd5\u4e1a, \u4e8e, \u4e2d\u56fd, \u79d1\u5b66, \u5b66\u9662, \u79d1\u5b66\u9662, \u4e2d\u56fd\u79d1\u5b66\u9662, \u8ba1\u7b97, \u8ba1\u7b97\u6240, \u540e, \u5728, \u65e5\u672c, \u4eac\u90fd, \u5927\u5b66, \u65e5\u672c\u4eac\u90fd\u5927\u5b66, \u6df1\u9020\n\n\nAdd a custom dictionary\n\n\nLoad dictionary\n\nDevelopers can specify their own custom dictionary to be included in the jieba default dictionary. Jieba is able to identify new words, but you can add your own new words can ensure a higher accuracy.\nUsage\uff1a jieba.load_userdict(file_name) # file_name is a file-like object or the path of the custom dictionary\nThe dictionary format is the same as that of dict.txt: one word per line; each line is divided into three parts separated by a space: word, word frequency, POS tag. If file_name is a path or a file opened in binary mode, the dictionary must be UTF-8 encoded.\nThe word frequency and POS tag can be omitted respectively. The word frequency will be filled with a suitable value if omitted.\n\nFor example:\n\u521b\u65b0\u529e 3 i\n\u4e91\u8ba1\u7b97 5\n\u51f1\u7279\u7433 nz\n\u53f0\u4e2d\n\n\n\nChange a Tokenizer's tmp_dir and cache_file to specify the path of the cache file, for using on a restricted file system.\n\n\nExample:\n  \u4e91\u8ba1\u7b97 5\n  \u674e\u5c0f\u798f 2\n  \u521b\u65b0\u529e 3\n\n  [Before]\uff1a \u674e\u5c0f\u798f \/ \u662f \/ \u521b\u65b0 \/ \u529e \/ \u4e3b\u4efb \/ \u4e5f \/ \u662f \/ \u4e91 \/ \u8ba1\u7b97 \/ \u65b9\u9762 \/ \u7684 \/ \u4e13\u5bb6 \/\n\n  [After]\uff1a\u3000\u674e\u5c0f\u798f \/ \u662f \/ \u521b\u65b0\u529e \/ \u4e3b\u4efb \/ \u4e5f \/ \u662f \/ \u4e91\u8ba1\u7b97 \/ \u65b9\u9762 \/ \u7684 \/ \u4e13\u5bb6 \/\n\n\n\nModify dictionary\n\n\nUse add_word(word, freq=None, tag=None) and del_word(word) to modify the dictionary dynamically in programs.\n\n\nUse suggest_freq(segment, tune=True) to adjust the frequency of a single word so that it can (or cannot) be segmented.\n\n\nNote that HMM may affect the final result.\n\n\nExample:\n>>> print('\/'.join(jieba.cut('\u5982\u679c\u653e\u5230post\u4e2d\u5c06\u51fa\u9519\u3002', HMM=False)))\n\u5982\u679c\/\u653e\u5230\/post\/\u4e2d\u5c06\/\u51fa\u9519\/\u3002\n>>> jieba.suggest_freq(('\u4e2d', '\u5c06'), True)\n494\n>>> print('\/'.join(jieba.cut('\u5982\u679c\u653e\u5230post\u4e2d\u5c06\u51fa\u9519\u3002', HMM=False)))\n\u5982\u679c\/\u653e\u5230\/post\/\u4e2d\/\u5c06\/\u51fa\u9519\/\u3002\n>>> print('\/'.join(jieba.cut('\u300c\u53f0\u4e2d\u300d\u6b63\u786e\u5e94\u8be5\u4e0d\u4f1a\u88ab\u5207\u5f00', HMM=False)))\n\u300c\/\u53f0\/\u4e2d\/\u300d\/\u6b63\u786e\/\u5e94\u8be5\/\u4e0d\u4f1a\/\u88ab\/\u5207\u5f00\n>>> jieba.suggest_freq('\u53f0\u4e2d', True)\n69\n>>> print('\/'.join(jieba.cut('\u300c\u53f0\u4e2d\u300d\u6b63\u786e\u5e94\u8be5\u4e0d\u4f1a\u88ab\u5207\u5f00', HMM=False)))\n\u300c\/\u53f0\u4e2d\/\u300d\/\u6b63\u786e\/\u5e94\u8be5\/\u4e0d\u4f1a\/\u88ab\/\u5207\u5f00\n\nKeyword Extraction\n\n\nimport jieba.analyse\n\njieba.analyse.extract_tags(sentence, topK=20, withWeight=False, allowPOS=())\n\nsentence: the text to be extracted\ntopK: return how many keywords with the highest TF\/IDF weights. The default value is 20\nwithWeight: whether return TF\/IDF weights with the keywords. The default value is False\nallowPOS: filter words with which POSs are included. Empty for no filtering.\n\n\njieba.analyse.TFIDF(idf_path=None) creates a new TFIDF instance, idf_path specifies IDF file path.\n\nExample (keyword extraction)\nhttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags.py\nDevelopers can specify their own custom IDF corpus in jieba keyword extraction\n\nUsage\uff1a jieba.analyse.set_idf_path(file_name) # file_name is the path for the custom corpus\nCustom Corpus Sample\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/extra_dict\/idf.txt.big\nSample Code\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags_idfpath.py\n\nDevelopers can specify their own custom stop words corpus in jieba keyword extraction\n\nUsage\uff1a jieba.analyse.set_stop_words(file_name) # file_name is the path for the custom corpus\nCustom Corpus Sample\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/extra_dict\/stop_words.txt\nSample Code\uff1ahttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/extract_tags_stop_words.py\n\nThere's also a TextRank implementation available.\nUse: jieba.analyse.textrank(sentence, topK=20, withWeight=False, allowPOS=('ns', 'n', 'vn', 'v'))\nNote that it filters POS by default.\njieba.analyse.TextRank() creates a new TextRank instance.\n\nPart of Speech Tagging\n\n\n\njieba.posseg.POSTokenizer(tokenizer=None) creates a new customized Tokenizer. tokenizer specifies the jieba.Tokenizer to internally use. jieba.posseg.dt is the default POSTokenizer.\nTags the POS of each word after segmentation, using labels compatible with ictclas.\nExample:\n\n>>> import jieba.posseg as pseg\n>>> words = pseg.cut(\"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\")\n>>> for w in words:\n...    print('%s %s' % (w.word, w.flag))\n...\n\u6211 r\n\u7231 v\n\u5317\u4eac ns\n\u5929\u5b89\u95e8 ns\n\nParallel Processing\n\n\n\n\nPrinciple: Split target text by line, assign the lines into multiple Python processes, and then merge the results, which is considerably faster.\n\n\nBased on the multiprocessing module of Python.\n\n\nUsage:\n\njieba.enable_parallel(4) # Enable parallel processing. The parameter is the number of processes.\njieba.disable_parallel() # Disable parallel processing.\n\n\n\nExample:\nhttps:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/parallel\/test_file.py\n\n\nResult: On a four-core 3.4GHz Linux machine, do accurate word segmentation on Complete Works of Jin Yong, and the speed reaches 1MB\/s, which is 3.3 times faster than the single-process version.\n\n\nNote that parallel processing supports only default tokenizers, jieba.dt and jieba.posseg.dt.\n\n\n\nTokenize: return words with position\n\n\n\nThe input must be unicode\nDefault mode\n\nresult = jieba.tokenize(u'\u6c38\u548c\u670d\u88c5\u9970\u54c1\u6709\u9650\u516c\u53f8')\nfor tk in result:\n    print(\"word %s\\t\\t start: %d \\t\\t end:%d\" % (tk[0],tk[1],tk[2]))\nword \u6c38\u548c                start: 0                end:2\nword \u670d\u88c5                start: 2                end:4\nword \u9970\u54c1                start: 4                end:6\nword \u6709\u9650\u516c\u53f8            start: 6                end:10\n\n\n\nSearch mode\n\nresult = jieba.tokenize(u'\u6c38\u548c\u670d\u88c5\u9970\u54c1\u6709\u9650\u516c\u53f8',mode='search')\nfor tk in result:\n    print(\"word %s\\t\\t start: %d \\t\\t end:%d\" % (tk[0],tk[1],tk[2]))\nword \u6c38\u548c                start: 0                end:2\nword \u670d\u88c5                start: 2                end:4\nword \u9970\u54c1                start: 4                end:6\nword \u6709\u9650                start: 6                end:8\nword \u516c\u53f8                start: 8                end:10\nword \u6709\u9650\u516c\u53f8            start: 6                end:10\n\n\nChineseAnalyzer for Whoosh\n\n\n\nfrom jieba.analyse import ChineseAnalyzer\nExample: https:\/\/github.com\/fxsjy\/jieba\/blob\/master\/test\/test_whoosh.py\n\n\nCommand Line Interface\n\n\n$> python -m jieba --help\nJieba command line interface.\n\npositional arguments:\n  filename              input file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d [DELIM], --delimiter [DELIM]\n                        use DELIM instead of ' \/ ' for word delimiter; or a\n                        space if it is used without DELIM\n  -p [DELIM], --pos [DELIM]\n                        enable POS tagging; if DELIM is specified, use DELIM\n                        instead of '_' for POS delimiter\n  -D DICT, --dict DICT  use DICT as dictionary\n  -u USER_DICT, --user-dict USER_DICT\n                        use USER_DICT together with the default dictionary or\n                        DICT (if specified)\n  -a, --cut-all         full pattern cutting (ignored with POS tagging)\n  -n, --no-hmm          don't use the Hidden Markov Model\n  -q, --quiet           don't print loading messages to stderr\n  -V, --version         show program's version number and exit\n\nIf no filename specified, use STDIN instead.\n\nInitialization\nBy default, Jieba don't build the prefix dictionary unless it's necessary. This takes 1-3 seconds, after which it is not initialized again. If you want to initialize Jieba manually, you can call:\nimport jieba\njieba.initialize()  # (optional)\n\nYou can also specify the dictionary (not supported before version 0.28) :\njieba.set_dictionary('data\/dict.txt.big')\n\nUsing Other Dictionaries\nIt is possible to use your own dictionary with Jieba, and there are also two dictionaries ready for download:\n\n\nA smaller dictionary for a smaller memory footprint:\nhttps:\/\/github.com\/fxsjy\/jieba\/raw\/master\/extra_dict\/dict.txt.small\n\n\nThere is also a bigger dictionary that has better support for traditional Chinese (\u7e41\u9ad4):\nhttps:\/\/github.com\/fxsjy\/jieba\/raw\/master\/extra_dict\/dict.txt.big\n\n\nBy default, an in-between dictionary is used, called dict.txt and included in the distribution.\nIn either case, download the file you want, and then call jieba.set_dictionary('data\/dict.txt.big') or just replace the existing dict.txt.\nSegmentation speed\n\n1.5 MB \/ Second in Full Mode\n400 KB \/ Second in Default Mode\nTest Env: Intel(R) Core(TM) i7-2600 CPU @ 3.4GHz\uff1b\u300a\u56f4\u57ce\u300b.txt\n\n","151":"Detectron is deprecated. Please see detectron2, a ground-up rewrite of Detectron in PyTorch.\nDetectron\nDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.\nAt FAIR, Detectron has enabled numerous research projects, including: Feature Pyramid Networks for Object Detection, Mask R-CNN, Detecting and Recognizing Human-Object Interactions, Focal Loss for Dense Object Detection, Non-local Neural Networks, Learning to Segment Every Thing, Data Distillation: Towards Omni-Supervised Learning, DensePose: Dense Human Pose Estimation In The Wild, and Group Normalization.\n\n\nExample Mask R-CNN output.\n\nIntroduction\nThe goal of Detectron is to provide a high-quality, high-performance\ncodebase for object detection research. It is designed to be flexible in order\nto support rapid implementation and evaluation of novel research. Detectron\nincludes implementations of the following object detection algorithms:\n\nMask R-CNN -- Marr Prize at ICCV 2017\nRetinaNet -- Best Student Paper Award at ICCV 2017\nFaster R-CNN\nRPN\nFast R-CNN\nR-FCN\n\nusing the following backbone network architectures:\n\nResNeXt{50,101,152}\nResNet{50,101,152}\nFeature Pyramid Networks (with ResNet\/ResNeXt)\nVGG16\n\nAdditional backbone architectures may be easily implemented. For more details about these models, please see References below.\nUpdate\n\n4\/2018: Support Group Normalization - see GN\/README.md\n\nLicense\nDetectron is released under the Apache 2.0 license. See the NOTICE file for additional details.\nCiting Detectron\nIf you use Detectron in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.\n@misc{Detectron2018,\n  author =       {Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and\n                  Piotr Doll\\'{a}r and Kaiming He},\n  title =        {Detectron},\n  howpublished = {\\url{https:\/\/github.com\/facebookresearch\/detectron}},\n  year =         {2018}\n}\n\nModel Zoo and Baselines\nWe provide a large set of baseline results and trained models available for download in the Detectron Model Zoo.\nInstallation\nPlease find installation instructions for Caffe2 and Detectron in INSTALL.md.\nQuick Start: Using Detectron\nAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with Detectron.\nGetting Help\nTo start, please check the troubleshooting section of our installation instructions as well as our FAQ. If you couldn't find help there, try searching our GitHub issues. We intend the issues page to be a forum in which the community collectively troubleshoots problems.\nIf bugs are found, we appreciate pull requests (including adding Q&A's to FAQ.md and improving our installation instructions and troubleshooting documents). Please see CONTRIBUTING.md for more information about contributing to Detectron.\nReferences\n\nData Distillation: Towards Omni-Supervised Learning.\nIlija Radosavovic, Piotr Doll\u00e1r, Ross Girshick, Georgia Gkioxari, and Kaiming He.\nTech report, arXiv, Dec. 2017.\nLearning to Segment Every Thing.\nRonghang Hu, Piotr Doll\u00e1r, Kaiming He, Trevor Darrell, and Ross Girshick.\nTech report, arXiv, Nov. 2017.\nNon-Local Neural Networks.\nXiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaiming He.\nTech report, arXiv, Nov. 2017.\nMask R-CNN.\nKaiming He, Georgia Gkioxari, Piotr Doll\u00e1r, and Ross Girshick.\nIEEE International Conference on Computer Vision (ICCV), 2017.\nFocal Loss for Dense Object Detection.\nTsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Doll\u00e1r.\nIEEE International Conference on Computer Vision (ICCV), 2017.\nAccurate, Large Minibatch SGD: Training ImageNet in 1 Hour.\nPriya Goyal, Piotr Doll\u00e1r, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He.\nTech report, arXiv, June 2017.\nDetecting and Recognizing Human-Object Interactions.\nGeorgia Gkioxari, Ross Girshick, Piotr Doll\u00e1r, and Kaiming He.\nTech report, arXiv, Apr. 2017.\nFeature Pyramid Networks for Object Detection.\nTsung-Yi Lin, Piotr Doll\u00e1r, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie.\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.\nAggregated Residual Transformations for Deep Neural Networks.\nSaining Xie, Ross Girshick, Piotr Doll\u00e1r, Zhuowen Tu, and Kaiming He.\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.\nR-FCN: Object Detection via Region-based Fully Convolutional Networks.\nJifeng Dai, Yi Li, Kaiming He, and Jian Sun.\nConference on Neural Information Processing Systems (NIPS), 2016.\nDeep Residual Learning for Image Recognition.\nKaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.\nFaster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks\nShaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.\nConference on Neural Information Processing Systems (NIPS), 2015.\nFast R-CNN.\nRoss Girshick.\nIEEE International Conference on Computer Vision (ICCV), 2015.\n\n","152":"\n\n\n\nFastAPI framework, high performance, easy to learn, fast to code, ready for production\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation: https:\/\/fastapi.tiangolo.com\nSource Code: https:\/\/github.com\/tiangolo\/fastapi\n\nFastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\nThe key features are:\n\n\nFast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\n\n\nFast to code: Increase the speed to develop features by about 200% to 300%. *\n\n\nFewer bugs: Reduce about 40% of human (developer) induced errors. *\n\n\nIntuitive: Great editor support. Completion everywhere. Less time debugging.\n\n\nEasy: Designed to be easy to use and learn. Less time reading docs.\n\n\nShort: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\n\n\nRobust: Get production-ready code. With automatic interactive documentation.\n\n\nStandards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema.\n\n\n* estimation based on tests on an internal development team, building production applications.\nGold Sponsors\n\nOther sponsors\nOpinions\n\"[...] I'm using FastAPI a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core Windows product and some Office products.\"\nKabir Khan - Microsoft (ref)\n\n\"We adopted the FastAPI library to spawn a REST server that can be queried to obtain predictions. [for Ludwig]\"\nPiero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref)\n\n\"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch! [built with FastAPI]\"\nKevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref)\n\n\"I\u2019m over the moon excited about FastAPI. It\u2019s so fun!\"\nBrian Okken - Python Bytes podcast host (ref)\n\n\"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that.\"\nTimothy Crosley - Hug creator (ref)\n\n\"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [...] It's fast, easy to use and easy to learn [...]\"\n\"We've switched over to FastAPI for our APIs [...] I think you'll like it [...]\"\nInes Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref)\n\nTyper, the FastAPI of CLIs\n\nIf you are building a CLI app to be used in the terminal instead of a web API, check out Typer.\nTyper is FastAPI's little sibling. And it's intended to be the FastAPI of CLIs. \u2328\ufe0f \ud83d\ude80\nRequirements\nPython 3.6+\nFastAPI stands on the shoulders of giants:\n\nStarlette for the web parts.\nPydantic for the data parts.\n\nInstallation\n\n$ pip install fastapi\n\n---> 100%\n\nYou will also need an ASGI server, for production such as Uvicorn or Hypercorn.\n\n$ pip install uvicorn\n\n---> 100%\n\nExample\nCreate it\n\nCreate a file main.py with:\n\nfrom typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"\/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"\/items\/{item_id}\")\ndef read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\nOr use async def...\nIf your code uses async \/ await, use async def:\nfrom typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"\/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"\/items\/{item_id}\")\nasync def read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}\nNote:\nIf you don't know, check the \"In a hurry?\" section about async and await in the docs.\n\nRun it\nRun the server with:\n\n$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http:\/\/127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\n\nAbout the command uvicorn main:app --reload...\nThe command uvicorn main:app refers to:\n\nmain: the file main.py (the Python \"module\").\napp: the object created inside of main.py with the line app = FastAPI().\n--reload: make the server restart after code changes. Only do this for development.\n\n\nCheck it\nOpen your browser at http:\/\/127.0.0.1:8000\/items\/5?q=somequery.\nYou will see the JSON response as:\n{\"item_id\": 5, \"q\": \"somequery\"}\nYou already created an API that:\n\nReceives HTTP requests in the paths \/ and \/items\/{item_id}.\nBoth paths take GET operations (also known as HTTP methods).\nThe path \/items\/{item_id} has a path parameter item_id that should be an int.\nThe path \/items\/{item_id} has an optional str query parameter q.\n\nInteractive API docs\nNow go to http:\/\/127.0.0.1:8000\/docs.\nYou will see the automatic interactive API documentation (provided by Swagger UI):\n\nAlternative API docs\nAnd now, go to http:\/\/127.0.0.1:8000\/redoc.\nYou will see the alternative automatic documentation (provided by ReDoc):\n\nExample upgrade\nNow modify the file main.py to receive a body from a PUT request.\nDeclare the body using standard Python types, thanks to Pydantic.\nfrom typing import Optional\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Optional[bool] = None\n\n\n@app.get(\"\/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"\/items\/{item_id}\")\ndef read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"\/items\/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}\nThe server should reload automatically (because you added --reload to the uvicorn command above).\nInteractive API docs upgrade\nNow go to http:\/\/127.0.0.1:8000\/docs.\n\nThe interactive API documentation will be automatically updated, including the new body:\n\n\n\nClick on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:\n\n\n\nThen click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:\n\n\nAlternative API docs upgrade\nAnd now, go to http:\/\/127.0.0.1:8000\/redoc.\n\nThe alternative documentation will also reflect the new query parameter and body:\n\n\nRecap\nIn summary, you declare once the types of parameters, body, etc. as function parameters.\nYou do that with standard modern Python types.\nYou don't have to learn a new syntax, the methods or classes of a specific library, etc.\nJust standard Python 3.6+.\nFor example, for an int:\nitem_id: int\nor for a more complex Item model:\nitem: Item\n...and with that single declaration you get:\n\nEditor support, including:\n\nCompletion.\nType checks.\n\n\nValidation of data:\n\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\n\n\nConversion of input data: coming from the network to Python data and types. Reading from:\n\nJSON.\nPath parameters.\nQuery parameters.\nCookies.\nHeaders.\nForms.\nFiles.\n\n\nConversion of output data: converting from Python data and types to network data (as JSON):\n\nConvert Python types (str, int, float, bool, list, etc).\ndatetime objects.\nUUID objects.\nDatabase models.\n...and many more.\n\n\nAutomatic interactive API documentation, including 2 alternative user interfaces:\n\nSwagger UI.\nReDoc.\n\n\n\n\nComing back to the previous code example, FastAPI will:\n\nValidate that there is an item_id in the path for GET and PUT requests.\nValidate that the item_id is of type int for GET and PUT requests.\n\nIf it is not, the client will see a useful, clear error.\n\n\nCheck if there is an optional query parameter named q (as in http:\/\/127.0.0.1:8000\/items\/foo?q=somequery) for GET requests.\n\nAs the q parameter is declared with = None, it is optional.\nWithout the None it would be required (as is the body in the case with PUT).\n\n\nFor PUT requests to \/items\/{item_id}, Read the body as JSON:\n\nCheck that it has a required attribute name that should be a str.\nCheck that it has a required attribute price that has to be a float.\nCheck that it has an optional attribute is_offer, that should be a bool, if present.\nAll this would also work for deeply nested JSON objects.\n\n\nConvert from and to JSON automatically.\nDocument everything with OpenAPI, that can be used by:\n\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\n\n\nProvide 2 interactive documentation web interfaces directly.\n\n\nWe just scratched the surface, but you already get the idea of how it all works.\nTry changing the line with:\n    return {\"item_name\": item.name, \"item_id\": item_id}\n...from:\n        ... \"item_name\": item.name ...\n...to:\n        ... \"item_price\": item.price ...\n...and see how your editor will auto-complete the attributes and know their types:\n\nFor a more complete example including more features, see the Tutorial - User Guide.\nSpoiler alert: the tutorial - user guide includes:\n\nDeclaration of parameters from other different places as: headers, cookies, form fields and files.\nHow to set validation constraints as maximum_length or regex.\nA very powerful and easy to use Dependency Injection system.\nSecurity and authentication, including support for OAuth2 with JWT tokens and HTTP Basic auth.\nMore advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic).\nMany extra features (thanks to Starlette) as:\n\nWebSockets\nGraphQL\nextremely easy tests based on requests and pytest\nCORS\nCookie Sessions\n...and more.\n\n\n\nPerformance\nIndependent TechEmpower benchmarks show FastAPI applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)\nTo understand more about it, see the section Benchmarks.\nOptional Dependencies\nUsed by Pydantic:\n\nujson - for faster JSON \"parsing\".\nemail_validator - for email validation.\n\nUsed by Starlette:\n\nrequests - Required if you want to use the TestClient.\naiofiles - Required if you want to use FileResponse or StaticFiles.\njinja2 - Required if you want to use the default template configuration.\npython-multipart - Required if you want to support form \"parsing\", with request.form().\nitsdangerous - Required for SessionMiddleware support.\npyyaml - Required for Starlette's SchemaGenerator support (you probably don't need it with FastAPI).\ngraphene - Required for GraphQLApp support.\nujson - Required if you want to use UJSONResponse.\n\nUsed by FastAPI \/ Starlette:\n\nuvicorn - for the server that loads and serves your application.\norjson - Required if you want to use ORJSONResponse.\n\nYou can install all of these with pip install fastapi[all].\nLicense\nThis project is licensed under the terms of the MIT license.\n","153":"Status: Maintenance (expect bug fixes and minor updates)\n\nOpenAI Gym\nOpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms. This is the gym open-source library, which gives you access to a standardized set of environments.\n\nSee What's New section below\ngym makes no assumptions about the structure of your agent, and is compatible with any numerical computation library, such as TensorFlow or Theano. You can use it from Python code, and soon from other languages.\nIf you're not sure where to start, we recommend beginning with the\ndocs on our site. See also the FAQ.\nA whitepaper for OpenAI Gym is available at http:\/\/arxiv.org\/abs\/1606.01540, and here's a BibTeX entry that you can use to cite it in a publication:\n@misc{1606.01540,\n  Author = {Greg Brockman and Vicki Cheung and Ludwig Pettersson and Jonas Schneider and John Schulman and Jie Tang and Wojciech Zaremba},\n  Title = {OpenAI Gym},\n  Year = {2016},\n  Eprint = {arXiv:1606.01540},\n}\n\n\nContents of this document\n\nOpenAI Gym\nBasics\nInstallation\nEnvironments\nExamples\nTesting\nResources\nWhat's new\n\n\n\n\n\nBasics\nThere are two basic concepts in reinforcement learning: the\nenvironment (namely, the outside world) and the agent (namely, the\nalgorithm you are writing). The agent sends actions to the\nenvironment, and the environment replies with observations and\nrewards (that is, a score).\nThe core gym interface is Env, which is\nthe unified environment interface. There is no interface for agents;\nthat part is left to you. The following are the Env methods you\nshould know:\n\nreset(self): Reset the environment's state. Returns observation.\nstep(self, action): Step the environment by one timestep. Returns observation, reward, done, info.\nrender(self, mode='human'): Render one frame of the environment. The default mode will do something human friendly, such as pop up a window.\n\n\nSupported systems\nWe currently support Linux and OS X running Python 3.5 -- 3.8\nWindows support is experimental - algorithmic, toy_text, classic_control and atari should work on Windows (see next section for installation instructions); nevertheless, proceed at your own risk.\n\nInstallation\nYou can perform a minimal install of gym with:\ngit clone https:\/\/github.com\/openai\/gym.git\ncd gym\npip install -e .\nIf you prefer, you can do a minimal install of the packaged version directly from PyPI:\npip install gym\nYou'll be able to run a few environments right away:\n\nalgorithmic\ntoy_text\nclassic_control (you'll need pyglet to render though)\n\nWe recommend playing with those environments at first, and then later\ninstalling the dependencies for the remaining environments.\nYou can also run gym on gitpod.io to play with the examples online.\nIn the preview window you can click on the mp4 file you want to view. If you want to view another mp4 file, just press the back button and click on another mp4 file.\n\nInstalling everything\nTo install the full set of environments, you'll need to have some system\npackages installed. We'll build out the list here over time; please let us know\nwhat you end up installing on your platform. Also, take a look at the docker files (py.Dockerfile) to\nsee the composition of our CI-tested images.\nOn Ubuntu 16.04 and 18.04:\napt-get install -y libglu1-mesa-dev libgl1-mesa-dev libosmesa6-dev xvfb ffmpeg curl patchelf libglfw3 libglfw3-dev cmake zlib1g zlib1g-dev swig\nMuJoCo has a proprietary dependency we can't set up for you. Follow\nthe\ninstructions\nin the mujoco-py package for help. Note that we currently do not support MuJoCo 2.0 and above, so you will need to install a version of mujoco-py which is built\nfor a lower version of MuJoCo like MuJoCo 1.5 (example - mujoco-py-1.50.1.0).\nAs an alternative to mujoco-py, consider PyBullet which uses the open source Bullet physics engine and has no license requirement.\nOnce you're ready to install everything, run pip install -e '.[all]' (or pip install 'gym[all]').\n\nPip version\nTo run pip install -e '.[all]', you'll need a semi-recent pip.\nPlease make sure your pip is at least at version 1.5.0. You can\nupgrade using the following: pip install --ignore-installed\npip. Alternatively, you can open setup.py and\ninstall the dependencies by hand.\n\nRendering on a server\nIf you're trying to render video on a server, you'll need to connect a\nfake display. The easiest way to do this is by running under\nxvfb-run (on Ubuntu, install the xvfb package):\nxvfb-run -s \"-screen 0 1400x900x24\" bash\n\nInstalling dependencies for specific environments\nIf you'd like to install the dependencies for only specific\nenvironments, see setup.py. We\nmaintain the lists of dependencies on a per-environment group basis.\n\nEnvironments\nSee List of Environments and the gym site.\nFor information on creating your own environments, see Creating your own Environments.\n\nExamples\nSee the examples directory.\n\nRun examples\/agents\/random_agent.py to run a simple random agent.\nRun examples\/agents\/cem.py to run an actual learning agent (using the cross-entropy method).\nRun examples\/scripts\/list_envs to generate a list of all environments.\n\n\nTesting\nWe are using pytest for tests. You can run them via:\npytest\n\nResources\n\nOpenAI.com\nGym.OpenAI.com\nGym Docs\nGym Environments\nOpenAI Twitter\nOpenAI YouTube\n\n\nWhat's new\n\n\n2020-09-29 (v 0.17.3)\n\nAllow custom spaces in VectorEnv (thanks @tristandeleu!)\nCarRacing performance improvements (thanks @leocus!)\nDict spaces are now iterable (thanks @NotNANtoN!)\n\n\n\n\n\n2020-05-08 (v 0.17.2)\n\nremove unnecessary precision warning when creating Box with scalar bounds - thanks @johannespitz!\nremove six from the dependencies\n\n\nFetchEnv sample goal range can be specified through kwargs - thanks @YangRui2015!\n\n\n\n\n\n2020-03-05 (v 0.17.1)\n\nupdate cloudpickle dependency to be >=1.2.0,<1.4.0\n\n\n\n\n\n2020-02-21 (v 0.17.0)\n\nDrop python 2 support\n\n\nAdd python 3.8 build\n\n\n\n\n\n2020-02-09 (v 0.16.0)\n\nEnvSpec API change - remove tags field (retro-active version bump, the changes are actually already in the codebase since 0.15.5 - thanks @wookayin for keeping us in check!)\n\n\n\n\n\n2020-02-03 (v0.15.6)\n\npyglet 1.4 compatibility (this time for real :))\nFixed the bug in BipedalWalker and BipedalWalkerHardcore, bumped version to 3 (thanks @chozabu!)\n\n\n\n\n\n2020-01-24 (v0.15.5)\n\npyglet 1.4 compatibility\n\n\nremove python-opencv from the requirements\n\n\n\n\n\n2019-11-08 (v0.15.4)\n\nAdded multiple env wrappers (thanks @zuoxingdong and @hartikainen!)\n\n\nRemoved mujoco >= 2.0 support due to lack of tests\n\n\n\n\n\n2019-10-09 (v0.15.3)\n\nVectorEnv modifications - unified the VectorEnv api (added reset_async, reset_wait, step_async, step_wait methods to SyncVectorEnv); more flexibility in AsyncVectorEnv workers\n\n\n\n\n\n2019-08-23 (v0.15.2)\n\nMore Wrappers - AtariPreprocessing, FrameStack, GrayScaleObservation, FilterObservation,  FlattenDictObservationsWrapper, PixelObservationWrapper, TransformReward (thanks @zuoxingdong, @hartikainen)\nRemove rgb_rendering_tracking logic from mujoco environments (default behavior stays the same for the -v3 environments, rgb rendering returns a view from tracking camera)\nVelocity goal constraint for MountainCar (thanks @abhinavsagar)\nTaxi-v2 -> Taxi-v3 (add missing wall in the map to replicate env as describe in the original paper, thanks @kobotics)\n\n\n\n\n\n2019-07-26 (v0.14.0)\n\nWrapper cleanup\nSpec-related bug fixes\nVectorEnv fixes\n\n\n\n\n\n2019-06-21 (v0.13.1)\n\nBug fix for ALE 0.6 difficulty modes\nUse narrow range for pyglet versions\n\n\n\n\n\n2019-06-21 (v0.13.0)\n\nUpgrade to ALE 0.6 (atari-py 0.2.0) (thanks @JesseFarebro!)\n\n\n\n\n\n2019-06-21 (v0.12.6)\n\nAdded vectorized environments (thanks @tristandeleu!). Vectorized environment runs multiple copies of an environment in parallel. To create a vectorized version of an environment, use gym.vector.make(env_id, num_envs, **kwargs), for instance, gym.vector.make('Pong-v4',16).\n\n\n\n\n\n2019-05-28 (v0.12.5)\n\nfixed Fetch-slide environment to be solvable.\n\n\n\n\n\n2019-05-24 (v0.12.4)\n\nremove pyopengl dependency and use more narrow atari-py and box2d-py versions\n\n\n\n\n\n2019-03-25 (v0.12.1)\n\nrgb rendering in MuJoCo locomotion -v3 environments now comes from tracking camera (so that agent does not run away from the field of view). The old behaviour can be restored by passing rgb_rendering_tracking=False kwarg. Also, a potentially breaking change!!! Wrapper class now forwards methods and attributes to wrapped env.\n\n\n\n\n\n2019-02-26 (v0.12.0)\n\nrelease mujoco environments v3 with support for gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc\n\n\n\n\n\n2019-02-06 (v0.11.0)\n\nremove gym.spaces.np_random common PRNG; use per-instance PRNG instead.\nsupport for kwargs in gym.make\nlots of bugfixes\n\n\n\n\n2018-02-28: Release of a set of new robotics environments.\n\n2018-01-25: Made some aesthetic improvements and removed unmaintained parts of gym. This may seem like a downgrade in functionality, but it is actually a long-needed cleanup in preparation for some great new things that will be released in the next month.\n\n\nNow your Env and Wrapper subclasses should define step, reset, render, close, seed rather than underscored method names.\nRemoved the board_game, debugging, safety, parameter_tuning environments since they're not being maintained by us at OpenAI. We encourage authors and users to create new repositories for these environments.\nChanged MultiDiscrete action space to range from [0, ..., n-1] rather than [a, ..., b-1].\nNo more render(close=True), use env-specific methods to close the rendering.\nRemoved scoreboard directory, since site doesn't exist anymore.\nMoved gym\/monitoring to gym\/wrappers\/monitoring\nAdd dtype to Space.\nNot using python's built-in module anymore, using gym.logger\n\n\n\n2018-01-24: All continuous control environments now use mujoco_py >= 1.50.\nVersions have been updated accordingly to -v2, e.g. HalfCheetah-v2. Performance\nshould be similar (see https:\/\/github.com\/openai\/gym\/pull\/834) but there are likely\nsome differences due to changes in MuJoCo.\n\n2017-06-16: Make env.spec into a property to fix a bug that occurs\nwhen you try to print out an unregistered Env.\n\n2017-05-13: BACKWARDS INCOMPATIBILITY: The Atari environments are now at\nv4. To keep using the old v3 environments, keep gym <= 0.8.2 and atari-py\n<= 0.0.21. Note that the v4 environments will not give identical results to\nexisting v3 results, although differences are minor. The v4 environments\nincorporate the latest Arcade Learning Environment (ALE), including several\nROM fixes, and now handle loading and saving of the emulator state. While\nseeds still ensure determinism, the effect of any given seed is not preserved\nacross this upgrade because the random number generator in ALE has changed.\nThe *NoFrameSkip-v4 environments should be considered the canonical Atari\nenvironments from now on.\n\n2017-03-05: BACKWARDS INCOMPATIBILITY: The configure method has been removed\nfrom Env. configure was not used by gym, but was used by some dependent\nlibraries including universe. These libraries will migrate away from the\nconfigure method by using wrappers instead. This change is on master and will be released with 0.8.0.\n\n2016-12-27: BACKWARDS INCOMPATIBILITY: The gym monitor is now a\nwrapper. Rather than starting monitoring as\nenv.monitor.start(directory), envs are now wrapped as follows:\nenv = wrappers.Monitor(env, directory). This change is on master\nand will be released with 0.7.0.\n\n2016-11-1: Several experimental changes to how a running monitor interacts\nwith environments. The monitor will now raise an error if reset() is called\nwhen the env has not returned done=True. The monitor will only record complete\nepisodes where done=True. Finally, the monitor no longer calls seed() on the\nunderlying env, nor does it record or upload seed information.\n\n2016-10-31: We're experimentally expanding the environment ID format\nto include an optional username.\n\n2016-09-21: Switch the Gym automated logger setup to configure the\nroot logger rather than just the 'gym' logger.\n\n2016-08-17: Calling close on an env will also close the monitor\nand any rendering windows.\n\n2016-08-17: The monitor will no longer write manifest files in\nreal-time, unless write_upon_reset=True is passed.\n\n2016-05-28: For controlled reproducibility, envs now support seeding\n(cf #91 and #135). The monitor records which seeds are used. We will\nsoon add seed information to the display on the scoreboard.\n\n\n","154":"\nWhat the f*ck Python! \ud83d\ude31\nExploring and understanding Python through surprising snippets.\nTranslations: Chinese \u4e2d\u6587 | Vietnamese Ti\u1ebfng Vi\u1ec7t | Add translation\nOther modes: Interactive | CLI\nPython, being a beautifully designed high-level and interpreter-based programming language, provides us with many features for the programmer's comfort. But sometimes, the outcomes of a Python snippet may not seem obvious at first sight.\nHere's a fun project attempting to explain what exactly is happening under the hood for some counter-intuitive snippets and lesser-known features in Python.\nWhile some of the examples you see below may not be WTFs in the truest sense, but they'll reveal some of the interesting parts of Python that you might be unaware of. I find it a nice way to learn the internals of a programming language, and I believe that you'll find it interesting too!\nIf you're an experienced Python programmer, you can take it as a challenge to get most of them right in the first attempt. You may have already experienced some of them before, and I might be able to revive sweet old memories of yours! \ud83d\ude05\nPS: If you're a returning reader, you can learn about the new modifications here (the examples marked with asterisk are the ones added in the latest major revision).\nSo, here we go...\nTable of Contents\n\nStructure of the Examples\n\n\u25b6 Some fancy Title\n\n\nUsage\n\ud83d\udc40 Examples\n\nSection: Strain your brain!\n\n\u25b6 First things first! *\n\u25b6 Strings can be tricky sometimes\n\u25b6 Be careful with chained operations\n\u25b6 How not to use is operator\n\u25b6 Hash brownies\n\u25b6 Deep down, we're all the same.\n\u25b6 Disorder within order *\n\u25b6 Keep trying... *\n\u25b6 For what?\n\u25b6 Evaluation time discrepancy\n\u25b6 is not ... is not is (not ...)\n\u25b6 A tic-tac-toe where X wins in the first attempt!\n\u25b6 The sticky output function\n\u25b6 The chicken-egg problem *\n\u25b6 Subclass relationships\n\u25b6 Methods equality and identity\n\u25b6 All-true-ation *\n\u25b6 The surprising comma\n\u25b6 Strings and the backslashes\n\u25b6 not knot!\n\u25b6 Half triple-quoted strings\n\u25b6 What's wrong with booleans?\n\u25b6 Class attributes and instance attributes\n\u25b6 yielding None\n\u25b6 Yielding from... return! *\n\u25b6 Nan-reflexivity *\n\u25b6 Mutating the immutable!\n\u25b6 The disappearing variable from outer scope\n\u25b6 The mysterious key type conversion\n\u25b6 Let's see if you can guess this?\n\n\nSection: Slippery Slopes\n\n\u25b6 Modifying a dictionary while iterating over it\n\u25b6 Stubborn del operation\n\u25b6 The out of scope variable\n\u25b6 Deleting a list item while iterating\n\u25b6 Lossy zip of iterators *\n\u25b6 Loop variables leaking out!\n\u25b6 Beware of default mutable arguments!\n\u25b6 Catching the Exceptions\n\u25b6 Same operands, different story!\n\u25b6 Name resolution ignoring class scope\n\u25b6 Needles in a Haystack *\n\u25b6 Splitsies *\n\u25b6 Wild imports *\n\u25b6 All sorted? *\n\u25b6 Midnight time doesn't exist?\n\n\nSection: The Hidden treasures!\n\n\u25b6 Okay Python, Can you make me fly?\n\u25b6 goto, but why?\n\u25b6 Brace yourself!\n\u25b6 Let's meet Friendly Language Uncle For Life\n\u25b6 Even Python understands that love is complicated\n\u25b6 Yes, it exists!\n\u25b6 Ellipsis *\n\u25b6 Inpinity\n\u25b6 Let's mangle\n\n\nSection: Appearances are deceptive!\n\n\u25b6 Skipping lines?\n\u25b6 Teleportation\n\u25b6 Well, something is fishy...\n\n\nSection: Miscellaneous\n\n\u25b6 += is faster\n\u25b6 Let's make a giant string!\n\u25b6 Slowing down dict lookups *\n\u25b6 Bloating instance dicts *\n\u25b6 Minor Ones *\n\n\n\n\nContributing\nAcknowledgements\n\ud83c\udf93 License\n\nSurprise your friends as well!\nMore content like this?\n\n\n\nStructure of the Examples\nAll the examples are structured like below:\n\n\u25b6 Some fancy Title\n# Set up the code.\n# Preparation for the magic...\nOutput (Python version(s)):\n>>> triggering_statement\nSome unexpected output\n(Optional): One line describing the unexpected output.\n\ud83d\udca1 Explanation:\n\nBrief explanation of what's happening and why is it happening.\n\n# Set up code\n# More examples for further clarification (if necessary)\nOutput (Python version(s)):\n>>> trigger # some example that makes it easy to unveil the magic\n# some justified output\n\nNote: All the examples are tested on Python 3.5.2 interactive interpreter, and they should work for all the Python versions unless explicitly specified before the output.\nUsage\nA nice way to get the most out of these examples, in my opinion, is to read them chronologically, and for every example:\n\nCarefully read the initial code for setting up the example. If you're an experienced Python programmer, you'll successfully anticipate what's going to happen next most of the time.\nRead the output snippets and,\n\nCheck if the outputs are the same as you'd expect.\nMake sure if you know the exact reason behind the output being the way it is.\n\nIf the answer is no (which is perfectly okay), take a deep breath, and read the explanation (and if you still don't understand, shout out! and create an issue here).\nIf yes, give a gentle pat on your back, and you may skip to the next example.\n\n\n\n\n\nPS: You can also read WTFPython at the command line using the pypi package,\n$ pip install wtfpython -U\n$ wtfpython\n\n\ud83d\udc40 Examples\nSection: Strain your brain!\n\u25b6 First things first! *\nFor some reason, the Python 3.8's \"Walrus\" operator (:=) has become quite popular. Let's check it out,\n1.\n# Python version 3.8+\n\n>>> a = \"wtf_walrus\"\n>>> a\n'wtf_walrus'\n\n>>> a := \"wtf_walrus\"\nFile \"<stdin>\", line 1\n    a := \"wtf_walrus\"\n      ^\nSyntaxError: invalid syntax\n\n>>> (a := \"wtf_walrus\") # This works though\n'wtf_walrus'\n>>> a\n'wtf_walrus'\n2 .\n# Python version 3.8+\n\n>>> a = 6, 9\n>>> a\n(6, 9)\n\n>>> (a := 6, 9)\n(6, 9)\n>>> a\n6\n\n>>> a, b = 6, 9 # Typical unpacking\n>>> a, b\n(6, 9)\n>>> (a, b = 16, 19) # Oops\n  File \"<stdin>\", line 1\n    (a, b = 6, 9)\n          ^\nSyntaxError: invalid syntax\n\n>>> (a, b := 16, 19) # This prints out a weird 3-tuple\n(6, 16, 19)\n\n>>> a # a is still unchanged?\n6\n\n>>> b\n16\n\ud83d\udca1 Explanation\nQuick walrus operator refresher\nThe Walrus operator (:=) was introduced in Python 3.8, it can be useful in situations where you'd want to assign values to variables within an expression.\ndef some_func():\n        # Assume some expensive computation here\n        # time.sleep(1000)\n        return 5\n\n# So instead of,\nif some_func():\n        print(some_func()) # Which is bad practice since computation is happening twice\n\n# or\na = some_func()\nif a:\n    print(a)\n\n# Now you can concisely write\nif a := some_func():\n        print(a)\nOutput (> 3.8):\n5\n5\n5\nThis saved one line of code, and implicitly prevented invoking some_func twice.\n\n\nUnparenthesized \"assignment expression\" (use of walrus operator), is restricted at the top level, hence the SyntaxError in the a := \"wtf_walrus\" statement of the first snippet. Parenthesizing it worked as expected and assigned a.\n\n\nAs usual, parenthesizing of an expression containing = operator is not allowed. Hence the syntax error in (a, b = 6, 9).\n\n\nThe syntax of the Walrus operator is of the form NAME:= expr, where NAME is a valid identifier, and expr is a valid expression. Hence, iterable packing and unpacking are not supported which means,\n\n\n(a := 6, 9) is equivalent to ((a := 6), 9) and ultimately (a, 9)  (where a's value is 6')\n>>> (a := 6, 9) == ((a := 6), 9)\nTrue\n>>> x = (a := 696, 9)\n>>> x\n(696, 9)\n>>> x[0] is a # Both reference same memory location\nTrue\n\n\nSimilarly, (a, b := 16, 19) is equivalent to (a, (b := 16), 19) which is nothing but a 3-tuple.\n\n\n\n\n\n\u25b6 Strings can be tricky sometimes\n1.\n>>> a = \"some_string\"\n>>> id(a)\n140420665652016\n>>> id(\"some\" + \"_\" + \"string\") # Notice that both the ids are same.\n140420665652016\n2.\n>>> a = \"wtf\"\n>>> b = \"wtf\"\n>>> a is b\nTrue\n\n>>> a = \"wtf!\"\n>>> b = \"wtf!\"\n>>> a is b\nFalse\n3.\n>>> a, b = \"wtf!\", \"wtf!\"\n>>> a is b # All versions except 3.7.x\nTrue\n\n>>> a = \"wtf!\"; b = \"wtf!\"\n>>> a is b # This will print True or False depending on where you're invoking it (python shell \/ ipython \/ as a script)\nFalse\n# This time in file some_file.py\na = \"wtf!\"\nb = \"wtf!\"\nprint(a is b)\n\n# prints True when the module is invoked!\n4.\nOutput (< Python3.7 )\n>>> 'a' * 20 is 'aaaaaaaaaaaaaaaaaaaa'\nTrue\n>>> 'a' * 21 is 'aaaaaaaaaaaaaaaaaaaaa'\nFalse\nMakes sense, right?\n\ud83d\udca1 Explanation:\n\nThe behavior in first and second snippets is due to a CPython optimization (called string interning) that tries to use existing immutable objects in some cases rather than creating a new object every time.\nAfter being \"interned,\" many variables may reference the same string object in memory (saving memory thereby).\nIn the snippets above, strings are implicitly interned. The decision of when to implicitly intern a string is implementation-dependent. There are some rules that can be used to guess if a string will be interned or not:\n\nAll length 0 and length 1 strings are interned.\nStrings are interned at compile time ('wtf' will be interned but ''.join(['w', 't', 'f']) will not be interned)\nStrings that are not composed of ASCII letters, digits or underscores, are not interned. This explains why 'wtf!' was not interned due to !. CPython implementation of this rule can be found here\n\n\n\nWhen a and b are set to \"wtf!\" in the same line, the Python interpreter creates a new object, then references the second variable at the same time. If you do it on separate lines, it doesn't \"know\" that there's already \"wtf!\" as an object (because \"wtf!\" is not implicitly interned as per the facts mentioned above). It's a compile-time optimization. This optimization doesn't apply to 3.7.x versions of CPython (check this issue for more discussion).\nA compile unit in an interactive environment like IPython consists of a single statement, whereas it consists of the entire module in case of modules. a, b = \"wtf!\", \"wtf!\" is single statement, whereas a = \"wtf!\"; b = \"wtf!\" are two statements in a single line. This explains why the identities are different in a = \"wtf!\"; b = \"wtf!\", and also explain why they are same when invoked in some_file.py\nThe abrupt change in the output of the fourth snippet is due to a peephole optimization technique known as Constant folding. This means the expression 'a'*20 is replaced by 'aaaaaaaaaaaaaaaaaaaa' during compilation to save a  few clock cycles during runtime. Constant folding only occurs for strings having a length of less than 21. (Why? Imagine the size of .pyc file generated as a result of the expression 'a'*10**10). Here's the implementation source for the same.\nNote: In Python 3.7, Constant folding was moved out from peephole optimizer to the new AST optimizer with some change in logic as well, so the fourth snippet doesn't work for Python 3.7. You can read more about the change here.\n\n\n\u25b6 Be careful with chained operations\n>>> (False == False) in [False] # makes sense\nFalse\n>>> False == (False in [False]) # makes sense\nFalse\n>>> False == False in [False] # now what?\nTrue\n\n>>> True is False == False\nFalse\n>>> False is False is False\nTrue\n\n>>> 1 > 0 < 1\nTrue\n>>> (1 > 0) < 1\nFalse\n>>> 1 > (0 < 1)\nFalse\n\ud83d\udca1 Explanation:\nAs per https:\/\/docs.python.org\/3\/reference\/expressions.html#membership-test-operations\n\nFormally, if a, b, c, ..., y, z are expressions and op1, op2, ..., opN are comparison operators, then a op1 b op2 c ... y opN z is equivalent to a op1 b and b op2 c and ... y opN z, except that each expression is evaluated at most once.\n\nWhile such behavior might seem silly to you in the above examples, it's fantastic with stuff like a == b == c and 0 <= x <= 100.\n\nFalse is False is False is equivalent to (False is False) and (False is False)\nTrue is False == False is equivalent to True is False and False == False and since the first part of the statement (True is False) evaluates to False, the overall expression evaluates to False.\n1 > 0 < 1 is equivalent to 1 > 0 and 0 < 1 which evaluates to True.\nThe expression (1 > 0) < 1 is equivalent to True < 1 and\n>>> int(True)\n1\n>>> True + 1 #not relevant for this example, but just for fun\n2\nSo, 1 < 1 evaluates to False\n\n\n\u25b6 How not to use is operator\nThe following is a very famous example present all over the internet.\n1.\n>>> a = 256\n>>> b = 256\n>>> a is b\nTrue\n\n>>> a = 257\n>>> b = 257\n>>> a is b\nFalse\n2.\n>>> a = []\n>>> b = []\n>>> a is b\nFalse\n\n>>> a = tuple()\n>>> b = tuple()\n>>> a is b\nTrue\n3.\nOutput\n>>> a, b = 257, 257\n>>> a is b\nTrue\nOutput (Python 3.7.x specifically)\n>>> a, b = 257, 257\n>> a is b\nFalse\n\ud83d\udca1 Explanation:\nThe difference between is and ==\n\nis operator checks if both the operands refer to the same object (i.e., it checks if the identity of the operands matches or not).\n== operator compares the values of both the operands and checks if they are the same.\nSo is is for reference equality and == is for value equality. An example to clear things up,\n>>> class A: pass\n>>> A() is A() # These are two empty objects at two different memory locations.\nFalse\n\n\n256 is an existing object but 257 isn't\nWhen you start up python the numbers from -5 to 256 will be allocated. These numbers are used a lot, so it makes sense just to have them ready.\nQuoting from https:\/\/docs.python.org\/3\/c-api\/long.html\n\nThe current implementation keeps an array of integer objects for all integers between -5 and 256, when you create an int in that range you just get back a reference to the existing object. So it should be possible to change the value of 1. I suspect the behavior of Python, in this case, is undefined. :-)\n\n>>> id(256)\n10922528\n>>> a = 256\n>>> b = 256\n>>> id(a)\n10922528\n>>> id(b)\n10922528\n>>> id(257)\n140084850247312\n>>> x = 257\n>>> y = 257\n>>> id(x)\n140084850247440\n>>> id(y)\n140084850247344\nHere the interpreter isn't smart enough while executing y = 257 to recognize that we've already created an integer of the value 257, and so it goes on to create another object in the memory.\nSimilar optimization applies to other immutable objects like empty tuples as well. Since lists are mutable, that's why [] is [] will return False and () is () will return True. This explains our second snippet. Let's move on to the third one,\nBoth a and b refer to the same object when initialized with same value in the same line.\nOutput\n>>> a, b = 257, 257\n>>> id(a)\n140640774013296\n>>> id(b)\n140640774013296\n>>> a = 257\n>>> b = 257\n>>> id(a)\n140640774013392\n>>> id(b)\n140640774013488\n\n\nWhen a and b are set to 257 in the same line, the Python interpreter creates a new object, then references the second variable at the same time. If you do it on separate lines, it doesn't \"know\" that there's already 257 as an object.\n\n\nIt's a compiler optimization and specifically applies to the interactive environment. When you enter two lines in a live interpreter, they're compiled separately, therefore optimized separately. If you were to try this example in a .py file, you would not see the same behavior, because the file is compiled all at once. This optimization is not limited to integers, it works for other immutable data types like strings (check the \"Strings are tricky example\") and floats as well,\n>>> a, b = 257.0, 257.0\n>>> a is b\nTrue\n\n\nWhy didn't this work for Python 3.7? The abstract reason is because such compiler optimizations are implementation specific (i.e. may change with version, OS, etc). I'm still figuring out what exact implementation change cause the issue, you can check out this issue for updates.\n\n\n\n\u25b6 Hash brownies\n1.\nsome_dict = {}\nsome_dict[5.5] = \"JavaScript\"\nsome_dict[5.0] = \"Ruby\"\nsome_dict[5] = \"Python\"\nOutput:\n>>> some_dict[5.5]\n\"JavaScript\"\n>>> some_dict[5.0] # \"Python\" destroyed the existence of \"Ruby\"?\n\"Python\"\n>>> some_dict[5] \n\"Python\"\n\n>>> complex_five = 5 + 0j\n>>> type(complex_five)\ncomplex\n>>> some_dict[complex_five]\n\"Python\"\nSo, why is Python all over the place?\n\ud83d\udca1 Explanation\n\n\nUniqueness of keys in a Python dictionary is by equivalence, not identity. So even though 5, 5.0, and 5 + 0j are distinct objects of different types, since they're equal, they can't both be in the same dict (or set). As soon as you insert any one of them, attempting to look up any distinct but equivalent key will succeed with the original mapped value (rather than failing with a KeyError):\n>>> 5 == 5.0 == 5 + 0j\nTrue\n>>> 5 is not 5.0 is not 5 + 0j\nTrue\n>>> some_dict = {}\n>>> some_dict[5.0] = \"Ruby\"\n>>> 5.0 in some_dict\nTrue\n>>> (5 in some_dict) and (5 + 0j in some_dict)\nTrue\n\n\nThis applies when setting an item as well. So when you do some_dict[5] = \"Python\", Python finds the existing item with equivalent key 5.0 -> \"Ruby\", overwrites its value in place, and leaves the original key alone.\n>>> some_dict\n{5.0: 'Ruby'}\n>>> some_dict[5] = \"Python\"\n>>> some_dict\n{5.0: 'Python'}\n\n\nSo how can we update the key to 5 (instead of 5.0)? We can't actually do this update in place, but what we can do is first delete the key (del some_dict[5.0]), and then set it (some_dict[5]) to get the integer 5 as the key instead of floating 5.0, though this should be needed in rare cases.\n\n\nHow did Python find 5 in a dictionary containing 5.0? Python does this in constant time without having to scan through every item by using hash functions. When Python looks up a key foo in a dict, it first computes hash(foo) (which runs in constant-time). Since in Python it is required that objects that compare equal also have the same hash value (docs here), 5, 5.0, and 5 + 0j have the same hash value.\n>>> 5 == 5.0 == 5 + 0j\nTrue\n>>> hash(5) == hash(5.0) == hash(5 + 0j)\nTrue\nNote: The inverse is not necessarily true: Objects with equal hash values may themselves be unequal. (This causes what's known as a hash collision, and degrades the constant-time performance that hashing usually provides.)\n\n\n\n\u25b6 Deep down, we're all the same.\nclass WTF:\n  pass\nOutput:\n>>> WTF() == WTF() # two different instances can't be equal\nFalse\n>>> WTF() is WTF() # identities are also different\nFalse\n>>> hash(WTF()) == hash(WTF()) # hashes _should_ be different as well\nTrue\n>>> id(WTF()) == id(WTF())\nTrue\n\ud83d\udca1 Explanation:\n\n\nWhen id was called, Python created a WTF class object and passed it to the id function. The id function takes its id (its memory location), and throws away the object. The object is destroyed.\n\n\nWhen we do this twice in succession, Python allocates the same memory location to this second object as well. Since (in CPython) id uses the memory location as the object id, the id of the two objects is the same.\n\n\nSo, the object's id is unique only for the lifetime of the object. After the object is destroyed, or before it is created, something else can have the same id.\n\n\nBut why did the is operator evaluated to False? Let's see with this snippet.\nclass WTF(object):\n  def __init__(self): print(\"I\")\n  def __del__(self): print(\"D\")\nOutput:\n>>> WTF() is WTF()\nI\nI\nD\nD\nFalse\n>>> id(WTF()) == id(WTF())\nI\nD\nI\nD\nTrue\nAs you may observe, the order in which the objects are destroyed is what made all the difference here.\n\n\n\n\u25b6 Disorder within order *\nfrom collections import OrderedDict\n\ndictionary = dict()\ndictionary[1] = 'a'; dictionary[2] = 'b';\n\nordered_dict = OrderedDict()\nordered_dict[1] = 'a'; ordered_dict[2] = 'b';\n\nanother_ordered_dict = OrderedDict()\nanother_ordered_dict[2] = 'b'; another_ordered_dict[1] = 'a';\n\nclass DictWithHash(dict):\n    \"\"\"\n    A dict that also implements __hash__ magic.\n    \"\"\"\n    __hash__ = lambda self: 0\n\nclass OrderedDictWithHash(OrderedDict):\n    \"\"\"\n    An OrderedDict that also implements __hash__ magic.\n    \"\"\"\n    __hash__ = lambda self: 0\nOutput\n>>> dictionary == ordered_dict # If a == b\nTrue\n>>> dictionary == another_ordered_dict # and b == c\nTrue\n>>> ordered_dict == another_ordered_dict # then why isn't c == a ??\nFalse\n\n# We all know that a set consists of only unique elements,\n# let's try making a set of these dictionaries and see what happens...\n\n>>> len({dictionary, ordered_dict, another_ordered_dict})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unhashable type: 'dict'\n\n# Makes sense since dict don't have __hash__ implemented, let's use\n# our wrapper classes.\n>>> dictionary = DictWithHash()\n>>> dictionary[1] = 'a'; dictionary[2] = 'b';\n>>> ordered_dict = OrderedDictWithHash()\n>>> ordered_dict[1] = 'a'; ordered_dict[2] = 'b';\n>>> another_ordered_dict = OrderedDictWithHash()\n>>> another_ordered_dict[2] = 'b'; another_ordered_dict[1] = 'a';\n>>> len({dictionary, ordered_dict, another_ordered_dict})\n1\n>>> len({ordered_dict, another_ordered_dict, dictionary}) # changing the order\n2\nWhat is going on here?\n\ud83d\udca1 Explanation:\n\n\nThe reason why intransitive equality didn't hold among dictionary, ordered_dict and another_ordered_dict is because of the way __eq__ method is implemented in OrderedDict class. From the docs\n\nEquality tests between OrderedDict objects are order-sensitive and are implemented as list(od1.items())==list(od2.items()). Equality tests between OrderedDict objects and other Mapping objects are order-insensitive like regular dictionaries.\n\n\n\nThe reason for this equality in behavior is that it allows OrderedDict objects to be directly substituted anywhere a regular dictionary is used.\n\n\nOkay, so why did changing the order affect the length of the generated set object? The answer is the lack of intransitive equality only. Since sets are \"unordered\" collections of unique elements, the order in which elements are inserted shouldn't matter. But in this case, it does matter. Let's break it down a bit,\n>>> some_set = set()\n>>> some_set.add(dictionary) # these are the mapping objects from the snippets above\n>>> ordered_dict in some_set\nTrue\n>>> some_set.add(ordered_dict)\n>>> len(some_set)\n1\n>>> another_ordered_dict in some_set\nTrue\n>>> some_set.add(another_ordered_dict)\n>>> len(some_set)\n1\n\n>>> another_set = set()\n>>> another_set.add(ordered_dict)\n>>> another_ordered_dict in another_set\nFalse\n>>> another_set.add(another_ordered_dict)\n>>> len(another_set)\n2\n>>> dictionary in another_set\nTrue\n>>> another_set.add(another_ordered_dict)\n>>> len(another_set)\n2\nSo the inconsistency is due to another_ordered_dict in another_set being False because ordered_dict was already present in another_set and as observed before, ordered_dict == another_ordered_dict is False.\n\n\n\n\u25b6 Keep trying... *\ndef some_func():\n    try:\n        return 'from_try'\n    finally:\n        return 'from_finally'\n\ndef another_func(): \n    for _ in range(3):\n        try:\n            continue\n        finally:\n            print(\"Finally!\")\n\ndef one_more_func(): # A gotcha!\n    try:\n        for i in range(3):\n            try:\n                1 \/ i\n            except ZeroDivisionError:\n                # Let's throw it here and handle it outside for loop\n                raise ZeroDivisionError(\"A trivial divide by zero error\")\n            finally:\n                print(\"Iteration\", i)\n                break\n    except ZeroDivisionError as e:\n        print(\"Zero division error occurred\", e)\nOutput:\n>>> some_func()\n'from_finally'\n\n>>> another_func()\nFinally!\nFinally!\nFinally!\n\n>>> 1 \/ 0\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nZeroDivisionError: division by zero\n\n>>> one_more_func()\nIteration 0\n\ud83d\udca1 Explanation:\n\nWhen a return, break or continue statement is executed in the try suite of a \"try\u2026finally\" statement, the finally clause is also executed on the way out.\nThe return value of a function is determined by the last return statement executed. Since the finally clause always executes, a return statement executed in the finally clause will always be the last one executed.\nThe caveat here is, if the finally clause executes a return or break statement, the temporarily saved exception is discarded.\n\n\n\u25b6 For what?\nsome_string = \"wtf\"\nsome_dict = {}\nfor i, some_dict[i] in enumerate(some_string):\n    i = 10\nOutput:\n>>> some_dict # An indexed dict appears.\n{0: 'w', 1: 't', 2: 'f'}\n\ud83d\udca1 Explanation:\n\n\nA for statement is defined in the Python grammar as:\nfor_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]\n\nWhere exprlist is the assignment target. This means that the equivalent of {exprlist} = {next_value} is executed for each item in the iterable.\nAn interesting example that illustrates this:\nfor i in range(4):\n    print(i)\n    i = 10\nOutput:\n0\n1\n2\n3\n\nDid you expect the loop to run just once?\n\ud83d\udca1 Explanation:\n\nThe assignment statement i = 10 never affects the iterations of the loop because of the way for loops work in Python. Before the beginning of every iteration, the next item provided by the iterator (range(4) in this case) is unpacked and assigned the target list variables (i in this case).\n\n\n\nThe enumerate(some_string) function yields a new value i (a counter going up) and a character from the some_string in each iteration. It then sets the (just assigned) i key of the dictionary some_dict to that character. The unrolling of the loop can be simplified as:\n>>> i, some_dict[i] = (0, 'w')\n>>> i, some_dict[i] = (1, 't')\n>>> i, some_dict[i] = (2, 'f')\n>>> some_dict\n\n\n\n\u25b6 Evaluation time discrepancy\n1.\narray = [1, 8, 15]\n# A typical generator expression\ngen = (x for x in array if array.count(x) > 0)\narray = [2, 8, 22]\nOutput:\n>>> print(list(gen)) # Where did the other values go?\n[8]\n2.\narray_1 = [1,2,3,4]\ngen_1 = (x for x in array_1)\narray_1 = [1,2,3,4,5]\n\narray_2 = [1,2,3,4]\ngen_2 = (x for x in array_2)\narray_2[:] = [1,2,3,4,5]\nOutput:\n>>> print(list(gen_1))\n[1, 2, 3, 4]\n\n>>> print(list(gen_2))\n[1, 2, 3, 4, 5]\n3.\narray_3 = [1, 2, 3]\narray_4 = [10, 20, 30]\ngen = (i + j for i in array_3 for j in array_4)\n\narray_3 = [4, 5, 6]\narray_4 = [400, 500, 600]\nOutput:\n>>> print(list(gen))\n[401, 501, 601, 402, 502, 602, 403, 503, 603]\n\ud83d\udca1 Explanation\n\n\nIn a generator expression, the in clause is evaluated at declaration time, but the conditional clause is evaluated at runtime.\n\n\nSo before runtime, array is re-assigned to the list [2, 8, 22], and since out of 1, 8 and 15, only the count of 8 is greater than 0, the generator only yields 8.\n\n\nThe differences in the output of g1 and g2 in the second part is due the way variables array_1 and array_2 are re-assigned values.\n\n\nIn the first case, array_1 is binded to the new object [1,2,3,4,5] and since the in clause is evaluated at the declaration time it still refers to the old object [1,2,3,4] (which is not destroyed).\n\n\nIn the second case, the slice assignment to array_2 updates the same old object [1,2,3,4] to [1,2,3,4,5]. Hence both the g2 and array_2 still have reference to the same object (which has now been updated to [1,2,3,4,5]).\n\n\nOkay, going by the logic discussed so far, shouldn't be the value of list(g) in the third snippet be [11, 21, 31, 12, 22, 32, 13, 23, 33]? (because array_3 and array_4 are going to behave just like array_1). The reason why (only) array_4 values got updated is explained in PEP-289\n\nOnly the outermost for-expression is evaluated immediately, the other expressions are deferred until the generator is run.\n\n\n\n\n\u25b6 is not ... is not is (not ...)\n>>> 'something' is not None\nTrue\n>>> 'something' is (not None)\nFalse\n\ud83d\udca1 Explanation\n\nis not is a single binary operator, and has behavior different than using is and not separated.\nis not evaluates to False if the variables on either side of the operator point to the same object and True otherwise.\nIn the example, (not None) evaluates to True since the value None is False in a boolean context, so the expression becomes 'something' is True.\n\n\n\u25b6 A tic-tac-toe where X wins in the first attempt!\n# Let's initialize a row\nrow = [\"\"] * 3 #row i['', '', '']\n# Let's make a board\nboard = [row] * 3\nOutput:\n>>> board\n[['', '', ''], ['', '', ''], ['', '', '']]\n>>> board[0]\n['', '', '']\n>>> board[0][0]\n''\n>>> board[0][0] = \"X\"\n>>> board\n[['X', '', ''], ['X', '', ''], ['X', '', '']]\nWe didn't assign three \"X\"s, did we?\n\ud83d\udca1 Explanation:\nWhen we initialize row variable, this visualization explains what happens in the memory\n\nAnd when the board is initialized by multiplying the row, this is what happens inside the memory (each of the elements board[0], board[1] and board[2] is a reference to the same list referred by row)\n\nWe can avoid this scenario here by not using row variable to generate board. (Asked in this issue).\n>>> board = [['']*3 for _ in range(3)]\n>>> board[0][0] = \"X\"\n>>> board\n[['X', '', ''], ['', '', ''], ['', '', '']]\n\n\u25b6 The sticky output function\n1.\nfuncs = []\nresults = []\nfor x in range(7):\n    def some_func():\n        return x\n    funcs.append(some_func)\n    results.append(some_func())  # note the function call here\n\nfuncs_results = [func() for func in funcs]\nOutput:\n>>> results\n[0, 1, 2, 3, 4, 5, 6]\n>>> funcs_results\n[6, 6, 6, 6, 6, 6, 6]\nEven when the values of x were different in every iteration prior to appending some_func to funcs, all the functions return 6.\n2.\n>>> powers_of_x = [lambda x: x**i for i in range(10)]\n>>> [f(2) for f in powers_of_x]\n[512, 512, 512, 512, 512, 512, 512, 512, 512, 512]\n\ud83d\udca1 Explanation\n\n\nWhen defining a function inside a loop that uses the loop variable in its body, the loop function's closure is bound to the variable, not its value. So all of the functions use the latest value assigned to the variable for computation.\n\n\nTo get the desired behavior you can pass in the loop variable as a named variable to the function. Why does this work? Because this will define the variable\nwithin the function's scope.\nfuncs = []\nfor x in range(7):\n    def some_func(x=x):\n        return x\n    funcs.append(some_func)\nOutput:\n>>> funcs_results = [func() for func in funcs]\n>>> funcs_results\n[0, 1, 2, 3, 4, 5, 6]\n\n\n\n\u25b6 The chicken-egg problem *\n1.\n>>> isinstance(3, int)\nTrue\n>>> isinstance(type, object)\nTrue\n>>> isinstance(object, type)\nTrue\nSo which is the \"ultimate\" base class? There's more to the confusion by the way,\n2.\n>>> class A: pass\n>>> isinstance(A, A)\nFalse\n>>> isinstance(type, type)\nTrue\n>>> isinstance(object, object)\nTrue\n3.\n>>> issubclass(int, object)\nTrue\n>>> issubclass(type, object)\nTrue\n>>> issubclass(object, type)\nFalse\n\ud83d\udca1 Explanation\n\ntype is a metaclass in Python.\nEverything is an object in Python, which includes classes as well as their objects (instances).\nclass type is the metaclass of class object, and every class (including type) has inherited directly or indirectly from object.\nThere is no real base class among object and type. The confusion in the above snippets is arising because we're thinking about these relationships (issubclass and isinstance) in terms of Python classes. The relationship between object and type can't be reproduced in pure python. To be more precise the following relationships can't be reproduced in pure Python,\n\nclass A is an instance of class B, and class B is an instance of class A.\nclass A is an instance of itself.\n\n\nThese relationships between object and type (both being instances of each other as well as themselves) exist in Python because of \"cheating\" at the implementation level.\n\n\n\u25b6 Subclass relationships\nOutput:\n>>> from collections import Hashable\n>>> issubclass(list, object)\nTrue\n>>> issubclass(object, Hashable)\nTrue\n>>> issubclass(list, Hashable)\nFalse\nThe Subclass relationships were expected to be transitive, right? (i.e., if A is a subclass of B, and B is a subclass of C, the A should a subclass of C)\n\ud83d\udca1 Explanation:\n\nSubclass relationships are not necessarily transitive in Python. Anyone is allowed to define their own, arbitrary __subclasscheck__ in a metaclass.\nWhen issubclass(cls, Hashable) is called, it simply looks for non-Falsey \"__hash__\" method in cls or anything it inherits from.\nSince object is hashable, but list is non-hashable, it breaks the transitivity relation.\nMore detailed explanation can be found here.\n\n\n\u25b6 Methods equality and identity\n\n\n\nclass SomeClass:\n    def method(self):\n        pass\n\n    @classmethod\n    def classm(cls):\n        pass\n\n    @staticmethod\n    def staticm():\n        pass\nOutput:\n>>> print(SomeClass.method is SomeClass.method)\nTrue\n>>> print(SomeClass.classm is SomeClass.classm)\nFalse\n>>> print(SomeClass.classm == SomeClass.classm)\nTrue\n>>> print(SomeClass.staticm is SomeClass.staticm)\nTrue\nAccessing classm twice, we get an equal object, but not the same one? Let's see what happens\nwith instances of SomeClass:\n\n\n\no1 = SomeClass()\no2 = SomeClass()\nOutput:\n>>> print(o1.method == o2.method)\nFalse\n>>> print(o1.method == o1.method)\nTrue\n>>> print(o1.method is o1.method)\nFalse\n>>> print(o1.classm is o1.classm)\nFalse\n>>> print(o1.classm == o1.classm == o2.classm == SomeClass.classm)\nTrue\n>>> print(o1.staticm is o1.staticm is o2.staticm is SomeClass.staticm)\nTrue\nAccessing classm or method twice, creates equal but not same objects for the same instance of SomeClass.\n\ud83d\udca1 Explanation\n\nFunctions are descriptors. Whenever a function is accessed as an\nattribute, the descriptor is invoked, creating a method object which \"binds\" the function with the object owning the\nattribute. If called, the method calls the function, implicitly passing the bound object as the first argument\n(this is how we get self as the first argument, despite not passing it explicitly).\n\n>>> o1.method\n<bound method SomeClass.method of <__main__.SomeClass object at ...>>\n\nAccessing the attribute multiple times creates a method object every time! Therefore o1.method is o1.method is\nnever truthy. Accessing functions as class attributes (as opposed to instance) does not create methods, however; so\nSomeClass.method is SomeClass.method is truthy.\n\n>>> SomeClass.method\n<function SomeClass.method at ...>\n\nclassmethod transforms functions into class methods. Class methods are descriptors that, when accessed, create\na method object which binds the class (type) of the object, instead of the object itself.\n\n>>> o1.classm\n<bound method SomeClass.classm of <class '__main__.SomeClass'>>\n\nUnlike functions, classmethods will create a method also when accessed as class attributes (in which case they\nbind the class, not to the type of it). So SomeClass.classm is SomeClass.classm is falsy.\n\n>>> SomeClass.classm\n<bound method SomeClass.classm of <class '__main__.SomeClass'>>\n\nA method object compares equal when both the functions are equal, and the bound objects are the same. So\no1.method == o1.method is truthy, although not the same object in memory.\nstaticmethod transforms functions into a \"no-op\" descriptor, which returns the function as-is. No method\nobjects are ever created, so comparison with is is truthy.\n\n>>> o1.staticm\n<function SomeClass.staticm at ...>\n>>> SomeClass.staticm\n<function SomeClass.staticm at ...>\n\nHaving to create new \"method\" objects every time Python calls instance methods and having to modify the arguments\nevery time in order to insert self affected performance badly.\nCPython 3.7 solved it by introducing new opcodes that deal with calling methods\nwithout creating the temporary method objects. This is used only when the accessed function is actually called, so the\nsnippets here are not affected, and still generate methods :)\n\n\u25b6 All-true-ation *\n>>> all([True, True, True])\nTrue\n>>> all([True, True, False])\nFalse\n\n>>> all([])\nTrue\n>>> all([[]])\nFalse\n>>> all([[[]]])\nTrue\nWhy's this True-False alteration?\n\ud83d\udca1 Explanation:\n\n\nThe implementation of all function is equivalent to\n\n\ndef all(iterable):\n    for element in iterable:\n        if not element:\n            return False\n    return True\n\n\nall([]) returns True since the iterable is empty.\n\n\nall([[]]) returns False because not [] is True is equivalent to not False as the list inside the iterable is empty.\n\n\nall([[[]]]) and higher recursive variants are always True since not [[]], not [[[]]], and so on are equivalent to not True.\n\n\n\n\u25b6 The surprising comma\nOutput (< 3.6):\n>>> def f(x, y,):\n...     print(x, y)\n...\n>>> def g(x=4, y=5,):\n...     print(x, y)\n...\n>>> def h(x, **kwargs,):\n  File \"<stdin>\", line 1\n    def h(x, **kwargs,):\n                     ^\nSyntaxError: invalid syntax\n\n>>> def h(*args,):\n  File \"<stdin>\", line 1\n    def h(*args,):\n                ^\nSyntaxError: invalid syntax\n\ud83d\udca1 Explanation:\n\nTrailing comma is not always legal in formal parameters list of a Python function.\nIn Python, the argument list is defined partially with leading commas and partially with trailing commas. This conflict causes situations where a comma is trapped in the middle, and no rule accepts it.\nNote: The trailing comma problem is fixed in Python 3.6. The remarks in this post discuss in brief different usages of trailing commas in Python.\n\n\n\u25b6 Strings and the backslashes\nOutput:\n>>> print(\"\\\"\")\n\"\n\n>>> print(r\"\\\"\")\n\\\"\n\n>>> print(r\"\\\")\nFile \"<stdin>\", line 1\n    print(r\"\\\")\n              ^\nSyntaxError: EOL while scanning string literal\n\n>>> r'\\'' == \"\\\\'\"\nTrue\n\ud83d\udca1 Explanation\n\nIn a usual python string, the backslash is used to escape characters that may have a special meaning (like single-quote, double-quote, and the backslash itself).\n>>> \"wt\\\"f\"\n'wt\"f'\n\nIn a raw string literal (as indicated by the prefix r),  the backslashes pass themselves as is along with the behavior of escaping the following character.\n>>> r'wt\\\"f' == 'wt\\\\\"f'\nTrue\n>>> print(repr(r'wt\\\"f')\n'wt\\\\\"f'\n\n>>> print(\"\\n\")\n\n>>> print(r\"\\\\n\")\n'\\\\n'\n\nThis means when a parser encounters a backslash in a raw string, it expects another character following it. And in our case (print(r\"\\\")), the backslash escaped the trailing quote, leaving the parser without a terminating quote (hence the SyntaxError). That's why backslashes don't work at the end of a raw string.\n\n\n\u25b6 not knot!\nx = True\ny = False\nOutput:\n>>> not x == y\nTrue\n>>> x == not y\n  File \"<input>\", line 1\n    x == not y\n           ^\nSyntaxError: invalid syntax\n\ud83d\udca1 Explanation:\n\nOperator precedence affects how an expression is evaluated, and == operator has higher precedence than not operator in Python.\nSo not x == y is equivalent to not (x == y) which is equivalent to not (True == False) finally evaluating to True.\nBut x == not y raises a SyntaxError because it can be thought of being equivalent to (x == not) y and not x == (not y) which you might have expected at first sight.\nThe parser expected the not token to be a part of the not in operator (because both == and not in operators have the same precedence), but after not being able to find an in token following the not token, it raises a SyntaxError.\n\n\n\u25b6 Half triple-quoted strings\nOutput:\n>>> print('wtfpython''')\nwtfpython\n>>> print(\"wtfpython\"\"\")\nwtfpython\n>>> # The following statements raise `SyntaxError`\n>>> # print('''wtfpython')\n>>> # print(\"\"\"wtfpython\")\n  File \"<input>\", line 3\n    print(\"\"\"wtfpython\")\n                        ^\nSyntaxError: EOF while scanning triple-quoted string literal\n\ud83d\udca1 Explanation:\n\nPython supports implicit string literal concatenation, Example,\n>>> print(\"wtf\" \"python\")\nwtfpython\n>>> print(\"wtf\" \"\") # or \"wtf\"\"\"\nwtf\n\n\n''' and \"\"\" are also string delimiters in Python which causes a SyntaxError because the Python interpreter was expecting a terminating triple quote as delimiter while scanning the currently encountered triple quoted string literal.\n\n\n\u25b6 What's wrong with booleans?\n1.\n# A simple example to count the number of booleans and\n# integers in an iterable of mixed data types.\nmixed_list = [False, 1.0, \"some_string\", 3, True, [], False]\nintegers_found_so_far = 0\nbooleans_found_so_far = 0\n\nfor item in mixed_list:\n    if isinstance(item, int):\n        integers_found_so_far += 1\n    elif isinstance(item, bool):\n        booleans_found_so_far += 1\nOutput:\n>>> integers_found_so_far\n4\n>>> booleans_found_so_far\n0\n2.\n>>> some_bool = True\n>>> \"wtf\" * some_bool\n'wtf'\n>>> some_bool = False\n>>> \"wtf\" * some_bool\n''\n3.\ndef tell_truth():\n    True = False\n    if True == False:\n        print(\"I have lost faith in truth!\")\nOutput (< 3.x):\n>>> tell_truth()\nI have lost faith in truth!\n\ud83d\udca1 Explanation:\n\n\nbool is a subclass of int in Python\n>>> issubclass(bool, int)\nTrue\n>>> issubclass(int, bool)\nFalse\n\n\nAnd thus, True and False are instances of int\n>>> isinstance(True, int)\nTrue\n>>> isinstance(False, int)\nTrue\n\n\nThe integer value of True is 1 and that of False is 0.\n>>> int(True)\n1\n>>> int(False)\n0\n\n\nSee this StackOverflow answer for the rationale behind it.\n\n\nInitially, Python used to have no bool type (people used 0 for false and non-zero value like 1 for true).  True, False, and a bool type was added in 2.x versions, but, for backward compatibility, True and False couldn't be made constants. They just were built-in variables, and it was possible to reassign them\n\n\nPython 3 was backward-incompatible, the issue was finally fixed, and thus the last snippet won't work with Python 3.x!\n\n\n\n\u25b6 Class attributes and instance attributes\n1.\nclass A:\n    x = 1\n\nclass B(A):\n    pass\n\nclass C(A):\n    pass\nOutput:\n>>> A.x, B.x, C.x\n(1, 1, 1)\n>>> B.x = 2\n>>> A.x, B.x, C.x\n(1, 2, 1)\n>>> A.x = 3\n>>> A.x, B.x, C.x # C.x changed, but B.x didn't\n(3, 2, 3)\n>>> a = A()\n>>> a.x, A.x\n(3, 3)\n>>> a.x += 1\n>>> a.x, A.x\n(4, 3)\n2.\nclass SomeClass:\n    some_var = 15\n    some_list = [5]\n    another_list = [5]\n    def __init__(self, x):\n        self.some_var = x + 1\n        self.some_list = self.some_list + [x]\n        self.another_list += [x]\nOutput:\n>>> some_obj = SomeClass(420)\n>>> some_obj.some_list\n[5, 420]\n>>> some_obj.another_list\n[5, 420]\n>>> another_obj = SomeClass(111)\n>>> another_obj.some_list\n[5, 111]\n>>> another_obj.another_list\n[5, 420, 111]\n>>> another_obj.another_list is SomeClass.another_list\nTrue\n>>> another_obj.another_list is some_obj.another_list\nTrue\n\ud83d\udca1 Explanation:\n\nClass variables and variables in class instances are internally handled as dictionaries of a class object. If a variable name is not found in the dictionary of the current class, the parent classes are searched for it.\nThe += operator modifies the mutable object in-place without creating a new object. So changing the attribute of one instance affects the other instances and the class attribute as well.\n\n\n\u25b6 yielding None\nsome_iterable = ('a', 'b')\n\ndef some_func(val):\n    return \"something\"\nOutput (<= 3.7.x):\n>>> [x for x in some_iterable]\n['a', 'b']\n>>> [(yield x) for x in some_iterable]\n<generator object <listcomp> at 0x7f70b0a4ad58>\n>>> list([(yield x) for x in some_iterable])\n['a', 'b']\n>>> list((yield x) for x in some_iterable)\n['a', None, 'b', None]\n>>> list(some_func((yield x)) for x in some_iterable)\n['a', 'something', 'b', 'something']\n\ud83d\udca1 Explanation:\n\nThis is a bug in CPython's handling of yield in generators and comprehensions.\nSource and explanation can be found here: https:\/\/stackoverflow.com\/questions\/32139885\/yield-in-list-comprehensions-and-generator-expressions\nRelated bug report: https:\/\/bugs.python.org\/issue10544\nPython 3.8+ no longer allows yield inside list comprehension and will throw a SyntaxError.\n\n\n\u25b6 Yielding from... return! *\n1.\ndef some_func(x):\n    if x == 3:\n        return [\"wtf\"]\n    else:\n        yield from range(x)\nOutput (> 3.3):\n>>> list(some_func(3))\n[]\nWhere did the \"wtf\" go? Is it due to some special effect of yield from? Let's validate that,\n2.\ndef some_func(x):\n    if x == 3:\n        return [\"wtf\"]\n    else:\n        for i in range(x):\n          yield i\nOutput:\n>>> list(some_func(3))\n[]\nThe same result, this didn't work either.\n\ud83d\udca1 Explanation:\n\nFrom Python 3.3 onwards, it became possible to use return statement with values inside generators (See PEP380). The official docs say that,\n\n\n\"... return expr in a generator causes StopIteration(expr) to be raised upon exit from the generator.\"\n\n\n\nIn the case of some_func(3), StopIteration is raised at the beginning because of return statement. The StopIteration exception is automatically caught inside the list(...) wrapper and the for loop. Therefore, the above two snippets result in an empty list.\n\n\nTo get [\"wtf\"] from the generator some_func we need to catch the StopIteration exception,\ntry:\n    next(some_func(3))\nexcept StopIteration as e:\n    some_string = e.value\n>>> some_string\n[\"wtf\"]\n\n\n\n\u25b6 Nan-reflexivity *\n1.\na = float('inf')\nb = float('nan')\nc = float('-iNf')  # These strings are case-insensitive\nd = float('nan')\nOutput:\n>>> a\ninf\n>>> b\nnan\n>>> c\n-inf\n>>> float('some_other_string')\nValueError: could not convert string to float: some_other_string\n>>> a == -c # inf==inf\nTrue\n>>> None == None # None == None\nTrue\n>>> b == d # but nan!=nan\nFalse\n>>> 50 \/ a\n0.0\n>>> a \/ a\nnan\n>>> 23 + b\nnan\n2.\n>>> x = float('nan')\n>>> y = x \/ x\n>>> y is y # identity holds\nTrue\n>>> y == y # equality fails of y\nFalse\n>>> [y] == [y] # but the equality succeeds for the list containing y\nTrue\n\ud83d\udca1 Explanation:\n\n\n'inf' and 'nan' are special strings (case-insensitive), which, when explicitly typecast-ed to float type, are used to represent mathematical \"infinity\" and \"not a number\" respectively.\n\n\nSince according to IEEE standards  NaN != NaN, obeying this rule breaks the reflexivity assumption of a collection element in Python i.e. if x is a part of a collection like list, the implementations like comparison are based on the assumption that x == x.  Because of this assumption, the identity is compared first (since it's faster) while comparing two elements, and the values are compared only when the identities mismatch. The following snippet will make things clearer,\n>>> x = float('nan')\n>>> x == x, [x] == [x]\n(False, True)\n>>> y = float('nan')\n>>> y == y, [y] == [y]\n(False, True)\n>>> x == y, [x] == [y]\n(False, False)\nSince the identities of x and y are different, the values are considered, which are also different; hence the comparison returns False this time.\n\n\nInteresting read: Reflexivity, and other pillars of civilization\n\n\n\n\u25b6 Mutating the immutable!\nThis might seem trivial if you know how references work in Python.\nsome_tuple = (\"A\", \"tuple\", \"with\", \"values\")\nanother_tuple = ([1, 2], [3, 4], [5, 6])\nOutput:\n>>> some_tuple[2] = \"change this\"\nTypeError: 'tuple' object does not support item assignment\n>>> another_tuple[2].append(1000) #This throws no error\n>>> another_tuple\n([1, 2], [3, 4], [5, 6, 1000])\n>>> another_tuple[2] += [99, 999]\nTypeError: 'tuple' object does not support item assignment\n>>> another_tuple\n([1, 2], [3, 4], [5, 6, 1000, 99, 999])\nBut I thought tuples were immutable...\n\ud83d\udca1 Explanation:\n\n\nQuoting from https:\/\/docs.python.org\/3\/reference\/datamodel.html\n\nImmutable sequences\nAn object of an immutable sequence type cannot change once it is created. (If the object contains references to other objects, these other objects may be mutable and may be modified; however, the collection of objects directly referenced by an immutable object cannot change.)\n\n\n\n+= operator changes the list in-place. The item assignment doesn't work, but when the exception occurs, the item has already been changed in place.\n\n\nThere's also an explanation in official Python FAQ.\n\n\n\n\u25b6 The disappearing variable from outer scope\ne = 7\ntry:\n    raise Exception()\nexcept Exception as e:\n    pass\nOutput (Python 2.x):\n>>> print(e)\n# prints nothing\nOutput (Python 3.x):\n>>> print(e)\nNameError: name 'e' is not defined\n\ud83d\udca1 Explanation:\n\n\nSource: https:\/\/docs.python.org\/3\/reference\/compound_stmts.html#except\nWhen an exception has been assigned using as target, it is cleared at the end of the except clause. This is as if\nexcept E as N:\n    foo\nwas translated into\nexcept E as N:\n    try:\n        foo\n    finally:\n        del N\nThis means the exception must be assigned to a different name to be able to refer to it after the except clause. Exceptions are cleared because, with the traceback attached to them, they form a reference cycle with the stack frame, keeping all locals in that frame alive until the next garbage collection occurs.\n\n\nThe clauses are not scoped in Python. Everything in the example is present in the same scope, and the variable e got removed due to the execution of the except clause. The same is not the case with functions that have their separate inner-scopes. The example below illustrates this:\ndef f(x):\n    del(x)\n    print(x)\n\nx = 5\ny = [5, 4, 3]\nOutput:\n>>>f(x)\nUnboundLocalError: local variable 'x' referenced before assignment\n>>>f(y)\nUnboundLocalError: local variable 'x' referenced before assignment\n>>> x\n5\n>>> y\n[5, 4, 3]\n\n\nIn Python 2.x, the variable name e gets assigned to Exception() instance, so when you try to print, it prints nothing.\nOutput (Python 2.x):\n>>> e\nException()\n>>> print e\n# Nothing is printed!\n\n\n\n\u25b6 The mysterious key type conversion\nclass SomeClass(str):\n    pass\n\nsome_dict = {'s': 42}\nOutput:\n>>> type(list(some_dict.keys())[0])\nstr\n>>> s = SomeClass('s')\n>>> some_dict[s] = 40\n>>> some_dict # expected: Two different keys-value pairs\n{'s': 40}\n>>> type(list(some_dict.keys())[0])\nstr\n\ud83d\udca1 Explanation:\n\n\nBoth the object s and the string \"s\" hash to the same value because SomeClass inherits the __hash__ method of str class.\n\n\nSomeClass(\"s\") == \"s\" evaluates to True because SomeClass also inherits __eq__ method from str class.\n\n\nSince both the objects hash to the same value and are equal, they are represented by the same key in the dictionary.\n\n\nFor the desired behavior, we can redefine the __eq__ method in SomeClass\nclass SomeClass(str):\n  def __eq__(self, other):\n      return (\n          type(self) is SomeClass\n          and type(other) is SomeClass\n          and super().__eq__(other)\n      )\n\n  # When we define a custom __eq__, Python stops automatically inheriting the\n  # __hash__ method, so we need to define it as well\n  __hash__ = str.__hash__\n\nsome_dict = {'s':42}\nOutput:\n>>> s = SomeClass('s')\n>>> some_dict[s] = 40\n>>> some_dict\n{'s': 40, 's': 42}\n>>> keys = list(some_dict.keys())\n>>> type(keys[0]), type(keys[1])\n(__main__.SomeClass, str)\n\n\n\n\u25b6 Let's see if you can guess this?\na, b = a[b] = {}, 5\nOutput:\n>>> a\n{5: ({...}, 5)}\n\ud83d\udca1 Explanation:\n\nAccording to Python language reference, assignment statements have the form\n(target_list \"=\")+ (expression_list | yield_expression)\n\nand\n\n\nAn assignment statement evaluates the expression list (remember that this can be a single expression or a comma-separated list, the latter yielding a tuple) and assigns the single resulting object to each of the target lists, from left to right.\n\n\n\nThe + in (target_list \"=\")+ means there can be one or more target lists. In this case, target lists are a, b and a[b] (note the expression list is exactly one, which in our case is {}, 5).\n\n\nAfter the expression list is evaluated, its value is unpacked to the target lists from left to right. So, in our case, first the {}, 5 tuple is unpacked to a, b and we now have a = {} and b = 5.\n\n\na is now assigned to {}, which is a mutable object.\n\n\nThe second target list is a[b] (you may expect this to throw an error because both a and b have not been defined in the statements before. But remember, we just assigned a to {} and b to 5).\n\n\nNow, we are setting the key 5 in the dictionary to the tuple ({}, 5) creating a circular reference (the {...} in the output refers to the same object that a is already referencing). Another simpler example of circular reference could be\n>>> some_list = some_list[0] = [0]\n>>> some_list\n[[...]]\n>>> some_list[0]\n[[...]]\n>>> some_list is some_list[0]\nTrue\n>>> some_list[0][0][0][0][0][0] == some_list\nTrue\nSimilar is the case in our example (a[b][0] is the same object as a)\n\n\nSo to sum it up, you can break the example down to\na, b = {}, 5\na[b] = a, b\nAnd the circular reference can be justified by the fact that a[b][0] is the same object as a\n>>> a[b][0] is a\nTrue\n\n\n\n\nSection: Slippery Slopes\n\u25b6 Modifying a dictionary while iterating over it\nx = {0: None}\n\nfor i in x:\n    del x[i]\n    x[i+1] = None\n    print(i)\nOutput (Python 2.7- Python 3.5):\n0\n1\n2\n3\n4\n5\n6\n7\n\nYes, it runs for exactly eight times and stops.\n\ud83d\udca1 Explanation:\n\nIteration over a dictionary that you edit at the same time is not supported.\nIt runs eight times because that's the point at which the dictionary resizes to hold more keys (we have eight deletion entries, so a resize is needed). This is actually an implementation detail.\nHow deleted keys are handled and when the resize occurs might be different for different Python implementations.\nSo for Python versions other than Python 2.7 - Python 3.5, the count might be different from 8 (but whatever the count is, it's going to be the same every time you run it). You can find some discussion around this here or in this StackOverflow thread.\nPython 3.7.6 onwards, you'll see RuntimeError: dictionary keys changed during iteration exception if you try to do this.\n\n\n\u25b6 Stubborn del operation\nclass SomeClass:\n    def __del__(self):\n        print(\"Deleted!\")\nOutput:\n1.\n>>> x = SomeClass()\n>>> y = x\n>>> del x # this should print \"Deleted!\"\n>>> del y\nDeleted!\nPhew, deleted at last. You might have guessed what saved __del__ from being called in our first attempt to delete x. Let's add more twists to the example.\n2.\n>>> x = SomeClass()\n>>> y = x\n>>> del x\n>>> y # check if y exists\n<__main__.SomeClass instance at 0x7f98a1a67fc8>\n>>> del y # Like previously, this should print \"Deleted!\"\n>>> globals() # oh, it didn't. Let's check all our global variables and confirm\nDeleted!\n{'__builtins__': <module '__builtin__' (built-in)>, 'SomeClass': <class __main__.SomeClass at 0x7f98a1a5f668>, '__package__': None, '__name__': '__main__', '__doc__': None}\nOkay, now it's deleted \ud83d\ude15\n\ud83d\udca1 Explanation:\n\ndel x doesn\u2019t directly call x.__del__().\nWhen del x is encountered, Python deletes the name x from current scope and decrements by 1 the reference count of the object x referenced. __del__() is called only when the object's reference count reaches zero.\nIn the second output snippet, __del__() was not called because the previous statement (>>> y) in the interactive interpreter created another reference to the same object (specifically, the _ magic variable which references the result value of the last non None expression on the REPL), thus preventing the reference count from reaching zero when del y was encountered.\nCalling globals (or really, executing anything that will have a non None result) caused _ to reference the new result, dropping the existing reference. Now the reference count reached 0 and we can see \"Deleted!\" being printed (finally!).\n\n\n\u25b6 The out of scope variable\n1.\na = 1\ndef some_func():\n    return a\n\ndef another_func():\n    a += 1\n    return a\n2.\ndef some_closure_func():\n    a = 1\n    def some_inner_func():\n        return a\n    return some_inner_func()\n\ndef another_closure_func():\n    a = 1\n    def another_inner_func():\n        a += 1\n        return a\n    return another_inner_func()\nOutput:\n>>> some_func()\n1\n>>> another_func()\nUnboundLocalError: local variable 'a' referenced before assignment\n\n>>> some_closure_func()\n1\n>>> another_closure_func()\nUnboundLocalError: local variable 'a' referenced before assignment\n\ud83d\udca1 Explanation:\n\n\nWhen you make an assignment to a variable in scope, it becomes local to that scope. So a becomes local to the scope of another_func, but it has not been initialized previously in the same scope, which throws an error.\n\n\nTo modify the outer scope variable a in another_func, we have to use the global keyword.\ndef another_func()\n    global a\n    a += 1\n    return a\nOutput:\n>>> another_func()\n2\n\n\nIn another_closure_func, a becomes local to the scope of another_inner_func, but it has not been initialized previously in the same scope, which is why it throws an error.\n\n\nTo modify the outer scope variable a in another_inner_func, use the nonlocal keyword. The nonlocal statement is used to refer to variables defined in the nearest outer (excluding the global) scope.\ndef another_func():\n    a = 1\n    def another_inner_func():\n        nonlocal a\n        a += 1\n        return a\n    return another_inner_func()\nOutput:\n>>> another_func()\n2\n\n\nThe keywords global and nonlocal tell the python interpreter to not delcare new variables and look them up in the corresponding outer scopes.\n\n\nRead this short but an awesome guide to learn more about how namespaces and scope resolution works in Python.\n\n\n\n\u25b6 Deleting a list item while iterating\nlist_1 = [1, 2, 3, 4]\nlist_2 = [1, 2, 3, 4]\nlist_3 = [1, 2, 3, 4]\nlist_4 = [1, 2, 3, 4]\n\nfor idx, item in enumerate(list_1):\n    del item\n\nfor idx, item in enumerate(list_2):\n    list_2.remove(item)\n\nfor idx, item in enumerate(list_3[:]):\n    list_3.remove(item)\n\nfor idx, item in enumerate(list_4):\n    list_4.pop(idx)\nOutput:\n>>> list_1\n[1, 2, 3, 4]\n>>> list_2\n[2, 4]\n>>> list_3\n[]\n>>> list_4\n[2, 4]\nCan you guess why the output is [2, 4]?\n\ud83d\udca1 Explanation:\n\n\nIt's never a good idea to change the object you're iterating over. The correct way to do so is to iterate over a copy of the object instead, and list_3[:] does just that.\n>>> some_list = [1, 2, 3, 4]\n>>> id(some_list)\n139798789457608\n>>> id(some_list[:]) # Notice that python creates new object for sliced list.\n139798779601192\n\n\nDifference between del, remove, and pop:\n\ndel var_name just removes the binding of the var_name from the local or global namespace (That's why the list_1 is unaffected).\nremove removes the first matching value, not a specific index, raises ValueError if the value is not found.\npop removes the element at a specific index and returns it, raises IndexError if an invalid index is specified.\n\nWhy the output is [2, 4]?\n\nThe list iteration is done index by index, and when we remove 1 from list_2 or list_4, the contents of the lists are now [2, 3, 4]. The remaining elements are shifted down, i.e., 2 is at index 0, and 3 is at index 1. Since the next iteration is going to look at index 1 (which is the 3), the 2 gets skipped entirely. A similar thing will happen with every alternate element in the list sequence.\n\n\nRefer to this StackOverflow thread explaining the example\nSee also this nice StackOverflow thread for a similar example related to dictionaries in Python.\n\n\n\u25b6 Lossy zip of iterators *\n>>> numbers = list(range(7))\n>>> numbers\n[0, 1, 2, 3, 4, 5, 6]\n>>> first_three, remaining = numbers[:3], numbers[3:]\n>>> first_three, remaining\n([0, 1, 2], [3, 4, 5, 6])\n>>> numbers_iter = iter(numbers)\n>>> list(zip(numbers_iter, first_three)) \n[(0, 0), (1, 1), (2, 2)]\n# so far so good, let's zip the remaining\n>>> list(zip(numbers_iter, remaining))\n[(4, 3), (5, 4), (6, 5)]\nWhere did element 3 go from the numbers list?\n\ud83d\udca1 Explanation:\n\nFrom Python docs, here's an approximate implementation of zip function,\ndef zip(*iterables):\n    sentinel = object()\n    iterators = [iter(it) for it in iterables]\n    while iterators:\n        result = []\n        for it in iterators:\n            elem = next(it, sentinel)\n            if elem is sentinel: return\n            result.append(elem)\n        yield tuple(result)\n\nSo the function takes in arbitrary number of iterable objects, adds each of their items to the result list by calling the next function on them, and stops whenever any of the iterable is exhausted.\nThe caveat here is when any iterable is exhausted, the existing elements in the result list are discarded. That's what happened with 3 in the numbers_iter.\nThe correct way to do the above using zip would be,\n>>> numbers = list(range(7))\n>>> numbers_iter = iter(numbers)\n>>> list(zip(first_three, numbers_iter))\n[(0, 0), (1, 1), (2, 2)]\n>>> list(zip(remaining, numbers_iter))\n[(3, 3), (4, 4), (5, 5), (6, 6)]\nThe first argument of zip should be the one with fewest elements.\n\n\n\u25b6 Loop variables leaking out!\n1.\nfor x in range(7):\n    if x == 6:\n        print(x, ': for x inside loop')\nprint(x, ': x in global')\nOutput:\n6 : for x inside loop\n6 : x in global\nBut x was never defined outside the scope of for loop...\n2.\n# This time let's initialize x first\nx = -1\nfor x in range(7):\n    if x == 6:\n        print(x, ': for x inside loop')\nprint(x, ': x in global')\nOutput:\n6 : for x inside loop\n6 : x in global\n3.\nOutput (Python 2.x):\n>>> x = 1\n>>> print([x for x in range(5)])\n[0, 1, 2, 3, 4]\n>>> print(x)\n4\nOutput (Python 3.x):\n>>> x = 1\n>>> print([x for x in range(5)])\n[0, 1, 2, 3, 4]\n>>> print(x)\n1\n\ud83d\udca1 Explanation:\n\n\nIn Python, for-loops use the scope they exist in and leave their defined loop-variable behind. This also applies if we explicitly defined the for-loop variable in the global namespace before. In this case, it will rebind the existing variable.\n\n\nThe differences in the output of Python 2.x and Python 3.x interpreters for list comprehension example can be explained by following change documented in What\u2019s New In Python 3.0 changelog:\n\n\"List comprehensions no longer support the syntactic form [... for var in item1, item2, ...]. Use [... for var in (item1, item2, ...)] instead. Also, note that list comprehensions have different semantics: they are closer to syntactic sugar for a generator expression inside a list() constructor, and in particular, the loop control variables are no longer leaked into the surrounding scope.\"\n\n\n\n\n\u25b6 Beware of default mutable arguments!\ndef some_func(default_arg=[]):\n    default_arg.append(\"some_string\")\n    return default_arg\nOutput:\n>>> some_func()\n['some_string']\n>>> some_func()\n['some_string', 'some_string']\n>>> some_func([])\n['some_string']\n>>> some_func()\n['some_string', 'some_string', 'some_string']\n\ud83d\udca1 Explanation:\n\n\nThe default mutable arguments of functions in Python aren't really initialized every time you call the function. Instead, the recently assigned value to them is used as the default value. When we explicitly passed [] to some_func as the argument, the default value of the default_arg variable was not used, so the function returned as expected.\ndef some_func(default_arg=[]):\n    default_arg.append(\"some_string\")\n    return default_arg\nOutput:\n>>> some_func.__defaults__ #This will show the default argument values for the function\n([],)\n>>> some_func()\n>>> some_func.__defaults__\n(['some_string'],)\n>>> some_func()\n>>> some_func.__defaults__\n(['some_string', 'some_string'],)\n>>> some_func([])\n>>> some_func.__defaults__\n(['some_string', 'some_string'],)\n\n\nA common practice to avoid bugs due to mutable arguments is to assign None as the default value and later check if any value is passed to the function corresponding to that argument. Example:\ndef some_func(default_arg=None):\n    if default_arg is None:\n        default_arg = []\n    default_arg.append(\"some_string\")\n    return default_arg\n\n\n\n\u25b6 Catching the Exceptions\nsome_list = [1, 2, 3]\ntry:\n    # This should raise an ``IndexError``\n    print(some_list[4])\nexcept IndexError, ValueError:\n    print(\"Caught!\")\n\ntry:\n    # This should raise a ``ValueError``\n    some_list.remove(4)\nexcept IndexError, ValueError:\n    print(\"Caught again!\")\nOutput (Python 2.x):\nCaught!\n\nValueError: list.remove(x): x not in list\nOutput (Python 3.x):\n  File \"<input>\", line 3\n    except IndexError, ValueError:\n                     ^\nSyntaxError: invalid syntax\n\ud83d\udca1 Explanation\n\n\nTo add multiple Exceptions to the except clause, you need to pass them as parenthesized tuple as the first argument. The second argument is an optional name, which when supplied will bind the Exception instance that has been raised. Example,\nsome_list = [1, 2, 3]\ntry:\n   # This should raise a ``ValueError``\n   some_list.remove(4)\nexcept (IndexError, ValueError), e:\n   print(\"Caught again!\")\n   print(e)\nOutput (Python 2.x):\nCaught again!\nlist.remove(x): x not in list\n\nOutput (Python 3.x):\n  File \"<input>\", line 4\n    except (IndexError, ValueError), e:\n                                     ^\nIndentationError: unindent does not match any outer indentation level\n\n\nSeparating the exception from the variable with a comma is deprecated and does not work in Python 3; the correct way is to use as. Example,\nsome_list = [1, 2, 3]\ntry:\n    some_list.remove(4)\n\nexcept (IndexError, ValueError) as e:\n    print(\"Caught again!\")\n    print(e)\nOutput:\nCaught again!\nlist.remove(x): x not in list\n\n\n\n\n\u25b6 Same operands, different story!\n1.\na = [1, 2, 3, 4]\nb = a\na = a + [5, 6, 7, 8]\nOutput:\n>>> a\n[1, 2, 3, 4, 5, 6, 7, 8]\n>>> b\n[1, 2, 3, 4]\n2.\na = [1, 2, 3, 4]\nb = a\na += [5, 6, 7, 8]\nOutput:\n>>> a\n[1, 2, 3, 4, 5, 6, 7, 8]\n>>> b\n[1, 2, 3, 4, 5, 6, 7, 8]\n\ud83d\udca1 Explanation:\n\n\na += b doesn't always behave the same way as a = a + b.  Classes may implement the op= operators differently, and lists do this.\n\n\nThe expression a = a + [5,6,7,8] generates a new list and sets a's reference to that new list, leaving b unchanged.\n\n\nThe expression a += [5,6,7,8] is actually mapped to an \"extend\" function that operates on the list such that a and b still point to the same list that has been modified in-place.\n\n\n\n\u25b6 Name resolution ignoring class scope\n1.\nx = 5\nclass SomeClass:\n    x = 17\n    y = (x for i in range(10))\nOutput:\n>>> list(SomeClass.y)[0]\n5\n2.\nx = 5\nclass SomeClass:\n    x = 17\n    y = [x for i in range(10)]\nOutput (Python 2.x):\n>>> SomeClass.y[0]\n17\nOutput (Python 3.x):\n>>> SomeClass.y[0]\n5\n\ud83d\udca1 Explanation\n\nScopes nested inside class definition ignore names bound at the class level.\nA generator expression has its own scope.\nStarting from Python 3.X, list comprehensions also have their own scope.\n\n\n\u25b6 Needles in a Haystack *\nI haven't met even a single experience Pythonist till date who has not come across one or more of the following scenarios,\n1.\nx, y = (0, 1) if True else None, None\nOutput:\n>>> x, y  # expected (0, 1)\n((0, 1), None)\n2.\nt = ('one', 'two')\nfor i in t:\n    print(i)\n\nt = ('one')\nfor i in t:\n    print(i)\n\nt = ()\nprint(t)\nOutput:\none\ntwo\no\nn\ne\ntuple()\n3.\nten_words_list = [\n    \"some\",\n    \"very\",\n    \"big\",\n    \"list\",\n    \"that\"\n    \"consists\",\n    \"of\",\n    \"exactly\",\n    \"ten\",\n    \"words\"\n]\n\nOutput\n>>> len(ten_words_list)\n9\n4. Not asserting strongly enough\na = \"python\"\nb = \"javascript\"\nOutput:\n# An assert statement with an assertion failure message.\n>>> assert(a == b, \"Both languages are different\")\n# No AssertionError is raised\n5.\nsome_list = [1, 2, 3]\nsome_dict = {\n  \"key_1\": 1,\n  \"key_2\": 2,\n  \"key_3\": 3\n}\n\nsome_list = some_list.append(4) \nsome_dict = some_dict.update({\"key_4\": 4})\nOutput:\n>>> print(some_list)\nNone\n>>> print(some_dict)\nNone\n6.\ndef some_recursive_func(a):\n    if a[0] == 0:\n        return\n    a[0] -= 1\n    some_recursive_func(a)\n    return a\n\ndef similar_recursive_func(a):\n    if a == 0:\n        return a\n    a -= 1\n    similar_recursive_func(a)\n    return a\nOutput:\n>>> some_recursive_func([5, 0])\n[0, 0]\n>>> similar_recursive_func(5)\n4\n\ud83d\udca1 Explanation:\n\n\nFor 1, the correct statement for expected behavior is x, y = (0, 1) if True else (None, None).\n\n\nFor 2, the correct statement for expected behavior is t = ('one',) or t = 'one', (missing comma) otherwise the interpreter considers t to be a str and iterates over it character by character.\n\n\n() is a special token and denotes empty tuple.\n\n\nIn 3, as you might have already figured out, there's a missing comma after 5th element (\"that\") in the list. So by implicit string literal concatenation,\n>>> ten_words_list\n['some', 'very', 'big', 'list', 'thatconsists', 'of', 'exactly', 'ten', 'words']\n\n\nNo AssertionError was raised in 4th snippet because instead of asserting the individual expression a == b, we're asserting entire tuple. The following snippet will clear things up,\n>>> a = \"python\"\n>>> b = \"javascript\"\n>>> assert a == b\nTraceback (most recent call last):\n    File \"<stdin>\", line 1, in <module>\nAssertionError\n\n>>> assert (a == b, \"Values are not equal\")\n<stdin>:1: SyntaxWarning: assertion is always true, perhaps remove parentheses?\n\n>>> assert a == b, \"Values are not equal\"\nTraceback (most recent call last):\n    File \"<stdin>\", line 1, in <module>\nAssertionError: Values are not equal\n\n\nAs for the fifth snippet, most methods that modify the items of sequence\/mapping objects like list.append, dict.update, list.sort, etc. modify the objects in-place and return None. The rationale behind this is to improve performance by avoiding making a copy of the object if the operation can be done in-place (Referred from here).\n\n\nLast one should be fairly obvious, mutable object (like list) can be altered in the function, and the reassignation of an immutable (a -= 1) is not an alteration of the value.\n\n\nBeing aware of these nitpicks can save you hours of debugging effort in the long run.\n\n\n\n\u25b6 Splitsies *\n>>> 'a'.split()\n['a']\n\n# is same as\n>>> 'a'.split(' ')\n['a']\n\n# but\n>>> len(''.split())\n0\n\n# isn't the same as\n>>> len(''.split(' '))\n1\n\ud83d\udca1 Explanation:\n\nIt might appear at first that the default separator for split is a single space ' ', but as per the docs\n\nIf sep is not specified or is None, a different splitting algorithm is applied: runs of consecutive whitespace are regarded as a single separator, and the result will contain no empty strings at the start or end if the string has leading or trailing whitespace. Consequently, splitting an empty string or a string consisting of just whitespace with a None separator returns [].\nIf sep is given, consecutive delimiters are not grouped together and are deemed to delimit empty strings (for example, '1,,2'.split(',') returns ['1', '', '2']). Splitting an empty string with a specified separator returns [''].\n\n\nNoticing how the leading and trailing whitespaces are handled in the following snippet will make things clear,\n>>> ' a '.split(' ')\n['', 'a', '']\n>>> ' a '.split()\n['a']\n>>> ''.split(' ')\n['']\n\n\n\n\u25b6 Wild imports *\n# File: module.py\n\ndef some_weird_name_func_():\n    print(\"works!\")\n\ndef _another_weird_name_func():\n    print(\"works!\")\nOutput\n>>> from module import *\n>>> some_weird_name_func_()\n\"works!\"\n>>> _another_weird_name_func()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name '_another_weird_name_func' is not defined\n\ud83d\udca1 Explanation:\n\n\nIt is often advisable to not use wildcard imports. The first obvious reason for this is, in wildcard imports, the names with a leading underscore don't get imported. This may lead to errors during runtime.\n\n\nHad we used from ... import a, b, c syntax, the above NameError wouldn't have occurred.\n>>> from module import some_weird_name_func_, _another_weird_name_func\n>>> _another_weird_name_func()\nworks!\n\n\nIf you really want to use wildcard imports, then you'd have to define the list __all__ in your module that will contain a list of public objects that'll be available when we do wildcard imports.\n__all__ = ['_another_weird_name_func']\n\ndef some_weird_name_func_():\n    print(\"works!\")\n\ndef _another_weird_name_func():\n    print(\"works!\")\nOutput\n>>> _another_weird_name_func()\n\"works!\"\n>>> some_weird_name_func_()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'some_weird_name_func_' is not defined\n\n\n\n\u25b6 All sorted? *\n>>> x = 7, 8, 9\n>>> sorted(x) == x\nFalse\n>>> sorted(x) == sorted(x)\nTrue\n\n>>> y = reversed(x)\n>>> sorted(y) == sorted(y)\nFalse\n\ud83d\udca1 Explanation:\n\n\nThe sorted method always returns a list, and comparing lists and tuples always returns False in Python.\n\n\n>>> [] == tuple()\nFalse\n>>> x = 7, 8, 9\n>>> type(x), type(sorted(x))\n(tuple, list)\n\n\nUnlike sorted, the reversed method returns an iterator. Why? Because sorting requires the iterator to be either modified in-place or use an extra container (a list), whereas reversing can simply work by iterating from the last index to the first.\n\n\nSo during comparison sorted(y) == sorted(y), the first call to sorted() will consume the iterator y, and the next call will just return an empty list.\n>>> x = 7, 8, 9\n>>> y = reversed(x)\n>>> sorted(y), sorted(y)\n([7, 8, 9], [])\n\n\n\n\u25b6 Midnight time doesn't exist?\nfrom datetime import datetime\n\nmidnight = datetime(2018, 1, 1, 0, 0)\nmidnight_time = midnight.time()\n\nnoon = datetime(2018, 1, 1, 12, 0)\nnoon_time = noon.time()\n\nif midnight_time:\n    print(\"Time at midnight is\", midnight_time)\n\nif noon_time:\n    print(\"Time at noon is\", noon_time)\nOutput (< 3.5):\n('Time at noon is', datetime.time(12, 0))\nThe midnight time is not printed.\n\ud83d\udca1 Explanation:\nBefore Python 3.5, the boolean value for datetime.time object was considered to be False if it represented midnight in UTC. It is error-prone when using the if obj: syntax to check if the obj is null or some equivalent of \"empty.\"\n\n\nSection: The Hidden treasures!\nThis section contains a few lesser-known and interesting things about Python that most beginners like me are unaware of (well, not anymore).\n\u25b6 Okay Python, Can you make me fly?\nWell, here you go\nimport antigravity\nOutput:\nSshh... It's a super-secret.\n\ud83d\udca1 Explanation:\n\nantigravity module is one of the few easter eggs released by Python developers.\nimport antigravity opens up a web browser pointing to the classic XKCD comic about Python.\nWell, there's more to it. There's another easter egg inside the easter egg. If you look at the code, there's a function defined that purports to implement the XKCD's geohashing algorithm.\n\n\n\u25b6 goto, but why?\nfrom goto import goto, label\nfor i in range(9):\n    for j in range(9):\n        for k in range(9):\n            print(\"I am trapped, please rescue!\")\n            if k == 2:\n                goto .breakout # breaking out from a deeply nested loop\nlabel .breakout\nprint(\"Freedom!\")\nOutput (Python 2.3):\nI am trapped, please rescue!\nI am trapped, please rescue!\nFreedom!\n\ud83d\udca1 Explanation:\n\nA working version of goto in Python was announced as an April Fool's joke on 1st April 2004.\nCurrent versions of Python do not have this module.\nAlthough it works, but please don't use it. Here's the reason to why goto is not present in Python.\n\n\n\u25b6 Brace yourself!\nIf you are one of the people who doesn't like using whitespace in Python to denote scopes, you can use the C-style {} by importing,\nfrom __future__ import braces\nOutput:\n  File \"some_file.py\", line 1\n    from __future__ import braces\nSyntaxError: not a chance\nBraces? No way! If you think that's disappointing, use Java. Okay, another surprising thing, can you find where's the SyntaxError raised in __future__ module code?\n\ud83d\udca1 Explanation:\n\nThe __future__ module is normally used to provide features from future versions of Python. The \"future\" in this specific context is however, ironic.\nThis is an easter egg concerned with the community's feelings on this issue.\nThe code is actually present here in future.c file.\nWhen the CPython compiler encounters a future statement, it first runs the appropriate code in future.c before treating it as a normal import statement.\n\n\n\u25b6 Let's meet Friendly Language Uncle For Life\nOutput (Python 3.x)\n>>> from __future__ import barry_as_FLUFL\n>>> \"Ruby\" != \"Python\" # there's no doubt about it\n  File \"some_file.py\", line 1\n    \"Ruby\" != \"Python\"\n              ^\nSyntaxError: invalid syntax\n\n>>> \"Ruby\" <> \"Python\"\nTrue\nThere we go.\n\ud83d\udca1 Explanation:\n\n\nThis is relevant to PEP-401 released on April 1, 2009 (now you know, what it means).\n\n\nQuoting from the PEP-401\n\nRecognized that the != inequality operator in Python 3.0 was a horrible, finger-pain inducing mistake, the FLUFL reinstates the <> diamond operator as the sole spelling.\n\n\n\nThere were more things that Uncle Barry had to share in the PEP; you can read them here.\n\n\nIt works well in an interactive environment, but it will raise a SyntaxError when you run via python file (see this issue). However, you can wrap the statement inside an eval or compile to get it working,\nfrom __future__ import barry_as_FLUFL\nprint(eval('\"Ruby\" <> \"Python\"'))\n\n\n\n\u25b6 Even Python understands that love is complicated\nimport this\nWait, what's this? this is love \u2764\ufe0f\nOutput:\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\nIt's the Zen of Python!\n>>> love = this\n>>> this is love\nTrue\n>>> love is True\nFalse\n>>> love is False\nFalse\n>>> love is not True or False\nTrue\n>>> love is not True or False; love is love  # Love is complicated\nTrue\n\ud83d\udca1 Explanation:\n\nthis module in Python is an easter egg for The Zen Of Python (PEP 20).\nAnd if you think that's already interesting enough, check out the implementation of this.py. Interestingly, the code for the Zen violates itself (and that's probably the only place where this happens).\nRegarding the statement love is not True or False; love is love, ironic but it's self-explanatory (if not, please see the examples related to is and is not operators).\n\n\n\u25b6 Yes, it exists!\nThe else clause for loops. One typical example might be:\n  def does_exists_num(l, to_find):\n      for num in l:\n          if num == to_find:\n              print(\"Exists!\")\n              break\n      else:\n          print(\"Does not exist\")\nOutput:\n>>> some_list = [1, 2, 3, 4, 5]\n>>> does_exists_num(some_list, 4)\nExists!\n>>> does_exists_num(some_list, -1)\nDoes not exist\nThe else clause in exception handling. An example,\ntry:\n    pass\nexcept:\n    print(\"Exception occurred!!!\")\nelse:\n    print(\"Try block executed successfully...\")\nOutput:\nTry block executed successfully...\n\ud83d\udca1 Explanation:\n\nThe else clause after a loop is executed only when there's no explicit break after all the iterations. You can think of it as a \"nobreak\" clause.\nelse clause after a try block is also called \"completion clause\" as reaching the else clause in a try statement means that the try block actually completed successfully.\n\n\n\u25b6 Ellipsis *\ndef some_func():\n    Ellipsis\nOutput\n>>> some_func()\n# No output, No Error\n\n>>> SomeRandomString\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'SomeRandomString' is not defined\n\n>>> Ellipsis\nEllipsis\n\ud83d\udca1 Explanation\n\nIn Python, Ellipsis is a globally available built-in object which is equivalent to ....\n>>> ...\nEllipsis\n\nEliipsis can be used for several purposes,\n\nAs a placeholder for code that hasn't been written yet (just like pass statement)\nIn slicing syntax to represent the full slices in remaining direction\n\n>>> import numpy as np\n>>> three_dimensional_array = np.arange(8).reshape(2, 2, 2)\narray([\n    [\n        [0, 1],\n        [2, 3]\n    ],\n\n    [\n        [4, 5],\n        [6, 7]\n    ]\n])\nSo our three_dimensional_array is an array of array of arrays. Let's say we want to print the second element (index 1) of all the innermost arrays, we can use Ellipsis to bypass all the preceding dimensions\n>>> three_dimensional_array[:,:,1]\narray([[1, 3],\n   [5, 7]])\n>>> three_dimensional_array[..., 1] # using Ellipsis.\narray([[1, 3],\n   [5, 7]])\nNote: this will work for any number of dimensions. You can even select slice in first and last dimension and ignore the middle ones this way (n_dimensional_array[firs_dim_slice, ..., last_dim_slice])\n\nIn type hinting to indicate only a part of the type (like (Callable[..., int] or Tuple[str, ...]))\nYou may also use Ellipsis as a default function argument (in the cases when you want to differentiate between the \"no argument passed\" and \"None value passed\" scenarios).\n\n\n\n\n\u25b6 Inpinity\nThe spelling is intended. Please, don't submit a patch for this.\nOutput (Python 3.x):\n>>> infinity = float('infinity')\n>>> hash(infinity)\n314159\n>>> hash(float('-inf'))\n-314159\n\ud83d\udca1 Explanation:\n\nHash of infinity is 10\u2075 x \u03c0.\nInterestingly, the hash of float('-inf') is \"-10\u2075 x \u03c0\" in Python 3, whereas \"-10\u2075 x e\" in Python 2.\n\n\n\u25b6 Let's mangle\n1.\nclass Yo(object):\n    def __init__(self):\n        self.__honey = True\n        self.bro = True\nOutput:\n>>> Yo().bro\nTrue\n>>> Yo().__honey\nAttributeError: 'Yo' object has no attribute '__honey'\n>>> Yo()._Yo__honey\nTrue\n2.\nclass Yo(object):\n    def __init__(self):\n        # Let's try something symmetrical this time\n        self.__honey__ = True\n        self.bro = True\nOutput:\n>>> Yo().bro\nTrue\n\n>>> Yo()._Yo__honey__\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'Yo' object has no attribute '_Yo__honey__'\nWhy did Yo()._Yo__honey work?\n3.\n_A__variable = \"Some value\"\n\nclass A(object):\n    def some_func(self):\n        return __variable # not initialized anywhere yet\nOutput:\n>>> A().__variable\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'A' object has no attribute '__variable'\n\n>>> A().some_func()\n'Some value'\n\ud83d\udca1 Explanation:\n\nName Mangling is used to avoid naming collisions between different namespaces.\nIn Python, the interpreter modifies (mangles) the class member names starting with __ (double underscore a.k.a \"dunder\") and not ending with more than one trailing underscore by adding _NameOfTheClass in front.\nSo, to access __honey attribute in the first snippet, we had to append _Yo to the front, which would prevent conflicts with the same name attribute defined in any other class.\nBut then why didn't it work in the second snippet? Because name mangling excludes the names ending with double underscores.\nThe third snippet was also a consequence of name mangling. The name __variable in the statement return __variable was mangled to _A__variable, which also happens to be the name of the variable we declared in the outer scope.\nAlso, if the mangled name is longer than 255 characters, truncation will happen.\n\n\n\nSection: Appearances are deceptive!\n\u25b6 Skipping lines?\nOutput:\n>>> value = 11\n>>> valu\u0435 = 32\n>>> value\n11\nWut?\nNote: The easiest way to reproduce this is to simply copy the statements from the above snippet and paste them into your file\/shell.\n\ud83d\udca1 Explanation\nSome non-Western characters look identical to letters in the English alphabet but are considered distinct by the interpreter.\n>>> ord('\u0435') # cyrillic 'e' (Ye)\n1077\n>>> ord('e') # latin 'e', as used in English and typed using standard keyboard\n101\n>>> '\u0435' == 'e'\nFalse\n\n>>> value = 42 # latin e\n>>> valu\u0435 = 23 # cyrillic 'e', Python 2.x interpreter would raise a `SyntaxError` here\n>>> value\n42\nThe built-in ord() function returns a character's Unicode code point, and different code positions of Cyrillic 'e' and Latin 'e' justify the behavior of the above example.\n\n\u25b6 Teleportation\n# `pip install numpy` first.\nimport numpy as np\n\ndef energy_send(x):\n    # Initializing a numpy array\n    np.array([float(x)])\n\ndef energy_receive():\n    # Return an empty numpy array\n    return np.empty((), dtype=np.float).tolist()\nOutput:\n>>> energy_send(123.456)\n>>> energy_receive()\n123.456\nWhere's the Nobel Prize?\n\ud83d\udca1 Explanation:\n\nNotice that the numpy array created in the energy_send function is not returned, so that memory space is free to reallocate.\nnumpy.empty() returns the next free memory slot without reinitializing it. This memory spot just happens to be the same one that was just freed (usually, but not always).\n\n\n\u25b6 Well, something is fishy...\ndef square(x):\n    \"\"\"\n    A simple function to calculate the square of a number by addition.\n    \"\"\"\n    sum_so_far = 0\n    for counter in range(x):\n        sum_so_far = sum_so_far + x\n  return sum_so_far\nOutput (Python 2.x):\n>>> square(10)\n10\nShouldn't that be 100?\nNote: If you're not able to reproduce this, try running the file mixed_tabs_and_spaces.py via the shell.\n\ud83d\udca1 Explanation\n\n\nDon't mix tabs and spaces! The character just preceding return is a \"tab\",  and the code is indented by multiple of \"4 spaces\" elsewhere in the example.\n\n\nThis is how Python handles tabs:\n\nFirst, tabs are replaced (from left to right) by one to eight spaces such that the total number of characters up to and including the replacement is a multiple of eight <...>\n\n\n\nSo the \"tab\" at the last line of square function is replaced with eight spaces, and it gets into the loop.\n\n\nPython 3 is kind enough to throw an error for such cases automatically.\nOutput (Python 3.x):\nTabError: inconsistent use of tabs and spaces in indentation\n\n\n\n\nSection: Miscellaneous\n\u25b6 += is faster\n# using \"+\", three strings:\n>>> timeit.timeit(\"s1 = s1 + s2 + s3\", setup=\"s1 = ' ' * 100000; s2 = ' ' * 100000; s3 = ' ' * 100000\", number=100)\n0.25748300552368164\n# using \"+=\", three strings:\n>>> timeit.timeit(\"s1 += s2 + s3\", setup=\"s1 = ' ' * 100000; s2 = ' ' * 100000; s3 = ' ' * 100000\", number=100)\n0.012188911437988281\n\ud83d\udca1 Explanation:\n\n+= is faster than + for concatenating more than two strings because the first string (example, s1 for s1 += s2 + s3) is not destroyed while calculating the complete string.\n\n\n\u25b6 Let's make a giant string!\ndef add_string_with_plus(iters):\n    s = \"\"\n    for i in range(iters):\n        s += \"xyz\"\n    assert len(s) == 3*iters\n\ndef add_bytes_with_plus(iters):\n    s = b\"\"\n    for i in range(iters):\n        s += b\"xyz\"\n    assert len(s) == 3*iters\n\ndef add_string_with_format(iters):\n    fs = \"{}\"*iters\n    s = fs.format(*([\"xyz\"]*iters))\n    assert len(s) == 3*iters\n\ndef add_string_with_join(iters):\n    l = []\n    for i in range(iters):\n        l.append(\"xyz\")\n    s = \"\".join(l)\n    assert len(s) == 3*iters\n\ndef convert_list_to_string(l, iters):\n    s = \"\".join(l)\n    assert len(s) == 3*iters\nOutput:\n# Executed in ipython shell using %timeit for better readability of results.\n# You can also use the timeit module in normal python shell\/scriptm=, example usage below\n# timeit.timeit('add_string_with_plus(10000)', number=1000, globals=globals())\n\n>>> NUM_ITERS = 1000\n>>> %timeit -n1000 add_string_with_plus(NUM_ITERS)\n124 \u00b5s \u00b1 4.73 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n>>> %timeit -n1000 add_bytes_with_plus(NUM_ITERS)\n211 \u00b5s \u00b1 10.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> %timeit -n1000 add_string_with_format(NUM_ITERS)\n61 \u00b5s \u00b1 2.18 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> %timeit -n1000 add_string_with_join(NUM_ITERS)\n117 \u00b5s \u00b1 3.21 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> l = [\"xyz\"]*NUM_ITERS\n>>> %timeit -n1000 convert_list_to_string(l, NUM_ITERS)\n10.1 \u00b5s \u00b1 1.06 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\nLet's increase the number of iterations by a factor of 10.\n>>> NUM_ITERS = 10000\n>>> %timeit -n1000 add_string_with_plus(NUM_ITERS) # Linear increase in execution time\n1.26 ms \u00b1 76.8 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> %timeit -n1000 add_bytes_with_plus(NUM_ITERS) # Quadratic increase\n6.82 ms \u00b1 134 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> %timeit -n1000 add_string_with_format(NUM_ITERS) # Linear increase\n645 \u00b5s \u00b1 24.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> %timeit -n1000 add_string_with_join(NUM_ITERS) # Linear increase\n1.17 ms \u00b1 7.25 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> l = [\"xyz\"]*NUM_ITERS\n>>> %timeit -n1000 convert_list_to_string(l, NUM_ITERS) # Linear increase\n86.3 \u00b5s \u00b1 2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\ud83d\udca1 Explanation\n\n\nYou can read more about timeit or %timeit on these links. They are used to measure the execution time of code pieces.\n\n\nDon't use + for generating long strings \u2014 In Python, str is immutable, so the left and right strings have to be copied into the new string for every pair of concatenations. If you concatenate four strings of length 10, you'll be copying (10+10) + ((10+10)+10) + (((10+10)+10)+10) = 90 characters instead of just 40 characters. Things get quadratically worse as the number and size of the string increases (justified with the execution times of add_bytes_with_plus function)\n\n\nTherefore, it's advised to use .format. or % syntax (however, they are slightly slower than + for very short strings).\n\n\nOr better, if already you've contents available in the form of an iterable object, then use ''.join(iterable_object) which is much faster.\n\n\nUnlike add_bytes_with_plus because of the += optimizations discussed in the previous example, add_string_with_plus didn't show a quadratic increase in execution time. Had the statement been s = s + \"x\" + \"y\" + \"z\" instead of s += \"xyz\", the increase would have been quadratic.\ndef add_string_with_plus(iters):\n    s = \"\"\n    for i in range(iters):\n        s = s + \"x\" + \"y\" + \"z\"\n    assert len(s) == 3*iters\n\n>>> %timeit -n100 add_string_with_plus(1000)\n388 \u00b5s \u00b1 22.4 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>>> %timeit -n100 add_string_with_plus(10000) # Quadratic increase in execution time\n9 ms \u00b1 298 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\n\nSo many ways to format and create a giant string are somewhat in contrast to the Zen of Python, according to which,\n\nThere should be one-- and preferably only one --obvious way to do it.\n\n\n\n\n\u25b6 Slowing down dict lookups *\nsome_dict = {str(i): 1 for i in range(1_000_000)}\nanother_dict = {str(i): 1 for i in range(1_000_000)}\nOutput:\n>>> %timeit some_dict['5']\n28.6 ns \u00b1 0.115 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n>>> some_dict[1] = 1\n>>> %timeit some_dict['5']\n37.2 ns \u00b1 0.265 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\n>>> %timeit another_dict['5']\n28.5 ns \u00b1 0.142 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n>>> another_dict[1]  # Trying to access a key that doesn't exist\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nKeyError: 1\n>>> %timeit another_dict['5']\n38.5 ns \u00b1 0.0913 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\nWhy are same lookups becoming slower?\n\ud83d\udca1 Explanation:\n\nCPython has a generic dictionary lookup function that handles all types of keys (str, int, any object ...), and a specialized one for the common case of dictionaries composed of str-only keys.\nThe specialized function (named lookdict_unicode in CPython's source) knows all existing keys (including the looked-up key) are strings, and uses the faster & simpler string comparison to compare keys, instead of calling the __eq__ method.\nThe first time a dict instance is accessed with a non-str key, it's modified so future lookups use the generic function.\nThis process is not reversible for the particular dict instance, and the key doesn't even have to exist in the dictionary. That's why attempting a failed lookup has the same effect.\n\n\u25b6 Bloating instance dicts *\nimport sys\n\nclass SomeClass:\n    def __init__(self):\n        self.some_attr1 = 1\n        self.some_attr2 = 2\n        self.some_attr3 = 3\n        self.some_attr4 = 4\n\n\ndef dict_size(o):\n    return sys.getsizeof(o.__dict__)\nOutput: (Python 3.8, other Python 3 versions may vary a little)\n>>> o1 = SomeClass()\n>>> o2 = SomeClass()\n>>> dict_size(o1)\n104\n>>> dict_size(o2)\n104\n>>> del o1.some_attr1\n>>> o3 = SomeClass()\n>>> dict_size(o3)\n232\n>>> dict_size(o1)\n232\nLet's try again... In a new interpreter:\n>>> o1 = SomeClass()\n>>> o2 = SomeClass()\n>>> dict_size(o1)\n104  # as expected\n>>> o1.some_attr5 = 5\n>>> o1.some_attr6 = 6\n>>> dict_size(o1)\n360\n>>> dict_size(o2)\n272\n>>> o3 = SomeClass()\n>>> dict_size(o3)\n232\nWhat makes those dictionaries become bloated? And why are newly created objects bloated as well?\n\ud83d\udca1 Explanation:\n\nCPython is able to reuse the same \"keys\" object in multiple dictionaries. This was added in PEP 412 with the motivation to reduce memory usage, specifically in dictionaries of instances - where keys (instance attributes) tend to be common to all instances.\nThis optimization is entirely seamless for instance dictionaries, but it is disabled if certain assumptions are broken.\nKey-sharing dictionaries do not support deletion; if an instance attribute is deleted, the dictionary is \"unshared\", and key-sharing is disabled for all future instances of the same class.\nAdditionaly, if the dictionary keys have be resized (because new keys are inserted), they are kept shared only if they are used by a exactly single dictionary (this allows adding many attributes in the __init__ of the very first created instance, without causing an \"unshare\"). If multiple instances exist when a resize happens, key-sharing is disabled for all future instances of the same class: CPython can't tell if your instances are using the same set of attributes anymore, and decides to bail out on attempting to share their keys.\nA small tip, if you aim to lower your program's memory footprint: don't delete instance attributes, and make sure to initialize all attributes in your __init__!\n\n\u25b6 Minor Ones *\n\n\njoin() is a string operation instead of list operation. (sort of counter-intuitive at first usage)\n\ud83d\udca1 Explanation: If join() is a method on a string, then it can operate on any iterable (list, tuple, iterators). If it were a method on a list, it'd have to be implemented separately by every type. Also, it doesn't make much sense to put a string-specific method on a generic list object API.\n\n\nFew weird looking but semantically correct statements:\n\n[] = () is a semantically correct statement (unpacking an empty tuple into an empty list)\n'a'[0][0][0][0][0] is also a semantically correct statement as strings are sequences(iterables supporting element access using integer indices) in Python.\n3 --0-- 5 == 8 and --5 == 5 are both semantically correct statements and evaluate to True.\n\n\n\nGiven that a is a number, ++a and --a are both valid Python statements but don't behave the same way as compared with similar statements in languages like C, C++, or Java.\n>>> a = 5\n>>> a\n5\n>>> ++a\n5\n>>> --a\n5\n\ud83d\udca1 Explanation:\n\nThere is no ++ operator in Python grammar. It is actually two + operators.\n++a parses as +(+a) which translates to a. Similarly, the output of the statement --a can be justified.\nThis StackOverflow thread discusses the rationale behind the absence of increment and decrement operators in Python.\n\n\n\nYou must be aware of the Walrus operator in Python. But have you ever heard about the space-invader operator?\n>>> a = 42\n>>> a -=- 1\n>>> a\n43\nIt is used as an alternative incrementation operator, together with another one\n>>> a +=+ 1\n>>> a\n>>> 44\n\ud83d\udca1 Explanation: This prank comes from Raymond Hettinger's tweet. The space invader operator is actually just a malformatted a -= (-1). Which is equivalent to a = a - (- 1). Similar for the a += (+ 1) case.\n\n\nPython has an undocumented converse implication operator.\n>>> False ** False == True\nTrue\n>>> False ** True == False\nTrue\n>>> True ** False == True\nTrue\n>>> True ** True == True\nTrue\n\ud83d\udca1 Explanation: If you replace False and True by 0 and 1 and do the maths, the truth table is equivalent to a converse implication operator. (Source)\n\n\nSince we are talking operators, there's also @ operator for matrix multiplication (don't worry, this time it's for real).\n>>> import numpy as np\n>>> np.array([2, 2, 2]) @ np.array([7, 8, 8])\n46\n\ud83d\udca1 Explanation: The @ operator was added in Python 3.5 keeping the scientific community in mind. Any object can overload __matmul__ magic method to define behavior for this operator.\n\n\nFrom Python 3.8 onwards you can use a typical f-string syntax like f'{some_var=} for quick debugging. Example,\n>>> some_string = \"wtfpython\"\n>>> f'{some_string=}'\n\"some_string='wtfpython'\"\n\n\nPython uses 2 bytes for local variable storage in functions. In theory, this means that only 65536 variables can be defined in a function. However, python has a handy solution built in that can be used to store more than 2^16 variable names. The following code demonstrates what happens in the stack when more than 65536 local variables are defined (Warning: This code prints around 2^18 lines of text, so be prepared!):\nimport dis\nexec(\"\"\"\ndef f():\n   \"\"\" + \"\"\"\n   \"\"\".join([\"X\" + str(x) + \"=\" + str(x) for x in range(65539)]))\n\nf()\n\nprint(dis.dis(f))\n\n\nMultiple Python threads won't run your Python code concurrently (yes, you heard it right!). It may seem intuitive to spawn several threads and let them execute your Python code concurrently, but, because of the Global Interpreter Lock in Python, all you're doing is making your threads execute on the same core turn by turn. Python threads are good for IO-bound tasks, but to achieve actual parallelization in Python for CPU-bound tasks, you might want to use the Python multiprocessing module.\n\n\nSometimes, the print method might not print values immediately. For example,\n# File some_file.py\nimport time\n\nprint(\"wtfpython\", end=\"_\")\ntime.sleep(3)\nThis will print the wtfpython after 3 seconds due to the end argument because the output buffer is flushed either after encountering \\n or when the program finishes execution. We can force the buffer to flush by passing flush=True argument.\n\n\nList slicing with out of the bounds indices throws no errors\n>>> some_list = [1, 2, 3, 4, 5]\n>>> some_list[111:]\n[]\n\n\nSlicing an iterable not always creates a new object. For example,\n>>> some_str = \"wtfpython\"\n>>> some_list = ['w', 't', 'f', 'p', 'y', 't', 'h', 'o', 'n']\n>>> some_list is some_list[:] # False expected because a new object is created.\nFalse\n>>> some_str is some_str[:] # True because strings are immutable, so making a new object is of not much use.\nTrue\n\n\nint('\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669') returns 123456789 in Python 3. In Python, Decimal characters include digit characters, and all characters that can be used to form decimal-radix numbers, e.g. U+0660, ARABIC-INDIC DIGIT ZERO. Here's an interesting story related to this behavior of Python.\n\n\nYou can separate numeric literals with underscores (for better readability) from Python 3 onwards.\n>>> six_million = 6_000_000\n>>> six_million\n6000000\n>>> hex_address = 0xF00D_CAFE\n>>> hex_address\n4027435774\n\n\n'abc'.count('') == 4. Here's an approximate implementation of count method, which would make the things more clear\ndef count(s, sub):\n    result = 0\n    for i in range(len(s) + 1 - len(sub)):\n        result += (s[i:i + len(sub)] == sub)\n    return result\nThe behavior is due to the matching of empty substring('') with slices of length 0 in the original string.\n\n\n\n\nContributing\nA few ways in which you can contribute to wtfpython,\n\nSuggesting new examples\nHelping with translation (See issues labeled translation)\nMinor corrections like pointing out outdated snippets, typos, formatting errors, etc.\nIdentifying gaps (things like inadequate explanation, redundant examples, etc.)\nAny creative suggestions to make this project more fun and useful\n\nPlease see CONTRIBUTING.md for more details. Feel free to create a new issue to discuss things.\nPS: Please don't reach out with backlinking requests, no links will be added unless they're highly relevant to the project.\nAcknowledgements\nThe idea and design for this collection were initially inspired by Denys Dovhan's awesome project wtfjs. The overwhelming support by Pythonistas gave it the shape it is in right now.\nSome nice Links!\n\nhttps:\/\/www.youtube.com\/watch?v=sH4XF6pKKmk\nhttps:\/\/www.reddit.com\/r\/Python\/comments\/3cu6ej\/what_are_some_wtf_things_about_python\nhttps:\/\/sopython.com\/wiki\/Common_Gotchas_In_Python\nhttps:\/\/stackoverflow.com\/questions\/530530\/python-2-x-gotchas-and-landmines\nhttps:\/\/stackoverflow.com\/questions\/1011431\/common-pitfalls-in-python\nhttps:\/\/www.python.org\/doc\/humor\/\nhttps:\/\/github.com\/cosmologicon\/pywat#the-undocumented-converse-implication-operator\nhttps:\/\/www.codementor.io\/satwikkansal\/python-practices-for-efficient-code-performance-memory-and-usability-aze6oiq65\nhttps:\/\/github.com\/wemake-services\/wemake-python-styleguide\/search?q=wtfpython&type=Issues\nWFTPython discussion threads on Hacker News and Reddit.\n\n\ud83c\udf93 License\n\n\u00a9 Satwik Kansal\nSurprise your friends as well!\nIf you like wtfpython, you can use these quick links to share it with your friends,\nTwitter | Linkedin | Facebook\nNeed a pdf version?\nI've received a few requests for the pdf (and epub) version of wtfpython. You can add your details here to get them as soon as they are finished.\nThat's all folks! For upcoming content like this, you can add your email here.\n","155":"YouCompleteMe: a code-completion engine for Vim\n\n\n\nNOTE: Minimum Requirements Have Changed\nOur policy is to support the Vim version that's in the latest LTS of Ubuntu.\nThat's currently Ubuntu 20.04 which contains vim-nox at v8.1.2269.\nFor neovim users, 0.4.4 is required.\nNOTE: Minimum compiler versions have been increased\nIn order to provide the best possible performance and stability, ycmd has\nupdated its code to C++17. This requires a version bump of the minimum\nsupported compilers. The new requirements are:\n\n\n\nCompiler\nCurrent Min\n\n\n\n\nGCC\n8\n\n\nClang\n7\n\n\nMSVC\n15.7 (VS 2017)\n\n\n\nHelp, Advice, Support\nLooking for help, advice or support? Having problems getting YCM to work?\nFirst carefully read the installation instructions for your OS.\nWe recommend you use the supplied install.py - the \"full\" installation guide\nis for rare, advanced use cases and most users should use install.py.\nIf the server isn't starting and you're getting a \"YouCompleteMe unavailable\"\nerror, check the Troubleshooting guide.\nNext check the User Guide section on the semantic completer that\nyou are using. For C\/C++\/Objective-C\/Objective-C++\/CUDA, you  must read this\nsection.\nFinally, check the FAQ.\nIf, after reading the installation and user guides, and checking the FAQ, you're\nstill having trouble, check the contacts section below for how to\nget in touch.\nPlease do NOT go to #vim on freenode for support. Please contact the\nYouCompleteMe maintainers directly using the contact details below.\nContents\n\nIntro\nInstallation\n\nRequirements\nmacOS\nLinux 64-bit\nWindows\nFreeBSD\/OpenBSD\nFull Installation Guide\n\n\nQuick Feature Summary\nUser Guide\n\nGeneral Usage\nClient-Server Architecture\nCompletion String Ranking\nGeneral Semantic Completion\nC-family Semantic Completion\nJava Semantic Completion\nC# Semantic Completion\nPython Semantic Completion\nRust Semantic Completion\nGo Semantic Completion\nJavaScript and TypeScript Semantic Completion\nSemantic Completion for Other Languages\nLSP Configuration\nWriting New Semantic Completers\nDiagnostic Display\n\nDiagnostic Highlighting Groups\n\n\n\n\nCommands\n\nYcmCompleter subcommands\n\nGoTo Commands\nSemantic Information Commands\nRefactoring Commands\nMiscellaneous Commands\n\n\n\n\nFunctions\nAutocommands\nOptions\nFAQ\nContributor Code of Conduct\nContact\nLicense\n\nIntro\nYouCompleteMe is a fast, as-you-type, fuzzy-search code completion,\ncomprehension and refactoring engine for Vim.\nIt has several completion engines built in and supports any protocol-compliant\nLanguage Server, so can work with practically any language. YouCompleteMe\ncontains:\n\nan identifier-based engine that works with every programming language,\na powerful clangd-based engine that provides native semantic code\ncompletion for C\/C++\/Objective-C\/Objective-C++\/CUDA (from now on referred to\nas \"the C-family languages\"),\na Jedi-based completion engine for Python 2 and 3,\nan OmniSharp-Roslyn-based completion engine for C#,\na Gopls-based completion engine for Go,\na TSServer-based completion engine for JavaScript and TypeScript,\na rust-analyzer-based completion engine for Rust,\na jdt.ls-based completion engine for Java.\na generic Language Server Protocol implementation for any language\nand an omnifunc-based completer that uses data from Vim's omnicomplete system\nto provide semantic completions for many other languages (Ruby, PHP etc.).\n\n\nHere's an explanation of what happens in the last GIF demo above.\nFirst, realize that no keyboard shortcuts had to be pressed to get the list\nof completion candidates at any point in the demo. The user just types and the\nsuggestions pop up by themselves. If the user doesn't find the completion\nsuggestions relevant and\/or just wants to type, they can do so; the completion\nengine will not interfere.\nWhen the user sees a useful completion string being offered, they press the TAB\nkey to accept it. This inserts the completion string. Repeated presses of the\nTAB key cycle through the offered completions.\nIf the offered completions are not relevant enough, the user can continue typing\nto further filter out unwanted completions.\nA critical thing to notice is that the completion filtering is NOT based on\nthe input being a string prefix of the completion (but that works too). The\ninput needs to be a subsequence match of a completion. This is a fancy way\nof saying that any input characters need to be present in a completion string in\nthe order in which they appear in the input. So abc is a subsequence of\nxaybgc, but not of xbyxaxxc. After the filter, a complicated sorting system\nranks the completion strings so that the most relevant ones rise to the top of\nthe menu (so you usually need to press TAB just once).\nAll of the above works with any programming language because of the\nidentifier-based completion engine. It collects all of the identifiers in the\ncurrent file and other files you visit (and your tags files) and searches them\nwhen you type (identifiers are put into per-filetype groups).\nThe demo also shows the semantic engine in use. When the user presses ., ->\nor :: while typing in insert mode (for C++; different triggers are used for\nother languages), the semantic engine is triggered (it can also be triggered\nwith a keyboard shortcut; see the rest of the docs).\nThe last thing that you can see in the demo is YCM's diagnostic display features\n(the little red X that shows up in the left gutter; inspired by Syntastic)\nif you are editing a C-family file. As the completer engine compiles your file\nand detects warnings or errors, they will be presented in various ways. You\ndon't need to save your file or press any keyboard shortcut to trigger this, it\n\"just happens\" in the background.\nAnd that's not all...\nYCM might be the only vim completion engine with the correct Unicode support.\nThough we do assume UTF-8 everywhere.\n\nYCM also provides semantic IDE-like features in a\nnumber of languages, including:\n\ndisplaying signature help (argument hints) when entering the arguments to a\nfunction call (Vim only)\nfinding declarations, definitions, usages, etc.\nof identifiers,\ndisplaying type information for classes,\nvariables, functions etc.,\ndisplaying documentation for methods, members, etc. in the preview\nwindow, or in a\npopup next to the cursor (Vim only)\nfixing common coding errors, like missing\nsemi-colons, typos, etc.,\nsemantic renaming of variables across files,\nformatting code,\nremoving unused imports, sorting imports, etc.\n\nFor example, here's a demo of signature help:\n\nBelow we can see YCM being able to do a few things:\n\nRetrieve references across files\nGo to declaration\/definition\nExpand auto in C++\nFix some common errors with FixIt\nNot shown in the gif is GoToImplementation and GoToType\nfor servers that support it.\n\n\nAnd here's some documentation being shown in a hover popup, automatically and\nmanually:\n\nFeatures vary by file type, so make sure to check out the file type feature\nsummary and the\nfull list of completer subcommands to\nfind out what's available for your favourite languages.\nYou'll also find that YCM has filepath completers (try typing .\/ in a file)\nand a completer that integrates with UltiSnips.\nInstallation\nRequirements\nMinimum supported versions:\n\nVim v8.1.2269 huge build, compiled with Python 3.6 support (aka vim-nox in\nUbuntu 20.04 LTS)\nPython 3.6 runtime, compiled with --enable-shared (or --enable-framework)\n\nPlease note that some features are not availble in Neovim, and Neovim is not\nofficially supported.\nmacOS\nQuick start, installing all completers\n\nInstall YCM plugin via Vundle\nInstall cmake, macvim and python; Note that the system vim is not supported.\n\nbrew install cmake macvim python mono go nodejs\n\n\nCompile YCM\n\ncd ~\/.vim\/bundle\/YouCompleteMe\npython3 install.py --all\n\n\nFor plugging an arbitrary LSP server, check the relevant section\n\nExplanation for the quick start\nThese instructions (using install.py) are the quickest way to install\nYouCompleteMe, however they may not work for everyone. If the following\ninstructions don't work for you, check out the full installation\nguide.\nMacVim is required. YCM won't work with the pre-installed Vim from Apple as\nits Python support is broken. If you don't already use MacVim, install it\nwith Homebrew. Install CMake as well:\nbrew install cmake macvim\n\nInstall YouCompleteMe with Vundle.\nRemember: YCM is a plugin with a compiled component. If you update YCM\nusing Vundle and the ycm_core library APIs have changed (happens\nrarely), YCM will notify you to recompile it. You should then rerun the install\nprocess.\nNOTE: If you want C-family completion, you MUST have the latest Xcode\ninstalled along with the latest Command Line Tools (they are installed\nautomatically when you run clang for the first time, or manually by running\nxcode-select --install)\nCompiling YCM with semantic support for C-family languages through\nclangd:\ncd ~\/.vim\/bundle\/YouCompleteMe\n.\/install.py --clangd-completer\n\nCompiling YCM without semantic support for C-family languages:\ncd ~\/.vim\/bundle\/YouCompleteMe\n.\/install.py\n\nThe following additional language support options are available:\n\nC# support: install Mono with Homebrew or by downloading the Mono\nmacOS package and add --cs-completer when calling\ninstall.py.\nGo support: install Go and add --go-completer when calling\ninstall.py.\nJavaScript and TypeScript support: install Node.js and npm and\nadd --ts-completer when calling install.py.\nRust support: add --rust-completer when calling install.py.\nJava support: install JDK8 (version 8 required) and add\n--java-completer when calling install.py.\n\nTo simply compile with everything enabled, there's a --all flag. You need to\nspecify it manually by adding --clangd-completer. So, to install with all\nlanguage features, ensure xbuild, go, node and npm tools\nare installed and in your PATH, then simply run:\ncd ~\/.vim\/bundle\/YouCompleteMe\n.\/install.py --all\n\nThat's it. You're done. Refer to the User Guide section on how to use YCM.\nDon't forget that if you want the C-family semantic completion engine to work,\nyou will need to provide the compilation flags for your project to YCM. It's all\nin the User Guide.\nYCM comes with sane defaults for its options, but you still may want to take a\nlook at what's available for configuration. There are a few interesting options\nthat are conservatively turned off by default that you may want to turn on.\nLinux 64-bit\nQuick start, installing all completers\n\nInstall YCM plugin via Vundle\nInstall cmake, vim and python\n\napt install build-essential cmake vim python3-dev\n\n\nInstall mono-complete, go, node and npm\nCompile YCM\n\ncd ~\/.vim\/bundle\/YouCompleteMe\npython3 install.py --all\n\n\nFor plugging an arbitrary LSP server, check the relevant section\n\nExplanation for the quick start\nThese instructions (using install.py) are the quickest way to install\nYouCompleteMe, however they may not work for everyone. If the following\ninstructions don't work for you, check out the full installation\nguide.\nMake sure you have Vim 7.4.1578 with Python 3 support. The Vim\npackage on Fedora 27 and later and the pre-installed Vim on Ubuntu 16.04 and\nlater are recent enough. You can see the version of Vim installed by running\nvim --version. If the version is too old, you may need to compile Vim from\nsource (don't worry, it's easy).\nNOTE: For all features, such as signature help, use Vim 8.1.1875 or later.\nInstall YouCompleteMe with Vundle.\nRemember: YCM is a plugin with a compiled component. If you update YCM\nusing Vundle and the ycm_core library APIs have changed (happens rarely), YCM\nwill notify you to recompile it. You should then rerun the install process.\nInstall development tools, CMake, and Python headers:\n\nFedora 27 and later:\n\nsudo dnf install cmake gcc-c++ make python3-devel\n\n\nUbuntu 14.04:\n\nsudo apt install build-essential cmake3 python3-dev\n\n\nUbuntu 16.04 and later:\n\nsudo apt install build-essential cmake python3-dev\n\nCompiling YCM with semantic support for C-family languages through\nclangd:\ncd ~\/.vim\/bundle\/YouCompleteMe\npython3 install.py --clangd-completer\n\nCompiling YCM without semantic support for C-family languages:\ncd ~\/.vim\/bundle\/YouCompleteMe\npython3 install.py\n\nThe following additional language support options are available:\n\nC# support: install Mono and add --cs-completer\nwhen calling install.py.\nGo support: install Go and add --go-completer when calling\ninstall.py.\nJavaScript and TypeScript support: install Node.js and npm and\nadd --ts-completer when calling install.py.\nRust support: add --rust-completer when calling install.py.\nJava support: install JDK8 (version 8 required) and add\n--java-completer when calling install.py.\n\nTo simply compile with everything enabled, there's a --all flag. You need to\nspecify it manually by adding --clangd-completer. So, to install with all\nlanguage features, ensure xbuild, go, node, npm and tools\nare installed and in your PATH, then simply run:\ncd ~\/.vim\/bundle\/YouCompleteMe\npython3 install.py --all\n\nThat's it. You're done. Refer to the User Guide section on how to use YCM.\nDon't forget that if you want the C-family semantic completion engine to work,\nyou will need to provide the compilation flags for your project to YCM. It's all\nin the User Guide.\nYCM comes with sane defaults for its options, but you still may want to take a\nlook at what's available for configuration. There are a few interesting options\nthat are conservatively turned off by default that you may want to turn on.\nWindows\nQuick start, installing all completers\n\nInstall YCM plugin via Vundle\nInstall Visual Studio Build Tools 2017\nInstall cmake, vim and python\nInstall go, node and npm\nCompile YCM\n\ncd YouCompleteMe\npython3 install.py --all\n\n\nAdd set encoding=utf-8 to your vimrc\nFor plugging an arbitrary LSP server, check the relevant section\n\nExplanation for the quick start\nThese instructions (using install.py) are the quickest way to install\nYouCompleteMe, however they may not work for everyone. If the following\ninstructions don't work for you, check out the full installation\nguide.\nImportant: we assume that you are using the cmd.exe command prompt and\nthat you know how to add an executable to the PATH environment variable.\nMake sure you have at least Vim 7.4.1578 with Python 3 support. You\ncan check the version and which Python is supported by typing :version inside\nVim. Look at the features included: +python3\/dyn for Python 3.\nTake note of the Vim architecture, i.e. 32 or\n64-bit. It will be important when choosing the Python installer. We recommend\nusing a 64-bit client. Daily updated installers of 32-bit and 64-bit Vim with\nPython 3 support are available.\nNOTE: For all features, such as signature help, use Vim 8.1.1875 or later.\nAdd the line:\nset encoding=utf-8\nto your vimrc if not already present. This option is required by YCM. Note\nthat it does not prevent you from editing a file in another encoding than UTF-8.\nYou can do that by specifying the ++enc argument to the :e command.\nInstall YouCompleteMe with Vundle.\nRemember: YCM is a plugin with a compiled component. If you update YCM\nusing Vundle and the ycm_core library APIs have changed (happens\nrarely), YCM will notify you to recompile it. You should then rerun the install\nprocess.\nDownload and install the following software:\n\nPython 3. Be sure to pick the version\ncorresponding to your Vim architecture. It is Windows x86 for a 32-bit Vim\nand Windows x86-64 for a 64-bit Vim. We recommend installing Python 3.\nAdditionally, the version of Python you install must match up exactly with\nthe version of Python that Vim is looking for. Type :version and look at the\nbottom of the page at the list of compiler flags. Look for flags that look\nsimilar to -DDYNAMIC_PYTHON3_DLL=\\\"python36.dll\\\". This indicates\nthat Vim is looking for Python 3.6. You'll need one or the other installed,\nmatching the version number exactly.\nCMake. Add CMake executable to the PATH environment\nvariable.\nVisual Studio Build Tools 2017. During setup,\nselect Visual C++ build tools in Workloads.\n\nCompiling YCM with semantic support for C-family languages through\nclangd:\ncd %USERPROFILE%\/vimfiles\/bundle\/YouCompleteMe\npython install.py --clangd-completer\n\nCompiling YCM without semantic support for C-family languages:\ncd %USERPROFILE%\/vimfiles\/bundle\/YouCompleteMe\npython install.py\n\nThe following additional language support options are available:\n\nC# support: add --cs-completer when calling install.py.\nBe sure that the build utility msbuild is in your PATH.\nGo support: install Go and add --go-completer when calling\ninstall.py.\nJavaScript and TypeScript support: install Node.js and npm and\nadd --ts-completer when calling install.py.\nRust support: add --rust-completer when calling install.py.\nJava support: install JDK8 (version 8 required) and add\n--java-completer when calling install.py.\n\nTo simply compile with everything enabled, there's a --all flag. You need to\nspecify it manually by adding --clangd-completer. So, to install with all\nlanguage features, ensure msbuild, go, node and npm tools\nare installed and in your PATH, then simply run:\ncd %USERPROFILE%\/vimfiles\/bundle\/YouCompleteMe\npython install.py --all\n\nYou can specify the Microsoft Visual C++ (MSVC) version using the --msvc\noption. YCM officially supports MSVC 14 (Visual Studio 2015), 15 (2017) and\nMSVC 16 (Visual Studio 2019).\nThat's it. You're done. Refer to the User Guide section on how to use YCM.\nDon't forget that if you want the C-family semantic completion engine to work,\nyou will need to provide the compilation flags for your project to YCM. It's all\nin the User Guide.\nYCM comes with sane defaults for its options, but you still may want to take a\nlook at what's available for configuration. There are a few interesting options\nthat are conservatively turned off by default that you may want to turn on.\nFreeBSD\/OpenBSD\nQuick start, installing all completers\n\nInstall YCM plugin via Vundle\nInstall cmake\n\npkg install cmake\n\n\nInstall xbuild, go, node and npm\nCompile YCM\n\ncd ~\/.vim\/bundle\/YouCompleteMe\npython3 install.py --all\n\n\nFor plugging an arbitrary LSP server, check the relevant section\n\nExplanation for the quick start\nThese instructions (using install.py) are the quickest way to install\nYouCompleteMe, however they may not work for everyone. If the following\ninstructions don't work for you, check out the full installation\nguide.\nNOTE: OpenBSD \/ FreeBSD are not officially supported platforms by YCM.\nMake sure you have Vim 7.4.1578 with Python 3 support.\nNOTE: For all features, such as signature help, use Vim 8.1.1875 or later.\nOpenBSD 5.5 and later have a Vim that's recent enough. You can see the version of\nVim installed by running vim --version.\nFor FreeBSD 11.x, the requirement is cmake:\npkg install cmake\n\nInstall YouCompleteMe with Vundle.\nRemember: YCM is a plugin with a compiled component. If you update YCM\nusing Vundle and the ycm_core library APIs have changed (happens\nrarely), YCM will notify you to recompile it. You should then rerun the install\nprocess.\nCompiling YCM with semantic support for C-family languages through\nclangd:\ncd ~\/.vim\/bundle\/YouCompleteMe\n.\/install.py --clangd-completer\n\nCompiling YCM without semantic support for C-family languages:\ncd ~\/.vim\/bundle\/YouCompleteMe\n.\/install.py\n\nIf the python executable is not present, or the default python is not the\none that should be compiled against, specify the python interpreter explicitly:\npython3 install.py --clangd-completer\n\nThe following additional language support options are available:\n\nC# support: install Mono and add --cs-completer when calling\n.\/install.py.\nGo support: install Go and add --go-completer when calling\n.\/install.py.\nJavaScript and TypeScript support: install Node.js and npm and\nadd --ts-completer when calling install.py.\nRust support: add --rust-completer when calling .\/install.py.\nJava support: install JDK8 (version 8 required) and add\n--java-completer when calling .\/install.py.\n\nTo simply compile with everything enabled, there's a --all flag. You need to\nspecify it manually by adding --clangd-completer. So, to install with all\nlanguage features, ensure xbuild, go, node, npm and tools\nare installed and in your PATH, then simply run:\ncd ~\/.vim\/bundle\/YouCompleteMe\n.\/install.py --all\n\nThat's it. You're done. Refer to the User Guide section on how to use YCM.\nDon't forget that if you want the C-family semantic completion engine to work,\nyou will need to provide the compilation flags for your project to YCM. It's all\nin the User Guide.\nYCM comes with sane defaults for its options, but you still may want to take a\nlook at what's available for configuration. There are a few interesting options\nthat are conservatively turned off by default that you may want to turn on.\nFull Installation Guide\nThe full installation guide has been moved to the wiki.\nQuick Feature Summary\nGeneral (all languages)\n\nSuper-fast identifier completer including tags files and syntax elements\nIntelligent suggestion ranking and filtering\nFile and path suggestions\nSuggestions from Vim's OmniFunc\nUltiSnips snippet suggestions\n\nC-family languages (C, C++, Objective C, Objective C++, CUDA)\n\nSemantic auto-completion with automatic fixes\nSignature help\nReal-time diagnostic display\nGo to include\/declaration\/definition (GoTo, etc.)\nFind Symbol (GoToSymbol)\nView documentation comments for identifiers (GetDoc)\nType information for identifiers (GetType)\nAutomatically fix certain errors (FixIt)\nReference finding (GoToReferences)\nRenaming symbols (RefactorRename <new name>)\nCode formatting (Format)\n\nC\u266f\n\nSemantic auto-completion\nSignature help\nReal-time diagnostic display\nGo to declaration\/definition (GoTo, etc.)\nGo to implementation (GoToImplementation)\nFind Symbol (GoToSymbol)\nView documentation comments for identifiers (GetDoc)\nType information for identifiers (GetType)\nAutomatically fix certain errors (FixIt)\nManagement of OmniSharp-Roslyn server instance\nRenaming symbols (RefactorRename <new name>)\nCode formatting (Format)\n\nPython\n\nSemantic auto-completion\nSignature help\nGo to definition (GoTo)\nFind Symbol (GoToSymbol)\nReference finding (GoToReferences)\nView documentation comments for identifiers (GetDoc)\nType information for identifiers (GetType)\nRenaming symbols (RefactorRename <new name>)\n\nGo\n\nSemantic auto-completion\nSignature help\nReal-time diagnostic display\nGo to declaration\/definition (GoTo, etc.)\nGo to type definition (GoToType)\nGo to implementation (GoToImplementation)\nAutomatically fix certain errors (FixIt)\nView documentation comments for identifiers (GetDoc)\nType information for identifiers (GetType)\nCode formatting (Format)\nManagement of gopls server instance\n\nJavaScript and TypeScript\n\nSemantic auto-completion with automatic import insertion\nSignature help\nReal-time diagnostic display\nGo to definition (GoTo, GoToDefinition, and GoToDeclaration are\nidentical)\nGo to type definition (GoToType)\nGo to implementation (GoToImplementation)\nFind Symbol (GoToSymbol)\nReference finding (GoToReferences)\nView documentation comments for identifiers (GetDoc)\nType information for identifiers (GetType)\nAutomatically fix certain errors (FixIt)\nRenaming symbols (RefactorRename <new name>)\nCode formatting (Format)\nOrganize imports (OrganizeImports)\nManagement of TSServer server instance\n\nRust\n\nSemantic auto-completion\nReal-time diagnostic display\nGo to declaration\/definition (GoTo, etc.)\nGo to implementation (GoToImplementation)\nReference finding (GoToReferences)\nView documentation comments for identifiers (GetDoc)\nAutomatically fix certain errors (FixIt)\nType information for identifiers (GetType)\nRenaming symbols (RefactorRename <new name>)\nCode formatting (Format)\nManagement of rust-analyzer server instance\n\nJava\n\nSemantic auto-completion with automatic import insertion\nSignature help\nReal-time diagnostic display\nGo to definition (GoTo, GoToDefinition, and GoToDeclaration are\nidentical)\nGo to type definition (GoToType)\nGo to implementation (GoToImplementation)\nFind Symbol (GoToSymbol)\nReference finding (GoToReferences)\nView documentation comments for identifiers (GetDoc)\nType information for identifiers (GetType)\nAutomatically fix certain errors including code generation (FixIt)\nRenaming symbols (RefactorRename <new name>)\nCode formatting (Format)\nOrganize imports (OrganizeImports)\nDetection of java projects\nExecute custom server command (ExecuteCommand <args>)\nManagement of jdt.ls server instance\n\nUser Guide\nGeneral Usage\nIf the offered completions are too broad, keep typing characters; YCM will\ncontinue refining the offered completions based on your input.\nFiltering is \"smart-case\" and \"smart-diacritic\" sensitive; if you are\ntyping only lowercase letters, then it's case-insensitive. If your input\ncontains uppercase letters, then the uppercase letters in your query must\nmatch uppercase letters in the completion strings (the lowercase letters still\nmatch both). On top of that, a letter with no diacritic marks will match that\nletter with or without marks:\n\n\n\nmatches\nfoo\nf\u00f4o\nfOo\nf\u00d4o\n\n\nfoo\n\u2714\ufe0f\n\u2714\ufe0f\n\u2714\ufe0f\n\u2714\ufe0f\n\n\nf\u00f4o\n\u274c\n\u2714\ufe0f\n\u274c\n\u2714\ufe0f\n\n\nfOo\n\u274c\n\u274c\n\u2714\ufe0f\n\u2714\ufe0f\n\n\nf\u00d4o\n\u274c\n\u274c\n\u274c\n\u2714\ufe0f\n\n\n\nUse the TAB key to accept a completion and continue pressing TAB to cycle\nthrough the completions. Use Shift-TAB to cycle backwards. Note that if you're\nusing console Vim (that is, not Gvim or MacVim) then it's likely that the\nShift-TAB binding will not work because the console will not pass it to Vim.\nYou can remap the keys; see the Options section below.\nKnowing a little bit about how YCM works internally will prevent confusion. YCM\nhas several completion engines: an identifier-based completer that collects all\nof the identifiers in the current file and other files you visit (and your tags\nfiles) and searches them when you type (identifiers are put into per-filetype\ngroups).\nThere are also several semantic engines in YCM. There are libclang-based and\nclangd-based completers that provide semantic completion for C-family languages.\nThere's a Jedi-based completer for semantic completion for Python. There's also\nan omnifunc-based completer that uses data from Vim's omnicomplete system to\nprovide semantic completions when no native completer exists for that language\nin YCM.\nThere are also other completion engines, like the UltiSnips completer and the\nfilepath completer.\nYCM automatically detects which completion engine would be the best in any\nsituation. On occasion, it queries several of them at once, merges the\noutputs and presents the results to you.\nClient-Server Architecture\nYCM has a client-server architecture; the Vim part of YCM is only a thin client\nthat talks to the ycmd HTTP+JSON server that has the vast majority of\nYCM logic and functionality. The server is started and stopped automatically as\nyou start and stop Vim.\nCompletion String Ranking\nThe subsequence filter removes any completions that do not match the input, but\nthen the sorting system kicks in. It's actually very complicated and uses lots\nof factors, but suffice it to say that \"word boundary\" (WB) subsequence\ncharacter matches are \"worth\" more than non-WB matches. In effect, this means\ngiven an input of \"gua\", the completion \"getUserAccount\" would be ranked higher\nin the list than the \"Fooguxa\" completion (both of which are subsequence\nmatches). A word-boundary character are all capital characters, characters\npreceded by an underscore and the first letter character in the completion\nstring.\nSignature Help\nSignature help is an experimental feature for which we value your feedback.\nValid signatures are displayed in a second popup menu and the current signature\nis highlighed along with the current arguemnt.\nSignature help is triggered in insert mode automatically when\ng:ycm_auto_trigger is enabled and is not supported when it is not enabled.\nThe signatures popup is hidden when there are no matching signatures or when you\nleave insert mode. There is no key binding to clear the popup.\nFor more details on this feature and a few demos, check out the\nPR that proposed it.\nGeneral Semantic Completion\nYou can use Ctrl+Space to trigger the completion suggestions anywhere, even\nwithout a string prefix. This is useful to see which top-level functions are\navailable for use.\nC-family Semantic Completion\nNOTE: YCM originally used the libclang based engine for C-family, but\nusers should migrate to clangd, as it provides more features and better\nperformance. Users who rely on override_filename in their .ycm_extra_conf.py\nwill need to stay on the old libclang engine. Instructions on how to stay on\nthe old engine are available on the wiki.\nAdvantages of clangd over libclang include:\n\nProject wide indexing: Clangd has both dynamic and static index support.\nThe dynamic index stores up-to-date symbols coming from any files you are\ncurrently editing, whereas static index contains project-wide symbol\ninformation. This symbol information is used for code completion and code\nnavigation. Whereas libclang is limited to the current translation unit(TU).\nCode navigation: Clangd provides all the GoTo requests libclang provides and it\nimproves those using the above mentioned index information to contain\nproject-wide information rather than just the current TU.\nRename: Clangd can perform semantic rename operations on the current\nfile, whereas libclang doesn\u2019t support such functionality.\nCode Completion: Clangd can perform code completions at a lower latency\nthan libclang; also, it has information about all the symbols in your\nproject so it can suggest items outside your current TU and also provides\nproper #include insertions for those items.\nSignature help: Clangd provides signature help so that you can see the\nnames and types of arguments when calling functions.\nFormat Code: Clangd provides code formatting either for the selected\nlines or the whole file, whereas libclang doesn\u2019t have such functionality.\nPerformance: Clangd has faster reparse and code completion times\ncompared to libclang.\n\nIn order to perform semantic analysis such as code completion, GoTo and\ndiagnostics, YouCompleteMe uses clangd, which makes use of\nclang compiler, sometimes also referred to as llvm. Like any compiler,\nclang also requires a set of compile flags in order to parse your code. Simply\nput: If clang can't parse your code, YouCompleteMe can't provide semantic\nanalysis.\nThere are 2 methods which can be used to provide compile flags to clang:\nOption 1: Use a compilation database\nThe easiest way to get YCM to compile your code is to use a compilation\ndatabase.  A compilation database is usually generated by your build system\n(e.g. CMake) and contains the compiler invocation for each compilation unit in\nyour project.\nFor information on how to generate a compilation database, see the clang\ndocumentation. In short:\n\nIf using CMake, add -DCMAKE_EXPORT_COMPILE_COMMANDS=ON when configuring (or\nadd set( CMAKE_EXPORT_COMPILE_COMMANDS ON ) to CMakeLists.txt) and copy or\nsymlink the generated database to the root of your project.\nIf using Ninja, check out the compdb tool (-t compdb) in its\ndocs.\nIf using GNU make, check out compiledb or Bear.\nFor other build systems, check out\n.ycm_extra_conf.py below.\n\nIf no .ycm_extra_conf.py is found,\nYouCompleteMe automatically tries to load a compilation database if there is\none.\nYCM looks for a file named compile_commands.json in the directory of the\nopened file or in any directory above it in the hierarchy (recursively); when\nthe file is found before a local .ycm_extra_conf.py, YouCompleteMe stops\nsearching the directories and lets clangd take over and handle the flags.\nOption 2: Provide the flags manually\nIf you don't have a compilation database, or aren't able to generate one,\nyou have to tell YouCompleteMe how to compile your code some other way.\nEvery C-family project is different. It is not possible for YCM to guess what\ncompiler flags to supply for your project. Fortunately, YCM provides a mechanism\nfor you to generate the flags for a particular file with arbitrary complexity.\nThis is achieved by requiring you to provide a Python module which implements a\ntrivial function which, given the file name as argument, returns a list of\ncompiler flags to use to compile that file.\nYCM looks for a .ycm_extra_conf.py file in the directory of the opened file or\nin any directory above it in the hierarchy (recursively); when the file is\nfound, it is loaded (only once!) as a Python module. YCM calls a Settings\nmethod in that module which should provide it with the information necessary to\ncompile the current file. You can also provide a path to a global configuration\nfile with the\ng:ycm_global_ycm_extra_conf option,\nwhich will be used as a fallback. To prevent the execution of malicious code\nfrom a file you didn't write YCM will ask you once per .ycm_extra_conf.py if\nit is safe to load. This can be disabled and you can white-\/blacklist files. See\nthe g:ycm_confirm_extra_conf and\ng:ycm_extra_conf_globlist options\nrespectively.\nThis system was designed this way so that the user can perform any arbitrary\nsequence of operations to produce a list of compilation flags YCM should hand\nto Clang.\nNOTE: It is highly recommended to include -x <language> flag to libclang.\nThis is so that the correct language is detected, particularly for header files.\nCommon values are -x c for C, -x c++ for C++, -x objc for Objective-C, and\n-x cuda for CUDA.\nTo give you an impression, if your C++ project is trivial, and your usual\ncompilation command is: g++ -Wall -Wextra -Werror -o FILE.o FILE.cc, then the\nfollowing .ycm_extra_conf.py is enough to get semantic analysis from\nYouCompleteMe:\ndef Settings( **kwargs ):\n  return {\n    'flags': [ '-x', 'c++', '-Wall', '-Wextra', '-Werror' ],\n  }\nAs you can see from the trivial example, YCM calls the Settings method which\nreturns a dictionary with a single element 'flags'. This element is a list\nof compiler flags to pass to libclang for the current file. The absolute path of\nthat file is accessible under the filename key of the kwargs dictionary.\nThat's it! This is actually enough for most projects, but for complex projects\nit is not uncommon to integrate directly with an existing build system using the\nfull power of the Python language.\nFor a more elaborate example,\nsee ycmd's own .ycm_extra_conf.py. You should be able to\nuse it as a starting point. Don't just copy\/paste that file somewhere and\nexpect things to magically work; your project needs different flags. Hint:\njust replace the strings in the flags variable with compilation flags\nnecessary for your project. That should be enough for 99% of projects.\nYou could also consider using YCM-Generator to generate the\nycm_extra_conf.py file.\nErrors during compilation\nIf Clang encounters errors when compiling the header files that your file\nincludes, then it's probably going to take a long time to get completions.  When\nthe completion menu finally appears, it's going to have a large number of\nunrelated completion strings (type\/function names that are not actually\nmembers). This is because Clang fails to build a precompiled preamble for your\nfile if there are any errors in the included headers and that preamble is key to\ngetting fast completions.\nCall the :YcmDiags command to see if any errors or warnings were detected in\nyour file.\nJava Semantic Completion\nJava quick Start\n\n\nEnsure that you have enabled the Java completer. See the\ninstallation guide for details.\n\n\nCreate a project file (gradle or maven) file in the root directory of your\nJava project, by following the instructions below.\n\n\n(Optional) Configure the LSP server. The jdt.ls\nconfiguration options can be found in their codebase.\n\n\nIf you previously used Eclim or Syntastic for Java, disable them for Java.\n\n\nEdit a Java file from your project.\n\n\nFor the best experience, we highly recommend at least Vim 8.1.1875 when using\nJava support with YouCompleteMe.\nJava Project Files\nIn order to provide semantic analysis, the Java completion engine requires\nknowledge of your project structure. In particular it needs to know the class\npath to use, when compiling your code. Fortunately jdt.ls\nsupports eclipse project files,\nmaven projects and gradle projects.\nNOTE: Our recommendation is to use either maven or gradle projects.\nDiagnostic display - Syntastic\nThe native support for Java includes YCM's native realtime diagnostics display.\nThis can conflict with other diagnostics plugins like Syntastic, so when\nenabling Java support, please manually disable Syntastic Java diagnostics.\nAdd the following to your vimrc:\nlet g:syntastic_java_checkers = []\nDiagnostic display - Eclim\nThe native support for Java includes YCM's native realtime diagnostics display.\nThis can conflict with other diagnostics plugins like Eclim, so when enabling\nJava support, please manually disable Eclim Java diagnostics.\nAdd the following to your vimrc:\nlet g:EclimFileTypeValidate = 0\nNOTE: We recommend disabling Eclim entirely when editing Java with YCM's\nnative Java support. This can be done temporarily with :EclimDisable.\nEclipse Projects\nEclipse style projects require two files: .project and\n.classpath.\nIf your project already has these files due to previously being set up within\neclipse, then no setup is required. jdt.ls should load the project just\nfine (it's basically eclipse after all).\nHowever, if not, it is possible (easy in fact) to craft them manually, though it\nis not recommended. You're better off using gradle or maven (see below).\nA simple eclipse style project example can be found in\nthe ycmd test directory. Normally all that is required is to copy these files to\nthe root of your project and to edit the .classpath to add additional\nlibraries, such as:\n  <classpathentry kind=\"lib\" path=\"\/path\/to\/external\/jar\" \/>\n  <classpathentry kind=\"lib\" path=\"\/path\/to\/external\/java\/source\" \/>\nIt may also be necessary to change the directory in which your source files are\nlocated (paths are relative to the .project file itself):\n  <classpathentry kind=\"src\" output=\"target\/classes\" path=\"path\/to\/src\/\" \/>\nNOTE: The eclipse project and classpath files are not a public interface\nand it is highly recommended to use Maven or Gradle project definitions if you\ndon't already use eclipse to manage your projects.\nMaven Projects\nMaven needs a file named pom.xml in the root of the project.\nOnce again a simple pom.xml can be found in ycmd source.\nThe format of pom.xml files is way beyond the scope of this\ndocument, but we do recommend using the various tools that can generate them for\nyou, if you're not familiar with them already.\nGradle Projects\nGradle projects require a build.gradle. Again, there is a\ntrivial example in ycmd's tests.\nThe format of build.gradle files is way beyond the scope of\nthis document, but we do recommend using the various tools that can generate\nthem for you, if you're not familiar with them already.\nTroubleshooting\nIf you're not getting completions or diagnostics, check the server health:\n\nThe Java completion engine takes a while to start up and parse your project.\nYou should be able to see its progress in the command line, and\n:YcmDebugInfo. Ensure that the following lines are present:\n\n--   jdt.ls Java Language Server running\n--   jdt.ls Java Language Server Startup Status: Ready\n\n\nIf the above lines don't appear after a few minutes, check the jdt.ls and ycmd\nlog files using :YcmToggleLogs . The jdt.ls\nlog file is called .log (for some reason).\n\nIf you get a message about \"classpath is incomplete\", then make sure you have\ncorrectly configured the project files.\nIf you get messages about unresolved imports, then make sure you have\ncorrectly configured the project files, in particular\ncheck that the classpath is set correctly.\nC# Semantic Completion\nYCM relies on OmniSharp-Roslyn to provide completion and code navigation.\nOmniSharp-Roslyn needs a solution file for a C# project and there are two ways\nof letting YCM know about your solution files.\nAutomaticly discovered solution files\nYCM will scan all parent directories of the file currently being edited and look\nfor file with .sln extension.\nManually specified solution files\nIf YCM loads .ycm_extra_conf.py which contains CSharpSolutionFile function,\nYCM will try to use that to determine the solution file. This is useful when one\nwants to override the default behaviour and specify a solution file that is not\nin any of the parent directories of the currently edited file. Example:\ndef CSharpSolutionFile( filepath ):\n  # `filepath` is the path of the file user is editing\n  return '\/path\/to\/solution\/file' # Can be relative to the `.ycm_extra_conf.py`\nIf the path returned by CSharpSolutionFile is not an actual file, YCM will\nfall back to the other way of finding the file.\nPython Semantic Completion\nYCM relies on the Jedi engine to provide completion and code navigation. By\ndefault, it will pick the version of Python running the ycmd server and\nuse its sys.path. While this is fine for simple projects, this needs to be\nconfigurable when working with virtual environments or in a project with\nthird-party packages. The next sections explain how to do that.\nWorking with virtual environments\nA common practice when working on a Python project is to install its\ndependencies in a virtual environment and develop the project inside that\nenvironment. To support this, YCM needs to know the interpreter path of the\nvirtual environment. You can specify it by creating a .ycm_extra_conf.py file\nat the root of your project with the following contents:\ndef Settings( **kwargs ):\n  return {\n    'interpreter_path': '\/path\/to\/virtual\/environment\/python'\n  }\nwhere \/path\/to\/virtual\/environment\/python is the path to the Python used\nby the virtual environment you are working in. Typically, the executable can be\nfound in the Scripts folder of the virtual environment directory on Windows\nand in the bin folder on other platforms.\nIf you don't like having to create a .ycm_extra_conf.py file at the root of\nyour project and would prefer to specify the interpreter path with a Vim option,\nread the Configuring through Vim options\nsection.\nWorking with third-party packages\nAnother common practice is to put the dependencies directly into the project and\nadd their paths to sys.path at runtime in order to import them. YCM needs to\nbe told about this path manipulation to support those dependencies. This can be\ndone by creating a .ycm_extra_conf.py file at the root of the project. This\nfile must define a Settings( **kwargs ) function returning a dictionary with\nthe list of paths to prepend to sys.path under the sys_path key. For\ninstance, the following .ycm_extra_conf.py\ndef Settings( **kwargs ):\n  return {\n    'sys_path': [\n      '\/path\/to\/some\/third_party\/package',\n      '\/path\/to\/another\/third_party\/package'\n    ]\n  }\nadds the paths \/path\/to\/some\/third_party\/package and\n\/path\/to\/another\/third_party\/package at the start of sys.path.\nIf you would rather prepend paths to sys.path with a Vim option, read the\nConfiguring through Vim options section.\nIf you need further control on how to add paths to sys.path, you should define\nthe PythonSysPath( **kwargs ) function in the .ycm_extra_conf.py file. Its\nkeyword arguments are sys_path which contains the default sys.path, and\ninterpreter_path which is the path to the Python interpreter. Here's a trivial\nexample that insert the \/path\/to\/third_party\/package path at the second\nposition of sys.path:\ndef PythonSysPath( **kwargs ):\n  sys_path = kwargs[ 'sys_path' ]\n  sys_path.insert( 1, '\/path\/to\/third_party\/package' )\n  return sys_path\nA more advanced example can be found in YCM's own\n.ycm_extra_conf.py.\nConfiguring through Vim options\nYou may find inconvenient to have to create a .ycm_extra_conf.py file at the\nroot of each one of your projects in order to set the path to the Python\ninterpreter and\/or add paths to sys.path and would prefer to be able to\nconfigure those through Vim options. Don't worry, this is possible by using the\ng:ycm_extra_conf_vim_data option and\ncreating a global extra configuration file. Let's take an example. Suppose that\nyou want to set the interpreter path with the g:ycm_python_interpreter_path\noption and prepend paths to sys.path with the g:ycm_python_sys_path option.\nSuppose also that you want to name the global extra configuration file\nglobal_extra_conf.py and that you want to put it in your HOME folder. You\nshould then add the following lines to your vimrc:\nlet g:ycm_python_interpreter_path = ''\nlet g:ycm_python_sys_path = []\nlet g:ycm_extra_conf_vim_data = [\n  \\  'g:ycm_python_interpreter_path',\n  \\  'g:ycm_python_sys_path'\n  \\]\nlet g:ycm_global_ycm_extra_conf = '~\/global_extra_conf.py'\nand create the ~\/global_extra_conf.py file with the following contents:\ndef Settings( **kwargs ):\n  client_data = kwargs[ 'client_data' ]\n  return {\n    'interpreter_path': client_data[ 'g:ycm_python_interpreter_path' ],\n    'sys_path': client_data[ 'g:ycm_python_sys_path' ]\n  }\nThat's it. You are done. Note that you don't need to restart the server when\nsetting one of the options. YCM will automatically pick the new values.\nRust Semantic Completion\nYCM uses rust-analyzer for Rust semantic completion.\nNOTE: Previously, YCM used rls for rust completion. This is no longer\nsupported, as the Rust community has decided on rust-analyzer as the future\nof Rust tooling.\nCompletions and GoTo commands within the current crate and its dependencies\nshould work out of the box with no additional configuration (provided that you\nbuilt YCM with the --rust-completer flag; see the Installation\nsection for details). The install script takes care of\ninstalling the Rust source code, so no configuration is necessary.\nrust-analyzer supports a myriad of options. These are configured using LSP\nconfiguration, but sadly don't appear to be documented at\nthe time of writing. However, there is some\nsource code\nwhich might help.\nGo Semantic Completion\nCompletions and GoTo commands should work out of the box (provided that you\nbuilt YCM with the --go-completer flag; see the Installation\nsection for details). The server only works for projects with\nthe \"canonical\" layout.\ngopls also has a handful of undocumented options for which the\nsource code is the only reference.\nJavaScript and TypeScript Semantic Completion\nNOTE: YCM originally used the Tern engine for JavaScript but due to\nTern not being maintained anymore by its main author and the TSServer\nengine offering more features, YCM is moving to TSServer. This won't affect\nyou if you were already using Tern but you are encouraged to do the switch\nby deleting the third_party\/ycmd\/third_party\/tern_runtime\/node_modules\ndirectory in YCM folder. If you are a new user but still want to use Tern,\nyou should pass the --js-completer option to the install.py script during\ninstallation. Further instructions on how to setup YCM with Tern are\navailable on the wiki.\nAll JavaScript and TypeScript features are provided by the TSServer engine,\nwhich is included in the TypeScript SDK. To enable these features, install\nNode.js and npm and call the install.py script with the\n--ts-completer flag.\nTSServer relies on the jsconfig.json file for JavaScript\nand the tsconfig.json file for TypeScript to analyze your\nproject. Ensure the file exists at the root of your project.\nTo get diagnostics in JavaScript, set the checkJs option to true in your\njsconfig.json file:\n{\n    \"compilerOptions\": {\n        \"checkJs\": true\n    }\n}\nSemantic Completion for Other Languages\nC-family, C#, Go, Java, Python, Rust, and JavaScript\/TypeScript languages are\nsupported natively by YouCompleteMe using the Clang, OmniSharp-Roslyn,\nGopls, jdt.ls, Jedi, rust-analyzer, and TSServer engines,\nrespectively. Check the installation section for instructions\nto enable these features if desired.\nPlugging an arbitrary LSP server\nSimilar to other LSP clients, YCM can use an arbitrary LSP server with the help\nof g:ycm_language_server option. An\nexample of a value of this option would be:\nlet g:ycm_language_server = \n  \\ [ \n  \\   {\n  \\     'name': 'yaml',\n  \\     'cmdline': [ '\/path\/to\/yaml\/server\/yaml-language-server', '--stdio' ],\n  \\     'filetypes': [ 'yaml' ]\n  \\   },\n  \\   {\n  \\     'name': 'rust',\n  \\     'cmdline': [ 'ra_lsp_server' ],\n  \\     'filetypes': [ 'rust' ],\n  \\     'project_root_files': [ 'Cargo.toml' ]\n  \\   },\n  \\   {\n  \\     'name': 'godot',\n  \\     'filetypes': [ 'gdscript' ],\n  \\     'port': 6008,\n  \\     'project_root_files': [ 'project.godot' ]\n  \\    }\n  \\ ]\nEach dictionary contains the following keys:\n\nname (string, mandatory): When configuring a LSP\nserver the value of the name key will be used as the\nkwargs[ 'language' ]. Can be anything you like.\nfiletypes (list of string, mandatory): List of Vim filetypes this server\nshould be used for.\nproject_root_files (list of string, optional): List of filenames to search\nfor when trying to determine the project root.\ncmdline (list of string, optional): If supplied, the server is started with\nthis command line (each list element is a command line word). Typically, the\nserver should be started with STDIO communication. If not supplied, port\nmust be supplied.\nport (number, optional): If supplied, ycmd will connect to the server at\nlocalhost:<port> using TCP (remote servers are not supported).\ncapabilities (dict, optional): If supplied, this is a dictionary that is\nmerged with the LSP client capabilities reported to the language server. This\ncan be used to enable or disable certain features, such as the support for\nconfiguraiton sections (workspace\/configuration).\n\nSee the LSP Examples project for more\nexamples of configuring the likes of PHP, Ruby, Kotlin, and D.\nLSP Configuration\nMany LSP servers allow some level of user configuration. YCM enables this with\nthe help of .ycm_extra_conf.py files. Here's an example of jdt.ls user\nexamples of configuring the likes of PHP, Ruby, Kotlin, D, and many, many more.\ndef Settings( **kwargs ):\n  if kwargs[ 'language' ] == 'java':\n    return {\n      'ls': {\n        'java.format.onType.enabled': True\n      }\n    }\nThe ls key tells YCM that the dictionary should be passed to the LSP server.\nFor each of the LSP server's configuration you should look up the respective\nserver's documentation.\nSome servers request settings from arbitrary 'sections' of configuration. There\nis no concept of configuration sections in vim, so you can specify an additional\nconfig_sections dictionary which maps section to a dictionary of config\nrequired by the server. For example:\ndef Settings( **kwargs ):\n  if kwargs[ 'language' ] == 'java':\n    return {\n      'ls': {\n        'java.format.onType.enabled': True\n      },\n      'config_sections': {\n        'some section': {\n          'some option': 'some value'\n        }\n    }\nThe sections and options\/values are complete server-specific and rarely well\ndocumented.\nUsing omnifunc for semantic completion\nYCM will use your omnifunc (see :h omnifunc in Vim) as a source for semantic\ncompletions if it does not have a native semantic completion engine for your\nfile's filetype. Vim comes with okayish omnifuncs for various languages like\nRuby, PHP, etc. It depends on the language.\nYou can get a stellar omnifunc for Ruby with Eclim. Just make sure you have\nthe latest Eclim installed and configured (this means Eclim >= 2.2.* and\nEclipse >= 4.2.*).\nAfter installing Eclim remember to create a new Eclipse project within your\napplication by typing :ProjectCreate <path-to-your-project> -n ruby inside vim\nand don't forget to have let g:EclimCompletionMethod = 'omnifunc' in your\nvimrc. This will make YCM and Eclim play nice; YCM will use Eclim's omnifuncs as\nthe data source for semantic completions and provide the auto-triggering and\nsubsequence-based matching (and other YCM features) on top of it.\nWriting New Semantic Completers\nYou have two options here: writing an omnifunc for Vim's omnicomplete system\nthat YCM will then use through its omni-completer, or a custom completer for YCM\nusing the Completer API.\nHere are the differences between the two approaches:\n\nYou have to use VimScript to write the omnifunc, but get to use Python to\nwrite for the Completer API; this by itself should make you want to use the\nAPI.\nThe Completer API is a much more powerful way to integrate with YCM and it\nprovides a wider set of features. For instance, you can make your Completer\nquery your semantic back-end in an asynchronous fashion, thus not blocking\nVim's GUI thread while your completion system is processing stuff. This is\nimpossible with VimScript. All of YCM's completers use the Completer API.\nPerformance with the Completer API is better since Python executes faster than\nVimScript.\n\nIf you want to use the omnifunc system, see the relevant Vim docs with :h complete-functions. For the Completer API, see the API docs.\nIf you want to upstream your completer into YCM's source, you should use the\nCompleter API.\nDiagnostic Display\nYCM will display diagnostic notifications for the C-family, C#, Go, Java,\nJavaScript, Rust and TypeScript languages. Since YCM continuously recompiles\nyour file as you type, you'll get notified of errors and warnings in your file\nas fast as possible.\nHere are the various pieces of the diagnostic UI:\n\nIcons show up in the Vim gutter on lines that have a diagnostic.\nRegions of text related to diagnostics are highlighted (by default, a red\nwavy underline in gvim and a red background in vim).\nMoving the cursor to a line with a diagnostic echoes the diagnostic text.\nVim's location list is automatically populated with diagnostic data (off by\ndefault, see options).\n\nThe new diagnostics (if any) will be displayed the next time you press any key\non the keyboard. So if you stop typing and just wait for the new diagnostics to\ncome in, that will not work. You need to press some key for the GUI to update.\nHaving to press a key to get the updates is unfortunate, but cannot be changed\ndue to the way Vim internals operate; there is no way that a background task can\nupdate Vim's GUI after it has finished running.  You have to press a key. This\nwill make YCM check for any pending diagnostics updates.\nYou can force a full, blocking compilation cycle with the\n:YcmForceCompileAndDiagnostics command (you may want to map that command to a\nkey; try putting nnoremap <F5> :YcmForceCompileAndDiagnostics<CR> in your\nvimrc). Calling this command will force YCM to immediately recompile your file\nand display any new diagnostics it encounters. Do note that recompilation with\nthis command may take a while and during this time the Vim GUI will be\nblocked.\nYCM will display a short diagnostic message when you move your cursor to the\nline with the error. You can get a detailed diagnostic message with the\n<leader>d key mapping (can be changed in the options) YCM provides when your\ncursor is on the line with the diagnostic.\nYou can also see the full diagnostic message for all the diagnostics in the\ncurrent file in Vim's locationlist, which can be opened with the :lopen and\n:lclose commands (make sure you have set let g:ycm_always_populate_location_list = 1 in your vimrc). A good way to toggle\nthe display of the locationlist with a single key mapping is provided by\nanother (very small) Vim plugin called ListToggle (which also makes it\npossible to change the height of the locationlist window), also written by\nyours truly.\nDiagnostic Highlighting Groups\nYou can change the styling for the highlighting groups YCM uses. For the signs\nin the Vim gutter, the relevant groups are:\n\nYcmErrorSign, which falls back to group SyntasticErrorSign and then\nerror if they exist\nYcmWarningSign, which falls back to group SyntasticWarningSign and then\ntodo if they exist\n\nYou can also style the line that has the warning\/error with these groups:\n\nYcmErrorLine, which falls back to group SyntasticErrorLine if it exists\nYcmWarningLine, which falls back to group SyntasticWarningLine if it\nexists\n\nNote that the line highlighting groups only work when the\ng:ycm_enable_diagnostic_signs\noption is set. If you want highlighted lines but no signs in the Vim gutter,\nensure that your Vim version is 7.4.2201 or later and set the signcolumn\noption to off in your vimrc:\nset signcolumn=off\nThe syntax groups used to highlight regions of text with errors\/warnings:\n\nYcmErrorSection, which falls back to group SyntasticError if it exists and\nthen SpellBad\nYcmWarningSection, which falls back to group SyntasticWarning if it exists\nand then SpellCap\n\nHere's how you'd change the style for a group:\nhighlight YcmErrorLine guibg=#3f0000\nCommands\nThe :YcmRestartServer command\nIf the ycmd completion server suddenly stops for some reason, you can\nrestart it with this command.\nThe :YcmForceCompileAndDiagnostics command\nCalling this command will force YCM to immediately recompile your file\nand display any new diagnostics it encounters. Do note that recompilation with\nthis command may take a while and during this time the Vim GUI will be\nblocked.\nYou may want to map this command to a key; try putting nnoremap <F5> :YcmForceCompileAndDiagnostics<CR> in your vimrc.\nThe :YcmDiags command\nCalling this command will fill Vim's locationlist with errors or warnings if\nany were detected in your file and then open it. If a given error or warning can\nbe fixed by a call to :YcmCompleter FixIt, then  (FixIt available) is\nappended to the error or warning text. See the FixIt completer subcommand for\nmore information.\nNOTE: The absence of  (FixIt available) does not strictly imply a fix-it\nis not available as not all completers are able to provide this indication. For\nexample, the c-sharp completer provides many fix-its but does not add this\nadditional indication.\nThe g:ycm_open_loclist_on_ycm_diags option can be used to prevent the location\nlist from opening, but still have it filled with new diagnostic data. See the\nOptions section for details.\nThe :YcmShowDetailedDiagnostic command\nThis command shows the full diagnostic text when the user's cursor is on the\nline with the diagnostic.\nThe :YcmDebugInfo command\nThis will print out various debug information for the current file. Useful to\nsee what compile commands will be used for the file if you're using the semantic\ncompletion engine.\nThe :YcmToggleLogs command\nThis command presents the list of logfiles created by YCM, the ycmd\nserver, and the semantic engine server for the current filetype, if any.\nOne of these logfiles can be opened in the editor (or closed if already open) by\nentering the corresponding number or by clicking on it with the mouse.\nAdditionally, this command can take the logfile names as arguments. Use the\n<TAB> key (or any other key defined by the wildchar option) to complete the\narguments or to cycle through them (depending on the value of the wildmode\noption). Each logfile given as an argument is directly opened (or closed if\nalready open) in the editor. Only for debugging purposes.\nThe :YcmCompleter command\nThis command gives access to a number of additional IDE-like\nfeatures in YCM, for things like semantic GoTo, type\ninformation, FixIt and refactoring.\nThis command accepts a range that can either be specified through a selection in\none of Vim's visual modes (see :h visual-use) or on the command line. For\ninstance, :2,5YcmCompleter will apply the command from line 2 to line 5. This\nis useful for the Format subcommand.\nCall YcmCompleter without further arguments for a list of the commands you can\ncall for the current completer.\nSee the file type feature summary for an overview of\nthe features available for each file type. See the YcmCompleter subcommands\nsection for more information on the available subcommands and their usage.\nYcmCompleter Subcommands\nNOTE: See the docs for the YcmCompleter command before tackling this\nsection.\nThe invoked subcommand is automatically routed to the currently active semantic\ncompleter, so :YcmCompleter GoToDefinition will invoke the GoToDefinition\nsubcommand on the Python semantic completer if the currently active file is a\nPython one and on the Clang completer if the currently active file is a C-family\nlanguage one.\nYou may also want to map the subcommands to something less verbose; for\ninstance, nnoremap <leader>jd :YcmCompleter GoTo<CR>\nmaps the <leader>jd sequence to the longer subcommand invocation.\nGoTo Commands\nThese commands are useful for jumping around and exploring code. When moving\nthe cursor, the subcommands add entries to Vim's jumplist so you can use\nCTRL-O to jump back to where you were before invoking the command (and\nCTRL-I to jump forward; see :h jumplist for details). If there is more\nthan one destination, the quickfix list (see :h quickfix) is populated with\nthe available locations and opened to full width at the bottom of the screen.\nYou can change this behavior by using the YcmQuickFixOpened\nautocommand.\nThe GoToInclude subcommand\nLooks up the current line for a header and jumps to it.\nSupported in filetypes: c, cpp, objc, objcpp, cuda\nThe GoToDeclaration subcommand\nLooks up the symbol under the cursor and jumps to its declaration.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, go, java, javascript, python, rust, typescript\nThe GoToDefinition subcommand\nLooks up the symbol under the cursor and jumps to its definition.\nNOTE: For C-family languages this only works in certain situations,\nnamely when the definition of the symbol is in the current translation unit. A\ntranslation unit consists of the file you are editing and all the files you are\nincluding with #include directives (directly or indirectly) in that file.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, go, java, javascript, python, rust, typescript\nThe GoTo subcommand\nThis command tries to perform the \"most sensible\" GoTo operation it can.\nCurrently, this means that it tries to look up the symbol under the cursor and\njumps to its definition if possible; if the definition is not accessible from\nthe current translation unit, jumps to the symbol's declaration. For\nC-family languages, it first tries to look up the current line for a header and\njump to it. For C#, implementations are also considered and preferred.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, go, java, javascript, python, rust, typescript\nThe GoToImprecise subcommand\nWARNING: This command trades correctness for speed!\nSame as the GoTo command except that it doesn't recompile the file with\nlibclang before looking up nodes in the AST. This can be very useful when you're\nediting files that take long to compile but you know that you haven't made any\nchanges since the last parse that would lead to incorrect jumps. When you're\njust browsing around your codebase, this command can spare you quite a bit of\nlatency.\nSupported in filetypes: c, cpp, objc, objcpp, cuda\nThe GoToSymbol <symbol query> subcommand\nFinds the definition of all symbols matching a specified string. Note that this\ndoes not use any sort of smart\/fuzzy matching.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, java, javascript, python, typescript\nThe GoToReferences subcommand\nThis command attempts to find all of the references within the project to the\nidentifier under the cursor and populates the quickfix list with those\nlocations.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, java, javascript, python, typescript, rust\nThe GoToImplementation subcommand\nLooks up the symbol under the cursor and jumps to its implementation (i.e.\nnon-interface). If there are multiple implementations, instead provides a list\nof implementations to choose from.\nSupported in filetypes: cs, go, java, rust, typescript, javascript\nThe GoToImplementationElseDeclaration subcommand\nLooks up the symbol under the cursor and jumps to its implementation if one,\nelse jump to its declaration. If there are multiple implementations, instead\nprovides a list of implementations to choose from.\nSupported in filetypes: cs\nThe GoToType subcommand\nLooks up the symbol under the cursor and jumps to the definition of its type\ne.g. if the symbol is an object, go to the definition of its class.\nSupported in filetypes: go, java, javascript, typescript\nSemantic Information Commands\nThese commands are useful for finding static information about the code, such\nas the types of variables, viewing declarations and documentation strings.\nThe GetType subcommand\nEchos the type of the variable or method under the cursor, and where it differs,\nthe derived type.\nFor example:\n    std::string s;\nInvoking this command on s returns std::string => std::basic_string<char>\nNOTE: Causes re-parsing of the current translation unit.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, java, javascript, go, python, typescript, rust\nThe GetTypeImprecise subcommand\nWARNING: This command trades correctness for speed!\nSame as the GetType command except that it doesn't recompile the file with\nlibclang before looking up nodes in the AST. This can be very useful when you're\nediting files that take long to compile but you know that you haven't made any\nchanges since the last parse that would lead to incorrect type. When you're\njust browsing around your codebase, this command can spare you quite a bit of\nlatency.\nSupported in filetypes: c, cpp, objc, objcpp, cuda\nThe GetParent subcommand\nEchos the semantic parent of the point under the cursor.\nThe semantic parent is the item that semantically contains the given position.\nFor example:\nclass C {\n    void f();\n};\n\nvoid C::f() {\n\n}\nIn the out-of-line definition of C::f, the semantic parent is the class C,\nof which this function is a member.\nIn the example above, both declarations of C::f have C as their semantic\ncontext, while the lexical context of the first C::f is C and the lexical\ncontext of the second C::f is the translation unit.\nFor global declarations, the semantic parent is the translation unit.\nNOTE: Causes re-parsing of the current translation unit.\nSupported in filetypes: c, cpp, objc, objcpp, cuda\nThe GetDoc subcommand\nDisplays the preview window populated with quick info about the identifier\nunder the cursor. Depending on the file type, this includes things like:\n\nThe type or declaration of identifier,\nDoxygen\/javadoc comments,\nPython docstrings,\netc.\n\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, go, java, javascript, python, typescript, rust\nThe GetDocImprecise subcommand\nWARNING: This command trades correctness for speed!\nSame as the GetDoc command except that it doesn't recompile the file with\nlibclang before looking up nodes in the AST. This can be very useful when you're\nediting files that take long to compile but you know that you haven't made any\nchanges since the last parse that would lead to incorrect docs. When you're\njust browsing around your codebase, this command can spare you quite a bit of\nlatency.\nSupported in filetypes: c, cpp, objc, objcpp, cuda\nRefactoring Commands\nThese commands make changes to your source code in order to perform refactoring\nor code correction. YouCompleteMe does not perform any action which cannot be\nundone, and never saves or writes files to the disk.\nThe FixIt subcommand\nWhere available, attempts to make changes to the buffer to correct diagnostics\non the current line. Where multiple suggestions are available (such as when\nthere are multiple ways to resolve a given warning, or where multiple\ndiagnostics are reported for the current line), the options are presented\nand one can be selected.\nCompleters which provide diagnostics may also provide trivial modifications to\nthe source in order to correct the diagnostic. Examples include syntax errors\nsuch as missing trailing semi-colons, spurious characters, or other errors which\nthe semantic engine can deterministically suggest corrections.\nIf no fix-it is available for the current line, or there is no diagnostic on the\ncurrent line, this command has no effect on the current buffer. If any\nmodifications are made, the number of changes made to the buffer is echo'd and\nthe user may use the editor's undo command to revert.\nWhen a diagnostic is available, and g:ycm_echo_current_diagnostic is set to 1,\nthen the text  (FixIt) is appended to the echo'd diagnostic when the\ncompleter is able to add this indication. The text  (FixIt available) is\nalso appended to the diagnostic text in the output of the :YcmDiags command\nfor any diagnostics with available fix-its (where the completer can provide this\nindication).\nNOTE: Causes re-parsing of the current translation unit.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, go, java, javascript, rust, typescript\nThe RefactorRename <new name> subcommand\nIn supported file types, this command attempts to perform a semantic rename of\nthe identifier under the cursor. This includes renaming declarations,\ndefinitions and usages of the identifier, or any other language-appropriate\naction. The specific behavior is defined by the semantic engine in use.\nSimilar to FixIt, this command applies automatic modifications to your source\nfiles. Rename operations may involve changes to multiple files, which may or may\nnot be open in Vim buffers at the time. YouCompleteMe handles all of this for\nyou. The behavior is described in the following section.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, java, javascript, python, typescript, rust, cs\nMulti-file Refactor\nWhen a Refactor or FixIt command touches multiple files, YouCompleteMe attempts\nto apply those modifications to any existing open, visible buffer in the current\ntab. If no such buffer can be found, YouCompleteMe opens the file in a new\nsmall horizontal split at the top of the current window, applies the change,\nand then hides the window. NOTE: The buffer remains open, and must be\nmanually saved. A confirmation dialog is opened prior to doing this to remind\nyou that this is about to happen.\nOnce the modifications have been made, the quickfix list (see :help quickfix)\nis populated with the locations of all modifications. This can be used to review\nall automatic changes made by using :copen. Typically, use the CTRL-W <enter> combination to open the selected file in a new split. It is possible to\ncustomize how the quickfix window is opened by using the YcmQuickFixOpened\nautocommand.\nThe buffers are not saved automatically. That is, you must save the modified\nbuffers manually after reviewing the changes from the quickfix list. Changes\ncan be undone using Vim's powerful undo features (see :help undo). Note\nthat Vim's undo is per-buffer, so to undo all changes, the undo commands must\nbe applied in each modified buffer separately.\nNOTE: While applying modifications, Vim may find files which are already\nopen and have a swap file. The command is aborted if you select Abort or Quit in\nany such prompts. This leaves the Refactor operation partially complete and must\nbe manually corrected using Vim's undo features. The quickfix list is not\npopulated in this case. Inspect :buffers or equivalent (see :help buffers)\nto see the buffers that were opened by the command.\nThe Format subcommand\nThis command formats the whole buffer or some part of it according to the value\nof the Vim options shiftwidth and expandtab (see :h 'sw' and :h et\nrespectively). To format a specific part of your document, you can either select\nit in one of Vim's visual modes (see :h visual-use) and run the command or\ndirectly enter the range on the command line, e.g. :2,5YcmCompleter Format to\nformat it from line 2 to line 5.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, java, javascript, go, typescript, rust, cs\nThe OrganizeImports subcommand\nThis command removes unused imports and sorts imports in the current file. It\ncan also group imports from the same module in TypeScript and resolves imports\nin Java.\nSupported in filetypes: java, javascript, typescript\nMiscellaneous Commands\nThese commands are for general administration, rather than IDE-like features.\nThey cover things like the semantic engine server instance and compilation\nflags.\nThe ExecuteCommand <args> subcommand\nSome LSP completers (currently only Java completers) support executing\nserver specific commands. Consult the jdt.ls documentation to find out\nwhat commands are supported and which arguments are expected.\nThe support for ExecuteCommand was implemented to support plugins like\nvimspector to debug java, but isn't limited to that specific use case.\nThe RestartServer subcommand\nRestarts the semantic-engine-as-localhost-server for those semantic engines that\nwork as separate servers that YCM talks to.\nSupported in filetypes: c, cpp, objc, objcpp, cuda, cs, go, java, javascript, rust, typescript\nThe ReloadSolution subcommand\nInstruct the Omnisharp-Roslyn server to clear its cache and reload all files\nfrom disk.  This is useful when files are added, removed, or renamed in the\nsolution, files are changed outside of Vim, or whenever Omnisharp-Roslyn cache\nis out-of-sync.\nSupported in filetypes: cs\nFunctions\nThe youcompleteme#GetErrorCount function\nGet the number of YCM Diagnostic errors. If no errors are present, this function\nreturns 0.\nFor example:\n  call youcompleteme#GetErrorCount()\nBoth this function and youcompleteme#GetWarningCount can be useful when\nintegrating YCM with other Vim plugins. For example, a lightline user could\nadd a diagnostics section to their statusline which would display the number of\nerrors and warnings.\nThe youcompleteme#GetWarningCount function\nGet the number of YCM Diagnostic warnings. If no warnings are present, this\nfunction returns 0.\nFor example:\n  call youcompleteme#GetWarningCount()\nThe youcompleteme#GetCommandResponse( ... ) function\nRun a completer subcommand and return the result as\na string. This can be useful for example to display the GetGoc output in a\npopup window, e.g.:\nlet s:ycm_hover_popup = -1\nfunction s:Hover()\n  let response = youcompleteme#GetCommandResponse( 'GetDoc' )\n  if response == ''\n    return\n  endif\n\n  call popup_hide( s:ycm_hover_popup )\n  let s:ycm_hover_popup = popup_atcursor( balloon_split( response ), {} )\nendfunction\n\n\" CursorHold triggers in normal mode after a delay\nautocmd CursorHold * call s:Hover()\n\" Or, if you prefer, a mapping:\nnnoremap <silent> <leader>D :call <SID>Hover()<CR>\nNOTE: This is only an example, for real hover support, see\ng:ycm_auto_hover.\nIf the completer subcommand result is not a string (for example, it's a FixIt or\na Location), or if the completer subcommand raises an error, an empty string is\nreturned, so that calling code does not have to check for complex error\nconditions.\nThe arguments to the function are the same as the arguments to the\n:YcmCompleter ex command, e.g. the name of the subcommand, followed by any\nadditional subcommand arguments. As with the YcmCompleter command, if the\nfirst argument is ft=<filetype> the request is targeted at the specified\nfiletype completer. This is an advanced usage and not necessary in most cases.\nNOTE: The request is run synchronously and blocks Vim until the response is\nreceived, so we do not recommend running this as part of an autocommand that\ntriggers frequently.\nThe youcompleteme#GetCommandResponseAsync( callback, ... ) function\nThis works exactly like youcompleteme#GetCommandResponse, except that instead\nof returning the result, you supply a callback argument. This argument must be\na FuncRef to a function taking a single argument response. This callback\nwill be called with the command response at some point later, or immediately.\nAs with youcompleteme#GetCommandResponse(), this function will call the\ncallback with '' (an empty string) if the request is not sent, or if there was\nsome sort of error.\nHere's an example that's similar to the one above:\nlet s:ycm_hover_popup = -1\nfunction! s:ShowDataPopup( response ) abort\n  if response == ''\n    return\n  endif\n\n  call popup_hide( s:ycm_hover_popup )\n  let s:ycm_hover_popup = popup_atcursor( balloon_split( response ), {} )\nendfunction\n\nfunction! s:GetData() abort\n  call youcompleteme#GetCommandResponseAsync(\n    \\ function( 's:ShowDataPopup' ),\n    \\ 'GetDoc' )\nendfunction\n\nautocommand CursorHold * call s:GetData()\nAgain, see g:ycm_auto_hover for proper hover\nsupport.\nNOTE: The callback may be called immediately, in the stack frame that called\nthis function.\nNOTE: Only one command request can be outstanding at once. Attempting to\nrequest a second responses while the first is outstanding will result in the\nsecond callback being immediately called with ''.\nAutocommands\nThe YcmLocationOpened autocommand\nThis User autocommand is fired when YCM opens the location list window in\nresponse to the YcmDiags command. By default, the location list window is\nopened to the bottom of the current window and its height is set to fit all\nentries. This behavior can be overridden by using the YcmLocationOpened\nautocommand which is triggered while the cursor is in the location list window.\nFor instance:\nfunction! s:CustomizeYcmLocationWindow()\n  \" Move the window to the top of the screen.\n  wincmd K\n  \" Set the window height to 5.\n  5wincmd _\n  \" Switch back to working window.\n  wincmd p\nendfunction\n\nautocmd User YcmLocationOpened call s:CustomizeYcmLocationWindow()\nThe YcmQuickFixOpened autocommand\nThis User autocommand is fired when YCM opens the quickfix window in response\nto the GoTo* and RefactorRename subcommands. By default, the quickfix window\nis opened to full width at the bottom of the screen and its height is set to fit\nall entries. This behavior can be overridden by using the YcmQuickFixOpened\nautocommand which is triggered while the cursor is in the quickfix window. For\ninstance:\nfunction! s:CustomizeYcmQuickFixWindow()\n  \" Move the window to the top of the screen.\n  wincmd K\n  \" Set the window height to 5.\n  5wincmd _\nendfunction\n\nautocmd User YcmQuickFixOpened call s:CustomizeYcmQuickFixWindow()\nOptions\nAll options have reasonable defaults so if the plug-in works after installation\nyou don't need to change any options. These options can be configured in your\nvimrc script by including a line like this:\nlet g:ycm_min_num_of_chars_for_completion = 1\nNote that after changing an option in your vimrc script you have to\nrestart ycmd with the :YcmRestartServer command for the changes to take\neffect.\nThe g:ycm_min_num_of_chars_for_completion option\nThis option controls the number of characters the user needs to type before\nidentifier-based completion suggestions are triggered. For example, if the\noption is set to 2, then when the user types a second alphanumeric character\nafter a whitespace character, completion suggestions will be triggered. This\noption is NOT used for semantic completion.\nSetting this option to a high number like 99 effectively turns off the\nidentifier completion engine and just leaves the semantic engine.\nDefault: 2\nlet g:ycm_min_num_of_chars_for_completion = 2\nThe g:ycm_min_num_identifier_candidate_chars option\nThis option controls the minimum number of characters that a completion\ncandidate coming from the identifier completer must have to be shown in the\npopup menu.\nA special value of 0 means there is no limit.\nNOTE: This option only applies to the identifier completer; it has no effect\non the various semantic completers.\nDefault: 0\nlet g:ycm_min_num_identifier_candidate_chars = 0\nThe g:ycm_max_num_candidates option\nThis option controls the maximum number of semantic completion suggestions shown\nin the completion menu. This only applies to suggestions from semantic\ncompletion engines; see the g:ycm_max_identifier_candidates\noption to limit the number of\nsuggestions from the identifier-based engine.\nA special value of 0 means there is no limit.\nNOTE: Setting this option to 0 or to a value greater than 100 is not\nrecommended as it will slow down completion when there are a very large number\nof suggestions.\nDefault: 50\nlet g:ycm_max_num_candidates = 50\nThe g:ycm_max_num_candidates_to_detail option\nSome completion engines require completion candidates to be 'resolved' in order\nto get detailed info such as inline documentation, method signatures etc.  This\ninformation is displayed by YCM in the preview window, or if completeopt\ncontains popup, in the info popup next to the completion menu.\nBy deafult, if the info popup is in use, and there are more than 10 candidates,\nYCM will defer resolving candidates until they are selected in the completion\nmenu.  Otherwise, YCM must resolve the details upfront, which can be costly.\nIf neither popup nor preview are in completeopt, YCM disables resolving\naltogether as the information would not be displayed.\nThis setting can be used to override these defaults and  controls the number of\ncompletion candidates that should be resolved upfront. Typically users do not\nneed to change this, as YCM will work out an appropriate value based on your\ncompleteopt and g:ycm_add_preview_to_completeopt settings. Howver, you may\noverride this calculation by setting this value to a number:\n\n-1 - Resolve all candidates up front\n0 - Never resolve any candidates up front.\n> 0 - Resolve up to this many candidates up front. If the number of\ncandidates is greater than this value, no candidates are resolved.\n\nIn the later two cases, if completeopt contains popup, then candidates are\nresolved on demand asynchronously.\nDefault:\n\n0 if neither popup nor preview are in completeopt.\n10 if popup is in completeopt.\n-1 if preview is in completeopt.\n\nExample:\nlet g:ycm_max_num_candidates_to_detail = 0\nThe g:ycm_max_num_identifier_candidates option\nThis option controls the maximum number of completion suggestions from the\nidentifier-based engine shown in the completion menu.\nA special value of 0 means there is no limit.\nNOTE: Setting this option to 0 or to a value greater than 100 is not\nrecommended as it will slow down completion when there are a very large number\nof suggestions.\nDefault: 10\nlet g:ycm_max_num_identifier_candidates = 10\nThe g:ycm_auto_trigger option\nWhen set to 0, this option turns off YCM's identifier completer (the\nas-you-type popup) and the semantic triggers (the popup you'd get after typing\n. or -> in say C++). You can still force semantic completion with the\n<C-Space> shortcut.\nIf you want to just turn off the identifier completer but keep the semantic\ntriggers, you should set g:ycm_min_num_of_chars_for_completion to a high\nnumber like 99.\nDefault: 1\nlet g:ycm_auto_trigger = 1\nThe g:ycm_filetype_whitelist option\nThis option controls for which Vim filetypes (see :h filetype) should YCM be\nturned on. The option value should be a Vim dictionary with keys being filetype\nstrings (like python, cpp, etc.) and values being unimportant (the\ndictionary is used like a hash set, meaning that only the keys matter).\nThe * key is special and matches all filetypes. By default, the whitelist\ncontains only this * key.\nYCM also has a g:ycm_filetype_blacklist option that lists filetypes for which\nYCM shouldn't be turned on. YCM will work only in filetypes that both the\nwhitelist and the blacklist allow (the blacklist \"allows\" a filetype by not\nhaving it as a key).\nFor example, let's assume you want YCM to work in files with the cpp filetype.\nThe filetype should then be present in the whitelist either directly (cpp key\nin the whitelist) or indirectly through the special * key. It should not be\npresent in the blacklist.\nFiletypes that are blocked by the either of the lists will be completely ignored\nby YCM, meaning that neither the identifier-based completion engine nor the\nsemantic engine will operate in them.\nYou can get the filetype of the current file in Vim with :set ft?.\nDefault: {'*': 1}\nlet g:ycm_filetype_whitelist = {'*': 1}\n** Completion in buffers with no filetype **\nThere is one exception to the above rule. YCM supports completion in buffers\nwith no filetype set, but this must be explicitly whitelisted. To identify\nbuffers with no filetype, we use the ycm_nofiletype pseudo-filetype. To enable\ncompletion in buffers with no filetype, set:\nlet g:ycm_filetype_whitelist = {\n  \\ '*': 1,\n  \\ 'ycm_nofiletype': 1\n  \\ }\nThe g:ycm_filetype_blacklist option\nThis option controls for which Vim filetypes (see :h filetype) should YCM be\nturned off. The option value should be a Vim dictionary with keys being filetype\nstrings (like python, cpp, etc.) and values being unimportant (the\ndictionary is used like a hash set, meaning that only the keys matter).\nSee the g:ycm_filetype_whitelist option for more details on how this works.\nDefault: [see next line]\nlet g:ycm_filetype_blacklist = {\n      \\ 'tagbar': 1,\n      \\ 'notes': 1,\n      \\ 'markdown': 1,\n      \\ 'netrw': 1,\n      \\ 'unite': 1,\n      \\ 'text': 1,\n      \\ 'vimwiki': 1,\n      \\ 'pandoc': 1,\n      \\ 'infolog': 1,\n      \\ 'leaderf': 1,\n      \\ 'mail': 1\n      \\}\nIn addition, ycm_nofiletype (representing buffers with no filetype set)\nis blacklisted if ycm_nofiletype is not explicitly whitelisted (using\ng:ycm_filetype_whitelist).\nThe g:ycm_filetype_specific_completion_to_disable option\nThis option controls for which Vim filetypes (see :h filetype) should the YCM\nsemantic completion engine be turned off. The option value should be a Vim\ndictionary with keys being filetype strings (like python, cpp, etc.) and\nvalues being unimportant (the dictionary is used like a hash set, meaning that\nonly the keys matter). The listed filetypes will be ignored by the YCM semantic\ncompletion engine, but the identifier-based completion engine will still trigger\nin files of those filetypes.\nNote that even if semantic completion is not turned off for a specific filetype,\nyou will not get semantic completion if the semantic engine does not support\nthat filetype.\nYou can get the filetype of the current file in Vim with :set ft?.\nDefault: [see next line]\nlet g:ycm_filetype_specific_completion_to_disable = {\n      \\ 'gitcommit': 1\n      \\}\nThe g:ycm_filepath_blacklist option\nThis option controls for which Vim filetypes (see :h filetype) should filepath\ncompletion be disabled. The option value should be a Vim dictionary with keys\nbeing filetype strings (like python, cpp, etc.) and values being unimportant\n(the dictionary is used like a hash set, meaning that only the keys matter).\nThe * key is special and matches all filetypes. Use this key if you want to\ncompletely disable filepath completion:\nlet g:ycm_filepath_blacklist = {'*': 1}\nYou can get the filetype of the current file in Vim with :set ft?.\nDefault: [see next line]\nlet g:ycm_filepath_blacklist = {\n      \\ 'html': 1,\n      \\ 'jsx': 1,\n      \\ 'xml': 1,\n      \\}\nThe g:ycm_show_diagnostics_ui option\nWhen set, this option turns on YCM's diagnostic display features. See the\nDiagnostic display section in the User Manual for more details.\nSpecific parts of the diagnostics UI (like the gutter signs, text highlighting,\ndiagnostic echo and auto location list population) can be individually turned on\nor off. See the other options below for details.\nNote that YCM's diagnostics UI is only supported for C-family languages.\nWhen set, this option also makes YCM remove all Syntastic checkers set for the\nc, cpp, objc, objcpp, and cuda filetypes since this would conflict\nwith YCM's own diagnostics UI.\nIf you're using YCM's identifier completer in C-family languages but cannot use\nthe clang-based semantic completer for those languages and want to use the GCC\nSyntastic checkers, unset this option.\nDefault: 1\nlet g:ycm_show_diagnostics_ui = 1\nThe g:ycm_error_symbol option\nYCM will use the value of this option as the symbol for errors in the Vim\ngutter.\nThis option is part of the Syntastic compatibility layer; if the option is not\nset, YCM will fall back to the value of the g:syntastic_error_symbol option\nbefore using this option's default.\nDefault: >>\nlet g:ycm_error_symbol = '>>'\nThe g:ycm_warning_symbol option\nYCM will use the value of this option as the symbol for warnings in the Vim\ngutter.\nThis option is part of the Syntastic compatibility layer; if the option is not\nset, YCM will fall back to the value of the g:syntastic_warning_symbol option\nbefore using this option's default.\nDefault: >>\nlet g:ycm_warning_symbol = '>>'\nThe g:ycm_enable_diagnostic_signs option\nWhen this option is set, YCM will put icons in Vim's gutter on lines that have a\ndiagnostic set. Turning this off will also turn off the YcmErrorLine and\nYcmWarningLine highlighting.\nThis option is part of the Syntastic compatibility layer; if the option is not\nset, YCM will fall back to the value of the g:syntastic_enable_signs option\nbefore using this option's default.\nDefault: 1\nlet g:ycm_enable_diagnostic_signs = 1\nThe g:ycm_enable_diagnostic_highlighting option\nWhen this option is set, YCM will highlight regions of text that are related to\nthe diagnostic that is present on a line, if any.\nThis option is part of the Syntastic compatibility layer; if the option is not\nset, YCM will fall back to the value of the g:syntastic_enable_highlighting\noption before using this option's default.\nDefault: 1\nlet g:ycm_enable_diagnostic_highlighting = 1\nThe g:ycm_echo_current_diagnostic option\nWhen this option is set, YCM will echo the text of the diagnostic present on the\ncurrent line when you move your cursor to that line. If a FixIt is available\nfor the current diagnostic, then  (FixIt) is appended.\nThis option is part of the Syntastic compatibility layer; if the option is not\nset, YCM will fall back to the value of the g:syntastic_echo_current_error\noption before using this option's default.\nDefault: 1\nlet g:ycm_echo_current_diagnostic = 1\nThe g:ycm_auto_hover option\nThis option controls whether or not YCM shows documentation in a popup at the\ncursor location after a short delay. Only supported in Vim.\nWhen this option is set to 'CursorHold', the popup is displayed on the\nCursorHold autocommand. See :help CursorHold for the details, but this means\nthat it is displayed after updatetime milliseconds.  When set to an empty\nstring, the popup is not automatically displayed.\nIn addition to this setting, there is the <plug>(YCMHover) mapping, which can\nbe used to manually trigger or hide the popup (it works like a toggle).\nFor example:\nnmap <leader>D <plug>(YCMHover)\nAfter dismissing the popup with this mapping, it will not be automatically\ntriggered again until the cursor is moved (i.e. CursorMoved autocommand).\nThe displayed documentation depends on what the completer for the current\nlanguage supports. It's selected heuristically in this order of preference:\n\nGetHover with markdown syntax\nGetDoc with no syntax\nGetType with the syntax of the current file.\n\nYou can customise this by manually setting up b:ycm_hover to your liking. This\nbuffer-local variable can be set to a dictionary with the following keys:\n\ncommand: The YCM completer subcommand which should be run on hover\nsyntax: The syntax to use (as in set syntax=) in the popup window for\nhighlighting.\n\nFor example, to use C\/C++ syntax highlighting in the popup for C-family\nlanguages, add something like this to your vimrc:\naugroup MyYCMCustom\n  autocmd!\n  autocmd FileType c,cpp let b:ycm_hover = {\n    \\ 'command': 'GetDoc',\n    \\ 'syntax': &filetype\n    \\ }\naugroup END\nDefault: 'CursorHold'\nThe g:ycm_filter_diagnostics option\nThis option controls which diagnostics will be rendered by YCM. This option\nholds a dictionary of key-values, where the keys are Vim's filetype strings\ndelimited by commas and values are dictionaries describing the filter.\nA filter is a dictionary of key-values, where the keys are the type of filter,\nand the value is a list of arguments to that filter. In the case of just a\nsingle item in the list, you may omit the brackets and just provide the argument\ndirectly. If any filter matches a diagnostic, it will be dropped and YCM will\nnot render it.\nThe following filter types are supported:\n\n\"regex\": Accepts a string regular expression. This type matches\nwhen the regex (treated as case-insensitive) is found anywhere in the diagnostic\ntext (re.search, not re.match)\n\"level\": Accepts a string level, either \"warning\" or \"error.\" This type\nmatches when the diagnostic has the same level, that is,\nspecifying level: \"error\" will remove all errors from the diagnostics.\n\nNOTE: The regex syntax is NOT Vim's, it's Python's.\nDefault: {}\nThe following example will do, for java filetype only:\n\nRemove all error level diagnostics, and,\nAlso remove anything that contains ta<something>co\n\nlet g:ycm_filter_diagnostics = {\n  \\ \"java\": {\n  \\      \"regex\": [ \"ta.+co\", ... ],\n  \\      \"level\": \"error\",\n  \\      ...\n  \\    }\n  \\ }\nThe g:ycm_always_populate_location_list option\nWhen this option is set, YCM will populate the location list automatically every\ntime it gets new diagnostic data. This option is off by default so as not to\ninterfere with other data you might have placed in the location list.\nSee :help location-list in Vim to learn more about the location list.\nThis option is part of the Syntastic compatibility layer; if the option is not\nset, YCM will fall back to the value of the\ng:syntastic_always_populate_loc_list option before using this option's\ndefault.\nDefault: 0\nlet g:ycm_always_populate_location_list = 0\nThe g:ycm_open_loclist_on_ycm_diags option\nWhen this option is set, :YcmDiags will automatically open the location list\nafter forcing a compilation and filling the list with diagnostic data.\nSee :help location-list in Vim to learn more about the location list.\nDefault: 1\nlet g:ycm_open_loclist_on_ycm_diags = 1\nThe g:ycm_complete_in_comments option\nWhen this option is set to 1, YCM will show the completion menu even when\ntyping inside comments.\nDefault: 0\nlet g:ycm_complete_in_comments = 0\nThe g:ycm_complete_in_strings option\nWhen this option is set to 1, YCM will show the completion menu even when\ntyping inside strings.\nNote that this is turned on by default so that you can use the filename\ncompletion inside strings. This is very useful for instance in C-family files\nwhere typing #include \" will trigger the start of filename completion. If you\nturn off this option, you will turn off filename completion in such situations\nas well.\nDefault: 1\nlet g:ycm_complete_in_strings = 1\nThe g:ycm_collect_identifiers_from_comments_and_strings option\nWhen this option is set to 1, YCM's identifier completer will also collect\nidentifiers from strings and comments. Otherwise, the text in comments and\nstrings will be ignored.\nDefault: 0\nlet g:ycm_collect_identifiers_from_comments_and_strings = 0\nThe g:ycm_collect_identifiers_from_tags_files option\nWhen this option is set to 1, YCM's identifier completer will also collect\nidentifiers from tags files. The list of tags files to examine is retrieved from\nthe tagfiles() Vim function which examines the tags Vim option. See :h 'tags' for details.\nYCM will re-index your tags files if it detects that they have been modified.\nThe only supported tag format is the Exuberant Ctags format. The\nformat from \"plain\" ctags is NOT supported. Ctags needs to be called with the\n--fields=+l option (that's a lowercase L, not a one) because YCM needs the\nlanguage:<lang> field in the tags output.\nSee the FAQ for pointers if YCM does not appear to read your tag files.\nThis option is off by default because it makes Vim slower if your tags are on a\nnetwork directory.\nDefault: 0\nlet g:ycm_collect_identifiers_from_tags_files = 0\nThe g:ycm_seed_identifiers_with_syntax option\nWhen this option is set to 1, YCM's identifier completer will seed its\nidentifier database with the keywords of the programming language you're\nwriting.\nSince the keywords are extracted from the Vim syntax file for the filetype, all\nkeywords may not be collected, depending on how the syntax file was written.\nUsually at least 95% of the keywords are successfully extracted.\nDefault: 0\nlet g:ycm_seed_identifiers_with_syntax = 0\nThe g:ycm_extra_conf_vim_data option\nIf you're using semantic completion for C-family files, this option might come\nhandy; it's a way of sending data from Vim to your Settings function in\nyour .ycm_extra_conf.py file.\nThis option is supposed to be a list of VimScript expression strings that are\nevaluated for every request to the ycmd server and then passed to your\nSettings function as a client_data keyword argument.\nFor instance, if you set this option to ['v:version'], your Settings\nfunction will be called like this:\n# The '801' value is of course contingent on Vim 8.1; in 8.0 it would be '800'\nSettings( ..., client_data = { 'v:version': 801 } )\nSo the client_data parameter is a dictionary mapping Vim expression strings to\ntheir values at the time of the request.\nThe correct way to define parameters for your Settings function:\ndef Settings( **kwargs ):\nYou can then get to client_data with kwargs['client_data'].\nDefault: []\nlet g:ycm_extra_conf_vim_data = []\nThe g:ycm_server_python_interpreter option\nYCM will by default search for an appropriate Python interpreter on your system.\nYou can use this option to override that behavior and force the use of a\nspecific interpreter of your choosing.\nNOTE: This interpreter is only used for the ycmd server. The YCM\nclient running inside Vim always uses the Python interpreter that's embedded\ninside Vim.\nDefault: ''\nlet g:ycm_server_python_interpreter = ''\nThe g:ycm_keep_logfiles option\nWhen this option is set to 1, YCM and the ycmd completion server will\nkeep the logfiles around after shutting down (they are deleted on shutdown by\ndefault).\nTo see where the logfiles are, call :YcmDebugInfo.\nDefault: 0\nlet g:ycm_keep_logfiles = 0\nThe g:ycm_log_level option\nThe logging level that YCM and the ycmd completion server use. Valid\nvalues are the following, from most verbose to least verbose:\n\ndebug\ninfo\nwarning\nerror\ncritical\n\nNote that debug is very verbose.\nDefault: info\nlet g:ycm_log_level = 'info'\nThe g:ycm_auto_start_csharp_server option\nWhen set to 1, the OmniSharp-Roslyn server will be automatically started\n(once per Vim session) when you open a C# file.\nDefault: 1\nlet g:ycm_auto_start_csharp_server = 1\nThe g:ycm_auto_stop_csharp_server option\nWhen set to 1, the OmniSharp-Roslyn server will be automatically stopped upon\nclosing Vim.\nDefault: 1\nlet g:ycm_auto_stop_csharp_server = 1\nThe g:ycm_csharp_server_port option\nWhen g:ycm_auto_start_csharp_server is set to 1, specifies the port for\nthe OmniSharp-Roslyn server to listen on. When set to 0 uses an unused port provided\nby the OS.\nDefault: 0\nlet g:ycm_csharp_server_port = 0\nThe g:ycm_csharp_insert_namespace_expr option\nBy default, when YCM inserts a namespace, it will insert the using statement\nunder the nearest using statement. You may prefer that the using statement is\ninserted somewhere, for example, to preserve sorting. If so, you can set this\noption to override this behavior.\nWhen this option is set, instead of inserting the using statement itself, YCM\nwill set the global variable g:ycm_namespace_to_insert to the namespace to\ninsert, and then evaluate this option's value as an expression. The option's\nexpression is responsible for inserting the namespace - the default insertion\nwill not occur.\nDefault: ''\nlet g:ycm_csharp_insert_namespace_expr = ''\nThe g:ycm_add_preview_to_completeopt option\nWhen this option is set to 1, YCM will add the preview string to Vim's\ncompleteopt option (see :h completeopt). If your completeopt option\nalready has preview set, there will be no effect. Alternatively, when set to\npopup and your version of Vim supports popup windows (see :help popup), the\npopup string will be used instead. You can see the current state of your\ncompleteopt setting with :set completeopt? (yes, the question mark is\nimportant).\nWhen preview is present in completeopt, YCM will use the preview window at\nthe top of the file to store detailed information about the current completion\ncandidate (but only if the candidate came from the semantic engine). For\ninstance, it would show the full function prototype and all the function\noverloads in the window if the current completion is a function name.\nWhen popup is present in completeopt, YCM will instead use a popup\nwindow to the side of the completion popup for storing detailed information\nabout the current completion candidate. In addition, YCM may truncate the\ndetailed completion information in order to give the popup sufficient room\nto display that detailed information.\nDefault: 0\nlet g:ycm_add_preview_to_completeopt = 0\nThe g:ycm_autoclose_preview_window_after_completion option\nWhen this option is set to 1, YCM will auto-close the preview window after\nthe user accepts the offered completion string. If there is no preview window\ntriggered because there is no preview string in completeopt, this option is\nirrelevant. See the g:ycm_add_preview_to_completeopt option for more details.\nDefault: 0\nlet g:ycm_autoclose_preview_window_after_completion = 0\nThe g:ycm_autoclose_preview_window_after_insertion option\nWhen this option is set to 1, YCM will auto-close the preview window after\nthe user leaves insert mode. This option is irrelevant if\ng:ycm_autoclose_preview_window_after_completion is set or if no preview\nwindow is triggered. See the g:ycm_add_preview_to_completeopt option for more\ndetails.\nDefault: 0\nlet g:ycm_autoclose_preview_window_after_insertion = 0\nThe g:ycm_max_diagnostics_to_display option\nThis option controls the maximum number of diagnostics shown to the user when\nerrors or warnings are detected in the file. This option is only relevant for\nthe C-family, C#, Java, JavaScript, and TypeScript languages.\nA special value of 0 means there is no limit.\nDefault: 30\nlet g:ycm_max_diagnostics_to_display = 30\nThe g:ycm_key_list_select_completion option\nThis option controls the key mappings used to select the first completion\nstring.  Invoking any of them repeatedly cycles forward through the completion\nlist.\nSome users like adding <Enter> to this list.\nDefault: ['<TAB>', '<Down>']\nlet g:ycm_key_list_select_completion = ['<TAB>', '<Down>']\nThe g:ycm_key_list_previous_completion option\nThis option controls the key mappings used to select the previous completion\nstring. Invoking any of them repeatedly cycles backwards through the completion\nlist.\nNote that one of the defaults is <S-TAB> which means Shift-TAB. That mapping\nwill probably only work in GUI Vim (Gvim or MacVim) and not in plain console Vim\nbecause the terminal usually does not forward modifier key combinations to Vim.\nDefault: ['<S-TAB>', '<Up>']\nlet g:ycm_key_list_previous_completion = ['<S-TAB>', '<Up>']\nThe g:ycm_key_list_stop_completion option\nThis option controls the key mappings used to close the completion menu. This is\nuseful when the menu is blocking the view, when you need to insert the <TAB>\ncharacter, or when you want to expand a snippet from UltiSnips and navigate\nthrough it.\nDefault: ['<C-y>']\nlet g:ycm_key_list_stop_completion = ['<C-y>']\nThe g:ycm_key_invoke_completion option\nThis option controls the key mapping used to invoke the completion menu for\nsemantic completion. By default, semantic completion is triggered automatically\nafter typing ., -> and :: in insert mode (if semantic completion support\nhas been compiled in). This key mapping can be used to trigger semantic\ncompletion anywhere. Useful for searching for top-level functions and classes.\nConsole Vim (not Gvim or MacVim) passes <Nul> to Vim when the user types\n<C-Space> so YCM will make sure that <Nul> is used in the map command when\nyou're editing in console Vim, and <C-Space> in GUI Vim. This means that you\ncan just press <C-Space> in both console and GUI Vim and YCM will do the right\nthing.\nSetting this option to an empty string will make sure no mapping is created.\nDefault: <C-Space>\nlet g:ycm_key_invoke_completion = '<C-Space>'\nThe g:ycm_key_detailed_diagnostics option\nThis option controls the key mapping used to show the full diagnostic text when\nthe user's cursor is on the line with the diagnostic. It basically calls\n:YcmShowDetailedDiagnostic.\nSetting this option to an empty string will make sure no mapping is created.\nDefault: <leader>d\nlet g:ycm_key_detailed_diagnostics = '<leader>d'\nThe g:ycm_global_ycm_extra_conf option\nNormally, YCM searches for a .ycm_extra_conf.py file for compilation flags\n(see the User Guide for more details on how this works). This option specifies\na fallback path to a config file which is used if no .ycm_extra_conf.py is\nfound.\nYou can place such a global file anywhere in your filesystem.\nDefault: ''\nlet g:ycm_global_ycm_extra_conf = ''\nThe g:ycm_confirm_extra_conf option\nWhen this option is set to 1 YCM will ask once per .ycm_extra_conf.py file\nif it is safe to be loaded. This is to prevent execution of malicious code\nfrom a .ycm_extra_conf.py file you didn't write.\nTo selectively get YCM to ask\/not ask about loading certain .ycm_extra_conf.py\nfiles, see the g:ycm_extra_conf_globlist option.\nDefault: 1\nlet g:ycm_confirm_extra_conf = 1\nThe g:ycm_extra_conf_globlist option\nThis option is a list that may contain several globbing patterns. If a pattern\nstarts with a ! all .ycm_extra_conf.py files matching that pattern will be\nblacklisted, that is they won't be loaded and no confirmation dialog will be\nshown. If a pattern does not start with a ! all files matching that pattern\nwill be whitelisted. Note that this option is not used when confirmation is\ndisabled using g:ycm_confirm_extra_conf and that items earlier in the list\nwill take precedence over the later ones.\nRules:\n\n*       matches everything\n?       matches any single character\n[seq]   matches any character in seq\n[!seq]  matches any char not in seq\n\nExample:\nlet g:ycm_extra_conf_globlist = ['~\/dev\/*','!~\/*']\n\nThe first rule will match everything contained in the ~\/dev directory so\n.ycm_extra_conf.py files from there will be loaded.\nThe second rule will match everything in the home directory so a\n.ycm_extra_conf.py file from there won't be loaded.\nAs the first rule takes precedence everything in the home directory excluding\nthe ~\/dev directory will be blacklisted.\n\nNOTE: The glob pattern is first expanded with Python's\nos.path.expanduser() and then resolved with os.path.abspath() before being\nmatched against the filename.\nDefault: []\nlet g:ycm_extra_conf_globlist = []\nThe g:ycm_filepath_completion_use_working_dir option\nBy default, YCM's filepath completion will interpret relative paths like ..\/\nas being relative to the folder of the file of the currently active buffer.\nSetting this option will force YCM to always interpret relative paths as being\nrelative to Vim's current working directory.\nDefault: 0\nlet g:ycm_filepath_completion_use_working_dir = 0\nThe g:ycm_semantic_triggers option\nThis option controls the character-based triggers for the various semantic\ncompletion engines. The option holds a dictionary of key-values, where the keys\nare Vim's filetype strings delimited by commas and values are lists of strings,\nwhere the strings are the triggers.\nSetting key-value pairs on the dictionary adds semantic triggers to the\ninternal default set (listed below). You cannot remove the default triggers,\nonly add new ones.\nA \"trigger\" is a sequence of one or more characters that trigger semantic\ncompletion when typed. For instance, C++ (cpp filetype) has . listed as a\ntrigger. So when the user types foo., the semantic engine will trigger and\nserve foo's list of member functions and variables. Since C++ also has ->\nlisted as a trigger, the same thing would happen when the user typed foo->.\nIt's also possible to use a regular expression as a trigger. You have to prefix\nyour trigger with re! to signify it's a regex trigger. For instance,\nre!\\w+\\. would only trigger after the \\w+\\. regex matches.\nNOTE: The regex syntax is NOT Vim's, it's Python's.\nDefault: [see next line]\nlet g:ycm_semantic_triggers =  {\n  \\   'c': ['->', '.'],\n  \\   'objc': ['->', '.', 're!\\[[_a-zA-Z]+\\w*\\s', 're!^\\s*[^\\W\\d]\\w*\\s',\n  \\            're!\\[.*\\]\\s'],\n  \\   'ocaml': ['.', '#'],\n  \\   'cpp,cuda,objcpp': ['->', '.', '::'],\n  \\   'perl': ['->'],\n  \\   'php': ['->', '::'],\n  \\   'cs,d,elixir,go,groovy,java,javascript,julia,perl6,python,scala,typescript,vb': ['.'],\n  \\   'ruby,rust': ['.', '::'],\n  \\   'lua': ['.', ':'],\n  \\   'erlang': [':'],\n  \\ }\nThe g:ycm_cache_omnifunc option\nSome omnicompletion engines do not work well with the YCM cache\u2014in particular,\nthey might not produce all possible results for a given prefix. By unsetting\nthis option you can ensure that the omnicompletion engine is re-queried on every\nkeypress. That will ensure all completions will be presented, but might cause\nstuttering and lagginess if the omnifunc is slow.\nDefault: 1\nlet g:ycm_cache_omnifunc = 1\nThe g:ycm_use_ultisnips_completer option\nBy default, YCM will query the UltiSnips plugin for possible completions of\nsnippet triggers. This option can turn that behavior off.\nDefault: 1\nlet g:ycm_use_ultisnips_completer = 1\nThe g:ycm_goto_buffer_command option\nDefines where GoTo* commands result should be opened. Can take one of the\nfollowing values: 'same-buffer', 'split', or 'split-or-existing-window'.\nIf this option is set to the 'same-buffer' but current buffer can not be\nswitched (when buffer is modified and nohidden option is set), then result\nwill be opened in a split. When the option is set to\n'split-or-existing-window', if the result is already open in a window of the\ncurrent tab page (or any tab pages with the :tab modifier; see below), it will\njump to that window. Otherwise, the result will be opened in a split as if the\noption was set to 'split'.\nTo customize the way a new window is split, prefix the GoTo* command with one\nof the following modifiers: :aboveleft, :belowright, :botright,\n:leftabove, :rightbelow, :topleft, and :vertical. For instance, to\nsplit vertically to the right of the current window, run the command:\n:rightbelow vertical YcmCompleter GoTo\nTo open in a new tab page, use the :tab modifier with the 'split' or\n'split-or-existing-window' options e.g.:\n:tab YcmCompleter GoTo\nNOTE: command modifiers were added in Vim 7.4.1898. If you are using an\nolder version, you can still configure this by setting the option to one of the\ndeprecated values: 'vertical-split', 'new-tab', or 'new-or-existing-tab'.\nDefault: 'same-buffer'\nlet g:ycm_goto_buffer_command = 'same-buffer'\nThe g:ycm_disable_for_files_larger_than_kb option\nDefines the max size (in Kb) for a file to be considered for completion. If this\noption is set to 0 then no check is made on the size of the file you're opening.\nDefault: 1000\nlet g:ycm_disable_for_files_larger_than_kb = 1000\nThe g:ycm_use_clangd option\nThis option controls whether clangd should be used as completion engine for\nC-family languages. Can take one of the following values: 1, 0, with\nmeanings:\n\n1: YCM will use clangd if clangd binary exists in third party or it was\nprovided with ycm_clangd_binary_path option.\n0: YCM will never use clangd completer.\n\nDefault: 1\nlet g:ycm_use_clangd = 1\nThe g:ycm_clangd_binary_path option\nWhen ycm_use_clangd option is set to 1, this option sets the path to\nclangd binary.\nDefault: ''\nlet g:ycm_clangd_binary_path = ''\nThe g:ycm_clangd_args option\nThis option controls the command line arguments passed to the clangd binary. It\nappends new options and overrides the existing ones.\nDefault: []\nlet g:ycm_clangd_args = []\nThe g:ycm_clangd_uses_ycmd_caching option\nThis option controls which ranking and filtering algorithm to use for completion\nitems. It can take values:\n\n1: Uses ycmd's caching and filtering logic.\n0: Uses clangd's caching and filtering logic.\n\nDefault: 1\nlet g:ycm_clangd_uses_ycmd_caching = 1\nThe g:ycm_language_server option\nThis option lets YCM use an arbitrary LSP server, not unlike coc.nvim and others.\nHowever, the officially supported completers are favoured over custom LSP ones,\nso overriding an existing completer means first making sure YCM won't choose\nthat existing completer in the first place.\nA simple working example of this option can be found in the section called\n\"Semantic Completion for Other Languages\".\nDefault: []\nlet g:ycm_language_server = []\nThe g:ycm_disable_signature_help option\nThis option allows you to disable all signature help for all completion engines.\nThere is no way to disable it per-completer. This option is reserved, meaning\nthat while signature help support remains experimental, its values and meaning\nmay change and it may be removed in a future version.\nDefault: 0\n\" Disable signature help\nlet g:ycm_disable_signature_help = 1\nThe g:ycm_gopls_binary_path option\nIn case the system-wide gopls binary is newer than the bundled one, setting\nthis option to the path of the system-wide gopls would make YCM use that one\ninstead.\nIf the path is just gopls, YCM will search in $PATH.\nThe g:ycm_gopls_args option\nSimilar to the g:ycm_clangd_args, this option allows\npassing additional flags to the gopls command line.\nDefault: []\nlet g:ycm_gopls_args = []\nThe g:ycm_rls_binary_path and g:ycm_rustc_binary_path options\nYCM no longer uses RLS for rust, and these options are therefore no longer\nsupported.\nTo use a custom rust-analyzer, see g:ycm_rust_toolchain_root.\nThe g:ycm_rust_toolchain_root option\nOptionally specify the path to a custom rust toolchain including at least a\nsupported version of rust-analyzer.\nThe g:ycm_tsserver_binary_path option\nSimilar to the gopls path, this option\ntells YCM where is the TSServer executable located.\nThe g:ycm_roslyn_binary_path option\nSimilar to the gopls path, this option\ntells YCM where is the Omnisharp-Roslyn executable located.\nFAQ\nThe FAQ section has been moved to the wiki.\nContributor Code of Conduct\nPlease note that this project is released with a Contributor Code of\nConduct. By participating in this project you agree to abide by its\nterms.\nContact\nIf you have questions about the plugin or need help, please join the Gitter\nroom or use the ycm-users mailing list.\nIf you have bug reports or feature suggestions, please use the issue\ntracker. Before you do, please carefully read\nCONTRIBUTING.md as this asks for important diagnostics which\nthe team will use to help get you going.\nThe latest version of the plugin is available at\nhttps:\/\/ycm-core.github.io\/YouCompleteMe\/.\nThe author's homepage is https:\/\/val.markovic.io.\nPlease do NOT go to #vim on freenode for support. Please contact the\nYouCompleteMe maintainers directly using the contact details.\nLicense\nThis software is licensed under the GPL v3 license.\n\u00a9 2015-2018 YouCompleteMe contributors\n","156":"\nUnified access to the best community driven cheat sheets repositories of the world.\nLet's imagine for a moment that there is such a thing as an ideal cheat sheet.\nWhat should it look like?\nWhat features should it have?\n\nConcise \u2014 It should only contain the things you need, and nothing else.\nFast \u2014 It should be possible to use it instantly.\nComprehensive \u2014 It should contain answers for every possible question.\nUniversal \u2014 It should be available everywhere, anytime, without any preparations.\nUnobtrusive \u2014 It should not distract you from your main task.\nTutoring \u2014 It should help you to learn the subject.\nInconspicuous \u2014 It should be possible to use it completely unnoticed.\n\nSuch a thing exists.\nFeatures\ncheat.sh\n\nHas a simple curl\/browser interface.\nCovers 56 programming languages, several DBMSes, and more than 1000 most important UNIX\/Linux commands.\nProvides access to the best community driven cheat sheets repositories in the world, on par with StackOverflow.\nAvailable everywhere, no installation needed.\nUltrafast, returns answers within 100 ms, as a rule.\nHas a convenient command line client, cht.sh, that is very advantageous and helpful, though not mandatory.\nCan be used directly from code editors, without opening a browser and not switching your mental context.\nSupports a special stealth mode where it can be used fully invisibly without ever touching a key and making sounds.\n\n\n\n\nContents\n\nFeatures\nUsage\nCommand line client, cht.sh\n\nInstallation\nClient usage\nTab-completion\nStealth mode\n\n\nSelf-Hosting\n\nDocker\n\n\nEditors integration\n\nVim\nEmacs\nVisual Studio Code\nSublime\nIntelliJ IDEA\nQT Creator\n\n\nSpecial pages\nSearch\nProgramming languages cheat sheets\nCheat sheets sources\nHow to contribute\n\nHow to edit a cheat sheet\nHow to add a cheat sheet\nHow to add a cheat sheet repository\n\n\n\nUsage\nTo get a cheat sheet for a UNIX\/Linux command from a command line, query the service using curl or any other HTTP\/HTTPS client\nspecifying the name of the command in the query:\n    curl cheat.sh\/tar\n    curl cht.sh\/curl\n    curl https:\/\/cheat.sh\/rsync\n    curl https:\/\/cht.sh\/tr\n\nAs you can see, you can use both HTTPS and HTTP to access the service, and both the long (cheat.sh) and the short (cht.sh) service names.\nHere tar, curl, rsync, and tr are names of the UNIX\/Linux commands you want to get cheat sheets for.\nIf you don't know the name of the command you need, you can search for it using the ~KEYWORD notation.\nFor example, to see how you can make snapshots of a filesystem\/volume\/something else:\n    curl cht.sh\/~snapshot\n\n\n\n\nThe programming language cheat sheets are located in special namespaces dedicated to them.\n    curl cht.sh\/go\/Pointers\n    curl cht.sh\/scala\/Functions\n    curl cht.sh\/python\/lambda\n\nTo get the list of available programming language cheat sheets, use the special query :list:\n    curl cht.sh\/go\/:list\n\nAlmost each programming language has a special page named :learn\nthat describes the language basics (that's a direct mapping from the \"Learn X in Y\" project).\nIt could be a good starting point if you've just started learning a language.\nIf there is no cheat sheet for a programming language query (and it is almost always the case),\nit is generated on the fly, based on available cheat sheets and answers on StackOverflow.\nOf course, there is no guarantee that the returned cheat sheet will be a 100% hit, but it is almost always exactly what you are looking for.\nTry these (and your own) queries to get the impression of that, what the answers look like:\n    curl cht.sh\/go\/reverse+a+list\n    curl cht.sh\/python\/random+list+elements\n    curl cht.sh\/js\/parse+json\n    curl cht.sh\/lua\/merge+tables\n    curl cht.sh\/clojure\/variadic+function\n\nIf you don't like an answer for your queries, you can pick another one. For that, repeat the query with an additional parameter \/1, \/2 etc. appended:\n    curl cht.sh\/python\/random+string\n    curl cht.sh\/python\/random+string\/1\n    curl cht.sh\/python\/random+string\/2\n\nCheat sheets are formatted as code of the queried programming language (at least we are trying our best to do so)\nso they can be pasted into a program in this language directly. Text comments, if there are any, are formatted according to the language syntax.\n    $ curl cht.sh\/lua\/table+keys\n    -- lua: retrieve list of keys in a table\n\n    local keyset={}\n    local n=0\n\n    for k,v in pairs(tab) do\n      n=n+1\n      keyset[n]=k\n    end\n\n    --[[\n       [ Note that you cannot guarantee any order in keyset. If you want the\n       [ keys in sorted order, then sort keyset with table.sort(keyset).\n       [ \n       [ [lhf] [so\/q\/12674345] [cc by-sa 3.0]\n       ]]\n\nIf you don't need text comments in the answer, you can eliminate them\nusing a special option \\?Q:\n    $ curl cht.sh\/lua\/table+keys\\?Q\n    local keyset={}\n    local n=0\n\n    for k,v in pairs(tab) do\n      n=n+1\n      keyset[n]=k\n    end\nAnd if you don't need syntax highlighting, switch it off using \\?T.\nYou can combine the options together:\n    curl cht.sh\/go\/reverse+a+list\\?Q\n    curl cht.sh\/python\/random+list+elements\\?Q\n    curl cht.sh\/js\/parse+json\\?Q\n    curl cht.sh\/lua\/merge+tables\\?QT\n    curl cht.sh\/clojure\/variadic+function\\?QT\n\nFull list of all options described below and in \/:help.\nTry your own queries. Follow these rules:\n\nTry to be more specific (\/python\/append+file is better than \/python\/file and \/python\/append).\nAsk practical question if possible (yet theoretical question are possible too).\nAsk programming language questions only; specify the name of the programming language as the section name.\nSeparate words with + instead of spaces.\nDo not use special characters, they are ignored anyway.\nIf you want to eliminate cheat sheets containing some word, add it to the query with +-: python\/multiply+matrices+-numpy\n\nRead more about the programming languages queries below.\nCommand line client, cht.sh\nThe cheat.sh service has its own command line client (cht.sh) that\nhas several useful features compared to querying the service directly with curl:\n\nSpecial shell mode with a persistent queries context and readline support.\nQueries history.\nClipboard integration.\nTab completion support for shells (bash, fish, zsh).\nStealth mode.\n\nInstallation\nTo install the client:\n    mkdir -p ~\/bin\/\n    curl https:\/\/cht.sh\/:cht.sh > ~\/bin\/cht.sh\n    chmod +x ~\/bin\/cht.sh\n\nor to install it globally (for all users):\n    curl https:\/\/cht.sh\/:cht.sh | sudo tee \/usr\/local\/bin\/cht.sh\n    chmod +x \/usr\/local\/bin\/cht.sh\n\nNote: The package \"rlwrap\" is a required dependency to run in shell mode. Install this using sudo apt install rlwrap\nClient usage\nNow, you can use cht.sh instead of curl, and write your queries in more natural way,\nwith spaces instead of +:\n    $ cht.sh go reverse a list\n    $ cht.sh python random list elements\n    $ cht.sh js parse json\n\nIt is even more convenient to start the client in a special shell mode:\n    $ cht.sh --shell\n    cht.sh> go reverse a list\n\nIf all your queries are about the same language, you can change the context\nand spare repeating the programming language name:\n    $ cht.sh --shell\n    cht.sh> cd go\n    cht.sh\/go> reverse a list\n\nor even start the client in this context:\n    $ cht.sh --shell go\n    cht.sh\/go> reverse a list\n    ...\n    cht.sh\/go> join a list\n    ...\n\nIf you want to change the context, you can do it with the cd command,\nor if you want do a single query for some other language, just prepend it with \/:\n    $ cht.sh --shell go\n    ...\n    cht.sh\/go> \/python dictionary comprehension\n    ...\n\nIf you want to copy the last answer into the clipboard, you can\nuse the c (copy) command, or C (ccopy, without comments).\n    cht.sh\/python> append file\n    #  python - How do you append to a file?\n\n    with open(\"test.txt\", \"a\") as myfile:\n        myfile.write(\"appended text\")\n    cht.sh\/python> C\n    copy: 2 lines copied to the selection\n\nType help for other internal cht.sh commands.\n\tcht.sh> help\n\thelp    - show this help\n\thush    - do not show the 'help' string at start anymore\n\tcd LANG - change the language context\n\tcopy    - copy the last answer in the clipboard (aliases: yank, y, c)\n\tccopy   - copy the last answer w\/o comments (cut comments; aliases: cc, Y, C)\n\texit    - exit the cheat shell (aliases: quit, ^D)\n\tid [ID] - set\/show an unique session id (\"reset\" to reset, \"remove\" to remove)\n\tstealth - stealth mode (automatic queries for selected text)\n\tupdate  - self update (only if the scriptfile is writeable)\n\tversion - show current cht.sh version\n\t\/:help  - service help\n\tQUERY   - space separated query staring (examples are below)\n\t\t\t\t  cht.sh> python zip list\n\t\t\t\t  cht.sh\/python> zip list\n\t\t\t\t  cht.sh\/go> \/python zip list\n\nThe cht.sh client has its configuration file which is located at ~\/.cht.sh\/cht.sh.conf\n(location of the file can be overridden by the environment variable CHTSH_CONF).\nUse it to specify query options that you would use with each query.\nFor example, to switch syntax highlighting off create the file with the following\ncontent:\nCHTSH_QUERY_OPTIONS=\"T\"\n\nOr if you want to use a special syntax highlighting theme:\nCHTSH_QUERY_OPTIONS=\"style=native\"\n\n(curl cht.sh\/:styles-demo to see all supported styles).\nOther cht.sh configuration parameters:\nCHTSH_CURL_OPTIONS=\"-A curl\"        # curl options used for cht.sh queries\nCHTSH_URL=https:\/\/cht.sh            # URL of the cheat.sh server\n\nTab completion\nBash Tab completion\nTo activate tab completion support for cht.sh, add the :bash_completion script to your ~\/.bashrc:\n    $ curl https:\/\/cheat.sh\/:bash_completion > ~\/.bash.d\/cht.sh\n    $ . ~\/.bash.d\/cht.sh\n    $ # and add . ~\/.bash.d\/cht.sh to ~\/.bashrc\n\nZSH Tab completion\nTo activate tab completion support for cht.sh, add the :zsh script to the fpath in your ~\/.zshrc:\n    $ curl https:\/\/cheat.sh\/:zsh > ~\/.zsh.d\/_cht\n    $ echo 'fpath=(~\/.zsh.d\/ $fpath)' >> ~\/.zshrc\n    $ # Open a new shell to load the plugin\n\nStealth mode\nBeing used fully unnoticed is one of the most important property of any cheat sheet.\ncheat.sh can be used completely unnoticed too. The cheat.sh client, cht.sh, has\na special mode, called stealth mode. Using that, you don't even need to touch your\nkeyboard to open a cheat sheet.\nIn this mode, as soon as you select some text with the mouse (and thus adding it\ninto the selection buffer of X Window System or into the clipboard) it's used\nas a query string for cheat.sh, and the correspondent cheat sheet is automatically shown.\nLet's imagine, that you are having an online interview, where your interviewer asks you\nsome questions using a shared document (say Google Docs) and you are supposed\nto write your coding answers there (it's possible too that you'll type in the questions\non your own, just to show to the interviewer that you've heard it right).\nWhen using the stealth mode of cht.sh, the only thing you need to do in order to see\na cheat sheet for some question, is to select the question using the mouse.\nIf you don't want any text in the answers and the only thing you need is code,\nuse the Q option when starting the stealth mode.\n\n\n\nYou: Hi!                                            | $ cht.sh --shell python\nShe: Hi!                                            | cht.sh\/python> stealth Q\nShe: Are you ready for a small interview?           | stealth: you are in the stealth mode; select any text\nShe: Just a couple of questions                     | stealth: selections longer than 5 words are ignored\nShe: We will talk about python                      | stealth: query arguments: ?Q\nShe: Let's start from something simple.             | stealth: use ^C to leave this mode\nShe: Do you know how to reverse a list in python?   |\nYou: Sure                                           |\nYou: (selecting \"reverse a list\")                   | stealth: reverse a list\n                                                    | reverse_lst = lst[::-1]\nYou: lst[::-1]?                                     |\nShe: Good.                                          |\nShe: Do you know how to chain a list of lists?      |\nYou: (selecting \"chain a list of lists\")            | stealth: chain a list of lists\n                                                    | import itertools\n                                                    | a = [[\"a\",\"b\"], [\"c\"]]\n                                                    | print list(itertools.chain.from_iterable(a))\nYou: May I use external modules?                    |\nShe: What module do you want to use?                |\nYou: itertools                                      |\nShe: Yes, you may use it                            |\nYou: Ok, then:                                      |\nYou: itertools.chain.from_iterable(a)               |\nShe: Good. Let's try something harder.              |\nShe: What about quicksort implementation?           |\nYou: (selecting \"quicksort implementation\")         | stealth: quicksort implementation\nYou: Let me think about it.                         | (some big and clumsy lowlevel implementation shown)\nYou: Well...(starting typing it in)                 | def sort(array=[12,4,5,6,7,3,1,15]):\n                                                    |     less = []\nShe: (seeing your ugly pascal style)                |     equal = []\nShe: Could you write it more concise?               |     greater = []\n                                                    |     if len(array) > 1:\nYou: What do you mean?                              |         pivot = array[0]\n                                                    |         for x in array:\nShe: I mean,                                        |             if x < pivot: less.append(x)\nShe: do you really need all these ifs and fors?     |             if x == pivot: equal.append(x)\nShe: Could you maybe just use filter instead?       |             if x > pivot: greater.append(x)\n                                                    |         return sort(less)+equal+sort(greater)\nYou: quicksort with filter?                         |     else:\n                                                    |         return array\nShe: Yes                                            |\nYou: (selecting \"quicksort with filter\")            | stealth: quicksort with filter\nYou: Ok, I will try.                                | return qsort(filter(lt, L[1:]))+[pivot] \\\nYou: Something like this?                           |     +qsort(filter(ge, L[1:]))\nYou: qsort(filter(lt, L[1:]))+[pivot] \\             |\n       + qsort(filter(ge, L[1:]))                   |\n                                                    |\nShe: Yes! Perfect! Exactly what I wanted to see!    |\n                                                    |\n\n\nOf course, this is just for fun, and you should never cheat in your coding interviews,\nbecause you know what happens when you do.\n\nWindows command line client\nYou can access cheat.sh from Windows command line too.\nUse cheat.sh command line client for that: cht.exe.\nIt supports:\n\noutput colorization;\ncommand line options;\nits own configuration file.\n\nYou can also use scoop command-line installer for Windows to get it:\nscoop install cht\nSelf-Hosting\nDocker\nCurrently, the easiest way to get a self-hosted instance running is by using\nthe docker-compose.yml file.\ndocker-compose up\n\nThis builds and runs the image with baked in cheatsheets and starts the app\nand a Redis instance to back it, making the service available at\nhttp:\/\/localhost:8002 This is currently an early implementation and should\nprobably not be used for anything outside of internal\/dev\/personal use right\nnow.\nEditors integration\nYou can use cheat.sh directly from the editor\n(Emacs, Sublime, Vim, and Visual Studio Code are currently supported;\nnot all features are supported by all plugins though; see below).\nInstead of opening your browser, googling, browsing Stack Overflow\nand eventually copying the code snippets you need into the clipboard\nand later pasting them into the editor,\nyou can achieve the same instantly and without leaving the editor at all!\nHere is what it looks like in Vim:\n\n\nIf you have a question while editing a program, you can just type\nyour question directly in the buffer and press <leader>KK. You will get\nthe answer to your question in pager. (with <leader>KB you'll get the answer\nin a separate buffer).\n\n\nIf you like the answer, you can manually paste it from the buffer or\nthe pager, or if you are lazy you can use <leader>KP to paste it below\/under\nyour question (or replace you question using <leader>KR). If you want the\nanswer without the comments, <leader>KC replays the last query\ntoggling them.\n\n\nIf you use some static analysis plugin such as syntastic (for Vim), you can use\nits warning and error messages as cheat.sh queries: place the cursor on the problem line\nand press <leader>KE: explanation for the warning will be opened in a new buffer.\nFeatures supported by cheat.sh plugins for different editors:\n\n\n\nFeature\nEmacs\nSublime\nVim\nVSCode\nIDEA\nQtCreator\n\n\n\n\nCommand queries\n\u2713\n\u2713\n\u2713\n\u2713\n\u2713\n\u2713\n\n\nQueries from buffer\n\n\n\u2713\n\u2713\n\n\u2713\n\n\nToggle comments\n\n\n\u2713\n\u2713\n\u2713\n\u2713\n\n\nPrev\/next answer\n\n\n\u2713\n\u2713\n\u2713\n\u2713\n\n\nMultiple answers\n\n\u2713\n\n\n\u2713\n\n\n\nWarnings as queries\n\n\n\u2713\n\n\n\n\n\nQueries history\n\n\n\u2713\n\u2713\n\n\n\n\nSession id\n\n\n\u2713\n\n\n\n\n\nConfigurable server\n\u2713\n\n\u2713\n\u2713\n\n\u2713\n\n\n\nVim\n\ncheat.sh-vim \u2014 Vim support\n\nHere is Vim configuration example:\n\" some configuration above ...\n\nlet mapleader=\" \"\n\ncall vundle#begin()\nBundle 'gmarik\/vundle'\nBundle 'scrooloose\/syntastic'\nBundle 'dbeniamine\/cheat.sh-vim'\ncall vundle#end()\n\nlet g:syntastic_javascript_checkers = [ 'jshint' ]\nlet g:syntastic_ocaml_checkers = ['merlin']\nlet g:syntastic_python_checkers = ['pylint']\nlet g:syntastic_shell_checkers = ['shellcheck']\n\n\" some configuration below ...\nIn this example, several Vim plugins are used:\n\ngmarik\/vundle \u2014 Vim plugin manager\nscrooloose\/syntastic \u2014 Syntax checking plugin\ncheat.sh-vim \u2014 Vim support\n\nSyntastic shows warnings and errors (found by code analysis tools: jshint, merlin, pylint, shellcheckt etc.), and cheat.sh-vim` shows you explanations for the errors and warnings\nand answers on programming languages queries written in the editor.\nWatch a demo, where the most important features of the cheat.sh Vim plugin are shown (5 Min):\n\n\n\nOr, if you want to scroll and\/or pause, the same on YouTube:\n\n\n\nEmacs\n\ncheat-sh.el \u2014 Emacs support (available also at cheat.sh\/:emacs)\ncheat.sh\/:emacs-ivy \u2014 Emacs support for ivy users\n\n\nVisual Studio Code\n\nvscode-snippet\nInstall it from VSCode Marketplace\n\nUsage:\n\nHit \u2318 Command + \u21e7 Shift + p\nRun Snippet: Find.\nType your query and hit enter.\n\n\n(GIF courtesy: Matthias Endler, @mre)\nSublime\n\ncheat.sh-sublime-plugin\n\nUsage:\n\nWrite your query string.\nSelect the query string.\nPress Cmd + \u21e7 Shift + B to replace the selected query string by the answer generated from cht.sh.\n\n\n(GIF courtesy: Gaurav Kukreja, @gauravk-in)\nIntelliJ IDEA\n\nidea-cheatsh-plugin\nInstall from idea plugins marketplace\n\nUsage:\n\nWrite query string\nSelect the query string\nPress keyboard shortcut Alt + C , S to replace the selected query string by the answer\n\n\n(GIF courtesy: Szymon Przebierowski, @szymonprz)\nQtCreator\n\ncheatsh-qtcreator\n\nCurrent features:\n\nsearch word under cursor\nsearch selected\nquery search\ndisable comments\npaste answer (?TQ version)\ncustom server URL\ncustom search context (default is cpp)\nhotkeys and menu\n\n\n(GIF courtesy: Pozemka, @pozemka)\nSpecial pages\nThere are several special pages that are not cheat sheets.\nTheir names start with colon and have special meaning.\nGetting started:\n    :help               description of all special pages and options\n    :intro              cheat.sh introduction, covering the most important usage questions\n    :list               list all cheat sheets (can be used in a subsection too: \/go\/:list)\n\nCommand line client cht.sh and shells support:\n    :cht.sh             code of the cht.sh client\n    :bash_completion    bash function for tab completion\n    :bash               bash function and tab completion setup\n    :fish               fish function and tab completion setup\n    :zsh                zsh function and tab completion setup\n\nEditors support:\n    :vim                cheat.sh support for Vim\n    :emacs              cheat.sh function for Emacs\n    :emacs-ivy          cheat.sh function for Emacs (uses ivy)\n\nOther pages:\n    :post               how to post new cheat sheet\n    :styles             list of color styles\n    :styles-demo        show color styles usage examples\n    :random             fetches a random page (can be used in a subsection too: \/go\/:random)\n\nSearch\nTo search for a keyword, use the query:\n    \/~keyword\n\nIn this case search is not recursive \u2014 it is conducted only in a page of the specified level.\nFor example:\n    \/~snapshot          look for snapshot in the first level cheat sheets\n    \/scala\/~currying     look for currying in scala cheat sheets\n\nFor a recursive search in all cheat sheets, use double slash:\n    \/~snapshot\/r         look for snapshot in all cheat sheets\n\nYou can use special search options after the closing slash:\n    \/~shot\/bi           case insensitive (i), word boundaries (b)\n\nList of search options:\n    i   case insensitive search\n    b   word boundaries\n    r   recursive search\n\nProgramming languages cheat sheets\nCheat sheets related to programming languages\nare organized in namespaces (subdirectories), that are named according\nto the programming language.\nFor each supported programming language\nthere are several special cheat sheets: its own sheet, hello, :list and :learn.\nSay for lua it will look like:\n    lua\n    lua\/hello\n    lua\/:list\n    lua\/:learn\n\nSome languages has the one-liners-cheat sheet, 1line:\n    perl\/1line\n\n\nhello describes how you can start with the language \u2014 install it if needed, build and run its programs, and it shows the \"Hello world\" program written in the language;\n:list shows all topics related to the language\n:learn shows a learn-x-in-minutes language cheat sheet perfect for getting started with the language.\n1line is a collection of one-liners in this language\nweirdness is a collection of examples of weird things in this language\n\n\nAt the moment, cheat.sh covers the 58 following programming languages (alphabetically sorted):\n\n\n\nPrefix\nLanguage\nBasics\nOne-liners\nWeirdness\nStackOverflow\n\n\n\n\narduino\/\nArduino\n\n\n\n\u2713\n\n\nassembly\/\nAssembly\n\n\n\n\u2713\n\n\nawk\/\nAWK\n\u2713\n\n\n\u2713\n\n\nbash\/\nBash\n\u2713\n\n\n\u2713\n\n\nbasic\/\nBASIC\n\n\n\n\u2713\n\n\nbf\/\nBrainfuck\n\u2713\n\n\n\u2713\n\n\nc\/\nC\n\u2713\n\n\n\u2713\n\n\nchapel\/\nChapel\n\u2713\n\n\n\u2713\n\n\nclean\/\nClean\n\n\n\n\u2713\n\n\nclojure\/\nClojure\n\u2713\n\n\n\u2713\n\n\ncoffee\/\nCoffeeScript\n\u2713\n\n\n\u2713\n\n\ncpp\/\nC++\n\u2713\n\n\n\u2713\n\n\ncsharp\/\nC#\n\u2713\n\n\n\u2713\n\n\nd\/\nD\n\u2713\n\n\n\u2713\n\n\ndart\/\nDart\n\u2713\n\n\n\u2713\n\n\ndelphi\/\nDephi\n\n\n\n\u2713\n\n\ndylan\/\nDylan\n\u2713\n\n\n\u2713\n\n\neiffel\/\nEiffel\n\n\n\n\u2713\n\n\nelixir\/\nElixir\n\u2713\n\n\n\u2713\n\n\nelisp\/\nELisp\n\u2713\n\n\n\u2713\n\n\nelm\/\nElm\n\u2713\n\n\n\u2713\n\n\nerlang\/\nErlang\n\u2713\n\n\n\u2713\n\n\nfactor\/\nFactor\n\u2713\n\n\n\u2713\n\n\nfortran\/\nFortran\n\u2713\n\n\n\u2713\n\n\nforth\/\nForth\n\u2713\n\n\n\u2713\n\n\nfsharp\/\nF#\n\u2713\n\n\n\u2713\n\n\ngo\/\nGo\n\u2713\n\n\n\u2713\n\n\ngroovy\/\nGroovy\n\u2713\n\n\n\u2713\n\n\nhaskell\/\nHaskell\n\u2713\n\n\n\u2713\n\n\njava\/\nJava\n\u2713\n\n\n\u2713\n\n\njs\/\nJavaScript\n\u2713\n\u2713\n\u2713\n\u2713\n\n\njulia\/\nJulia\n\u2713\n\n\n\u2713\n\n\nkotlin\/\nKotlin\n\u2713\n\n\n\u2713\n\n\nlatex\/\nLaTeX\n\u2713\n\n\n\u2713\n\n\nlisp\/\nLisp\n\u2713\n\n\n\u2713\n\n\nlua\/\nLua\n\u2713\n\n\n\u2713\n\n\nmatlab\/\nMATLAB\n\u2713\n\n\n\u2713\n\n\nnim\/\nNim\n\u2713\n\n\n\u2713\n\n\nocaml\/\nOCaml\n\u2713\n\n\n\u2713\n\n\noctave\/\nOctave\n\u2713\n\n\n\u2713\n\n\nperl\/\nPerl\n\u2713\n\u2713\n\n\u2713\n\n\nperl6\/\nPerl 6\n\u2713\n\u2713\n\n\u2713\n\n\nphp\/\nPHP\n\u2713\n\n\n\u2713\n\n\npike\/\nPike\n\n\n\n\u2713\n\n\npython\/\nPython\n\u2713\n\u2713\n\n\u2713\n\n\npython3\/\nPython 3\n\u2713\n\n\n\u2713\n\n\nr\/\nR\n\u2713\n\n\n\u2713\n\n\nracket\/\nRacket\n\u2713\n\n\n\u2713\n\n\nruby\/\nRuby\n\u2713\n\n\n\u2713\n\n\nrust\/\nRust\n\u2713\n\n\n\u2713\n\n\nscala\/\nScala\n\u2713\n\n\n\u2713\n\n\nscheme\/\nScheme\n\u2713\n\n\n\u2713\n\n\nsolidity\/\nSolidity\n\u2713\n\n\n\u2713\n\n\nswift\/\nSwift\n\u2713\n\n\n\u2713\n\n\ntcsh\/\nTcsh\n\u2713\n\n\n\u2713\n\n\ntcl\/\nTcl\n\u2713\n\n\n\u2713\n\n\nobjective-c\/\nObjective-C\n\u2713\n\n\n\u2713\n\n\nvb\/\nVisualBasic\n\u2713\n\n\n\u2713\n\n\nvbnet\/\nVB.Net\n\u2713\n\n\n\u2713\n\n\n\nAnd several other topics, that are though related to programming,\nare not programming languages:\n\n\n\nPrefix\nTopic\nBasics\nStackOverflow\n\n\n\n\ncmake\/\nCMake\n\u2713\n\u2713\n\n\ndjango\/\nDjango\n\n\u2713\n\n\nflask\/\nFlask\n\n\u2713\n\n\ngit\/\nGit\n\u2713\n\u2713\n\n\n\nCheat sheets sources\nInstead of creating yet another mediocre cheat sheet repository,\nwe are concentrating our efforts on creation of a unified\nmechanism to access selected existing well developed and good maintained\ncheat sheet repositories covering topics of our interest:\nprogramming and operating systems usage.\ncheat.sh uses selected community driven cheat sheet repositories\nand information sources, maintained by thousands of users, developers and authors\nall over the world\n(in the Users column number of contributors\/number of stars is shown):\n\n\n\nCheat sheets\nRepository\nUsers\nCreation Date\n\n\n\n\nUNIX\/Linux, programming\ncheat.sheets\n38\/223\nMay 1, 2017\n\n\nUNIX\/Linux commands\ntldr-pages\/tldr\n760\/23158\nDec 8, 2013\n\n\nUNIX\/Linux commands\nchrisallenlane\/cheat\n131\/5240\nJul 28, 2013\n\n\nProgramming languages\nadambard\/learnxinyminutes-docs\n1246\/6748\nJun 23, 2013\n\n\nGo\na8m\/go-lang-cheat-sheet\n31\/4039\nFeb 9, 2014\n\n\nPerl\npkrumnis\/perl1line.txt\n5\/190\nNov 4, 2011\n\n\nProgramming languages\nStackOverflow\n9M\nSep 15, 2008\n\n\n\nPie diagram reflecting cheat sheets sources distribution (by number of cheat sheets on cheat.sh originating from a repository):\n\nHow to contribute\nHow to edit a cheat sheet\nIf you want to edit a cheat.sh cheat sheet, you should edit it in the upstream repository.\nYou will find the name of the source repository in a browser when you open a cheat sheet.\nThere are two github buttons at the bottom of the page: the second one is the button\nof the repository, which belongs the current cheat sheet.\nYou can edit the cheat sheet directly in your browser (you need a github account for it).\nThere is an edit button in the top right corner. If you click on it, an editor will be open.\nThere you will change the cheat sheet (under the hood: the upstream repository is forked, your changes are\ncommitted in the forked repository, a pull request to the upstream repository owner is sent).\n\nHow to add a cheat sheet\nIf you want to add a cheat sheet, you have one of the following\nways:\n\nAdd it to one of the external cheat sheets repositories; you should decide on your own what is the best repository for your cheat sheet;\nAdd it to the local cheat.sh repository (cheat.sheets) on github (fork, commit, pull request);\nPost it on cheat.sh using curl or a web browser (cheat.sh\/:post).\n\nIf you want to change an existing cheat sheet,\nyou have to find the original repository (when you open a cheat sheet in a browser,\nyou see the repository's github button in the bottom of the cheat sheet),\nthe cheat sheet is coming from, and change it there.\nAfter some time the changes will be synchronized on cheat.sh.\nHow to add a cheat sheet repository\nIf you want to add a cheat sheet repository to cheat.sh, please open an issue:\n\nAdd a new repository\n\nPlease specify the name of the repository, and give its short description.\n","157":"linux-insides\nA book-in-progress about the linux kernel and its insides.\nThe goal is simple - to share my modest knowledge about the insides of the linux kernel and help people who are interested in linux kernel insides, and other low-level subject matter. Feel free to go through the book Start here\nQuestions\/Suggestions: Feel free about any questions or suggestions by pinging me at twitter @0xAX, adding an issue or just drop me an email.\nMailing List\nWe have a Google Group mailing list for learning the kernel source code. Here are some instructions about how to use it.\nJoin\nSend an email with any subject\/content to kernelhacking+subscribe@googlegroups.com. Then you will receive a confirmation email. Reply it with any content and then you are done.\n\nIf you have Google account, you can also open the archive page and click Apply to join group. You will be approved automatically.\n\nSend emails to mailing list\nJust send emails to kernelhacking@googlegroups.com. The basic usage is the same as other mailing lists powered by mailman.\nArchives\nhttps:\/\/groups.google.com\/forum\/#!forum\/kernelhacking\nSupport\nSupport If you like linux-insides you can support me with:\n \nOn other languages\n\nBrazilian Portuguese\nChinese\nJapanese\nKorean\nRussian\nSpanish\nTurkish\n\nDocker\nIn order to run own copy of the book with gitook within local container:\n\nBuild container image\ndocker image build \\\n    --rm --squash \\\n    --label linux-insides \\\n    --tag linux-insides-book:latest \\\n    -f Dockerfile\n\nCreate and run book in local container\ndocker run \\\n    --detach \\\n    --rm \\\n    -p 4000:4000 \\\n    --name linux-insides-book \\\n    --hostname linux-insides-book \\\n    localhost\/linux-insides-book\n\nOpen your local copy of linux insides book under this url\nhttp:\/\/127.0.0.1:4000\n\nContributions\nFeel free to create issues or pull-requests if you have any problems.\nPlease read CONTRIBUTING.md before pushing any changes.\n\nAuthor\n@0xAX\nLICENSE\nLicensed BY-NC-SA Creative Commons.\n","158":"Real-Time Voice Cloning\nThis repository is an implementation of Transfer Learning from Speaker Verification to\nMultispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. Feel free to check my thesis if you're curious or if you're looking for info I haven't documented. Mostly I would recommend giving a quick look to the figures beyond the introduction.\nSV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices.\nVideo demonstration (click the picture):\n\nPapers implemented\n\n\n\nURL\nDesignation\nTitle\nImplementation source\n\n\n\n\n1806.04558\nSV2TTS\nTransfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis\nThis repo\n\n\n1802.08435\nWaveRNN (vocoder)\nEfficient Neural Audio Synthesis\nfatchord\/WaveRNN\n\n\n1712.05884\nTacotron 2 (synthesizer)\nNatural TTS Synthesis by Conditioning Wavenet on Mel Spectrogram Predictions\nRayhane-mamah\/Tacotron-2\n\n\n1710.10467\nGE2E (encoder)\nGeneralized End-To-End Loss for Speaker Verification\nThis repo\n\n\n\nNews\n13\/11\/19: I'm now working full time and I will not maintain this repo anymore. To anyone who reads this:\n\nIf you just want to clone your voice (and not someone else's): I recommend our free plan on Resemble.AI. Firstly because you will get a better voice quality and less prosody errors, and secondly because it will not require a complex setup like this repo does.\nIf this is not your case: proceed with this repository, but be warned: not only is the environment a mess to setup, but you might end up being disappointed by the results. If you're planning to work on a serious project, my strong advice: find another TTS repo. Go here for more info.\n\n20\/08\/19: I'm working on resemblyzer, an independent package for the voice encoder. You can use your trained encoder models from this repo with it.\n06\/07\/19: Need to run within a docker container on a remote server? See here.\n25\/06\/19: Experimental support for low-memory GPUs (~2gb) added for the synthesizer. Pass --low_mem to demo_cli.py or demo_toolbox.py to enable it. It adds a big overhead, so it's not recommended if you have enough VRAM.\nSetup\n1. Install Requirements\nPython 3.6 or 3.7 is needed to run the toolbox.\n\nInstall PyTorch (>=1.0.1).\nInstall ffmpeg.\nRun pip install -r requirements.txt to install the remaining necessary packages.\n\n2. Download Pretrained Models\nDownload the latest here.\n3. (Optional) Test Configuration\nBefore you download any dataset, you can begin by testing your configuration with:\npython demo_cli.py\nIf all tests pass, you're good to go.\n4. (Optional) Download Datasets\nFor playing with the toolbox alone, I only recommend downloading LibriSpeech\/train-clean-100. Extract the contents as <datasets_root>\/LibriSpeech\/train-clean-100 where <datasets_root> is a directory of your choosing. Other datasets are supported in the toolbox, see here. You're free not to download any dataset, but then you will need your own data as audio files or you will have to record it with the toolbox.\n5. Launch the Toolbox\nYou can then try the toolbox:\npython demo_toolbox.py -d <datasets_root>\nor\npython demo_toolbox.py\ndepending on whether you downloaded any datasets. If you are running an X-server or if you have the error Aborted (core dumped), see this issue.\n6. (Optional) Enable GPU Support\nNote: Enabling GPU support is a lot of work. You will want to set this up if you are going to train your own models. Somebody took the time to make a better guide on how to install everything. I recommend using it.\nThis command installs additional GPU dependencies and recommended packages: pip install -r requirements_gpu.txt\nAdditionally, you will need to ensure GPU drivers are properly installed and that your CUDA version matches your PyTorch and Tensorflow installations.\n","159":"HanLP: Han Language Processing\nEnglish | 1.x\u7248 | \u8bba\u575b | docker\n\u9762\u5411\u751f\u4ea7\u73af\u5883\u7684\u591a\u8bed\u79cd\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\uff0c\u57fa\u4e8e TensorFlow 2.x\uff0c\u76ee\u6807\u662f\u666e\u53ca\u843d\u5730\u6700\u524d\u6cbf\u7684NLP\u6280\u672f\u3002HanLP\u5177\u5907\u529f\u80fd\u5b8c\u5584\u3001\u6027\u80fd\u9ad8\u6548\u3001\u67b6\u6784\u6e05\u6670\u3001\u8bed\u6599\u65f6\u65b0\u3001\u53ef\u81ea\u5b9a\u4e49\u7684\u7279\u70b9\u3002\u76ee\u524d\uff0c\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684HanLP 2.0\u6b63\u5904\u4e8ealpha\u6d4b\u8bd5\u9636\u6bb5\uff0c\u5c06\u7efc\u5408\u8fd9\u4e00\u5e74\u6765\u5927\u5bb6\u7684\u6279\u8bc4\u5efa\u8bae\uff0c\u4e8e\u5e74\u5e95\u53d1\u5e032.1\u7248\u3002Java\u7528\u6237\u8bf7\u4f7f\u75281.x\u5206\u652f \uff0c\u7ecf\u5178\u7a33\u5b9a\uff0c\u6c38\u4e45\u7ef4\u62a4\u3002RESTful API\u5df2\u7ecf\u4e0a\u7ebf\uff0c2.x\u6b63\u5f0f\u7248\u5c06\u652f\u6301\u5305\u62ecJava\u3001Python\u5728\u5185\u7684\u5f00\u53d1\u8bed\u8a00\u3002\nGitHub\u4ec5\u5728\u5468\u672b\u5904\u7406\u683c\u5f0f\u4e25\u8c28\u7684bug\uff0c\u6df1\u6050\u62db\u5f85\u4e0d\u5468\uff0c\u63d0\u95ee\u8bf7\u4e0a\u8774\u8776\u6548\u5e94\u4e92\u5e2e\u4e92\u52a9\u3002\n\u5b89\u88c5\npip install hanlp\n\u8981\u6c42Python 3.6\u4ee5\u4e0a\uff0c\u652f\u6301Windows\uff0c\u53ef\u4ee5\u5728CPU\u4e0a\u8fd0\u884c\uff0c\u63a8\u8350GPU\/TPU\u3002\n\u5feb\u901f\u4e0a\u624b\n\u5206\u8bcd\uff08\u4e2d\u6587\u5206\u8bcd\u3001\u4e2d\u6587\u65b7\u8a5e\u3001\u82f1\u6587\u5206\u8bcd\u3001\u4efb\u610f\u8bed\u79cd\u5206\u8bcd\uff09\n\u4f5c\u4e3a\u7ec8\u7aef\u7528\u6237\uff0c\u7b2c\u4e00\u6b65\u9700\u8981\u4ece\u78c1\u76d8\u6216\u7f51\u7edc\u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u6bd4\u5982\uff0c\u6b64\u5904\u7528\u4e24\u884c\u4ee3\u7801\u52a0\u8f7d\u4e00\u4e2a\u540d\u4e3a LARGE_ALBERT_BASE \u7684\u5206\u8bcd\u6a21\u578b\u3002\n>>> import hanlp\n>>> tokenizer = hanlp.load('LARGE_ALBERT_BASE')\nHanLP \u4f1a\u81ea\u52a8\u5c06 LARGE_ALBERT_BASE \u89e3\u6790\u4e3a\u4e00\u4e2aURL\uff0c\u7136\u540e\u81ea\u52a8\u4e0b\u8f7d\u5e76\u89e3\u538b\u3002\u7531\u4e8e\u5de8\u5927\u7684\u7528\u6237\u91cf\uff0c\u4e07\u4e00\u4e0b\u8f7d\u5931\u8d25\u8bf7\u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6216\u53c2\u8003\u63d0\u793a\u624b\u52a8\u4e0b\u8f7d\u3002\n\u4e00\u65e6\u6a21\u578b\u4e0b\u8f7d\u5b8c\u6bd5\uff0c\u5373\u53ef\u5c06tokenizer\u5f53\u6210\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff1a\n>>> tokenizer('\u5546\u54c1\u548c\u670d\u52a1')\n['\u5546\u54c1', '\u548c', '\u670d\u52a1']\n\u5982\u679c\u4f60\u8981\u5904\u7406\u82f1\u6587\uff0c\u4e00\u4e2a\u57fa\u4e8e\u89c4\u5219\u7684\u666e\u901a\u51fd\u6570\u5e94\u8be5\u8db3\u591f\u4e86\u3002\n>>> tokenizer = hanlp.utils.rules.tokenize_english\n>>> tokenizer(\"Don't go gentle into that good night.\")\n['Do', \"n't\", 'go', 'gentle', 'into', 'that', 'good', 'night', '.']\n\u5e76\u884c\n\u597d\u6d88\u606f\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u5f97\u66f4\u5feb\u3002\u5728\u6df1\u5ea6\u5b66\u4e60\u7684\u65f6\u4ee3\uff0c\u6279\u5904\u7406\u6700\u9ad8\u5e26\u6765batch_size\u7684\u52a0\u901f\u6bd4\u3002\u4f60\u53ef\u4ee5\u5e76\u884c\u5207\u5206\u591a\u4e2a\u53e5\u5b50\uff0c\u4ee3\u4ef7\u662f\u6d88\u8017\u66f4\u591aGPU\u663e\u5b58\u3002\n>>> tokenizer(['\u8428\u54c8\u592b\u8bf4\uff0c\u4f0a\u62c9\u514b\u5c06\u540c\u8054\u5408\u56fd\u9500\u6bc1\u4f0a\u62c9\u514b\u5927\u89c4\u6a21\u6740\u4f24\u6027\u6b66\u5668\u7279\u522b\u59d4\u5458\u4f1a\u7ee7\u7eed\u4fdd\u6301\u5408\u4f5c\u3002',\n               '\u4e0a\u6d77\u534e\u5b89\u5de5\u4e1a\uff08\u96c6\u56e2\uff09\u516c\u53f8\u8463\u4e8b\u957f\u8c2d\u65ed\u5149\u548c\u79d8\u4e66\u5f20\u665a\u971e\u6765\u5230\u7f8e\u56fd\u7ebd\u7ea6\u73b0\u4ee3\u827a\u672f\u535a\u7269\u9986\u53c2\u89c2\u3002',\n               'HanLP\u652f\u63f4\u81fa\u7063\u6b63\u9ad4\u3001\u9999\u6e2f\u7e41\u9ad4\uff0c\u5177\u6709\u65b0\u8a5e\u8fa8\u8b58\u80fd\u529b\u7684\u4e2d\u6587\u65b7\u8a5e\u7cfb\u7d71'])\n[['\u8428\u54c8\u592b', '\u8bf4', '\uff0c', '\u4f0a\u62c9\u514b', '\u5c06', '\u540c', '\u8054\u5408\u56fd', '\u9500\u6bc1', '\u4f0a\u62c9\u514b', '\u5927', '\u89c4\u6a21', '\u6740\u4f24\u6027', '\u6b66\u5668', '\u7279\u522b', '\u59d4\u5458\u4f1a', '\u7ee7\u7eed', '\u4fdd\u6301', '\u5408\u4f5c', '\u3002'], \n ['\u4e0a\u6d77', '\u534e\u5b89', '\u5de5\u4e1a', '\uff08', '\u96c6\u56e2', '\uff09', '\u516c\u53f8', '\u8463\u4e8b\u957f', '\u8c2d\u65ed\u5149', '\u548c', '\u79d8\u4e66', '\u5f20\u665a\u971e', '\u6765\u5230', '\u7f8e\u56fd', '\u7ebd\u7ea6', '\u73b0\u4ee3', '\u827a\u672f', '\u535a\u7269\u9986', '\u53c2\u89c2', '\u3002'], \n ['HanLP', '\u652f\u63f4', '\u81fa\u7063', '\u6b63\u9ad4', '\u3001', '\u9999\u6e2f', '\u7e41\u9ad4', '\uff0c', '\u5177\u6709', '\u65b0\u8a5e', '\u8fa8\u8b58', '\u80fd\u529b', '\u7684', '\u4e2d\u6587', '\u65b7\u8a5e', '\u7cfb\u7d71']]\n\u5c31\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4f60\u73b0\u5728\u5df2\u7ecf\u80fd\u591f\u5c06HanLP\u63d0\u4f9b\u7684\u6700\u65b0\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u5e94\u7528\u5230\u4f60\u7684\u7814\u7a76\u548c\u5de5\u4f5c\u4e2d\u4e86\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5c0f\u6280\u5de7\uff1a\n\n\n\u6253\u5370 hanlp.pretrained.ALL \u6765\u5217\u51faHanLP\u4e2d\u7684\u6240\u6709\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u6bd4\u5982\uff0cLARGE_ALBERT_BASE\u662f\u5728\u4e16\u754c\u4e0a\u6700\u5927\u76841\u4ebf\u5b57\u8bed\u6599\u5e93LARGE\u4e0a\u8bad\u7ec3\u7684ALBERT_BASE\u5206\u8bcd\u6a21\u578b\uff0c\u6bd4PKU*\u7cfb\u5217\u6a21\u578b\u6709\u8d28\u7684\u63d0\u5347\u3002\n\n\n\u53c2\u8003demo\u6302\u8f7d\u7528\u6237\u8bcd\u5178\uff0c\u6216\u5d4c\u5165\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5e94\u5bf9\u4f60\u7684\u4e1a\u52a1\u903b\u8f91\u3002\n\n\n\u4f7f\u7528 hanlp.pretrained.* \u6765\u5206\u95e8\u522b\u7c7b\u5730\u6d4f\u89c8\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u53d8\u91cf\u6765\u52a0\u8f7d\u6a21\u578b\u3002\n>>> hanlp.pretrained.cws.LARGE_ALBERT_BASE\n'https:\/\/file.hankcs.com\/hanlp\/cws\/large_cws_albert_base_20200828_011451.zip'\n\n\n\u8bcd\u6027\u6807\u6ce8\n\u8bcd\u6027\u6807\u6ce8\u5668\u7684\u8f93\u5165\u662f\u5355\u8bcd\uff0c\u8f93\u51fa\u662f\u6bcf\u4e2a\u5355\u8bcd\u7684\u8bcd\u6027\u6807\u7b7e\u3002\n>>> tagger = hanlp.load(hanlp.pretrained.pos.PTB_POS_RNN_FASTTEXT_EN)\n>>> tagger([['I', 'banked', '2', 'dollars', 'in', 'a', 'bank', '.'],\n            ['Is', 'this', 'the', 'future', 'of', 'chamber', 'music', '?']])\n[['PRP', 'VBD', 'CD', 'NNS', 'IN', 'DT', 'NN', '.'], \n ['VBZ', 'DT', 'DT', 'NN', 'IN', 'NN', 'NN', '.']]\n\u8bcd\u6027\u6807\u6ce8\u540c\u6837\u652f\u6301\u591a\u8bed\u79cd\uff0c\u53d6\u51b3\u4e8e\u4f60\u52a0\u8f7d\u7684\u662f\u54ea\u4e2a\u6a21\u578b\uff08\u6ce8\u610f\u53d8\u91cf\u540d\u540e\u9762\u7684EN\uff09\u3002\n>>> tagger = hanlp.load(hanlp.pretrained.pos.CTB9_POS_ALBERT_BASE)\n>>> tagger(['\u6211', '\u7684', '\u5e0c\u671b', '\u662f', '\u5e0c\u671b', '\u4e16\u754c', '\u548c\u5e73'])\n           ['PN', 'DEG', 'NN', 'VC', 'VV', 'NN', 'NN']\n\u6ce8\u610f\u5230\u53e5\u5b50\u4e2d\u4e24\u4e2a \u5e0c\u671b\u7684\u8bcd\u6027\u5404\u4e0d\u76f8\u540c\uff0c\u7b2c\u4e00\u4e2a\u662f\u540d\u8bcd\u800c\u7b2c\u4e8c\u4e2a\u662f\u52a8\u8bcd\u3002\u5173\u4e8e\u8bcd\u6027\u6807\u7b7e\uff0c\u8bf7\u53c2\u8003CTB\u6807\u8bb0\u89c4\u8303\uff0c\u6216\u7b49\u5f85\u6b63\u5f0f\u6587\u6863\u3002\u8fd9\u4e2a\u6807\u6ce8\u5668\u4f7f\u7528\u4e86fasttext[^fasttext] \u6216ALBERT\u4f5c\u4e3a\u5d4c\u5165\u5c42\uff0c\u6240\u4ee5\u514d\u75ab\u4e8eOOV\u3002\n\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\n\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6a21\u5757\u7684\u8f93\u5165\u662f\u5355\u8bcd\u5217\u8868\uff0c\u8f93\u51fa\u662f\u547d\u540d\u5b9e\u4f53\u7684\u8fb9\u754c\u548c\u7c7b\u522b\u3002\n>>> recognizer = hanlp.load(hanlp.pretrained.ner.CONLL03_NER_BERT_BASE_UNCASED_EN)\n>>> recognizer([\"President\", \"Obama\", \"is\", \"speaking\", \"at\", \"the\", \"White\", \"House\"])\n[('Obama', 'PER', 1, 2), ('White House', 'LOC', 6, 8)]\n\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u662f\u5b57\u7b26\u7ea7\u6a21\u578b\uff0c\u6240\u4ee5\u4e0d\u8981\u5fd8\u4e86\u7528 list\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u5217\u8868\u3002\u81f3\u4e8e\u8f93\u51fa\uff0c\u683c\u5f0f\u4e3a (entity, type, begin, end)\u3002\n>>> recognizer = hanlp.load(hanlp.pretrained.ner.MSRA_NER_BERT_BASE_ZH)\n>>> recognizer([list('\u4e0a\u6d77\u534e\u5b89\u5de5\u4e1a\uff08\u96c6\u56e2\uff09\u516c\u53f8\u8463\u4e8b\u957f\u8c2d\u65ed\u5149\u548c\u79d8\u4e66\u5f20\u665a\u971e\u6765\u5230\u7f8e\u56fd\u7ebd\u7ea6\u73b0\u4ee3\u827a\u672f\u535a\u7269\u9986\u53c2\u89c2\u3002'),\n                list('\u8428\u54c8\u592b\u8bf4\uff0c\u4f0a\u62c9\u514b\u5c06\u540c\u8054\u5408\u56fd\u9500\u6bc1\u4f0a\u62c9\u514b\u5927\u89c4\u6a21\u6740\u4f24\u6027\u6b66\u5668\u7279\u522b\u59d4\u5458\u4f1a\u7ee7\u7eed\u4fdd\u6301\u5408\u4f5c\u3002')])\n[[('\u4e0a\u6d77\u534e\u5b89\u5de5\u4e1a\uff08\u96c6\u56e2\uff09\u516c\u53f8', 'NT', 0, 12), ('\u8c2d\u65ed\u5149', 'NR', 15, 18), ('\u5f20\u665a\u971e', 'NR', 21, 24), ('\u7f8e\u56fd', 'NS', 26, 28), ('\u7ebd\u7ea6\u73b0\u4ee3\u827a\u672f\u535a\u7269\u9986', 'NS', 28, 37)], \n [('\u8428\u54c8\u592b', 'NR', 0, 3), ('\u4f0a\u62c9\u514b', 'NS', 5, 8), ('\u8054\u5408\u56fd\u9500\u6bc1\u4f0a\u62c9\u514b\u5927\u89c4\u6a21\u6740\u4f24\u6027\u6b66\u5668\u7279\u522b\u59d4\u5458\u4f1a', 'NT', 10, 31)]]\n\u8fd9\u91cc\u7684 MSRA_NER_BERT_BASE_ZH \u662f\u57fa\u4e8e BERT[^bert]\u7684\u6700\u51c6\u786e\u7684\u6a21\u578b\uff0c\u4f60\u53ef\u4ee5\u6d4f\u89c8\u8be5\u6a21\u578b\u7684\u8bc4\u6d4b\u6307\u6807\uff1a\n$ cat ~\/.hanlp\/ner\/ner_bert_base_msra_20200104_185735\/test.log \n20-01-04 18:55:02 INFO Evaluation results for test.tsv - loss: 1.4949 - f1: 0.9522 - speed: 113.37 sample\/sec \nprocessed 177342 tokens with 5268 phrases; found: 5316 phrases; correct: 5039.\naccuracy:  99.37%; precision:  94.79%; recall:  95.65%; FB1:  95.22\n               NR: precision:  96.39%; recall:  97.83%; FB1:  97.10  1357\n               NS: precision:  96.70%; recall:  95.79%; FB1:  96.24  2610\n               NT: precision:  89.47%; recall:  93.13%; FB1:  91.27  1349\n\u4f9d\u5b58\u53e5\u6cd5\u5206\u6790\n\u53e5\u6cd5\u5206\u6790\u662fNLP\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5728\u8bb8\u591a\u786c\u6d3e\u7684\u5b66\u8005\u548c\u9762\u8bd5\u5b98\u770b\u6765\uff0c\u4e0d\u61c2\u53e5\u6cd5\u5206\u6790\u7684\u4eba\u79f0\u4e0d\u4e0aNLP\u7814\u7a76\u8005\u6216\u5de5\u7a0b\u5e08\u3002\u7136\u800c\u901a\u8fc7HanLP\uff0c\u53ea\u9700\u4e24\u884c\u4ee3\u7801\u5373\u53ef\u5b8c\u6210\u53e5\u6cd5\u5206\u6790\u3002\n>>> syntactic_parser = hanlp.load(hanlp.pretrained.dep.PTB_BIAFFINE_DEP_EN)\n>>> print(syntactic_parser([('Is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('future', 'NN'), ('of', 'IN'), ('chamber', 'NN'), ('music', 'NN'), ('?', '.')]))\n1\tIs\t_\tVBZ\t_\t_\t4\tcop\t_\t_\n2\tthis\t_\tDT\t_\t_\t4\tnsubj\t_\t_\n3\tthe\t_\tDT\t_\t_\t4\tdet\t_\t_\n4\tfuture\t_\tNN\t_\t_\t0\troot\t_\t_\n5\tof\t_\tIN\t_\t_\t4\tprep\t_\t_\n6\tchamber\t_\tNN\t_\t_\t7\tnn\t_\t_\n7\tmusic\t_\tNN\t_\t_\t5\tpobj\t_\t_\n8\t?\t_\t.\t_\t_\t4\tpunct\t_\t_\n\u53e5\u6cd5\u5206\u6790\u5668\u7684\u8f93\u5165\u662f\u5355\u8bcd\u5217\u8868\u53ca\u8bcd\u6027\u5217\u8868\uff0c\u8f93\u51fa\u662f CoNLL-X \u683c\u5f0f[^conllx]\u7684\u53e5\u6cd5\u6811\uff0c\u7528\u6237\u53ef\u901a\u8fc7 CoNLLSentence \u7c7b\u6765\u64cd\u4f5c\u53e5\u6cd5\u6811\u3002\u4e00\u4e2a\u4e2d\u6587\u4f8b\u5b50:\n>>> syntactic_parser = hanlp.load(hanlp.pretrained.dep.CTB7_BIAFFINE_DEP_ZH)\n>>> print(syntactic_parser([('\u8721\u70db', 'NN'), ('\u4e24', 'CD'), ('\u5934', 'NN'), ('\u70e7', 'VV')]))\n1\t\u8721\u70db\t_\tNN\t_\t_\t4\tnsubj\t_\t_\n2\t\u4e24\t_\tCD\t_\t_\t3\tnummod\t_\t_\n3\t\u5934\t_\tNN\t_\t_\t4\tdep\t_\t_\n4\t\u70e7\t_\tVV\t_\t_\t0\troot\t_\t_\n\u5173\u4e8e\u53e5\u6cd5\u6807\u7b7e\uff0c\u8bf7\u53c2\u8003\u300a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5165\u95e8\u300b\u7b2c12\u7ae0\uff0c\u6216\u7b49\u5f85\u6b63\u5f0f\u6587\u6863\u3002\u6ce8\uff1a\u5f53\u524d\u7248\u672c\u6682\u672a\u5b9e\u73b0\u6811\u548c\u5355\u6e90\u7ea6\u675f\uff0c\u5df2\u7ecf\u57282.1\u7248\u672c\u91cc\u4fee\u590d\uff0c\u656c\u8bf7\u5173\u6ce8\u540e\u7eed\u53d1\u5e03\u3002\n\u8bed\u4e49\u4f9d\u5b58\u5206\u6790\n\u8bed\u4e49\u5206\u6790\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u79f0\u4e3a\u8bed\u4e49\u4f9d\u5b58\u56fe\uff08Semantic Dependency Graph\uff09\u3002\u56fe\u4e2d\u7684\u8282\u70b9\u4e3a\u5355\u8bcd\uff0c\u8fb9\u4e3a\u8bed\u4e49\u4f9d\u5b58\u5f27\uff0c\u8fb9\u4e0a\u7684\u6807\u7b7e\u4e3a\u8bed\u4e49\u5173\u7cfb\u3002\n>>> semantic_parser = hanlp.load(hanlp.pretrained.sdp.SEMEVAL15_PAS_BIAFFINE_EN)\n>>> print(semantic_parser([('Is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('future', 'NN'), ('of', 'IN'), ('chamber', 'NN'), ('music', 'NN'), ('?', '.')]))\n1\tIs\t_\tVBZ\t_\t_\t0\tROOT\t_\t_\n2\tthis\t_\tDT\t_\t_\t1\tverb_ARG1\t_\t_\n3\tthe\t_\tDT\t_\t_\t0\tROOT\t_\t_\n4\tfuture\t_\tNN\t_\t_\t1\tverb_ARG2\t_\t_\n4\tfuture\t_\tNN\t_\t_\t3\tdet_ARG1\t_\t_\n4\tfuture\t_\tNN\t_\t_\t5\tprep_ARG1\t_\t_\n5\tof\t_\tIN\t_\t_\t0\tROOT\t_\t_\n6\tchamber\t_\tNN\t_\t_\t0\tROOT\t_\t_\n7\tmusic\t_\tNN\t_\t_\t5\tprep_ARG2\t_\t_\n7\tmusic\t_\tNN\t_\t_\t6\tnoun_ARG1\t_\t_\n8\t?\t_\t.\t_\t_\t0\tROOT\t_\t_\nHanLP\u5b9e\u73b0\u4e86\u6700\u5148\u8fdb\u7684biaffine[^biaffine] \u6a21\u578b\uff0c\u652f\u6301\u4efb\u610f\u8bed\u79cd\uff08\u9700\u81ea\u884c\u8bad\u7ec3\uff0c\u6216\u7b49\u5f852.1\u53d1\u5e03\u9884\u8bad\u7ec3\u6a21\u578b\uff09\u7684\u8bed\u4e49\u4f9d\u5b58\u5206\u6790\uff1a\n>>> semantic_parser = hanlp.load(hanlp.pretrained.sdp.SEMEVAL16_NEWS_BIAFFINE_ZH)\n>>> print(semantic_parser([('\u8721\u70db', 'NN'), ('\u4e24', 'CD'), ('\u5934', 'NN'), ('\u70e7', 'VV')]))\n1\t\u8721\u70db\t_\tNN\t_\t_\t3\tPoss\t_\t_\n1\t\u8721\u70db\t_\tNN\t_\t_\t4\tPat\t_\t_\n2\t\u4e24\t_\tCD\t_\t_\t3\tQuan\t_\t_\n3\t\u5934\t_\tNN\t_\t_\t4\tLoc\t_\t_\n4\t\u70e7\t_\tVV\t_\t_\t0\tRoot\t_\t_\n\u8f93\u51fa\u4f9d\u7136\u662f CoNLLSentence \u683c\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u662f\u4e00\u4e2a\u56fe\uff0c\u56fe\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u6709\u96f6\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u4e2d\u5fc3\u8bcd\uff0c\u6bd4\u5982 \u8721\u70db \u6709\u4e24\u4e2a\u4e2d\u5fc3\u8bcd (ID 3 \u548c 4)\u3002\u8bed\u4e49\u4f9d\u5b58\u5173\u7cfb\u53ef\u53c2\u8003\u300a\u4e2d\u6587\u8bed\u4e49\u4f9d\u5b58\u5206\u6790\u8bed\u6599\u5e93\u300b\uff0c\u6216\u7b49\u5f85\u6b63\u5f0f\u6587\u6863\u3002\u6ce8\uff1a\u5f53\u524d\u7248\u672c\u6682\u672a\u5b9e\u73b0\u5355\u6e90\u8fde\u901a\u7b49\u7ea6\u675f\uff0c\u60ac\u5b64\u8282\u70b9\u5c06\u8fde\u63a5\u5230ROOT\u4e0a\uff0c\u5df2\u7ecf\u57282.1\u7248\u672c\u91cc\u4fee\u590d\uff0c\u656c\u8bf7\u5173\u6ce8\u540e\u7eed\u53d1\u5e03\u3002\n\u6d41\u6c34\u7ebf\n\u65e2\u7136\u53e5\u6cd5\u548c\u8bed\u4e49\u5206\u6790\u4f9d\u8d56\u4e8e\u8bcd\u6027\u6807\u6ce8\uff0c\u800c\u8bcd\u6027\u6807\u6ce8\u53c8\u4f9d\u8d56\u4e8e\u5206\u8bcd\u3002\u5982\u679c\u6709\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u8ba1\u7b97\u56fe\u7684\u673a\u5236\u81ea\u52a8\u5c06\u8fd9\u4e9b\u6a21\u5757\u4e32\u8054\u8d77\u6765\u5c31\u597d\u4e86\u3002HanLP\u8bbe\u8ba1\u7684\u6d41\u6c34\u7ebf\u53ef\u4ee5\u7075\u6d3b\u5730\u5c06\u591a\u4e2a\u7ec4\u4ef6\uff08\u7edf\u8ba1\u6a21\u578b\u6216\u89c4\u5219\u7cfb\u7edf\uff09\u7ec4\u88c5\u8d77\u6765\uff1a\npipeline = hanlp.pipeline() \\\n    .append(hanlp.utils.rules.split_sentence, output_key='sentences') \\\n    .append(tokenizer, output_key='tokens') \\\n    .append(tagger, output_key='part_of_speech_tags') \\\n    .append(syntactic_parser, input_key=('tokens', 'part_of_speech_tags'), output_key='syntactic_dependencies') \\\n    .append(semantic_parser, input_key=('tokens', 'part_of_speech_tags'), output_key='semantic_dependencies')\n\u6ce8\u610f\u6d41\u6c34\u7ebf\u7684\u7b2c\u4e00\u7ea7\u7ba1\u9053\u662f\u4e00\u4e2a\u666e\u901a\u7684Python\u51fd\u6570 split_sentence\uff0c\u7528\u6765\u5c06\u6587\u672c\u62c6\u5206\u4e3a\u53e5\u5b50\u3002\u800cinput_key\u548coutput_key\u6307\u5b9a\u4e86\u8fd9\u4e9b\u7ba1\u9053\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u6761\u6d41\u6c34\u7ebf\u6253\u5370\u51fa\u6765\u89c2\u5bdf\u5b83\u7684\u7ed3\u6784\uff1a\n>>> pipeline\n[None->LambdaComponent->sentences, sentences->NgramConvTokenizer->tokens, tokens->RNNPartOfSpeechTagger->part_of_speech_tags, ('tokens', 'part_of_speech_tags')->BiaffineDependencyParser->syntactic_dependencies, ('tokens', 'part_of_speech_tags')->BiaffineSemanticDependencyParser->semantic_dependencies]\n\u8fd9\u6b21\uff0c\u5c31\u50cf\u4f60\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6700\u5e38\u89c1\u7684\u573a\u666f\u4e00\u6837\uff0c\u6211\u4eec\u4e00\u6b21\u6027\u8f93\u5165\u4e00\u6574\u7bc7\u6587\u7ae0 text\uff1a\n>>> print(pipeline(text))\n{\n  \"sentences\": [\n    \"Jobs and Wozniak co-founded Apple in 1976 to sell Wozniak's Apple I personal computer.\",\n    \"Together the duo gained fame and wealth a year later with the Apple II.\"\n  ],\n  \"tokens\": [\n    [\"Jobs\", \"and\", \"Wozniak\", \"co-founded\", \"Apple\", \"in\", \"1976\", \"to\", \"sell\", \"Wozniak\", \"'s\", \"\", \"Apple\", \"I\", \"personal\", \"computer\", \".\"],\n    [\"Together\", \"the\", \"duo\", \"gained\", \"fame\", \"and\", \"wealth\", \"a\", \"year\", \"later\", \"with\", \"the\", \"Apple\", \"II\", \".\"]\n  ],\n  \"part_of_speech_tags\": [\n    [\"NNS\", \"CC\", \"NNP\", \"VBD\", \"NNP\", \"IN\", \"CD\", \"TO\", \"VB\", \"NNP\", \"POS\", \"``\", \"NNP\", \"PRP\", \"JJ\", \"NN\", \".\"],\n    [\"IN\", \"DT\", \"NN\", \"VBD\", \"NN\", \"CC\", \"NN\", \"DT\", \"NN\", \"RB\", \"IN\", \"DT\", \"NNP\", \"NNP\", \".\"]\n  ],\n  \"syntactic_dependencies\": [\n    [[4, \"nsubj\"], [1, \"cc\"], [1, \"conj\"], [0, \"root\"], [4, \"dobj\"], [4, \"prep\"], [6, \"pobj\"], [9, \"aux\"], [4, \"xcomp\"], [16, \"poss\"], [10, \"possessive\"], [16, \"punct\"], [16, \"nn\"], [16, \"nn\"], [16, \"amod\"], [9, \"dobj\"], [4, \"punct\"]],\n    [[4, \"advmod\"], [3, \"det\"], [4, \"nsubj\"], [0, \"root\"], [4, \"dobj\"], [5, \"cc\"], [5, \"conj\"], [9, \"det\"], [10, \"npadvmod\"], [4, \"advmod\"], [4, \"prep\"], [14, \"det\"], [14, \"nn\"], [11, \"pobj\"], [4, \"punct\"]]\n  ],\n  \"semantic_dependencies\": [\n    [[[2], [\"coord_ARG1\"]], [[4, 9], [\"verb_ARG1\", \"verb_ARG1\"]], [[2], [\"coord_ARG2\"]], [[6, 8], [\"prep_ARG1\", \"comp_MOD\"]], [[4], [\"verb_ARG2\"]], [[0], [\"ROOT\"]], [[6], [\"prep_ARG2\"]], [[0], [\"ROOT\"]], [[8], [\"comp_ARG1\"]], [[11], [\"poss_ARG2\"]], [[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[9, 11, 12, 14, 15], [\"verb_ARG3\", \"poss_ARG1\", \"punct_ARG1\", \"noun_ARG1\", \"adj_ARG1\"]], [[0], [\"ROOT\"]]],\n    [[[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[1, 2, 4], [\"adj_ARG1\", \"det_ARG1\", \"verb_ARG1\"]], [[1, 10], [\"adj_ARG1\", \"adj_ARG1\"]], [[6], [\"coord_ARG1\"]], [[4], [\"verb_ARG2\"]], [[6], [\"coord_ARG2\"]], [[0], [\"ROOT\"]], [[8], [\"det_ARG1\"]], [[9], [\"noun_ARG1\"]], [[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[0], [\"ROOT\"]], [[11, 12, 13], [\"prep_ARG2\", \"det_ARG1\", \"noun_ARG1\"]], [[0], [\"ROOT\"]]]\n  ]\n}\n\u4e2d\u6587\u5904\u7406\u548c\u82f1\u6587\u4e00\u6a21\u4e00\u6837\uff0c\u4e8b\u5b9e\u4e0a\uff0cHanLP2.x\u8ba4\u4e3a\u6240\u6709\u4eba\u7c7b\u8bed\u8a00\u90fd\u662f\u7edf\u4e00\u7684\u7b26\u53f7\u7cfb\u7edf\uff1a\n>>> print(pipeline(text))\n{\n  \"sentences\": [\n    \"HanLP\u662f\u4e00\u7cfb\u5217\u6a21\u578b\u4e0e\u7b97\u6cd5\u7ec4\u6210\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\uff0c\u76ee\u6807\u662f\u666e\u53ca\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5e94\u7528\u3002\",\n    \"HanLP\u5177\u5907\u529f\u80fd\u5b8c\u5584\u3001\u6027\u80fd\u9ad8\u6548\u3001\u67b6\u6784\u6e05\u6670\u3001\u8bed\u6599\u65f6\u65b0\u3001\u53ef\u81ea\u5b9a\u4e49\u7684\u7279\u70b9\u3002\",\n    \"\u5185\u90e8\u7b97\u6cd5\u7ecf\u8fc7\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u8003\u9a8c\uff0c\u914d\u5957\u4e66\u7c4d\u300a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5165\u95e8\u300b\u5df2\u7ecf\u51fa\u7248\u3002\"\n  ],\n  \"tokens\": [\n    [\"HanLP\", \"\u662f\", \"\u4e00\", \"\u7cfb\u5217\", \"\u6a21\u578b\", \"\u4e0e\", \"\u7b97\u6cd5\", \"\u7ec4\u6210\", \"\u7684\", \"\u81ea\u7136\", \"\u8bed\u8a00\", \"\u5904\u7406\", \"\u5de5\u5177\u5305\", \"\uff0c\", \"\u76ee\u6807\", \"\u662f\", \"\u666e\u53ca\", \"\u81ea\u7136\", \"\u8bed\u8a00\", \"\u5904\u7406\", \"\u5728\", \"\u751f\u4ea7\", \"\u73af\u5883\", \"\u4e2d\", \"\u7684\", \"\u5e94\u7528\", \"\u3002\"],\n    [\"HanLP\", \"\u5177\u5907\", \"\u529f\u80fd\", \"\u5b8c\u5584\", \"\u3001\", \"\u6027\u80fd\", \"\u9ad8\u6548\", \"\u3001\", \"\u67b6\u6784\", \"\u6e05\u6670\", \"\u3001\", \"\u8bed\u6599\", \"\u65f6\", \"\u65b0\", \"\u3001\", \"\u53ef\", \"\u81ea\", \"\u5b9a\u4e49\", \"\u7684\", \"\u7279\u70b9\", \"\u3002\"],\n    [\"\u5185\u90e8\", \"\u7b97\u6cd5\", \"\u7ecf\u8fc7\", \"\u5de5\u4e1a\u754c\", \"\u548c\", \"\u5b66\u672f\u754c\", \"\u8003\u9a8c\", \"\uff0c\", \"\u914d\u5957\", \"\u4e66\u7c4d\", \"\u300a\", \"\u81ea\u7136\", \"\u8bed\u8a00\", \"\u5904\u7406\", \"\u5165\u95e8\", \"\u300b\", \"\u5df2\u7ecf\", \"\u51fa\u7248\", \"\u3002\"]\n  ],\n  \"part_of_speech_tags\": [\n    [\"NR\", \"VC\", \"CD\", \"M\", \"NN\", \"CC\", \"NN\", \"VV\", \"DEC\", \"NN\", \"NN\", \"VV\", \"NN\", \"PU\", \"NN\", \"VC\", \"VV\", \"NN\", \"NN\", \"VV\", \"P\", \"NN\", \"NN\", \"LC\", \"DEG\", \"NN\", \"PU\"],\n    [\"NR\", \"VV\", \"NN\", \"VA\", \"PU\", \"NN\", \"VA\", \"PU\", \"NN\", \"VA\", \"PU\", \"NN\", \"LC\", \"VA\", \"PU\", \"VV\", \"P\", \"VV\", \"DEC\", \"NN\", \"PU\"],\n    [\"NN\", \"NN\", \"P\", \"NN\", \"CC\", \"NN\", \"NN\", \"PU\", \"VV\", \"NN\", \"PU\", \"NN\", \"NN\", \"NN\", \"NN\", \"PU\", \"AD\", \"VV\", \"PU\"]\n  ],\n  \"syntactic_dependencies\": [\n    [[2, \"top\"], [0, \"root\"], [4, \"nummod\"], [11, \"clf\"], [7, \"conj\"], [7, \"cc\"], [8, \"nsubj\"], [11, \"rcmod\"], [8, \"cpm\"], [11, \"nn\"], [12, \"nsubj\"], [2, \"ccomp\"], [12, \"dobj\"], [2, \"punct\"], [16, \"top\"], [2, \"conj\"], [16, \"ccomp\"], [19, \"nn\"], [20, \"nsubj\"], [17, \"conj\"], [26, \"assmod\"], [23, \"nn\"], [24, \"lobj\"], [21, \"plmod\"], [21, \"assm\"], [20, \"dobj\"], [2, \"punct\"]],\n    [[2, \"nsubj\"], [0, \"root\"], [4, \"nsubj\"], [20, \"rcmod\"], [4, \"punct\"], [7, \"nsubj\"], [4, \"conj\"], [4, \"punct\"], [10, \"nsubj\"], [4, \"conj\"], [4, \"punct\"], [13, \"lobj\"], [14, \"loc\"], [4, \"conj\"], [4, \"punct\"], [18, \"mmod\"], [18, \"advmod\"], [4, \"conj\"], [4, \"cpm\"], [2, \"dobj\"], [2, \"punct\"]],\n    [[2, \"nn\"], [18, \"nsubj\"], [18, \"prep\"], [6, \"conj\"], [6, \"cc\"], [7, \"nn\"], [3, \"pobj\"], [18, \"punct\"], [10, \"rcmod\"], [15, \"nn\"], [15, \"punct\"], [15, \"nn\"], [15, \"nn\"], [15, \"nn\"], [18, \"nsubj\"], [15, \"punct\"], [18, \"advmod\"], [0, \"root\"], [18, \"punct\"]]\n  ],\n  \"semantic_dependencies\": [\n    [[[2], [\"Exp\"]], [[0], [\"Aft\"]], [[4], [\"Quan\"]], [[0], [\"Aft\"]], [[8], [\"Poss\"]], [[7], [\"mConj\"]], [[8], [\"Datv\"]], [[11], [\"rProd\"]], [[8], [\"mAux\"]], [[11], [\"Desc\"]], [[12], [\"Datv\"]], [[2], [\"dClas\"]], [[2, 12], [\"Clas\", \"Cont\"]], [[2, 12], [\"mPunc\", \"mPunc\"]], [[16], [\"Exp\"]], [[17], [\"mMod\"]], [[2], [\"eSucc\"]], [[19], [\"Desc\"]], [[20], [\"Pat\"]], [[26], [\"rProd\"]], [[23], [\"mPrep\"]], [[23], [\"Desc\"]], [[20], [\"Loc\"]], [[23], [\"mRang\"]], [[0], [\"Aft\"]], [[16], [\"Clas\"]], [[16], [\"mPunc\"]]],\n    [[[2], [\"Poss\"]], [[0], [\"Aft\"]], [[4], [\"Exp\"]], [[0], [\"Aft\"]], [[4], [\"mPunc\"]], [[0], [\"Aft\"]], [[4], [\"eCoo\"]], [[4, 7], [\"mPunc\", \"mPunc\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]], [[7, 10], [\"mPunc\", \"mPunc\"]], [[0], [\"Aft\"]], [[12], [\"mTime\"]], [[0], [\"Aft\"]], [[14], [\"mPunc\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]], [[20], [\"Desc\"]], [[18], [\"mAux\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]]],\n    [[[2], [\"Desc\"]], [[7, 9, 18], [\"Exp\", \"Agt\", \"Exp\"]], [[4], [\"mPrep\"]], [[0], [\"Aft\"]], [[6], [\"mPrep\"]], [[7], [\"Datv\"]], [[0], [\"Aft\"]], [[7], [\"mPunc\"]], [[7], [\"eCoo\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]], [[13], [\"Desc\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]], [[0], [\"Aft\"]], [[18], [\"mTime\"]], [[0], [\"Aft\"]], [[18], [\"mPunc\"]]]\n  ]\n}\n\u8f93\u51fa\u4e3a\u4e00\u4e2ajson\u5316\u7684 dict\uff0c\u5927\u90e8\u5206\u7528\u6237\u5e94\u5f53\u5f88\u719f\u6089\u3002\n\n\u8bf7\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u548c\u521b\u9020\u529b\uff0c\u5728\u6d41\u6c34\u7ebf\u4e2d\u52a0\u5165\u66f4\u591a\u9884\u5904\u7406\u548c\u540e\u5904\u7406\u7ba1\u9053\uff08\u5305\u62ec\u8bcd\u5178\u3001\u6b63\u5219\u7b49\uff09\u3002\u8bb0\u4f4f\uff0c\u4efb\u610f\u666e\u901a\u7684Python\u51fd\u6570\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u7ea7\u7ba1\u9053\u3002\n\u4f7f\u7528 pipeline.save('zh.json') \u5c06\u6d41\u6c34\u7ebf\u5e8f\u5217\u5316\u5e76\u90e8\u7f72\u5230\u751f\u4ea7\u670d\u52a1\u5668\u3002\n\u6d41\u6c34\u7ebf\u7684\u4f18\u52bf\u5728\u4e8e\u53ef\u7075\u6d3b\u7ec4\u5408\u6240\u9700\u7ec4\u4ef6\uff0c\u52a3\u52bf\u5728\u4e8e\u8bef\u5dee\u4f20\u64ad\u548c\u6267\u884c\u6548\u7387\uff0c2.1\u7248\u672c\u5c06\u63d0\u4f9b\u8054\u5408\u5b66\u4e60\u6846\u67b6\u3002\n\n\u8bad\u7ec3\u4f60\u81ea\u5df1\u7684\u6a21\u578b\n\u5199\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u4e00\u70b9\u90fd\u4e0d\u96be\uff0c\u96be\u7684\u662f\u590d\u73b0\u8f83\u9ad8\u7684\u51c6\u786e\u7387\u3002\u4e0b\u5217\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728MSR\u8bed\u6599\u5e93\u4e0a\u8bad\u7ec3\u4e00\u4e2a 97% F1 \u7684\u4e2d\u6587\u5206\u8bcd\u6a21\u578b\u3002\ntokenizer = NgramConvTokenizer()\nsave_dir = 'data\/model\/cws\/convseg-msr-nocrf-noembed'\ntokenizer.fit(SIGHAN2005_MSR_TRAIN,\n              SIGHAN2005_MSR_VALID,\n              save_dir,\n              word_embed={'class_name': 'HanLP>Word2VecEmbedding',\n                          'config': {\n                              'trainable': True,\n                              'filepath': CONVSEG_W2V_NEWS_TENSITE_CHAR,\n                              'expand_vocab': False,\n                              'lowercase': False,\n                          }},\n              optimizer=tf.keras.optimizers.Adam(learning_rate=0.001,\n                                                 epsilon=1e-8, clipnorm=5),\n              epochs=100,\n              window_size=0,\n              metrics='f1',\n              weight_norm=True)\ntokenizer.evaluate(SIGHAN2005_MSR_TEST, save_dir=save_dir)\n\u8bad\u7ec3\u65e5\u5fd7\uff08\u6a21\u578b\u4fdd\u5b58\u8def\u5f84\u4e0b\u7684train.log\uff09\u548c\u8bc4\u6d4b\uff08test.log\uff09\u65e5\u5fd7\u5982\u4e0b\u6240\u793a\u3002\nTrain for 783 steps, validate for 87 steps\nEpoch 1\/100\n783\/783 [==============================] - 177s 226ms\/step - loss: 15.6354 - f1: 0.8506 - val_loss: 9.9109 - val_f1: 0.9081\nEpoch 2\/100\n236\/783 [========>.....................] - ETA: 1:41 - loss: 9.0359 - f1: 0.9126\n...\n19-12-28 20:55:59 INFO Trained 100 epochs in 3 h 55 m 42 s, each epoch takes 2 m 21 s\n19-12-28 20:56:06 INFO Evaluation results for msr_test_gold.utf8 - loss: 3.6579 - f1: 0.9715 - speed: 1173.80 sample\/sec\n\n\u7c7b\u4f3c\u5730\uff0c\u4f60\u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u60c5\u611f\u5206\u6790\u6a21\u578b\u6765\u5224\u65ad\u9152\u5e97\u8bc4\u8bba\u7684\u60c5\u611f\u6781\u6027\u3002\nsave_dir = 'data\/model\/classification\/chnsenticorp_bert_base'\nclassifier = TransformerClassifier(TransformerTextTransform(y_column=0))\nclassifier.fit(CHNSENTICORP_ERNIE_TRAIN, CHNSENTICORP_ERNIE_VALID, save_dir,\n               transformer='chinese_L-12_H-768_A-12')\nclassifier.load(save_dir)\nprint(classifier('\u524d\u53f0\u5ba2\u623f\u670d\u52a1\u6001\u5ea6\u975e\u5e38\u597d\uff01\u65e9\u9910\u5f88\u4e30\u5bcc\uff0c\u623f\u4ef7\u5f88\u5e72\u51c0\u3002\u518d\u63a5\u518d\u5389\uff01'))\nclassifier.evaluate(CHNSENTICORP_ERNIE_TEST, save_dir=save_dir)\n\u7531\u4e8e\u8bed\u6599\u5e93\u4e00\u822c\u9886\u57df\u76f8\u5173\uff0c\u4e14BERT\u6a21\u578b\u4f53\u79ef\u8f83\u5927\uff0cHanLP\u4e0d\u51c6\u5907\u53d1\u5e03\u90a3\u4e48\u591a\u9884\u8bad\u7ec3\u6587\u672c\u5206\u7c7b\u6a21\u578b\u3002\n\u6b32\u4e86\u89e3\u66f4\u591a\u8bad\u7ec3\u811a\u672c\uff0c\u8bf7\u53c2\u8003 tests\/train\u3002\u66f4\u591a\u7684\u4f7f\u7528\u6848\u4f8b\u53ef\u4ee5\u5728 tests\/demo\u4e2d\u627e\u5230\u3002\u6587\u6863\uff0cRESTful API\u90fd\u5728\u5f00\u53d1\u4e2d\u3002\nalpha\u6d4b\u8bd5\u7248\u672c\u95ee\u9898\u4e0d\u5c11\uff0c\u6b22\u8fce\u5927\u5bb6\u70ed\u70c8\u6279\u8bc4\u30022.1\u7248\u672c\u9884\u8ba1\u4e8e\u5e74\u5e95\u53d1\u5e03\uff0c\u6b22\u8fce\u8e0a\u8dc3\u63d0\u51fa\u610f\u89c1\u3002\u8c22\u8c22\u652f\u6301\u3002\n\u5f15\u7528\n\u5982\u679c\u4f60\u5728\u7814\u7a76\u4e2d\u4f7f\u7528\u4e86HanLP\uff0c\u8bf7\u6309\u5982\u4e0b\u683c\u5f0f\u5f15\u7528\uff1a\n@software{hanlp2,\n  author = {Han He},\n  title = {{HanLP: Han Language Processing}},\n  year = {2020},\n  url = {https:\/\/github.com\/hankcs\/HanLP},\n}\nLicense\nHanLP \u7684\u6388\u6743\u534f\u8bae\u4e3a Apache License 2.0\uff0c\u53ef\u514d\u8d39\u7528\u505a\u5546\u4e1a\u7528\u9014\u3002\u8bf7\u5728\u4ea7\u54c1\u8bf4\u660e\u4e2d\u9644\u52a0HanLP\u7684\u94fe\u63a5\u548c\u6388\u6743\u534f\u8bae\u3002HanLP\u53d7\u7248\u6743\u6cd5\u4fdd\u62a4\uff0c\u4fb5\u6743\u5fc5\u7a76\u3002\n\u81ea\u7136\u8bed\u4e49\uff08\u9752\u5c9b\uff09\u79d1\u6280\u6709\u9650\u516c\u53f8\nHanLP\u4ecev1.7\u7248\u8d77\u72ec\u7acb\u8fd0\u4f5c\uff0c\u7531\u81ea\u7136\u8bed\u4e49\uff08\u9752\u5c9b\uff09\u79d1\u6280\u6709\u9650\u516c\u53f8\u4f5c\u4e3a\u9879\u76ee\u4e3b\u4f53\uff0c\u4e3b\u5bfc\u540e\u7eed\u7248\u672c\u7684\u5f00\u53d1\uff0c\u5e76\u62e5\u6709\u540e\u7eed\u7248\u672c\u7684\u7248\u6743\u3002\n\u5927\u5feb\u641c\u7d22\nHanLP v1.3~v1.65\u7248\u7531\u5927\u5feb\u641c\u7d22\u4e3b\u5bfc\u5f00\u53d1\uff0c\u7ee7\u7eed\u5b8c\u5168\u5f00\u6e90\uff0c\u5927\u5feb\u641c\u7d22\u62e5\u6709\u76f8\u5173\u7248\u6743\u3002\n\u4e0a\u6d77\u6797\u539f\u516c\u53f8\nHanLP \u65e9\u671f\u5f97\u5230\u4e86\u4e0a\u6d77\u6797\u539f\u516c\u53f8\u7684\u5927\u529b\u652f\u6301\uff0c\u5e76\u62e5\u67091.28\u53ca\u524d\u5e8f\u7248\u672c\u7684\u7248\u6743\uff0c\u76f8\u5173\u7248\u672c\u4e5f\u66fe\u5728\u4e0a\u6d77\u6797\u539f\u516c\u53f8\u7f51\u7ad9\u53d1\u5e03\u3002\nReferences\n[^fasttext]:\tA. Joulin, E. Grave, P. Bojanowski, and T. Mikolov, \u201cBag of Tricks for Efficient Text Classification,\u201d vol. cs.CL. 07-Jul-2016.\n[^bert]: J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova, \u201cBERT: Pre-training of Deep Bidirectional Transformers for Language Understanding,\u201d arXiv.org, vol. cs.CL. 10-Oct-2018.bert\u00a0\n[^biaffine]: T. Dozat and C. D. Manning, \u201cDeep Biaffine Attention for Neural Dependency Parsing.,\u201d ICLR, 2017.\n[^conllx]: Buchholz, S., & Marsi, E. (2006, June). CoNLL-X shared task on multilingual dependency parsing. In Proceedings of the tenth conference on computational natural language learning (pp. 149-164). Association for Computational Linguistics.\n","160":"\n\nDeepFaceLab\n\n\nhttps:\/\/arxiv.org\/abs\/2005.05535\nthe leading software for creating deepfakes\n\n\n\n\n\n\n\n\nMore than 95% of deepfake videos are created with DeepFaceLab.\nDeepFaceLab is used by such popular youtube channels as\n\n\n\n VFXChris Ume\n Sham00k\n\n\n\n\n\n\n Collider videos\n iFake\n\n\n\n\n\n\n NextFace\n Futuring Machine\n RepresentUS\n\n\n\n\n\nWhat can I do using DeepFaceLab?\n\n\nReplace the face\n\n\n\nDe-age the face\n\n\n\n\n\n\n\n\n https:\/\/www.youtube.com\/watch?v=Ddx5B-84ebo\n\n\nReplace the head\n\n\n\n\n\n\n\n\n https:\/\/www.youtube.com\/watch?v=xr5FHd0AdlQ\n\n\n\n\n\n\n\n\n https:\/\/www.youtube.com\/watch?v=RTjgkhMugVw\n\n\n\n\n\n\n\n\n https:\/\/www.youtube.com\/watch?v=R9f7WD0gKPo\n\n\nManipulate politicians speech\n(requires a skill in video editors such as Adobe After Effects or Davinci Resolve)\n\n https:\/\/www.youtube.com\/watch?v=2Z1oA3GYPaY\n\n https:\/\/www.youtube.com\/watch?v=sbFHhpYU15w\n\n https:\/\/www.youtube.com\/watch?v=ERQlaJ_czHU\n\n\nDeepfake native resolution progress\n\n\n\n\n\n\nUnfortunately, there is no \"make everything ok\" button in DeepFaceLab. You should spend time studying the workflow and growing your skills. A skill in programs such as AfterEffects or Davinci Resolve is also desirable.\n\n\nMini tutorial\n\n\n\n\n\nReleases\n\n\nWindows (magnet link)\nLast release. Use torrent client to download.\n\nWindows (Mega.nz)\nContains new and prev releases.\n\nGoogle Colab (github)\nby @chervonij . You can train fakes for free using Google Colab.\n\nLinux (github)\nby @nagadit\n\nCentOS Linux (github)\nMay be outdated. By @elemantalcode\n\n\n\nLinks\n\n\nGuides and tutorials\n\n\nDeepFaceLab guide\nMain guide\n\nFaceset creation guide\nHow to create the right faceset\n\nGoogle Colab guide\nGuide how to train the fake on Google Colab\n\nCompositing\nTo achieve the highest quality, compose deepfake manually in video editors such as Davinci Resolve or Adobe AfterEffects\n\nDiscussion and suggestions\n\n\nSupplementary material\n\n\nReady to work facesets\nCelebrity facesets made by community\n\nPretrained models\nPretrained models made by community\n\nCommunication groups\n\n\nreddit r\/RUdeepfakes\/\n\u041f\u043e\u0441\u0442\u0438\u043c \u0440\u0443\u0441\u0441\u043a\u0438\u0435 \u0434\u0438\u043f\u0444\u0435\u0439\u043a\u0438 \u0441\u044e\u0434\u0430 !\n\n\u0420\u0443\u0441\u0441\u043a\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e\n\n\ntelegram (English \/ \u0420\u0443\u0441\u0441\u043a\u0438\u0439)\nDon't forget to hide your phone number\n\ntelegram (English only)\nDon't forget to hide your phone number\n\nmrdeepfakes\nthe biggest NSFW English community\n\nreddit r\/GifFakes\/\nPost your deepfakes there !\n\nreddit r\/SFWdeepfakes\/\nPost your deepfakes there !\n\nQQ 951138799\n\u4e2d\u6587 Chinese QQ group for ML\/AI experts\n\ndeepfaker.xyz\n\u4e2d\u6587\u5b66\u4e60\u7ad9\uff08\u975e\u5b98\u65b9)\n\n\n\nHow I can help the project?\n\n\nSponsor deepfake research and DeepFaceLab development.\n\n\nDonate via Paypal\n\n\nDonate via Yandex.Money\n\n\nbitcoin:bc1qkhh7h0gwwhxgg6h6gpllfgstkd645fefrd5s6z\n\n\nAlipay \u6350\u6b3e\n  \n\nCollect facesets\n\n\nYou can collect faceset of any celebrity that can be used in DeepFaceLab and share it in the community\n\n\nStar this repo\n\n\nRegister github account and push \"Star\" button.\n\n\n\n\nMeme zone\n\n\n\n\n\n\n\n\n\n\n\n#deepfacelab #deepfakes #faceswap #face-swap #deep-learning #deeplearning #deep-neural-networks #deepface #deep-face-swap #fakeapp #fake-app #neural-networks #neural-nets #tensorflow #cuda #nvidia\n\n\n","161":"\n\n\n\ninteractive-coding-challenges\n\n120+ continually updated, interactive, and test-driven coding challenges, with Anki flashcards.\nChallenges focus on algorithms and data structures found in coding interviews.\nEach challenge has one or more reference solutions that are:\n\nFully functional\nUnit tested\nEasy-to-understand\n\nChallenges will soon provide on-demand incremental hints to help you arrive at the optimal solution.\nNotebooks also detail:\n\nConstraints\nTest cases\nAlgorithms\nBig-O time and space complexities\n\nAlso included are unit tested reference implementations of various data structures and algorithms.\nChallenge Solutions\n\n\n\n\n\nAnki Flashcards: Coding and Design\n\n\n\n\nThe provided Anki flashcard deck uses spaced repetition to help you retain key concepts.\n\nCoding deck\n\nGreat for use while on-the-go.\nDesign Resource: The System Design Primer\nLooking for resources to help you prep for the System Design and Object-Oriented Design interviews?\n\n\n\n\nCheck out the sister repo The System Design Primer, which contains additional Anki decks:\n\nSystem design deck\nSystem design exercises deck\nObject oriented design exercises deck\n\n\nNotebook Structure\nEach challenge has two notebooks, a challenge notebook with unit tests for you to solve and a solution notebook for reference.\nProblem Statement\n\nStates the problem to solve.\n\nConstraints\n\nDescribes any constraints or assumptions.\n\nTest Cases\n\nDescribes the general and edge test cases that will be evaluated in the unit test.\n\nAlgorithm\n\n[Challenge Notebook] Empty, refer to the solution notebook algorithm section if you need a hint.\n[Solution Notebook] One or more algorithm solution discussions, with Big-O time and space complexities.\n\nHints\n\n[Challenge Notebook] Provides on-demand incremental hints to help you arrive at the optimal solution.  Coming soon!\n\nCode (Challenge: Implement Me!)\n\n[Challenge Notebook] Skeleton code for you to implement.\n[Solution Notebook] One or more reference solutions.\n\nUnit Test\n\n[Challenge Notebook] Unit test for your code.  Expected to fail until you solve the challenge.\n[Solution Notebook] Unit test for the reference solution(s).\n\nIndex\nChallenges Categories\nFormat: Challenge Category - Number of Challenges\n\nArrays and Strings - 10\nLinked Lists - 8\nStacks and Queues - 8\nGraphs and Trees - 21\nSorting - 10\nRecursion and Dynamic Programming - 17\nMathematics and Probability - 6\nBit Manipulation - 8\nOnline Judges - 16\nSystem Design - 8\nObject Oriented Design - 8\n\nTotal number of challenges: 120\nReference Implementations: Data Structures\nUnit tested, fully functional implementations of the following data structures:\n\nLinked List\nStack\nQueue\nBinary Search Tree\nGraph\nMin Heap\nTrie\nPriority Queue\nHash Map\n\nReference Implementations: Algorithms\nUnit tested, fully functional implementations of the following algorithms:\n\nSelection Sort\nInsertion Sort\nQuick Sort\nMerge Sort\nRadix Sort\nTopological Sort\nTree Depth-First Search (Pre-, In-, Post-Order)\nTree Breadth-First Search\nGraph Depth-First Search\nGraph Breadth-First Search\nDijkstra's Shortest Path\nUnweighted Graph Shortest Path\nKnapsack 0\/1\nKnapsack Unbounded\nSieve of Eratosthenes\n\nReference Implementations: TODO\n\nA*\nBellman-Ford\nBloom Filter\nConvex Hull\nFisher-Yates Shuffle\nKruskal's\nMax Flow\nPrim's\nRabin-Karp\nTraveling Salesman\nUnion Find\nContribute\n\nInstalling and Running Challenges\n\nRepo Structure\nNotebook Installation\nRunning Challenges\n\nMisc\n\nContributing\nCredits\nContact Info\nLicense\n\nChallenges\nImage Credits\n\n\n\n\n\nArrays and Strings\n\n\n\n\nChallenge\nStatic Notebook\n\n\n\n\nDetermine if a string contains unique characters\nChallenge \u2502 Solution\n\n\nDetermine if a string is a permutation of another\nChallenge \u2502 Solution\n\n\nDetermine if a string is a rotation of another\nChallenge \u2502 Solution\n\n\nCompress a string\nChallenge \u2502 Solution\n\n\nReverse characters in a string\nChallenge \u2502 Solution\n\n\nGiven two strings, find the single different char\nChallenge \u2502 Solution\n\n\nFind two indices that sum to a specific value\nChallenge \u2502 Solution\n\n\nImplement a hash table\nChallenge \u2502 Solution\n\n\nImplement fizz buzz\nChallenge \u2502 Solution\n\n\nFind the first non-repeated character in a string\nContribute \u2502 Contribute\n\n\nRemove specified characters in a string\nContribute \u2502 Contribute\n\n\nReverse words in a string\nContribute \u2502 Contribute\n\n\nConvert a string to an integer\nContribute \u2502 Contribute\n\n\nConvert an integer to a string\nContribute \u2502 Contribute\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nLinked Lists\n\n\n\n\nChallenge\nStatic Notebook\n\n\n\n\nRemove duplicates from a linked list\nChallenge \u2502 Solution\n\n\nFind the kth to last element of a linked list\nChallenge \u2502 Solution\n\n\nDelete a node in the middle of a linked list\nChallenge \u2502 Solution\n\n\nPartition a linked list around a given value\nChallenge \u2502 Solution\n\n\nAdd two numbers whose digits are stored in a linked list\nChallenge \u2502 Solution\n\n\nFind the start of a linked list loop\nChallenge \u2502 Solution\n\n\nDetermine if a linked list is a palindrome\nChallenge \u2502 Solution\n\n\nImplement a linked list\nChallenge \u2502 Solution\n\n\nDetermine if a list is cyclic or acyclic\nContribute \u2502 Contribute\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nStacks and Queues\n\n\n\n\nChallenge\nStatic Notebook\n\n\n\n\nImplement n stacks using a single array\nChallenge \u2502 Solution\n\n\nImplement a stack that keeps track of its minimum element\nChallenge \u2502 Solution\n\n\nImplement a set of stacks class that wraps a list of capacity-bounded stacks\nChallenge \u2502 Solution\n\n\nImplement a queue using two stacks\nChallenge \u2502 Solution\n\n\nSort a stack using another stack as a buffer\nChallenge \u2502 Solution\n\n\nImplement a stack\nChallenge \u2502 Solution\n\n\nImplement a queue\nChallenge \u2502 Solution\n\n\nImplement a priority queue backed by an array\nChallenge \u2502 Solution\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nGraphs and Trees\n\n\n\n\nChallenge\nStatic Notebooks\n\n\n\n\nImplement depth-first search (pre-, in-, post-order) on a tree\nChallenge \u2502 Solution\n\n\nImplement breadth-first search on a tree\nChallenge \u2502 Solution\n\n\nDetermine the height of a tree\nChallenge \u2502 Solution\n\n\nCreate a binary search tree with minimal height from a sorted array\nChallenge \u2502 Solution\n\n\nCreate a linked list for each level of a binary tree\nChallenge \u2502 Solution\n\n\nCheck if a binary tree is balanced\nChallenge \u2502 Solution\n\n\nDetermine if a tree is a valid binary search tree\nChallenge \u2502 Solution\n\n\nFind the in-order successor of a given node in a binary search tree\nChallenge \u2502 Solution\n\n\nFind the second largest node in a binary search tree\nChallenge \u2502 Solution\n\n\nFind the lowest common ancestor\nChallenge \u2502 Solution\n\n\nInvert a binary tree\nChallenge \u2502 Solution\n\n\nImplement a binary search tree\nChallenge \u2502 Solution\n\n\nImplement a min heap\nChallenge \u2502 Solution\n\n\nImplement a trie\nChallenge \u2502 Solution\n\n\nImplement depth-first search on a graph\nChallenge \u2502 Solution\n\n\nImplement breadth-first search on a graph\nChallenge \u2502 Solution\n\n\nDetermine if there is a path between two nodes in a graph\nChallenge \u2502 Solution\n\n\nImplement a graph\nChallenge \u2502 Solution\n\n\nFind a build order given a list of projects and dependencies.\nChallenge \u2502 Solution\n\n\nFind the shortest path in a weighted graph.\nChallenge \u2502 Solution\n\n\nFind the shortest path in an unweighted graph.\nChallenge \u2502 Solution\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nSorting\n\n\n\n\nChallenge\nStatic Notebooks\n\n\n\n\nImplement selection sort\nChallenge \u2502 Solution\n\n\nImplement insertion sort\nChallenge \u2502 Solution\n\n\nImplement quick sort\nChallenge \u2502 Solution\n\n\nImplement merge sort\nChallenge \u2502 Solution\n\n\nImplement radix sort\nChallenge \u2502 Solution\n\n\nSort an array of strings so all anagrams are next to each other\nChallenge \u2502 Solution\n\n\nFind an item in a sorted, rotated array\nChallenge \u2502 Solution\n\n\nSearch a sorted matrix for an item\nChallenge \u2502 Solution\n\n\nFind an int not in an input of n integers\nChallenge \u2502 Solution\n\n\nGiven sorted arrays A, B, merge B into A in sorted order\nChallenge \u2502 Solution\n\n\nImplement a stable selection sort\nContribute \u2502 Contribute\n\n\nMake an unstable sort stable\nContribute \u2502 Contribute\n\n\nImplement an efficient, in-place version of quicksort\nContribute \u2502 Contribute\n\n\nGiven two sorted arrays, merge one into the other in sorted order\nContribute \u2502 Contribute\n\n\nFind an element in a rotated and sorted array of integers\nContribute \u2502 Contribute\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nRecursion and Dynamic Programming\n\n\n\n\nChallenge\nStatic Notebooks\n\n\n\n\nImplement fibonacci recursively, dynamically, and iteratively\nChallenge \u2502 Solution\n\n\nMaximize items placed in a knapsack\nChallenge \u2502 Solution\n\n\nMaximize unbounded items placed in a knapsack\nChallenge \u2502 Solution\n\n\nFind the longest common subsequence\nChallenge \u2502 Solution\n\n\nFind the longest increasing subsequence\nChallenge \u2502 Solution\n\n\nMinimize the cost of matrix multiplication\nChallenge \u2502 Solution\n\n\nMaximize stock prices given k transactions\nChallenge \u2502 Solution\n\n\nFind the minimum number of ways to represent n cents given an array of coins\nChallenge \u2502 Solution\n\n\nFind the unique number of ways to represent n cents given an array of coins\nChallenge \u2502 Solution\n\n\nPrint all valid combinations of n-pairs of parentheses\nChallenge \u2502 Solution\n\n\nNavigate a maze\nChallenge \u2502 Solution\n\n\nPrint all subsets of a set\nChallenge \u2502 Solution\n\n\nPrint all permutations of a string\nChallenge \u2502 Solution\n\n\nFind the magic index in an array\nChallenge \u2502 Solution\n\n\nFind the number of ways to run up n steps\nChallenge \u2502 Solution\n\n\nImplement the Towers of Hanoi with 3 towers and N disks\nChallenge \u2502 Solution\n\n\nImplement factorial recursively, dynamically, and iteratively\nContribute \u2502 Contribute\n\n\nPerform a binary search on a sorted array of integers\nContribute \u2502 Contribute\n\n\nPrint all combinations of a string\nContribute \u2502 Contribute\n\n\nImplement a paint fill function\nContribute \u2502 Contribute\n\n\nFind all permutations to represent n cents, given 1, 5, 10, 25 cent coins\nContribute \u2502 Contribute\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nMathematics and Probability\n\n\n\n\nChallenge\nStatic Notebooks\n\n\n\n\nGenerate a list of primes\nChallenge \u2502 Solution\n\n\nFind the digital root\nChallenge \u2502 Solution\n\n\nCreate a class supporting insert, max, min, mean, mode in O(1)\nChallenge \u2502 Solution\n\n\nDetermine if a number is a power of two\nChallenge \u2502 Solution\n\n\nAdd two numbers without the + or - sign\nChallenge \u2502 Solution\n\n\nSubtract two numbers without the + or - sign\nChallenge \u2502 Solution\n\n\nCheck if a number is prime\nContribute \u2502 Contribute\n\n\nDetermine if two lines on a Cartesian plane intersect\nContribute \u2502 Contribute\n\n\nUsing only add, implement multiply, subtract, and divide for ints\nContribute \u2502 Contribute\n\n\nFind the kth number such that the only prime factors are 3, 5, and 7\nContribute \u2502 Contribute\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nBit Manipulation\n\n\n\n\nChallenge\nStatic Notebooks\n\n\n\n\nImplement common bit manipulation operations\nChallenge \u2502 Solution\n\n\nDetermine number of bits to flip to convert a into b\nChallenge \u2502 Solution\n\n\nDraw a line on a screen\nChallenge \u2502 Solution\n\n\nFlip a bit to maximize the longest sequence of 1s\nChallenge \u2502 Solution\n\n\nGet the next largest and next smallest numbers\nChallenge \u2502 Solution\n\n\nMerge two binary numbers\nChallenge \u2502 Solution\n\n\nSwap odd and even bits in an integer\nChallenge \u2502 Solution\n\n\nPrint the binary representation of a number between 0 and 1\nChallenge \u2502 Solution\n\n\nDetermine the number of 1s in the binary representation of a given integer\nContribute \u2502 Contribute\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\n\n\n\n\n\nOnline Judges\n\n\n\n\nChallenge\nStatic Notebooks\n\n\n\n\nFind the longest substring with at most k distinct chars\nChallenge \u2502 Solution\n\n\nFind the highest product of three numbers\nChallenge \u2502 Solution\n\n\nMaximize stocks profit from 1 buy and 1 sell\nChallenge \u2502 Solution\n\n\nMove all zeroes in a list to the end\nChallenge \u2502 Solution\n\n\nFind the products of every other int\nChallenge \u2502 Solution\n\n\nGiven a list of entries and exits, find the busiest period\nChallenge \u2502 Solution\n\n\nDetermine an island's perimeter\nChallenge \u2502 Solution\n\n\nFormat license keys\nChallenge \u2502 Solution\n\n\nFind the longest absolute file path\nChallenge \u2502 Solution\n\n\nMerge tuple ranges\nChallenge \u2502 Solution\n\n\nAssign cookies\nChallenge \u2502 Solution\n\n\nDetermine if you can win in Nim\nChallenge \u2502 Solution\n\n\nCheck if a magazine could have been used to create a ransom note\nChallenge \u2502 Solution\n\n\nFind the number of times a sentence can fit on a screen\nChallenge \u2502 Solution\n\n\nUtopian tree\nChallenge \u2502 Solution\n\n\nMaximizing xor\nChallenge \u2502 Solution\n\n\nAdd a challenge\nContribute \u2502 Contribute\n\n\n\nRepo Structure\ninteractive-coding-challenges        # Repo\n\u251c\u2500 arrays_strings                    # Category of challenges\n\u2502  \u251c\u2500 rotation                       # Challenge folder\n\u2502  \u2502  \u251c\u2500 rotation_challenge.ipynb    # Challenge notebook\n\u2502  \u2502  \u251c\u2500 rotation_solution.ipynb     # Solution notebook\n\u2502  \u2502  \u251c\u2500 test_rotation.py            # Unit test*\n\u2502  \u251c\u2500 compress\n\u2502  \u2502  \u251c\u2500 compress_challenge.ipynb\n\u2502  \u2502  \u251c\u2500 compress_solution.ipynb\n\u2502  \u2502  \u251c\u2500 test_compress.py\n\u2502  \u251c\u2500 ...\n\u251c\u2500 linked_lists\n\u2502  \u251c\u2500 palindrome\n\u2502  \u2502  \u2514\u2500 ...\n\u2502  \u251c\u2500 ...\n\u251c\u2500 ...\n\n*The notebooks (.ipynb) read\/write the associated unit test (.py) file.\nNotebook Installation\nZero Install\n\nThis README contains links to Binder , which hosts dynamic notebooks of the repo's contents online with no installation needed.\nJupyter Notebook\nRun:\npip install jupyter\n\nFor detailed instructions, scripts, and tools to more optimally set up your development environment, check out the dev-setup repo.\nFor more details on notebook installation, follow the directions here.\nMore information on IPython\/Jupyter Notebooks can be found here.\nRunning Challenges\nNotebooks\nChallenges are provided in the form of IPython\/Jupyter Notebooks and have been tested with Python 2.7 and Python 3.x.\nIf you need to install IPython\/Jupyter Notebook, see the Notebook Installation section.\n\nThis README contains links to nbviewer, which hosts static notebooks of the repo's contents\nTo interact with or to modify elements within the dynamic notebooks, refer to the instructions below\n\nRun the notebook of challenges:\n$ git clone https:\/\/github.com\/donnemartin\/interactive-coding-challenges.git\n$ cd interactive-coding-challenges\n$ jupyter notebook\n\nThis will launch your web browser with the list of challenge categories:\n\nNavigate to the Challenge Notebook you wish to solve\nRun the cells within the challenge notebook (Cell->Run All)\n\nThis will result in an expected unit test error\n\n\nSolve the challenge and verify it passes the unit test\nCheck out the accompanying Solution Notebook for further discussion\n\nTo debug your solution with pdb, refer to the following ticket.\nNote: If your solution is different from those listed in the Solution Notebook, consider submitting a pull request so others can benefit from your work.  Review the Contributing Guidelines for details.\nFuture Development\nChallenges, solutions, and unit tests are presented in the form of IPython\/Jupyter Notebooks.\n\nNotebooks currently contain mostly Python solutions (tested on both Python 2.7 and Python 3.x), but can be extended to include 40+ supported languages\nRepo will be continually updated with new solutions and challenges\nContributions are welcome!\n\nContributing\nContributions are welcome!\nReview the Contributing Guidelines for details on how to:\n\nSubmit issues\nAdd solutions to existing challenges\nAdd new challenges\n\nCredits\nResources\n\nCracking the Coding Interview | GitHub Solutions\nProgramming Interviews Exposed\nThe Algorithm Design Manual | Solutions\nCareerCup\nQuora\nHackerRank\nLeetCode\n\nImages\n\nArrays and Strings: nltk.org\nLinked Lists: wikipedia.org\nStacks: wikipedia.org\nQueues: wikipedia.org\nSorting: wikipedia.org\nRecursion and Dynamic Programming: wikipedia.org\nGraphs and Trees: wikipedia.org\nMathematics and Probability: wikipedia.org\nBit Manipulation: wikipedia.org\nOnline Judges: topcoder.com\n\nContact Info\nFeel free to contact me to discuss any issues, questions, or comments.\nMy contact info can be found on my GitHub page.\nLicense\nI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).\nCopyright 2015 Donne Martin\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n","162":"Pipenv: Python Development Workflow for Humans\n\n\n\n\n\n[ ~ Dependency Scanning by PyUp.io ~ ]\nPipenv is a tool that aims to bring the best of all packaging worlds\n(bundler, composer, npm, cargo, yarn, etc.) to the Python world.\nWindows is a first-class citizen, in our world.\nIt automatically creates and manages a virtualenv for your projects, as\nwell as adds\/removes packages from your Pipfile as you\ninstall\/uninstall packages. It also generates the ever-important\nPipfile.lock, which is used to produce deterministic builds.\n\nThe problems that Pipenv seeks to solve are multi-faceted:\n\nYou no longer need to use pip and virtualenv separately. They\nwork together.\nManaging a requirements.txt file can be\nproblematic,\nso Pipenv uses the upcoming Pipfile and Pipfile.lock instead,\nwhich is superior for basic use cases.\nHashes are used everywhere, always. Security. Automatically expose\nsecurity vulnerabilities.\nGive you insight into your dependency graph (e.g. $ pipenv graph).\nStreamline development workflow by loading .env files.\n\nYou can quickly play with Pipenv right in your browser:\n\nInstallation\nIf you're using Debian Buster+:\n$ sudo apt install pipenv\n\nOr, if you're using Fedora:\n$ sudo dnf install pipenv\n\nOr, if you're using FreeBSD:\n# pkg install py36-pipenv\n\nWhen none of the above is an option, it is recommended to use Pipx:\n$ pipx install pipenv\n\nOtherwise, refer to the documentation for instructions.\n\u2728\ud83c\udf70\u2728\n\u2624 User Testimonials\nDavid Gang---\n:   This package manager is really awesome. For the first time I know\nexactly what my dependencies are which I installed and what the\ntransitive dependencies are. Combined with the fact that installs\nare deterministic, makes this package manager first class, like\ncargo.\nJustin Myles Holmes---\n:   Pipenv is finally an abstraction meant to engage the mind instead\nof merely the filesystem.\n\u2624 Features\n\nEnables truly deterministic builds, while easily specifying only\nwhat you want.\nGenerates and checks file hashes for locked dependencies.\nAutomatically install required Pythons, if pyenv is available.\nAutomatically finds your project home, recursively, by looking for a\nPipfile.\nAutomatically generates a Pipfile, if one doesn't exist.\nAutomatically creates a virtualenv in a standard location.\nAutomatically adds\/removes packages to a Pipfile when they are\nun\/installed.\nAutomatically loads .env files, if they exist.\n\nThe main commands are install, uninstall, and lock, which\ngenerates a Pipfile.lock. These are intended to replace\n$ pip install usage, as well as manual virtualenv management (to\nactivate a virtualenv, run $ pipenv shell).\nBasic Concepts\n\nA virtualenv will automatically be created, when one doesn't exist.\nWhen no parameters are passed to install, all packages\n[packages] specified will be installed.\nTo initialize a Python 3 virtual environment, run\n$ pipenv --three.\nTo initialize a Python 2 virtual environment, run $ pipenv --two.\nOtherwise, whatever virtualenv defaults to will be the default.\n\nOther Commands\n\nshell will spawn a shell with the virtualenv activated.\nrun will run a given command from the virtualenv, with any\narguments forwarded (e.g. $ pipenv run python).\ncheck asserts that PEP 508 requirements are being met by the\ncurrent environment.\ngraph will print a pretty graph of all your installed\ndependencies.\n\nShell Completion\nFor example, with fish, put this in your\n~\/.config\/fish\/completions\/pipenv.fish:\neval (pipenv --completion)\n\nAlternatively, with bash, put this in your .bashrc or .bash_profile:\neval \"$(pipenv --completion)\"\n\nMagic shell completions are now enabled! There is also a fish\nplugin, which will automatically\nactivate your subshells for you!\nFish is the best shell. You should use it.\n\u2624 Usage\n$ pipenv\nUsage: pipenv [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --where          Output project home information.\n  --venv           Output virtualenv information.\n  --py             Output Python interpreter information.\n  --envs           Output Environment Variable options.\n  --rm             Remove the virtualenv.\n  --bare           Minimal output.\n  --completion     Output completion (to be eval'd).\n  --man            Display manpage.\n  --three \/ --two  Use Python 3\/2 when creating virtualenv.\n  --python TEXT    Specify which version of Python virtualenv should use.\n  --site-packages  Enable site-packages for the virtualenv.\n  --version        Show the version and exit.\n  -h, --help       Show this message and exit.\n\n\nUsage Examples:\n   Create a new project using Python 3.7, specifically:\n   $ pipenv --python 3.7\n\n   Remove project virtualenv (inferred from current directory):\n   $ pipenv --rm\n\n   Install all dependencies for a project (including dev):\n   $ pipenv install --dev\n\n   Create a lockfile containing pre-releases:\n   $ pipenv lock --pre\n\n   Show a graph of your installed dependencies:\n   $ pipenv graph\n\n   Check your installed dependencies for security vulnerabilities:\n   $ pipenv check\n\n   Install a local setup.py into your virtual environment\/Pipfile:\n   $ pipenv install -e .\n\n   Use a lower-level pip command:\n   $ pipenv run pip freeze\n\nCommands:\n  check      Checks for security vulnerabilities and against PEP 508 markers\n             provided in Pipfile.\n  clean      Uninstalls all packages not specified in Pipfile.lock.\n  graph      Displays currently\u2013installed dependency graph information.\n  install    Installs provided packages and adds them to Pipfile, or (if no\n             packages are given), installs all packages from Pipfile.\n  lock       Generates Pipfile.lock.\n  open       View a given module in your editor.\n  run        Spawns a command installed into the virtualenv.\n  scripts    Displays the shortcuts in the (optional) [scripts] section of \n             Pipfile. \n  shell      Spawns a shell within the virtualenv.\n  sync       Installs all packages specified in Pipfile.lock.\n  uninstall  Un-installs a provided package and removes it from Pipfile.\n\nLocate the project:\n$ pipenv --where\n\/Users\/kennethreitz\/Library\/Mobile Documents\/com~apple~CloudDocs\/repos\/kr\/pipenv\/test\n\nLocate the virtualenv:\n$ pipenv --venv\n\/Users\/kennethreitz\/.local\/share\/virtualenvs\/test-Skyy4vre\n\nLocate the Python interpreter:\n$ pipenv --py\n\/Users\/kennethreitz\/.local\/share\/virtualenvs\/test-Skyy4vre\/bin\/python\n\nInstall packages:\n$ pipenv install\nCreating a virtualenv for this project...\n...\nNo package provided, installing all dependencies.\nVirtualenv location: \/Users\/kennethreitz\/.local\/share\/virtualenvs\/test-EJkjoYts\nInstalling dependencies from Pipfile.lock...\n...\n\nTo activate this project's virtualenv, run the following:\n$ pipenv shell\n\nInstalling from git:\nYou can install packages with pipenv from git and other version control systems using URLs formatted according to the following rule:\n<vcs_type>+<scheme>:\/\/<location>\/<user_or_organization>\/<repository>@<branch_or_tag>#<package_name>\n\nThe only optional section is the @<branch_or_tag> section.  When using git over SSH, you may use the shorthand vcs and scheme alias git+git@<location>:<user_or_organization>\/<repository>@<branch_or_tag>#<package_name>. Note that this is translated to git+ssh:\/\/git@<location> when parsed.\nValid values for <vcs_type> include git, bzr, svn, and hg.  Valid values for <scheme> include http,, https, ssh, and file.  In specific cases you also have access to other schemes: svn may be combined with svn as a scheme, and bzr can be combined with sftp and lp.\nNote that it is strongly recommended that you install any version-controlled dependencies in editable mode, using pipenv install -e, in order to ensure that dependency resolution can be performed with an up to date copy of the repository each time it is performed, and that it includes all known dependencies.\nBelow is an example usage which installs the git repository located at https:\/\/github.com\/requests\/requests.git from tag v2.19.1 as package name requests:\n$ pipenv install -e git+https:\/\/github.com\/requests\/requests.git@v2.19#egg=requests\nCreating a Pipfile for this project...\nInstalling -e git+https:\/\/github.com\/requests\/requests.git@v2.19.1#egg=requests...\n[...snipped...]\nAdding -e git+https:\/\/github.com\/requests\/requests.git@v2.19.1#egg=requests to Pipfile's [packages]...\n[...]\n\nYou can read more about pip's implementation of vcs support here.\nInstall a dev dependency:\n$ pipenv install pytest --dev\nInstalling pytest...\n...\nAdding pytest to Pipfile's [dev-packages]...\n\nShow a dependency graph:\n$ pipenv graph\nrequests==2.18.4\n  - certifi [required: >=2017.4.17, installed: 2017.7.27.1]\n  - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]\n  - idna [required: >=2.5,<2.7, installed: 2.6]\n  - urllib3 [required: <1.23,>=1.21.1, installed: 1.22]\n\nGenerate a lockfile:\n$ pipenv lock\nAssuring all dependencies from Pipfile are installed...\nLocking [dev-packages] dependencies...\nLocking [packages] dependencies...\nNote: your project now has only default [packages] installed.\nTo install [dev-packages], run: $ pipenv install --dev\n\nInstall all dev dependencies:\n$ pipenv install --dev\nPipfile found at \/Users\/kennethreitz\/repos\/kr\/pip2\/test\/Pipfile. Considering this to be the project home.\nPipfile.lock out of date, updating...\nAssuring all dependencies from Pipfile are installed...\nLocking [dev-packages] dependencies...\nLocking [packages] dependencies...\n\nUninstall everything:\n$ pipenv uninstall --all\nNo package provided, un-installing all dependencies.\nFound 25 installed package(s), purging...\n...\nEnvironment now purged and fresh!\n\nUse the shell:\n$ pipenv shell\nLoading .env environment variables...\nLaunching subshell in virtual environment. Type 'exit' or 'Ctrl+D' to return.\n$ \u25af\n\n\u2624 Documentation\nDocumentation resides over at pipenv.pypa.io.\n","163":"Docker Compose\n\n\nDocker Compose is a tool for running multi-container applications on Docker\ndefined using the Compose file format.\nA Compose file is used to define how the one or more containers that make up\nyour application are configured.\nOnce you have a Compose file, you can create and start your application with a\nsingle command: docker-compose up.\nCompose files can be used to deploy applications locally, or to the cloud on\nAmazon ECS or\nMicrosoft ACI using\nthe Docker CLI. You can read more about how to do this:\n\nCompose for Amazon ECS\nCompose for Microsoft ACI\n\nWhere to get Docker Compose\nWindows and macOS\nDocker Compose is included in\nDocker Desktop\nfor Windows and macOS.\nLinux\nYou can download Docker Compose binaries from the\nrelease page on this repository.\nUsing pip\nIf your platform is not supported, you can download Docker Compose using pip:\npip install docker-compose\n\nNote: Docker Compose requires Python 3.6 or later.\n\nQuick Start\nUsing Docker Compose is basically a three-step process:\n\nDefine your app's environment with a Dockerfile so it can be\nreproduced anywhere.\nDefine the services that make up your app in docker-compose.yml so\nthey can be run together in an isolated environment.\nLastly, run docker-compose up and Compose will start and run your entire\napp.\n\nA Compose file looks like this:\nservices:\n  web:\n    build: .\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - .:\/code\n  redis:\n    image: redis\nYou can find examples of Compose applications in our\nAwesome Compose repository.\nFor more information about the Compose format, see the\nCompose file reference.\nContributing\nWant to help develop Docker Compose? Check out our\ncontributing documentation.\nIf you find an issue, please report it on the\nissue tracker.\nReleasing\nReleases are built by maintainers, following an outline of the release process.\n","164":"itchat\n   English version\nitchat\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7\u63a5\u53e3\uff0c\u4f7f\u7528python\u8c03\u7528\u5fae\u4fe1\u4ece\u672a\u5982\u6b64\u7b80\u5355\u3002\n\u4f7f\u7528\u4e0d\u5230\u4e09\u5341\u884c\u7684\u4ee3\u7801\uff0c\u4f60\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u80fd\u591f\u5904\u7406\u6240\u6709\u4fe1\u606f\u7684\u5fae\u4fe1\u673a\u5668\u4eba\u3002\n\u5f53\u7136\uff0c\u8be5api\u7684\u4f7f\u7528\u8fdc\u4e0d\u6b62\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u66f4\u591a\u7684\u529f\u80fd\u7b49\u7740\u4f60\u6765\u53d1\u73b0\uff0c\u6bd4\u5982\u8fd9\u4e9b\u3002\n\u8be5\u63a5\u53e3\u4e0e\u516c\u4f17\u53f7\u63a5\u53e3itchatmp\u5171\u4eab\u7c7b\u4f3c\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u5b66\u4e60\u4e00\u6b21\u638c\u63e1\u4e24\u4e2a\u5de5\u5177\u3002\n\u5982\u4eca\u5fae\u4fe1\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e2a\u4eba\u793e\u4ea4\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u5e0c\u671b\u8fd9\u4e2a\u9879\u76ee\u80fd\u591f\u5e2e\u52a9\u4f60\u6269\u5c55\u4f60\u7684\u4e2a\u4eba\u7684\u5fae\u4fe1\u53f7\u3001\u65b9\u4fbf\u81ea\u5df1\u7684\u751f\u6d3b\u3002\n\u5b89\u88c5\n\u53ef\u4ee5\u901a\u8fc7\u672c\u547d\u4ee4\u5b89\u88c5itchat\uff1a\npip install itchat\n\u7b80\u5355\u5165\u95e8\u5b9e\u4f8b\n\u6709\u4e86itchat\uff0c\u5982\u679c\u4f60\u60f3\u8981\u7ed9\u6587\u4ef6\u4f20\u8f93\u52a9\u624b\u53d1\u4e00\u6761\u4fe1\u606f\uff0c\u53ea\u9700\u8981\u8fd9\u6837\uff1a\nimport itchat\n\nitchat.auto_login()\n\nitchat.send('Hello, filehelper', toUserName='filehelper')\n\u5982\u679c\u4f60\u60f3\u8981\u56de\u590d\u53d1\u7ed9\u81ea\u5df1\u7684\u6587\u672c\u6d88\u606f\uff0c\u53ea\u9700\u8981\u8fd9\u6837\uff1a\nimport itchat\n\n@itchat.msg_register(itchat.content.TEXT)\ndef text_reply(msg):\n    return msg.text\n\nitchat.auto_login()\nitchat.run()\n\u4e00\u4e9b\u8fdb\u9636\u5e94\u7528\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5f00\u6e90\u673a\u5668\u4eba\u7684\u6e90\u7801\u548c\u8fdb\u9636\u5e94\u7528\u4e2d\u770b\u5230\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u9605\u89c8\u6587\u6863\u3002\n\u8bd5\u4e00\u8bd5\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u8fd9\u4e00\u9879\u76ee\u7684\u5f00\u6e90\u5c0f\u673a\u5668\u4eba\uff0c\u767e\u95fb\u4e0d\u5982\u4e00\u89c1\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u3002\n\u7531\u4e8e\u597d\u53cb\u6570\u91cf\u5b9e\u5728\u589e\u957f\u8fc7\u5feb\uff0c\u81ea\u52a8\u901a\u8fc7\u597d\u53cb\u9a8c\u8bc1\u7684\u529f\u80fd\u6f14\u793a\u6682\u65f6\u5173\u95ed\u3002\n\n\u622a\u5c4f\n \n\u8fdb\u9636\u5e94\u7528\n\u7279\u6b8a\u7684\u5b57\u5178\u4f7f\u7528\u65b9\u5f0f\n\u901a\u8fc7\u6253\u5370itchat\u7684\u7528\u6237\u4ee5\u53ca\u6ce8\u518c\u6d88\u606f\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e9b\u503c\u90fd\u662f\u5b57\u5178\u3002\n\u4f46\u5b9e\u9645\u4e0aitchat\u7cbe\u5fc3\u6784\u9020\u4e86\u76f8\u5e94\u7684\u6d88\u606f\u3001\u7528\u6237\u3001\u7fa4\u804a\u3001\u516c\u4f17\u53f7\u7c7b\u3002\n\u5176\u6240\u6709\u7684\u952e\u503c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e00\u65b9\u5f0f\u8bbf\u95ee\uff1a\n@itchat.msg_register(TEXT)\ndef _(msg):\n    # equals to print(msg['FromUserName'])\n    print(msg.fromUserName)\n\u5c5e\u6027\u540d\u4e3a\u952e\u503c\u9996\u5b57\u6bcd\u5c0f\u5199\u540e\u7684\u5185\u5bb9\u3002\nauthor = itchat.search_friends(nickName='LittleCoder')[0]\nauthor.send('greeting, littlecoder!')\n\u5404\u7c7b\u578b\u6d88\u606f\u7684\u6ce8\u518c\n\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\uff0c\u5fae\u4fe1\u5df2\u7ecf\u53ef\u4ee5\u5c31\u65e5\u5e38\u7684\u5404\u79cd\u4fe1\u606f\u8fdb\u884c\u83b7\u53d6\u4e0e\u56de\u590d\u3002\nimport itchat, time\nfrom itchat.content import *\n\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])\ndef text_reply(msg):\n    msg.user.send('%s: %s' % (msg.type, msg.text))\n\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    msg.download(msg.fileName)\n    typeSymbol = {\n        PICTURE: 'img',\n        VIDEO: 'vid', }.get(msg.type, 'fil')\n    return '@%s@%s' % (typeSymbol, msg.fileName)\n\n@itchat.msg_register(FRIENDS)\ndef add_friend(msg):\n    msg.user.verify()\n    msg.user.send('Nice to meet you!')\n\n@itchat.msg_register(TEXT, isGroupChat=True)\ndef text_reply(msg):\n    if msg.isAt:\n        msg.user.send(u'@%s\\u2005I received: %s' % (\n            msg.actualNickName, msg.text))\n\nitchat.auto_login(True)\nitchat.run(True)\n\u547d\u4ee4\u884c\u4e8c\u7ef4\u7801\n\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5728\u767b\u9646\u7684\u65f6\u5019\u4f7f\u7528\u547d\u4ee4\u884c\u663e\u793a\u4e8c\u7ef4\u7801\uff1a\nitchat.auto_login(enableCmdQR=True)\n\u90e8\u5206\u7cfb\u7edf\u53ef\u80fd\u5b57\u5e45\u5bbd\u5ea6\u6709\u51fa\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06enableCmdQR\u8d4b\u503c\u4e3a\u7279\u5b9a\u7684\u500d\u6570\u8fdb\u884c\u8c03\u6574\uff1a\n# \u5982\u90e8\u5206\u7684linux\u7cfb\u7edf\uff0c\u5757\u5b57\u7b26\u7684\u5bbd\u5ea6\u4e3a\u4e00\u4e2a\u5b57\u7b26\uff08\u6b63\u5e38\u5e94\u4e3a\u4e24\u5b57\u7b26\uff09\uff0c\u6545\u8d4b\u503c\u4e3a2\nitchat.auto_login(enableCmdQR=2)\n\u9ed8\u8ba4\u63a7\u5236\u53f0\u80cc\u666f\u8272\u4e3a\u6697\u8272\uff08\u9ed1\u8272\uff09\uff0c\u82e5\u80cc\u666f\u8272\u4e3a\u6d45\u8272\uff08\u767d\u8272\uff09\uff0c\u53ef\u4ee5\u5c06enableCmdQR\u8d4b\u503c\u4e3a\u8d1f\u503c\uff1a\nitchat.auto_login(enableCmdQR=-1)\n\u9000\u51fa\u7a0b\u5e8f\u540e\u6682\u5b58\u767b\u9646\u72b6\u6001\n\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u767b\u9646\uff0c\u5373\u4f7f\u7a0b\u5e8f\u5173\u95ed\uff0c\u4e00\u5b9a\u65f6\u95f4\u5185\u91cd\u65b0\u5f00\u542f\u4e5f\u53ef\u4ee5\u4e0d\u7528\u91cd\u65b0\u626b\u7801\u3002\nitchat.auto_login(hotReload=True)\n\u7528\u6237\u641c\u7d22\n\u4f7f\u7528search_friends\u65b9\u6cd5\u53ef\u4ee5\u641c\u7d22\u7528\u6237\uff0c\u6709\u56db\u79cd\u641c\u7d22\u65b9\u5f0f\uff1a\n\n\u4ec5\u83b7\u53d6\u81ea\u5df1\u7684\u7528\u6237\u4fe1\u606f\n\u83b7\u53d6\u7279\u5b9aUserName\u7684\u7528\u6237\u4fe1\u606f\n\u83b7\u53d6\u5907\u6ce8\u3001\u5fae\u4fe1\u53f7\u3001\u6635\u79f0\u4e2d\u7684\u4efb\u4f55\u4e00\u9879\u7b49\u4e8ename\u952e\u503c\u7684\u7528\u6237\n\u83b7\u53d6\u5907\u6ce8\u3001\u5fae\u4fe1\u53f7\u3001\u6635\u79f0\u5206\u522b\u7b49\u4e8e\u76f8\u5e94\u952e\u503c\u7684\u7528\u6237\n\n\u5176\u4e2d\u4e09\u3001\u56db\u9879\u53ef\u4ee5\u4e00\u540c\u4f7f\u7528\uff0c\u4e0b\u9762\u662f\u793a\u4f8b\u7a0b\u5e8f\uff1a\n# \u83b7\u53d6\u81ea\u5df1\u7684\u7528\u6237\u4fe1\u606f\uff0c\u8fd4\u56de\u81ea\u5df1\u7684\u5c5e\u6027\u5b57\u5178\nitchat.search_friends()\n# \u83b7\u53d6\u7279\u5b9aUserName\u7684\u7528\u6237\u4fe1\u606f\nitchat.search_friends(userName='@abcdefg1234567')\n# \u83b7\u53d6\u4efb\u4f55\u4e00\u9879\u7b49\u4e8ename\u952e\u503c\u7684\u7528\u6237\nitchat.search_friends(name='littlecodersh')\n# \u83b7\u53d6\u5206\u522b\u5bf9\u5e94\u76f8\u5e94\u952e\u503c\u7684\u7528\u6237\nitchat.search_friends(wechatAccount='littlecodersh')\n# \u4e09\u3001\u56db\u9879\u529f\u80fd\u53ef\u4ee5\u4e00\u540c\u4f7f\u7528\nitchat.search_friends(name='LittleCoder\u673a\u5668\u4eba', wechatAccount='littlecodersh')\n\u5173\u4e8e\u516c\u4f17\u53f7\u3001\u7fa4\u804a\u7684\u83b7\u53d6\u4e0e\u641c\u7d22\u5728\u6587\u6863\u4e2d\u6709\u66f4\u52a0\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\n\u9644\u4ef6\u7684\u4e0b\u8f7d\u4e0e\u53d1\u9001\nitchat\u7684\u9644\u4ef6\u4e0b\u8f7d\u65b9\u6cd5\u5b58\u50a8\u5728msg\u7684Text\u952e\u4e2d\u3002\n\u53d1\u9001\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u540d\uff08\u56fe\u7247\u7ed9\u51fa\u7684\u9ed8\u8ba4\u6587\u4ef6\u540d\uff09\u90fd\u5b58\u50a8\u5728msg\u7684FileName\u952e\u4e2d\u3002\n\u4e0b\u8f7d\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u53ef\u7528\u7684\u4f4d\u7f6e\u53c2\u6570\uff08\u5305\u62ec\u6587\u4ef6\u540d\uff09\uff0c\u5e76\u5c06\u6587\u4ef6\u76f8\u5e94\u7684\u5b58\u50a8\u3002\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    msg.download(msg.fileName)\n    itchat.send('@%s@%s' % (\n        'img' if msg['Type'] == 'Picture' else 'fil', msg['FileName']),\n        msg['FromUserName'])\n    return '%s received' % msg['Type']\n\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u4ec5\u60f3\u8981\u8bfb\u53d6\u4e8c\u8fdb\u5236\u4e32\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u53ef\u4ee5\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u65b9\u6cd5\u5c06\u4f1a\u8fd4\u56de\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u4e32\u3002\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    with open(msg.fileName, 'wb') as f:\n        f.write(msg.download())\n\u7528\u6237\u591a\u5f00\n\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5b8c\u6210\u591a\u5f00\u7684\u64cd\u4f5c\uff1a\nimport itchat\n\nnewInstance = itchat.new_instance()\nnewInstance.auto_login(hotReload=True, statusStorageDir='newInstance.pkl')\n\n@newInstance.msg_register(itchat.content.TEXT)\ndef reply(msg):\n    return msg.text\n\nnewInstance.run()\n\u9000\u51fa\u53ca\u767b\u9646\u5b8c\u6210\u540e\u8c03\u7528\u7279\u5b9a\u65b9\u6cd5\n\u767b\u9646\u5b8c\u6210\u540e\u7684\u65b9\u6cd5\u9700\u8981\u8d4b\u503c\u5728loginCallback\u4e2d\u3002\n\u800c\u9000\u51fa\u540e\u7684\u65b9\u6cd5\u9700\u8981\u8d4b\u503c\u5728exitCallback\u4e2d\u3002\nimport time\n\nimport itchat\n\ndef lc():\n    print('finish login')\ndef ec():\n    print('exit')\n\nitchat.auto_login(loginCallback=lc, exitCallback=ec)\ntime.sleep(3)\nitchat.logout()\n\u82e5\u4e0d\u8bbe\u7f6eloginCallback\u7684\u503c\uff0c\u5219\u5c06\u4f1a\u81ea\u52a8\u5220\u9664\u4e8c\u7ef4\u7801\u56fe\u7247\u5e76\u6e05\u7a7a\u547d\u4ee4\u884c\u663e\u793a\u3002\n\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u7b54\nQ: \u5982\u4f55\u901a\u8fc7\u8fd9\u4e2a\u5305\u5c06\u81ea\u5df1\u7684\u5fae\u4fe1\u53f7\u53d8\u4e3a\u63a7\u5236\u5668\uff1f\nA: \u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u53d1\u9001\u3001\u63a5\u53d7\u81ea\u5df1UserName\u7684\u6d88\u606f\uff1b\u53d1\u9001\u63a5\u6536\u6587\u4ef6\u4f20\u8f93\u52a9\u624b\uff08filehelper\uff09\u7684\u6d88\u606f\nQ: \u4e3a\u4ec0\u4e48\u6211\u53d1\u9001\u4fe1\u606f\u7684\u65f6\u5019\u90e8\u5206\u4fe1\u606f\u6ca1\u6709\u6210\u529f\u53d1\u51fa\u6765\uff1f\nA: \u6709\u4e9b\u8d26\u53f7\u662f\u5929\u751f\u65e0\u6cd5\u7ed9\u81ea\u5df1\u7684\u8d26\u53f7\u53d1\u9001\u4fe1\u606f\u7684\uff0c\u5efa\u8bae\u4f7f\u7528filehelper\u4ee3\u66ff\u3002\n\u4f5c\u8005\nLittleCoder: \u6784\u67b6\u53ca\u7ef4\u62a4Python2 Python3\u7248\u672c\u3002\ntempdban: \u534f\u8bae\u3001\u6784\u67b6\u53ca\u65e5\u5e38\u7ef4\u62a4\u3002\nChyroc: \u5b8c\u6210\u7b2c\u4e00\u7248\u672c\u7684Python3\u6784\u67b6\u3002\n\u7c7b\u4f3c\u9879\u76ee\nyoufou\/wxpy: \u4f18\u79c0\u7684api\u5305\u88c5\u548c\u914d\u5957\u63d2\u4ef6\uff0c\u5fae\u4fe1\u673a\u5668\u4eba\/\u4f18\u96c5\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7API\nliuwons\/wxBot: \u7c7b\u4f3c\u7684\u57fa\u4e8ePython\u7684\u5fae\u4fe1\u673a\u5668\u4eba\nzixia\/wechaty: \u57fa\u4e8eJavascript(ES6)\u7684\u5fae\u4fe1\u4e2a\u4eba\u8d26\u53f7\u673a\u5668\u4ebaNodeJS\u6846\u67b6\/\u5e93\nsjdy521\/Mojo-Weixin: \u4f7f\u7528Perl\u8bed\u8a00\u7f16\u5199\u7684\u5fae\u4fe1\u5ba2\u6237\u7aef\u6846\u67b6\uff0c\u53ef\u901a\u8fc7\u63d2\u4ef6\u63d0\u4f9b\u57fa\u4e8eHTTP\u534f\u8bae\u7684api\u63a5\u53e3\u4f9b\u5176\u4ed6\u8bed\u8a00\u8c03\u7528\nHanSon\/vbot: \u57fa\u4e8ePHP7\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7\u673a\u5668\u4eba\uff0c\u901a\u8fc7\u5b9e\u73b0\u533f\u540d\u51fd\u6570\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u5404\u79cd\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\nyaphone\/itchat4j: \u7528Java\u6269\u5c55\u4e2a\u4eba\u5fae\u4fe1\u53f7\u7684\u80fd\u529b\nkanjielu\/jeeves: \u4f7f\u7528springboot\u5f00\u53d1\u7684\u5fae\u4fe1\u673a\u5668\u4eba\n\u95ee\u9898\u548c\u5efa\u8bae\n\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\u6216\u8005\u5efa\u8bae\u90fd\u53ef\u4ee5\u5728\u8fd9\u4e2aIssue\u548c\u6211\u8ba8\u8bba\n\u6216\u8005\u4e5f\u53ef\u4ee5\u5728gitter\u4e0a\u4ea4\u6d41\uff1a\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u52a0\u5165\u6211\u4eec\u65b0\u5efa\u7684QQ\u7fa4\u8ba8\u8bba\uff1a549762872, 205872856\n","165":"mitmproxy\n  \n \n\nThis repository contains the mitmproxy and pathod projects.\nmitmproxy is an interactive, SSL\/TLS-capable intercepting proxy with a console\ninterface for HTTP\/1, HTTP\/2, and WebSockets.\nmitmdump is the command-line version of mitmproxy. Think tcpdump for HTTP.\nmitmweb is a web-based interface for mitmproxy.\npathoc and pathod are perverse HTTP client and server applications\ndesigned to let you craft almost any conceivable HTTP request, including ones\nthat creatively violate the standards.\n\nDocumentation & Help\nGeneral information, tutorials, and precompiled binaries can be found on the mitmproxy website.\n\n\nThe documentation for mitmproxy is available on our website:\n\n \n\nIf you have questions on how to use mitmproxy, please\nask them on StackOverflow!\n\nJoin our developer chat on Slack if you would like to contribute to mitmproxy itself.\n\n\n\nInstallation\nThe installation instructions are here.\nIf you want to contribute changes, keep on reading.\n\nContributing\nAs an open source project, mitmproxy welcomes contributions of all forms. If you would like to bring the project forward,\nplease consider contributing in the following areas:\n\nMaintenance: We are incredibly thankful for individuals who are stepping up and helping with maintenance. This includes (but is not limited to) triaging issues, reviewing pull requests and picking up stale ones, helping out other users on StackOverflow, creating minimal, complete and verifiable examples or test cases for existing bug reports, updating documentation, or fixing minor bugs that have recently been reported.\nCode Contributions: We actively mark issues that we consider are good first contributions. If you intend to work on a larger contribution to the project, please come talk to us first.\n\n\nDevelopment Setup\nTo get started hacking on mitmproxy, please install a recent version of Python (we require at least 3.6).\nThe following commands should work on your system:\npython3 --version\npython3 -m pip --help\npython3 -m venv --help\nIf all of this run successfully, do the following:\ngit clone https:\/\/github.com\/mitmproxy\/mitmproxy.git\ncd mitmproxy\n.\/dev.sh  # \"powershell .\\dev.ps1\" on Windows\nThe dev script will create a virtualenv environment in a directory called \"venv\"\nand install all mandatory and optional dependencies into it. The primary\nmitmproxy components - mitmproxy and pathod - are installed as\n\"editable\", so any changes to the source in the repository will be reflected\nlive in the virtualenv.\nThe main executables for the project - mitmdump, mitmproxy,\nmitmweb, pathod, and pathoc - are all created within the\nvirtualenv. After activating the virtualenv, they will be on your $PATH, and\nyou can run them like any other command:\n. venv\/bin\/activate  # \"venv\\Scripts\\activate\" on Windows\nmitmdump --version\n\nTesting\nIf you've followed the procedure above, you already have all the development\nrequirements installed, and you can run the basic test suite with tox:\ntox -e py      # runs Python tests\nOur CI system has additional tox environments that are run on every pull request and branch on GitHub.\nFor speedier testing, we recommend you run pytest directly on individual test files or folders:\ncd test\/mitmproxy\/addons\npytest --cov mitmproxy.addons.anticache --cov-report term-missing --looponfail test_anticache.py\nPytest does not check the code style, so you want to run tox -e flake8 again before committing.\nPlease ensure that all patches are accompanied by matching changes in the test\nsuite. The project tries to maintain 100% test coverage and enforces this strictly for some parts of the codebase.\n\nDocumentation\nThe following tools are required to build the mitmproxy docs:\n\nHugo (the extended version hugo_extended is required)\nmodd\n\ncd docs\nmodd\n\nCode Style\nKeeping to a consistent code style throughout the project makes it easier to\ncontribute and collaborate. Please stick to the guidelines in\nPEP8 and the Google Style Guide unless there's a very\ngood reason not to.\nThis is automatically enforced on every PR. If we detect a linting error, the\nPR checks will fail and block merging. You can run our lint checks yourself\nwith the following commands:\ntox -e flake8\ntox -e mypy    # checks static types\n","166":"\n\n\n\n\n\n\n\ndata-science-ipython-notebooks\nIndex\n\ndeep-learning\n\ntensorflow\ntheano\nkeras\ncaffe\n\n\nscikit-learn\nstatistical-inference-scipy\npandas\nmatplotlib\nnumpy\npython-data\nkaggle-and-business-analyses\nspark\nmapreduce-python\namazon web services\ncommand lines\nmisc\nnotebook-installation\ncredits\ncontributing\ncontact-info\nlicense\n\n\n\n\n\ndeep-learning\nIPython Notebook(s) demonstrating deep learning functionality.\n\n\n\n\ntensor-flow-tutorials\nAdditional TensorFlow tutorials:\n\npkmital\/tensorflow_tutorials\nnlintz\/TensorFlow-Tutorials\nalrojo\/tensorflow-tutorial\nBinRoot\/TensorFlow-Book\ntuanavu\/tensorflow-basic-tutorials\n\n\n\n\nNotebook\nDescription\n\n\n\n\ntsf-basics\nLearn basic operations in TensorFlow, a library for various kinds of perceptual and language understanding tasks from Google.\n\n\ntsf-linear\nImplement linear regression in TensorFlow.\n\n\ntsf-logistic\nImplement logistic regression in TensorFlow.\n\n\ntsf-nn\nImplement nearest neighboars in TensorFlow.\n\n\ntsf-alex\nImplement AlexNet in TensorFlow.\n\n\ntsf-cnn\nImplement convolutional neural networks in TensorFlow.\n\n\ntsf-mlp\nImplement multilayer perceptrons in TensorFlow.\n\n\ntsf-rnn\nImplement recurrent neural networks in TensorFlow.\n\n\ntsf-gpu\nLearn about basic multi-GPU computation in TensorFlow.\n\n\ntsf-gviz\nLearn about graph visualization in TensorFlow.\n\n\ntsf-lviz\nLearn about loss visualization in TensorFlow.\n\n\n\ntensor-flow-exercises\n\n\n\nNotebook\nDescription\n\n\n\n\ntsf-not-mnist\nLearn simple data curation by creating a pickle with formatted datasets for training, development and testing in TensorFlow.\n\n\ntsf-fully-connected\nProgressively train deeper and more accurate models using logistic regression and neural networks in TensorFlow.\n\n\ntsf-regularization\nExplore regularization techniques by training fully connected networks to classify notMNIST characters in TensorFlow.\n\n\ntsf-convolutions\nCreate convolutional neural networks in TensorFlow.\n\n\ntsf-word2vec\nTrain a skip-gram model over Text8 data in TensorFlow.\n\n\ntsf-lstm\nTrain a LSTM character model over Text8 data in TensorFlow.\n\n\n\n\n\n\n\ntheano-tutorials\n\n\n\nNotebook\nDescription\n\n\n\n\ntheano-intro\nIntro to Theano, which allows you to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently. It can use GPUs and perform efficient symbolic differentiation.\n\n\ntheano-scan\nLearn scans, a mechanism to perform loops in a Theano graph.\n\n\ntheano-logistic\nImplement logistic regression in Theano.\n\n\ntheano-rnn\nImplement recurrent neural networks in Theano.\n\n\ntheano-mlp\nImplement multilayer perceptrons in Theano.\n\n\n\n\n\n\n\nkeras-tutorials\n\n\n\nNotebook\nDescription\n\n\n\n\nkeras\nKeras is an open source neural network library written in Python. It is capable of running on top of either Tensorflow or Theano.\n\n\nsetup\nLearn about the tutorial goals and how to set up your Keras environment.\n\n\nintro-deep-learning-ann\nGet an intro to deep learning with Keras and Artificial Neural Networks (ANN).\n\n\ntheano\nLearn about Theano by working with weights matrices and gradients.\n\n\nkeras-otto\nLearn about Keras by looking at the Kaggle Otto challenge.\n\n\nann-mnist\nReview a simple implementation of ANN for MNIST using Keras.\n\n\nconv-nets\nLearn about Convolutional Neural Networks (CNNs) with Keras.\n\n\nconv-net-1\nRecognize handwritten digits from MNIST using Keras - Part 1.\n\n\nconv-net-2\nRecognize handwritten digits from MNIST using Keras - Part 2.\n\n\nkeras-models\nUse pre-trained models such as VGG16, VGG19, ResNet50, and Inception v3 with Keras.\n\n\nauto-encoders\nLearn about Autoencoders with Keras.\n\n\nrnn-lstm\nLearn about Recurrent Neural Networks (RNNs) with Keras.\n\n\nlstm-sentence-gen\nLearn about RNNs using Long Short Term Memory (LSTM) networks with Keras.\n\n\n\ndeep-learning-misc\n\n\n\nNotebook\nDescription\n\n\n\n\ndeep-dream\nCaffe-based computer vision program which uses a convolutional neural network to find and enhance patterns in images.\n\n\n\n\n\n\n\nscikit-learn\nIPython Notebook(s) demonstrating scikit-learn functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nintro\nIntro notebook to scikit-learn.  Scikit-learn adds Python support for large, multi-dimensional arrays and matrices, along with a large library of high-level mathematical functions to operate on these arrays.\n\n\nknn\nImplement k-nearest neighbors in scikit-learn.\n\n\nlinear-reg\nImplement linear regression in scikit-learn.\n\n\nsvm\nImplement support vector machine classifiers with and without kernels in scikit-learn.\n\n\nrandom-forest\nImplement random forest classifiers and regressors in scikit-learn.\n\n\nk-means\nImplement k-means clustering in scikit-learn.\n\n\npca\nImplement principal component analysis in scikit-learn.\n\n\ngmm\nImplement Gaussian mixture models in scikit-learn.\n\n\nvalidation\nImplement validation and model selection in scikit-learn.\n\n\n\n\n\n\n\nstatistical-inference-scipy\nIPython Notebook(s) demonstrating statistical inference with SciPy functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nscipy\nSciPy is a collection of mathematical algorithms and convenience functions built on the Numpy extension of Python. It adds significant power to the interactive Python session by providing the user with high-level commands and classes for manipulating and visualizing data.\n\n\neffect-size\nExplore statistics that quantify effect size by analyzing the difference in height between men and women.  Uses data from the Behavioral Risk Factor Surveillance System (BRFSS) to estimate the mean and standard deviation of height for adult women and men in the United States.\n\n\nsampling\nExplore random sampling by analyzing the average weight of men and women in the United States using BRFSS data.\n\n\nhypothesis\nExplore hypothesis testing by analyzing the difference of first-born babies compared with others.\n\n\n\n\n\n\n\npandas\nIPython Notebook(s) demonstrating pandas functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\npandas\nSoftware library written for data manipulation and analysis in Python. Offers data structures and operations for manipulating numerical tables and time series.\n\n\ngithub-data-wrangling\nLearn how to load, clean, merge, and feature engineer by analyzing GitHub data from the Viz repo.\n\n\nIntroduction-to-Pandas\nIntroduction to Pandas.\n\n\nIntroducing-Pandas-Objects\nLearn about Pandas objects.\n\n\nData Indexing and Selection\nLearn about data indexing and selection in Pandas.\n\n\nOperations-in-Pandas\nLearn about operating on data in Pandas.\n\n\nMissing-Values\nLearn about handling missing data in Pandas.\n\n\nHierarchical-Indexing\nLearn about hierarchical indexing in Pandas.\n\n\nConcat-And-Append\nLearn about combining datasets: concat and append in Pandas.\n\n\nMerge-and-Join\nLearn about combining datasets: merge and join in Pandas.\n\n\nAggregation-and-Grouping\nLearn about aggregation and grouping in Pandas.\n\n\nPivot-Tables\nLearn about pivot tables in Pandas.\n\n\nWorking-With-Strings\nLearn about vectorized string operations in Pandas.\n\n\nWorking-with-Time-Series\nLearn about working with time series in pandas.\n\n\nPerformance-Eval-and-Query\nLearn about high-performance Pandas: eval() and query() in Pandas.\n\n\n\n\n\n\n\nmatplotlib\nIPython Notebook(s) demonstrating matplotlib functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nmatplotlib\nPython 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms.\n\n\nmatplotlib-applied\nApply matplotlib visualizations to Kaggle competitions for exploratory data analysis.  Learn how to create bar plots, histograms, subplot2grid, normalized plots, scatter plots, subplots, and kernel density estimation plots.\n\n\nIntroduction-To-Matplotlib\nIntroduction to Matplotlib.\n\n\nSimple-Line-Plots\nLearn about simple line plots in Matplotlib.\n\n\nSimple-Scatter-Plots\nLearn about simple scatter plots in Matplotlib.\n\n\nErrorbars.ipynb\nLearn about visualizing errors in Matplotlib.\n\n\nDensity-and-Contour-Plots\nLearn about density and contour plots in Matplotlib.\n\n\nHistograms-and-Binnings\nLearn about histograms, binnings, and density in Matplotlib.\n\n\nCustomizing-Legends\nLearn about customizing plot legends in Matplotlib.\n\n\nCustomizing-Colorbars\nLearn about customizing colorbars in Matplotlib.\n\n\nMultiple-Subplots\nLearn about multiple subplots in Matplotlib.\n\n\nText-and-Annotation\nLearn about text and annotation in Matplotlib.\n\n\nCustomizing-Ticks\nLearn about customizing ticks in Matplotlib.\n\n\nSettings-and-Stylesheets\nLearn about customizing Matplotlib: configurations and stylesheets.\n\n\nThree-Dimensional-Plotting\nLearn about three-dimensional plotting in Matplotlib.\n\n\nGeographic-Data-With-Basemap\nLearn about geographic data with basemap in Matplotlib.\n\n\nVisualization-With-Seaborn\nLearn about visualization with Seaborn.\n\n\n\n\n\n\n\nnumpy\nIPython Notebook(s) demonstrating NumPy functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nnumpy\nAdds Python support for large, multi-dimensional arrays and matrices, along with a large library of high-level mathematical functions to operate on these arrays.\n\n\nIntroduction-to-NumPy\nIntroduction to NumPy.\n\n\nUnderstanding-Data-Types\nLearn about data types in Python.\n\n\nThe-Basics-Of-NumPy-Arrays\nLearn about the basics of NumPy arrays.\n\n\nComputation-on-arrays-ufuncs\nLearn about computations on NumPy arrays: universal functions.\n\n\nComputation-on-arrays-aggregates\nLearn about aggregations: min, max, and everything in between in NumPy.\n\n\nComputation-on-arrays-broadcasting\nLearn about computation on arrays: broadcasting in NumPy.\n\n\nBoolean-Arrays-and-Masks\nLearn about comparisons, masks, and boolean logic in NumPy.\n\n\nFancy-Indexing\nLearn about fancy indexing in NumPy.\n\n\nSorting\nLearn about sorting arrays in NumPy.\n\n\nStructured-Data-NumPy\nLearn about structured data: NumPy's structured arrays.\n\n\n\n\n\n\n\npython-data\nIPython Notebook(s) demonstrating Python functionality geared towards data analysis.\n\n\n\nNotebook\nDescription\n\n\n\n\ndata structures\nLearn Python basics with tuples, lists, dicts, sets.\n\n\ndata structure utilities\nLearn Python operations such as slice, range, xrange, bisect, sort, sorted, reversed, enumerate, zip, list comprehensions.\n\n\nfunctions\nLearn about more advanced Python features: Functions as objects, lambda functions, closures, *args, **kwargs currying, generators, generator expressions, itertools.\n\n\ndatetime\nLearn how to work with Python dates and times: datetime, strftime, strptime, timedelta.\n\n\nlogging\nLearn about Python logging with RotatingFileHandler and TimedRotatingFileHandler.\n\n\npdb\nLearn how to debug in Python with the interactive source code debugger.\n\n\nunit tests\nLearn how to test in Python with Nose unit tests.\n\n\n\n\n\n\n\nkaggle-and-business-analyses\nIPython Notebook(s) used in kaggle competitions and business analyses.\n\n\n\nNotebook\nDescription\n\n\n\n\ntitanic\nPredict survival on the Titanic.  Learn data cleaning, exploratory data analysis, and machine learning.\n\n\nchurn-analysis\nPredict customer churn.  Exercise logistic regression, gradient boosting classifers, support vector machines, random forests, and k-nearest-neighbors.  Includes discussions of confusion matrices, ROC plots, feature importances, prediction probabilities, and calibration\/descrimination.\n\n\n\n\n\n\n\nspark\nIPython Notebook(s) demonstrating spark and HDFS functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nspark\nIn-memory cluster computing framework, up to 100 times faster for certain applications and is well suited for machine learning algorithms.\n\n\nhdfs\nReliably stores very large files across machines in a large cluster.\n\n\n\n\n\n\n\nmapreduce-python\nIPython Notebook(s) demonstrating Hadoop MapReduce with mrjob functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nmapreduce-python\nRuns MapReduce jobs in Python, executing jobs locally or on Hadoop clusters. Demonstrates Hadoop Streaming in Python code with unit test and mrjob config file to analyze Amazon S3 bucket logs on Elastic MapReduce.  Disco is another python-based alternative.\n\n\n\n\n\n\n\naws\nIPython Notebook(s) demonstrating Amazon Web Services (AWS) and AWS tools functionality.\nAlso check out:\n\nSAWS: A Supercharged AWS command line interface (CLI).\nAwesome AWS: A curated list of libraries, open source repos, guides, blogs, and other resources.\n\n\n\n\nNotebook\nDescription\n\n\n\n\nboto\nOfficial AWS SDK for Python.\n\n\ns3cmd\nInteracts with S3 through the command line.\n\n\ns3distcp\nCombines smaller files and aggregates them together by taking in a pattern and target file.  S3DistCp can also be used to transfer large volumes of data from S3 to your Hadoop cluster.\n\n\ns3-parallel-put\nUploads multiple files to S3 in parallel.\n\n\nredshift\nActs as a fast data warehouse built on top of technology from massive parallel processing (MPP).\n\n\nkinesis\nStreams data in real time with the ability to process thousands of data streams per second.\n\n\nlambda\nRuns code in response to events, automatically managing compute resources.\n\n\n\n\n\n\n\ncommands\nIPython Notebook(s) demonstrating various command lines for Linux, Git, etc.\n\n\n\nNotebook\nDescription\n\n\n\n\nlinux\nUnix-like and mostly POSIX-compliant computer operating system.  Disk usage, splitting files, grep, sed, curl, viewing running processes, terminal syntax highlighting, and Vim.\n\n\nanaconda\nDistribution of the Python programming language for large-scale data processing, predictive analytics, and scientific computing, that aims to simplify package management and deployment.\n\n\nipython notebook\nWeb-based interactive computational environment where you can combine code execution, text, mathematics, plots and rich media into a single document.\n\n\ngit\nDistributed revision control system with an emphasis on speed, data integrity, and support for distributed, non-linear workflows.\n\n\nruby\nUsed to interact with the AWS command line and for Jekyll, a blog framework that can be hosted on GitHub Pages.\n\n\njekyll\nSimple, blog-aware, static site generator for personal, project, or organization sites.  Renders Markdown or Textile and Liquid templates, and produces a complete, static website ready to be served by Apache HTTP Server, Nginx or another web server.\n\n\npelican\nPython-based alternative to Jekyll.\n\n\ndjango\nHigh-level Python Web framework that encourages rapid development and clean, pragmatic design. It can be useful to share reports\/analyses and for blogging. Lighter-weight alternatives include Pyramid, Flask, Tornado, and Bottle.\n\n\n\nmisc\nIPython Notebook(s) demonstrating miscellaneous functionality.\n\n\n\nNotebook\nDescription\n\n\n\n\nregex\nRegular expression cheat sheet useful in data wrangling.\n\n\nalgorithmia\nAlgorithmia is a marketplace for algorithms. This notebook showcases 4 different algorithms: Face Detection, Content Summarizer, Latent Dirichlet Allocation and Optical Character Recognition.\n\n\n\nnotebook-installation\nanaconda\nAnaconda is a free distribution of the Python programming language for large-scale data processing, predictive analytics, and scientific computing that aims to simplify package management and deployment.\nFollow instructions to install Anaconda or the more lightweight miniconda.\ndev-setup\nFor detailed instructions, scripts, and tools to set up your development environment for data analysis, check out the dev-setup repo.\nrunning-notebooks\nTo view interactive content or to modify elements within the IPython notebooks, you must first clone or download the repository then run the notebook.  More information on IPython Notebooks can be found here.\n$ git clone https:\/\/github.com\/donnemartin\/data-science-ipython-notebooks.git\n$ cd data-science-ipython-notebooks\n$ jupyter notebook\n\nNotebooks tested with Python 2.7.x.\ncredits\n\nPython for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython by Wes McKinney\nPyCon 2015 Scikit-learn Tutorial by Jake VanderPlas\nPython Data Science Handbook by Jake VanderPlas\nParallel Machine Learning with scikit-learn and IPython by Olivier Grisel\nStatistical Interference Using Computational Methods in Python by Allen Downey\nTensorFlow Examples by Aymeric Damien\nTensorFlow Tutorials by Parag K Mital\nTensorFlow Tutorials by Nathan Lintz\nTensorFlow Tutorials by Alexander R Johansen\nTensorFlow Book by Nishant Shukla\nSummer School 2015 by mila-udem\nKeras tutorials by Valerio Maggio\nKaggle\nYhat Blog\n\ncontributing\nContributions are welcome!  For bug reports or requests please submit an issue.\ncontact-info\nFeel free to contact me to discuss any issues, questions, or comments.\n\nEmail: donne.martin@gmail.com\nTwitter: @donne_martin\nGitHub: donnemartin\nLinkedIn: donnemartin\nWebsite: donnemartin.com\n\nlicense\nThis repository contains a variety of content; some developed by Donne Martin, and some from third-parties.  The third-party content is distributed under the license provided by those parties.\nThe content developed by Donne Martin is distributed under the following license:\nI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).\nCopyright 2015 Donne Martin\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n","167":"Algo VPN\n\n\n\nAlgo VPN is a set of Ansible scripts that simplify the setup of a personal WireGuard and IPsec VPN. It uses the most secure defaults available and works with common cloud providers. See our release announcement for more information.\nFeatures\n\nSupports only IKEv2 with strong crypto (AES-GCM, SHA2, and P-256) for iOS, macOS, and Linux\nSupports WireGuard for all of the above, in addition to Android and Windows 10\nGenerates .conf files and QR codes for iOS, macOS, Android, and Windows WireGuard clients\nGenerates Apple profiles to auto-configure iOS and macOS devices for IPsec - no client software required\nIncludes a helper script to add and remove users\nBlocks ads with a local DNS resolver (optional)\nSets up limited SSH users for tunneling traffic (optional)\nBased on current versions of Ubuntu and strongSwan\nInstalls to DigitalOcean, Amazon Lightsail, Amazon EC2, Vultr, Microsoft Azure, Google Compute Engine, Scaleway, OpenStack, CloudStack, Hetzner Cloud, Linode, or your own Ubuntu server (for more advanced users)\n\nAnti-features\n\nDoes not support legacy cipher suites or protocols like L2TP, IKEv1, or RSA\nDoes not install Tor, OpenVPN, or other risky servers\nDoes not depend on the security of TLS\nDoes not claim to provide anonymity or censorship avoidance\nDoes not claim to protect you from the FSB, MSS, DGSE, or FSM\n\nDeploy the Algo Server\nThe easiest way to get an Algo server running is to run it on your local system or from Google Cloud Shell and let it set up a new virtual machine in the cloud for you.\n\n\nSetup an account on a cloud hosting provider. Algo supports DigitalOcean (most user friendly), Amazon Lightsail, Amazon EC2, Vultr, Microsoft Azure, Google Compute Engine, Scaleway, DreamCompute, Linode, or other OpenStack-based cloud hosting, Exoscale or other CloudStack-based cloud hosting,  or Hetzner Cloud.\n\n\nGet a copy of Algo. The Algo scripts will be installed on your local system. There are two ways to get a copy:\n\n\nDownload the ZIP file. Unzip the file to create a directory named algo-master containing the Algo scripts.\n\n\nRun the command git clone https:\/\/github.com\/trailofbits\/algo.git to create a directory named algo containing the Algo scripts.\n\n\n\n\nInstall Algo's core dependencies. Algo requires that Python 3.6 or later and at least one supporting package are installed on your system.\n\n\nmacOS: Catalina includes Python 3 as part of the optional Command Line Developer Tools package. From Terminal run:\npython3 -m pip install --user --upgrade virtualenv\nIf prompted, install the Command Line Developer Tools and re-run the above command.\nSee Deploy from macOS for information on installing Python 3 on macOS versions prior to Catalina.\n\n\nLinux: Recent releases of Ubuntu, Debian, and Fedora come with Python 3 already installed. Make sure your system is up-to-date and install the supporting package(s):\n\nUbuntu and Debian:\nsudo apt install -y --no-install-recommends python3-virtualenv\n\nFedora:\nsudo dnf install -y python3-virtualenv\n\nRed Hat and CentOS 7 and later (for earlier versions see this documentation):\nsudo yum -y install epel-release\nsudo yum -y install python36-virtualenv\n\n\n\n\nWindows: Use the Windows Subsystem for Linux (WSL) to create your own copy of Ubuntu running under Windows from which to install and run Algo. See the Windows documentation.\n\n\n\n\nInstall Algo's remaining dependencies. You'll need to run these commands from the Algo directory each time you download a new copy of Algo. In a Terminal window cd into the algo-master (ZIP file) or algo (git clone) directory and run:\npython3 -m virtualenv --python=\"$(command -v python3)\" .env &&\n  source .env\/bin\/activate &&\n  python3 -m pip install -U pip virtualenv &&\n  python3 -m pip install -r requirements.txt\nOn Fedora add the option --system-site-packages to the first command above. On macOS install the C compiler if prompted.\n\n\nSet your configuration options. Open the file config.cfg in your favorite text editor. Specify the users you wish to create in the users list. Create a unique user for each device you plan to connect to your VPN. If you want to be able to add or delete users later, you must select yes at the Do you want to retain the keys (PKI)? prompt during the deployment. You should also review the other options before deployment, as changing your mind about them later may require you to deploy a brand new server.\n\n\nStart the deployment. Return to your terminal. In the Algo directory, run .\/algo and follow the instructions. There are several optional features available. None are required for a fully functional VPN server. These optional features are described in greater detail in here.\n\n\nThat's it! You will get the message below when the server deployment process completes. Take note of the p12 (user certificate) password and the CA key in case you need them later, they will only be displayed this time.\nYou can now set up clients to connect to your VPN. Proceed to Configure the VPN Clients below.\n    \"#                          Congratulations!                            #\"\n    \"#                     Your Algo server is running.                     #\"\n    \"#    Config files and certificates are in the .\/configs\/ directory.    #\"\n    \"#              Go to https:\/\/whoer.net\/ after connecting               #\"\n    \"#        and ensure that all your traffic passes through the VPN.      #\"\n    \"#                     Local DNS resolver 172.16.0.1                    #\"\n    \"#        The p12 and SSH keys password for new users is XXXXXXXX       #\"\n    \"#        The CA key password is XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX       #\"\n    \"#      Shell access: ssh -F configs\/<server_ip>\/ssh_config <hostname>  #\"\n\nConfigure the VPN Clients\nCertificates and configuration files that users will need are placed in the configs directory. Make sure to secure these files since many contain private keys. All files are saved under a subdirectory named with the IP address of your new Algo VPN server.\nApple Devices\nWireGuard is used to provide VPN services on Apple devices. Algo generates a WireGuard configuration file, wireguard\/<username>.conf, and a QR code, wireguard\/<username>.png, for each user defined in config.cfg.\nOn iOS, install the WireGuard app from the iOS App Store. Then, use the WireGuard app to scan the QR code or AirDrop the configuration file to the device.\nOn macOS Mojave or later, install the WireGuard app from the Mac App Store. WireGuard will appear in the menu bar once you run the app. Click on the WireGuard icon, choose Import tunnel(s) from file..., then select the appropriate WireGuard configuration file.\nOn either iOS or macOS, you can enable \"Connect on Demand\" and\/or exclude certain trusted Wi-Fi networks (such as your home or work) by editing the tunnel configuration in the WireGuard app. (Algo can't do this automatically for you.)\nInstalling WireGuard is a little more complicated on older version of macOS. See Using macOS as a Client with WireGuard.\nIf you prefer to use the built-in IPSEC VPN on Apple devices, or need \"Connect on Demand\" or excluded Wi-Fi networks automatically configured, then see Using Apple Devices as a Client with IPSEC.\nAndroid Devices\nWireGuard is used to provide VPN services on Android. Install the WireGuard VPN Client. Import the corresponding wireguard\/<name>.conf file to your device, then setup a new connection with it. See the Android setup instructions for more detailed walkthrough.\nWindows\nWireGuard is used to provide VPN services on Windows. Algo generates a WireGuard configuration file, wireguard\/<username>.conf, for each user defined in config.cfg.\nInstall the WireGuard VPN Client. Import the generated wireguard\/<username>.conf file to your device, then setup a new connection with it.\nLinux WireGuard Clients\nWireGuard works great with Linux clients. See this page for an example of how to configure WireGuard on Ubuntu.\nLinux strongSwan IPsec Clients (e.g., OpenWRT, Ubuntu Server, etc.)\nPlease see this page.\nOther Devices\nDepending on the platform, you may need one or multiple of the following files.\n\nipsec\/manual\/cacert.pem: CA Certificate\nipsec\/manual\/.p12: User Certificate and Private Key (in PKCS#12 format)\nipsec\/manual\/.conf: strongSwan client configuration\nipsec\/manual\/.secrets: strongSwan client configuration\nipsec\/apple\/.mobileconfig: Apple Profile\nwireguard\/.conf: WireGuard configuration profile\nwireguard\/.png: WireGuard configuration QR code\n\nSetup an SSH Tunnel\nIf you turned on the optional SSH tunneling role, then local user accounts will be created for each user in config.cfg and SSH authorized_key files for them will be in the configs directory (user.ssh.pem). SSH user accounts do not have shell access, cannot authenticate with a password, and only have limited tunneling options (e.g., ssh -N is required). This ensures that SSH users have the least access required to setup a tunnel and can perform no other actions on the Algo server.\nUse the example command below to start an SSH tunnel by replacing <user> and <ip> with your own. Once the tunnel is setup, you can configure a browser or other application to use 127.0.0.1:1080 as a SOCKS proxy to route traffic through the Algo server:\nssh -D 127.0.0.1:1080 -f -q -C -N <user>@algo -i configs\/<ip>\/ssh-tunnel\/<user>.pem -F configs\/<ip>\/ssh_config\nSSH into Algo Server\nYour Algo server is configured for key-only SSH access for administrative purposes. Open the Terminal app, cd into the algo-master directory where you originally downloaded Algo, and then use the command listed on the success message:\nssh -F configs\/<ip>\/ssh_config <hostname>\n\nwhere <ip> is the IP address of your Algo server. If you find yourself regularly logging into the server then it will be useful to load your Algo ssh key automatically. Add the following snippet to the bottom of ~\/.bash_profile to add it to your shell environment permanently:\nssh-add ~\/.ssh\/algo > \/dev\/null 2>&1\n\nAlternatively, you can choose to include the generated configuration for any Algo servers created into your SSH config. Edit the file ~\/.ssh\/config to include this directive at the top:\nInclude <algodirectory>\/configs\/*\/ssh_config\n\nwhere <algodirectory> is the directory where you cloned Algo.\nAdding or Removing Users\nIf you chose to save the CA key during the deploy process, then Algo's own scripts can easily add and remove users from the VPN server.\n\nUpdate the users list in your config.cfg\nOpen a terminal, cd to the algo directory, and activate the virtual environment with source .env\/bin\/activate\nRun the command: .\/algo update-users\n\nAfter this process completes, the Algo VPN server will contain only the users listed in the config.cfg file.\nAdditional Documentation\n\nFAQ\nTroubleshooting\nHow Algo uses Firewalls\n\nSetup Instructions for Specific Cloud Providers\n\nConfigure Amazon EC2\nConfigure Azure\nConfigure DigitalOcean\nConfigure Google Cloud Platform\nConfigure Vultr\nConfigure CloudStack\nConfigure Hetzner Cloud\n\nInstall and Deploy from Common Platforms\n\nDeploy from macOS\nDeploy from Windows\nDeploy from Google Cloud Shell\nDeploy from RedHat\/CentOS 6.x\nDeploy from a Docker container\n\nSetup VPN Clients to Connect to the Server\n\nSetup Android clients\nSetup Linux clients with Ansible\nSetup Ubuntu clients to use WireGuard\nSetup Linux clients to use IPsec\nSetup Apple devices to use IPsec\nSetup Macs running macOS 10.13 or older to use WireGuard\n\nAdvanced Deployment\n\nDeploy to your own Ubuntu server, and road warrior setup\nDeploy from Ansible non-interactively\nDeploy onto a cloud server at time of creation with shell script or cloud-init\nDeploy to an unsupported cloud provider\nDeploy to your own FreeBSD server\n\nIf you've read all the documentation and have further questions, join the chat on Gitter.\nEndorsements\n\nI've been ranting about the sorry state of VPN svcs for so long, probably about\ntime to give a proper talk on the subject. TL;DR: use Algo.\n\n-- Kenn White\n\nBefore picking a VPN provider\/app, make sure you do some research\nhttps:\/\/research.csiro.au\/ng\/wp-content\/uploads\/sites\/106\/2016\/08\/paper-1.pdf ... \u2013 or consider Algo\n\n-- The Register\n\nAlgo is really easy and secure.\n\n-- the grugq\n\nI played around with Algo VPN, a set of scripts that let you set up a VPN in the cloud in very little time, even if you don\u2019t know much about development. I\u2019ve got to say that I was quite impressed with Trail of Bits\u2019 approach.\n\n-- Romain Dillet for TechCrunch\n\nIf you\u2019re uncomfortable shelling out the cash to an anonymous, random VPN provider, this is the best solution.\n\n-- Thorin Klosowski for Lifehacker\nSupport Algo VPN\n\n\n\n\nAll donations support continued development. Thanks!\n\nWe accept donations via PayPal, Patreon, and Flattr.\nUse our referral code when you sign up to Digital Ocean for a $10 credit.\nWe also accept and appreciate contributions of new code and bugfixes via Github Pull Requests.\n\nAlgo is licensed and distributed under the AGPLv3. If you want to distribute a closed-source modification or service based on Algo, then please consider purchasing an exception . As with the methods above, this will help support continued development.\n","168":"Tornado Web Server\n\n\nTornado is a Python web framework and\nasynchronous networking library, originally developed at FriendFeed.  By using non-blocking network I\/O, Tornado\ncan scale to tens of thousands of open connections, making it ideal for\nlong polling,\nWebSockets, and other\napplications that require a long-lived connection to each user.\n\nHello, world\nHere is a simple \"Hello, world\" example web app for Tornado:\nimport tornado.ioloop\nimport tornado.web\n\nclass MainHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write(\"Hello, world\")\n\ndef make_app():\n    return tornado.web.Application([\n        (r\"\/\", MainHandler),\n    ])\n\nif __name__ == \"__main__\":\n    app = make_app()\n    app.listen(8888)\n    tornado.ioloop.IOLoop.current().start()\nThis example does not use any of Tornado's asynchronous features; for\nthat see this simple chat room.\n\nDocumentation\nDocumentation and links to additional resources are available at\nhttps:\/\/www.tornadoweb.org\n","169":"master\nmaster\n#This document helps to understand python in detail.And tells you More Information\n#This document helps to understand python in details.\nmaster\nMy Python Examples for everyone\n=======\nmaster\nMy Python Egs \ud83d\udc0d \ud83d\ude04\n\nI do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me:\nmaster\nMy Best Python Examples for education\nmaster\n\u2709\ufe0f craig@geekcomputers.co.uk.\nmaster\nThis script contain important functions which help reduce human workload.\nCode documentation is aligned correctly when the files are viewed in Notepad++. \ud83d\uddd2\ufe0f\n\nThis script contain important functions which help in reducing human workload.And also helps begineers to get started with python.\nCode documentation is aligned correctly when the files are viewed in Notepad++.\nJarvis is used as a google assistant.\nmaster\n\n\nbatch_file_rename.py - This batch renames a group of files in a given directory, once you pass the current and the new extensions.\n\n\ncreate_dir_if_not_there.py - Checks to see if a directory exists in the users home directory. If a directory does not exist, then one will be created.\n\n\nFast Youtube Downloader - Downloads YouTube videos quickly with parallel threads using aria2c.\n\n\nGoogle Image Downloader - Query a given term and retrieve images from the Google Image database.\n\n\ndir_test.py - Tests to see if the directory testdir exists, if not it will create the directory for you if you want it created.\n\n\nenv_check.py - This script will check to see if all of the environment variables required are set.\n\n\nblackjack.py - This script contains the Casino BlackJack-21 Game in Python.\n\n\nfileinfo.py - Shows file information for a given file.\n\n\nfolder_size.py - Scans the current directory and all subdirectories and displays the size.\n\n\nlogs.py - This script will search for all *.log files in the given directory, zip them using the program you specify, and then date stamp them.\n\n\nmove_files_over_x_days.py - Moves all files over a specified age (in days) from the source directory to the destination directory.\nperfect\n\n\nnslookup_check.py - This simple script opens the file server_list.txt and then does an nslookup for each one to check the DNS entry.\n\n\nosinfo.py - Displays some information about the OS on which you are running this script.\n\n\nping_servers.py - This script, depending on the arguments supplied, will ping the servers associated with that application group.\n\n\nping_subnet.py - After supplying the first 3 octets this file scans the final range for available addresses.\n\n\npowerdown_startup.py - This file goes through the server list and pings the machine, if it is up it will load the putty session, if it is not then it will notify you.\n\n\nputtylogs.py -  This file zips up all the logs in the given directory.\n\n\nscript_count.py - This file scans the scripts directory and gives a count of the different types of scripts.\n\n\n[get_youtube_view.py] - This is a simple python script used to get more views on your youtube videos. This script may also be used to repeat songs on Youtube.\n\n\nscript_listing.py - This file will list all the files in the given directory, and go through all the subdirectories as well.\n\n\ntestlines.py - This simple script opens a file and prints out 100 lines of whatever is the set for the line variable.\n\n\ntweeter.py - Allows you to tweet text or a picture from the terminal.\n\n\nserial_scanner.py contains a method called ListAvailablePorts which returns a list with the names of the serial ports that are in use in the computer. This method works only on Linux and Windows (can be extended for mac os). If no port is found, an empty list is returned.\n\n\nget_youtube_view.py - A simple python script to get more views for your YouTube videos. Useful for repeating songs on YouTube.\n\n\nCountMillionCharacter.py And CountMillionCharacter2.0.py - Gets character count of a text file.\n\n\nxkcd_downloader.py - Downloads the latest XKCD comic and places them in a new folder called \"comics\".\n\n\ntimymodule.py - A great alternative to Python 'timeit' module and easier to use.\n\n\ncalculator.py - Uses Python's eval() function to implement a calculator.\n\n\nGoogle_News.py - Uses BeautifulSoup to provide Latest news headline along with news link.\n\n\ncricket_live_score - Uses BeautifulSoup to provide live cricket score.\n\n\nyoutube.py - It Takes a song name as input and fetches the YouTube URL of the best matching song and plays it.\n\n\nsite_health.py - Checks the health of a remote server\n\n\nSimpleStopWatch.py - Simple Stop Watch implementation using Python's time module.\n\n\nChangemac.py - This script change your MAC address , generate random MAC address or enter input as new MAC address in your linux(Successfully Tested in Ubuntu 18.04).\n\n\nwhatsapp-monitor.py - Uses Selenium to give online status about your contacts when your contacts become online in WA you will get an update about it on terminal.\n\n\nwhatsapp-chat-analyzer.py - This is whatsapp group\/individual chat analyzer .\nThis script is able to analyse all activity happened in whatsapp group and visualize all things through matplotlib library(In Graph form).\n\n\nJARVIS.py - Control windows programs with your voice.\n\n\nImages Downloader - Download Image Form webpage Work on unix based systems.\n\n\nmaster\n\nYou can have a data set example for practise : Laliga Data\n=======\nmaster\n\n\n- [RandomNumberGame.py](---) - A Basic Game of Gussesing Numbers .\nmaster\nmaster\n","170":"Prophet: Automatic Forecasting Procedure\n\n\n\nProphet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.\nProphet is open source software released by Facebook's Core Data Science team. It is available for download on CRAN and PyPI.\nImportant links\n\nHomepage: https:\/\/facebook.github.io\/prophet\/\nHTML documentation: https:\/\/facebook.github.io\/prophet\/docs\/quick_start.html\nIssue tracker: https:\/\/github.com\/facebook\/prophet\/issues\nSource code repository: https:\/\/github.com\/facebook\/prophet\nProphet R package: https:\/\/cran.r-project.org\/package=prophet\nProphet Python package: https:\/\/pypi.python.org\/pypi\/fbprophet\/\nRelease blogpost: https:\/\/research.fb.com\/prophet-forecasting-at-scale\/\nProphet paper: Sean J. Taylor, Benjamin Letham (2018) Forecasting at scale. The American Statistician 72(1):37-45 (https:\/\/peerj.com\/preprints\/3190.pdf).\n\nInstallation in R\nProphet is a CRAN package so you can use install.packages.\ninstall.packages('prophet')\nAfter installation, you can get started!\nWindows\nOn Windows, R requires a compiler so you'll need to follow the instructions provided by rstan. The key step is installing Rtools before attempting to install the package.\nIf you have custom Stan compiler settings, install from source rather than the CRAN binary.\nInstallation in Python\nProphet is on PyPI, so you can use pip to install it. From v0.6 onwards, Python 2 is no longer supported.\n# Install pystan with pip before using pip to install fbprophet\npip install pystan\n\npip install fbprophet\nThe default dependency that Prophet has is pystan. PyStan has its own installation instructions. Install pystan with pip before using pip to install fbprophet.\nYou can also choose a (more experimental) alternative stan backend called cmdstanpy. It requires the CmdStan command line interface and you will have to specify the environment variable STAN_BACKEND pointing to it, for example:\n# bash\n$ CMDSTAN=\/tmp\/cmdstan-2.22.1 STAN_BACKEND=CMDSTANPY pip install fbprophet\n\nNote that the CMDSTAN variable is directly related to cmdstanpy module and can be omitted if your CmdStan binaries are in your $PATH.\nIt is also possible to install Prophet with two backends:\n# bash\n$ CMDSTAN=\/tmp\/cmdstan-2.22.1 STAN_BACKEND=PYSTAN,CMDSTANPY pip install fbprophet\n\nAfter installation, you can get started!\nIf you upgrade the version of PyStan installed on your system, you may need to reinstall fbprophet (see here).\nAnaconda\nUse conda install gcc to set up gcc. The easiest way to install Prophet is through conda-forge: conda install -c conda-forge fbprophet.\nWindows\nOn Windows, PyStan requires a compiler so you'll need to follow the instructions. The easiest way to install Prophet in Windows is in Anaconda.\nLinux\nMake sure compilers (gcc, g++, build-essential) and Python development tools (python-dev, python3-dev) are installed. In Red Hat systems, install the packages gcc64 and gcc64-c++. If you are using a VM, be aware that you will need at least 4GB of memory to install fbprophet, and at least 2GB of memory to use fbprophet.\nChangelog\nVersion 0.6 (2020.03.03)\n\nFix bugs related to upstream changes in holidays and pandas packages.\nCompile model during first use, not during install (to comply with CRAN policy)\ncmdstanpy backend now available in Python\nPython 2 no longer supported\n\nVersion 0.5 (2019.05.14)\n\nConditional seasonalities\nImproved cross validation estimates\nPlotly plot in Python\nBugfixes\n\nVersion 0.4 (2018.12.18)\n\nAdded holidays functionality\nBugfixes\n\nVersion 0.3 (2018.06.01)\n\nMultiplicative seasonality\nCross validation error metrics and visualizations\nParameter to set range of potential changepoints\nUnified Stan model for both trend types\nImproved future trend uncertainty for sub-daily data\nBugfixes\n\nVersion 0.2.1 (2017.11.08)\n\nBugfixes\n\nVersion 0.2 (2017.09.02)\n\nForecasting with sub-daily data\nDaily seasonality, and custom seasonalities\nExtra regressors\nAccess to posterior predictive samples\nCross-validation function\nSaturating minimums\nBugfixes\n\nVersion 0.1.1 (2017.04.17)\n\nBugfixes\nNew options for detecting yearly and weekly seasonality (now the default)\n\nVersion 0.1 (2017.02.23)\n\nInitial release\n\nLicense\nProphet is licensed under the MIT license.\n","171":"\nEnglish svg pdf jpg png\n\u7b80\u4f53\u4e2d\u6587 svg pdf jpg png by tkchu\n\n\nDisclaimer\n\nThis work (the WORK) was created by Milo Yip (the AUTHOR), who has been a game developer for more than 20 years.\nThe books shown in the WORK represent knowledge\/skills that may\/should be acquired by game programmers. There are other important ways of learning, such as practicing, courses, industrial\/academic conferences\/publications, etc.\nThe AUTHOR has not been sponsored by any authors\/publishers of the books, except that he was the translator for the Chinese version of Game Engine Architecture.\nComments are welcome but the AUTHOR reserved the rights of modification.\nThe WORK is licensed under Creative Commons Attribution-ShareAlike 4.0 International License.\n\nBuild\n\nGNU make\nGraphviz 2.38\nGhostscript 9.16 (ps2pdf)\ncpdf\n\nAcknowledgement\n\nWindy Wang\nStanley Luo\nShuo Chen\nXinz\nVczh\nHush\n\n","172":"Inter\nInter is a typeface specially designed for user interfaces\nwith focus on high legibility of small-to-medium sized text on computer screens.\nThe family features a tall x-height to aid in readability of mixed-case and\nlower-case text. Several OpenType features are provided as well,\nlike contextual alternates that adjusts punctuation depending on the shape of\nsurrounding glyphs, slashed zero for when you need to disambiguate \"0\" from \"o\",\ntabular numbers, etc.\n\n\u2b07\ufe0e Download the latest release\nAfter downloading the zip from above:\n\nDouble-click the downloaded zip file to unpack or open it.\nFollow the instructions in \"install-mac.txt\" or \"install-win.txt\", depending\non what operating system you're using.\n\nFont files are also available from the following third-party distributors:\n\ninter-ui on npm\nfont-inter in Homebrew's Fonts cask\nSee Repology for a list of Linux distributions that include the font in their repositories.\n\nDisclaimer: Third-party packages may not always be up-to-date.\nDesign\nInter is similar to Roboto, San Francisco, Akkurat, Asap, Lucida Grande and other \"UI\" and \"Text\" typefaces. Some trade-offs were made in order to make this typeface work really well at small sizes:\n\nCurrently not suitable for very large sizes because of some small-scale glyph optimizations (like \"pits\" and \"traps\") that help rasterization at small sizes but stand out and interfere at large sizes.\nRasterized at sizes below 12px, some stems\u2014like the horizontal center of \"E\", \"F\", or vertical center of \"m\"\u2014are drawn with two semi-opaque pixels instead of one solid. This is because we \"prioritize\" (optimize for) higher-density rasterizations. If we move these stems to an off-center position\u2014so that they can be drawn sharply at e.g. 11px\u2014text will be less legible at higher resolutions.\n\nCurrent font styles:\n\n\n\nName\nWeight class\n\n\n\n\nThin\n100\n\n\nThin Italic\n100\n\n\nExtra Light\n200\n\n\nExtra Light Italic\n200\n\n\nLight\n300\n\n\nLight Italic\n300\n\n\nRegular\n400\n\n\nItalic\n400\n\n\nMedium\n500\n\n\nMedium Italic\n500\n\n\nSemi Bold\n600\n\n\nSemi Bold Italic\n600\n\n\nBold\n700\n\n\nBold Italic\n700\n\n\nExtra Bold\n800\n\n\nExtra Bold Italic\n800\n\n\nBlack\n900\n\n\nBlack Italic\n900\n\n\n\nInter also ships as a variable font.\nFont metrics\nThis font was originally designed to work at a specific size: 11px. Thus, the Units per EM (UPM) is defined in such a way that a power-of-two multiple of one EM unit ends up at an integer value compared to a pixel. Most fonts are designed with a UPM of either 1000 or 2048. Because of this we picked a value that is as high as possible but also as close as possible to one of those common values (since it's reasonable to assume that some layout engines and rasterizers are optimized for those value magnitudes.) We ended up picking a UPM of 2816 which equates to exactly 256 units per pixel when rasterized for size 11pt at 1x scale. This also means that when rasterized at power-of-two scales (like 2x and 4x) the number of EM units corresponding to a pixel is an integer (128 units for 2x, 64 for 4x, and so on.)\nHowever, as the project progressed and the typeface was put into use, it quickly\nbecame clear that for anything longer than a short word, it was actually hard to\nread the almost monotonically-spaced letters.\nA second major revision was created where the previously-strict rule of geometry being even multiples of 256 was relaxed and now the rule is \"try to stick with 128x, if you can't, stick with 64x and if you can't do that either, never go below 16x.\" This means that Inter is now much more variable in pace than it used to be, making it work better at higher resolutions and work much better in longer text, but losing some contrast and sharpness at small sizes.\n\nThe glyphs are designed based on this \"plan\"; most stems and lines will be positioned at EM units that are even multiples of 128, and in a few cases they are at even multiples of 64 or as low as 16.\nMetrics:\n\nUPM:        2816\nDescender:  -640\nx-height:   1536\nCap height: 2048\nAscender:   2688\n\nTranslating between EM units and pixels:\n\nRasterized at 11px: 1px = 256 units\nRasterized at 22px: 1px = 128 units\nRasterized at 44px: 1px =  64 units\n\nThere's a Figma workspace for glyphs, with configured metrics: \"Inter glyphs\"\nSupporters\nA wholehearted Thank You to everyone who supports the Inter project!\nDonors\n\n@adrianmg\n@artemc\n@bapun26\n@brianlovin\n@chadlittle\n@colinkeany\n@danrowden\n@davo\n@emuravjev\n@gbougakov\n@jakejarvis\n@lukesbeard\n@lustfullyCake\n@mamuso\n@mbullington\n@muuvmuuv\n@NetOperatorWibby\n@pedromvpg\n@pmarsceill\n@romashamin\n@ruslangirichev\n@saishmenon\n@satyakresna\n@sorentwo\n@StandardResumeSponsors\n@stpnkcrk\n@taravancil\n@usmanity\n@zethussuen\nStefan Kempf\n\n(Private donors excluded)\nContributors\n\n@thundernixon\n@KatjaSchimmel\n@kdrag0n\n@gabrielizaias\n@fractaledmind\n@davelab6\n@Veratyr\n@Calinou\n\nDevelopment\nFor instructions on how to work with the source files and how to\ncompile & build font files,\nrefer to CONTRIBUTING.md.\nInter is licensed under the SIL Open Font License\n","173":"Magic Wormhole\n\n\n\n\n\nGet things from one computer to another, safely.\nThis package provides a library and a command-line tool named wormhole,\nwhich makes it possible to get arbitrary-sized files and directories\n(or short pieces of text) from one computer to another. The two endpoints are\nidentified by using identical \"wormhole codes\": in general, the sending\nmachine generates and displays the code, which must then be typed into the\nreceiving machine.\nThe codes are short and human-pronounceable, using a phonetically-distinct\nwordlist. The receiving side offers tab-completion on the codewords, so\nusually only a few characters must be typed. Wormhole codes are single-use\nand do not need to be memorized.\n\nPyCon 2016 presentation: Slides, Video\n\nFor complete documentation, please see https:\/\/magic-wormhole.readthedocs.io\nor the docs\/ subdirectory.\nThis program uses two servers, whose source code is kept in separate\nrepositories: the\nmailbox server,\nand the\ntransit relay.\nLicense, Compatibility\nMagic-Wormhole is released under the MIT license, see the LICENSE file for details.\nThis library is compatible with Python 3.5 and higher (tested against 3.5,\n3.6, 3.7, and 3.8). It also still works with Python 2.7.\nPackaging, Installation\nMagic Wormhole packages are included in many operating systems.\n\nTo install it without an OS package, follow the Installation docs.\n","174":"Faker is a Python package that generates fake data for you. Whether\nyou need to bootstrap your database, create good-looking XML documents,\nfill-in your persistence to stress test it, or anonymize data taken from\na production service, Faker is for you.\nFaker is heavily inspired by PHP Faker, Perl Faker, and by Ruby Faker.\n\n_|_|_|_|          _|\n_|        _|_|_|  _|  _|      _|_|    _|  _|_|\n_|_|_|  _|    _|  _|_|      _|_|_|_|  _|_|\n_|      _|    _|  _|  _|    _|        _|\n_|        _|_|_|  _|    _|    _|_|_|  _|\n\n    \n\n\nCompatibility\nStarting from version 4.0.0, Faker dropped support for Python 2 and only supports Python\n3.5 and above. If you still need Python 2 compatibility, please install version 3.0.1 in the\nmeantime, and please consider updating your codebase to support Python 3 so you can enjoy the\nlatest features Faker has to offer. Please see the extended docs for more details, especially\nif you are upgrading from version 2.0.4 and below as there might be breaking changes.\nThis package was also previously called fake-factory which was already deprecated by the end\nof 2016, and much has changed since then, so please ensure that your project and its dependencies\ndo not depend on the old package.\n\nBasic Usage\nInstall with pip:\npip install Faker\nUse faker.Faker() to create and initialize a faker\ngenerator, which can generate data by accessing properties named after\nthe type of data you want.\nfrom faker import Faker\nfake = Faker()\n\nfake.name()\n# 'Lucy Cechtelar'\n\nfake.address()\n# '426 Jordy Lodge\n#  Cartwrightshire, SC 88120-6700'\n\nfake.text()\n# 'Sint velit eveniet. Rerum atque repellat voluptatem quia rerum. Numquam excepturi\n#  beatae sint laudantium consequatur. Magni occaecati itaque sint et sit tempore. Nesciunt\n#  amet quidem. Iusto deleniti cum autem ad quia aperiam.\n#  A consectetur quos aliquam. In iste aliquid et aut similique suscipit. Consequatur qui\n#  quaerat iste minus hic expedita. Consequuntur error magni et laboriosam. Aut aspernatur\n#  voluptatem sit aliquam. Dolores voluptatum est.\n#  Aut molestias et maxime. Fugit autem facilis quos vero. Eius quibusdam possimus est.\n#  Ea quaerat et quisquam. Deleniti sunt quam. Adipisci consequatur id in occaecati.\n#  Et sint et. Ut ducimus quod nemo ab voluptatum.'\nEach call to method fake.name() yields a different (random) result.\nThis is because faker forwards faker.Generator.method_name() calls\nto faker.Generator.format(method_name).\nfor _ in range(10):\n  print(fake.name())\n\n# 'Adaline Reichel'\n# 'Dr. Santa Prosacco DVM'\n# 'Noemy Vandervort V'\n# 'Lexi O'Conner'\n# 'Gracie Weber'\n# 'Roscoe Johns'\n# 'Emmett Lebsack'\n# 'Keegan Thiel'\n# 'Wellington Koelpin II'\n# 'Ms. Karley Kiehn V'\n\nPytest fixtures\nFaker also has its own pytest plugin which provides a faker fixture you can use in your\ntests. Please check out the pytest fixture docs to learn more.\n\nProviders\nEach of the generator properties (like name, address, and\nlorem) are called \"fake\". A faker generator has many of them,\npackaged in \"providers\".\nfrom faker import Faker\nfrom faker.providers import internet\n\nfake = Faker()\nfake.add_provider(internet)\n\nprint(fake.ipv4_private())\nCheck the extended docs for a list of bundled providers and a list of\ncommunity providers.\n\nLocalization\nfaker.Faker can take a locale as an argument, to return localized\ndata. If no localized provider is found, the factory falls back to the\ndefault en_US locale.\nfrom faker import Faker\nfake = Faker('it_IT')\nfor _ in range(10):\n    print(fake.name())\n\n# 'Elda Palumbo'\n# 'Pacifico Giordano'\n# 'Sig. Avide Guerra'\n# 'Yago Amato'\n# 'Eustachio Messina'\n# 'Dott. Violante Lombardo'\n# 'Sig. Alighieri Monti'\n# 'Costanzo Costa'\n# 'Nazzareno Barbieri'\n# 'Max Coppola'\nfaker.Faker also supports multiple locales. New in v3.0.0.\nfrom faker import Faker\nfake = Faker(['it_IT', 'en_US', 'ja_JP'])\nfor _ in range(10):\n    print(fake.name())\n\n# \u9234\u6728 \u967d\u4e00\n# Leslie Moreno\n# Emma Williams\n# \u6e21\u8fba \u88d5\u7f8e\u5b50\n# Marcantonio Galuppi\n# Martha Davis\n# Kristen Turner\n# \u4e2d\u6d25\u5ddd \u6625\u9999\n# Ashley Castillo\n# \u5c71\u7530 \u6843\u5b50\nYou can check available Faker locales in the source code, under the\nproviders package. The localization of Faker is an ongoing process, for\nwhich we need your help. Please don't hesitate to create a localized\nprovider for your own locale and submit a Pull Request (PR).\n\nCommand line usage\nWhen installed, you can invoke faker from the command-line:\nfaker [-h] [--version] [-o output]\n      [-l {bg_BG,cs_CZ,...,zh_CN,zh_TW}]\n      [-r REPEAT] [-s SEP]\n      [-i {package.containing.custom_provider otherpkg.containing.custom_provider}]\n      [fake] [fake argument [fake argument ...]]\nWhere:\n\nfaker: is the script when installed in your environment, in\ndevelopment you could use python -m faker instead\n-h, --help: shows a help message\n--version: shows the program's version number\n-o FILENAME: redirects the output to the specified filename\n-l {bg_BG,cs_CZ,...,zh_CN,zh_TW}: allows use of a localized\nprovider\n-r REPEAT: will generate a specified number of outputs\n-s SEP: will generate the specified separator after each\ngenerated output\n-i {my.custom_provider other.custom_provider} list of additional custom\nproviders to use. Note that is the import path of the package containing\nyour Provider class, not the custom Provider class itself.\nfake: is the name of the fake to generate an output for, such as\nname, address, or text\n[fake argument ...]: optional arguments to pass to the fake (e.g. the\nprofile fake takes an optional list of comma separated field names as the\nfirst argument)\n\nExamples:\n$ faker address\n968 Bahringer Garden Apt. 722\nKristinaland, NJ 09890\n\n$ faker -l de_DE address\nSamira-Niemeier-Allee 56\n94812 Biedenkopf\n\n$ faker profile ssn,birthdate\n{'ssn': u'628-10-1085', 'birthdate': '2008-03-29'}\n\n$ faker -r=3 -s=\";\" name\nWillam Kertzmann;\nJosiah Maggio;\nGayla Schmitt;\n\nHow to create a Provider\nfrom faker import Faker\nfake = Faker()\n\n# first, import a similar Provider or use the default one\nfrom faker.providers import BaseProvider\n\n# create new provider class\nclass MyProvider(BaseProvider):\n    def foo(self):\n        return 'bar'\n\n# then add new provider to faker instance\nfake.add_provider(MyProvider)\n\n# now you can use:\nfake.foo()\n# 'bar'\n\nHow to customize the Lorem Provider\nYou can provide your own sets of words if you don't want to use the\ndefault lorem ipsum one. The following example shows how to do it with a list of words picked from cakeipsum :\nfrom faker import Faker\nfake = Faker()\n\nmy_word_list = [\n'danish','cheesecake','sugar',\n'Lollipop','wafer','Gummies',\n'sesame','Jelly','beans',\n'pie','bar','Ice','oat' ]\n\nfake.sentence()\n# 'Expedita at beatae voluptatibus nulla omnis.'\n\nfake.sentence(ext_word_list=my_word_list)\n# 'Oat beans oat Lollipop bar cheesecake.'\n\nHow to use with Factory Boy\nFactory Boy already ships with integration with Faker. Simply use the\nfactory.Faker method of factory_boy:\nimport factory\nfrom myapp.models import Book\n\nclass BookFactory(factory.Factory):\n    class Meta:\n        model = Book\n\n    title = factory.Faker('sentence', nb_words=4)\n    author_name = factory.Faker('name')\n\nAccessing the random instance\nThe .random property on the generator returns the instance of\nrandom.Random used to generate the values:\nfrom faker import Faker\nfake = Faker()\nfake.random\nfake.random.getstate()\nBy default all generators share the same instance of random.Random, which\ncan be accessed with from faker.generator import random. Using this may\nbe useful for plugins that want to affect all faker instances.\n\nUnique values\nThrough use of the .unique property on the generator, you can guarantee\nthat any generated values are unique for this specific instance.\nfrom faker import Faker\nfake = Faker()\nnames = [fake.unique.first_name() for i in range(500)]\nassert len(set(names)) == len(names)\nCalling fake.unique.clear() clears the already seen values.\nNote, to avoid infinite loops, after a number of attempts to find a unique\nvalue, Faker will throw a UniquenessException. Beware of the birthday\nparadox, collisions\nare more likely than you'd think.\nfrom faker import Faker\n\nfake = Faker()\nfor i in range(3):\n     # Raises a UniquenessException\n     fake.unique.boolean()\nIn addition, only hashable arguments and return values can be used\nwith .unique.\n\nSeeding the Generator\nWhen using Faker for unit testing, you will often want to generate the same\ndata set. For convenience, the generator also provide a seed() method,\nwhich seeds the shared random number generator. Calling the same methods with\nthe same version of faker and seed produces the same results.\nfrom faker import Faker\nfake = Faker()\nFaker.seed(4321)\n\nprint(fake.name())\n# 'Margaret Boehm'\nEach generator can also be switched to its own instance of random.Random,\nseparate to the shared one, by using the seed_instance() method, which acts\nthe same way. For example:\nfrom faker import Faker\nfake = Faker()\nfake.seed_instance(4321)\n\nprint(fake.name())\n# 'Margaret Boehm'\nPlease note that as we keep updating datasets, results are not guaranteed to be\nconsistent across patch versions. If you hardcode results in your test, make sure\nyou pinned the version of Faker down to the patch number.\nIf you are using pytest, you can seed the faker fixture by defining a faker_seed\nfixture. Please check out the pytest fixture docs to learn more.\n\nTests\nRun tests:\n$ tox\nWrite documentation for providers:\n$ python -m faker > docs.txt\n\nContribute\nPlease see CONTRIBUTING.\n\nLicense\nFaker is released under the MIT License. See the bundled LICENSE file\nfor details.\n\nCredits\n\nFZaninotto \/ PHP Faker\nDistribute\nBuildout\nmodern-package-template\n\n","175":"gensim \u2013 Topic Modelling in Python\n\n\n\n\n\n\nGensim is a Python library for topic modelling, document indexing\nand similarity retrieval with large corpora. Target audience is the\nnatural language processing (NLP) and information retrieval (IR)\ncommunity.\nFeatures\n\nAll algorithms are memory-independent w.r.t. the corpus size\n(can process input larger than RAM, streamed, out-of-core),\nIntuitive interfaces\n\neasy to plug in your own input corpus\/datastream (trivial\nstreaming API)\neasy to extend with other Vector Space algorithms (trivial\ntransformation API)\n\n\nEfficient multicore implementations of popular algorithms, such as\nonline Latent Semantic Analysis (LSA\/LSI\/SVD), Latent\nDirichlet Allocation (LDA), Random Projections (RP),\nHierarchical Dirichlet Process (HDP) or word2vec deep\nlearning.\nDistributed computing: can run Latent Semantic Analysis and\nLatent Dirichlet Allocation on a cluster of computers.\nExtensive documentation and Jupyter Notebook tutorials.\n\nIf this feature list left you scratching your head, you can first read\nmore about the Vector Space Model and unsupervised document analysis\non Wikipedia.\nInstallation\nThis software depends on NumPy and Scipy, two Python packages for\nscientific computing. You must have them installed prior to installing\ngensim.\nIt is also recommended you install a fast BLAS library before installing\nNumPy. This is optional, but using an optimized BLAS such as ATLAS or\nOpenBLAS is known to improve performance by as much as an order of\nmagnitude. On OS X, NumPy picks up the BLAS that comes with it\nautomatically, so you don\u2019t need to do anything special.\nInstall the latest version of gensim:\n    pip install --upgrade gensim\nOr, if you have instead downloaded and unzipped the source tar.gz\npackage:\n    python setup.py install\nFor alternative modes of installation, see the documentation.\nGensim is being continuously tested under Python 3.6, 3.7 and 3.8.\nSupport for Python 2.7 was dropped in gensim 4.0.0 \u2013 install gensim 3.8.3 if you must use Python 2.7.\nHow come gensim is so fast and memory efficient? Isn\u2019t it pure Python, and isn\u2019t Python slow and greedy?\nMany scientific algorithms can be expressed in terms of large matrix\noperations (see the BLAS note above). Gensim taps into these low-level\nBLAS libraries, by means of its dependency on NumPy. So while\ngensim-the-top-level-code is pure Python, it actually executes highly\noptimized Fortran\/C under the hood, including multithreading (if your\nBLAS is so configured).\nMemory-wise, gensim makes heavy use of Python\u2019s built-in generators and\niterators for streamed data processing. Memory efficiency was one of\ngensim\u2019s design goals, and is a central feature of gensim, rather than\nsomething bolted on as an afterthought.\nDocumentation\n\nQuickStart\nTutorials\nOfficial API Documentation\n\nSupport\nAsk open-ended or research questions on the Gensim Mailing List.\nRaise bugs on Github but make sure you follow the issue template. Issues that are not bugs or fail to follow the issue template will be closed without inspection.\n\nAdopters\n\n\n\nCompany\nLogo\nIndustry\nUse of Gensim\n\n\n\n\nRARE Technologies\n\nML & NLP consulting\nCreators of Gensim \u2013\u00a0this is us!\n\n\nAmazon\n\nRetail\nDocument similarity.\n\n\nNational Institutes of Health\n\nHealth\nProcessing grants and publications with word2vec.\n\n\nCisco Security\n\nSecurity\nLarge-scale fraud detection.\n\n\nMindseye\n\nLegal\nSimilarities in legal documents.\n\n\nChannel 4\n\nMedia\nRecommendation engine.\n\n\nTalentpair\n\nHR\nCandidate matching in high-touch recruiting.\n\n\nJuju\n\nHR\nProvide non-obvious related job suggestions.\n\n\nTailwind\n\nMedia\nPost interesting and relevant content to Pinterest.\n\n\nIssuu\n\nMedia\nGensim's LDA module lies at the very core of the analysis we perform on each uploaded publication to figure out what it's all about.\n\n\nSearch Metrics\n\nContent Marketing\nGensim word2vec used for entity disambiguation in Search Engine Optimisation.\n\n\n12K Research\n\nMedia\nDocument similarity analysis on media articles.\n\n\nStillwater Supercomputing\n\nHardware\nDocument comprehension and association with word2vec.\n\n\nSiteGround\n\nWeb hosting\nAn ensemble search engine which uses different embeddings models and similarities, including word2vec, WMD, and LDA.\n\n\nCapital One\n\nFinance\nTopic modeling for customer complaints exploration.\n\n\n\n\nCiting gensim\nWhen citing gensim in academic papers and theses, please use this\nBibTeX entry:\n@inproceedings{rehurek_lrec,\n      title = {{Software Framework for Topic Modelling with Large Corpora}},\n      author = {Radim {\\v R}eh{\\r u}{\\v r}ek and Petr Sojka},\n      booktitle = {{Proceedings of the LREC 2010 Workshop on New\n           Challenges for NLP Frameworks}},\n      pages = {45--50},\n      year = 2010,\n      month = May,\n      day = 22,\n      publisher = {ELRA},\n      address = {Valletta, Malta},\n      note={\\url{http:\/\/is.muni.cz\/publication\/884893\/en}},\n      language={English}\n}\n\n","176":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSalt is the world\u2019s fastest, most intelligent and scalable automation engine.\n    \nExplore the docs \u00bb\n\nDemo Salt For Free Online\n    \u00b7\n    Report Bug\n    \u00b7\n    Request Feature\n\n\nAbout Salt\nBuilt on python, Salt uses simple and human-readable YAML combined with\nevent-driven automation to deploy and configure complex IT systems. In addition\nto powering SaltStack\u2019s powerful enterprise product suite, Salt can be found\nunder the hood of products from Juniper, Cisco, Cloudflare, Nutanix, SUSE, and\nTieto, to name a few.\n\nAbout SaltStack\nSaltStack develops award-winning software used by IT and security operations\nteams to help modern business more efficiently secure and maintain all aspects\nof their digital infrastructure. But we\u2019re not like other legacy systems\nmanagement or security software tools. Our software is unique in providing\nintelligent, event-driven automation for efficient control of complex business\nsystems at any scale.\nWe help enterprise IT organizations orchestrate and automate difficult IT tasks\nwith speed and flexibility to ultimately deliver continuous security compliance,\nvulnerability remediation, and real IT security.\nWhether you need help automating the work of ITOps, DevOps, NetOps, or SecOps\nfunctions, SaltStack software is the answer. In addition to open source\nsoftware, such as Salt, we offer\nSaltStack Enterprise\nand\nSaltStack SecOps products to\nmanage and secure your digital business operations.\n\nDownload Salt\nSalt is tested and packaged to run on CentOS, Debian, RHEL, Ubuntu,\nWindows. Download Salt and get started now.\n\nhttps:\/\/repo.saltstack.com\/\nInstallation Instructions\n\n\nSaltStack Documentation\nInstallation instructions, getting started guides, in-depth API\ndocumentation, and contributing to Salt.\n\nGetting Started with Salt\nLatest Salt Documentation\nSalt\u2019s Contributor Guide\n\n\nSecurity Advisories\nIn 2020, SaltStack created a\n**Security Announcements**\nlanding page. SaltStack recommends subscribing to the\nSaltStack Security RSS feed\nto receive notification when new information is available regarding security\nannouncements.\nOther channels to receive security announcements include the\nSalt Community mailing list\nand the\nSalt Community Slack Channel.\n\nResponsibly Reporting Security Vulnerabilities\nWhen reporting security vulnerabilities for Salt or other SaltStack projects,\nrefer to the\nSECURITY.md file\nfound in this repository.\n\nEngage SaltStack and The Community\nPlease be sure to review our\nCode of Conduct.\nAlso, check out some of our community resources including:\n\nSaltStack Community Wiki\nSaltStack Community Slack\nSaltStack: IRC on Freenode\nSaltStack YouTube channel\nSaltStackInc Twitch channel\n\nThere are lots of ways to get involved in our community. Every month, there are\naround a dozen opportunities to meet with other contributors and the Salt Core\nteam and collaborate in real time. The best way to keep track is by subscribing\nto the\nSalt Community Events Calendar.\nIf you have additional questions, email us at core@saltstack.com or reach out\ndirectly to the Community Manager, Cassandra Faris via Slack. We\u2019d be glad to\nhave you join our community!\n\nSaltStack Training\nGet access to proprietary\nSaltStack education offerings\nthrough instructor-led training offered on-site, virtually or at SaltStack\nheadquarters in Salt Lake City. SaltStack Enterprise training helps increase the\nvalue and effectiveness of SaltStack software for any customer and is a\nprerequisite for coveted SaltStack Certified Administrator (SSCA) and\nSaltStack Certified Engineer (SSCE) certifications.\nSaltStack training is also available through several\nSaltStack professional services\nofferings.\n\nLicense\nSaltStack is licensed by the SaltStack Team under the Apache 2.0 license. Please\nsee the\nLICENSE file for the\nfull text of the Apache license, followed by a full summary of the licensing\nused by external modules.\nA complete list of attributions and dependencies can be found here:\nsalt\/DEPENDENCIES.md\n","177":"Jupyter\nRead this in other languages: English, Espa\u00f1ol, Portugu\u00eas\nJupyter metapackage for installation and docs.\nRunning the docs locally\nFirst navigate to the \/docs directory and create a conda environment:\nconda env create -f environment.yml  \nActivate the environment:\nsource activate jupyter_docs  \nBuild the docs:\nmake clean  \nmake html\nThe docs will be built in build\/html. They can be viewed by opening build\/html\/index.html or starting an HTTP server and navigating to 0.0.0.0:8000 in your web browser.\npython3 -m http.server\n","178":"\nRequests-HTML: HTML Parsing for Humans\u2122\n\n\nThis library intends to make parsing HTML (e.g. scraping the web) as\nsimple and intuitive as possible.\nWhen using this library you automatically get:\n\nFull JavaScript support!\nCSS Selectors (a.k.a jQuery-style, thanks to PyQuery).\nXPath Selectors, for the faint of heart.\nMocked user-agent (like a real web browser).\nAutomatic following of redirects.\nConnection\u2013pooling and cookie persistence.\nThe Requests experience you know and love, with magical parsing abilities.\nAsync Support\n\n\nTutorial & Usage\nMake a GET request to 'python.org', using Requests:\n>>> from requests_html import HTMLSession\n>>> session = HTMLSession()\n>>> r = session.get('https:\/\/python.org\/')\nTry async and get some sites at the same time:\n>>> from requests_html import AsyncHTMLSession\n>>> asession = AsyncHTMLSession()\n>>> async def get_pythonorg():\n...     r = await asession.get('https:\/\/python.org\/')\n...     return r\n...\n>>> async def get_reddit():\n...    r = await asession.get('https:\/\/reddit.com\/')\n...    return r\n...\n>>> async def get_google():\n...    r = await asession.get('https:\/\/google.com\/')\n...    return r\n...\n>>> results = asession.run(get_pythonorg, get_reddit, get_google)\n>>> results # check the requests all returned a 200 (success) code\n[<Response [200]>, <Response [200]>, <Response [200]>]\n>>> # Each item in the results list is a response object and can be interacted with as such\n>>> for result in results:\n...     print(result.html.url)\n...\nhttps:\/\/www.python.org\/\nhttps:\/\/www.google.com\/\nhttps:\/\/www.reddit.com\/\nNote that the order of the objects in the results list represents the order they were returned in, not the order that the coroutines are passed to the run method, which is shown in the example by the order being different.\nGrab a list of all links on the page, as\u2013is (anchors excluded):\n>>> r.html.links\n{'\/\/docs.python.org\/3\/tutorial\/', '\/about\/apps\/', 'https:\/\/github.com\/python\/pythondotorg\/issues', '\/accounts\/login\/', '\/dev\/peps\/', '\/about\/legal\/', '\/\/docs.python.org\/3\/tutorial\/introduction.html#lists', '\/download\/alternatives', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/kihd2DW98YY\/python-370a4-is-available-for-testing.html', '\/download\/other\/', '\/downloads\/windows\/', 'https:\/\/mail.python.org\/mailman\/listinfo\/python-dev', '\/doc\/av', 'https:\/\/devguide.python.org\/', '\/about\/success\/#engineering', 'https:\/\/wiki.python.org\/moin\/PythonEventsCalendar#Submitting_an_Event', 'https:\/\/www.openstack.org', '\/about\/gettingstarted\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/AMoBel8b8Mc\/python-3.html', '\/success-stories\/industrial-light-magic-runs-python\/', 'http:\/\/docs.python.org\/3\/tutorial\/introduction.html#using-python-as-a-calculator', '\/', 'http:\/\/pyfound.blogspot.com\/', '\/events\/python-events\/past\/', '\/downloads\/release\/python-2714\/', 'https:\/\/wiki.python.org\/moin\/PythonBooks', 'http:\/\/plus.google.com\/+Python', 'https:\/\/wiki.python.org\/moin\/', 'https:\/\/status.python.org\/', '\/community\/workshops\/', '\/community\/lists\/', 'http:\/\/buildbot.net\/', '\/community\/awards', 'http:\/\/twitter.com\/ThePSF', 'https:\/\/docs.python.org\/3\/license.html', '\/psf\/donations\/', 'http:\/\/wiki.python.org\/moin\/Languages', '\/dev\/', '\/events\/python-user-group\/', 'https:\/\/wiki.qt.io\/PySide', '\/community\/sigs\/', 'https:\/\/wiki.gnome.org\/Projects\/PyGObject', 'http:\/\/www.ansible.com', 'http:\/\/www.saltstack.com', 'http:\/\/planetpython.org\/', '\/events\/python-events', '\/about\/help\/', '\/events\/python-user-group\/past\/', '\/about\/success\/', '\/psf-landing\/', '\/about\/apps', '\/about\/', 'http:\/\/www.wxpython.org\/', '\/events\/python-user-group\/665\/', 'https:\/\/www.python.org\/psf\/codeofconduct\/', '\/dev\/peps\/peps.rss', '\/downloads\/source\/', '\/psf\/sponsorship\/sponsors\/', 'http:\/\/bottlepy.org', 'http:\/\/roundup.sourceforge.net\/', 'http:\/\/pandas.pydata.org\/', 'http:\/\/brochure.getpython.info\/', 'https:\/\/bugs.python.org\/', '\/community\/merchandise\/', 'http:\/\/tornadoweb.org', '\/events\/python-user-group\/650\/', 'http:\/\/flask.pocoo.org\/', '\/downloads\/release\/python-364\/', '\/events\/python-user-group\/660\/', '\/events\/python-user-group\/638\/', '\/psf\/', '\/doc\/', 'http:\/\/blog.python.org', '\/events\/python-events\/604\/', '\/about\/success\/#government', 'http:\/\/python.org\/dev\/peps\/', 'https:\/\/docs.python.org', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/zVC80sq9s00\/python-364-is-now-available.html', '\/users\/membership\/', '\/about\/success\/#arts', 'https:\/\/wiki.python.org\/moin\/Python2orPython3', '\/downloads\/', '\/jobs\/', 'http:\/\/trac.edgewall.org\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/wh73_1A-N7Q\/python-355rc1-and-python-348rc1-are-now.html', '\/privacy\/', 'https:\/\/pypi.python.org\/', 'http:\/\/www.riverbankcomputing.co.uk\/software\/pyqt\/intro', 'http:\/\/www.scipy.org', '\/community\/forums\/', '\/about\/success\/#scientific', '\/about\/success\/#software-development', '\/shell\/', '\/accounts\/signup\/', 'http:\/\/www.facebook.com\/pythonlang?fref=ts', '\/community\/', 'https:\/\/kivy.org\/', '\/about\/quotes\/', 'http:\/\/www.web2py.com\/', '\/community\/logos\/', '\/community\/diversity\/', '\/events\/calendars\/', 'https:\/\/wiki.python.org\/moin\/BeginnersGuide', '\/success-stories\/', '\/doc\/essays\/', '\/dev\/core-mentorship\/', 'http:\/\/ipython.org', '\/events\/', '\/\/docs.python.org\/3\/tutorial\/controlflow.html', '\/about\/success\/#education', '\/blogs\/', '\/community\/irc\/', 'http:\/\/pycon.blogspot.com\/', '\/\/jobs.python.org', 'http:\/\/www.pylonsproject.org\/', 'http:\/\/www.djangoproject.com\/', '\/downloads\/mac-osx\/', '\/about\/success\/#business', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/x_c9D0S-4C4\/python-370b1-is-now-available-for.html', 'http:\/\/wiki.python.org\/moin\/TkInter', 'https:\/\/docs.python.org\/faq\/', '\/\/docs.python.org\/3\/tutorial\/controlflow.html#defining-functions'}\nGrab a list of all links on the page, in absolute form (anchors excluded):\n>>> r.html.absolute_links\n{'https:\/\/github.com\/python\/pythondotorg\/issues', 'https:\/\/docs.python.org\/3\/tutorial\/', 'https:\/\/www.python.org\/about\/success\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/kihd2DW98YY\/python-370a4-is-available-for-testing.html', 'https:\/\/www.python.org\/dev\/peps\/', 'https:\/\/mail.python.org\/mailman\/listinfo\/python-dev', 'https:\/\/www.python.org\/doc\/', 'https:\/\/www.python.org\/', 'https:\/\/www.python.org\/about\/', 'https:\/\/www.python.org\/events\/python-events\/past\/', 'https:\/\/devguide.python.org\/', 'https:\/\/wiki.python.org\/moin\/PythonEventsCalendar#Submitting_an_Event', 'https:\/\/www.openstack.org', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/AMoBel8b8Mc\/python-3.html', 'https:\/\/docs.python.org\/3\/tutorial\/introduction.html#lists', 'http:\/\/docs.python.org\/3\/tutorial\/introduction.html#using-python-as-a-calculator', 'http:\/\/pyfound.blogspot.com\/', 'https:\/\/wiki.python.org\/moin\/PythonBooks', 'http:\/\/plus.google.com\/+Python', 'https:\/\/wiki.python.org\/moin\/', 'https:\/\/www.python.org\/events\/python-events', 'https:\/\/status.python.org\/', 'https:\/\/www.python.org\/about\/apps', 'https:\/\/www.python.org\/downloads\/release\/python-2714\/', 'https:\/\/www.python.org\/psf\/donations\/', 'http:\/\/buildbot.net\/', 'http:\/\/twitter.com\/ThePSF', 'https:\/\/docs.python.org\/3\/license.html', 'http:\/\/wiki.python.org\/moin\/Languages', 'https:\/\/docs.python.org\/faq\/', 'https:\/\/jobs.python.org', 'https:\/\/www.python.org\/about\/success\/#software-development', 'https:\/\/www.python.org\/about\/success\/#education', 'https:\/\/www.python.org\/community\/logos\/', 'https:\/\/www.python.org\/doc\/av', 'https:\/\/wiki.qt.io\/PySide', 'https:\/\/www.python.org\/events\/python-user-group\/660\/', 'https:\/\/wiki.gnome.org\/Projects\/PyGObject', 'http:\/\/www.ansible.com', 'http:\/\/www.saltstack.com', 'https:\/\/www.python.org\/dev\/peps\/peps.rss', 'http:\/\/planetpython.org\/', 'https:\/\/www.python.org\/events\/python-user-group\/past\/', 'https:\/\/docs.python.org\/3\/tutorial\/controlflow.html#defining-functions', 'https:\/\/www.python.org\/community\/diversity\/', 'https:\/\/docs.python.org\/3\/tutorial\/controlflow.html', 'https:\/\/www.python.org\/community\/awards', 'https:\/\/www.python.org\/events\/python-user-group\/638\/', 'https:\/\/www.python.org\/about\/legal\/', 'https:\/\/www.python.org\/dev\/', 'https:\/\/www.python.org\/download\/alternatives', 'https:\/\/www.python.org\/downloads\/', 'https:\/\/www.python.org\/community\/lists\/', 'http:\/\/www.wxpython.org\/', 'https:\/\/www.python.org\/about\/success\/#government', 'https:\/\/www.python.org\/psf\/', 'https:\/\/www.python.org\/psf\/codeofconduct\/', 'http:\/\/bottlepy.org', 'http:\/\/roundup.sourceforge.net\/', 'http:\/\/pandas.pydata.org\/', 'http:\/\/brochure.getpython.info\/', 'https:\/\/www.python.org\/downloads\/source\/', 'https:\/\/bugs.python.org\/', 'https:\/\/www.python.org\/downloads\/mac-osx\/', 'https:\/\/www.python.org\/about\/help\/', 'http:\/\/tornadoweb.org', 'http:\/\/flask.pocoo.org\/', 'https:\/\/www.python.org\/users\/membership\/', 'http:\/\/blog.python.org', 'https:\/\/www.python.org\/privacy\/', 'https:\/\/www.python.org\/about\/gettingstarted\/', 'http:\/\/python.org\/dev\/peps\/', 'https:\/\/www.python.org\/about\/apps\/', 'https:\/\/docs.python.org', 'https:\/\/www.python.org\/success-stories\/', 'https:\/\/www.python.org\/community\/forums\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/zVC80sq9s00\/python-364-is-now-available.html', 'https:\/\/www.python.org\/community\/merchandise\/', 'https:\/\/www.python.org\/about\/success\/#arts', 'https:\/\/wiki.python.org\/moin\/Python2orPython3', 'http:\/\/trac.edgewall.org\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/wh73_1A-N7Q\/python-355rc1-and-python-348rc1-are-now.html', 'https:\/\/pypi.python.org\/', 'https:\/\/www.python.org\/events\/python-user-group\/650\/', 'http:\/\/www.riverbankcomputing.co.uk\/software\/pyqt\/intro', 'https:\/\/www.python.org\/about\/quotes\/', 'https:\/\/www.python.org\/downloads\/windows\/', 'https:\/\/www.python.org\/events\/calendars\/', 'http:\/\/www.scipy.org', 'https:\/\/www.python.org\/community\/workshops\/', 'https:\/\/www.python.org\/blogs\/', 'https:\/\/www.python.org\/accounts\/signup\/', 'https:\/\/www.python.org\/events\/', 'https:\/\/kivy.org\/', 'http:\/\/www.facebook.com\/pythonlang?fref=ts', 'http:\/\/www.web2py.com\/', 'https:\/\/www.python.org\/psf\/sponsorship\/sponsors\/', 'https:\/\/www.python.org\/community\/', 'https:\/\/www.python.org\/download\/other\/', 'https:\/\/www.python.org\/psf-landing\/', 'https:\/\/www.python.org\/events\/python-user-group\/665\/', 'https:\/\/wiki.python.org\/moin\/BeginnersGuide', 'https:\/\/www.python.org\/accounts\/login\/', 'https:\/\/www.python.org\/downloads\/release\/python-364\/', 'https:\/\/www.python.org\/dev\/core-mentorship\/', 'https:\/\/www.python.org\/about\/success\/#business', 'https:\/\/www.python.org\/community\/sigs\/', 'https:\/\/www.python.org\/events\/python-user-group\/', 'http:\/\/ipython.org', 'https:\/\/www.python.org\/shell\/', 'https:\/\/www.python.org\/community\/irc\/', 'https:\/\/www.python.org\/about\/success\/#engineering', 'http:\/\/www.pylonsproject.org\/', 'http:\/\/pycon.blogspot.com\/', 'https:\/\/www.python.org\/about\/success\/#scientific', 'https:\/\/www.python.org\/doc\/essays\/', 'http:\/\/www.djangoproject.com\/', 'https:\/\/www.python.org\/success-stories\/industrial-light-magic-runs-python\/', 'http:\/\/feedproxy.google.com\/~r\/PythonInsider\/~3\/x_c9D0S-4C4\/python-370b1-is-now-available-for.html', 'http:\/\/wiki.python.org\/moin\/TkInter', 'https:\/\/www.python.org\/jobs\/', 'https:\/\/www.python.org\/events\/python-events\/604\/'}\nSelect an element with a CSS Selector:\n>>> about = r.html.find('#about', first=True)\nGrab an element's text contents:\n>>> print(about.text)\nAbout\nApplications\nQuotes\nGetting Started\nHelp\nPython Brochure\nIntrospect an Element's attributes:\n>>> about.attrs\n{'id': 'about', 'class': ('tier-1', 'element-1'), 'aria-haspopup': 'true'}\nRender out an Element's HTML:\n>>> about.html\n'<li aria-haspopup=\"true\" class=\"tier-1 element-1 \" id=\"about\">\\n<a class=\"\" href=\"\/about\/\" title=\"\">About<\/a>\\n<ul aria-hidden=\"true\" class=\"subnav menu\" role=\"menu\">\\n<li class=\"tier-2 element-1\" role=\"treeitem\"><a href=\"\/about\/apps\/\" title=\"\">Applications<\/a><\/li>\\n<li class=\"tier-2 element-2\" role=\"treeitem\"><a href=\"\/about\/quotes\/\" title=\"\">Quotes<\/a><\/li>\\n<li class=\"tier-2 element-3\" role=\"treeitem\"><a href=\"\/about\/gettingstarted\/\" title=\"\">Getting Started<\/a><\/li>\\n<li class=\"tier-2 element-4\" role=\"treeitem\"><a href=\"\/about\/help\/\" title=\"\">Help<\/a><\/li>\\n<li class=\"tier-2 element-5\" role=\"treeitem\"><a href=\"http:\/\/brochure.getpython.info\/\" title=\"\">Python Brochure<\/a><\/li>\\n<\/ul>\\n<\/li>'\nSelect Elements within Elements:\n>>> about.find('a')\n[<Element 'a' href='\/about\/' title='' class=''>, <Element 'a' href='\/about\/apps\/' title=''>, <Element 'a' href='\/about\/quotes\/' title=''>, <Element 'a' href='\/about\/gettingstarted\/' title=''>, <Element 'a' href='\/about\/help\/' title=''>, <Element 'a' href='http:\/\/brochure.getpython.info\/' title=''>]\nSearch for links within an element:\n>>> about.absolute_links\n{'http:\/\/brochure.getpython.info\/', 'https:\/\/www.python.org\/about\/gettingstarted\/', 'https:\/\/www.python.org\/about\/', 'https:\/\/www.python.org\/about\/quotes\/', 'https:\/\/www.python.org\/about\/help\/', 'https:\/\/www.python.org\/about\/apps\/'}\nSearch for text on the page:\n>>> r.html.search('Python is a {} language')[0]\nprogramming\nMore complex CSS Selector example (copied from Chrome dev tools):\n>>> r = session.get('https:\/\/github.com\/')\n>>> sel = 'body > div.application-main > div.jumbotron.jumbotron-codelines > div > div > div.col-md-7.text-center.text-md-left > p'\n>>> print(r.html.find(sel, first=True).text)\nGitHub is a development platform inspired by the way you work. From open source to business, you can host and review code, manage projects, and build software alongside millions of other\u00a0developers.\nXPath is also supported:\n>>> r.html.xpath('\/html\/body\/div[1]\/a')\n[<Element 'a' class=('px-2', 'py-4', 'show-on-focus', 'js-skip-to-content') href='#start-of-content' tabindex='1'>]\n\nJavaScript Support\nLet's grab some text that's rendered by JavaScript. Until 2020, the Python 2.7 countdown clock (https:\/\/pythonclock.org) will serve as a good test page:\n>>> r = session.get('https:\/\/pythonclock.org')\nLet's try and see the dynamically rendered code (The countdown clock). To do that quickly at first, we'll search between the last text we see before it ('Python 2.7 will retire in...') and the first text we see after it ('Enable Guido Mode').\n>>> r.html.search('Python 2.7 will retire in...{}Enable Guido Mode')[0]\n'<\/h1>\\n        <\/div>\\n        <div class=\"python-27-clock\"><\/div>\\n        <div class=\"center\">\\n            <div class=\"guido-button-block\">\\n                <button class=\"js-guido-mode guido-button\">'\nNotice the clock is missing. The render() method takes the response and renders the dynamic content just like a web browser would.\n>>> r.html.render()\n>>> r.html.search('Python 2.7 will retire in...{}Enable Guido Mode')[0]\n'<\/h1>\\n        <\/div>\\n        <div class=\"python-27-clock is-countdown\"><span class=\"countdown-row countdown-show6\"><span class=\"countdown-section\"><span class=\"countdown-amount\">1<\/span><span class=\"countdown-period\">Year<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">2<\/span><span class=\"countdown-period\">Months<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">28<\/span><span class=\"countdown-period\">Days<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">16<\/span><span class=\"countdown-period\">Hours<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">52<\/span><span class=\"countdown-period\">Minutes<\/span><\/span><span class=\"countdown-section\"><span class=\"countdown-amount\">46<\/span><span class=\"countdown-period\">Seconds<\/span><\/span><\/span><\/div>\\n        <div class=\"center\">\\n            <div class=\"guido-button-block\">\\n                <button class=\"js-guido-mode guido-button\">'\nLet's clean it up a bit. This step is not needed, it just makes it a bit easier to visualize the returned html to see what we need to target to extract our required information.\n       >>> from pprint import pprint\n       >>> pprint(r.html.search('Python 2.7 will retire in...{}Enable')[0])\n       ('<\/h1>\\n'\n'        <\/div>\\n'\n'        <div class=\"python-27-clock is-countdown\"><span class=\"countdown-row '\n'countdown-show6\"><span class=\"countdown-section\"><span '\n'class=\"countdown-amount\">1<\/span><span '\n'class=\"countdown-period\">Year<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">2<\/span><span '\n'class=\"countdown-period\">Months<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">28<\/span><span '\n'class=\"countdown-period\">Days<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">16<\/span><span '\n'class=\"countdown-period\">Hours<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">52<\/span><span '\n'class=\"countdown-period\">Minutes<\/span><\/span><span '\n'class=\"countdown-section\"><span class=\"countdown-amount\">46<\/span><span '\n'class=\"countdown-period\">Seconds<\/span><\/span><\/span><\/div>\\n'\n'        <div class=\"center\">\\n'\n'            <div class=\"guido-button-block\">\\n'\n'                <button class=\"js-guido-mode guido-button\">')\nThe rendered html has all the same methods and attributes as above. Let's extract just the data that we want out of the clock into something easy to use elsewhere and introspect like a dictionary.\n>>> periods = [element.text for element in r.html.find('.countdown-period')]\n>>> amounts = [element.text for element in r.html.find('.countdown-amount')]\n>>> countdown_data = dict(zip(periods, amounts))\n>>> countdown_data\n{'Year': '1', 'Months': '2', 'Days': '5', 'Hours': '23', 'Minutes': '34', 'Seconds': '37'}\nOr you can do this async also:\n>>> async def get_pyclock():\n...     r = await asession.get('https:\/\/pythonclock.org\/')\n...     await r.html.arender()\n...     return r\n...\n>>> results = asession.run(get_pyclock, get_pyclock, get_pyclock)\nThe rest of the code operates the same way as the synchronous version except that results is a list containing multiple response objects however the same basic processes can be applied as above to extract the data you want.\nNote, the first time you ever run the render() method, it will download\nChromium into your home directory (e.g. ~\/.pyppeteer\/). This only happens\nonce.\n\nUsing without Requests\nYou can also use this library without Requests:\n>>> from requests_html import HTML\n>>> doc = \"\"\"<a href='https:\/\/httpbin.org'>\"\"\"\n>>> html = HTML(html=doc)\n>>> html.links\n{'https:\/\/httpbin.org'}\n\nInstallation\n$ pipenv install requests-html\n\u2728\ud83c\udf70\u2728\nOnly Python 3.6 and above is supported.\n","179":"Face Recognition using Tensorflow \nThis is a TensorFlow implementation of the face recognizer described in the paper\n\"FaceNet: A Unified Embedding for Face Recognition and Clustering\". The project also uses ideas from the paper \"Deep Face Recognition\" from the Visual Geometry Group at Oxford.\nCompatibility\nThe code is tested using Tensorflow r1.7 under Ubuntu 14.04 with Python 2.7 and Python 3.5. The test cases can be found here and the results can be found here.\nNews\n\n\n\nDate\nUpdate\n\n\n\n\n2018-04-10\nAdded new models trained on Casia-WebFace and VGGFace2 (see below). Note that the models uses fixed image standardization (see wiki).\n\n\n2018-03-31\nAdded a new, more flexible input pipeline as well as a bunch of minor updates.\n\n\n2017-05-13\nRemoved a bunch of older non-slim models. Moved the last bottleneck layer into the respective models. Corrected normalization of Center Loss.\n\n\n2017-05-06\nAdded code to train a classifier on your own images. Renamed facenet_train.py to train_tripletloss.py and facenet_train_classifier.py to train_softmax.py.\n\n\n2017-03-02\nAdded pretrained models that generate 128-dimensional embeddings.\n\n\n2017-02-22\nUpdated to Tensorflow r1.0. Added Continuous Integration using Travis-CI.\n\n\n2017-02-03\nAdded models where only trainable variables has been stored in the checkpoint. These are therefore significantly smaller.\n\n\n2017-01-27\nAdded a model trained on a subset of the MS-Celeb-1M dataset. The LFW accuracy of this model is around 0.994.\n\n\n2017\u201101\u201102\nUpdated to run with Tensorflow r0.12. Not sure if it runs with older versions of Tensorflow though.\n\n\n\nPre-trained models\n\n\n\nModel name\nLFW accuracy\nTraining dataset\nArchitecture\n\n\n\n\n20180408-102900\n0.9905\nCASIA-WebFace\nInception ResNet v1\n\n\n20180402-114759\n0.9965\nVGGFace2\nInception ResNet v1\n\n\n\nNOTE: If you use any of the models, please do not forget to give proper credit to those providing the training dataset as well.\nInspiration\nThe code is heavily inspired by the OpenFace implementation.\nTraining data\nThe CASIA-WebFace dataset has been used for training. This training set consists of total of 453 453 images over 10 575 identities after face detection. Some performance improvement has been seen if the dataset has been filtered before training. Some more information about how this was done will come later.\nThe best performing model has been trained on the VGGFace2 dataset consisting of ~3.3M faces and ~9000 classes.\nPre-processing\nFace alignment using MTCNN\nOne problem with the above approach seems to be that the Dlib face detector misses some of the hard examples (partial occlusion, silhouettes, etc). This makes the training set too \"easy\" which causes the model to perform worse on other benchmarks.\nTo solve this, other face landmark detectors has been tested. One face landmark detector that has proven to work very well in this setting is the\nMulti-task CNN. A Matlab\/Caffe implementation can be found here and this has been used for face alignment with very good results. A Python\/Tensorflow implementation of MTCNN can be found here. This implementation does not give identical results to the Matlab\/Caffe implementation but the performance is very similar.\nRunning training\nCurrently, the best results are achieved by training the model using softmax loss. Details on how to train a model using softmax loss on the CASIA-WebFace dataset can be found on the page Classifier training of Inception-ResNet-v1 and .\nPre-trained models\nInception-ResNet-v1 model\nA couple of pretrained models are provided. They are trained using softmax loss with the Inception-Resnet-v1 model. The datasets has been aligned using MTCNN.\nPerformance\nThe accuracy on LFW for the model 20180402-114759 is 0.99650+-0.00252. A description of how to run the test can be found on the page Validate on LFW. Note that the input images to the model need to be standardized using fixed image standardization (use the option --use_fixed_image_standardization when running e.g. validate_on_lfw.py).\n","180":"\n\n\n\n\n\n\n\n\n\nFairseq(-py) is a sequence modeling toolkit that allows researchers and\ndevelopers to train custom models for translation, summarization, language\nmodeling and other text generation tasks.\nWe provide reference implementations of various sequence modeling papers:\nList of implemented papers\n\nConvolutional Neural Networks (CNN)\n\nLanguage Modeling with Gated Convolutional Networks (Dauphin et al., 2017)\nConvolutional Sequence to Sequence Learning (Gehring et al., 2017)\nClassical Structured Prediction Losses for Sequence to Sequence Learning (Edunov et al., 2018)\nHierarchical Neural Story Generation (Fan et al., 2018)\nwav2vec: Unsupervised Pre-training for Speech Recognition (Schneider et al., 2019)\n\n\nLightConv and DynamicConv models\n\nPay Less Attention with Lightweight and Dynamic Convolutions (Wu et al., 2019)\n\n\nLong Short-Term Memory (LSTM) networks\n\nEffective Approaches to Attention-based Neural Machine Translation (Luong et al., 2015)\n\n\nTransformer (self-attention) networks\n\nAttention Is All You Need (Vaswani et al., 2017)\nScaling Neural Machine Translation (Ott et al., 2018)\nUnderstanding Back-Translation at Scale (Edunov et al., 2018)\nAdaptive Input Representations for Neural Language Modeling (Baevski and Auli, 2018)\nLexically constrained decoding with dynamic beam allocation (Post & Vilar, 2018)\nTransformer-XL: Attentive Language Models Beyond a Fixed-Length Context\nMixture Models for Diverse Machine Translation: Tricks of the Trade (Shen et al., 2019)\nRoBERTa: A Robustly Optimized BERT Pretraining Approach (Liu et al., 2019)\nFacebook FAIR's WMT19 News Translation Task Submission (Ng et al., 2019)\nJointly Learning to Align and Translate with Transformer Models (Garg et al., 2019)\nMultilingual Denoising Pre-training for Neural Machine Translation (Liu et at., 2020)\nNeural Machine Translation with Byte-Level Subwords (Wang et al., 2020)\nUnsupervised Quality Estimation for Neural Machine Translation (Fomicheva et al., 2020)\nwav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations (Baevski et al., 2020)\nGenerating Medical Reports from Patient-Doctor Conversations Using Sequence-to-Sequence Models (Enarvi et al., 2020)\nLinformer: Self-Attention with Linear Complexity (Wang et al., 2020)\nCross-lingual Retrieval for Iterative Self-Supervised Training (Tran et al., 2020)\nDeep Transformers with Latent Depth (Li et al., 2020)\n\n\nNon-autoregressive Transformers\n\nNon-Autoregressive Neural Machine Translation (Gu et al., 2017)\nDeterministic Non-Autoregressive Neural Sequence Modeling by Iterative Refinement (Lee et al. 2018)\nInsertion Transformer: Flexible Sequence Generation via Insertion Operations (Stern et al. 2019)\nMask-Predict: Parallel Decoding of Conditional Masked Language Models (Ghazvininejad et al., 2019)\nLevenshtein Transformer (Gu et al., 2019)\n\n\nFinetuning\n\nBetter Fine-Tuning by Reducing Representational Collapse (Aghajanyan et al. 2020)\n\n\n\n\nWhat's New:\n\nNovember 2020: Adopted the Hydra configuration framework\n\nsee documentation explaining how to use it for new and existing projects\n\n\nNovember 2020: fairseq 0.10.0 released\nOctober 2020: Added R3F\/R4F (Better Fine-Tuning) code\nOctober 2020: Deep Transformer with Latent Depth code released\nOctober 2020: Added CRISS models and code\nSeptember 2020: Added Linformer code\nSeptember 2020: Added pointer-generator networks\nAugust 2020: Added lexically constrained decoding\nAugust 2020: wav2vec2 models and code released\nJuly 2020: Unsupervised Quality Estimation code released\n\nPrevious updates\n\nMay 2020: Follow fairseq on Twitter\nApril 2020: Monotonic Multihead Attention code released\nApril 2020: Quant-Noise code released\nApril 2020: Initial model parallel support and 11B parameters unidirectional LM released\nMarch 2020: Byte-level BPE code released\nFebruary 2020: mBART model and code released\nFebruary 2020: Added tutorial for back-translation\nDecember 2019: fairseq 0.9.0 released\nNovember 2019: VizSeq released (a visual analysis toolkit for evaluating fairseq models)\nNovember 2019: CamemBERT model and code released\nNovember 2019: BART model and code released\nNovember 2019: XLM-R models and code released\nSeptember 2019: Nonautoregressive translation code released\nAugust 2019: WMT'19 models released\nJuly 2019: fairseq relicensed under MIT license\nJuly 2019: RoBERTa models and code released\nJune 2019: wav2vec models and code released\n\n\nFeatures:\n\nmulti-GPU training on one machine or across multiple machines (data and model parallel)\nfast generation on both CPU and GPU with multiple search algorithms implemented:\n\nbeam search\nDiverse Beam Search (Vijayakumar et al., 2016)\nsampling (unconstrained, top-k and top-p\/nucleus)\nlexically constrained decoding (Post & Vilar, 2018)\n\n\ngradient accumulation enables training with large mini-batches even on a single GPU\nmixed precision training (trains faster with less GPU memory on NVIDIA tensor cores)\nextensible: easily register new models, criterions, tasks, optimizers and learning rate schedulers\nflexible configuration based on Hydra allowing a combination of code, command-line and file based configuration\n\nWe also provide pre-trained models for translation and language modeling\nwith a convenient torch.hub interface:\nen2de = torch.hub.load('pytorch\/fairseq', 'transformer.wmt19.en-de.single_model')\nen2de.translate('Hello world', beam=5)\n# 'Hallo Welt'\nSee the PyTorch Hub tutorials for translation\nand RoBERTa for more examples.\nRequirements and Installation\n\nPyTorch version >= 1.5.0\nPython version >= 3.6\nFor training new models, you'll also need an NVIDIA GPU and NCCL\nTo install fairseq and develop locally:\n\ngit clone https:\/\/github.com\/pytorch\/fairseq\ncd fairseq\npip install --editable .\/\n\n# on MacOS:\n# CFLAGS=\"-stdlib=libc++\" pip install --editable .\/\n\n# to install the latest stable release (0.10.0)\n# pip install fairseq==0.10.0\n\nFor faster training install NVIDIA's apex library:\n\ngit clone https:\/\/github.com\/NVIDIA\/apex\ncd apex\npip install -v --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" \\\n  --global-option=\"--deprecated_fused_adam\" --global-option=\"--xentropy\" \\\n  --global-option=\"--fast_multihead_attn\" .\/\n\nFor large datasets install PyArrow: pip install pyarrow\nIf you use Docker make sure to increase the shared memory size either with --ipc=host or --shm-size\nas command line options to nvidia-docker run .\n\nGetting Started\nThe full documentation contains instructions\nfor getting started, training new models and extending fairseq with new model\ntypes and tasks.\nPre-trained models and examples\nWe provide pre-trained models and pre-processed, binarized test sets for several tasks listed below,\nas well as example training and evaluation commands.\n\nTranslation: convolutional and transformer models are available\nLanguage Modeling: convolutional and transformer models are available\n\nWe also have more detailed READMEs to reproduce results from specific papers:\n\nCross-lingual Retrieval for Iterative Self-Supervised Training (Tran et al., 2020)\nwav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations (Baevski et al., 2020)\nUnsupervised Quality Estimation for Neural Machine Translation (Fomicheva et al., 2020)\nTraining with Quantization Noise for Extreme Model Compression ({Fan*, Stock*} et al., 2020)\nNeural Machine Translation with Byte-Level Subwords (Wang et al., 2020)\nMultilingual Denoising Pre-training for Neural Machine Translation (Liu et at., 2020)\nReducing Transformer Depth on Demand with Structured Dropout (Fan et al., 2019)\nJointly Learning to Align and Translate with Transformer Models (Garg et al., 2019)\nLevenshtein Transformer (Gu et al., 2019)\nFacebook FAIR's WMT19 News Translation Task Submission (Ng et al., 2019)\nRoBERTa: A Robustly Optimized BERT Pretraining Approach (Liu et al., 2019)\nwav2vec: Unsupervised Pre-training for Speech Recognition (Schneider et al., 2019)\nMixture Models for Diverse Machine Translation: Tricks of the Trade (Shen et al., 2019)\nPay Less Attention with Lightweight and Dynamic Convolutions (Wu et al., 2019)\nUnderstanding Back-Translation at Scale (Edunov et al., 2018)\nClassical Structured Prediction Losses for Sequence to Sequence Learning (Edunov et al., 2018)\nHierarchical Neural Story Generation (Fan et al., 2018)\nScaling Neural Machine Translation (Ott et al., 2018)\nConvolutional Sequence to Sequence Learning (Gehring et al., 2017)\nLanguage Modeling with Gated Convolutional Networks (Dauphin et al., 2017)\n\nJoin the fairseq community\n\nTwitter: https:\/\/twitter.com\/fairseq\nFacebook page: https:\/\/www.facebook.com\/groups\/fairseq.users\nGoogle group: https:\/\/groups.google.com\/forum\/#!forum\/fairseq-users\n\nLicense\nfairseq(-py) is MIT-licensed.\nThe license applies to the pre-trained models as well.\nCitation\nPlease cite as:\n@inproceedings{ott2019fairseq,\n  title = {fairseq: A Fast, Extensible Toolkit for Sequence Modeling},\n  author = {Myle Ott and Sergey Edunov and Alexei Baevski and Angela Fan and Sam Gross and Nathan Ng and David Grangier and Michael Auli},\n  booktitle = {Proceedings of NAACL-HLT 2019: Demonstrations},\n  year = {2019},\n}\n","181":"ungoogled-chromium\nA lightweight approach to removing Google web service dependency\nHelp is welcome! See the docs\/contributing.md document for more information.\nObjectives\nIn descending order of significance (i.e. most important objective first):\n\nungoogled-chromium is Google Chromium, sans dependency on Google web services.\nungoogled-chromium retains the default Chromium experience as closely as possible. Unlike other Chromium forks that have their own visions of a web browser, ungoogled-chromium is essentially a drop-in replacement for Chromium.\nungoogled-chromium features tweaks to enhance privacy, control, and transparency. However, almost all of these features must be manually activated or enabled. For more details, see Feature Overview.\n\nIn scenarios where the objectives conflict, the objective of higher significance should take precedence.\nContent Overview\n\nObjectives\nMotivation and Philosophy\nFeature Overview\nDownloads\nSource Code\nFAQ\nBuilding Instructions\nDesign Documentation\nContributing, Reporting, Contacting\nCredits\nRelated Projects\nLicense\n\nMotivation and Philosophy\nWithout signing in to a Google Account, Chromium does pretty well in terms of security and privacy. However, Chromium still has some dependency on Google web services and binaries. In addition, Google designed Chromium to be easy and intuitive for users, which means they compromise on transparency and control of internal operations.\nungoogled-chromium addresses these issues in the following ways:\n\nRemove all remaining background requests to any web services while building and running the browser\nRemove all code specific to Google web services\nRemove all uses of pre-made binaries from the source code, and replace them with user-provided alternatives when possible.\nDisable features that inhibit control and transparency, and add or modify features that promote them (these changes will almost always require manual activation or enabling).\n\nThese features are implemented as configuration flags, patches, and custom scripts. For more details, consult the Design Documentation.\nFeature Overview\nThis section overviews the features of ungoogled-chromium. For more detailed information, it is best to consult the source code.\nContents of this section:\n\nKey Features\nEnhancing Features\nBorrowed Features\nSupported Platforms and Distributions\n\nKey Features\nThese are the core features introduced by ungoogled-chromium.\n\nDisable functionality specific to Google domains (e.g. Google Host Detector, Google URL Tracker, Google Cloud Messaging, Google Hotwording, etc.)\n\nThis includes disabling Safe Browsing. Consult the FAQ for the rationale.\n\n\nBlock internal requests to Google at runtime. This feature is a fail-safe measure for the above, in case Google changes or introduces new components that our patches do not disable. This feature is implemented by replacing many Google web domains in the source code with non-existent alternatives ending in qjz9zk (known as domain substitution; see docs\/design.md for details), then modifying Chromium to block its own requests with such domains. In other words, no connections are attempted to the qjz9zk domain.\nStrip binaries from the source code (known as binary pruning; see docs\/design.md for details)\nAdd many new command-line switches and chrome:\/\/flags entries to configure disabled-by-default features. See docs\/flags.md for the exhaustive list.\n\nEnhancing Features\nThese are the non-essential features introduced by ungoogled-chromium.\n\nAdd Suggestions URL text field in the search engine editor (chrome:\/\/settings\/searchEngines) for customizing search engine suggestions.\nAdd more URL schemes allowed to save page schemes.\nAdd Omnibox search provider \"No Search\" to allow disabling of searching\nAdd a custom cross-platform build configuration and packaging wrapper for Chromium. It currently supports many Linux distributions, macOS, and Windows. (See docs\/design.md for details on the system.)\nForce all pop-ups into tabs\nDisable automatic formatting of URLs in Omnibox (e.g. stripping http:\/\/, hiding certain parameters)\nDisable intranet redirect detector (extraneous DNS requests)\n\nThis breaks captive portal detection, but captive portals still work.\n\n\n(Iridium Browser feature change) Prevent URLs with the trk: scheme from connecting to the Internet\n\nAlso prevents any URLs with the top-level domain qjz9zk (as used in domain substitution) from attempting a connection.\n\n\n(Iridium and Inox feature change) Prevent pinging of IPv6 address when detecting the availability of IPv6. See the --set-ipv6-probe-false flag above to adjust the behavior instead.\n(Windows-specific) Do not set the Zone Identifier on downloaded files\n\nBorrowed Features\nIn addition to the features introduced by ungoogled-chromium, ungoogled-chromium selectively borrows many features from the following projects (in approximate order of significance):\n\nInox patchset\nBromite\nDebian\nIridium Browser\n\nSupported Platforms and Distributions\nSee docs\/platforms.md for a list of supported platforms.\nOther platforms are discussed and tracked in this repository's Issue Tracker. Learn more about using the Issue Tracker under the section Contributing, Reporting, Contacting.\nDownloads\nDownload binaries from here\nNOTE: These binaries are provided by anyone who are willing to build and submit them. Because these binaries are not necessarily reproducible, authenticity cannot be guaranteed; In other words, there is always a non-zero probability that these binaries may have been tampered with. In the unlikely event that this has happened to you, please report it in a new issue.\nThese binaries are known as contributor binaries.\nAlso, ungoogled-chromium is available in several software repositories:\n\nAndroid: Available via a custom F-Droid repo. See instructions in ungoogled-chromium-android\nArch: Available in AUR as ungoogled-chromium\nDebian & Ubuntu: Available in OBS, find your distribution specific instructions in the Installing section\nFedora: Available in RPM Fusion as chromium-browser-privacy\nGentoo: Available in ::pf4public overlay as ungoogled-chromium ebuild\nGNU Guix: Available as ungoogled-chromium\nmacOS: Available in Homebrew as eloston-chromium. Just run brew cask fetch eloston-chromium and brew cask install eloston-chromium. Chromium will appear in your \/Applications directory.\nNixOS\/nixpkgs: Available as ungoogled-chromium\n\nSource Code\nThis repository only contains the common code for all platforms; it does not contain all the configuration and scripts necessary to build ungoogled-chromium. Most users will want to use platform-specific repos, where all the remaining configuration and scripts are provided for specific platforms:\nFind the repo for a specific platform here.\nIf you wish to include ungoogled-chromium code in your own build process, consider using the tags in this repo. These tags follow the format {chromium_version}-{revision} where\n\nchromium_version is the version of Chromium used in x.x.x.x format, and\nrevision is a number indicating the version of ungoogled-chromium for the corresponding Chromium version.\n\nAdditionally, most platform-specific repos extend their tag scheme upon this one.\nBuilding the source code: See docs\/building.md\nMirrors\nList of mirrors:\n\nCodeberg: main repo and ungoogled-software\n\nFAQ\nSee the frequently-asked questions (FAQ) on the Wiki\nBuilding Instructions\nSee docs\/building.md\nDesign Documentation\nSee docs\/design.md\nContributing, Reporting, Contacting\n\nFor reporting and contacting, see SUPPORT.md\nFor contributing (e.g. how to help, submitting changes, criteria for new features), see docs\/contributing.md\nIf you have some small contributions that don't fit our criteria, consider adding them to ungoogled-software\/contrib or our Wiki instead.\n\nCredits\n\nThe Chromium Project\nInox patchset\nDebian\nBromite\nIridium Browser\nThe users for testing and debugging, contributing code, providing feedback, or simply using ungoogled-chromium in some capacity.\n\nRelated Projects\nList of known projects that fork or use changes from ungoogled-chromium:\n\nBromite (Borrows some patches. Features builds for Android)\nppc64le fork (Fork with changes to build for ppc64le CPUs)\n\nLicense\nBSD-3-clause. See LICENSE\n","182":"aws-cli\n\n\n\nThis package provides a unified command line interface to Amazon Web\nServices.\nJump to:\n\nGetting Started\nGetting Help\nMore Resources\n\n\nGetting Started\nThis README is for the AWS CLI version 1. If you are looking for\ninformation about the AWS CLI version 2, please visit the v2\nbranch.\n\nRequirements\nThe aws-cli package works on Python versions:\n\n2.7.x and greater\n3.4.x and greater\n3.5.x and greater\n3.6.x and greater\n3.7.x and greater\n3.8.x and greater\n\nOn 10\/09\/2019 support for Python 2.6 and Python 3.3 was deprecated and\nsupport was dropped on 01\/10\/2020. To avoid disruption, customers using\nthe AWS CLI on Python 2.6 or 3.3 will need to upgrade their version of\nPython or pin the version of the AWS CLI in use prior to 01\/10\/2020. For\nmore information, see this blog\npost.\nAttention!\nWe recommend that all customers regularly monitor the Amazon Web\nServices Security Bulletins\nwebsite for\nany important security bulletins related to aws-cli.\n\nInstallation\nThe safest way to install the AWS CLI is to use\npip in a virtualenv:\n$ python -m pip install awscli\n\nor, if you are not installing in a virtualenv, to install globally:\n$ sudo python -m pip install awscli\n\nor for your user:\n$ python -m pip install --user awscli\n\nIf you have the aws-cli package installed and want to upgrade to the\nlatest version you can run:\n$ python -m pip install --upgrade awscli\n\nThis will install the aws-cli package as well as all dependencies.\n\nNote\nOn macOS, if you see an error regarding the version of six that\ncame with distutils in El Capitan, use the --ignore-installed\noption:\n\n$ sudo python -m pip install awscli --ignore-installed six\n\nOn Linux and Mac OS, the AWS CLI can be installed using a bundled\ninstaller.\nThe AWS CLI can also be installed on Windows via an MSI\nInstaller.\nIf you want to run the develop branch of the AWS CLI, see the\nDevelopment Version section of\nthe contributing guide.\nSee the\ninstallation\nsection of the AWS CLI User Guide for more information.\n\nConfiguration\nBefore using the AWS CLI, you need to configure your AWS credentials.\nYou can do this in several ways:\n\nConfiguration command\nEnvironment variables\nShared credentials file\nConfig file\nIAM Role\n\nThe quickest way to get started is to run the aws configure command:\n$ aws configure\nAWS Access Key ID: MYACCESSKEY\nAWS Secret Access Key: MYSECRETKEY\nDefault region name [us-west-2]: us-west-2\nDefault output format [None]: json\n\nTo use environment variables, do the following:\n$ export AWS_ACCESS_KEY_ID=<access_key>\n$ export AWS_SECRET_ACCESS_KEY=<secret_key>\n\nTo use the shared credentials file, create an INI formatted file like\nthis:\n[default]\naws_access_key_id=MYACCESSKEY\naws_secret_access_key=MYSECRETKEY\n\n[testing]\naws_access_key_id=MYACCESKEY\naws_secret_access_key=MYSECRETKEY\n\nand place it in ~\/.aws\/credentials (or in\n%UserProfile%\\.aws\/credentials on Windows). If you wish to place the\nshared credentials file in a different location than the one specified\nabove, you need to tell aws-cli where to find it. Do this by setting the\nappropriate environment variable:\n$ export AWS_SHARED_CREDENTIALS_FILE=\/path\/to\/shared_credentials_file\n\nTo use a config file, create an INI formatted file like this:\n[default]\naws_access_key_id=<default access key>\naws_secret_access_key=<default secret key>\n# Optional, to define default region for this profile.\nregion=us-west-1\n\n[profile testing]\naws_access_key_id=<testing access key>\naws_secret_access_key=<testing secret key>\nregion=us-west-2\n\nand place it in ~\/.aws\/config (or in %UserProfile%\\.aws\\config\non Windows). If you wish to place the config file in a different\nlocation than the one specified above, you need to tell the AWS CLI\nwhere to find it. Do this by setting the appropriate environment\nvariable:\n$ export AWS_CONFIG_FILE=\/path\/to\/config_file\n\nAs you can see, you can have multiple profiles defined in both the\nshared credentials file and the configuration file. You can then specify\nwhich profile to use by using the --profile option. If no profile is\nspecified the default profile is used.\nIn the config file, except for the default profile, you must prefix\neach config section of a profile group with profile. For example, if\nyou have a profile named \"testing\" the section header would be\n[profile testing].\nThe final option for credentials is highly recommended if you are using\nthe AWS CLI on an EC2 instance. IAM\nRoles\nare a great way to have credentials installed automatically on your\ninstance. If you are using IAM Roles, the AWS CLI will find and use them\nautomatically.\nIn addition to credentials, a number of other variables can be\nconfigured either with environment variables, configuration file\nentries, or both. See the AWS Tools and SDKs Shared Configuration and\nCredentials Reference\nGuide\nfor more information.\nFor more information about configuration options, please refer to the\nAWS CLI Configuration Variables\ntopic.\nYou can access this topic from the AWS CLI as well by running\naws help config-vars.\n\nBasic Commands\nAn AWS CLI command has the following structure:\n$ aws <command> <subcommand> [options and parameters]\n\nFor example, to list S3 buckets, the command would be:\n$ aws s3 ls\n\nTo view help documentation, use one of the following:\n$ aws help\n$ aws <command> help\n$ aws <command> <subcommand> help\n\nTo get the version of the AWS CLI:\n$ aws --version\n\nTo turn on debugging output:\n$ aws --debug <command> <subcommand>\n\nYou can read more information on the Using the AWS\nCLI\nchapter of the AWS CLI User Guide.\n\nCommand Completion\nThe aws-cli package includes a command completion feature for Unix-like\nsystems. This feature is not automatically installed so you need to\nconfigure it manually. To learn more, read the AWS CLI Command\ncompletion\ntopic.\n\nGetting Help\nThe best way to interact with our team is through GitHub. You can open\nan issue and\nchoose from one of our templates for guidance, bug reports, or feature\nrequests.\nYou may find help from the community on Stack\nOverflow with the tag\naws-cli or on\nthe AWS Discussion Forum for\nCLI. If you\nhave a support plan with AWS Premium\nSupport, you can also create\na new support case.\nPlease check for open similar\nissues before opening\nanother one.\nThe AWS CLI implements AWS service APIs. For general issues regarding\nthe services or their limitations, you may find the Amazon Web Services\nDiscussion Forums helpful.\n\nMore Resources\n\nChangelog\nAWS CLI\nDocumentation\nAWS CLI User\nGuide\nAWS CLI Command\nReference\nAmazon Web Services Discussion\nForums\nAWS Support\n\n","183":"StyleGAN \u2014 Official TensorFlow Implementation\n\n\n\n\n\nPicture: These people are not real \u2013 they were produced by our generator that allows control over different aspects of the image.\nThis repository contains the official TensorFlow implementation of the following paper:\n\nA Style-Based Generator Architecture for Generative Adversarial Networks\nTero Karras (NVIDIA), Samuli Laine (NVIDIA), Timo Aila (NVIDIA)\nhttps:\/\/arxiv.org\/abs\/1812.04948\nAbstract: We propose an alternative generator architecture for generative adversarial networks, borrowing from style transfer literature. The new architecture leads to an automatically learned, unsupervised separation of high-level attributes (e.g., pose and identity when trained on human faces) and stochastic variation in the generated images (e.g., freckles, hair), and it enables intuitive, scale-specific control of the synthesis. The new generator improves the state-of-the-art in terms of traditional distribution quality metrics, leads to demonstrably better interpolation properties, and also better disentangles the latent factors of variation. To quantify interpolation quality and disentanglement, we propose two new, automated methods that are applicable to any generator architecture. Finally, we introduce a new, highly varied and high-quality dataset of human faces.\n\nFor business inquiries, please contact researchinquiries@nvidia.com\nFor press and other inquiries, please contact Hector Marinez at hmarinez@nvidia.com\n\u2605\u2605\u2605 NEW: StyleGAN2 is available at https:\/\/github.com\/NVlabs\/stylegan2 \u2605\u2605\u2605\nResources\nMaterial related to our paper is available via the following links:\n\nPaper: https:\/\/arxiv.org\/abs\/1812.04948\nVideo: https:\/\/youtu.be\/kSLJriaOumA\nCode: https:\/\/github.com\/NVlabs\/stylegan\nFFHQ: https:\/\/github.com\/NVlabs\/ffhq-dataset\n\nAdditional material can be found on Google Drive:\n\n\n\nPath\nDescription\n\n\n\n\nStyleGAN\nMain folder.\n\n\n\u251c\u00a0 stylegan-paper.pdf\nHigh-quality version of the paper PDF.\n\n\n\u251c\u00a0 stylegan-video.mp4\nHigh-quality version of the result video.\n\n\n\u251c\u00a0 images\nExample images produced using our generator.\n\n\n\u2502\u00a0 \u251c\u00a0 representative-images\nHigh-quality images to be used in articles, blog posts, etc.\n\n\n\u2502\u00a0 \u2514\u00a0 100k-generated-images\n100,000 generated images for different amounts of truncation.\n\n\n\u2502\u00a0 \u2002\u2002 \u251c\u00a0 ffhq-1024x1024\nGenerated using Flickr-Faces-HQ dataset at 1024\u00d71024.\n\n\n\u2502\u00a0 \u2002\u2002 \u251c\u00a0 bedrooms-256x256\nGenerated using LSUN Bedroom dataset at 256\u00d7256.\n\n\n\u2502\u00a0 \u2002\u2002 \u251c\u00a0 cars-512x384\nGenerated using LSUN Car dataset at 512\u00d7384.\n\n\n\u2502\u00a0 \u2002\u2002 \u2514\u00a0 cats-256x256\nGenerated using LSUN Cat dataset at 256\u00d7256.\n\n\n\u251c\u00a0 videos\nExample videos produced using our generator.\n\n\n\u2502\u00a0 \u2514\u00a0 high-quality-video-clips\nIndividual segments of the result video as high-quality MP4.\n\n\n\u251c\u00a0 ffhq-dataset\nRaw data for the Flickr-Faces-HQ dataset.\n\n\n\u2514\u00a0 networks\nPre-trained networks as pickled instances of dnnlib.tflib.Network.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-ffhq-1024x1024.pkl\nStyleGAN trained with Flickr-Faces-HQ dataset at 1024\u00d71024.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-celebahq-1024x1024.pkl\nStyleGAN trained with CelebA-HQ dataset at 1024\u00d71024.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-bedrooms-256x256.pkl\nStyleGAN trained with LSUN Bedroom dataset at 256\u00d7256.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-cars-512x384.pkl\nStyleGAN trained with LSUN Car dataset at 512\u00d7384.\n\n\n\u2002\u2002 \u251c\u00a0 stylegan-cats-256x256.pkl\nStyleGAN trained with LSUN Cat dataset at 256\u00d7256.\n\n\n\u2002\u2002 \u2514\u00a0 metrics\nAuxiliary networks for the quality and disentanglement metrics.\n\n\n\u2002\u2002 \u2002\u2002 \u251c\u00a0 inception_v3_features.pkl\nStandard Inception-v3 classifier that outputs a raw feature vector.\n\n\n\u2002\u2002 \u2002\u2002 \u251c\u00a0 vgg16_zhang_perceptual.pkl\nStandard LPIPS metric to estimate perceptual similarity.\n\n\n\u2002\u2002 \u2002\u2002 \u251c\u00a0 celebahq-classifier-00-male.pkl\nBinary classifier trained to detect a single attribute of CelebA-HQ.\n\n\n\u2002\u2002 \u2002\u2002 \u2514\u00a0\u22ef\nPlease see the file listing for remaining networks.\n\n\n\nLicenses\nAll material, excluding the Flickr-Faces-HQ dataset, is made available under Creative Commons BY-NC 4.0 license by NVIDIA Corporation. You can use, redistribute, and adapt the material for non-commercial purposes, as long as you give appropriate credit by citing our paper and indicating any changes that you've made.\nFor license information regarding the FFHQ dataset, please refer to the Flickr-Faces-HQ repository.\ninception_v3_features.pkl and inception_v3_softmax.pkl are derived from the pre-trained Inception-v3 network by Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, and Zbigniew Wojna. The network was originally shared under Apache 2.0 license on the TensorFlow Models repository.\nvgg16.pkl and vgg16_zhang_perceptual.pkl are derived from the pre-trained VGG-16 network by Karen Simonyan and Andrew Zisserman. The network was originally shared under Creative Commons BY 4.0 license on the Very Deep Convolutional Networks for Large-Scale Visual Recognition project page.\nvgg16_zhang_perceptual.pkl is further derived from the pre-trained LPIPS weights by Richard Zhang, Phillip Isola, Alexei A. Efros, Eli Shechtman, and Oliver Wang. The weights were originally shared under BSD 2-Clause \"Simplified\" License on the PerceptualSimilarity repository.\nSystem requirements\n\nBoth Linux and Windows are supported, but we strongly recommend Linux for performance and compatibility reasons.\n64-bit Python 3.6 installation. We recommend Anaconda3 with numpy 1.14.3 or newer.\nTensorFlow 1.10.0 or newer with GPU support.\nOne or more high-end NVIDIA GPUs with at least 11GB of DRAM. We recommend NVIDIA DGX-1 with 8 Tesla V100 GPUs.\nNVIDIA driver 391.35 or newer, CUDA toolkit 9.0 or newer, cuDNN 7.3.1 or newer.\n\nUsing pre-trained networks\nA minimal example of using a pre-trained StyleGAN generator is given in pretrained_example.py. When executed, the script downloads a pre-trained StyleGAN generator from Google Drive and uses it to generate an image:\n> python pretrained_example.py\nDownloading https:\/\/drive.google.com\/uc?id=1MEGjdvVpUsu1jB4zrXZN7Y4kBBOzizDQ .... done\n\nGs                              Params    OutputShape          WeightShape\n---                             ---       ---                  ---\nlatents_in                      -         (?, 512)             -\n...\nimages_out                      -         (?, 3, 1024, 1024)   -\n---                             ---       ---                  ---\nTotal                           26219627\n\n> ls results\nexample.png # https:\/\/drive.google.com\/uc?id=1UDLT_zb-rof9kKH0GwiJW_bS9MoZi8oP\n\nA more advanced example is given in generate_figures.py. The script reproduces the figures from our paper in order to illustrate style mixing, noise inputs, and truncation:\n> python generate_figures.py\nresults\/figure02-uncurated-ffhq.png     # https:\/\/drive.google.com\/uc?id=1U3r1xgcD7o-Fd0SBRpq8PXYajm7_30cu\nresults\/figure03-style-mixing.png       # https:\/\/drive.google.com\/uc?id=1U-nlMDtpnf1RcYkaFQtbh5oxnhA97hy6\nresults\/figure04-noise-detail.png       # https:\/\/drive.google.com\/uc?id=1UX3m39u_DTU6eLnEW6MqGzbwPFt2R9cG\nresults\/figure05-noise-components.png   # https:\/\/drive.google.com\/uc?id=1UQKPcvYVeWMRccGMbs2pPD9PVv1QDyp_\nresults\/figure08-truncation-trick.png   # https:\/\/drive.google.com\/uc?id=1ULea0C12zGlxdDQFNLXOWZCHi3QNfk_v\nresults\/figure10-uncurated-bedrooms.png # https:\/\/drive.google.com\/uc?id=1UEBnms1XMfj78OHj3_cx80mUf_m9DUJr\nresults\/figure11-uncurated-cars.png     # https:\/\/drive.google.com\/uc?id=1UO-4JtAs64Kun5vIj10UXqAJ1d5Ir1Ke\nresults\/figure12-uncurated-cats.png     # https:\/\/drive.google.com\/uc?id=1USnJc14prlu3QAYxstrtlfXC9sDWPA-W\n\nThe pre-trained networks are stored as standard pickle files on Google Drive:\n# Load pre-trained network.\nurl = 'https:\/\/drive.google.com\/uc?id=1MEGjdvVpUsu1jB4zrXZN7Y4kBBOzizDQ' # karras2019stylegan-ffhq-1024x1024.pkl\nwith dnnlib.util.open_url(url, cache_dir=config.cache_dir) as f:\n    _G, _D, Gs = pickle.load(f)\n    # _G = Instantaneous snapshot of the generator. Mainly useful for resuming a previous training run.\n    # _D = Instantaneous snapshot of the discriminator. Mainly useful for resuming a previous training run.\n    # Gs = Long-term average of the generator. Yields higher-quality results than the instantaneous snapshot.\n\nThe above code downloads the file and unpickles it to yield 3 instances of dnnlib.tflib.Network. To generate images, you will typically want to use Gs \u2013 the other two networks are provided for completeness. In order for pickle.load() to work, you will need to have the dnnlib source directory in your PYTHONPATH and a tf.Session set as default. The session can initialized by calling dnnlib.tflib.init_tf().\nThere are three ways to use the pre-trained generator:\n\n\nUse Gs.run() for immediate-mode operation where the inputs and outputs are numpy arrays:\n# Pick latent vector.\nrnd = np.random.RandomState(5)\nlatents = rnd.randn(1, Gs.input_shape[1])\n\n# Generate image.\nfmt = dict(func=tflib.convert_images_to_uint8, nchw_to_nhwc=True)\nimages = Gs.run(latents, None, truncation_psi=0.7, randomize_noise=True, output_transform=fmt)\n\nThe first argument is a batch of latent vectors of shape [num, 512]. The second argument is reserved for class labels (not used by StyleGAN). The remaining keyword arguments are optional and can be used to further modify the operation (see below). The output is a batch of images, whose format is dictated by the output_transform argument.\n\n\nUse Gs.get_output_for() to incorporate the generator as a part of a larger TensorFlow expression:\nlatents = tf.random_normal([self.minibatch_per_gpu] + Gs_clone.input_shape[1:])\nimages = Gs_clone.get_output_for(latents, None, is_validation=True, randomize_noise=True)\nimages = tflib.convert_images_to_uint8(images)\nresult_expr.append(inception_clone.get_output_for(images))\n\nThe above code is from metrics\/frechet_inception_distance.py. It generates a batch of random images and feeds them directly to the Inception-v3 network without having to convert the data to numpy arrays in between.\n\n\nLook up Gs.components.mapping and Gs.components.synthesis to access individual sub-networks of the generator. Similar to Gs, the sub-networks are represented as independent instances of dnnlib.tflib.Network:\nsrc_latents = np.stack(np.random.RandomState(seed).randn(Gs.input_shape[1]) for seed in src_seeds)\nsrc_dlatents = Gs.components.mapping.run(src_latents, None) # [seed, layer, component]\nsrc_images = Gs.components.synthesis.run(src_dlatents, randomize_noise=False, **synthesis_kwargs)\n\nThe above code is from generate_figures.py. It first transforms a batch of latent vectors into the intermediate W space using the mapping network and then turns these vectors into a batch of images using the synthesis network. The dlatents array stores a separate copy of the same w vector for each layer of the synthesis network to facilitate style mixing.\n\n\nThe exact details of the generator are defined in training\/networks_stylegan.py (see G_style, G_mapping, and G_synthesis). The following keyword arguments can be specified to modify the behavior when calling run() and get_output_for():\n\n\ntruncation_psi and truncation_cutoff control the truncation trick that that is performed by default when using Gs (\u03c8=0.7, cutoff=8). It can be disabled by setting truncation_psi=1 or is_validation=True, and the image quality can be further improved at the cost of variation by setting e.g. truncation_psi=0.5. Note that truncation is always disabled when using the sub-networks directly. The average w needed to manually perform the truncation trick can be looked up using Gs.get_var('dlatent_avg').\n\n\nrandomize_noise determines whether to use re-randomize the noise inputs for each generated image (True, default) or whether to use specific noise values for the entire minibatch (False). The specific values can be accessed via the tf.Variable instances that are found using [var for name, var in Gs.components.synthesis.vars.items() if name.startswith('noise')].\n\n\nWhen using the mapping network directly, you can specify dlatent_broadcast=None to disable the automatic duplication of dlatents over the layers of the synthesis network.\n\n\nRuntime performance can be fine-tuned via structure='fixed' and dtype='float16'. The former disables support for progressive growing, which is not needed for a fully-trained generator, and the latter performs all computation using half-precision floating point arithmetic.\n\n\nPreparing datasets for training\nThe training and evaluation scripts operate on datasets stored as multi-resolution TFRecords. Each dataset is represented by a directory containing the same image data in several resolutions to enable efficient streaming. There is a separate *.tfrecords file for each resolution, and if the dataset contains labels, they are stored in a separate file as well. By default, the scripts expect to find the datasets at datasets\/<NAME>\/<NAME>-<RESOLUTION>.tfrecords. The directory can be changed by editing config.py:\nresult_dir = 'results'\ndata_dir = 'datasets'\ncache_dir = 'cache'\n\nTo obtain the FFHQ dataset (datasets\/ffhq), please refer to the Flickr-Faces-HQ repository.\nTo obtain the CelebA-HQ dataset (datasets\/celebahq), please refer to the Progressive GAN repository.\nTo obtain other datasets, including LSUN, please consult their corresponding project pages. The datasets can be converted to multi-resolution TFRecords using the provided dataset_tool.py:\n> python dataset_tool.py create_lsun datasets\/lsun-bedroom-full ~\/lsun\/bedroom_lmdb --resolution 256\n> python dataset_tool.py create_lsun_wide datasets\/lsun-car-512x384 ~\/lsun\/car_lmdb --width 512 --height 384\n> python dataset_tool.py create_lsun datasets\/lsun-cat-full ~\/lsun\/cat_lmdb --resolution 256\n> python dataset_tool.py create_cifar10 datasets\/cifar10 ~\/cifar10\n> python dataset_tool.py create_from_images datasets\/custom-dataset ~\/custom-images\n\nTraining networks\nOnce the datasets are set up, you can train your own StyleGAN networks as follows:\n\nEdit train.py to specify the dataset and training configuration by uncommenting or editing specific lines.\nRun the training script with python train.py.\nThe results are written to a newly created directory results\/<ID>-<DESCRIPTION>.\nThe training may take several days (or weeks) to complete, depending on the configuration.\n\nBy default, train.py is configured to train the highest-quality StyleGAN (configuration F in Table 1) for the FFHQ dataset at 1024\u00d71024 resolution using 8 GPUs. Please note that we have used 8 GPUs in all of our experiments. Training with fewer GPUs may not produce identical results \u2013 if you wish to compare against our technique, we strongly recommend using the same number of GPUs.\nExpected training times for the default configuration using Tesla V100 GPUs:\n\n\n\nGPUs\n1024\u00d71024\n512\u00d7512\n256\u00d7256\n\n\n\n\n1\n41 days 4 hours\n24 days 21 hours\n14 days 22 hours\n\n\n2\n21 days 22 hours\n13 days 7 hours\n9 days 5 hours\n\n\n4\n11 days 8 hours\n7 days 0 hours\n4 days 21 hours\n\n\n8\n6 days 14 hours\n4 days 10 hours\n3 days 8 hours\n\n\n\nEvaluating quality and disentanglement\nThe quality and disentanglement metrics used in our paper can be evaluated using run_metrics.py. By default, the script will evaluate the Fr\u00e9chet Inception Distance (fid50k) for the pre-trained FFHQ generator and write the results into a newly created directory under results. The exact behavior can be changed by uncommenting or editing specific lines in run_metrics.py.\nExpected evaluation time and results for the pre-trained FFHQ generator using one Tesla V100 GPU:\n\n\n\nMetric\nTime\nResult\nDescription\n\n\n\n\nfid50k\n16 min\n4.4159\nFr\u00e9chet Inception Distance using 50,000 images.\n\n\nppl_zfull\n55 min\n664.8854\nPerceptual Path Length for full paths in Z.\n\n\nppl_wfull\n55 min\n233.3059\nPerceptual Path Length for full paths in W.\n\n\nppl_zend\n55 min\n666.1057\nPerceptual Path Length for path endpoints in Z.\n\n\nppl_wend\n55 min\n197.2266\nPerceptual Path Length for path endpoints in W.\n\n\nls\n10 hours\nz: 165.0106w: 3.7447\nLinear Separability in Z and W.\n\n\n\nPlease note that the exact results may vary from run to run due to the non-deterministic nature of TensorFlow.\nAcknowledgements\nWe thank Jaakko Lehtinen, David Luebke, and Tuomas Kynk\u00e4\u00e4nniemi for in-depth discussions and helpful comments; Janne Hellsten, Tero Kuosmanen, and Pekka J\u00e4nis for compute infrastructure and help with the code release.\n","184":"\n\n\nJAX: Autograd and XLA \nQuickstart\n| Transformations\n| Install guide\n| Neural net libraries\n| Change logs\n| Reference docs\n| Code search\nNews: JAX tops largest-scale MLPerf Training 0.7 benchmarks!\nWhat is JAX?\nJAX is Autograd and\nXLA,\nbrought together for high-performance machine learning research.\nWith its updated version of Autograd,\nJAX can automatically differentiate native\nPython and NumPy functions. It can differentiate through loops, branches,\nrecursion, and closures, and it can take derivatives of derivatives of\nderivatives. It supports reverse-mode differentiation (a.k.a. backpropagation)\nvia grad as well as forward-mode differentiation,\nand the two can be composed arbitrarily to any order.\nWhat\u2019s new is that JAX uses\nXLA\nto compile and run your NumPy programs on GPUs and TPUs. Compilation happens\nunder the hood by default, with library calls getting just-in-time compiled and\nexecuted. But JAX also lets you just-in-time compile your own Python functions\ninto XLA-optimized kernels using a one-function API,\njit. Compilation and automatic differentiation can be\ncomposed arbitrarily, so you can express sophisticated algorithms and get\nmaximal performance without leaving Python. You can even program multiple GPUs\nor TPU cores at once using pmap, and\ndifferentiate through the whole thing.\nDig a little deeper, and you'll see that JAX is really an extensible system for\ncomposable function transformations. Both\ngrad and jit\nare instances of such transformations. Others are\nvmap for automatic vectorization and\npmap for single-program multiple-data (SPMD)\nparallel programming of multiple accelerators, with more to come.\nThis is a research project, not an official Google product. Expect bugs and\nsharp edges.\nPlease help by trying it out, reporting\nbugs, and letting us know what you\nthink!\nimport jax.numpy as jnp\nfrom jax import grad, jit, vmap\n\ndef predict(params, inputs):\n  for W, b in params:\n    outputs = jnp.dot(inputs, W) + b\n    inputs = jnp.tanh(outputs)\n  return outputs\n\ndef logprob_fun(params, inputs, targets):\n  preds = predict(params, inputs)\n  return jnp.sum((preds - targets)**2)\n\ngrad_fun = jit(grad(logprob_fun))  # compiled gradient evaluation function\nperex_grads = jit(vmap(grad_fun, in_axes=(None, 0, 0)))  # fast per-example grads\nContents\n\nQuickstart: Colab in the Cloud\nTransformations\nCurrent gotchas\nInstallation\nNeural net libraries\nCiting JAX\nReference documentation\n\nQuickstart: Colab in the Cloud\nJump right in using a notebook in your browser, connected to a Google Cloud GPU.\nHere are some starter notebooks:\n\nThe basics: NumPy on accelerators, grad for differentiation, jit for compilation, and vmap for vectorization\nTraining a Simple Neural Network, with TensorFlow Dataset Data Loading\n\nJAX now runs on Cloud TPUs. To try out the preview, see the Cloud TPU\nColabs.\nFor a deeper dive into JAX:\n\nThe Autodiff Cookbook, Part 1: easy and powerful automatic differentiation in JAX\nCommon gotchas and sharp edges\nSee the full list of\nnotebooks.\n\nYou can also take a look at the mini-libraries in\njax.experimental,\nlike stax for building neural\nnetworks\nand optimizers for first-order stochastic\noptimization,\nor the examples.\nTransformations\nAt its core, JAX is an extensible system for transforming numerical functions.\nHere are four of primary interest: grad, jit, vmap, and pmap.\nAutomatic differentiation with grad\nJAX has roughly the same API as Autograd.\nThe most popular function is\ngrad\nfor reverse-mode gradients:\nfrom jax import grad\nimport jax.numpy as jnp\n\ndef tanh(x):  # Define a function\n  y = jnp.exp(-2.0 * x)\n  return (1.0 - y) \/ (1.0 + y)\n\ngrad_tanh = grad(tanh)  # Obtain its gradient function\nprint(grad_tanh(1.0))   # Evaluate it at x = 1.0\n# prints 0.4199743\nYou can differentiate to any order with grad.\nprint(grad(grad(grad(tanh)))(1.0))\n# prints 0.62162673\nFor more advanced autodiff, you can use\njax.vjp for\nreverse-mode vector-Jacobian products and\njax.jvp for\nforward-mode Jacobian-vector products. The two can be composed arbitrarily with\none another, and with other JAX transformations. Here's one way to compose those\nto make a function that efficiently computes full Hessian\nmatrices:\nfrom jax import jit, jacfwd, jacrev\n\ndef hessian(fun):\n  return jit(jacfwd(jacrev(fun)))\nAs with Autograd, you're free to use\ndifferentiation with Python control structures:\ndef abs_val(x):\n  if x > 0:\n    return x\n  else:\n    return -x\n\nabs_val_grad = grad(abs_val)\nprint(abs_val_grad(1.0))   # prints 1.0\nprint(abs_val_grad(-1.0))  # prints -1.0 (abs_val is re-evaluated)\nSee the reference docs on automatic\ndifferentiation\nand the JAX Autodiff\nCookbook\nfor more.\nCompilation with jit\nYou can use XLA to compile your functions end-to-end with\njit,\nused either as an @jit decorator or as a higher-order function.\nimport jax.numpy as jnp\nfrom jax import jit\n\ndef slow_f(x):\n  # Element-wise ops see a large benefit from fusion\n  return x * x + x * 2.0\n\nx = jnp.ones((5000, 5000))\nfast_f = jit(slow_f)\n%timeit -n10 -r3 fast_f(x)  # ~ 4.5 ms \/ loop on Titan X\n%timeit -n10 -r3 slow_f(x)  # ~ 14.5 ms \/ loop (also on GPU via JAX)\nYou can mix jit and grad and any other JAX transformation however you like.\nUsing jit puts constraints on the kind of Python control flow\nthe function can use; see\nthe Gotchas\nNotebook\nfor more.\nAuto-vectorization with vmap\nvmap is\nthe vectorizing map.\nIt has the familiar semantics of mapping a function along array axes, but\ninstead of keeping the loop on the outside, it pushes the loop down into a\nfunction\u2019s primitive operations for better performance.\nUsing vmap can save you from having to carry around batch dimensions in your\ncode. For example, consider this simple unbatched neural network prediction\nfunction:\ndef predict(params, input_vec):\n  assert input_vec.ndim == 1\n  for W, b in params:\n    output_vec = jnp.dot(W, input_vec) + b  # `input_vec` on the right-hand side!\n    input_vec = jnp.tanh(output_vec)\n  return output_vec\nWe often instead write jnp.dot(inputs, W) to allow for a batch dimension on the\nleft side of inputs, but we\u2019ve written this particular prediction function to\napply only to single input vectors. If we wanted to apply this function to a\nbatch of inputs at once, semantically we could just write\nfrom functools import partial\npredictions = jnp.stack(list(map(partial(predict, params), input_batch)))\nBut pushing one example through the network at a time would be slow! It\u2019s better\nto vectorize the computation, so that at every layer we\u2019re doing matrix-matrix\nmultiplies rather than matrix-vector multiplies.\nThe vmap function does that transformation for us. That is, if we write\nfrom jax import vmap\npredictions = vmap(partial(predict, params))(input_batch)\n# or, alternatively\npredictions = vmap(predict, in_axes=(None, 0))(params, input_batch)\nthen the vmap function will push the outer loop inside the function, and our\nmachine will end up executing matrix-matrix multiplications exactly as if we\u2019d\ndone the batching by hand.\nIt\u2019s easy enough to manually batch a simple neural network without vmap, but\nin other cases manual vectorization can be impractical or impossible. Take the\nproblem of efficiently computing per-example gradients: that is, for a fixed set\nof parameters, we want to compute the gradient of our loss function evaluated\nseparately at each example in a batch. With vmap, it\u2019s easy:\nper_example_gradients = vmap(partial(grad(loss), params))(inputs, targets)\nOf course, vmap can be arbitrarily composed with jit, grad, and any other\nJAX transformation! We use vmap with both forward- and reverse-mode automatic\ndifferentiation for fast Jacobian and Hessian matrix calculations in\njax.jacfwd, jax.jacrev, and jax.hessian.\nSPMD programming with pmap\nFor parallel programming of multiple accelerators, like multiple GPUs, use\npmap.\nWith pmap you write single-program multiple-data (SPMD) programs, including\nfast parallel collective communication operations. Applying pmap will mean\nthat the function you write is compiled by XLA (similarly to jit), then\nreplicated and executed in parallel across devices.\nHere's an example on an 8-GPU machine:\nfrom jax import random, pmap\nimport jax.numpy as jnp\n\n# Create 8 random 5000 x 6000 matrices, one per GPU\nkeys = random.split(random.PRNGKey(0), 8)\nmats = pmap(lambda key: random.normal(key, (5000, 6000)))(keys)\n\n# Run a local matmul on each device in parallel (no data transfer)\nresult = pmap(lambda x: jnp.dot(x, x.T))(mats)  # result.shape is (8, 5000, 5000)\n\n# Compute the mean on each device in parallel and print the result\nprint(pmap(jnp.mean)(result))\n# prints [1.1566595 1.1805978 ... 1.2321935 1.2015157]\nIn addition to expressing pure maps, you can use fast collective communication\noperations\nbetween devices:\nfrom functools import partial\nfrom jax import lax\n\n@partial(pmap, axis_name='i')\ndef normalize(x):\n  return x \/ lax.psum(x, 'i')\n\nprint(normalize(jnp.arange(4.)))\n# prints [0.         0.16666667 0.33333334 0.5       ]\nYou can even nest pmap functions for more\nsophisticated communication patterns.\nIt all composes, so you're free to differentiate through parallel computations:\nfrom jax import grad\n\n@pmap\ndef f(x):\n  y = jnp.sin(x)\n  @pmap\n  def g(z):\n    return jnp.cos(z) * jnp.tan(y.sum()) * jnp.tanh(x).sum()\n  return grad(lambda w: jnp.sum(g(w)))(x)\n\nprint(f(x))\n# [[ 0.        , -0.7170853 ],\n#  [-3.1085174 , -0.4824318 ],\n#  [10.366636  , 13.135289  ],\n#  [ 0.22163185, -0.52112055]]\n\nprint(grad(lambda x: jnp.sum(f(x)))(x))\n# [[ -3.2369726,  -1.6356447],\n#  [  4.7572474,  11.606951 ],\n#  [-98.524414 ,  42.76499  ],\n#  [ -1.6007166,  -1.2568436]]\nWhen reverse-mode differentiating a pmap function (e.g. with grad), the\nbackward pass of the computation is parallelized just like the forward pass.\nSee the SPMD\nCookbook\nand the SPMD MNIST classifier from scratch\nexample\nfor more.\nCurrent gotchas\nFor a more thorough survey of current gotchas, with examples and explanations,\nwe highly recommend reading the Gotchas\nNotebook.\nSome standouts:\n\nJAX transformations only work on pure functions, which don't have side-effects and respect referential transparency (i.e. object identity testing with is isn't preserved). If you use a JAX transformation on an impure Python function, you might see an error like Exception: Can't lift Traced...  or Exception: Different traces at same level.\nIn-place mutating updates of\narrays, like x[i] += y, aren't supported, but there are functional alternatives. Under a jit, those functional alternatives will reuse buffers in-place automatically.\nRandom numbers are\ndifferent, but for good reasons.\nIf you're looking for convolution\noperators,\nthey're in the jax.lax package.\nJAX enforces single-precision (32-bit, e.g. float32) values by default, and\nto enable\ndouble-precision\n(64-bit, e.g. float64) one needs to set the jax_enable_x64 variable at\nstartup (or set the environment variable JAX_ENABLE_X64=True).\nSome of NumPy's dtype promotion semantics involving a mix of Python scalars\nand NumPy types aren't preserved, namely np.add(1, np.array([2], np.float32)).dtype is float64 rather than float32.\nSome transformations, like jit, constrain how you can use Python control\nflow.\nYou'll always get loud errors if something goes wrong. You might have to use\njit's static_argnums\nparameter,\nstructured control flow\nprimitives\nlike\nlax.scan,\nor just use jit on smaller subfunctions.\n\nInstallation\nJAX is written in pure Python, but it depends on XLA, which needs to be\ninstalled as the jaxlib package. Use the following instructions to install a\nbinary package with pip, or to build JAX from source.\nWe support installing or building jaxlib on Linux (Ubuntu 16.04 or later) and\nmacOS (10.12 or later) platforms. Windows users can use JAX on CPU via the\nWindows Subsystem for Linux.\nWe're not currently working on native Windows support, but contributions are\nwelcome (see #438).\npip installation\nTo install a CPU-only version, which might be useful for doing local\ndevelopment on a laptop, you can run\npip install --upgrade pip\npip install --upgrade jax jaxlib  # CPU-only version\nOn Linux, it is often necessary to first update pip to a version that supports\nmanylinux2010 wheels.\nIf you want to install JAX with both CPU and GPU support, using existing CUDA\nand CUDNN7 installations on your machine (for example, preinstalled on your\ncloud VM), you can run\npip install --upgrade pip\npip install --upgrade jax jaxlib==0.1.57+cuda110 -f https:\/\/storage.googleapis.com\/jax-releases\/jax_releases.html\nThe jaxlib version must correspond to the version of the existing CUDA\ninstallation you want to use, with cuda110 for CUDA 11.0, cuda102 for CUDA\n10.2, and cuda101 for CUDA 10.1. You can find your\nCUDA version with: install path:\nnvcc --version\nNote that some GPU functionality expects the CUDA installation to be at\n\/usr\/local\/cuda-X.X, where X.X should be replaced with the CUDA version number\n(e.g. cuda-10.2). If CUDA is installed elsewhere on your system, you can either\ncreate a symlink:\nsudo ln -s \/path\/to\/cuda \/usr\/local\/cuda-X.X\nOr set the following environment variable before importing JAX:\nXLA_FLAGS=--xla_gpu_cuda_data_dir=\/path\/to\/cuda\nPlease let us know on the issue tracker\nif you run into any errors or problems with the prebuilt wheels.\nBuilding JAX from source\nSee Building JAX from\nsource.\nNeural network libraries\nMultiple Google research groups develop and share libraries for training neural\nnetworks in JAX. If you want a fully featured library for neural network\ntraining with examples and how-to guides, try\nFlax. Another option is\nTrax, a combinator-based framework focused on\nease-of-use and end-to-end single-command examples, especially for sequence\nmodels and reinforcement learning. Finally,\nObjax is a minimalist object-oriented\nframework with a PyTorch-like interface.\nDeepMind has open-sourced an ecosystem of libraries around JAX including\nHaiku for neural network modules,\nOptax for gradient processing and\noptimization, RLax for RL algorithms, and\nchex for reliable code and testing.\nCiting JAX\nTo cite this repository:\n@software{jax2018github,\n  author = {James Bradbury and Roy Frostig and Peter Hawkins and Matthew James Johnson and Chris Leary and Dougal Maclaurin and Skye Wanderman-Milne},\n  title = {{JAX}: composable transformations of {P}ython+{N}um{P}y programs},\n  url = {http:\/\/github.com\/google\/jax},\n  version = {0.2.5},\n  year = {2018},\n}\n\nIn the above bibtex entry, names are in alphabetical order, the version number\nis intended to be that from jax\/version.py, and\nthe year corresponds to the project's open-source release.\nA nascent version of JAX, supporting only automatic differentiation and\ncompilation to XLA, was described in a paper that appeared at SysML\n2018. We're currently working on\ncovering JAX's ideas and capabilities in a more comprehensive and up-to-date\npaper.\nReference documentation\nFor details about the JAX API, see the\nreference documentation.\nFor getting started as a JAX developer, see the\ndeveloper documentation.\n","185":"\n\nThe lightweight PyTorch wrapper for high-performance AI research.\nScale your models, not the boilerplate.\n\n\nWebsite \u2022\n  Key Features \u2022\n  How To Use \u2022\n  Docs \u2022\n  Examples \u2022\n  Community \u2022\n  Grid AI \u2022\n  Licence\n\n\n\n\n\n\n\n\n\n\n\n\n\n*Codecov is > 90%+ but build delays may show less\n\nPyTorch Lightning is just organized PyTorch\nLightning disentangles PyTorch code to decouple the science from the engineering.\n\n\nLightning Philosophy\nLightning is designed with these principles in mind:\nPrinciple 1: Enable maximal flexibility.\nPrinciple 2: Abstract away unecessary boilerplate, but make it accessible when needed.\nPrinciple 3: Systems should be self-contained (ie: optimizers, computation code, etc).\nPrinciple 4: Deep learning code should be organized into 4 distinct categories.\n\nResearch code (the LightningModule).\nEngineering code (you delete, and is handled by the Trainer).\nNon-essential research code (logging, etc... this goes in Callbacks).\nData (use PyTorch Dataloaders or organize them into a LightningDataModule).\n\nOnce you do this, you can train on multiple-GPUs, TPUs, CPUs and even in 16-bit precision without changing your code!\nGet started with our 2 step guide\n\nInference\nLightning is also designed for the fast inference AI researchers and production teams need to scale up things like BERT and self-supervised learning.\nLightning can automatically export to ONNX or TorchScript for those cases.\n\nTrending contributors\n\n\n\n\n\n\n\n\n\nContinuous Integration\n\n\n\nSystem \/ PyTorch ver.\n1.3 (min. req.)*\n1.4\n1.5\n1.6\n1.7 (latest)\n1.8 (nightly)\n\n\n\n\nConda py3.7 [linux]\n\n\n\n\n\n\n\n\nLinux py3.7 [GPUs**]\n-\n-\n-\n\n-\n-\n\n\nLinux py3.7 [TPUs***]\n-\n-\n-\n\n-\n-\n\n\nLinux py3.6 \/ py3.7 \/ py3.8\n\n-\n-\n-\n\n-\n\n\nOSX py3.6 \/ py3.7\n-\n\n-\n-\n\n-\n\n\nWindows py3.6 \/ py3.7 \/ py3.8\n\n-\n-\n-\n\n-\n\n\n\n\n* torch>=1.4 is the minimal pytorch version for Python 3.8\n** tests run on two NVIDIA K80\n*** tests run on Google GKE TPUv2\/3\nTPU w\/ py3.6\/py3.7 means we support Colab and Kaggle env.\n\n\nHow To Use\nStep 0: Install\nSimple installation from PyPI\npip install pytorch-lightning\nFrom Conda\nconda install pytorch-lightning -c conda-forge\nInstall bleeding-edge (no guarantees)\npip install git+https:\/\/github.com\/PytorchLightning\/pytorch-lightning.git@master --upgrade\nStep 0: Add these imports\nimport os\nimport torch\nfrom torch import nn\nimport torch.nn.functional as F\nfrom torchvision.datasets import MNIST\nfrom torch.utils.data import DataLoader, random_split\nfrom torchvision import transforms\nimport pytorch_lightning as pl\nStep 1: Define a LightningModule (nn.Module subclass)\nA LightningModule defines a full system (ie: a GAN, autoencoder, BERT or a simple Image Classifier).\nclass LitAutoEncoder(pl.LightningModule):\n\n    def __init__(self):\n        super().__init__()\n        self.encoder = nn.Sequential(nn.Linear(28 * 28, 128), nn.ReLU(), nn.Linear(128, 3))\n        self.decoder = nn.Sequential(nn.Linear(3, 128), nn.ReLU(), nn.Linear(128, 28 * 28))\n    \n    def forward(self, x):\n        # in lightning, forward defines the prediction\/inference actions\n        embedding = self.encoder(x)\n        return embedding\n\n    def training_step(self, batch, batch_idx):\n        # training_step defined the train loop. It is independent of forward\n        x, y = batch\n        x = x.view(x.size(0), -1)\n        z = self.encoder(x)\n        x_hat = self.decoder(z)\n        loss = F.mse_loss(x_hat, x)\n        self.log('train_loss', loss)\n        return loss\n\n    def configure_optimizers(self):\n        optimizer = torch.optim.Adam(self.parameters(), lr=1e-3)\n        return optimizer\nNote: Training_step defines the training loop. Forward defines how the LightningModule behaves during inference\/prediction.\nStep 2: Train!\ndataset = MNIST(os.getcwd(), download=True, transform=transforms.ToTensor())\ntrain, val = random_split(dataset, [55000, 5000])\n\nautoencoder = LitAutoEncoder()\ntrainer = pl.Trainer()\ntrainer.fit(autoencoder, DataLoader(train), DataLoader(val))\nAnd without changing a single line of code, you could run on GPUs\/TPUs\n# 8 GPUs\ntrainer = Trainer(max_epochs=1, gpus=8)\n\n# 256 GPUs\ntrainer = Trainer(max_epochs=1, gpus=8, num_nodes=32)\n\n# TPUs\ntrainer = Trainer(tpu_cores=8)\nAnd even export for production via onnx or torchscript\n# torchscript\nautoencoder = LitAutoEncoder()\ntorch.jit.save(autoencoder.to_torchscript(), \"model.pt\") \n\n# onnx\nwith tempfile.NamedTemporaryFile(suffix='.onnx', delete=False) as tmpfile:\n    autoencoder = LitAutoEncoder()\n    input_sample = torch.randn((1, 64))\n    autoencoder.to_onnx(tmpfile.name, input_sample, export_params=True)\n    os.path.isfile(tmpfile.name)\nFor advanced users, you can still own complex training loops\nclass LitAutoEncoder(pl.LightningModule):\n    def training_step(self, batch, batch_idx, opt_idx):\n        (opt_a, opt_b) = self.optimizers()\n        \n        loss_a = ...\n        self.manual_backward(loss_a, opt_a)\n        opt_a.step()\n        opt_a.zero_grad()\n        \n        loss_b = ...\n        self.manual_backward(loss_b, opt_b, retain_graph=True)\n        self.manual_backward(loss_b, opt_b)\n        opt_b.step()\n        opt_b.zero_grad()\n\nKey Features\n\nScale your models to run on any hardware (CPU, GPUs, TPUs) without changing your model\nMaking code more readable by decoupling the research code from the engineering\nEasier to reproduce\nLess error prone by automating most of the training loop and tricky engineering\nKeeps all the flexibility (LightningModules are still PyTorch modules), but removes a ton of boilerplate\nLightning has out-of-the-box integration with the popular logging\/visualizing frameworks (Tensorboard, MLFlow, Neptune.ai, Comet.ml, Wandb).\nTested rigorously with every new PR. We test every combination of PyTorch and Python supported versions, every OS, multi GPUs and even TPUs.\nMinimal running speed overhead (about 300 ms per epoch compared with pure PyTorch).\n\nLightning automates 40+ parts of DL\/ML research\n\nGPU training\nDistributed GPU (cluster) training\nTPU training\nEarlyStopping\nLogging\/Visualizing\nCheckpointing\nExperiment management\nFull list here\n\n\nExamples\nHello world\nMNIST hello world\nMNIST on TPUs\nContrastive Learning\nBYOL\nCPC v2\nMoco v2\nSIMCLR\nNLP\nBERT\nGPT-2\nReinforcement Learning\nDQN\nDueling-DQN\nReinforce\nVision\nGAN\nClassic ML\nLogistic Regression\nLinear Regression\n\nCommunity\nThe lightning community is maintained by\n\n16 core contributors who are all a mix of professional engineers, Research Scientists, Ph.D. students from top AI labs.\n280+ community contributors.\n\nLightning is also part of the PyTorch ecosystem which requires projects to have solid testing, documentation and support.\nAsking for help\nIf you have any questions please:\n\nRead the docs.\nLook it up in our forum (or add a new question)\nSearch through the issues.\nJoin our slack.\nAsk on stackoverflow with the tag pytorch-lightning.\n\nFunding\nBuilding open-source software with only a few part-time people is hard!\nWe're venture funded\nand backed by some of the top VC funds in the world, Index Ventures, Bain Capital Ventures, First Minute Capital.\nTheir funding ensures we can continue to build awesome tooling like Grid, give you around the clock support,\nhire a full-time staff, attend conferences, and move faster through implementing features you request.\nTo supercharge your research and production work, visit our Grid.ai platform\n\nGrid AI\nGrid AI is our native platform for training models at scale on the cloud!\nSign up for early access here\nTo use grid, take your regular command:\n    python my_model.py --learning_rate 1e-6 --layers 2 --gpus 4\n\nAnd change it to use the grid train command:\n    grid train --grid_gpus 4 my_model.py --learning_rate 'uniform(1e-6, 1e-1, 20)' --layers '[2, 4, 8, 16]'\n\nThe above command will launch (20 * 4) experiments each running on 4 GPUs (320 GPUs!) - by making ZERO changes to\nyour code.\n\nLicence\nPlease observe the Apache 2.0 license that is listed in this repository. In addition\nthe Lightning framework is Patent Pending.\nBibTeX\nIf you want to cite the framework feel free to use this (but only if you loved it \ud83d\ude0a):\n@article{falcon2019pytorch,\n  title={PyTorch Lightning},\n  author={Falcon, WA},\n  journal={GitHub. Note: https:\/\/github.com\/PyTorchLightning\/pytorch-lightning},\n  volume={3},\n  year={2019}\n}\n","186":"imgaug\nThis python library helps you with augmenting images for your machine learning projects.\nIt converts a set of input images into a new, much larger set of slightly altered images.\n\n\n\n\n\n\u00a0\nImage\nHeatmaps\nSeg. Maps\nKeypoints\nBounding Boxes,Polygons\n\n\nOriginal Input\n\n\n\n\n\n\n\nGauss. Noise+\u00a0Contrast+\u00a0Sharpen\n\n\n\n\n\n\n\nAffine\n\n\n\n\n\n\n\nCrop+\u00a0Pad\n\n\n\n\n\n\n\nFliplr+\u00a0Perspective\n\n\n\n\n\n\n\nMore (strong) example augmentations of one input image:\n\nTable of Contents\n\nFeatures\nInstallation\nDocumentation\nRecent Changes\nExample Images\nCode Examples\nCitation\n\n\nFeatures\n\nMany augmentation techniques\n\nE.g. affine transformations, perspective transformations, contrast changes, gaussian noise, dropout of regions, hue\/saturation changes, cropping\/padding, blurring, ...\nOptimized for high performance\nEasy to apply augmentations only to some images\nEasy to apply augmentations in random order\n\n\nSupport for\n\nImages (full support for uint8, for other dtypes see documentation)\nHeatmaps (float32), Segmentation Maps (int), Masks (bool)\n\nMay be smaller\/larger than their corresponding images. No extra lines of code needed for e.g. crop.\n\n\nKeypoints\/Landmarks (int\/float coordinates)\nBounding Boxes (int\/float coordinates)\nPolygons (int\/float coordinates)\nLine Strings (int\/float coordinates)\n\n\nAutomatic alignment of sampled random values\n\nExample: Rotate image and segmentation map on it by the same value sampled from uniform(-10\u00b0, 45\u00b0). (0 extra lines of code.)\n\n\nProbability distributions as parameters\n\nExample: Rotate images by values sampled from uniform(-10\u00b0, 45\u00b0).\nExample: Rotate images by values sampled from ABS(N(0, 20.0))*(1+B(1.0, 1.0))\", where ABS(.) is the absolute function, N(.) the gaussian distribution and B(.) the beta distribution.\n\n\nMany helper functions\n\nExample: Draw heatmaps, segmentation maps, keypoints, bounding boxes, ...\nExample: Scale segmentation maps, average\/max pool of images\/maps, pad images to aspect\nratios (e.g. to square them)\nExample: Convert keypoints to distance maps, extract pixels within bounding boxes from images, clip polygon to the image plane, ...\n\n\nSupport for augmentation on multiple CPU cores\n\n\nInstallation\nThe library supports python 2.7 and 3.4+.\nInstallation: Anaconda\nTo install the library in anaconda, perform the following commands:\nconda config --add channels conda-forge\nconda install imgaug\nYou can deinstall the library again via conda remove imgaug.\nInstallation: pip\nThen install imgaug either via pypi (can lag behind the github version):\npip install imgaug\nor install the latest version directly from github:\npip install git+https:\/\/github.com\/aleju\/imgaug.git\nFor more details, see the install guide\nTo deinstall the library, just execute pip uninstall imgaug.\n\nDocumentation\nExample jupyter notebooks:\n\nLoad and Augment an Image\nMulticore Augmentation\nAugment and work with: Keypoints\/Landmarks,\nBounding Boxes,\nPolygons,\nLine Strings,\nHeatmaps,\nSegmentation Maps\n\nMore notebooks: imgaug-doc\/notebooks.\nExample ReadTheDocs pages:\n\nQuick example code on how to use the library\nOverview of all Augmenters\nAPI\n\nMore RTD documentation: imgaug.readthedocs.io.\nAll documentation related files of this project are hosted in the\nrepository imgaug-doc.\n\nRecent Changes\n\n0.4.0: Added new augmenters, changed backend to batchwise augmentation,\nsupport for numpy 1.18 and python 3.8.\n0.3.0: Reworked segmentation map augmentation, adapted to numpy 1.17+\nrandom number sampling API, several new augmenters.\n0.2.9: Added polygon augmentation, added line string augmentation,\nsimplified augmentation interface.\n0.2.8: Improved performance, dtype support and multicore augmentation.\n\nSee changelogs\/ for more details.\n\nExample Images\nThe images below show examples for most augmentation techniques.\nValues written in the form (a, b) denote a uniform distribution,\ni.e. the value is randomly picked from the interval [a, b].\nLine strings are supported by (almost) all augmenters, but are not explicitly\nvisualized here.\n\nmeta\n\nIdentity\nChannelShuffle\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\nSee also: Sequential, SomeOf, OneOf, Sometimes, WithChannels, Lambda, AssertLambda, AssertShape, RemoveCBAsByOutOfImageFraction, ClipCBAsToImagePlanes\n\narithmetic\n\nAdd\nAdd(per_channel=True)\nAdditiveGaussianNoise\nAdditiveGaussianNoise(per_channel=True)\nMultiply\n\n\n\n\n\n\n\n\n\nCutout\nDropout\nCoarseDropout(p=0.2)\nCoarseDropout(p=0.2, per_channel=True)\nDropout2d\n\n\n\n\n\n\n\n\n\nSaltAndPepper\nCoarseSaltAndPepper(p=0.2)\nInvert\nSolarize\nJpegCompression\n\n\n\n\n\n\n\n\n\n\n\nSee also: AddElementwise, AdditiveLaplaceNoise, AdditivePoissonNoise, MultiplyElementwise, TotalDropout, ReplaceElementwise, ImpulseNoise, Salt, Pepper, CoarseSalt, CoarsePepper, Solarize\n\nartistic\n\nCartoon\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\nblend\n\nBlendAlphawith EdgeDetect(1.0)\nBlendAlphaSimplexNoisewith EdgeDetect(1.0)\nBlendAlphaFrequencyNoisewith EdgeDetect(1.0)\nBlendAlphaSomeColorswith RemoveSaturation(1.0)\nBlendAlphaRegularGridwith Multiply((0.0, 0.5))\n\n\n\n\n\n\n\n\n\n\n\nSee also: BlendAlphaMask, BlendAlphaElementwise, BlendAlphaVerticalLinearGradient, BlendAlphaHorizontalLinearGradient, BlendAlphaSegMapClassIds, BlendAlphaBoundingBoxes, BlendAlphaCheckerboard, SomeColorsMaskGen, HorizontalLinearGradientMaskGen, VerticalLinearGradientMaskGen, RegularGridMaskGen, CheckerboardMaskGen, SegMapClassIdsMaskGen, BoundingBoxesMaskGen, InvertMaskGen\n\nblur\n\nGaussianBlur\nAverageBlur\nMedianBlur\nBilateralBlur(sigma_color=250,sigma_space=250)\nMotionBlur(angle=0)\n\n\n\n\n\n\n\n\n\nMotionBlur(k=5)\nMeanShiftBlur\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\ncollections\n\nRandAugment\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\ncolor\n\nMultiplyAndAddToBrightness\nMultiplyHueAndSaturation\nMultiplyHue\nMultiplySaturation\nAddToHueAndSaturation\n\n\n\n\n\n\n\n\n\nGrayscale\nRemoveSaturation\nChangeColorTemperature\nKMeansColorQuantization(to_colorspace=RGB)\nUniformColorQuantization(to_colorspace=RGB)\n\n\n\n\n\n\n\n\n\n\n\nSee also: WithColorspace, WithBrightnessChannels, MultiplyBrightness, AddToBrightness, WithHueAndSaturation, AddToHue, AddToSaturation, ChangeColorspace, Posterize\n\ncontrast\n\nGammaContrast\nGammaContrast(per_channel=True)\nSigmoidContrast(cutoff=0.5)\nSigmoidContrast(gain=10)\nLogContrast\n\n\n\n\n\n\n\n\n\nLinearContrast\nAllChannels-HistogramEqualization\nHistogramEqualization\nAllChannelsCLAHE\nCLAHE\n\n\n\n\n\n\n\n\n\n\n\nSee also: Equalize\n\nconvolutional\n\nSharpen(alpha=1)\nEmboss(alpha=1)\nEdgeDetect\nDirectedEdgeDetect(alpha=1)\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\nSee also: Convolve\n\n\ndebug\n\nSee also: SaveDebugImageEveryNBatches\n\nedges\n\nCanny\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\nflip\n\nFliplr\nFlipud\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\nSee also: HorizontalFlip, VerticalFlip\n\ngeometric\n\nAffine\nAffine: Modes\n\u00a0\n\n\n\n\n\u00a0\n\n\nAffine: cval\nPiecewiseAffine\n\u00a0\n\n\n\n\n\u00a0\n\n\nPerspectiveTransform\nElasticTransformation(sigma=1.0)\n\u00a0\n\n\n\n\n\u00a0\n\n\nElasticTransformation(sigma=4.0)\nRot90\n\u00a0\n\n\n\n\n\u00a0\n\n\nWithPolarWarping+Affine\nJigsaw(5x5 grid)\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\nSee also: ScaleX, ScaleY, TranslateX, TranslateY, Rotate\n\nimgcorruptlike\n\nGlassBlur\nDefocusBlur\nZoomBlur\nSnow\nSpatter\n\n\n\n\n\n\n\n\n\n\n\nSee also: GaussianNoise, ShotNoise, ImpulseNoise, SpeckleNoise, GaussianBlur, MotionBlur, Fog, Frost, Contrast, Brightness, Saturate, JpegCompression, Pixelate, ElasticTransform\n\npillike\n\nAutocontrast\nEnhanceColor\nEnhanceSharpness\nFilterEdgeEnhanceMore\nFilterContour\n\n\n\n\n\n\n\n\n\n\n\nSee also: Solarize, Posterize, Equalize, EnhanceContrast, EnhanceBrightness, FilterBlur, FilterSmooth, FilterSmoothMore, FilterEdgeEnhance, FilterFindEdges, FilterEmboss, FilterSharpen, FilterDetail, Affine\n\npooling\n\nAveragePooling\nMaxPooling\nMinPooling\nMedianPooling\n\u00a0\n\n\n\n\n\n\n\u00a0\n\nsegmentation\n\nSuperpixels(p_replace=1)\nSuperpixels(n_segments=100)\nUniformVoronoi\nRegularGridVoronoi: rows\/cols(p_drop_points=0)\nRegularGridVoronoi: p_drop_points(n_rows=n_cols=30)\n\n\n\n\n\n\n\n\n\nRegularGridVoronoi: p_replace(n_rows=n_cols=16)\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\nSee also: Voronoi, RelativeRegularGridVoronoi, RegularGridPointsSampler, RelativeRegularGridPointsSampler, DropoutPointsSampler, UniformPointsSampler, SubsamplingPointsSampler\n\nsize\n\nCropAndPad\nCrop\n\u00a0\n\n\n\n\n\u00a0\n\n\nPad\nPadToFixedSize(height'=height+32,width'=width+32)\n\u00a0\n\n\n\n\n\u00a0\n\n\nCropToFixedSize(height'=height-32,width'=width-32)\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\nSee also: Resize, CropToMultiplesOf, PadToMultiplesOf, CropToPowersOf, PadToPowersOf, CropToAspectRatio, PadToAspectRatio, CropToSquare, PadToSquare, CenterCropToFixedSize, CenterPadToFixedSize, CenterCropToMultiplesOf, CenterPadToMultiplesOf, CenterCropToPowersOf, CenterPadToPowersOf, CenterCropToAspectRatio, CenterPadToAspectRatio, CenterCropToSquare, CenterPadToSquare, KeepSizeByResize\n\nweather\n\nFastSnowyLandscape(lightness_multiplier=2.0)\nClouds\nFog\nSnowflakes\nRain\n\n\n\n\n\n\n\n\n\n\n\nSee also: CloudLayer, SnowflakesLayer, RainLayer\n\n\n\nCode Examples\nExample: Simple Training Setting\nA standard machine learning situation.\nTrain on batches of images and augment each batch via crop, horizontal\nflip (\"Fliplr\") and gaussian blur:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\ndef load_batch(batch_idx):\n    # dummy function, implement this\n    # Return a numpy array of shape (N, height, width, #channels)\n    # or a list of (height, width, #channels) arrays (may have different image\n    # sizes).\n    # Images should be in RGB for colorspace augmentations.\n    # (cv2.imread() returns BGR!)\n    # Images should usually be in uint8 with values from 0-255.\n    return np.zeros((128, 32, 32, 3), dtype=np.uint8) + (batch_idx % 255)\n\ndef train_on_images(images):\n    # dummy function, implement this\n    pass\n\n# Pipeline:\n# (1) Crop images from each side by 1-16px, do not resize the results\n#     images back to the input size. Keep them at the cropped size.\n# (2) Horizontally flip 50% of the images.\n# (3) Blur images using a gaussian kernel with sigma between 0.0 and 3.0.\nseq = iaa.Sequential([\n    iaa.Crop(px=(1, 16), keep_size=False),\n    iaa.Fliplr(0.5),\n    iaa.GaussianBlur(sigma=(0, 3.0))\n])\n\nfor batch_idx in range(100):\n    images = load_batch(batch_idx)\n    images_aug = seq(images=images)  # done by the library\n    train_on_images(images_aug)\nExample: Very Complex Augmentation Pipeline\nApply a very heavy augmentation pipeline to images (used to create the image\nat the very top of this readme):\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\n# random example images\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# Sometimes(0.5, ...) applies the given augmenter in 50% of all cases,\n# e.g. Sometimes(0.5, GaussianBlur(0.3)) would blur roughly every second image.\nsometimes = lambda aug: iaa.Sometimes(0.5, aug)\n\n# Define our sequence of augmentation steps that will be applied to every image\n# All augmenters with per_channel=0.5 will sample one value _per image_\n# in 50% of all cases. In all other cases they will sample new values\n# _per channel_.\n\nseq = iaa.Sequential(\n    [\n        # apply the following augmenters to most images\n        iaa.Fliplr(0.5), # horizontally flip 50% of all images\n        iaa.Flipud(0.2), # vertically flip 20% of all images\n        # crop images by -5% to 10% of their height\/width\n        sometimes(iaa.CropAndPad(\n            percent=(-0.05, 0.1),\n            pad_mode=ia.ALL,\n            pad_cval=(0, 255)\n        )),\n        sometimes(iaa.Affine(\n            scale={\"x\": (0.8, 1.2), \"y\": (0.8, 1.2)}, # scale images to 80-120% of their size, individually per axis\n            translate_percent={\"x\": (-0.2, 0.2), \"y\": (-0.2, 0.2)}, # translate by -20 to +20 percent (per axis)\n            rotate=(-45, 45), # rotate by -45 to +45 degrees\n            shear=(-16, 16), # shear by -16 to +16 degrees\n            order=[0, 1], # use nearest neighbour or bilinear interpolation (fast)\n            cval=(0, 255), # if mode is constant, use a cval between 0 and 255\n            mode=ia.ALL # use any of scikit-image's warping modes (see 2nd image from the top for examples)\n        )),\n        # execute 0 to 5 of the following (less important) augmenters per image\n        # don't execute all of them, as that would often be way too strong\n        iaa.SomeOf((0, 5),\n            [\n                sometimes(iaa.Superpixels(p_replace=(0, 1.0), n_segments=(20, 200))), # convert images into their superpixel representation\n                iaa.OneOf([\n                    iaa.GaussianBlur((0, 3.0)), # blur images with a sigma between 0 and 3.0\n                    iaa.AverageBlur(k=(2, 7)), # blur image using local means with kernel sizes between 2 and 7\n                    iaa.MedianBlur(k=(3, 11)), # blur image using local medians with kernel sizes between 2 and 7\n                ]),\n                iaa.Sharpen(alpha=(0, 1.0), lightness=(0.75, 1.5)), # sharpen images\n                iaa.Emboss(alpha=(0, 1.0), strength=(0, 2.0)), # emboss images\n                # search either for all edges or for directed edges,\n                # blend the result with the original image using a blobby mask\n                iaa.SimplexNoiseAlpha(iaa.OneOf([\n                    iaa.EdgeDetect(alpha=(0.5, 1.0)),\n                    iaa.DirectedEdgeDetect(alpha=(0.5, 1.0), direction=(0.0, 1.0)),\n                ])),\n                iaa.AdditiveGaussianNoise(loc=0, scale=(0.0, 0.05*255), per_channel=0.5), # add gaussian noise to images\n                iaa.OneOf([\n                    iaa.Dropout((0.01, 0.1), per_channel=0.5), # randomly remove up to 10% of the pixels\n                    iaa.CoarseDropout((0.03, 0.15), size_percent=(0.02, 0.05), per_channel=0.2),\n                ]),\n                iaa.Invert(0.05, per_channel=True), # invert color channels\n                iaa.Add((-10, 10), per_channel=0.5), # change brightness of images (by -10 to 10 of original value)\n                iaa.AddToHueAndSaturation((-20, 20)), # change hue and saturation\n                # either change the brightness of the whole image (sometimes\n                # per channel) or change the brightness of subareas\n                iaa.OneOf([\n                    iaa.Multiply((0.5, 1.5), per_channel=0.5),\n                    iaa.FrequencyNoiseAlpha(\n                        exponent=(-4, 0),\n                        first=iaa.Multiply((0.5, 1.5), per_channel=True),\n                        second=iaa.LinearContrast((0.5, 2.0))\n                    )\n                ]),\n                iaa.LinearContrast((0.5, 2.0), per_channel=0.5), # improve or worsen the contrast\n                iaa.Grayscale(alpha=(0.0, 1.0)),\n                sometimes(iaa.ElasticTransformation(alpha=(0.5, 3.5), sigma=0.25)), # move pixels locally around (with random strengths)\n                sometimes(iaa.PiecewiseAffine(scale=(0.01, 0.05))), # sometimes move parts of the image around\n                sometimes(iaa.PerspectiveTransform(scale=(0.01, 0.1)))\n            ],\n            random_order=True\n        )\n    ],\n    random_order=True\n)\nimages_aug = seq(images=images)\nExample: Augment Images and Keypoints\nAugment images and keypoints\/landmarks on the same images:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\npoints = [\n    [(10.5, 20.5)],  # points on first image\n    [(50.5, 50.5), (60.5, 60.5), (70.5, 70.5)]  # points on second image\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\n# augment keypoints and images\nimages_aug, points_aug = seq(images=images, keypoints=points)\n\nprint(\"Image 1 center\", np.argmax(images_aug[0, 64, 64:64+6, 0]))\nprint(\"Image 2 center\", np.argmax(images_aug[1, 64, 64:64+6, 0]))\nprint(\"Points 1\", points_aug[0])\nprint(\"Points 2\", points_aug[1])\nNote that all coordinates in imgaug are subpixel-accurate, which is\nwhy x=0.5, y=0.5 denotes the center of the top left pixel.\nExample: Augment Images and Bounding Boxes\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\nbbs = [\n    [ia.BoundingBox(x1=10.5, y1=15.5, x2=30.5, y2=50.5)],\n    [ia.BoundingBox(x1=10.5, y1=20.5, x2=50.5, y2=50.5),\n     ia.BoundingBox(x1=40.5, y1=75.5, x2=70.5, y2=100.5)]\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\nimages_aug, bbs_aug = seq(images=images, bounding_boxes=bbs)\nExample: Augment Images and Polygons\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\npolygons = [\n    [ia.Polygon([(10.5, 10.5), (50.5, 10.5), (50.5, 50.5)])],\n    [ia.Polygon([(0.0, 64.5), (64.5, 0.0), (128.0, 128.0), (64.5, 128.0)])]\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\nimages_aug, polygons_aug = seq(images=images, polygons=polygons)\nExample: Augment Images and LineStrings\nLineStrings are similar to polygons, but are not closed, may intersect with\nthemselves and don't have an inner area.\nimport numpy as np\nimport imgaug as ia\nimport imgaug.augmenters as iaa\n\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\nimages[:, 64, 64, :] = 255\nls = [\n    [ia.LineString([(10.5, 10.5), (50.5, 10.5), (50.5, 50.5)])],\n    [ia.LineString([(0.0, 64.5), (64.5, 0.0), (128.0, 128.0), (64.5, 128.0),\n                    (128.0, 0.0)])]\n]\n\nseq = iaa.Sequential([\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\n    iaa.Affine(translate_px={\"x\": (1, 5)})\n])\n\nimages_aug, ls_aug = seq(images=images, line_strings=ls)\nExample: Augment Images and Heatmaps\nHeatmaps are dense float arrays with values between 0.0 and 1.0.\nThey can be used e.g. when training models to predict facial landmark\nlocations. Note that the heatmaps here have lower height and width than the\nimages. imgaug handles that case automatically. The crop pixel amounts will\nbe halved for the heatmaps.\nimport numpy as np\nimport imgaug.augmenters as iaa\n\n# Standard scenario: You have N RGB-images and additionally 21 heatmaps per\n# image. You want to augment each image and its heatmaps identically.\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\nheatmaps = np.random.random(size=(16, 64, 64, 1)).astype(np.float32)\n\nseq = iaa.Sequential([\n    iaa.GaussianBlur((0, 3.0)),\n    iaa.Affine(translate_px={\"x\": (-40, 40)}),\n    iaa.Crop(px=(0, 10))\n])\n\nimages_aug, heatmaps_aug = seq(images=images, heatmaps=heatmaps)\nExample: Augment Images and Segmentation Maps\nThis is similar to heatmaps, but the dense arrays have dtype int32.\nOperations such as resizing will automatically use nearest neighbour\ninterpolation.\nimport numpy as np\nimport imgaug.augmenters as iaa\n\n# Standard scenario: You have N=16 RGB-images and additionally one segmentation\n# map per image. You want to augment each image and its heatmaps identically.\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\nsegmaps = np.random.randint(0, 10, size=(16, 64, 64, 1), dtype=np.int32)\n\nseq = iaa.Sequential([\n    iaa.GaussianBlur((0, 3.0)),\n    iaa.Affine(translate_px={\"x\": (-40, 40)}),\n    iaa.Crop(px=(0, 10))\n])\n\nimages_aug, segmaps_aug = seq(images=images, segmentation_maps=segmaps)\nExample: Visualize Augmented Images\nQuickly show example results of your augmentation sequence:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\nseq = iaa.Sequential([iaa.Fliplr(0.5), iaa.GaussianBlur((0, 3.0))])\n\n# Show an image with 8*8 augmented versions of image 0 and 8*8 augmented\n# versions of image 1. Identical augmentations will be applied to\n# image 0 and 1.\nseq.show_grid([images[0], images[1]], cols=8, rows=8)\nExample: Visualize Augmented Non-Image Data\nimgaug contains many helper function, among these functions to quickly\nvisualize augmented non-image results, such as bounding boxes or heatmaps.\nimport numpy as np\nimport imgaug as ia\n\nimage = np.zeros((64, 64, 3), dtype=np.uint8)\n\n# points\nkps = [ia.Keypoint(x=10.5, y=20.5), ia.Keypoint(x=60.5, y=60.5)]\nkpsoi = ia.KeypointsOnImage(kps, shape=image.shape)\nimage_with_kps = kpsoi.draw_on_image(image, size=7, color=(0, 0, 255))\nia.imshow(image_with_kps)\n\n# bbs\nbbsoi = ia.BoundingBoxesOnImage([\n    ia.BoundingBox(x1=10.5, y1=20.5, x2=50.5, y2=30.5)\n], shape=image.shape)\nimage_with_bbs = bbsoi.draw_on_image(image)\nimage_with_bbs = ia.BoundingBox(\n    x1=50.5, y1=10.5, x2=100.5, y2=16.5\n).draw_on_image(image_with_bbs, color=(255, 0, 0), size=3)\nia.imshow(image_with_bbs)\n\n# polygons\npsoi = ia.PolygonsOnImage([\n    ia.Polygon([(10.5, 20.5), (50.5, 30.5), (10.5, 50.5)])\n], shape=image.shape)\nimage_with_polys = psoi.draw_on_image(\n    image, alpha_points=0, alpha_face=0.5, color_lines=(255, 0, 0))\nia.imshow(image_with_polys)\n\n# heatmaps\nhms = ia.HeatmapsOnImage(np.random.random(size=(32, 32, 1)).astype(np.float32),\n                         shape=image.shape)\nimage_with_hms = hms.draw_on_image(image)\nia.imshow(image_with_hms)\nLineStrings and segmentation maps support similar methods as shown above.\nExample: Using Augmenters Only Once\nWhile the interface is adapted towards re-using instances of augmenters\nmany times, you are also free to use them only once. The overhead to\ninstantiate the augmenters each time is usually negligible.\nfrom imgaug import augmenters as iaa\nimport numpy as np\n\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# always horizontally flip each input image\nimages_aug = iaa.Fliplr(1.0)(images=images)\n\n# vertically flip each input image with 90% probability\nimages_aug = iaa.Flipud(0.9)(images=images)\n\n# blur 50% of all images using a gaussian kernel with a sigma of 3.0\nimages_aug = iaa.Sometimes(0.5, iaa.GaussianBlur(3.0))(images=images)\nExample: Multicore Augmentation\nImages can be augmented in background processes using the\nmethod augment_batches(batches, background=True), where batches is\na list\/generator of\nimgaug.augmentables.batches.UnnormalizedBatch\nor\nimgaug.augmentables.batches.Batch.\nThe following example augments a list of image batches in the background:\nimport skimage.data\nimport imgaug as ia\nimport imgaug.augmenters as iaa\nfrom imgaug.augmentables.batches import UnnormalizedBatch\n\n# Number of batches and batch size for this example\nnb_batches = 10\nbatch_size = 32\n\n# Example augmentation sequence to run in the background\naugseq = iaa.Sequential([\n    iaa.Fliplr(0.5),\n    iaa.CoarseDropout(p=0.1, size_percent=0.1)\n])\n\n# For simplicity, we use the same image here many times\nastronaut = skimage.data.astronaut()\nastronaut = ia.imresize_single_image(astronaut, (64, 64))\n\n# Make batches out of the example image (here: 10 batches, each 32 times\n# the example image)\nbatches = []\nfor _ in range(nb_batches):\n    batches.append(UnnormalizedBatch(images=[astronaut] * batch_size))\n\n# Show the augmented images.\n# Note that augment_batches() returns a generator.\nfor images_aug in augseq.augment_batches(batches, background=True):\n    ia.imshow(ia.draw_grid(images_aug.images_aug, cols=8))\nIf you need more control over the background augmentation, e.g. to set\nseeds, control the number of used CPU cores or constraint the memory usage,\nsee the corresponding\nmulticore augmentation notebook\nor the API about\nAugmenter.pool()\nand\nimgaug.multicore.Pool.\nExample: Probability Distributions as Parameters\nMost augmenters support using tuples (a, b) as a shortcut to denote\nuniform(a, b) or lists [a, b, c] to denote a set of allowed values from\nwhich one will be picked randomly. If you require more complex probability\ndistributions (e.g. gaussians, truncated gaussians or poisson distributions)\nyou can use stochastic parameters from imgaug.parameters:\nimport numpy as np\nfrom imgaug import augmenters as iaa\nfrom imgaug import parameters as iap\n\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# Blur by a value sigma which is sampled from a uniform distribution\n# of range 10.1 <= x < 13.0.\n# The convenience shortcut for this is: GaussianBlur((10.1, 13.0))\nblurer = iaa.GaussianBlur(10 + iap.Uniform(0.1, 3.0))\nimages_aug = blurer(images=images)\n\n# Blur by a value sigma which is sampled from a gaussian distribution\n# N(1.0, 0.1), i.e. sample a value that is usually around 1.0.\n# Clip the resulting value so that it never gets below 0.1 or above 3.0.\nblurer = iaa.GaussianBlur(iap.Clip(iap.Normal(1.0, 0.1), 0.1, 3.0))\nimages_aug = blurer(images=images)\nThere are many more probability distributions in the library, e.g. truncated\ngaussian distribution, poisson distribution or beta distribution.\nExample: WithChannels\nApply an augmenter only to specific image channels:\nimport numpy as np\nimport imgaug.augmenters as iaa\n\n# fake RGB images\nimages = np.random.randint(0, 255, (16, 128, 128, 3), dtype=np.uint8)\n\n# add a random value from the range (-30, 30) to the first two channels of\n# input images (e.g. to the R and G channels)\naug = iaa.WithChannels(\n  channels=[0, 1],\n  children=iaa.Add((-30, 30))\n)\n\nimages_aug = aug(images=images)\n\nCitation\nIf this library has helped you during your research, feel free to cite it:\n@misc{imgaug,\n  author = {Jung, Alexander B.\n            and Wada, Kentaro\n            and Crall, Jon\n            and Tanaka, Satoshi\n            and Graving, Jake\n            and Reinders, Christoph\n            and Yadav, Sarthak\n            and Banerjee, Joy\n            and Vecsei, G\u00e1bor\n            and Kraft, Adam\n            and Rui, Zheng\n            and Borovec, Jirka\n            and Vallentin, Christian\n            and Zhydenko, Semen\n            and Pfeiffer, Kilian\n            and Cook, Ben\n            and Fern\u00e1ndez, Ismael\n            and De Rainville, Fran\u00e7ois-Michel\n            and Weng, Chi-Hung\n            and Ayala-Acevedo, Abner\n            and Meudec, Raphael\n            and Laporte, Matias\n            and others},\n  title = {{imgaug}},\n  howpublished = {\\url{https:\/\/github.com\/aleju\/imgaug}},\n  year = {2020},\n  note = {Online; accessed 01-Feb-2020}\n}\n","187":"speedtest-cli\nCommand line interface for testing internet bandwidth using\nspeedtest.net\n\n\n\n\n\n\n\nVersions\nspeedtest-cli works with Python 2.4-3.7\n\n\n\nInstallation\n\npip \/ easy_install\npip install speedtest-cli\n\nor\neasy_install speedtest-cli\n\n\nGithub\npip install git+https:\/\/github.com\/sivel\/speedtest-cli.git\n\nor\ngit clone https:\/\/github.com\/sivel\/speedtest-cli.git\ncd speedtest-cli\npython setup.py install\n\n\nJust download (Like the way it used to be)\nwget -O speedtest-cli https:\/\/raw.githubusercontent.com\/sivel\/speedtest-cli\/master\/speedtest.py\nchmod +x speedtest-cli\n\nor\ncurl -Lo speedtest-cli https:\/\/raw.githubusercontent.com\/sivel\/speedtest-cli\/master\/speedtest.py\nchmod +x speedtest-cli\n\n\nUsage\n$ speedtest-cli -h\nusage: speedtest-cli [-h] [--no-download] [--no-upload] [--single] [--bytes]\n                     [--share] [--simple] [--csv]\n                     [--csv-delimiter CSV_DELIMITER] [--csv-header] [--json]\n                     [--list] [--server SERVER] [--exclude EXCLUDE]\n                     [--mini MINI] [--source SOURCE] [--timeout TIMEOUT]\n                     [--secure] [--no-pre-allocate] [--version]\n\nCommand line interface for testing internet bandwidth using speedtest.net.\n--------------------------------------------------------------------------\nhttps:\/\/github.com\/sivel\/speedtest-cli\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --no-download         Do not perform download test\n  --no-upload           Do not perform upload test\n  --single              Only use a single connection instead of multiple. This\n                        simulates a typical file transfer.\n  --bytes               Display values in bytes instead of bits. Does not\n                        affect the image generated by --share, nor output from\n                        --json or --csv\n  --share               Generate and provide a URL to the speedtest.net share\n                        results image, not displayed with --csv\n  --simple              Suppress verbose output, only show basic information\n  --csv                 Suppress verbose output, only show basic information\n                        in CSV format. Speeds listed in bit\/s and not affected\n                        by --bytes\n  --csv-delimiter CSV_DELIMITER\n                        Single character delimiter to use in CSV output.\n                        Default \",\"\n  --csv-header          Print CSV headers\n  --json                Suppress verbose output, only show basic information\n                        in JSON format. Speeds listed in bit\/s and not\n                        affected by --bytes\n  --list                Display a list of speedtest.net servers sorted by\n                        distance\n  --server SERVER       Specify a server ID to test against. Can be supplied\n                        multiple times\n  --exclude EXCLUDE     Exclude a server from selection. Can be supplied\n                        multiple times\n  --mini MINI           URL of the Speedtest Mini server\n  --source SOURCE       Source IP address to bind to\n  --timeout TIMEOUT     HTTP timeout in seconds. Default 10\n  --secure              Use HTTPS instead of HTTP when communicating with\n                        speedtest.net operated servers\n  --no-pre-allocate     Do not pre allocate upload data. Pre allocation is\n                        enabled by default to improve upload performance. To\n                        support systems with insufficient memory, use this\n                        option to avoid a MemoryError\n  --version             Show the version number and exit\n\n\nPython API\nSee the wiki.\n\nInconsistency\nIt is not a goal of this application to be a reliable latency reporting tool.\nLatency reported by this tool should not be relied on as a value indicative of ICMP\nstyle latency. It is a relative value used for determining the lowest latency server\nfor performing the actual speed test against.\nThere is the potential for this tool to report results inconsistent with Speedtest.net.\nThere are several concepts to be aware of that factor into the potential inconsistency:\n\nSpeedtest.net has migrated to using pure socket tests instead of HTTP based tests\nThis application is written in Python\nDifferent versions of Python will execute certain parts of the code faster than others\nCPU and Memory capacity and speed will play a large part in inconsistency between\nSpeedtest.net and even other machines on the same network\n\nIssues relating to inconsistencies will be closed as wontfix and without\nadditional reason or context.\n","188":"DeepCreamPy\nDecensoring Hentai with Deep Neural Networks.\n\n\n\n\n\n\nA deep learning-based tool to automatically replace censored artwork in hentai with plausible reconstructions.\nBefore DeepCreamPy can be used, the user must color censored regions in their hentai green with an image editing program like GIMP or Photoshop. DeepCreamPy takes the green colored images as input, and a neural network automatically fills in the censored regions.\nYou can download the latest release for Windows 64-bit here.\nFor users interested in compiling DeepCreamPy themselves, DeepCreamPy can run on Windows, Mac, and Linux.\nPlease before you open a new issue check closed issues and check the table of contents.\n\n\n\nFeatures\n\nDecensoring images of any size\nDecensoring of ANY shaped censor (e.g. black lines, pink hearts, etc.)\nDecensoring of mosaic decensors\nLimited support for decensoring black and white\/monochrome images\nGenerate multiple variations of decensors from the same image\n\nLimitations\nThe decensorship is for color hentai images that have minor to moderate censorship of the penis or vagina. If a vagina or penis is completely censored out, decensoring will be ineffective.\nIt does NOT work with:\n\nHentai with screentones (e.g. printed hentai)\nReal life porn\nCensorship of nipples\nCensorship of anus\nAnimated gifs\/videos\n\nTable of Contents\nSetup:\n\nRunning latest Window 64-bit release\nRunning code yourself\n\nUsage:\n\nDecensoring tutorial\nTroubleshooting for installing\nTroubleshooting for poor quality decensors\n\nMiscellaneous:\n\nFAQ\n\nTo do\n\nResolve all Tensorflow compatibility problems\nFinish the user interface\nAdd error log\n\nFollow me on Twitter @deeppomf (NSFW Tweets) for project updates.\nContributions\nIf you want to make a pull request to DeepCreamPy, you must first sign our Contributor License Agreement (the \"CLA\"). Then I can accept your pull requests.\nSpecial thanks to ccppoo, IAmTheRedSpy, 0xb8, deniszh, Smethan, harjitmoe, itsVale, StartleStars, and SoftArmpit for their contributions!\nLicense\nSource code and official releases\/binaries are distributed under the GNU Affero General Public License v3.0.\nAcknowledgements\nExample mermaid image by Shurajo & AVALANCHE Game Studio under CC BY 3.0 License. The example image is modified from the original, which can be found here.\nNeural network code is modified from Forty-lock's project PEPSI, which is the official implementation of the paper PEPSI : Fast Image Inpainting With Parallel Decoding Network. PEPSI is licensed under the MIT license.\nTraining data is modified from gwern's project Danbooru2017: A Large-Scale Crowdsourced and Tagged Anime Illustration Dataset and other sources.\nSee ACKNOWLEDGEMENTS.md for full license text of these projects.\nDonations\nIf you like the work I do, you can donate to me via Paypal. The funds go towards keeping me alive. \n","189":"Rasa Open Source\n\n\n\n\n\n\n\n\n\n\nRasa is an open source machine learning framework to automate text-and voice-based conversations. With Rasa, you can build contextual assistants on:\n\nFacebook Messenger\nSlack\nGoogle Hangouts\nWebex Teams\nMicrosoft Bot Framework\nRocket.Chat\nMattermost\nTelegram\nTwilio\nYour own custom conversational channels\n\nor voice assistants as:\n\nAlexa Skills\nGoogle Home Actions\n\nRasa helps you build contextual assistants capable of having layered conversations with\nlots of back-and-forth. In order for a human to have a meaningful exchange with a contextual\nassistant, the assistant needs to be able to use context to build on things that were previously\ndiscussed \u2013 Rasa enables you to build assistants that can do this in a scalable way.\nThere's a lot more background information in this\nblog post.\n\n\n\nWhat does Rasa do? \ud83e\udd14\nCheck out our Website\n\n\nI'm new to Rasa \ud83d\ude04\nGet Started with Rasa\n\n\nI'd like to read the detailed docs \ud83e\udd13\nRead The Docs\n\n\nI'm ready to install Rasa \ud83d\ude80\nInstallation\n\n\nI want to learn how to use Rasa \ud83d\ude80\nTutorial\n\n\nI have a question \u2753\nRasa Community Forum\n\n\nI would like to contribute \ud83e\udd17\nHow to Contribute\n\n\n\nWhere to get help\nThere is extensive documentation in the Rasa Docs.\nMake sure to select the correct version so you are looking at\nthe docs for the version you installed.\nPlease use Rasa Community Forum for quick answers to\nquestions.\nREADME Contents:\n\nHow to contribute\nDevelopment Internals\nLicense\n\nHow to contribute\nWe are very happy to receive and merge your contributions into this repository!\nTo contribute via pull request, follow these steps:\n\nCreate an issue describing the feature you want to work on (or\nhave a look at the contributor board)\nWrite your code, tests and documentation, and format them with black\nCreate a pull request describing your changes\n\nFor more detailed instructions on how to contribute code, check out these code contributor guidelines.\nYou can find more information about how to contribute to Rasa (in lots of\ndifferent ways!) on our website..\nYour pull request will be reviewed by a maintainer, who will get\nback to you about any necessary changes or questions. You will\nalso be asked to sign a\nContributor License Agreement.\nDevelopment Internals\nInstalling Poetry\nRasa uses Poetry for packaging and dependency management. If you want to build it from source,\nyou have to install Poetry first. This is how it can be done:\ncurl -sSL https:\/\/raw.githubusercontent.com\/python-poetry\/poetry\/master\/get-poetry.py | python\nThere are several other ways to install Poetry. Please, follow\nthe official guide to see all possible options.\nManaging environments\nThe official Poetry guide suggests to use\npyenv or any other similar tool to easily switch between Python versions.\nThis is how it can be done:\npyenv install 3.7.6\npyenv local 3.7.6  # Activate Python 3.7.6 for the current project\nBy default, Poetry will try to use the currently activated Python version to create the virtual environment\nfor the current project automatically. You can also create and activate a virtual environment manually \u2014 in this\ncase, Poetry should pick it up and use it to install the dependencies. For example:\npython -m venv .venv\nsource .venv\/bin\/activate\nYou can make sure that the environment is picked up by executing\npoetry env info\nBuilding from source\nTo install dependencies and rasa itself in editable mode execute\nmake install\nRunning and changing the documentation\nFirst of all, install all the required dependencies:\nmake install install-docs\nAfter the installation has finished, you can run and view the documentation\nlocally using:\nmake livedocs\nIt should open a new tab with the local version of the docs in your browser;\nif not, visit http:\/\/localhost:3000 in your browser.\nYou can now change the docs locally and the web page will automatically reload\nand apply your changes.\nRunning the Tests\nIn order to run the tests, make sure that you have the development requirements installed:\nmake prepare-tests-ubuntu # Only on Ubuntu and Debian based systems\nmake prepare-tests-macos  # Only on macOS\nThen, run the tests:\nmake test\nThey can also be run at multiple jobs to save some time:\nJOBS=[n] make test\nWhere [n] is the number of jobs desired. If omitted, [n] will be automatically chosen by pytest.\nResolving merge conflicts\nPoetry doesn't include any solution that can help to resolve merge conflicts in\nthe lock file poetry.lock by default.\nHowever, there is a great tool called poetry-merge-lock.\nHere is how you can install it:\npip install poetry-merge-lock\nJust execute this command to resolve merge conflicts in poetry.lock automatically:\npoetry-merge-lock\nSteps to release a new version\nReleasing a new version is quite simple, as the packages are build and distributed by GitHub Actions.\nTerminology:\n\npatch release (third version part increases): 1.1.2 -> 1.1.3\nminor release (second version part increases): 1.1.3 -> 1.2.0\nmajor release (first version part increases): 1.2.0 -> 2.0.0\n\nRelease steps:\n\nMake sure all dependencies are up to date (especially Rasa SDK)\n\nFor Rasa SDK that means first creating a new Rasa SDK release (make sure the version numbers between the new Rasa and Rasa SDK releases match)\nOnce the tag with the new Rasa SDK release is pushed and the package appears on pypi, the dependency in the rasa repository can be resolved (see below).\n\n\nSwitch to the branch you want to cut the release from (master in case of a major \/ minor, the current feature branch for patch releases)\n\nUpdate the rasa-sdk entry in pyproject.toml with the new release version and run poetry update. This creates a new poetry.lock file with all dependencies resolved.\nCommit the changes with git commit -am \"bump rasa-sdk dependency\" but do not push them. They will be automatically picked up by the following step.\n\n\nRun make release\nCreate a PR against master or the release branch (e.g. 1.2.x)\nOnce your PR is merged, tag a new release (this SHOULD always happen on master or release branches), e.g. using\ngit tag 1.2.0 -m \"next release\"\ngit push origin 1.2.0\nGitHub will build this tag and push a package to pypi\nIf this is a minor release, a new release branch should be created pointing to the same commit as the tag to allow for future patch releases, e.g.\ngit checkout -b 1.2.x\ngit push origin 1.2.x\n\n\nCode Style\nTo ensure a standardized code style we use the formatter black.\nTo ensure our type annotations are correct we use the type checker pytype.\nIf your code is not formatted properly or doesn't type check, GitHub will fail to build.\nFormatting\nIf you want to automatically format your code on every commit, you can use pre-commit.\nJust install it via pip install pre-commit and execute pre-commit install in the root folder.\nThis will add a hook to the repository, which reformats files on every commit.\nIf you want to set it up manually, install black via poetry install.\nTo reformat files execute\nmake formatter\n\nType Checking\nIf you want to check types on the codebase, install mypy using poetry install.\nTo check the types execute\nmake types\n\nDeploying documentation updates\nWe use Docusaurus v2 to build docs for tagged versions and for the master branch.\nThe static site that gets built is pushed to the documentation branch of this repo.\nWe host the site on netlify. On master branch builds (see .github\/workflows\/documentation.yml), we push the built docs to\nthe documentation branch. Netlify automatically re-deploys the docs pages whenever there is a change to that branch.\nLicense\nLicensed under the Apache License, Version 2.0.\nCopyright 2020 Rasa Technologies GmbH. Copy of the license.\nA list of the Licenses of the dependencies of the project can be found at\nthe bottom of the\nLibraries Summary.\n","190":"TuShare\nTushare Pro\u7248\u5df2\u53d1\u5e03\uff0c\u8bf7\u8bbf\u95ee\u65b0\u7684\u5b98\u7f51\u4e86\u89e3\u548c\u67e5\u8be2\u6570\u636e\u63a5\u53e3\uff01 https:\/\/tushare.pro\nTuShare\u662f\u5b9e\u73b0\u5bf9\u80a1\u7968\/\u671f\u8d27\u7b49\u91d1\u878d\u6570\u636e\u4ece\u6570\u636e\u91c7\u96c6\u3001\u6e05\u6d17\u52a0\u5de5 \u5230 \u6570\u636e\u5b58\u50a8\u8fc7\u7a0b\u7684\u5de5\u5177\uff0c\u6ee1\u8db3\u91d1\u878d\u91cf\u5316\u5206\u6790\u5e08\u548c\u5b66\u4e60\u6570\u636e\u5206\u6790\u7684\u4eba\u5728\u6570\u636e\u83b7\u53d6\u65b9\u9762\u7684\u9700\u6c42\uff0c\u5b83\u7684\u7279\u70b9\u662f\u6570\u636e\u8986\u76d6\u8303\u56f4\u5e7f\uff0c\u63a5\u53e3\u8c03\u7528\u7b80\u5355,\u54cd\u5e94\u5feb\u901f\u3002\n\n\u6b22\u8fce\u5173\u6ce8\u626b\u63cfTuShare\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u201c\u6316\u5730\u5154\u201d\uff0c\u66f4\u591a\u8d44\u6e90\u548c\u4fe1\u606f\u4e0e\u60a8\u5206\u4eab\u3002\u53e6\u5916\uff0c\u7531\u4e8etushare\u5b98\u7f51\u5728\u91cd\u65b0\u8bbe\u8ba1\u548c\u5f00\u53d1\uff0c\u6700\u65b0\u63a5\u53e3\u7684\u4f7f\u7528\u6587\u6863\u90fd\u4f1a\u5728\u6316\u5730\u5154\u516c\u4f17\u53f7\u53d1\u5e03\uff0c\u6240\u4ee5\uff0c\u8bf7\u626b\u7801\u5173\u6ce8\uff0c\u8c22\u8c22\uff01\n\nQQ\u4ea4\u6d41\u7fa4\uff1a\n\n\u4e00\u7fa4\uff08\u5df2\u6ee1\uff09\uff1a14934432\n\u4e8c\u7fa4\uff08\u4ed8\u8d39\u9ad8\u7ea7\u7528\u6237\u7fa4\uff0c\u53ef\u83b7\u5f97\u66f4\u591a\u652f\u6301\u53ca\u53c2\u4e0e\u5708\u5b50\u6d3b\u52a8\uff09\uff1a658562506\n\u4e09\u7fa4\uff08\u514d\u8d39\uff09\uff1a665480579\n\u56db\u7fa4 (\u514d\u8d39) \uff1a527416821\n\nDependencies\npython 2.x\/3.x\npandas\nInstallation\n\n\u65b9\u5f0f1\uff1apip install tushare\n\u65b9\u5f0f2\uff1apython setup.py install\n\u65b9\u5f0f3\uff1a\u8bbf\u95eehttps:\/\/pypi.python.org\/pypi\/tushare\/\u4e0b\u8f7d\u5b89\u88c5\n\nUpgrade\npip install tushare --upgrade\n\nQuick Start\nExample 1. \u83b7\u53d6\u4e2a\u80a1\u5386\u53f2\u4ea4\u6613\u6570\u636e\uff08\u5305\u62ec\u5747\u7ebf\u6570\u636e\uff09\uff1a\nimport tushare as ts\n\nts.get_hist_data('600848') #\u4e00\u6b21\u6027\u83b7\u53d6\u5168\u90e8\u6570\u636e\n\u53e6\u5916\uff0c\u53c2\u8003get_k_data\u51fd\u6570\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u65e5\u671f \uff0c\u5f00\u76d8\u4ef7\uff0c \u6700\u9ad8\u4ef7\uff0c \u6536\u76d8\u4ef7\uff0c \u6700\u4f4e\u4ef7\uff0c \u6210\u4ea4\u91cf\uff0c \u4ef7\u683c\u53d8\u52a8 \uff0c\u6da8\u8dcc\u5e45\uff0c5\u65e5\u5747\u4ef7\uff0c10\u65e5\u5747\u4ef7\uff0c20\u65e5\u5747\u4ef7\uff0c5\u65e5\u5747\u91cf\uff0c10\u65e5\u5747\u91cf\uff0c20\u65e5\u5747\u91cf\uff0c\u6362\u624b\u7387\n\n\t\t\t open    high   close     low     volume    p_change  ma5 \\\ndate                                                                     \n2012-01-11   6.880   7.380   7.060   6.880   14129.96     2.62   7.060   \n2012-01-12   7.050   7.100   6.980   6.900    7895.19    -1.13   7.020   \n2012-01-13   6.950   7.000   6.700   6.690    6611.87    -4.01   6.913   \n2012-01-16   6.680   6.750   6.510   6.480    2941.63    -2.84   6.813   \n2012-01-17   6.660   6.880   6.860   6.460    8642.57     5.38   6.822   \n2012-01-18   7.000   7.300   6.890   6.880   13075.40     0.44   6.788   \n2012-01-19   6.690   6.950   6.890   6.680    6117.32     0.00   6.770   \n2012-01-20   6.870   7.080   7.010   6.870    6813.09     1.74   6.832 \n\n\t\t\t ma10    ma20      v_ma5     v_ma10     v_ma20     turnover  \ndate                                                                  \n2012-01-11   7.060   7.060   14129.96   14129.96   14129.96     0.48  \n2012-01-12   7.020   7.020   11012.58   11012.58   11012.58     0.27  \n2012-01-13   6.913   6.913    9545.67    9545.67    9545.67     0.23  \n2012-01-16   6.813   6.813    7894.66    7894.66    7894.66     0.10  \n2012-01-17   6.822   6.822    8044.24    8044.24    8044.24     0.30  \n2012-01-18   6.833   6.833    7833.33    8882.77    8882.77     0.45  \n2012-01-19   6.841   6.841    7477.76    8487.71    8487.71     0.21  \n2012-01-20   6.863   6.863    7518.00    8278.38    8278.38     0.23  \n\n\u8bbe\u5b9a\u5386\u53f2\u6570\u636e\u7684\u65f6\u95f4\uff1a\nts.get_hist_data('600848',start='2015-01-05',end='2015-01-09')\n\n\t\t\topen    high   close     low    volume   p_change     ma5    ma10 \\  \ndate                                                                            \n2015-01-05  11.160  11.390  11.260  10.890  46383.57     1.26  11.156  11.212   \n2015-01-06  11.130  11.660  11.610  11.030  59199.93     3.11  11.182  11.155   \n2015-01-07  11.580  11.990  11.920  11.480  86681.38     2.67  11.366  11.251   \n2015-01-08  11.700  11.920  11.670  11.640  56845.71    -2.10  11.516  11.349   \n2015-01-09  11.680  11.710  11.230  11.190  44851.56    -3.77  11.538  11.363   \n \t\t\tma20     v_ma5    v_ma10     v_ma20 \t turnover  \ndate                                                        \n2015-01-05  11.198  58648.75  68429.87   97141.81     1.59  \n2015-01-06  11.382  54854.38  63401.05   98686.98     2.03  \n2015-01-07  11.543  55049.74  61628.07  103010.58     2.97  \n2015-01-08  11.647  57268.99  61376.00  105823.50     1.95  \n2015-01-09  11.682  58792.43  60665.93  107924.27     1.54  \n\n\u590d\u6743\u5386\u53f2\u6570\u636e\n\u83b7\u53d6\u5386\u53f2\u590d\u6743\u6570\u636e\uff0c\u5206\u4e3a\u524d\u590d\u6743\u548c\u540e\u590d\u6743\u6570\u636e\uff0c\u63a5\u53e3\u63d0\u4f9b\u80a1\u7968\u4e0a\u5e02\u4ee5\u6765\u6240\u6709\u5386\u53f2\u6570\u636e\uff0c\u9ed8\u8ba4\u4e3a\u524d\u590d\u6743\u3002\u5982\u679c\u4e0d\u8bbe\u5b9a\u5f00\u59cb\u548c\u7ed3\u675f\u65e5\u671f\uff0c\u5219\u8fd4\u56de\u8fd1\u4e00\u5e74\u7684\u590d\u6743\u6570\u636e\uff0c\u4ece\u6027\u80fd\u4e0a\u8003\u8651\uff0c\u63a8\u8350\u8bbe\u5b9a\u5f00\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f\uff0c\u800c\u4e14\u6700\u597d\u4e0d\u8981\u8d85\u8fc7\u4e00\u5e74\u4ee5\u4e0a\uff0c\u83b7\u53d6\u5230\u6570\u636e\u540e\uff0c\u8bf7\u53ca\u65f6\u5728\u672c\u5730\u5b58\u50a8\u3002\nts.get_h_data('002337') #\u524d\u590d\u6743\nts.get_h_data('002337',autype='hfq') #\u540e\u590d\u6743\nts.get_h_data('002337',autype=None) #\u4e0d\u590d\u6743\nts.get_h_data('002337',start='2015-01-01',end='2015-03-16') #\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u7684\u524d\u590d\u6743\u6570\u636e\n\nExample 2. \u4e00\u6b21\u6027\u83b7\u53d6\u6700\u8fd1\u4e00\u4e2a\u65e5\u4ea4\u6613\u65e5\u6240\u6709\u80a1\u7968\u7684\u4ea4\u6613\u6570\u636e\uff08\u7ed3\u679c\u663e\u793a\u901f\u5ea6\u53d6\u51b3\u4e8e\u7f51\u901f\uff09\nts.get_today_all()\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u4ee3\u7801\uff0c\u540d\u79f0\uff0c\u6da8\u8dcc\u5e45\uff0c\u73b0\u4ef7\uff0c\u5f00\u76d8\u4ef7\uff0c\u6700\u9ad8\u4ef7\uff0c\u6700\u4f4e\u4ef7\uff0c\u6700\u65e5\u6536\u76d8\u4ef7\uff0c\u6210\u4ea4\u91cf\uff0c\u6362\u624b\u7387\n\n\t  code    name     changepercent  trade   open   high    low  settlement \\  \n0     002738  \u4e2d\u77ff\u8d44\u6e90         10.023  19.32  19.32  19.32  19.32       17.56   \n1     300410  \u6b63\u4e1a\u79d1\u6280         10.022  25.03  25.03  25.03  25.03       22.75   \n2     002736  \u56fd\u4fe1\u8bc1\u5238         10.013  16.37  16.37  16.37  16.37       14.88   \n3     300412  \u8fe6\u5357\u79d1\u6280         10.010  31.54  31.54  31.54  31.54       28.67   \n4     300411  \u91d1\u76fe\u80a1\u4efd         10.007  29.68  29.68  29.68  29.68       26.98   \n5     603636  \u5357\u5a01\u8f6f\u4ef6         10.006  38.15  38.15  38.15  38.15       34.68   \n6     002664  \u4fe1\u8d28\u7535\u673a         10.004  30.68  29.00  30.68  28.30       27.89   \n7     300367  \u4e1c\u65b9\u7f51\u529b         10.004  86.76  78.00  86.76  77.87       78.87   \n8     601299  \u4e2d\u56fd\u5317\u8f66         10.000  11.44  11.44  11.44  11.29       10.40   \n9     601880   \u5927\u8fde\u6e2f         10.000   5.72   5.34   5.72   5.22        5.20   \n10    000856  \u5180\u4e1c\u88c5\u5907         10.000   8.91   8.18   8.91   8.18        8.10  \n\t\tvolume  \t turnoverratio  \n0        375100        1.25033  \n1         85800        0.57200  \n2       1058925        0.08824  \n3         69400        0.51791  \n4        252220        1.26110  \n5       1374630        5.49852  \n6       6448748        9.32700  \n7       2025030        6.88669  \n8     433453523        4.28056  \n9     323469835        9.61735  \n10     25768152       19.51090  \n\nExample 3. \u83b7\u53d6\u5386\u53f2\u5206\u7b14\u6570\u636e\nimport tushare as ts\n\ndf = ts.get_tick_data('600848',date='2014-01-09')\ndf.head(10)\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u6210\u4ea4\u65f6\u95f4\u3001\u6210\u4ea4\u4ef7\u683c\u3001\u4ef7\u683c\u53d8\u52a8\uff0c\u6210\u4ea4\u624b\u3001\u6210\u4ea4\u91d1\u989d(\u5143)\uff0c\u4e70\u5356\u7c7b\u578b\n\nOut[3]: \n \t time  \t\tprice change  volume  amount  type\n0    15:00:00   6.05     --       8    4840   \u5356\u76d8\n1    14:59:55   6.05     --      50   30250   \u5356\u76d8\n2    14:59:35   6.05     --      20   12100   \u5356\u76d8\n3    14:59:30   6.05  -0.01     165   99825   \u5356\u76d8\n4    14:59:20   6.06   0.01       4    2424   \u4e70\u76d8\n5    14:59:05   6.05  -0.01       2    1210   \u5356\u76d8\n6    14:58:55   6.06     --       4    2424   \u4e70\u76d8\n7    14:58:45   6.06     --       2    1212   \u4e70\u76d8\n8    14:58:35   6.06   0.01       2    1212   \u4e70\u76d8\n9    14:58:25   6.05  -0.01      20   12100   \u5356\u76d8\n10   14:58:05   6.06     --       5    3030   \u4e70\u76d8\n\nExample 4. \u83b7\u53d6\u5b9e\u65f6\u4ea4\u6613\u6570\u636e(Realtime Quotes Data)\ndf = ts.get_realtime_quotes('000581') #Single stock symbol\ndf[['code','name','price','bid','ask','volume','amount','time']]\n\n\u7ed3\u679c\u663e\u793a\uff1a\n\n\u540d\u79f0\u3001\u5f00\u76d8\u4ef7\u3001\u6628\u4ef7\u3001\u73b0\u4ef7\u3001\u6700\u9ad8\u3001\u6700\u4f4e\u3001\u4e70\u5165\u4ef7\u3001\u5356\u51fa\u4ef7\u3001\u6210\u4ea4\u91cf\u3001\u6210\u4ea4\u91d1\u989d...more in docs\n\n   code    name     price  bid    ask    volume   amount        time\n0  000581  \u5a01\u5b5a\u9ad8\u79d1  31.15  31.14  31.15  8183020  253494991.16  11:30:36 \n\n\u8bf7\u6c42\u591a\u4e2a\u80a1\u7968\u65b9\u6cd5\uff08\u4e00\u6b21\u6700\u597d\u4e0d\u8981\u8d85\u8fc730\u4e2a\uff09\uff1a\nts.get_realtime_quotes(['600848','000980','000981']) #symbols from a list\nts.get_realtime_quotes(df['code'].tail(10)) #from a Series\n\n\u66f4\u591a\u6587\u6863\nhttps:\/\/tushare.pro\nhttp:\/\/tushare.org\/\nChange Logs\n1.2.17 2018\/11\/24\n\nPro\u7248\u589e\u52a0\u671f\u8d27\u6570\u636e\nPro\u7248\u589e\u52a0A\u80a1\u5468\/\u6708\u6570\u636e\nPro\u7248\u589e\u52a0\u901a\u7528\u884c\u60c5pro_bar\u63a5\u53e3\u80a1\u7968\/\u57fa\u91d1\/\u671f\u8d27\/\u6570\u636e\u8d27\u5e01\u884c\u60c5\u7684\u652f\u6301\uff0c\u540c\u65f6\u652f\u6301\u80a1\u7968\u7684\u590d\u6743\u884c\u60c5\n\n1.2.15 2018\/10\/15\n\n\u589e\u52a0\u901a\u7528\u884c\u60c5pro_bar\u63a5\u53e3\n\u4f18\u5316set_token\u529f\u80fd\n\n1.2.12 2018\/08\/10\n\n\u53d1\u5e03Pro\u7248\u7b2c\u4e00\u7a3f\n\u53d1\u5e03Pro\u7f51\u7ad9\uff0chttps:\/\/tushare.pro\n\n1.0.5 2017\/11\/12\n\n\u65b0\u589e\u53ef\u8f6c\u503a\u6570\u636e\n\u589e\u52a0\u957f\u8fde\u63a5\u5173\u95ed\u51fd\u6570\n\u4fee\u590d\u90e8\u5206bug\n\n1.0.2 2017\/10\/29\n\n\u65b0\u589ebar\u63a5\u53e3\uff0c\u652f\u6301\u66f4\u7a33\u5b9a\u7684\u80a1\u7968\u3001ETF\u3001\u671f\u8d27\u671f\u6743\u3001\u6e2f\u80a1\u3001\u4e2d\u6982\u80a1\u7b49\u54c1\u79cd\n\u65b0\u589etick\u63a5\u53e3\uff0c\u652f\u6301\u4ee5\u4e0a\u54c1\u79cd\u7684\u6210\u4ea4\u6570\u636e\n\u65b0\u589e\u6caa\u6df1\u6e2f\u901a\u6bcf\u65e5\u8d44\u91d1\u6d41\u5411\u6570\u636e\n\u4fee\u590d\u4e86\u90e8\u5206bug\n\n0.9.2 2017\/09\/13\n\n\u65b0\u589e\u6570\u636e\u8d27\u5e01\u884c\u60c5\u6570\u636e\u63a5\u53e3,\u540c\u65f6\u652f\u6301\u706b\u5e01\u3001okcoin\u3001\u4e2d\u56fd\u6bd4\u7279\u5e01\n\u90e8\u5206bug\u4fee\u590d\n\n0.8.8 2017\/08\/29\n\n\u65b0\u589e\u5206\u7ea2\u9001\u80a1\u6570\u636e\uff08\u5305\u542b\u5386\u53f2\uff09\n\u65b0\u589eget_day_all\u63a5\u53e3\n\u65b0\u589eBDI\u63a5\u53e3\n\n0.8.0 2017\/06\/05\n\n\u65b0\u589e\u671f\u8d27\u884c\u60c5\u6570\u636e6\u4e2a\u63a5\u53e3\uff0c\u611f\u8c22debugo\u8d21\u732e\u4ee3\u7801\n\u4fee\u590d\u90e8\u5206bug\n\n0.7.6 2017\/05\/16\n\nget_today_all\u63a5\u53e3\u6570\u636e\u8865\u9f50\nforecast_data mac\u4e0b\u7f16\u7801\u95ee\u9898\u4fee\u590d\n\n0.7.0 2017\/03\/12\n\nget_today_all\u63a5\u53e3\u63d0\u901f\n\u7248\u672c\u7d2f\u79ef\u66f4\u65b0\n\n0.6.2 2016\/12\/03\n\n\u65b0\u589e\u5341\u5927\u80a1\u4e1c\u548c\u5341\u5927\u6d41\u901a\u80a1\u63a5\u53e3 top10_holders\n\u65b0\u589e\u5168\u7403\u5b9e\u65f6\u6307\u6570\u5217\u8868\u63a5\u53e3 global_realtime\n\u4fee\u590d\u90e8\u5206bug\n\n0.6.1 2016\/11\/22\n\n\u4fee\u6b63get_k_databug\n\u4fee\u6b63\u5b9e\u76d8\u4ea4\u6613\u767b\u5f55\u95ee\u9898\n\n0.5.6 2016\/11\/06\n\n\u65b0\u589e\u5168\u65b0\u884c\u60c5\u6570\u636e\u63a5\u53e3get_k_data(\u8bf7\u5173\u6ce8tushare\u516c\u4f17\u53f7\u201c\u6316\u5730\u5154\u201d\u540e\u67e5\u770b\u5386\u53f2\u6587\u7ae0\u300a\u5168\u65b0\u7684\u514d\u8d39\u884c\u60c5\u6570\u636e\u63a5\u53e3\u300b)\n\u4fee\u590d\u7a0b\u5e8f\u548c\u6587\u6863bug\n\n0.5.1 2016\/10\/16\n\n\u65b0\u589e\u5b9e\u76d8\u4ea4\u6613\u63a5\u53e3\n\u4fee\u590dbug\n\n0.4.9 2016\/03\/26\n\n\u65b0\u589e\u7533\u4e07\u884c\u4e1a\u5206\u7c7bget_industry_classified(standard='sw')\n\u65b0\u589e\u4ea4\u6613\u65e5\u5386trade_cal()\n\u4fee\u590dbug\n\n0.4.3 2015\/12\/24\n\n\u65b0\u589e\u7535\u5f71\u7968\u623f\u6570\u636e\n\u4fee\u590d\u90e8\u5206bug\n\n0.4.1 2015\/11\/27\n\n\u65b0\u589esina\u5927\u5355\u6570\u636e\n\u4fee\u6539\u5f53\u65e5\u5206\u7b14bug\n\u6df1\u5e02\u878d\u8d44\u878d\u5238\u6570\u636e\u4fee\u590d\n\n0.3.9 2015\/10\/13\n\n\u65b0\u589e\u671f\u6743\u9690\u542b\u6ce2\u52a8\u7387\u6570\u636e\n\u4fee\u590d\u6307\u6570\u6210\u4efd\u53ca\u6743\u91cd\u63a5\u53e3\u95ee\u9898\n\n0.3.8 2015\/09\/19\n\n\u6caa\u6df1300\u6210\u4efd\u80a1\u548c\u6743\u91cd\u63a5\u53e3\u95ee\u9898\u4fee\u590d\n\u5176\u5b83bug\u7684\u4fee\u590d\n\n0.3.5 2015\/07\/27\n\n\u90e8\u5206\u4ee3\u7801\u4fee\u6b63\n\n0.3.4 2015\/06\/15\n\n\n\u65b0\u589e\u2018\u9f99\u864e\u699c\u2019\u6a21\u5757\n\n\u6bcf\u65e5\u9f99\u864e\u699c\u5217\u8868\n\u4e2a\u80a1\u4e0a\u699c\u7edf\u8ba1\n\u8425\u4e1a\u90e8\u4e0a\u699c\u7edf\u8ba1\n\u9f99\u864e\u699c\u673a\u6784\u5e2d\u4f4d\u8ffd\u8e2a\n\u9f99\u864e\u699c\u673a\u6784\u5e2d\u4f4d\u6210\u4ea4\u660e\u7ec6\n\n\n\n\u4fee\u6539get_h_data\u6570\u636e\u7c7b\u578b\u4e3afloat\n\n\n\u4fee\u6539get_index\u63a5\u53e3\u9057\u6f0f\u7684open\u5217\n\n\n\u5408\u5e76GitHub\u4e0a\u63d0\u4ea4\u7684bug\u4fee\u590d\n\n\n0.2.8 2015\/04\/28\n\n\u65b0\u589e\u5927\u76d8\u6307\u6570\u5b9e\u65f6\u884c\u60c5\u5217\u8868\n\u65b0\u589e\u5927\u76d8\u6307\u6570\u5386\u53f2\u884c\u60c5\u6570\u636e\uff08\u5168\u90e8\uff09\n\u65b0\u589e\u7ec8\u6b62\u4e0a\u5e02\u516c\u53f8\u5217\u8868\uff08\u9000\u5e02\uff09\n\u65b0\u589e\u6682\u505c\u4e0a\u5e02\u516c\u53f8\u5217\u8868\n\u4fee\u6b63\u878d\u8d44\u878d\u5238\u660e\u7ec6\u65e0\u65e5\u671f\u7684\u7f3a\u9677\n\u4fee\u6b63get_h_data\u90e8\u5206bug\n\n0.2.6\n\n\u65b0\u589e\u6caa\u5e02\u878d\u8d44\u878d\u5238\u5217\u8868\n\u65b0\u589e\u6caa\u5e02\u878d\u8d44\u878d\u5238\u660e\u7ec6\u5217\u8868\n\u65b0\u589e\u6df1\u5e02\u878d\u8d44\u878d\u5238\u5217\u8868\n\u65b0\u589e\u6df1\u5e02\u878d\u8d44\u878d\u5238\u660e\u7ec6\u5217\u8868\n\u4fee\u6b63\u590d\u6743\u6570\u636e\u6570\u636e\u6e90\u51fa\u73b0null\u9020\u6210\u5f02\u5e38\u95ee\u9898\uff08\u5bf9\u5927\u7ea6300\u4e2a\u80a1\u7968\u6709\u5f71\u54cd\uff09\n\n0.2.5 2015\/04\/16\n\n\u5b8c\u6210python2.x\u548cpython3.x\u517c\u5bb9\u6027\u652f\u6301\n\u90e8\u5206\u7b97\u6cd5\u4f18\u5316\u548c\u4ee3\u7801\u91cd\u6784\n\u65b0\u589e\u4e2d\u8bc1500\u6210\u4efd\u80a1\n\u65b0\u589e\u5f53\u65e5\u5206\u7b14\u4ea4\u6613\u660e\u7ec6\n\u4fee\u6b63\u5206\u914d\u9884\u6848\uff08\u9ad8\u9001\u8f6c\uff09bug\n\n0.2.3 2015\/04\/11\n\n\u65b0\u589e\u201c\u65b0\u6d6a\u80a1\u5427\u201d\u6d88\u606f\u548c\u70ed\u5ea6\n\u65b0\u589e\u65b0\u80a1\u4e0a\u5e02\u6570\u636e\n\u4fee\u6b63\u201c\u57fa\u672c\u9762\u201d\u6a21\u5757\u4e2d\u6570\u636e\u91cd\u590d\u7684\u95ee\u9898\n\u4fee\u6b63\u5386\u53f2\u6570\u636e\u7f3a\u5c11\u4e00\u5217column\uff08\u6570\u636e\u6765\u6e90\u95ee\u9898\uff09\u7684bug\n\n0.2.0 2015\/03\/17\n\n\u65b0\u589e\u5386\u53f2\u590d\u6743\u6570\u636e\u63a5\u53e3\n\u65b0\u589e\u5373\u65f6\u6eda\u52a8\u65b0\u95fb\u3001\u4fe1\u606f\u5730\u96f7\u6570\u636e\n\u65b0\u589e\u6caa\u6df1300\u6307\u6570\u6210\u80a1\u4efd\u53ca\u52a8\u6001\u6743\u91cd\u3001\n\u65b0\u589e\u4e0a\u8bc150\u6307\u6570\u6210\u4efd\u80a1\n\u4fee\u6539\u5386\u53f2\u884c\u60c5\u6570\u636e\u7c7b\u578b\u4e3afloat\n\n0.1.9 2015\/02\/06\n\n\u589e\u52a0\u5206\u7c7b\u6570\u636e\n\u589e\u52a0\u6570\u636e\u5b58\u50a8\u793a\u4f8b\n\n0.1.6 2015\/01\/27\n\n\u589e\u52a0\u4e86\u91cd\u70b9\u6307\u6570\u7684\u5386\u53f2\u548c\u5b9e\u65f6\u884c\u60c5\n\u66f4\u65b0docs\n\n0.1.5 2015\/01\/26\n\n\u589e\u52a0\u57fa\u672c\u9762\u6570\u636e\u63a5\u53e3\n\u53d1\u5e03\u4e00\u7248\u4f7f\u7528\u624b\u518c\uff0c\u5f00\u901aTuShare docs\u7f51\u7ad9\n\n0.1.3 2015\/01\/13\n\n\u589e\u52a0\u5b9e\u65f6\u4ea4\u6613\u6570\u636e\u7684\u83b7\u53d6\nDone for crawling Realtime Quotes data\n\n0.1.1 2015\/01\/11\n\n\u589e\u52a0tick\u6570\u636e\u7684\u83b7\u53d6\n\n0.1.0 2014\/12\/01\n\n\u521b\u5efa\u7b2c\u4e00\u4e2a\u7248\u672c\n\u5b9e\u73b0\u4e2a\u80a1\u5386\u53f2\u6570\u636e\u7684\u83b7\u53d6\n\n","191":"\n\n\npyecharts\n\nPython \u2764\ufe0f ECharts = pyecharts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnglish README\n\ud83d\udce3 \u7b80\u4ecb\nApache ECharts (incubating) \u662f\u4e00\u4e2a\u7531\u767e\u5ea6\u5f00\u6e90\u7684\u6570\u636e\u53ef\u89c6\u5316\uff0c\u51ed\u501f\u7740\u826f\u597d\u7684\u4ea4\u4e92\u6027\uff0c\u7cbe\u5de7\u7684\u56fe\u8868\u8bbe\u8ba1\uff0c\u5f97\u5230\u4e86\u4f17\u591a\u5f00\u53d1\u8005\u7684\u8ba4\u53ef\u3002\u800c Python \u662f\u4e00\u95e8\u5bcc\u6709\u8868\u8fbe\u529b\u7684\u8bed\u8a00\uff0c\u5f88\u9002\u5408\u7528\u4e8e\u6570\u636e\u5904\u7406\u3002\u5f53\u6570\u636e\u5206\u6790\u9047\u4e0a\u6570\u636e\u53ef\u89c6\u5316\u65f6\uff0cpyecharts \u8bde\u751f\u4e86\u3002\n\u2728 \u7279\u6027\n\n\u7b80\u6d01\u7684 API \u8bbe\u8ba1\uff0c\u4f7f\u7528\u5982\u4e1d\u6ed1\u822c\u6d41\u7545\uff0c\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n\u56ca\u62ec\u4e86 30+ \u79cd\u5e38\u89c1\u56fe\u8868\uff0c\u5e94\u6709\u5c3d\u6709\n\u652f\u6301\u4e3b\u6d41 Notebook \u73af\u5883\uff0cJupyter Notebook \u548c JupyterLab\n\u53ef\u8f7b\u677e\u96c6\u6210\u81f3 Flask\uff0cSanic\uff0cDjango \u7b49\u4e3b\u6d41 Web \u6846\u67b6\n\u9ad8\u5ea6\u7075\u6d3b\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u8f7b\u677e\u642d\u914d\u51fa\u7cbe\u7f8e\u7684\u56fe\u8868\n\u8be6\u7ec6\u7684\u6587\u6863\u548c\u793a\u4f8b\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u66f4\u5feb\u7684\u4e0a\u624b\u9879\u76ee\n\u591a\u8fbe 400+ \u5730\u56fe\u6587\u4ef6\uff0c\u5e76\u4e14\u652f\u6301\u539f\u751f\u767e\u5ea6\u5730\u56fe\uff0c\u4e3a\u5730\u7406\u6570\u636e\u53ef\u89c6\u5316\u63d0\u4f9b\u5f3a\u6709\u529b\u7684\u652f\u6301\n\n\u23f3 \u7248\u672c\nv0.5.x \u548c V1 \u95f4\u4e0d\u517c\u5bb9\uff0cV1 \u662f\u4e00\u4e2a\u5168\u65b0\u7684\u7248\u672c\uff0c\u8be6\u89c1 ISSUE#892\uff0cISSUE#1033\u3002\nV0.5.x\n\n\u652f\u6301 Python2.7\uff0c3.4+\n\n\u7ecf\u5f00\u53d1\u56e2\u961f\u51b3\u5b9a\uff0c0.5.x \u7248\u672c\u5c06\u4e0d\u518d\u8fdb\u884c\u7ef4\u62a4\uff0c0.5.x \u7248\u672c\u4ee3\u7801\u4f4d\u4e8e 05x \u5206\u652f\uff0c\u6587\u6863\u4f4d\u4e8e 05x-docs.pyecharts.org\u3002\nV1\n\n\u4ec5\u652f\u6301 Python3.6+\n\n\u65b0\u7248\u672c\u7cfb\u5217\u5c06\u4ece v1.0.0 \u5f00\u59cb\uff0c\u6587\u6863\u4f4d\u4e8e pyecharts.org\uff1b\u793a\u4f8b\u4f4d\u4e8e gallery.pyecharts.org\n\ud83d\udd30 \u5b89\u88c5\npip \u5b89\u88c5\n# \u5b89\u88c5 v1 \u4ee5\u4e0a\u7248\u672c\n$ pip install pyecharts -U\n\n# \u5982\u679c\u9700\u8981\u5b89\u88c5 0.5.11 \u7248\u672c\u7684\u5f00\u53d1\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528\n# pip install pyecharts==0.5.11\n\u6e90\u7801\u5b89\u88c5\n# \u5b89\u88c5 v1 \u4ee5\u4e0a\u7248\u672c\n$ git clone https:\/\/github.com\/pyecharts\/pyecharts.git\n# \u5982\u679c\u9700\u8981\u5b89\u88c5 0.5.11 \u7248\u672c\uff0c\u8bf7\u4f7f\u7528 git clone https:\/\/github.com\/pyecharts\/pyecharts.git -b v05x\n$ cd pyecharts\n$ pip install -r requirements.txt\n$ python setup.py install\n\ud83d\udcdd \u4f7f\u7528\n\u672c\u5730\u73af\u5883\n\u751f\u6210 HTML\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\n# V1 \u7248\u672c\u5f00\u59cb\u652f\u6301\u94fe\u5f0f\u8c03\u7528\nbar = (\n    Bar()\n    .add_xaxis([\"\u886c\u886b\", \"\u6bdb\u8863\", \"\u9886\u5e26\", \"\u88e4\u5b50\", \"\u98ce\u8863\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\n    .add_yaxis(\"\u5546\u5bb6A\", [114, 55, 27, 101, 125, 27, 105])\n    .add_yaxis(\"\u5546\u5bb6B\", [57, 134, 137, 129, 145, 60, 49])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u67d0\u5546\u573a\u9500\u552e\u60c5\u51b5\"))\n)\nbar.render()\n\n# \u4e0d\u4e60\u60ef\u94fe\u5f0f\u8c03\u7528\u7684\u5f00\u53d1\u8005\u4f9d\u65e7\u53ef\u4ee5\u5355\u72ec\u8c03\u7528\u65b9\u6cd5\nbar = Bar()\nbar.add_xaxis([\"\u886c\u886b\", \"\u6bdb\u8863\", \"\u9886\u5e26\", \"\u88e4\u5b50\", \"\u98ce\u8863\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\nbar.add_yaxis(\"\u5546\u5bb6A\", [114, 55, 27, 101, 125, 27, 105])\nbar.add_yaxis(\"\u5546\u5bb6B\", [57, 134, 137, 129, 145, 60, 49])\nbar.set_global_opts(title_opts=opts.TitleOpts(title=\"\u67d0\u5546\u573a\u9500\u552e\u60c5\u51b5\"))\nbar.render()\n\n\n\n\u751f\u6210\u56fe\u7247\nfrom snapshot_selenium import snapshot as driver\n\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.render import make_snapshot\n\n\ndef bar_chart() -> Bar:\n    c = (\n        Bar()\n        .add_xaxis([\"\u886c\u886b\", \"\u6bdb\u8863\", \"\u9886\u5e26\", \"\u88e4\u5b50\", \"\u98ce\u8863\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\n        .add_yaxis(\"\u5546\u5bb6A\", [114, 55, 27, 101, 125, 27, 105])\n        .add_yaxis(\"\u5546\u5bb6B\", [57, 134, 137, 129, 145, 60, 49])\n        .reversal_axis()\n        .set_series_opts(label_opts=opts.LabelOpts(position=\"right\"))\n        .set_global_opts(title_opts=opts.TitleOpts(title=\"Bar-\u6d4b\u8bd5\u6e32\u67d3\u56fe\u7247\"))\n    )\n    return c\n\n# \u9700\u8981\u5b89\u88c5 snapshot-selenium \u6216\u8005 snapshot-phantomjs\nmake_snapshot(driver, bar_chart().render(), \"bar.png\")\n\n\n\nNotebook \u73af\u5883\nJupyter Notebook\n\nJupyterLab\n\nWeb \u6846\u67b6\n\n\ud83d\udd16 Demo\n\nDemo \u4ee3\u7801\u4f4d\u4e8e example \u6587\u4ef6\u5939\u4e0b\uff0c\u6b22\u8fce\u53c2\u8003 pyecharts \u753b\u5eca pyecharts-gallery\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u66f4\u591a\u8be6\u7ec6\u6587\u6863\uff0c\u8bf7\u8bbf\u95ee\n\n\u4e2d\u6587\u6587\u6863\nEnglish Documentation\n\u793a\u4f8b Example\n\n\u26cf \u4ee3\u7801\u8d28\u91cf\n\u5355\u5143\u6d4b\u8bd5\n$ pip install -r test\/requirements.txt\n$ make\n\u96c6\u6210\u6d4b\u8bd5\n\u4f7f\u7528 Travis CI \u548c AppVeyor \u6301\u7eed\u96c6\u6210\u73af\u5883\u3002\n\u4ee3\u7801\u89c4\u8303\n\u4f7f\u7528 flake8, Codecov \u4ee5\u53ca pylint \u63d0\u5347\u4ee3\u7801\u8d28\u91cf\u3002\n\ud83d\ude09 Author\npyecharts \u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4f4d\u5f00\u53d1\u8005\u5f00\u53d1\u7ef4\u62a4\n\n@chenjiandongx\n@chfw\n@kinegratii\n@sunhailin-Leo\n\n\u66f4\u591a\u8d21\u732e\u8005\u4fe1\u606f\u53ef\u4ee5\u8bbf\u95ee pyecharts\/graphs\/contributors\n\ud83d\udc8c \u6350\u8d60\n\u5f00\u53d1\u548c\u7ef4\u62a4 pyecharts \u82b1\u8d39\u4e86\u6211\u5de8\u5927\u7684\u5fc3\u529b\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u9879\u76ee\u5e2e\u52a9\u5230\u60a8\uff0c\u8bf7\u8ba4\u771f\u8003\u8651\u8bf7\u4f5c\u8005\u559d\u4e00\u676f\u5496\u5561 \ud83d\ude04\n\n\n\n\u5fae\u4fe1\u4e8c\u7ef4\u7801\n\u652f\u4ed8\u5b9d\u4e8c\u7ef4\u7801\n\n\n\n\n\n\n\n\n\n\u5982\u679c\u5176\u4ed6\u5f00\u53d1\u8005\u5e2e\u52a9\u5230\u4e86\u60a8\uff0c\u4e5f\u53ef\u4ee5\u8bf7\u4ed6\u4eec\u559d\u5496\u5561 \u6350\u8d60\u901a\u9053\n\ud83d\udca1 \u8d21\u732e\n\u671f\u5f85\u80fd\u6709\u66f4\u591a\u7684\u5f00\u53d1\u8005\u53c2\u4e0e\u5230 pyecharts \u7684\u5f00\u53d1\u4e2d\u6765\uff0c\u6211\u4eec\u4f1a\u4fdd\u8bc1\u5c3d\u5feb Reivew PR \u5e76\u4e14\u53ca\u65f6\u56de\u590d\u3002\u4f46\u63d0\u4ea4 PR \u8bf7\u786e\u4fdd\n\n\u901a\u8fc7\u6240\u6709\u5355\u5143\u6d4b\u8bd5\uff0c\u5982\u82e5\u662f\u65b0\u529f\u80fd\uff0c\u8bf7\u4e3a\u5176\u65b0\u589e\u5355\u5143\u6d4b\u8bd5\n\u9075\u5b88\u5f00\u53d1\u89c4\u8303\uff0c\u4f7f\u7528 black \u4ee5\u53ca isort \u683c\u5f0f\u5316\u4ee3\u7801\uff08$ pip install -r requirements-dev.txt\uff09\n\u5982\u82e5\u9700\u8981\uff0c\u8bf7\u66f4\u65b0\u76f8\u5bf9\u5e94\u7684\u6587\u6863\n\n\u6211\u4eec\u4e5f\u975e\u5e38\u6b22\u8fce\u5f00\u53d1\u8005\u80fd\u4e3a pyecharts \u63d0\u4f9b\u66f4\u591a\u7684\u793a\u4f8b\uff0c\u5171\u540c\u6765\u5b8c\u5584\u6587\u6863\uff0c\u6587\u6863\u9879\u76ee\u4f4d\u4e8e pyecharts\/website\n\ud83d\udcc3 License\nMIT \u00a9chenjiandongx\n","192":"kitty - the fast, featureful, GPU based, terminal emulator\n\nSee https:\/\/sw.kovidgoyal.net\/kitty\/\n\n\n\n","193":"\nopenage: a volunteer project to create a free engine clone of the Genie Engine used by Age of Empires, Age of Empires II (HD) and Star Wars: Galactic Battlegrounds, comparable to projects like OpenMW, OpenRA,  OpenSAGE, OpenTTD and OpenRCT2. At the moment we focus our efforts on the integration of Age of Empires II, while being primarily aimed at POSIX platforms such as GNU\/Linux.\nopenage uses the original game assets (such as sounds and graphics), but (for obvious reasons) doesn't ship them.\nTo play, you require an original AoE II: TC or AoE II: HD installation\n(via Wine or Steam-Linux).\n\n\n\n\nContact\n\n\n\nContact\nWhere?\n\n\n\n\nIssue Tracker\nSFTtech\/openage\n\n\nDevelopment Blog\nblog.openage.dev\n\n\nForum\n \/r\/openage\n\n\nMatrix Chat\n#sfttech:matrix.org\n\n\nIRC Chat\nirc.freenode.net #sfttech\n\n\nMoney Sink\n\n\n\n\nTechnical foundation\n\n\n\nTechnology\nComponent\n\n\n\n\nC++17\nEngine core\n\n\nPython3\nScripting, media conversion, in-game console, code generation\n\n\nQt5\nGraphical user interface\n\n\nCython\nGlue code\n\n\nCMake\nBuild system\n\n\nOpenGL3.3\nRendering, shaders\n\n\nSDL2\nCross-platform Audio\/Input\/Window handling\n\n\nOpus\nAudio codec\n\n\nnyan\nContent Configuration and Modding\n\n\nHumans\nMixing together all of the above\n\n\n\nGoals\n\nFully authentic look and feel\n\nThis can only be approximated, since the behaviour of the original game is mostly undocumented,\nand guessing\/experimenting can only get you this close\nWe will not implement useless artificial limitations (max 30 selectable units...)\n\n\nAn easily-moddable content format: nyan yet another notation\nAn integrated Python console and API, comparable to blender\nAI scripting in Python, you can use machine learning\n\nhere is some additional literature\n\n\nRe-creating free game assets\nMultiplayer (obviously)\nMatchmaking and ranking with a haskell masterserver\nOptionally, improvements over the original game\nAwesome infrastructure such as our own Kevin CI service\n\nBut beware, for sanity reasons:\n\nNo network compatibility with the original game.\nYou really wanna have the same problems again?\nNo binary compatibility with the original game.\nA one-way script to convert maps\/savegames\/missions to openage is planned though.\n\nCurrent State of the Project\nImportant notice: Gameplay is currently non-functional as the internal simulation is replaced by a more sophisticated implementation. You also might experience errors when running a build. Gameplay will return in a later update. Detailed explanations can be found in this blog post.\n\n\nWhat features are currently implemented?\n\nSee status page.\n\n\n\nWhat's the plan?\n\nSee doc\/milestones.md. We also have lists of crazy xor good ideas and a technical overview for requested features.\n\n\n\nInstallation Packages\nSupported Platforms: Linux, Windows 10, MacOS X 10.14\n\n\nFor Linux check at repology if your distribution has any packages available or here for any future updates on *.deb and AppImage packages.\n\n\nFor Windows check our release page for the latest installer or here for nightly builds.\n\n\nNOTE: If you have any problems starting conversion or starting openage take a look into the package instructions and our troubleshooting guide.\n\n\nNOTE: For MacOSX we currently don't have any packages.\n\n\n\n\nQuickstart\n\n\n\nOperating System\nBuild status\n\n\n\n\nDebian Sid\nTodo: Kevin #11\n\n\nmacOS\n\n\n\nWindows 10 - x64\n\n\n\n\n\n\nHow do I get this to run on my box?\n\nSee doc\/building.md.\n\n\n\nI compiled everything. Now how do I run it?\n\nExecute bin\/run.\nThe convert script will transform original assets into openage formats, which are a lot saner and more moddable.\nUse your brain and react to the things you'll see.\n\n\n\nWaaaaaah! It\n\nsegfaults\nprints error messages I don't want to read\nate my dog\n\n\n\nAll of those are features, not bugs.\nTo turn them off, use .\/run --dont-segfault --no-errors --dont-eat-dog.\nIf this still does not help, try our troubleshooting guide, the contact section\nor the bug tracker.\nContributing\nYou might ask yourself now \"Yeah, this sounds cool and all, but how do I participate\nand get famous contribute useful features?\".\nFortunately for you, there is a lot to do and we are very grateful for help.\nWhere do I start?\n\nThe engine has several core parts that need help.\nYou can look at the project related issues and find something for you, for example:\n\nAsset Converter: Converts whatever properietary format used by a Age of Empires 2 into\nopen formats. Written mostly in Python 3. There are a lot of TODOs and beginner issues available\nright now, so it's a good place to get your feet wet.\nGame simulation: Also known as the gameplay implementation. Written in C++, using the\nEntity-Component-System paradigm in addition to an event-driven simulation.\nDocumentation: We not only document code, but also anything technical about the Genie engine\nand its games. If you like documenting file formats\nor thouroughly investigating game mechanics,\nthen this might be the right place to start.\n\n\nCheck the issues labelled with good first issues. These are tasks that you can start right away\nand don't require much previous knowledge.\nAsk us in the chat. Someone there could need\nhelp with something.\nYou can also take the initiative and fix a bug you found, create an issue for discussion or\nimplement a feature that we never though of, but always wanted.\n\nOk, I found something. What now?\n\nTell us, if you haven't already. Chances are that we have additional information\nand directions.\nRead the docs. They will answer most \"administrative\"\nquestions like what code style is used and how the engine core parts are connected.\nRead the code and get familiar with the engine component you want to work with.\nDo not hesitate to ask us for help if you do not understand something.\n\nHow do I contribute my features\/changes?\n\nRead the contributing guide.\nYou can upload work in progress (WIP) revisions or drafts of your contribution to get feedback or support.\nTell us (again) when you want us to review your work.\n\nI want to help, but I'm not a programmer...\nThen openage might be a good reason to become one! We have many issues and tasks for beginners. You\njust have to ask and we'll find something. Alternatively, lurking is also allowed.\n\nCheers, happy hecking.\nDevelopment Process\nWhat does openage development look like in practice?\n\nextensive synchronization!\ndoc\/development.md.\n\nHow can I help?\n\ndoc\/contributing.md.\n\nAll documentation is also in this repo:\n\nCode documentation is embedded in the sources for Doxygen (see doc readme).\nHave a look at the doc directory. This folder tends to get outdated when code changes.\n\nLicense\nGNU GPLv3 or later; see copying.md and legal\/GPLv3.\nI know that probably nobody is ever gonna look at the copying.md file,\nbut if you want to contribute code to openage, please take the time to\nskim through it and add yourself to the authors list.\n","194":"Pelican  \n \n\nPelican is a static site generator, written in Python.\n\nWrite content in reStructuredText or Markdown using your editor of choice\nIncludes a simple command line tool to (re)generate site files\nEasy to interface with version control systems and web hooks\nCompletely static output is simple to host anywhere\n\n\nFeatures\nPelican currently supports:\n\nChronological content (e.g., articles, blog posts) as well as static pages\nIntegration with external services (e.g., Google Analytics and Disqus)\nSite themes (created using Jinja2 templates)\nPublication of articles in multiple languages\nGeneration of Atom and RSS feeds\nSyntax highlighting via Pygments\nImporting existing content from WordPress, Dotclear, and other services\nFast rebuild times due to content caching and selective output writing\n\nCheck out Pelican's documentation for further information.\n\nHow to get help, contribute, or provide feedback\nSee our contribution submission and feedback guidelines.\n\nSource code\nPelican's source code is hosted on GitHub. If you feel like hacking,\ntake a look at Pelican's internals.\n\nWhy the name \"Pelican\"?\n\"Pelican\" is an anagram of calepin, which means \"notebook\" in French.\n","195":"$ click_\nClick is a Python package for creating beautiful command line interfaces\nin a composable way with as little code as necessary. It's the \"Command\nLine Interface Creation Kit\". It's highly configurable but comes with\nsensible defaults out of the box.\nIt aims to make the process of writing command line tools quick and fun\nwhile also preventing any frustration caused by the inability to\nimplement an intended CLI API.\nClick in three points:\n\nArbitrary nesting of commands\nAutomatic help page generation\nSupports lazy loading of subcommands at runtime\n\n\nInstalling\nInstall and update using pip:\n$ pip install -U click\n\n\nA Simple Example\nimport click\n\n@click.command()\n@click.option(\"--count\", default=1, help=\"Number of greetings.\")\n@click.option(\"--name\", prompt=\"Your name\", help=\"The person to greet.\")\ndef hello(count, name):\n    \"\"\"Simple program that greets NAME for a total of COUNT times.\"\"\"\n    for _ in range(count):\n        click.echo(f\"Hello, {name}!\")\n\nif __name__ == '__main__':\n    hello()\n$ python hello.py --count=3\nYour name: Click\nHello, Click!\nHello, Click!\nHello, Click!\n\n\nDonate\nThe Pallets organization develops and supports Click and other popular\npackages. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, please\ndonate today.\n\nLinks\n\nWebsite: https:\/\/palletsprojects.com\/p\/click\/\nDocumentation: https:\/\/click.palletsprojects.com\/\nReleases: https:\/\/pypi.org\/project\/click\/\nCode: https:\/\/github.com\/pallets\/click\nIssue tracker: https:\/\/github.com\/pallets\/click\/issues\nTest status: https:\/\/dev.azure.com\/pallets\/click\/_build\nOfficial chat: https:\/\/discord.gg\/t6rrQZH\n\n","196":"\u6700\u5b8c\u5584\u7684 iOS \u7ffb\u5899\u89c4\u5219\n\u505c\u6b62\u66f4\u65b0\u516c\u544a\n\u7ef4\u62a4\u8be5\u9879\u76ee\u5df2\u82b1\u8d39\u4e86\u6211\u8fc7\u591a\u7684\u65f6\u95f4\uff0c\u800c\u751f\u6d3b\u4e2d\u503c\u5f97\u82b1\u8d39\u65f6\u95f4\u7684\u4e1c\u897f\u592a\u591a\uff0c\u6240\u4ee5\u4ece\u5373\u65e5\u8d77\u505c\u6b62\u66f4\u65b0\u8be5\u9879\u76ee\u3002\n\u8be5\u89c4\u5219\u76ee\u524d\u4f1a\u5b9a\u671f\u4ece\u4e0a\u6e38\uff08GFWList\u3001EasyList \u7b49\uff09\u83b7\u53d6\u66f4\u65b0\uff0c\u5e76\u7531\u673a\u5668\u4eba\u81ea\u52a8\u62fc\u88c5\u6784\u5efa\u65b0\u7248\u53d1\u5e03\u3002\u4f46\u624b\u52a8\u7f16\u5199\u7684\u90e8\u5206\u6211\u4e0d\u4f1a\u53bb\u66f4\u65b0\uff0c\u4ea6\u4e0d\u4f1a\u63a8\u51fa\u65b0\u7248\u89c4\u5219\u3002\n\n\u8fd9\u91cc\u662f\u4e00\u7cfb\u5217\u597d\u7528\u7684\u7ffb\u5899\u89c4\u5219\uff0c\u9488\u5bf9 Shadowrocket \u5f00\u53d1\uff0c\u652f\u6301\u5e7f\u544a\u8fc7\u6ee4\u3002\u89c4\u5219\u5b9a\u4e49\u4e86\u54ea\u4e9b\u7f51\u7ad9\u53ef\u4ee5\u76f4\u8fde\uff0c\u54ea\u4e9b\u5fc5\u987b\u8d70\u4ee3\u7406\uff0c\u89c4\u5219\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u65e0\u6cd5\u63d0\u4f9b\u7ffb\u5899\u529f\u80fd\u3002\u4f7f\u7528 Python \u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\u548c\u6a21\u677f\u5b9a\u671f\u81ea\u52a8\u751f\u6210\uff0c\u5e76\u4e14\u4f7f\u7528\u5f00\u6e90\u7684\u529b\u91cf\uff0c\u96c6\u4f17\u4eba\u4e4b\u529b\u9010\u6e10\u5b8c\u5584\u3002\n\u6b63\u5728\u4f7f\u7528\u624b\u673a\u6d4f\u89c8\u672c\u9875\u9762\u7684\u7528\u6237 \u8bf7\u70b9\u51fb\u8fd9\u91cc\uff0c\u67e5\u770b\u5b8c\u6574\u7684\u8bf4\u660e\u6587\u6863\u3002\n\u672c\u89c4\u5219\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a\n\n\u9ed1\u540d\u5355\u7531\u6700\u65b0\u7248 GFWList \u81ea\u52a8\u8f6c\u6362\uff1b\u767d\u540d\u5355\u9488\u5bf9\u5168\u7403 top500 \u7ad9\u70b9\u7684\u8fde\u901a\u60c5\u51b5\u5b9a\u671f\u81ea\u52a8\u751f\u6210\u3002\n\u81ea\u52a8\u8f6c\u6362\u6700\u65b0\u7248\u672c\u7684 EasyList, Eaylist China, \u4e58\u98ce\u89c4\u5219 \u4e3a SR \u89c4\u5219\uff0c\u5168\u9762\u53bb\u9664\u5e7f\u544a\u4e14\u53bb\u9664\u91cd\u590d\u3002\n\u4e5f\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u5e7f\u544a\u8fc7\u6ee4\u89c4\u5219\uff0c\u9488\u5bf9 iOS \u7aef\u7684\u7f51\u9875\u5e7f\u544a\u3001App \u5e7f\u544a\u548c\u89c6\u9891\u5e7f\u544a\u3002\uff08\u5e38\u89c1\u5e7f\u544a\u8fc7\u6ee4\u6548\u679c\u7edf\u8ba1\uff09\n\u63d0\u4f9b\u591a\u4e2a\u89c4\u5219\u6587\u4ef6\u8ba9\u5927\u5bb6\u81ea\u7531\u9009\u62e9\u6216\u8005\u81ea\u7531\u5207\u6362\u4f7f\u7528\u3002\n\u4e13\u95e8\u9488\u5bf9 ShadowRocket \u5f00\u53d1\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e0e SR \u7684\u517c\u5bb9\u6027\u3002\n\n\u89c4\u5219\u5217\u8868\n\n\n\n\n\u89c4\u5219\n\u89c4\u5b9a\u4ee3\u7406\u7684\u7f51\u7ad9\n\u89c4\u5b9a\u76f4\u8fde\u7684\u7f51\u7ad9\n\n\n\n\n\u9ed1\u540d\u5355\u89c4\u5219 + \u53bb\u5e7f\u544a\n\u88ab\u5899\u7684\u7f51\u7ad9\uff08GFWList\uff09\n\u6b63\u5e38\u7684\u7f51\u7ad9\n\n\n\u9ed1\u540d\u5355\u89c4\u5219\n\n\n\n\n\u767d\u540d\u5355\u89c4\u5219 + \u53bb\u5e7f\u544a\n\u5176\u4ed6\u7f51\u7ad9\ntop500 \u7f51\u7ad9\u4e2d\u53ef\u76f4\u8fde\u7684\u7f51\u7ad9\u3001\u4e2d\u56fd\u7f51\u7ad9\n\n\n\u767d\u540d\u5355\u89c4\u5219\n\n\n\n\n\u56fd\u5185\u5916\u5212\u5206 + \u53bb\u5e7f\u544a\n\u56fd\u5916\u7f51\u7ad9\n\u4e2d\u56fd\u7f51\u7ad9\n\n\n\u56fd\u5185\u5916\u5212\u5206\n\n\n\n\n\u5168\u5c40\u76f4\u8fde + \u53bb\u5e7f\u544a\n\/\n\u5168\u90e8\n\n\n\u5168\u5c40\u4ee3\u7406 + \u53bb\u5e7f\u544a\n\u5168\u90e8\n\/\n\n\n\u56de\u56fd\u89c4\u5219 + \u53bb\u5e7f\u544a\n\u4e2d\u56fd\u7f51\u7ad9\n\u56fd\u5916\u7f51\u7ad9\n\n\n\u56de\u56fd\u89c4\u5219\n\n\n\n\n\n\n\u4ee5\u4e0a\u6240\u6709\u89c4\u5219\uff0c\u5c40\u57df\u7f51\u5185\u8bf7\u6c42\u5747\u76f4\u8fde\u3002\n\u53ef\u4ee5\u4e0b\u8f7d\u591a\u4e2a\u89c4\u5219\u5207\u6362\u4f7f\u7528\u3002\n\n\u89c4\u5219\u4f7f\u7528\u65b9\u6cd5\n\u5728 ShadowRocket \u5e94\u7528\u4e2d\uff0c\u8fdb\u5165 [\u914d\u7f6e] \u9875\u9762\uff0c\u70b9\u51fb\u626b\u63cf\u4e8c\u7ef4\u7801\u7684\u6309\u94ae\u6dfb\u52a0\u89c4\u5219\u3002\u518d\u6fc0\u6d3b\u6dfb\u52a0\u7684\u89c4\u5219\u6587\u4ef6\u5373\u53ef\u3002\n\u6700\u597d\u8ba9 ShadowRocket \u65ad\u5f00\u5e76\u91cd\u65b0\u8fde\u63a5\u4e00\u6b21\uff0c\u4ee5\u786e\u4fdd\u65b0\u7684\u89c4\u5219\u6587\u4ef6\u751f\u6548\u3002\n\u8bf7\u4fdd\u62a4\u597d\u81ea\u5df1\n\u8c37\u6b4c\u4e2d\u82f1\u6587\u7684\u641c\u7d22\u4f53\u9a8c\u90fd\u4f18\u4e8e\u767e\u5ea6\uff0c\u800c\u5237\u7f8e\u5267\u3001ins \u8ffd\u661f\u3001\u53bb\u63a8\u7279\u770b\u770b\u7279\u6717\u666e\u4e5f\u90fd\u633a\u6709\u610f\u601d\u3002\u4f46\u662f\uff0c\u968f\u7740\u770b\u5230\u7684\u4eba\u548c\u4e8b\u8d8a\u591a\uff0c\u6211\u8d8a\u53d1\u60f3\u8981\u5728\u8fd9\u91cc\u8bf4\u4e00\u4e9b\u8bdd\uff0c\u544a\u8beb\u8def\u8fc7\u7684\u5404\u4f4d\uff1a\n\u8bf7\u52a1\u5fc5\u4fdd\u62a4\u597d\u81ea\u5df1 \u6211\u4eec\u81ea\u8ba4\u4e3a\u6253\u7834\u4e86\u4fe1\u606f\u7684\u58c1\u5792\uff0c\u5176\u5b9e\u6253\u7834\u7684\u662f\u4fdd\u62a4\u6211\u4eec\u7684\u5c4f\u969c\u3002\u56e0\u4e3a\u5916\u7f51\u771f\u7684\u5b58\u5728\u5f88\u591a\u8bef\u5bfc\u6027\u8a00\u8bba\uff0c\u6765\u81ea\u5404\u4e2a\u5229\u76ca\u96c6\u56e2\u5bf9\u4e2d\u56fd\u7f51\u6c11\u75af\u72c2\u6d17\u8111\uff0c\u4ed6\u4eec\u5f80\u5f80\u8fd8\u559c\u6b22\u4ee5\u5e73\u7b49\u81ea\u7531\u7b49\u65d7\u53f7\u81ea\u79f0\uff0c\u4f46\u4ed4\u7ec6\u60f3\u60f3\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f\u6211\u53ea\u77e5\u9053\u7f8e\u56fd\u662f\u6700\u5584\u4e8e\u8fd0\u7528\u8206\u8bba\u7684\u56fd\u5bb6\uff0c\u4f1a\u7ed3\u5408\u5927\u6570\u636e\u6f5c\u79fb\u9ed8\u5316\u5730\u6539\u53d8\u4f60\u7684\u89c2\u5ff5\u3002\u5982\u679c\u5927\u5bb6\u5728\u4e0a\u7f51\u8fc7\u7a0b\u4e2d\u4e0d\u7ecf\u610f\u770b\u5230\u4e86\u67d0\u4e9b\u89c2\u70b9\uff0c\u52a1\u5fc5\u4fdd\u7559\u81ea\u5df1\u72ec\u7acb\u601d\u8003\u7684\u80fd\u529b\uff0c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u5bb9\u6613\u88ab\u5e26\u504f\u7684\u4eba\uff0c\u5219\u5efa\u8bae\u56de\u5230\u5c4f\u969c\u4e4b\u4e2d\u3002\n\u672c\u89c4\u5219\u53ea\u63d0\u4f9b\u7ed9\u5927\u5bb6\u7528\u4e8e\u66f4\u4fbf\u6377\u5730\u5b66\u4e60\u548c\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u662f\u5bf9\u4e0a\u8ff0\u89c2\u70b9\u6301\u53cd\u5bf9\u610f\u89c1\u7684\u6781\u7aef\u653f\u6cbb\u4eba\u58eb\uff0c\u6216\u8005\u5df2\u88ab\u6d17\u8111\uff0c\u8bf7\u7acb\u5373\u79bb\u5f00\uff0c\u672c\u9879\u76ee\u4e0d\u5bf9\u4f60\u5f00\u653e\u3002\n\u4e00\u4e9b\u63a8\u8350\u7684\u7f51\u7ad9\n\u529f\u592b\u7ffb\u5899\u7f51 \ud83c\udf6d\n\u6211\u6700\u7ec8\u9009\u62e9\u7684\u8282\u70b9\u63d0\u4f9b\u5546\u3002\u7a33\u5b9a\u3001\u4ef7\u683c\u9002\u4e2d\u3002\u8282\u70b9\u904d\u5e03\u5168\u7403\uff0c\u5176\u4e2d\u9999\u6e2f\u8282\u70b9\u7684\u901f\u5ea6\u4ee4\u4eba\u6ee1\u610f\u3002\n\u6b22\u8fce\u5927\u5bb6\u901a\u8fc7\u6211\u7684\u9080\u8bf7\u94fe\u63a5\u524d\u53bb\u4f7f\u7528\u3002\nIP111\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684 IP \u67e5\u8be2\u7f51\u7ad9\uff0c\u652f\u6301\u540c\u65f6\u67e5\u8be2\u4f60\u7684\u5883\u5185\u5883\u5916 IP\uff0c\u4ee5\u53ca\u8c37\u6b4c IP\u3002\nwikiHow\n\u5982\u4f55\u5e2e\u52a9\u5fc3\u788e\u7684\u670b\u53cb\uff1f\u5982\u4f55\u7ed9\u540a\u6247\u52a0\u6cb9\uff1f\u4f60\u60f3\u77e5\u9053\u7684\u4e00\u5207\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u7b54\u6848\uff0c\u6700\u5173\u952e\u662f\u91c7\u7528\u6f2b\u753b\u7684\u65b9\u5f0f\u633a\u6709\u610f\u601d\u3002\nGoogle Photos\n\u8c37\u6b4c\u4e91\u76f8\u518c\u63d0\u4f9b\u65e0\u9650\u7a7a\u95f4\u4fdd\u5b58\u624b\u673a\u4e2d\u7684\u65e5\u5e38\u7167\u7247\uff0c\u5e76\u4e14\u4f1a\u5bf9\u7167\u7247\u667a\u80fd\u5206\u7c7b\uff0c\u4f53\u9a8c\u5f88\u597d\u3002\nhttps:\/\/hzy.pw\/\n\u6211\u662f\u4e00\u540d\u5927\u5b66\u751f\uff0c\u6c89\u8ff7\u6280\u672f\u65e0\u6cd5\u81ea\u62d4\u3002\u8fd9\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u4f1a\u5206\u4eab\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f\u548c\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u6b22\u8fce\u6765\u901b\u901b~\n\u5e38\u89c1\u95ee\u9898\n\n\u4e0a\u5343\u884c\u7684\u4ee3\u7406\u89c4\u5219\uff0c\u4f1a\u5bf9\u4e0a\u7f51\u901f\u5ea6\u4ea7\u751f\u5f71\u54cd\u5417\uff1f\n\n\n\u4e0d\u4f1a\u7684\u3002\n\u6211\u4e4b\u524d\u4e5f\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6bcf\u6b21\u7f51\u7edc\u6570\u636e\u5305\u7ecf\u8fc7\u90fd\u4f1a\u6267\u884c\u4e00\u6b21\u7684\u89c4\u5219\u6587\u4ef6\uff0c\u9010\u884c\u5339\u914d\u89c4\u5219\uff0c\u6240\u4ee5\u9700\u8981\u5c3d\u53ef\u80fd\u7cbe\u7b80\u3002\u4f46\u540e\u6765\u548c SR \u4f5c\u8005\u4ea4\u6d41\u540e\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u8bef\u533a\uff0cSR \u5728\u6bcf\u6b21\u52a0\u8f7d\u89c4\u5219\u65f6\u90fd\u4f1a\u751f\u6210\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e3b\u673a\u540d\u4ece\u540e\u5f80\u524d\u7684\u6709\u9650\u72b6\u6001\u673a DFA\uff0c\u5e76\u4e0d\u662f\u9010\u884c\u5339\u914d\uff0c\u5e76\u4e14\u5bf9\u6bcf\u6b21\u7684\u5339\u914d\u7ed3\u679c\u8fd8\u6709\u4e2a\u54c8\u5e0c\u7f13\u5b58\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c2000 \u884c\u7684\u89c4\u5219\u548c 50 \u884c\u7684\u89c4\u5219\u5728 SR \u4e2d\u5747\u4e3a\u540c\u4e00\u91cf\u7ea7\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\u3002\n\n\n\u4f60\u63d0\u4f9b\u4e86\u8fd9\u4e48\u591a\u89c4\u5219\uff0c\u5982\u4f55\u9009\u62e9\u9002\u5408\u6211\u7684\uff1f\n\n\n\u6700\u5e38\u7528\u7684\u89c4\u5219\u662f\u9ed1\u540d\u5355\u548c\u767d\u540d\u5355\u3002\u533a\u522b\u5728\u4e8e\u5bf9\u5f85 \u672a\u77e5\u7f51\u7ad9 \u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\uff0c\u9ed1\u540d\u5355\u9ed8\u8ba4\u76f4\u8fde\uff0c\u800c\u767d\u540d\u5355\u5219\u9ed8\u8ba4\u4f7f\u7528\u4ee3\u7406\u3002\u5982\u679c\u4f60\u9009\u62e9\u6050\u60e7\u75c7\u7206\u53d1\uff0c\u90a3\u5c31\u4e24\u4e2a\u90fd\u4e0b\u8f7d\u597d\u4e86\uff0c\u9ed1\u767d\u540d\u5355\u5207\u6362\u4f7f\u7528\uff0c\u5929\u4e0b\u65e0\u5fe7\u3002\n\n\n\u4f60\u63d0\u4f9b\u4e86\u8fd9\u4e48\u591a\u89c4\u5219\uff0c\u5374\u6ca1\u6709\u6211\u60f3\u8981\u7684 o(>.<)o\n\n\n\u6709\u4efb\u4f55\u5efa\u8bae\u6216\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb\u6211\u3002\n\n\n\u5e7f\u544a\u8fc7\u6ee4\u4e0d\u5b8c\u5168\uff1f\n\n\n\u8be5\u89c4\u5219\u5e76\u4e0d\u4fdd\u8bc1 100% \u8fc7\u6ee4\u6240\u6709\u7684\u5e7f\u544a\uff0c\u5c24\u5176\u662f\u89c6\u9891\u5e7f\u544a\uff0c\u4e0e\u7f51\u9875\u5e7f\u544a\u4e0d\u540c\u7684\u662f\uff0c\u4f18\u9177\u7b49 App \u6bcf\u6b21\u5347\u7ea7\u90fd\u6709\u53ef\u80fd\u66f4\u6362\u4e00\u6b21\u5e7f\u544a\u7b56\u7565\uff0c\u56e0\u6b64\u96be\u4ee5\u4fdd\u8bc1\u5176\u5e7f\u544a\u5c4f\u853d\u7684\u5b9e\u65f6\u6709\u6548\u6027\u3002\n\n\u95ee\u9898\u53cd\u9988\n\u4efb\u4f55\u95ee\u9898\u6b22\u8fce\u5728 Issues \u4e2d\u53cd\u9988\uff0c\u5982\u679c\u6ca1\u6709\u8d26\u53f7\u53ef\u4ee5\u53bb \u6211\u7684\u7f51\u7ad9 \u4e2d\u7559\u8a00\u3002\n\u4f60\u7684\u53cd\u9988\u4f1a\u8ba9\u6b64\u89c4\u5219\u53d8\u5f97\u66f4\u52a0\u5b8c\u7f8e\u3002\n\u5982\u4f55\u8d21\u732e\u4ee3\u7801\uff1f\n\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9 factory \u76ee\u5f55 \u4e0b\u7684 3 \u4e2a manual_*.txt \u6587\u4ef6\u505a\u5bf9\u5e94\u4fee\u6539\u5373\u53ef\u3002\n\u6350\u52a9\n\u672c\u9879\u76ee\u4e0d\u63a5\u53d7\u4efb\u4f55\u5f62\u5f0f\u7684\u6350\u52a9\uff0c\u56e0\u4e3a\u81ea\u7531\u5730\u4e0a\u7f51\u672c\u6765\u5c31\u662f\u5927\u5bb6\u7684\u6743\u5229\uff0c\u6ca1\u6709\u5fc5\u8981\u4e3a\u6b64\u4ed8\u51fa\u66f4\u591a\u7684\u4ee3\u4ef7\u3002\n\u4f46\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7ffb\u5899\u89c4\u5219\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u5bf9\u7f51\u7ad9\u6709\u6240\u9057\u6f0f\uff0c\u9700\u8981\u5927\u5bb6\u6765\u5171\u540c\u5b8c\u5584\uff0c\u5f53\u53d1\u73b0\u4e0d\u597d\u7528\u7684\u5730\u65b9\u65f6\uff0c\u8bf7\u6253\u5f00 SR \u7684\u65e5\u5fd7\u529f\u80fd\uff0c\u68c0\u67e5\u4e00\u4e0b\u662f\u54ea\u4e00\u4e2a\u88ab\u5899\u7684\u57df\u540d\u8d70\u4e86\u76f4\u8fde\uff0c\u6216\u8005\u662f\u54ea\u4e00\u4e2a\u53ef\u4ee5\u76f4\u8fde\u7684\u57df\u540d\u8d70\u4e86\u4ee3\u7406\u3002\n\u5c06\u9700\u8981\u4fee\u6539\u7684\u4fe1\u606f\u53cd\u9988\u7ed9\u6211\uff0c\u5927\u5bb6\u7684\u52aa\u529b\u4f1a\u8ba9\u8fd9\u4e2a\u89c4\u5219\u8d8a\u6765\u8d8a\u5b8c\u5584\uff01\n\n\u9ed1\u540d\u5355\u8fc7\u6ee4 + \u5e7f\u544a\n\u9ed1\u540d\u5355\u4e2d\u5305\u542b\u4e86\u5883\u5916\u7f51\u7ad9\u4e2d\u65e0\u6cd5\u8bbf\u95ee\u7684\u90a3\u4e9b\uff0c\u5bf9\u4e0d\u786e\u5b9a\u7684\u7f51\u7ad9\u5219\u9ed8\u8ba4\u76f4\u8fde\u3002\n\n\u4ee3\u7406\uff1a\u88ab\u5899\u7684\u7f51\u7ad9\uff08GFWList\uff09\n\u76f4\u8fde\uff1a\u6b63\u5e38\u7684\u7f51\u7ad9\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXs\n\n\u767d\u540d\u5355\u8fc7\u6ee4 + \u5e7f\u544a\n\u767d\u540d\u5355\u4e2d\u5305\u542b\u4e86\u5883\u5916\u7f51\u7ad9\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u7684\u90a3\u4e9b\uff0c\u5bf9\u4e0d\u786e\u5b9a\u7684\u7f51\u7ad9\u5219\u9ed8\u8ba4\u4ee3\u7406\u3002\n\n\u76f4\u8fde\uff1atop500 \u7f51\u7ad9\u4e2d\u53ef\u76f4\u8fde\u7684\u5883\u5916\u7f51\u7ad9\u3001\u4e2d\u56fd\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u9ed8\u8ba4\u4ee3\u7406\u5176\u4f59\u7684\u6240\u6709\u5883\u5916\u7f51\u7ad9\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXo\n\n\u9ed1\u540d\u5355\u8fc7\u6ee4\n\u73b0\u5728\u5f88\u591a\u6d4f\u89c8\u5668\u90fd\u81ea\u5e26\u4e86\u5e7f\u544a\u8fc7\u6ee4\u529f\u80fd\uff0c\u800c\u5e7f\u544a\u8fc7\u6ee4\u7684\u89c4\u5219\u5176\u5b9e\u8f83\u4e3a\u81c3\u80bf\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u5168\u5c40\u5730\u8fc7\u6ee4 App \u5185\u7f6e\u5e7f\u544a\u548c\u89c6\u9891\u5e7f\u544a\uff0c\u53ef\u4ee5\u9009\u62e9\u8fd9\u4e2a\u4e0d\u5e26\u5e7f\u544a\u8fc7\u6ee4\u7684\u7248\u672c\u3002\n\n\u4ee3\u7406\uff1a\u88ab\u5899\u7684\u7f51\u7ad9\uff08GFWList\uff09\n\u76f4\u8fde\uff1a\u6b63\u5e38\u7684\u7f51\u7ad9\n\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXS\n\n\u767d\u540d\u5355\u8fc7\u6ee4\n\u73b0\u5728\u5f88\u591a\u6d4f\u89c8\u5668\u90fd\u81ea\u5e26\u4e86\u5e7f\u544a\u8fc7\u6ee4\u529f\u80fd\uff0c\u800c\u5e7f\u544a\u8fc7\u6ee4\u7684\u89c4\u5219\u5176\u5b9e\u8f83\u4e3a\u81c3\u80bf\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u5168\u5c40\u5730\u8fc7\u6ee4 App \u5185\u7f6e\u5e7f\u544a\u548c\u89c6\u9891\u5e7f\u544a\uff0c\u53ef\u4ee5\u9009\u62e9\u8fd9\u4e2a\u4e0d\u5e26\u5e7f\u544a\u8fc7\u6ee4\u7684\u7248\u672c\u3002\n\n\u76f4\u8fde\uff1atop500 \u7f51\u7ad9\u4e2d\u53ef\u76f4\u8fde\u7684\u5883\u5916\u7f51\u7ad9\u3001\u4e2d\u56fd\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u9ed8\u8ba4\u4ee3\u7406\u5176\u4f59\u7684\u6240\u6709\u5883\u5916\u7f51\u7ad9\n\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfIXh\n\n\u56fd\u5185\u5916\u5212\u5206 + \u5e7f\u544a\n\u56fd\u5185\u5916\u5212\u5206\uff0c\u5bf9\u4e2d\u56fd\u7f51\u7ad9\u76f4\u8fde\uff0c\u5916\u56fd\u7f51\u7ad9\u4ee3\u7406\u3002\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\u3002\u56fd\u5916\u7f51\u7ad9\u603b\u662f\u8d70\u4ee3\u7406\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6e2f\u6fb3\u53f0\u7f51\u7ad9\uff0c\u901f\u5ea6\u53cd\u800c\u4f1a\u6bd4\u76f4\u8fde\u66f4\u5feb\u3002\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1k\n\n\u56fd\u5185\u5916\u5212\u5206\n\u56fd\u5185\u5916\u5212\u5206\uff0c\u5bf9\u4e2d\u56fd\u7f51\u7ad9\u76f4\u8fde\uff0c\u5916\u56fd\u7f51\u7ad9\u4ee3\u7406\u3002\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\u3002\u56fd\u5916\u7f51\u7ad9\u603b\u662f\u8d70\u4ee3\u7406\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6e2f\u6fb3\u53f0\u7f51\u7ad9\uff0c\u901f\u5ea6\u53cd\u800c\u4f1a\u6bd4\u76f4\u8fde\u66f4\u5feb\u3002\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1q\n\n\u76f4\u8fde\u53bb\u5e7f\u544a\n\u5982\u679c\u4f60\u60f3\u5c06 SR \u4f5c\u4e3a iOS \u5168\u5c40\u53bb\u5e7f\u544a\u5de5\u5177\uff0c\u8fd9\u4e2a\u89c4\u5219\u4f1a\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002\n\n\u76f4\u8fde\uff1a\u6240\u6709\u8bf7\u6c42\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1m\n\n\u4ee3\u7406\u53bb\u5e7f\u544a\n\u5982\u679c\u4f60\u60f3\u5c06 SR \u4f5c\u4e3a iOS \u5168\u5c40\u53bb\u5e7f\u544a + \u5168\u5c40\u7ffb\u5899\u5de5\u5177\uff0c\u8fd9\u4e2a\u89c4\u5219\u4f1a\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002\n\n\u76f4\u8fde\uff1a\u5c40\u57df\u7f51\u8bf7\u6c42\n\u4ee3\u7406\uff1a\u5176\u4f59\u6240\u6709\u8bf7\u6c42\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI13\n\n\u56de\u56fd\u89c4\u5219\n\u63d0\u4f9b\u7ed9\u6d77\u5916\u534e\u4fa8\u4f7f\u7528\uff0c\u53ef\u4ee5\u56de\u5230\u5899\u5185\uff0c\u4eab\u53d7\u56fd\u5185\u7684\u4e00\u4e9b\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\n\u76f4\u8fde\uff1a\u56fd\u5916\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u4e2d\u56fd\u7f51\u7ad9\n\u4e0d\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1s\n\n\u56de\u56fd\u89c4\u5219 + \u5e7f\u544a\n\u63d0\u4f9b\u7ed9\u6d77\u5916\u534e\u4fa8\u4f7f\u7528\uff0c\u53ef\u4ee5\u56de\u5230\u5899\u5185\uff0c\u4eab\u53d7\u56fd\u5185\u7684\u4e00\u4e9b\u4e92\u8054\u7f51\u670d\u52a1\u3002\n\n\u76f4\u8fde\uff1a\u56fd\u5916\u7f51\u7ad9\n\u4ee3\u7406\uff1a\u4e2d\u56fd\u7f51\u7ad9\n\u5305\u542b\u5e7f\u544a\u8fc7\u6ee4\n\n\u89c4\u5219\u5730\u5740\uff1ahttps:\/\/git.io\/JfI1Z\n\n","197":"\n\nIntroduction\nSovereign is a set of Ansible playbooks that you can use to build and maintain your own personal cloud based entirely on open source software, so you\u2019re in control.\nIf you\u2019ve never used Ansible before, you might find these playbooks useful to learn from, since they show off a fair bit of what the tool can do.\nThe original author's background and motivations might be of interest. tl;dr: frustrations with Google Apps and concerns about privacy and long-term support.\nSovereign offers useful cloud services while being reasonably secure and low-maintenance. Use it to set up your server, SSH in every couple weeks, but mostly forget about it.\nServices Provided\nWhat do you get if you point Sovereign at a server? All kinds of good stuff!\n\nIMAP over SSL via Dovecot, complete with full text search provided by Solr.\nPOP3 over SSL, also via Dovecot\nSMTP over SSL via Postfix, including a nice set of DNSBLs to discard spam before it ever hits your filters.\nVirtual domains for your email, backed by PostgreSQL.\nSpam fighting via Rspamd.\nMail server verification using DKIM and DMARC so the Internet knows your mailserver is legit.\nSecure on-disk storage for email and more via EncFS.\nWebmail via Roundcube.\nMobile push notifications via Z-Push.\nEmail client automatic configuration.\nJabber\/XMPP instant messaging via Prosody.\nAn RSS Reader via Selfoss.\nCalDAV and CardDAV to keep your calendars and contacts in sync, via ownCloud.\nYour own private storage cloud via ownCloud.\nYour own VPN server via OpenVPN.\nAn IRC bouncer via ZNC.\nMonit to keep everything running smoothly (and alert you when it\u2019s not).\ncollectd to collect system statistics.\nWeb hosting (ex: for your blog) via Apache.\nFirewall management via Uncomplicated Firewall (ufw).\nIntrusion prevention via fail2ban and rootkit detection via rkhunter.\nSSH configuration preventing root login and insecure password authentication\nRFC6238 two-factor authentication compatible with Google Authenticator and various hardware tokens\nNightly backups to Tarsnap.\nGit hosting via cgit and gitolite.\nRead-it-later via Wallabag\nA bunch of nice-to-have tools like mosh and htop that make life with a server a little easier.\n\nDon\u2019t want one or more of the above services? Comment out the relevant role in site.yml. Or get more granular and comment out the associated include: directive in one of the playbooks.\nUsage\nWhat You\u2019ll Need\n\nA VPS (or bare-metal server if you wanna ball hard). My VPS is hosted at Linode. You\u2019ll probably want at least 512 MB of RAM between Apache, Solr, and PostgreSQL. Mine has 1024.\n64-bit Debian 8.3 or an equivalent Linux distribution. (You can use whatever distro you want, but deviating from Debian will require more tweaks to the playbooks. See Ansible\u2019s different packaging modules.)\nA Tarsnap account with some credit in it. You could comment this out if you want to use a different backup service. Consider paying your hosting provider for backups or using an additional backup service for redundancy.\n\nYou do not need to acquire an SSL certificate.  The SSL certificates you need will be obtained from Let's Encrypt automatically when you deploy your server.\nInstallation\nOn the remote server\nThe following steps are done on the remote server by sshing into it and running these commands.\n1. Install required packages e.g aptitude is required on Debian\napt-get install sudo python\n\n2. Get a Tarsnap machine key\nIf you haven\u2019t already, download and install Tarsnap, or use brew install tarsnap if you use Homebrew.\nCreate a new machine key for your server:\ntarsnap-keygen --keyfile roles\/tarsnap\/files\/decrypted_tarsnap.key --user me@example.com --machine example.com\n\nDownload a copy of this key and keep it somewhere safe!  There's no point having backups if you can't retrieve them when needed.\n3. Prep the server\nFor goodness sake, change the root password:\npasswd\n\nCreate a user account for Ansible to do its thing through:\nuseradd deploy\npasswd deploy\nmkdir \/home\/deploy\n\nAuthorize your ssh key if you want passwordless ssh login (optional):\nmkdir \/home\/deploy\/.ssh\nchmod 700 \/home\/deploy\/.ssh\nnano \/home\/deploy\/.ssh\/authorized_keys\nchmod 400 \/home\/deploy\/.ssh\/authorized_keys\nchown deploy:deploy \/home\/deploy -R\necho 'deploy ALL=(ALL) NOPASSWD: ALL' > \/etc\/sudoers.d\/deploy\n\nYour new account will be automatically set up for passwordless sudo. Or you can just add your deploy user to the sudo group.\nadduser deploy sudo\n\nOn your local machine\nAnsible (the tool setting up your server) runs locally on your computer and sends commands to the remote server. Download this repository somewhere on your machine, either through Clone or Download > Download ZIP above, wget, or git as below\ngit clone https:\/\/github.com\/sovereign\/sovereign.git\n\n4. Configure your installation\nModify the settings in the group_vars\/sovereign folder to your liking. If you want to see how they\u2019re used in context, just search for the corresponding string.\nAll of the variables in group_vars\/sovereign must be set for sovereign to function.\nFor Git hosting, copy your public key into place:\ncp ~\/.ssh\/id_rsa.pub roles\/git\/files\/gitolite.pub\n\nFinally, replace the host.example.net in the file hosts. If your SSH daemon listens on a non-standard port, add a colon and the port number after the IP address. In that case you also need to add your custom port to the task Set firewall rules for web traffic and SSH in the file roles\/common\/tasks\/ufw.yml.\n5. Set up DNS\nIf you\u2019ve just bought a new domain name, point it at Linode\u2019s DNS Manager or similar. Most VPS services (and even some domain registrars) offer a managed DNS service that you can use for this at no charge. If you\u2019re using an existing domain that\u2019s already managed elsewhere, you can probably just modify a few records.\nCreate A or CNAME records which point to your server's IP address:\n\nexample.com\nmail.example.com\nwww.example.com (for Web hosting)\nautoconfig.example.com (for email client automatic configuration)\nread.example.com (for Wallabag)\nnews.example.com (for Selfoss)\ncloud.example.com (for ownCloud)\ngit.example.com (for cgit)\n\n6. Run the Ansible Playbooks\nFirst, make sure you\u2019ve got Ansible 1.9.3+ installed.\nTo run the whole dang thing:\nansible-playbook -i .\/hosts --ask-sudo-pass site.yml\n\nIf you chose to make a passwordless sudo deploy user, you can omit the --ask-sudo-pass argument.\nTo run just one or more piece, use tags. I try to tag all my includes for easy isolated development. For example, to focus in on your firewall setup:\nansible-playbook -i .\/hosts --tags=ufw site.yml\n\nYou might find that it fails at one point or another. This is probably because something needs to be done manually, usually because there\u2019s no good way of automating it. Fortunately, all the tasks are clearly named so you should be able to find out where it stopped. I\u2019ve tried to add comments where manual intervention is necessary.\nThe dependencies tag just installs dependencies, performing no other operations. The tasks associated with the dependencies tag do not rely on the user-provided settings that live in group_vars\/sovereign. Running the playbook with the dependencies tag is particularly convenient for working with Docker images.\n7. Finish DNS set-up\nCreate an MX record for example.com which assigns mail.example.com as the domain\u2019s mail server.\nTo ensure your emails pass DKIM checks you need to add a txt record. The name field will be default._domainkey.EXAMPLE.COM. The value field contains the public key used by DKIM. The exact value needed can be found in the file \/var\/lib\/rspamd\/dkim\/EXAMPLE.COM.default.txt. It will look something like this:\nv=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDKKAQfMwKVx+oJripQI+Ag4uTwYnsXKjgBGtl7Tk6UMTUwhMqnitqbR\/ZQEZjcNolTkNDtyKZY2Z6LqvM4KsrITpiMbkV1eX6GKczT8Lws5KXn+6BHCKULGdireTAUr3Id7mtjLrbi\/E3248Pq0Zs39hkDxsDcve12WccjafJVwIDAQAB\n\nFor DMARC you'll also need to add a txt record. The name field should be _dmarc.EXAMPLE.COM and the value should be v=DMARC1; p=none. More info on DMARC can be found here.\nSet up SPF and reverse DNS as per this post. Make sure to validate that it\u2019s all working, for example, by sending an email to check-auth@verifier.port25.com and reviewing the report that will be emailed back to you.\n8. Miscellaneous Configuration\nSign in to the ZNC web interface and set things up to your liking. It isn\u2019t exposed through the firewall, so you must first set up an SSH tunnel:\nssh deploy@example.com -L 6643:localhost:6643\n\nThen proceed to http:\/\/localhost:6643 in your web browser.\nSimilarly, to access the server monitoring page, use another SSH tunnel:\nssh deploy@example.com -L 2812:localhost:2812\n\nAgain proceeding to http:\/\/localhost:2812 in your web browser.\nFinally, sign into ownCloud with a new administrator account to set it\nup. You should select PostgreSQL as the configuration backend. Use\nowncloud as the database user and the database name. For the\ndatabase password ansible has created a set of random passwords for\neach service and stores them in your local folder secret, use the\none in the file owncloud_db_password.\nHow To Use Your New Personal Cloud\nWe\u2019re collecting known-good client setups on our wiki.\nTroubleshooting\nIf you run into an errors, please check the wiki page. If the problem you encountered, is not listed, please go ahead and create an issue. If you already have a bugfix and\/or workaround, just put them in the issue and the wiki page.\nReboots\nYou will need to manually enter the password for any encrypted volumes on reboot. This is not Sovereign-specific, but rather a function of how EncFS works. This will necessitate SSHing into your machine after reboot, or accessing it via a console interface if one is available to you. Once you're in, run this:\nencfs \/encrypted \/decrypted --public\n\nIt is possible that some daemons may need to be restarted after you enter your password for the encrypted volume(s). Some services may stall out while looking for resources that will only be available once the \/decrypted volume is available and visible to daemon user accounts.\nIRC\nAsk questions and provide feedback in #sovereign on Freenode.\n","198":"Note\nThis README.md documents the process of creating a Virtual Hackintosh\nsystem.\nNote: All blobs and resources included in this repository are re-derivable (all\ninstructions are included!).\n\ud83d\udc9a Looking for commercial support with this stuff? I am available\nover email for a chat for commercial support options only.\nLooking for Big Sur support? See these notes.\nWorking with Proxmox and macOS? See Nick's blog for sure.\nYes, we support offline macOS installations now \ud83c\udf89\nContributing Back\nThis project can always use your help, time and attention. I am looking for\nhelp (pull-requests!) with the following work items:\n\n\nCreate full installation (ISO) image without requiring an existing macOS\nphysical\/virtual installation.\n\n\nDocumentation around running macOS on popular cloud providers (Hetzner, GCP,\nAWS). See the Is This Legal? section and associated references.\n\n\nTest accel=hvf flag on QEMU + macOS Mojave on MacBook Pro.\n\n\nDocument (share) how you use this project to build + test open-source\nprojects \/ get your stuff done.\n\n\nDocument how to use this project for iOS development.\n\n\nDocument how to use this project for XNU kernel debugging and development.\n\n\nDocument the process to create and reuse VM snapshots. Instantaneous macOS\nboots would be nice this way.\n\n\nDocument the process to launch a bunch of headless macOS VMs (build farm).\n\n\nDocument usage of munki to deploy software\nto such a build farm.\n\n\nEnable VNC + SSH support out of the box or more easily.\n\n\nBetter support + docs for AMD Ryzen.\n\n\nRobustness improvements are always welcome!\n\n\n(Not so) crazy idea - automate the macOS installation via OpenCV.\n\n\nRequirements\n\n\nA modern Linux distribution. E.g. Ubuntu 20.04 LTS 64-bit or later.\n\n\nQEMU >= 4.2.0\n\n\nA CPU with Intel VT-x \/ AMD SVM support is required\n\n\nA CPU with SSE4.1 support is required for >= macOS Sierra\n\n\nA CPU with AVX2 support is required for >= macOS Mojave\n\n\nNote: Older AMD CPU(s) are known to be problematic. AMD FX-8350 works but\nPhenom II X3 720 does not. Ryzen processors work just fine.\nInstallation Preparation\n\n\nKVM may need the following tweak on the host machine to work.\n$ echo 1 | sudo tee \/sys\/module\/kvm\/parameters\/ignore_msrs\n\nTo make this change permanent, you may use the following command.\n$ sudo cp kvm.conf \/etc\/modprobe.d\/kvm.conf\n\n\n\nInstall QEMU and other packages.\nsudo apt-get install qemu uml-utilities virt-manager git wget libguestfs-tools -y\n\nThis step may need to be adapted for your Linux distribution.\n\n\nClone this repository on your QEMU system. Files from this repository are\nused in the following steps.\ncd ~\n\ngit clone --depth 1 https:\/\/github.com\/kholia\/OSX-KVM.git\n\ncd OSX-KVM\n\n\n\nFetch macOS installer.\n.\/fetch-macOS.py\n\nYou can choose your desired macOS version here. After executing this step,\nyou should have the BaseSystem.dmg file in the current folder.\nSample run:\n$ .\/fetch-macOS.py\n #    ProductID    Version   Post Date  Title\n 1    061-26578    10.14.5  2019-10-14  macOS Mojave\n 2    061-26589    10.14.6  2019-10-14  macOS Mojave\n 3    041-91758    10.13.6  2019-10-19  macOS High Sierra\n 4    041-88800    10.14.4  2019-10-23  macOS Mojave\n 5    041-90855    10.13.5  2019-10-23  Install macOS High Sierra Beta\n 6    061-86291    10.15.3  2020-03-23  macOS Catalina\n 7    001-04366    10.15.4  2020-05-04  macOS Catalina\n 8    001-15219    10.15.5  2020-06-15  macOS Catalina\n 9    001-36735    10.15.6  2020-08-06  macOS Catalina\n10    001-36801    10.15.6  2020-08-12  macOS Catalina\n11    001-51042    10.15.7  2020-09-24  macOS Catalina\n12    001-57224    10.15.7  2020-10-27  macOS Catalina\n13    001-68446    10.15.7  2020-11-11  macOS Catalina\n14    001-79699     11.0.1  2020-11-12  macOS Big Sur\n\nChoose a product to download (1-14): 14\n\nAttention: Modern NVIDIA GPUs are supported on HighSierra but not on later\nversions (yet).\nNext, convert this file into a usable format.\nqemu-img convert BaseSystem.dmg -O raw BaseSystem.img\n\n\n\nCreate a virtual HDD image where macOS will be installed. If you change the\nname of the disk image from mac_hdd.img to something else, the boot scripts\nwill need to be updated to point to the new image name.\nqemu-img create -f qcow2 mac_hdd_ng.img 128G\n\nNOTE: Create this HDD image file on a fast SSD\/NVMe disk for best results.\n\n\nNow you are ready to install macOS \ud83d\ude80\n\n\nInstallation\n\n\nCLI method (primary). Just run the OpenCore-Boot.sh script to start the\ninstallation process.\n.\/OpenCore-Boot.sh\n\nNote: This same script works for Big Sur, Catalina, Mojave, and High Sierra.\nIf you are new to installing macOS, see the older README for\nhelp.\n\n\nYou are all set! \ud83d\ude4c\n\n\n(OPTIONAL) Use this macOS VM disk with libvirt (virt-manager \/ virsh stuff).\n\n\nEdit macOS-libvirt-Catalina.xml file and change the various file paths (search\nfor CHANGEME strings in that file). The following command should do the\ntrick usually.\nsed -i \"s\/CHANGEME\/$USER\/g\" macOS-libvirt-Catalina.xml\n\nvirt-xml-validate macOS-libvirt-Catalina.xml\n\n\n\nCreate a VM by running the following command.\nvirsh --connect qemu:\/\/\/system define macOS-libvirt-Catalina.xml\n\n\nLaunch virt-manager and start the macOS virtual machine.\nNote: You may need to run sudo ip link delete tap0 command before\nvirt-manager is able to start the macOS VM.\n\n\n\n\nSetting Expectations Right\nNice job on setting up a Virtual Hackintosh system! Such a system can be used\nfor a variety of purposes (e.g. software builds, testing, reversing work), and\nit may be all you need, along with some tweaks documented in this repository.\nHowever, such a system lacks graphical acceleration, a reliable sound sub-system,\nUSB (3) functionality and other similar things. To enable these things, take a\nlook at our notes. We would like to resume our testing and\ndocumentation work around this area. Please reach out to us\nif you are able to fund this area of work.\nIt is possible to have 'beyond-native-apple-hw' performance but it does require\nwork, patience, and a bit of luck (perhaps?).\nPost-Installation\n\n\nSee networking notes to setup guest networking.\nI have the following commands present in \/etc\/rc.local.\n#!\/usr\/bin\/env bash\n\nsudo ip tuntap add dev tap0 mode tap\nsudo ip link set tap0 up promisc on\nsudo ip link set dev virbr0 up\nsudo ip link set dev tap0 master virbr0\n\nThis has been enough for me so far.\nNote: You may need to enable the rc.local functionality manually on modern Ubuntu versions.\n\n\nTo get sound on your virtual Mac, see the \"Virtual Sound Device\" in notes.\n\n\nTo passthrough GPUs and other devices, see these notes.\n\n\nNeed a different resolution? Check out the notes included in this repository.\n\n\nTo generate your own SMBIOS, use GenSMBIOS.\n\n\nIs This Legal?\nThe \"secret\" Apple OSK string is widely available on the Internet. It is also included in a public court document available here. I am not a lawyer but it seems that Apple's attempt(s) to get the OSK string treated as a trade secret did not work out. Due to these reasons, the OSK string is freely included in this repository.\nPlease review the 'Legality of Hackintoshing' documentation bits from Dortania's OpenCore Install Guide.\nGabriel Somlo also has some thoughts on the legal aspects involved in running macOS under QEMU\/KVM.\nMotivation\nMy aim is to enable macOS based educational tasks, builds + testing, kernel\ndebugging, reversing, and macOS security research in an easy, reproducible\nmanner without getting 'invested' in Apple's closed ecosystem (too heavily).\nThese Virtual Hackintosh systems are not intended to replace the genuine\nphysical macOS systems.\nPersonally speaking, this repository has been a way for me to 'exit' the Apple\necosystem. It has helped me to test and compare the interoperability of Canon CanoScan LiDE 120 scanner, and Brother HL-2250DN laser printer. And these\ndevices now work decently enough on modern versions of Ubuntu (Yay for free\nsoftware). Also, a long time back, I had to completely wipe my (then) brand new\nMacBook Pro (Retina, 15-inch, Late 2013) and install Xubuntu on it - as the\nOS X kernel kept crashing on it!\nBackstory: I was a (poor) student in Canada once and Apple made my work on cracking Apple Keychains a lot harder than it needed to be.\n","199":"\n\nstanford-tensorflow-tutorials\nThis repository contains code examples for the course CS 20: TensorFlow for Deep Learning Research. \nIt will be updated as the class progresses. \nDetailed syllabus and lecture notes can be found here.\nFor this course, I use python3.6 and TensorFlow 1.4.1.\nFor the code and notes of the previous year's course, please see the folder 2017 and the website https:\/\/web.stanford.edu\/class\/cs20si\/2017\nFor setup instruction and the list of dependencies, please see the setup folder of this repository.\n","200":"\n\n\n\n\n\n\n\nbeets\nBeets is the media library management system for obsessive music geeks.\nThe purpose of beets is to get your music collection right once and for all.\nIt catalogs your collection, automatically improving its metadata as it goes.\nIt then provides a bouquet of tools for manipulating and accessing your music.\nHere's an example of beets' brainy tag corrector doing its thing:\n$ beet import ~\/music\/ladytron\nTagging:\n    Ladytron - Witching Hour\n(Similarity: 98.4%)\n * Last One Standing      -> The Last One Standing\n * Beauty                 -> Beauty*2\n * White Light Generation -> Whitelightgenerator\n * All the Way            -> All the Way...\n\nBecause beets is designed as a library, it can do almost anything you can\nimagine for your music collection. Via plugins, beets becomes a panacea:\n\nFetch or calculate all the metadata you could possibly need: album art,\nlyrics, genres, tempos, ReplayGain levels, or acoustic\nfingerprints.\nGet metadata from MusicBrainz, Discogs, and Beatport. Or guess\nmetadata using songs' filenames or their acoustic fingerprints.\nTranscode audio to any format you like.\nCheck your library for duplicate tracks and albums or for albums that\nare missing tracks.\nClean up crufty tags left behind by other, less-awesome tools.\nEmbed and extract album art from files' metadata.\nBrowse your music library graphically through a Web browser and play it in any\nbrowser that supports HTML5 Audio.\nAnalyze music files' metadata from the command line.\nListen to your library with a music player that speaks the MPD protocol\nand works with a staggering variety of interfaces.\n\nIf beets doesn't do what you want yet, writing your own plugin is\nshockingly simple if you know a little Python.\n\nInstall\nYou can install beets by typing pip install beets.\nBeets has also been packaged in the software repositories of several distributions.\nCheck out the Getting Started guide for more information.\n\nContribute\nThank you for considering contributing to beets! Whether you're a programmer or not, you should be able to find all the info you need at CONTRIBUTING.rst.\n\nRead More\nLearn more about beets at its Web site. Follow @b33ts on Twitter for\nnews and updates.\n\nContact\n\nEncountered a bug you'd like to report or have an idea for a new feature? Check out our issue tracker! If your issue or feature hasn't already been reported, please open a new ticket and we'll be in touch with you shortly. If you'd like to vote on a feature\/bug, simply give a \ud83d\udc4d on issues you'd like to see prioritized over others.\nNeed help\/support, would like to start a discussion, or would just like to introduce yourself to the team? Check out our forums!\n\n\nAuthors\nBeets is by Adrian Sampson with a supporting cast of thousands.\n","201":"\n\n\n\n\nWagtail is an open source content management system built on Django, with a strong community and commercial support. It's focused on user experience, and offers precise control for designers and developers.\n\nFeatures\n\nA fast, attractive interface for authors\nComplete control over front-end design and structure\nScales to millions of pages and thousands of editors\nFast out of the box, cache-friendly when you need it\nContent API for 'headless' sites with de-coupled front-end\nRuns on a Raspberry Pi or a multi-datacenter cloud platform\nStreamField encourages flexible content without compromising structure\nPowerful, integrated search, using Elasticsearch or PostgreSQL\nExcellent support for images and embedded content\nMulti-site and multi-language ready\nEmbraces and extends Django\n\nFind out more at wagtail.io.\nGetting started\nWagtail works with Python 3, on any platform.\nTo get started with Wagtail, run the following in a virtual environment:\npip install wagtail\nwagtail start mysite\ncd mysite\npip install -r requirements.txt\npython manage.py migrate\npython manage.py createsuperuser\npython manage.py runserver\nFor detailed installation and setup docs, see docs.wagtail.io.\nWho\u2019s using it?\nWagtail is used by NASA, Google, Oxfam, the NHS, Mozilla, MIT, the Red Cross, Salesforce, NBC, BMW, and the US and UK governments. Add your own Wagtail site to madewithwagtail.org.\nDocumentation\ndocs.wagtail.io is the full reference for Wagtail, and includes guides for developers, designers and editors, alongside release notes and our roadmap.\nCompatibility\n(If you are reading this on GitHub, the details here may not be indicative of the current released version - please see Compatible Django \/ Python versions in the Wagtail documentation.)\nWagtail supports:\n\nDjango 2.2.x, 3.0.x and 3.1.x\nPython 3.6, 3.7, 3.8 and 3.9\nPostgreSQL, MySQL and SQLite as database backends\n\nPrevious versions of Wagtail additionally supported Python 2.7 and Django 1.x.\n\nCommunity Support\nThere is an active community of Wagtail users and developers responding to questions on Stack Overflow. When posting questions, please read Stack Overflow's advice on how to ask questions and remember to tag your question \"wagtail\".\nFor topics and discussions that do not fit Stack Overflow's question and answer format, we have a Slack workspace and a Wagtail Support mailing list. Please respect the time and effort of volunteers by not asking the same question in multiple places.\nWe maintain a curated list of third party packages, articles and other resources at Awesome Wagtail.\nCommercial Support\nWagtail is sponsored by Torchbox. If you need help implementing or hosting Wagtail, please contact us: hello@torchbox.com. See also madewithwagtail.org\/developers\/ for expert Wagtail developers around the world.\nSecurity\nWe take the security of Wagtail, and related packages we maintain, seriously. If you have found a security issue with any of our projects please email us at security@wagtail.io so we can work together to find and patch the issue. We appreciate responsible disclosure with any security related issues, so please contact us first before creating a Github issue.\nIf you want to send an encrypted email (optional), the public key ID for security@wagtail.io is 0x6ba1e1a86e0f8ce8, and this public key is available from most commonly-used keyservers.\nRelease schedule\nFeature releases of Wagtail are released every three months. Selected releases are designated as Long Term Support (LTS) releases, and will receive maintenance updates for an extended period to address any security and data-loss related issues. For dates of past and upcoming releases and support periods, see Release Schedule.\nNightly releases\nTo try out the latest features before a release, we also create builds from master every night. You can find instructions on how to install the latest nightly release at https:\/\/releases.wagtail.io\/nightly\/index.html\nContributing\nIf you're a Python or Django developer, fork the repo and get stuck in! We have several developer focused channels on the Slack workspace.\nYou might like to start by reviewing the contributing guidelines and checking issues with the good first issue label.\nWe also welcome translations for Wagtail's interface. Translation work should be submitted through Transifex.\nLicense\nBSD\nThanks\nWe thank the following organisations for their services used in Wagtail's development:\n\nBrowserStack provides the project with free access to their live web-based browser testing tool, and automated Selenium cloud testing.\n\nSquash provides the project with free test environments for reviewing pull requests.\n\n\n\n\n\n\n\n\n","202":"\n\nSaleor Commerce\n\n\nCustomer-centric e-commerce on a modern stack\n\n\n  A headless, GraphQL-first e-commerce platform delivering ultra-fast, dynamic, personalized shopping experiences. Beautiful online stores, anywhere, on any device.\n\n\n\n  Join our active, engaged community: \nWebsite\n | \nBlog\n | \nTwitter\n | \nGitter\n | \nSpectrum\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nWhat makes Saleor special?\nFeatures\nInstallation\nDocumentation\nDemo\nContributing\nTranslations\nYour feedback\nLicense\n\nWhat makes Saleor special?\nSaleor is a rapidly-growing open source e-commerce platform that has served high-volume companies from branches like publishing and apparel since 2012. Based on Python and Django, the latest major update introduces a modular front end powered by a GraphQL API and written with React and TypeScript.\nFeatures\n\nPWA: End users can shop offline for better sales and shopping experiences\nGraphQL API: Access all data from any web or mobile client using the latest technology\nHeadless commerce: Build mobile apps, customize storefronts and externalize processes\nUX and UI: Designed for a user experience that rivals even the top commercial platforms\nDashboard: Administrators have total control of users, processes, and products\nOrders: A comprehensive system for orders, dispatch, and refunds\nCart: Advanced payment and tax options, with full control over discounts and promotions\nPayments: Flexible API architecture allows integration of any payment method. It comes with Braintree support out of the box.\nGeo-adaptive: Automatic localized pricing. Over 20 local languages. Localized checkout experience by country.\nSEO: Packed with features that get stores to a wider audience\nCloud: Optimized for deployments using Docker\nAnalytics: Server-side Google Analytics to report e-commerce metrics without affecting privacy\n\nSaleor is free and always will be.\nHelp us out\u2026 If you love free stuff and great software, give us a star! \ud83c\udf1f\n\n\nInstallation\nSaleor requires Python 3.8, Node.js 10.0+, PostgreSQL and OS-specific dependency tools.\nSee the Saleor docs for step-by-step installation and deployment instructions.\nNote:\nThe master branch is the development version of Saleor and it may be unstable. To use the latest stable version, download it from the Releases page or switch to a release tag.\nThe current stable version is 2.11 and you should use this version for all three components:\n\nSaleor: https:\/\/github.com\/mirumee\/saleor\/releases\/tag\/2.11.1\nDashboard: https:\/\/github.com\/mirumee\/saleor-dashboard\/releases\/tag\/2.11.1\nStorefront: https:\/\/github.com\/mirumee\/saleor-storefront\/releases\/tag\/2.11.0\n\nDocumentation\nSaleor documentation is available here: docs.saleor.io\nTo contribute, please see the mirumee\/saleor-docs repository.\nSaleor Platform\nThe easiest way to run all components of Saleor (API, storefront and dashboard) together on your local machine is to use the saleor-platform project. Go to that repository for instructions on how to use it.\nView saleor-platform\nStorefront\nFor PWA, single-page storefront go to the saleor-storefront repository.\nView storefront demo\nDashboard\nFor dashboard go to the saleor-dashboard repository.\nView dashboard demo\nDemo\nWant to see Saleor in action?\nView Storefront | View Dashboard (admin area)\nOr launch the demo on a free Heroku instance.\n\nLogin credentials: admin@example.com\/admin\nContributing\nWe love your contributions and do our best to provide you with mentorship and support. If you are looking for an issue to tackle, take a look at issues labeled Help Wanted.\nIf nothing grabs your attention, check our roadmap or come up with your feature. Just drop us a line or open an issue and we\u2019ll work out how to handle it.\nGet more details in our Contributing Guide.\nLegacy views\nIf you're interested in using the old version of Saleor, go the legacy-views repository. It contains the 2.9.0 release, which includes Django-based views and HTML templates of Storefront 1.0 and Dashboard 1.0. Note: this version of Saleor is no longer officially maintained.\nYour feedback\nDo you use Saleor as an e-commerce platform?\nFill out this short survey and help us grow. It will take just a minute, but mean a lot!\nTake a survey\nLicense\nDisclaimer: Everything you see here is open and free to use as long as you comply with the license. There are no hidden charges. We promise to do our best to fix bugs and improve the code.\nSome situations do call for extra code; we can cover exotic use cases or build you a custom e-commerce appliance.\nCrafted with \u2764\ufe0f by Mirumee Software\nhello@mirumee.com\n","203":"Mail-in-a-Box\nBy @JoshData and contributors.\nMail-in-a-Box helps individuals take back control of their email by defining a one-click, easy-to-deploy SMTP+everything else server: a mail server in a box.\nPlease see https:\/\/mailinabox.email for the project's website and setup guide!\n\nOur goals are to:\n\nMake deploying a good mail server easy.\nPromote decentralization, innovation, and privacy on the web.\nHave automated, auditable, and idempotent configuration.\nNot make a totally unhackable, NSA-proof server.\nNot make something customizable by power users.\n\nAdditionally, this project has a Code of Conduct, which supersedes the goals above. Please review it when joining our community.\nIn The Box\nMail-in-a-Box turns a fresh Ubuntu 18.04 LTS 64-bit machine into a working mail server by installing and configuring various components.\nIt is a one-click email appliance. There are no user-configurable setup options. It \"just works.\"\nThe components installed are:\n\nSMTP (postfix), IMAP (Dovecot), CardDAV\/CalDAV (Nextcloud), and Exchange ActiveSync (z-push) servers\nWebmail (Roundcube), mail filter rules (thanks to Roundcube and Dovecot), and email client autoconfig settings (served by nginx)\nSpam filtering (spamassassin) and greylisting (postgrey)\nDNS (nsd4) with SPF, DKIM (OpenDKIM), DMARC, DNSSEC, DANE TLSA, MTA-STS, and SSHFP policy records automatically set\nTLS certificates are automatically provisioned using Let's Encrypt for protecting https and all of the other services on the box\nBackups (duplicity), firewall (ufw), intrusion protection (fail2ban), and basic system monitoring (munin)\n\nIt also includes system management tools:\n\nComprehensive health monitoring that checks each day that services are running, ports are open, TLS certificates are valid, and DNS records are correct\nA control panel for adding\/removing mail users, aliases, custom DNS records, configuring backups, etc.\nAn API for all of the actions on the control panel\n\nIt also supports static website hosting since the box is serving HTTPS anyway. (To serve a website for your domains elsewhere, just add a custom DNS \"A\" record in you Mail-in-a-Box's control panel to point domains to another server.)\nFor more information on how Mail-in-a-Box handles your privacy, see the security details page.\nInstallation\nSee the setup guide for detailed, user-friendly instructions.\nFor experts, start with a completely fresh (really, I mean it) Ubuntu 18.04 LTS 64-bit machine. On the machine...\nClone this repository:\n$ git clone https:\/\/github.com\/mail-in-a-box\/mailinabox\n$ cd mailinabox\n\nOptional: Download Josh's PGP key and then verify that the sources were signed\nby him:\n$ curl -s https:\/\/keybase.io\/joshdata\/key.asc | gpg --import\ngpg: key C10BDD81: public key \"Joshua Tauberer <jt@occams.info>\" imported\n\n$ git verify-tag v0.51\ngpg: Signature made ..... using RSA key ID C10BDD81\ngpg: Good signature from \"Joshua Tauberer <jt@occams.info>\"\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 5F4C 0E73 13CC D744 693B  2AEA B920 41F4 C10B DD81\n\nYou'll get a lot of warnings, but that's OK. Check that the primary key fingerprint matches the\nfingerprint in the key details at https:\/\/keybase.io\/joshdata\nand on his personal homepage. (Of course, if this repository has been compromised you can't trust these instructions.)\nCheckout the tag corresponding to the most recent release:\n$ git checkout v0.51\n\nBegin the installation.\n$ sudo setup\/start.sh\n\nFor help, DO NOT contact Josh directly --- I don't do tech support by email or tweet (no exceptions).\nPost your question on the discussion forum instead, where maintainers and Mail-in-a-Box users may be able to help you.\nNote that while we want everything to \"just work,\" we can't control the rest of the Internet. Other mail services might block or spam-filter email sent from your Mail-in-a-Box.\nThis is a challenge faced by everyone who runs their own mail server, with or without Mail-in-a-Box. See our discussion forum for tips about that.\nContributing and Development\nMail-in-a-Box is an open source project. Your contributions and pull requests are welcome. See CONTRIBUTING to get started.\nThe Acknowledgements\nThis project was inspired in part by the \"NSA-proof your email in 2 hours\" blog post by Drew Crawford, Sovereign by Alex Payne, and conversations with @shevski, @konklone, and @GregElin.\nMail-in-a-Box is similar to iRedMail and Modoboa.\nThe History\n\nIn 2007 I wrote a relatively popular Mozilla Thunderbird extension that added client-side SPF and DKIM checks to mail to warn users about possible phishing: add-on page, source.\nIn August 2013 I began Mail-in-a-Box by combining my own mail server configuration with the setup in \"NSA-proof your email in 2 hours\" and making the setup steps reproducible with bash scripts.\nMail-in-a-Box was a semifinalist in the 2014 Knight News Challenge, but it was not selected as a winner.\nMail-in-a-Box hit the front page of Hacker News in April 2014, September 2014, May 2015, and November 2016.\nFastCompany mentioned Mail-in-a-Box a roundup of privacy projects on June 26, 2015.\n\n","204":"Reinforcement Learning: An Introduction\n\nPython replication for Sutton & Barto's book Reinforcement Learning: An Introduction (2nd Edition)\n\nIf you have any confusion about the code or want to report a bug, please open an issue instead of emailing me directly, and unfortunately I do not have exercise answers for the book.\n\nContents\nChapter 1\n\nTic-Tac-Toe\n\nChapter 2\n\nFigure 2.1: An exemplary bandit problem from the 10-armed testbed\nFigure 2.2: Average performance of epsilon-greedy action-value methods on the 10-armed testbed\nFigure 2.3: Optimistic initial action-value estimates\nFigure 2.4: Average performance of UCB action selection on the 10-armed testbed\nFigure 2.5: Average performance of the gradient bandit algorithm\nFigure 2.6: A parameter study of the various bandit algorithms\n\nChapter 3\n\nFigure 3.2: Grid example with random policy\nFigure 3.5: Optimal solutions to the gridworld example\n\nChapter 4\n\nFigure 4.1: Convergence of iterative policy evaluation on a small gridworld\nFigure 4.2: Jack\u2019s car rental problem\nFigure 4.3: The solution to the gambler\u2019s problem\n\nChapter 5\n\nFigure 5.1: Approximate state-value functions for the blackjack policy\nFigure 5.2: The optimal policy and state-value function for blackjack found by Monte Carlo ES\nFigure 5.3: Weighted importance sampling\nFigure 5.4: Ordinary importance sampling with surprisingly unstable estimates\n\nChapter 6\n\nExample 6.2: Random walk\nFigure 6.2: Batch updating\nFigure 6.3: Sarsa applied to windy grid world\nFigure 6.4: The cliff-walking task\nFigure 6.6: Interim and asymptotic performance of TD control methods\nFigure 6.7: Comparison of Q-learning and Double Q-learning\n\nChapter 7\n\nFigure 7.2: Performance of n-step TD methods on 19-state random walk\n\nChapter 8\n\nFigure 8.2: Average learning curves for Dyna-Q agents varying in their number of planning steps\nFigure 8.4: Average performance of Dyna agents on a blocking task\nFigure 8.5: Average performance of Dyna agents on a shortcut task\nExample 8.4: Prioritized sweeping significantly shortens learning time on the Dyna maze task\nFigure 8.7: Comparison of efficiency of expected and sample updates\nFigure 8.8: Relative efficiency of different update distributions\n\nChapter 9\n\nFigure 9.1: Gradient Monte Carlo algorithm on the 1000-state random walk task\nFigure 9.2: Semi-gradient n-steps TD algorithm on the 1000-state random walk task\nFigure 9.5: Fourier basis vs polynomials on the 1000-state random walk task\nFigure 9.8: Example of feature width\u2019s effect on initial generalization and asymptotic accuracy\nFigure 9.10: Single tiling and multiple tilings on the 1000-state random walk task\n\nChapter 10\n\nFigure 10.1: The cost-to-go function for Mountain Car task in one run\nFigure 10.2: Learning curves for semi-gradient Sarsa on Mountain Car task\nFigure 10.3: One-step vs multi-step performance of semi-gradient Sarsa on the Mountain Car task\nFigure 10.4: Effect of the alpha and n on early performance of n-step semi-gradient Sarsa\nFigure 10.5: Differential semi-gradient Sarsa on the access-control queuing task\n\nChapter 11\n\nFigure 11.2: Baird's Counterexample\nFigure 11.6: The behavior of the TDC algorithm on Baird\u2019s counterexample\nFigure 11.7: The behavior of the ETD algorithm in expectation on Baird\u2019s counterexample\n\nChapter 12\n\nFigure 12.3: Off-line \u03bb-return algorithm on 19-state random walk\nFigure 12.6: TD(\u03bb) algorithm on 19-state random walk\nFigure 12.8: True online TD(\u03bb) algorithm on 19-state random walk\nFigure 12.10: Sarsa(\u03bb) with replacing traces on Mountain Car\nFigure 12.11: Summary comparison of Sarsa(\u03bb) algorithms on Mountain Car\n\nChapter 13\n\nExample 13.1: Short corridor with switched actions\nFigure 13.1: REINFORCE on the short-corridor grid world\nFigure 13.2: REINFORCE with baseline on the short-corridor grid-world\n\nEnvironment\n\npython 3.6\nnumpy\nmatplotlib\nseaborn\ntqdm\n\nUsage\n\nAll files are self-contained\n\npython any_file_you_want.py\n\nContribution\nIf you want to contribute some missing examples or fix some bugs, feel free to open an issue or make a pull request.\nFollowing are missing figures\/examples:\n\nFigure 12.14: The effect of \u03bb\n\n","205":"\n\n\n\n\n\nA very simple framework for state-of-the-art NLP. Developed by Humboldt University of Berlin and friends.\n\nIMPORTANT: (30.08.2020) We moved our models to a new server. Please update your Flair to the newest version!\n\n\nFlair is:\n\n\nA powerful NLP library. Flair allows you to apply our state-of-the-art natural language processing (NLP)\nmodels to your text, such as named entity recognition (NER), part-of-speech tagging (PoS),\nsense disambiguation and classification, with support for a rapidly growing number of languages.\n\n\nA biomedical NER library. Flair has special support for biomedical data with\nstate-of-the-art models for biomedical NER and support for over 32 biomedical datasets.\n\n\nA text embedding library. Flair has simple interfaces that allow you to use and combine different word and\ndocument embeddings, including our proposed Flair embeddings, BERT embeddings and ELMo embeddings.\n\n\nA PyTorch NLP framework. Our framework builds directly on PyTorch, making it easy to\ntrain your own models and experiment with new approaches using Flair embeddings and classes.\n\n\nNow at version 0.6.1!\nComparison with State-of-the-Art\nFlair outperforms the previous best methods on a range of NLP tasks:\n\n\n\nTask\nLanguage\nDataset\nFlair\nPrevious best\n\n\n\n\nNamed Entity Recognition\nEnglish\nConll-03\n93.18 (F1)\n92.22 (Peters et al., 2018)\n\n\nNamed Entity Recognition\nEnglish\nOntonotes\n89.3 (F1)\n86.28 (Chiu et al., 2016)\n\n\nEmerging Entity Detection\nEnglish\nWNUT-17\n49.49 (F1)\n45.55 (Aguilar et al., 2018)\n\n\nPart-of-Speech tagging\nEnglish\nWSJ\n97.85\n97.64 (Choi, 2016)\n\n\nChunking\nEnglish\nConll-2000\n96.72 (F1)\n96.36 (Peters et al., 2017)\n\n\nNamed Entity Recognition\nGerman\nConll-03\n88.27 (F1)\n78.76 (Lample et al., 2016)\n\n\nNamed Entity Recognition\nGerman\nGermeval\n84.65 (F1)\n79.08 (H\u00e4nig et al, 2014)\n\n\nNamed Entity Recognition\nDutch\nConll-02\n92.38 (F1)\n81.74 (Lample et al., 2016)\n\n\nNamed Entity Recognition\nPolish\nPolEval-2018\n86.6 (F1)  (Borchmann et al., 2018)\n85.1 (PolDeepNer)\n\n\n\nHere's how to reproduce these numbers using Flair. You can also find detailed evaluations and discussions in our papers:\n\n\nContextual String Embeddings for Sequence Labeling.\nAlan Akbik, Duncan Blythe and Roland Vollgraf.\n27th International Conference on Computational Linguistics, COLING 2018.\n\n\nPooled Contextualized Embeddings for Named Entity Recognition.\nAlan Akbik, Tanja Bergmann and Roland Vollgraf.\n2019 Annual Conference of the North American Chapter of the Association for Computational Linguistics, NAACL 2019.\n\n\nFLAIR: An Easy-to-Use Framework for State-of-the-Art NLP.\nAlan Akbik, Tanja Bergmann, Duncan Blythe, Kashif Rasul, Stefan Schweter and Roland Vollgraf.\n2019 Annual Conference of the North American Chapter of the Association for Computational Linguistics (Demonstrations), NAACL 2019.\n\n\nQuick Start\nRequirements and Installation\nThe project is based on PyTorch 1.1+ and Python 3.6+, because method signatures and type hints are beautiful.\nIf you do not have Python 3.6, install it first. Here is how for Ubuntu 16.04.\nThen, in your favorite virtual environment, simply do:\npip install flair\n\nExample Usage\nLet's run named entity recognition (NER) over an example sentence. All you need to do is make a Sentence, load\na pre-trained model and use it to predict tags for the sentence:\nfrom flair.data import Sentence\nfrom flair.models import SequenceTagger\n\n# make a sentence\nsentence = Sentence('I love Berlin .')\n\n# load the NER tagger\ntagger = SequenceTagger.load('ner')\n\n# run NER over sentence\ntagger.predict(sentence)\nDone! The Sentence now has entity annotations. Print the sentence to see what the tagger found.\nprint(sentence)\nprint('The following NER tags are found:')\n\n# iterate over entities and print\nfor entity in sentence.get_spans('ner'):\n    print(entity)\nThis should print:\nSentence: \"I love Berlin .\" - 4 Tokens\n\nThe following NER tags are found:\n\nSpan [3]: \"Berlin\"   [\u2212 Labels: LOC (0.9992)]\nTutorials\nWe provide a set of quick tutorials to get you started with the library:\n\nTutorial 1: Basics\nTutorial 2: Tagging your Text\nTutorial 3: Embedding Words\nTutorial 4: List of All Word Embeddings\nTutorial 5: Embedding Documents\nTutorial 6: Loading a Dataset\nTutorial 7: Training a Model\nTutorial 8: Training your own Flair Embeddings\nTutorial 9: Training a Zero Shot Text Classifier (TARS)\n\nThe tutorials explain how the base NLP classes work, how you can load pre-trained models to tag your\ntext, how you can embed your text with different word or document embeddings, and how you can train your own\nlanguage models, sequence labeling models, and text classification models. Let us know if anything is unclear.\nThere is also a dedicated landing page for our biomedical NER and datasets with\ninstallation instructions and tutorials.\nThere are also good third-party articles and posts that illustrate how to use Flair:\n\nHow to build a text classifier with Flair\nHow to build a microservice with Flair and Flask\nA docker image for Flair\nGreat overview of Flair functionality and how to use in Colab\nVisualisation tool for highlighting the extracted entities\nPractical approach of State-of-the-Art Flair in Named Entity Recognition\nBenchmarking NER algorithms\nTraining a Flair text classifier on Google Cloud Platform (GCP) and serving predictions on GCP\n\nCiting Flair\nPlease cite the following paper when using Flair:\n@inproceedings{akbik2018coling,\n  title={Contextual String Embeddings for Sequence Labeling},\n  author={Akbik, Alan and Blythe, Duncan and Vollgraf, Roland},\n  booktitle = {{COLING} 2018, 27th International Conference on Computational Linguistics},\n  pages     = {1638--1649},\n  year      = {2018}\n}\n\nIf you use the pooled version of the Flair embeddings (PooledFlairEmbeddings), please cite:\n@inproceedings{akbik2019naacl,\n  title={Pooled Contextualized Embeddings for Named Entity Recognition},\n  author={Akbik, Alan and Bergmann, Tanja and Vollgraf, Roland},\n  booktitle = {{NAACL} 2019, 2019 Annual Conference of the North American Chapter of the Association for Computational Linguistics},\n  pages     = {724\u2013728},\n  year      = {2019}\n}\n\nContact\nPlease email your questions or comments to Alan Akbik.\nContributing\nThanks for your interest in contributing! There are many ways to get involved;\nstart with our contributor guidelines and then\ncheck these open issues for specific tasks.\nFor contributors looking to get deeper into the API we suggest cloning the repository and checking out the unit\ntests for examples of how to call methods. Nearly all classes and methods are documented, so finding your way around\nthe code should hopefully be easy.\nRunning unit tests locally\nYou need Pipenv for this:\npipenv install --dev && pipenv shell\npytest tests\/\nTo run integration tests execute:\npytest --runintegration tests\/\nThe integration tests will train small models.\nAfterwards, the trained model will be loaded for prediction.\nTo also run slow tests, such as loading and using the embeddings provided by flair, you should execute:\npytest --runslow tests\/\nLicense\nThe MIT License (MIT)\nFlair is licensed under the following MIT license: The MIT License (MIT) Copyright \u00a9 2018 Zalando SE, https:\/\/tech.zalando.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","206":"The GAN Zoo\n\nEvery week, new GAN papers are coming out and it's hard to keep track of them all, not to mention the incredibly creative ways in which researchers are naming these GANs! So, here's a list of what started as a fun activity compiling all named GANs!\n\nYou can also check out the same data in a tabular format with functionality to filter by year or do a quick search by title here.\nContributions are welcome. Add links through pull requests in gans.tsv file in the same format or create an issue to lemme know something I missed or to start a discussion.\nCheck out Deep Hunt - my weekly AI newsletter for this repo as blogpost and follow me on Twitter.\n\n3D-ED-GAN - Shape Inpainting using 3D Generative Adversarial Network and Recurrent Convolutional Networks\n3D-GAN - Learning a Probabilistic Latent Space of Object Shapes via 3D Generative-Adversarial Modeling (github)\n3D-IWGAN - Improved Adversarial Systems for 3D Object Generation and Reconstruction (github)\n3D-PhysNet - 3D-PhysNet: Learning the Intuitive Physics of Non-Rigid Object Deformations\n3D-RecGAN - 3D Object Reconstruction from a Single Depth View with Adversarial Learning (github)\nABC-GAN - ABC-GAN: Adaptive Blur and Control for improved training stability of Generative Adversarial Networks (github)\nABC-GAN - GANs for LIFE: Generative Adversarial Networks for Likelihood Free Inference\nAC-GAN - Conditional Image Synthesis With Auxiliary Classifier GANs\nacGAN - Face Aging With Conditional Generative Adversarial Networks\nACGAN - Coverless Information Hiding Based on Generative adversarial networks\nacGAN - On-line Adaptative Curriculum Learning for GANs\nACtuAL - ACtuAL: Actor-Critic Under Adversarial Learning\nAdaGAN - AdaGAN: Boosting Generative Models\nAdaptive GAN - Customizing an Adversarial Example Generator with Class-Conditional GANs\nAdvEntuRe - AdvEntuRe: Adversarial Training for Textual Entailment with Knowledge-Guided Examples\nAdvGAN - Generating adversarial examples with adversarial networks\nAE-GAN - AE-GAN: adversarial eliminating with GAN\nAE-OT - Latent Space Optimal Transport for Generative Models\nAEGAN - Learning Inverse Mapping by Autoencoder based Generative Adversarial Nets\nAF-DCGAN - AF-DCGAN: Amplitude Feature Deep Convolutional GAN for Fingerprint Construction in Indoor Localization System\nAffGAN - Amortised MAP Inference for Image Super-resolution\nAIM - Generating Informative and Diverse Conversational Responses via Adversarial Information Maximization\nAL-CGAN - Learning to Generate Images of Outdoor Scenes from Attributes and Semantic Layouts\nALI - Adversarially Learned Inference (github)\nAlignGAN - AlignGAN: Learning to Align Cross-Domain Images with Conditional Generative Adversarial Networks\nAlphaGAN - AlphaGAN: Generative adversarial networks for natural image matting\nAM-GAN - Activation Maximization Generative Adversarial Nets\nAmbientGAN - AmbientGAN: Generative models from lossy measurements (github)\nAMC-GAN - Video Prediction with Appearance and Motion Conditions\nAnoGAN - Unsupervised Anomaly Detection with Generative Adversarial Networks to Guide Marker Discovery\nAPD - Adversarial Distillation of Bayesian Neural Network Posteriors\nAPE-GAN - APE-GAN: Adversarial Perturbation Elimination with GAN\nARAE - Adversarially Regularized Autoencoders for Generating Discrete Structures (github)\nARDA - Adversarial Representation Learning for Domain Adaptation\nARIGAN - ARIGAN: Synthetic Arabidopsis Plants using Generative Adversarial Network\nArtGAN - ArtGAN: Artwork Synthesis with Conditional Categorial GANs\nASDL-GAN - Automatic Steganographic Distortion Learning Using a Generative Adversarial Network\nATA-GAN - Attention-Aware Generative Adversarial Networks (ATA-GANs)\nAttention-GAN - Attention-GAN for Object Transfiguration in Wild Images\nAttGAN - Arbitrary Facial Attribute Editing: Only Change What You Want (github)\nAttnGAN - AttnGAN: Fine-Grained Text to Image Generation with Attentional Generative Adversarial Networks (github)\nAVID - AVID: Adversarial Visual Irregularity Detection\nB-DCGAN - B-DCGAN:Evaluation of Binarized DCGAN for FPGA\nb-GAN - Generative Adversarial Nets from a Density Ratio Estimation Perspective\nBAGAN - BAGAN: Data Augmentation with Balancing GAN\nBayesian GAN - Deep and Hierarchical Implicit Models\nBayesian GAN - Bayesian GAN (github)\nBCGAN - Bayesian Conditional Generative Adverserial Networks\nBCGAN - Bidirectional Conditional Generative Adversarial networks\nBEAM - Boltzmann Encoded Adversarial Machines\nBEGAN - BEGAN: Boundary Equilibrium Generative Adversarial Networks\nBEGAN-CS - Escaping from Collapsing Modes in a Constrained Space\nBellman GAN - Distributional Multivariate Policy Evaluation and Exploration with the Bellman GAN\nBGAN - Binary Generative Adversarial Networks for Image Retrieval (github)\nBi-GAN - Autonomously and Simultaneously Refining Deep Neural Network Parameters by a Bi-Generative Adversarial Network Aided Genetic Algorithm\nBicycleGAN - Toward Multimodal Image-to-Image Translation (github)\nBiGAN - Adversarial Feature Learning\nBinGAN - BinGAN: Learning Compact Binary Descriptors with a Regularized GAN\nBourGAN - BourGAN: Generative Networks with Metric Embeddings\nBranchGAN - Branched Generative Adversarial Networks for Multi-Scale Image Manifold Learning\nBRE - Improving GAN Training via Binarized Representation Entropy (BRE) Regularization (github)\nBridgeGAN - Generative Adversarial Frontal View to Bird View Synthesis\nBS-GAN - Boundary-Seeking Generative Adversarial Networks\nBubGAN - BubGAN: Bubble Generative Adversarial Networks for Synthesizing Realistic Bubbly Flow Images\nBWGAN - Banach Wasserstein GAN\nC-GAN  - Face Aging with Contextual Generative Adversarial Nets \nC-RNN-GAN - C-RNN-GAN: Continuous recurrent neural networks with adversarial training (github)\nCA-GAN - Composition-aided Sketch-realistic Portrait Generation\nCaloGAN - CaloGAN: Simulating 3D High Energy Particle Showers in Multi-Layer Electromagnetic Calorimeters with Generative Adversarial Networks (github)\nCAN - CAN: Creative Adversarial Networks, Generating Art by Learning About Styles and Deviating from Style Norms\nCapsGAN - CapsGAN: Using Dynamic Routing for Generative Adversarial Networks\nCapsuleGAN - CapsuleGAN: Generative Adversarial Capsule Network \nCatGAN - Unsupervised and Semi-supervised Learning with Categorical Generative Adversarial Networks\nCatGAN - CatGAN: Coupled Adversarial Transfer for Domain Generation\nCausalGAN - CausalGAN: Learning Causal Implicit Generative Models with Adversarial Training\nCC-GAN - Semi-Supervised Learning with Context-Conditional Generative Adversarial Networks (github)\ncd-GAN - Conditional Image-to-Image Translation\nCDcGAN - Simultaneously Color-Depth Super-Resolution with Conditional Generative Adversarial Network\nCE-GAN - Deep Learning for Imbalance Data Classification using Class Expert Generative Adversarial Network\nCFG-GAN - Composite Functional Gradient Learning of Generative Adversarial Models\nCGAN - Conditional Generative Adversarial Nets\nCGAN - Controllable Generative Adversarial Network\nChekhov GAN - An Online Learning Approach to Generative Adversarial Networks\nciGAN - Conditional Infilling GANs for Data Augmentation in Mammogram Classification\nCinCGAN - Unsupervised Image Super-Resolution using Cycle-in-Cycle Generative Adversarial Networks\nCipherGAN - Unsupervised Cipher Cracking Using Discrete GANs\nClusterGAN - ClusterGAN : Latent Space Clustering in Generative Adversarial Networks\nCM-GAN - CM-GANs: Cross-modal Generative Adversarial Networks for Common Representation Learning\nCoAtt-GAN - Are You Talking to Me? Reasoned Visual Dialog Generation through Adversarial Learning\nCoGAN - Coupled Generative Adversarial Networks\nComboGAN - ComboGAN: Unrestrained Scalability for Image Domain Translation (github)\nConceptGAN - Learning Compositional Visual Concepts with Mutual Consistency\nConditional cycleGAN - Conditional CycleGAN for Attribute Guided Face Image Generation\nconstrast-GAN - Generative Semantic Manipulation with Contrasting GAN\nContext-RNN-GAN - Contextual RNN-GANs for Abstract Reasoning Diagram Generation\nCorrGAN - Correlated discrete data generation using adversarial training\nCoulomb GAN - Coulomb GANs: Provably Optimal Nash Equilibria via Potential Fields\nCover-GAN - Generative Steganography with Kerckhoffs' Principle based on Generative Adversarial Networks\ncowboy - Defending Against Adversarial Attacks by Leveraging an Entire GAN\nCR-GAN - CR-GAN: Learning Complete Representations for Multi-view Generation\nCram\u00e8r GAN  - The Cramer Distance as a Solution to Biased Wasserstein Gradients\nCross-GAN - Crossing Generative Adversarial Networks for Cross-View Person Re-identification\ncrVAE-GAN - Channel-Recurrent Variational Autoencoders\nCS-GAN - Improving Neural Machine Translation with Conditional Sequence Generative Adversarial Nets\nCSG - Speech-Driven Expressive Talking Lips with Conditional Sequential Generative Adversarial Networks\nCT-GAN - CT-GAN: Conditional Transformation Generative Adversarial Network for Image Attribute Modification\nCVAE-GAN - CVAE-GAN: Fine-Grained Image Generation through Asymmetric Training\nCycleGAN - Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks (github)\nD-GAN - Differential Generative Adversarial Networks: Synthesizing Non-linear Facial Variations with Limited Number of Training Data\nD-WCGAN - I-vector Transformation Using Conditional Generative Adversarial Networks for Short Utterance Speaker Verification\nD2GAN - Dual Discriminator Generative Adversarial Nets\nD2IA-GAN - Tagging like Humans: Diverse and Distinct Image Annotation\nDA-GAN  - DA-GAN: Instance-level Image Translation by Deep Attention Generative Adversarial Networks (with Supplementary Materials)\nDADA - DADA: Deep Adversarial Data Augmentation for Extremely Low Data Regime Classification\nDAGAN - Data Augmentation Generative Adversarial Networks\nDAN - Distributional Adversarial Networks\nDBLRGAN - Adversarial Spatio-Temporal Learning for Video Deblurring\nDCGAN - Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks (github)\nDE-GAN - Generative Adversarial Networks with Decoder-Encoder Output Noise\nDeblurGAN - DeblurGAN: Blind Motion Deblurring Using Conditional Adversarial Networks (github)\nDeepFD - Learning to Detect Fake Face Images in the Wild\nDefense-GAN - Defense-GAN: Protecting Classifiers Against Adversarial Attacks Using Generative Models  (github)\nDefo-Net - Defo-Net: Learning Body Deformation using Generative Adversarial Networks\nDeliGAN - DeLiGAN : Generative Adversarial Networks for Diverse and Limited Data (github)\nDF-GAN - Learning Disentangling and Fusing Networks for Face Completion Under Structured Occlusions\nDialogWAE - DialogWAE: Multimodal Response Generation with Conditional Wasserstein Auto-Encoder\nDiscoGAN - Learning to Discover Cross-Domain Relations with Generative Adversarial Networks\nDistanceGAN - One-Sided Unsupervised Domain Mapping\nDM-GAN - Dual Motion GAN for Future-Flow Embedded Video Prediction\nDMGAN - Disconnected Manifold Learning for Generative Adversarial Networks\nDNA-GAN - DNA-GAN: Learning Disentangled Representations from Multi-Attribute Images\nDOPING - DOPING: Generative Data Augmentation for Unsupervised Anomaly Detection with GAN\ndp-GAN - Differentially Private Releasing via Deep Generative Model\nDP-GAN - DP-GAN: Diversity-Promoting Generative Adversarial Network for Generating Informative and Diversified Text \nDPGAN  - Differentially Private Generative Adversarial Network \nDR-GAN - Representation Learning by Rotating Your Faces\nDRAGAN - How to Train Your DRAGAN (github)\nDropout-GAN - Dropout-GAN: Learning from a Dynamic Ensemble of Discriminators\nDRPAN - Discriminative Region Proposal Adversarial Networks for High-Quality Image-to-Image Translation\nDSH-GAN - Deep Semantic Hashing with Generative Adversarial Networks\nDSP-GAN - Depth Structure Preserving Scene Image Generation\nDTLC-GAN - Generative Adversarial Image Synthesis with Decision Tree Latent Controller\nDTN - Unsupervised Cross-Domain Image Generation\nDTR-GAN - DTR-GAN: Dilated Temporal Relational Adversarial Network for Video Summarization\nDualGAN - DualGAN: Unsupervised Dual Learning for Image-to-Image Translation\nDualing GAN - Dualing GANs\nDVGAN - Human Motion Modeling using DVGANs\nDynamics Transfer GAN - Dynamics Transfer GAN: Generating Video by Transferring Arbitrary Temporal Dynamics from a Source Video to a Single Target Image\nE-GAN - Evolutionary Generative Adversarial Networks\nEAR - Generative Model for Heterogeneous Inference\nEBGAN - Energy-based Generative Adversarial Network\necGAN - eCommerceGAN : A Generative Adversarial Network for E-commerce\nED\/\/GAN - Stabilizing Training of Generative Adversarial Networks through Regularization\nEditable GAN - Editable Generative Adversarial Networks: Generating and Editing Faces Simultaneously\nEGAN - Enhanced Experience Replay Generation for Efficient Reinforcement Learning\nEL-GAN - EL-GAN: Embedding Loss Driven Generative Adversarial Networks for Lane Detection\nELEGANT - ELEGANT: Exchanging Latent Encodings with GAN for Transferring Multiple Face Attributes\nEnergyWGAN - Energy-relaxed Wassertein GANs (EnergyWGAN): Towards More Stable and High Resolution Image Generation\nESRGAN - ESRGAN: Enhanced Super-Resolution Generative Adversarial Networks\nExGAN - Eye In-Painting with Exemplar Generative Adversarial Networks\nExposureGAN - Exposure: A White-Box Photo Post-Processing Framework (github)\nExprGAN - ExprGAN: Facial Expression Editing with Controllable Expression Intensity\nf-CLSWGAN - Feature Generating Networks for Zero-Shot Learning\nf-GAN - f-GAN: Training Generative Neural Samplers using Variational Divergence Minimization\nFairGAN - FairGAN: Fairness-aware Generative Adversarial Networks\nFairness GAN - Fairness GAN\nFakeGAN - Detecting Deceptive Reviews using Generative Adversarial Networks\nFBGAN - Feedback GAN (FBGAN) for DNA: a Novel Feedback-Loop Architecture for Optimizing Protein Functions\nFBGAN - Featurized Bidirectional GAN: Adversarial Defense via Adversarially Learned Semantic Inference\nFC-GAN - Fast-converging Conditional Generative Adversarial Networks for Image Synthesis\nFF-GAN - Towards Large-Pose Face Frontalization in the Wild\nFGGAN - Adversarial Learning for Fine-grained Image Search\nFictitious GAN - Fictitious GAN: Training GANs with Historical Models\nFIGAN - Frame Interpolation with Multi-Scale Deep Loss Functions and Generative Adversarial Networks\nFila-GAN - Synthesizing Filamentary Structured Images with GANs\nFirst Order GAN  - First Order Generative Adversarial Networks  (github)\nFisher GAN - Fisher GAN\nFlow-GAN - Flow-GAN: Bridging implicit and prescribed learning in generative models\nFrankenGAN - rankenGAN: Guided Detail Synthesis for Building Mass-Models Using Style-Synchonized GANs\nFSEGAN - Exploring Speech Enhancement with Generative Adversarial Networks for Robust Speech Recognition\nFTGAN - Hierarchical Video Generation from Orthogonal Information: Optical Flow and Texture\nFusedGAN - Semi-supervised FusedGAN for Conditional Image Generation\nFusionGAN - Learning to Fuse Music Genres with Generative Adversarial Dual Learning\nFusionGAN - Generating a Fusion Image: One's Identity and Another's Shape\nG2-GAN - Geometry Guided Adversarial Facial Expression Synthesis\nGAAN - Generative Adversarial Autoencoder Networks\nGAF - Generative Adversarial Forests for Better Conditioned Adversarial Learning\nGAGAN - GAGAN: Geometry-Aware Generative Adverserial Networks\nGAIA - Generative adversarial interpolative autoencoding: adversarial training on latent space interpolations encourage convex latent distributions\nGAIN  - GAIN: Missing Data Imputation using Generative Adversarial Nets\nGAMN - Generative Adversarial Mapping Networks\nGAN - Generative Adversarial Networks (github)\nGAN Lab - GAN Lab: Understanding Complex Deep Generative Models using Interactive Visual Experimentation\nGAN Q-learning - GAN Q-learning\nGAN-AD - Anomaly Detection with Generative Adversarial Networks for Multivariate Time Series\nGAN-ATV - A Novel Approach to Artistic Textual Visualization via GAN\nGAN-CLS - Generative Adversarial Text to Image Synthesis (github)\nGAN-RS - Towards Qualitative Advancement of Underwater Machine Vision with Generative Adversarial Networks\nGAN-SD - Virtual-Taobao: Virtualizing Real-world Online Retail Environment for Reinforcement Learning\nGAN-sep - GANs for Biological Image Synthesis (github)\nGAN-VFS - Generative Adversarial Network-based Synthesis of Visible Faces from Polarimetric Thermal Faces\nGAN-Word2Vec - Adversarial Training of Word2Vec for Basket Completion\nGANAX - GANAX: A Unified MIMD-SIMD Acceleration for Generative Adversarial Networks\nGANCS - Deep Generative Adversarial Networks for Compressed Sensing Automates MRI\nGANDI - Guiding the search in continuous state-action spaces by learning an action sampling distribution from off-target samples\nGANG - GANGs: Generative Adversarial Network Games\nGANG - Beyond Local Nash Equilibria for Adversarial Networks\nGANosaic - GANosaic: Mosaic Creation with Generative Texture Manifolds\nGANVO - GANVO: Unsupervised Deep Monocular Visual Odometry and Depth Estimation with Generative Adversarial Networks\nGAP - Context-Aware Generative Adversarial Privacy\nGAP - Generative Adversarial Privacy\nGATS - Sample-Efficient Deep RL with Generative Adversarial Tree Search\nGAWWN - Learning What and Where to Draw (github)\nGC-GAN - Geometry-Contrastive Generative Adversarial Network for Facial Expression Synthesis\nGcGAN - Geometry-Consistent Adversarial Networks for One-Sided Unsupervised Domain Mapping\nGeneGAN - GeneGAN: Learning Object Transfiguration and Attribute Subspace from Unpaired Data (github)\nGeoGAN - Generating Instance Segmentation Annotation by Geometry-guided GAN \nGeometric GAN - Geometric GAN\nGIN - Generative Invertible Networks (GIN): Pathophysiology-Interpretable Feature Mapping and Virtual Patient Generation\nGLCA-GAN - Global and Local Consistent Age Generative Adversarial Networks \nGM-GAN - Gaussian Mixture Generative Adversarial Networks for Diverse Datasets, and the Unsupervised Clustering of Images\nGMAN - Generative Multi-Adversarial Networks\nGMM-GAN - Towards Understanding the Dynamics of Generative Adversarial Networks\nGoGAN - Gang of GANs: Generative Adversarial Networks with Maximum Margin Ranking\nGONet - GONet: A Semi-Supervised Deep Learning Approach For Traversability Estimation\nGP-GAN - GP-GAN: Towards Realistic High-Resolution Image Blending (github)\nGP-GAN - GP-GAN: Gender Preserving GAN for Synthesizing Faces from Landmarks\nGPU - A generative adversarial framework for positive-unlabeled classification\nGRAN - Generating images with recurrent adversarial networks (github)\nGraphical-GAN - Graphical Generative Adversarial Networks\nGraphSGAN - Semi-supervised Learning on Graphs with Generative Adversarial Nets\nGraspGAN - Using Simulation and Domain Adaptation to Improve Efficiency of Deep Robotic Grasping\nGT-GAN - Deep Graph Translation\nHAN - Chinese Typeface Transformation with Hierarchical Adversarial Network\nHAN - Bidirectional Learning for Robust Neural Networks\nHiGAN - Exploiting Images for Video Recognition with Hierarchical Generative Adversarial Networks\nHP-GAN - HP-GAN: Probabilistic 3D human motion prediction via GAN\nHR-DCGAN - High-Resolution Deep Convolutional Generative Adversarial Networks\nhredGAN - Multi-turn Dialogue Response Generation in an Adversarial Learning framework\nIAN - Neural Photo Editing with Introspective Adversarial Networks (github)\nIcGAN - Invertible Conditional GANs for image editing (github)\nID-CGAN - Image De-raining Using a Conditional Generative Adversarial Network\nIdCycleGAN - Face Translation between Images and Videos using Identity-aware CycleGAN\nIFcVAEGAN - Conditional Autoencoders with Adversarial Information Factorization\niGAN - Generative Visual Manipulation on the Natural Image Manifold (github)\nIGMM-GAN - Coupled IGMM-GANs for deep multimodal anomaly detection in human mobility data\nImproved GAN - Improved Techniques for Training GANs (github)\nIn2I - In2I : Unsupervised Multi-Image-to-Image Translation Using Generative Adversarial Networks\nInfoGAN - InfoGAN: Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets (github)\nIntroVAE - IntroVAE: Introspective Variational Autoencoders for Photographic Image Synthesis\nIR2VI - IR2VI: Enhanced Night Environmental Perception by Unsupervised Thermal Image Translation\nIRGAN - IRGAN: A Minimax Game for Unifying Generative and Discriminative Information Retrieval models\nIRGAN - Generative Adversarial Nets for Information Retrieval: Fundamentals and Advances\nISGAN - Invisible Steganography via Generative Adversarial Network\nISP-GPM - Inner Space Preserving Generative Pose Machine\nIterative-GAN - Two Birds with One Stone: Iteratively Learn Facial Attributes with GANs (github)\nIterGAN - IterGANs: Iterative GANs to Learn and Control 3D Object Transformation\nIVE-GAN - IVE-GAN: Invariant Encoding Generative Adversarial Networks\niVGAN - Towards an Understanding of Our World by GANing Videos in the Wild (github)\nIWGAN - On Unifying Deep Generative Models\nJointGAN - JointGAN: Multi-Domain Joint Distribution Learning with Generative Adversarial Nets\nJR-GAN - JR-GAN: Jacobian Regularization for Generative Adversarial Networks\nKBGAN - KBGAN: Adversarial Learning for Knowledge Graph Embeddings\nKGAN - KGAN: How to Break The Minimax Game in GAN\nl-GAN - Representation Learning and Adversarial Generation of 3D Point Clouds\nLAC-GAN - Grounded Language Understanding for Manipulation Instructions Using GAN-Based Classification\nLAGAN - Learning Particle Physics by Example: Location-Aware Generative Adversarial Networks for Physics Synthesis\nLAPGAN - Deep Generative Image Models using a Laplacian Pyramid of Adversarial Networks (github)\nLB-GAN - Load Balanced GANs for Multi-view Face Image Synthesis\nLBT - Learning Implicit Generative Models by Teaching Explicit Ones\nLCC-GAN - Adversarial Learning with Local Coordinate Coding\nLD-GAN - Linear Discriminant Generative Adversarial Networks\nLDAN - Label Denoising Adversarial Network (LDAN) for Inverse Lighting of Face Images\nLeakGAN - Long Text Generation via Adversarial Training with Leaked Information\nLeGAN - Likelihood Estimation for Generative Adversarial Networks\nLGAN - Global versus Localized Generative Adversarial Nets\nLipizzaner - Towards Distributed Coevolutionary GANs\nLR-GAN - LR-GAN: Layered Recursive Generative Adversarial Networks for Image Generation\nLS-GAN - Loss-Sensitive Generative Adversarial Networks on Lipschitz Densities\nLSGAN - Least Squares Generative Adversarial Networks\nM-AAE - Mask-aware Photorealistic Face Attribute Manipulation\nMAD-GAN - Multi-Agent Diverse Generative Adversarial Networks\nMAGAN - MAGAN: Margin Adaptation for Generative Adversarial Networks\nMAGAN - MAGAN: Aligning Biological Manifolds\nMalGAN - Generating Adversarial Malware Examples for Black-Box Attacks Based on GAN\nMaliGAN - Maximum-Likelihood Augmented Discrete Generative Adversarial Networks\nmanifold-WGAN - Manifold-valued Image Generation with Wasserstein Adversarial Networks\nMARTA-GAN - Deep Unsupervised Representation Learning for Remote Sensing Images\nMaskGAN - MaskGAN: Better Text Generation via Filling in the ______ \nMC-GAN - Multi-Content GAN for Few-Shot Font Style Transfer (github)\nMC-GAN - MC-GAN: Multi-conditional Generative Adversarial Network for Image Synthesis\nMcGAN - McGan: Mean and Covariance Feature Matching GAN\nMD-GAN - Learning to Generate Time-Lapse Videos Using Multi-Stage Dynamic Generative Adversarial Networks\nMDGAN - Mode Regularized Generative Adversarial Networks\nMedGAN - Generating Multi-label Discrete Electronic Health Records using Generative Adversarial Networks\nMedGAN - MedGAN: Medical Image Translation using GANs\nMEGAN - MEGAN: Mixture of Experts of Generative Adversarial Networks for Multimodal Image Generation\nMelanoGAN - MelanoGANs: High Resolution Skin Lesion Synthesis with GANs\nmemoryGAN - Memorization Precedes Generation: Learning Unsupervised GANs with Memory Networks\nMeRGAN - Memory Replay GANs: learning to generate images from new categories without forgetting\nMGAN - Precomputed Real-Time Texture Synthesis with Markovian Generative Adversarial Networks (github)\nMGGAN - Multi-Generator Generative Adversarial Nets\nMGGAN - MGGAN: Solving Mode Collapse using Manifold Guided Training\nMIL-GAN - Multimodal Storytelling via Generative Adversarial Imitation Learning\nMinLGAN - Anomaly Detection via Minimum Likelihood Generative Adversarial Networks\nMIX+GAN - Generalization and Equilibrium in Generative Adversarial Nets (GANs)\nMIXGAN - MIXGAN: Learning Concepts from Different Domains for Mixture Generation\nMLGAN - Metric Learning-based Generative Adversarial Network\nMMC-GAN - A Multimodal Classifier Generative Adversarial Network for Carry and Place Tasks from Ambiguous Language Instructions\nMMD-GAN - MMD GAN: Towards Deeper Understanding of Moment Matching Network (github)\nMMGAN - MMGAN: Manifold Matching Generative Adversarial Network for Generating Images\nMoCoGAN - MoCoGAN: Decomposing Motion and Content for Video Generation (github)\nModified GAN-CLS - Generate the corresponding Image from Text Description using Modified GAN-CLS Algorithm\nModularGAN - Modular Generative Adversarial Networks\nMolGAN - MolGAN: An implicit generative model for small molecular graphs\nMPM-GAN - Message Passing Multi-Agent GANs\nMS-GAN - Temporal Coherency based Criteria for Predicting Video Frames using Deep Multi-stage Generative Adversarial Networks\nMTGAN - MTGAN: Speaker Verification through Multitasking Triplet Generative Adversarial Networks\nMuseGAN - MuseGAN: Symbolic-domain Music Generation and Accompaniment with Multi-track Sequential Generative Adversarial Networks\nMV-BiGAN - Multi-view Generative Adversarial Networks\nN2RPP - N2RPP: An Adversarial Network to Rebuild Plantar Pressure for ACLD Patients\nNAN - Understanding Humans in Crowded Scenes: Deep Nested Adversarial Learning and A New Benchmark for Multi-Human Parsing\nNCE-GAN - Dihedral angle prediction using generative adversarial networks\nND-GAN - Novelty Detection with GAN\nNetGAN - NetGAN: Generating Graphs via Random Walks\nOCAN - One-Class Adversarial Nets for Fraud Detection\nOptionGAN - OptionGAN: Learning Joint Reward-Policy Options using Generative Adversarial Inverse Reinforcement Learning\nORGAN - Objective-Reinforced Generative Adversarial Networks (ORGAN) for Sequence Generation Models \nORGAN - 3D Reconstruction of Incomplete Archaeological Objects Using a Generative Adversary Network\nOT-GAN - Improving GANs Using Optimal Transport\nPacGAN - PacGAN: The power of two samples in generative adversarial networks\nPAN - Perceptual Adversarial Networks for Image-to-Image Transformation\nPassGAN - PassGAN: A Deep Learning Approach for Password Guessing\nPD-WGAN - Primal-Dual Wasserstein GAN\nPerceptual GAN - Perceptual Generative Adversarial Networks for Small Object Detection\nPGAN - Probabilistic Generative Adversarial Networks\nPGD-GAN - Solving Linear Inverse Problems Using GAN Priors: An Algorithm with Provable Guarantees\nPGGAN - Patch-Based Image Inpainting with Generative Adversarial Networks\nPIONEER - Pioneer Networks: Progressively Growing Generative Autoencoder\nPip-GAN - Pipeline Generative Adversarial Networks for Facial Images Generation with Multiple Attributes\npix2pix - Image-to-Image Translation with Conditional Adversarial Networks (github)\npix2pixHD - High-Resolution Image Synthesis and Semantic Manipulation with Conditional GANs (github)\nPixelGAN - PixelGAN Autoencoders\nPM-GAN - PM-GANs: Discriminative Representation Learning for Action Recognition Using Partial-modalities\nPN-GAN - Pose-Normalized Image Generation for Person Re-identification\nPOGAN - Perceptually Optimized Generative Adversarial Network for Single Image Dehazing\nPose-GAN - The Pose Knows: Video Forecasting by Generating Pose Futures\nPP-GAN - Privacy-Protective-GAN for Face De-identification\nPPAN - Privacy-Preserving Adversarial Networks\nPPGN - Plug & Play Generative Networks: Conditional Iterative Generation of Images in Latent Space\nPrGAN - 3D Shape Induction from 2D Views of Multiple Objects\nProGanSR - A Fully Progressive Approach to Single-Image Super-Resolution\nProgressive GAN - Progressive Growing of GANs for Improved Quality, Stability, and Variation (github)\nPS-GAN - Pedestrian-Synthesis-GAN: Generating Pedestrian Data in Real Scene and Beyond\nPSGAN - Learning Texture Manifolds with the Periodic Spatial GAN\nPSGAN - PSGAN: A Generative Adversarial Network for Remote Sensing Image Pan-Sharpening\nPS\u00b2-GAN - High-Quality Facial Photo-Sketch Synthesis Using Multi-Adversarial Networks\nRadialGAN - RadialGAN: Leveraging multiple datasets to improve target-specific predictive models using Generative Adversarial Networks \nRaGAN - The relativistic discriminator: a key element missing from standard GAN\nRAN - RAN4IQA: Restorative Adversarial Nets for No-Reference Image Quality Assessment (github)\nRankGAN - Adversarial Ranking for Language Generation \nRCGAN - Real-valued (Medical) Time Series Generation with Recurrent Conditional GANs\nReConNN - Reconstruction of Simulation-Based Physical Field with Limited Samples by Reconstruction Neural Network\nRecycle-GAN - Recycle-GAN: Unsupervised Video Retargeting\nRefineGAN - Compressed Sensing MRI Reconstruction with Cyclic Loss in Generative Adversarial Networks\nReGAN - ReGAN: RE[LAX|BAR|INFORCE] based Sequence Generation using GANs (github)\nRegCGAN - Unpaired Multi-Domain Image Generation via Regularized Conditional GANs\nRenderGAN - RenderGAN: Generating Realistic Labeled Data\nResembled GAN - Resembled Generative Adversarial Networks: Two Domains with Similar Attributes\nResGAN - Generative Adversarial Network based on Resnet for Conditional Image Restoration\nRNN-WGAN - Language Generation with Recurrent Generative Adversarial Networks without Pre-training (github)\nRoCGAN - Robust Conditional Generative Adversarial Networks\nRPGAN - Stabilizing GAN Training with Multiple Random Projections (github)\nRTT-GAN - Recurrent Topic-Transition GAN for Visual Paragraph Generation\nRWGAN - Relaxed Wasserstein with Applications to GANs\nSAD-GAN - SAD-GAN: Synthetic Autonomous Driving using Generative Adversarial Networks\nSAGA - Generative Adversarial Learning for Spectrum Sensing\nSAGAN - Self-Attention Generative Adversarial Networks\nSalGAN - SalGAN: Visual Saliency Prediction with Generative Adversarial Networks (github)\nSAM - Sample-Efficient Imitation Learning via Generative Adversarial Nets\nsAOG - Deep Structured Generative Models\nSAR-GAN - Generating High Quality Visible Images from SAR Images Using CNNs\nSBADA-GAN - From source to target and back: symmetric bi-directional adaptive GAN\nScarGAN - ScarGAN: Chained Generative Adversarial Networks to Simulate Pathological Tissue on Cardiovascular MR Scans\nSCH-GAN - SCH-GAN: Semi-supervised Cross-modal Hashing by Generative Adversarial Network \nSD-GAN - Semantically Decomposing the Latent Spaces of Generative Adversarial Networks\nSdf-GAN - Sdf-GAN: Semi-supervised Depth Fusion with Multi-scale Adversarial Networks\nSEGAN - SEGAN: Speech Enhancement Generative Adversarial Network\nSeGAN - SeGAN: Segmenting and Generating the Invisible\nSegAN - SegAN: Adversarial Network with Multi-scale L1 Loss for Medical Image Segmentation\nSem-GAN - Sem-GAN: Semantically-Consistent Image-to-Image Translation\nSeqGAN - SeqGAN: Sequence Generative Adversarial Nets with Policy Gradient (github)\nSeUDA - Semantic-Aware Generative Adversarial Nets for Unsupervised Domain Adaptation in Chest X-ray Segmentation\nSG-GAN - Semantic-aware Grad-GAN for Virtual-to-Real Urban Scene Adaption (github)\nSG-GAN - Sparsely Grouped Multi-task Generative Adversarial Networks for Facial Attribute Manipulation\nSGAN - Texture Synthesis with Spatial Generative Adversarial Networks\nSGAN - Stacked Generative Adversarial Networks (github)\nSGAN - Steganographic Generative Adversarial Networks\nSGAN - SGAN: An Alternative Training of Generative Adversarial Networks\nSGAN - CT Image Enhancement Using Stacked Generative Adversarial Networks and Transfer Learning for Lesion Segmentation Improvement\nsGAN  - Generative Adversarial Training for MRA Image Synthesis Using Multi-Contrast MRI\nSiftingGAN - SiftingGAN: Generating and Sifting Labeled Samples to Improve the Remote Sensing Image Scene Classification Baseline in vitro\nSiGAN - SiGAN: Siamese Generative Adversarial Network for Identity-Preserving Face Hallucination\nSimGAN - Learning from Simulated and Unsupervised Images through Adversarial Training\nSisGAN - Semantic Image Synthesis via Adversarial Learning\nSketcher-Refiner GAN - Learning Myelin Content in Multiple Sclerosis from Multimodal MRI through Adversarial Training\nSketchGAN - Adversarial Training For Sketch Retrieval\nSketchyGAN - SketchyGAN: Towards Diverse and Realistic Sketch to Image Synthesis\nSkip-Thought GAN - Generating Text through Adversarial Training using Skip-Thought Vectors\nSL-GAN - Semi-Latent GAN: Learning to generate and modify facial images from attributes\nSLSR - Sparse Label Smoothing for Semi-supervised Person Re-Identification\nSN-DCGAN - Generative Adversarial Networks for Unsupervised Object Co-localization\nSN-GAN - Spectral Normalization for Generative Adversarial Networks (github)\nSN-PatchGAN - Free-Form Image Inpainting with Gated Convolution\nSobolev GAN - Sobolev GAN\nSocial GAN - Social GAN: Socially Acceptable Trajectories with Generative Adversarial Networks\nSoftmax GAN - Softmax GAN\nSoPhie - SoPhie: An Attentive GAN for Predicting Paths Compliant to Social and Physical Constraints\nspeech-driven animation GAN - End-to-End Speech-Driven Facial Animation with Temporal GANs\nSpike-GAN - Synthesizing realistic neural population activity patterns using Generative Adversarial Networks\nSplitting GAN - Class-Splitting Generative Adversarial Networks\nSR-CNN-VAE-GAN - Semi-Recurrent CNN-based VAE-GAN for Sequential Data Generation (github)\nSRGAN - Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network\nSRPGAN - SRPGAN: Perceptual Generative Adversarial Network for Single Image Super Resolution\nSS-GAN - Semi-supervised Conditional GANs\nss-InfoGAN - Guiding InfoGAN with Semi-Supervision\nSSGAN - SSGAN: Secure Steganography Based on Generative Adversarial Networks\nSSL-GAN - Semi-Supervised Learning with Context-Conditional Generative Adversarial Networks\nST-CGAN - Stacked Conditional Generative Adversarial Networks for Jointly Learning Shadow Detection and Shadow Removal\nST-GAN - Style Transfer Generative Adversarial Networks: Learning to Play Chess Differently\nST-GAN - ST-GAN: Spatial Transformer Generative Adversarial Networks for Image Compositing\nStackGAN - StackGAN: Text to Photo-realistic Image Synthesis with Stacked Generative Adversarial Networks (github)\nStainGAN - StainGAN: Stain Style Transfer for Digital Histological Images\nStarGAN - StarGAN: Unified Generative Adversarial Networks for Multi-Domain Image-to-Image Translation (github)\nStarGAN-VC - StarGAN-VC: Non-parallel many-to-many voice conversion with star generative adversarial networks \nSteinGAN - Learning Deep Energy Models: Contrastive Divergence vs. Amortized MLE\nStepGAN - Improving Conditional Sequence Generative Adversarial Networks by Stepwise Evaluation\nSuper-FAN - Super-FAN: Integrated facial landmark localization and super-resolution of real-world low resolution faces in arbitrary poses with GANs\nSVSGAN - SVSGAN: Singing Voice Separation via Generative Adversarial Network\nSWGAN - Solving Approximate Wasserstein GANs to Stationarity\nSyncGAN - SyncGAN: Synchronize the Latent Space of Cross-modal Generative Adversarial Networks\nS^2GAN - Generative Image Modeling using Style and Structure Adversarial Networks\nT2Net - T2Net: Synthetic-to-Realistic Translation for Solving Single-Image Depth Estimation Tasks\ntable-GAN - Data Synthesis based on Generative Adversarial Networks\nTAC-GAN - TAC-GAN - Text Conditioned Auxiliary Classifier Generative Adversarial Network (github)\nTAN - Outline Colorization through Tandem Adversarial Networks\ntcGAN - Cross-modal Hallucination for Few-shot Fine-grained Recognition\nTD-GAN - Task Driven Generative Modeling for Unsupervised Domain Adaptation: Application to X-ray Image Segmentation\ntempCycleGAN - Improving Surgical Training Phantoms by Hyperrealism: Deep Unpaired Image-to-Image Translation from Real Surgeries\ntempoGAN - tempoGAN: A Temporally Coherent, Volumetric GAN for Super-resolution Fluid Flow\nTequilaGAN - TequilaGAN: How to easily identify GAN samples\nText2Shape - Text2Shape: Generating Shapes from Natural Language by Learning Joint Embeddings\ntextGAN - Generating Text via Adversarial Training\nTextureGAN - TextureGAN: Controlling Deep Image Synthesis with Texture Patches\nTGAN - Temporal Generative Adversarial Nets\nTGAN - Tensorizing Generative Adversarial Nets\nTGAN - Tensor-Generative Adversarial Network with Two-dimensional Sparse Coding: Application to Real-time Indoor Localization\nTGANs-C - To Create What You Tell: Generating Videos from Captions\ntiny-GAN - Analysis of Nonautonomous Adversarial Systems\nTP-GAN - Beyond Face Rotation: Global and Local Perception GAN for Photorealistic and Identity Preserving Frontal View Synthesis\nTreeGAN - TreeGAN: Syntax-Aware Sequence Generation with Generative Adversarial Networks\nTriple-GAN - Triple Generative Adversarial Nets\ntripletGAN - TripletGAN: Training Generative Model with Triplet Loss\nTV-GAN - TV-GAN: Generative Adversarial Network Based Thermal to Visible Face Recognition\nTwin-GAN - Twin-GAN -- Unpaired Cross-Domain Image Translation with Weight-Sharing GANs\nUGACH - Unsupervised Generative Adversarial Cross-modal Hashing\nUGAN - Enhancing Underwater Imagery using Generative Adversarial Networks\nUnim2im - Unsupervised Image-to-Image Translation with Generative Adversarial Networks  (github)\nUNIT - Unsupervised Image-to-image Translation Networks (github)\nUnrolled GAN - Unrolled Generative Adversarial Networks (github)\nUT-SCA-GAN - Spatial Image Steganography Based on Generative Adversarial Network\nUV-GAN - UV-GAN: Adversarial Facial UV Map Completion for Pose-invariant Face Recognition\nVA-GAN - Visual Feature Attribution using Wasserstein GANs\nVAC+GAN  - Versatile Auxiliary Classifier with Generative Adversarial Network (VAC+GAN), Multi Class Scenarios\nVAE-GAN - Autoencoding beyond pixels using a learned similarity metric\nVariGAN - Multi-View Image Generation from a Single-View\nVAW-GAN - Voice Conversion from Unaligned Corpora using Variational Autoencoding Wasserstein Generative Adversarial Networks\nVEEGAN - VEEGAN: Reducing Mode Collapse in GANs using Implicit Variational Learning (github)\nVGAN - Generating Videos with Scene Dynamics (github)\nVGAN - Generative Adversarial Networks as Variational Training of Energy Based Models (github)\nVGAN - Text Generation Based on Generative Adversarial Nets with Latent Variable\nViGAN - Image Generation and Editing with Variational Info Generative Adversarial Networks\nVIGAN - VIGAN: Missing View Imputation with Generative Adversarial Networks\nVoiceGAN - Voice Impersonation using Generative Adversarial Networks \nVOS-GAN - VOS-GAN: Adversarial Learning of Visual-Temporal Dynamics for Unsupervised Dense Prediction in Videos\nVRAL - Variance Regularizing Adversarial Learning\nWaterGAN - WaterGAN: Unsupervised Generative Network to Enable Real-time Color Correction of Monocular Underwater Images\nWaveGAN - Synthesizing Audio with Generative Adversarial Networks \nWaveletGLCA-GAN - Global and Local Consistent Wavelet-domain Age Synthesis\nweGAN - Generative Adversarial Nets for Multiple Text Corpora\nWGAN - Wasserstein GAN (github)\nWGAN-CLS - Text to Image Synthesis Using Generative Adversarial Networks\nWGAN-GP - Improved Training of Wasserstein GANs (github)\nWGAN-L1 - Subsampled Turbulence Removal Network\nWS-GAN - Weakly Supervised Generative Adversarial Networks for 3D Reconstruction \nX-GANs - X-GANs: Image Reconstruction Made Easy for Extreme Cases\nXGAN - XGAN: Unsupervised Image-to-Image Translation for many-to-many Mappings\nZipNet-GAN - ZipNet-GAN: Inferring Fine-grained Mobile Traffic Patterns via a Generative Adversarial Neural Network\n\u03b1-GAN - Variational Approaches for Auto-Encoding Generative Adversarial Networks (github)\n\u03b2-GAN - Annealed Generative Adversarial Networks\n\u0394-GAN - Triangle Generative Adversarial Networks\n\n","207":"Fast Style Transfer in TensorFlow\nAdd styles from famous paintings to any photo in a fraction of a second! You can even style videos!\n\n\n\n\n\n\nIt takes 100ms on a 2015 Titan X to style the MIT Stata Center (1024\u00d7680) like Udnie, by Francis Picabia.\n\nOur implementation is based off of a combination of Gatys' A Neural Algorithm of Artistic Style, Johnson's Perceptual Losses for Real-Time Style Transfer and Super-Resolution, and Ulyanov's Instance Normalization.\nSponsorship\nPlease consider sponsoring my work on this project!\nLicense\nCopyright (c) 2016 Logan Engstrom. Contact me for commercial use (or rather any use that is not academic research) (email: engstrom at my university's domain dot edu). Free for research use, as long as proper attribution is given and this copyright notice is retained.\nVideo Stylization\nHere we transformed every frame in a video, then combined the results. Click to go to the full demo on YouTube! The style here is Udnie, as above.\n\n\n\n\n\nSee how to generate these videos here!\nImage Stylization\nWe added styles from various paintings to a photo of Chicago. Click on thumbnails to see full applied style images.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImplementation Details\nOur implementation uses TensorFlow to train a fast style transfer network. We use roughly the same transformation network as described in Johnson, except that batch normalization is replaced with Ulyanov's instance normalization, and the scaling\/offset of the output tanh layer is slightly different. We use a loss function close to the one described in Gatys, using VGG19 instead of VGG16 and typically using \"shallower\" layers than in Johnson's implementation (e.g. we use relu1_1 rather than relu1_2). Empirically, this results in larger scale style features in transformations.\nVitual Environment Setup (Anaconda) - Windows\/Linux\nTested on\n\n\n\nSpec\n\n\n\n\n\nOperating System\nWindows 10 Home\n\n\nGPU\nNvidia GTX 2080 TI\n\n\nCUDA Version\n11.0\n\n\nDriver Version\n445.75\n\n\n\nStep 1\uff1aInstall Anaconda\nhttps:\/\/docs.anaconda.com\/anaconda\/install\/\nStep 2\uff1aBuild a virtual environment\nRun the following commands in sequence in Anaconda Prompt:\nconda create -n tf-gpu tensorflow-gpu=2.1.0\nconda activate tf-gpu\nconda install jupyterlab\njupyter lab\n\nRun the following command in the notebook or just conda install the package:\n!pip install moviepy==1.0.2\n\nFollow the commands below to use fast-style-transfer\nDocumentation\nTraining Style Transfer Networks\nUse style.py to train a new style transfer network. Run python style.py to view all the possible parameters. Training takes 4-6 hours on a Maxwell Titan X. More detailed documentation here. Before you run this, you should run setup.sh. Example usage:\npython style.py --style path\/to\/style\/img.jpg \\\n  --checkpoint-dir checkpoint\/path \\\n  --test path\/to\/test\/img.jpg \\\n  --test-dir path\/to\/test\/dir \\\n  --content-weight 1.5e1 \\\n  --checkpoint-iterations 1000 \\\n  --batch-size 20\n\nEvaluating Style Transfer Networks\nUse evaluate.py to evaluate a style transfer network. Run python evaluate.py to view all the possible parameters. Evaluation takes 100 ms per frame (when batch size is 1) on a Maxwell Titan X. More detailed documentation here. Takes several seconds per frame on a CPU. Models for evaluation are located here. Example usage:\npython evaluate.py --checkpoint path\/to\/style\/model.ckpt \\\n  --in-path dir\/of\/test\/imgs\/ \\\n  --out-path dir\/for\/results\/\n\nStylizing Video\nUse transform_video.py to transfer style into a video. Run python transform_video.py to view all the possible parameters. Requires ffmpeg. More detailed documentation here. Example usage:\npython transform_video.py --in-path path\/to\/input\/vid.mp4 \\\n  --checkpoint path\/to\/style\/model.ckpt \\\n  --out-path out\/video.mp4 \\\n  --device \/gpu:0 \\\n  --batch-size 4\n\nRequirements\nYou will need the following to run the above:\n\nTensorFlow 0.11.0\nPython 2.7.9, Pillow 3.4.2, scipy 0.18.1, numpy 1.11.2\nIf you want to train (and don't want to wait for 4 months):\n\nA decent GPU\nAll the required NVIDIA software to run TF on a GPU (cuda, etc)\n\n\nffmpeg 3.1.3 if you want to stylize video\n\nCitation\n  @misc{engstrom2016faststyletransfer,\n    author = {Logan Engstrom},\n    title = {Fast Style Transfer},\n    year = {2016},\n    howpublished = {\\url{https:\/\/github.com\/lengstrom\/fast-style-transfer\/}},\n    note = {commit xxxxxxx}\n  }\n\nAttributions\/Thanks\n\nThis project could not have happened without the advice (and GPU access) given by Anish Athalye.\n\nThe project also borrowed some code from Anish's Neural Style\n\n\nSome readme\/docs formatting was borrowed from Justin Johnson's Fast Neural Style\nThe image of the Stata Center at the very beginning of the README was taken by Juan Paulo\n\nRelated Work\n\nMichael Ramos ported this network to use CoreML on iOS\n\n","208":"\nNeural Doodle\n\nUse a deep neural network to borrow the skills of real artists and turn your two-bit doodles into masterpieces! This project is an implementation of Semantic Style Transfer (Champandard, 2016), based on the Neural Patches algorithm (Li, 2016). Read more about the motivation in this in-depth article and watch this workflow video for inspiration.\nThe doodle.py script generates a new image by using one, two, three or four images as inputs depending what you're trying to do: the original style and its annotation, and a target content image (optional) with its annotation (a.k.a. your doodle). The algorithm extracts annotated patches from the style image, and incrementally transfers them over to the target image based on how closely they match.\nNOTE: Making a #NeuralDoodle is a skill. The parameters in the script were adjusted to work well by default and with the examples below. For new images, you may need to adjust values and modify on your input data too. It takes practice, but you can reach almost photo-realistic results if you iterate! (Ask for advice here or see examples.)\n\nExamples & Usage\nInstallation\nTroubleshooting\nFrequent Questions\n\nIMPORTANT: This project is possible thanks to the nucl.ai Conference on Creative AI, July 18-20. Join us in Vienna!\n\n \n \n\n\n\n1. Examples & Usage\nThe main script is called doodle.py, which you can run with Python 3.4+ (see setup below).  The --device argument that lets you specify which GPU or CPU to use. For the samples above, here are the performance results:\n\nGPU Rendering \u2014 Assuming you have CUDA setup and enough on-board RAM, the process should complete in 3 to 8 minutes, even with twice the iteration count.\nCPU Rendering \u2014 This will take hours and hours, even up to 12h on older hardware. To match quality it'd take twice the time. Do multiple runs in parallel!\n\nThe default is to use cpu, if you have NVIDIA card setup with CUDA already try gpu0. On the CPU, you can also set environment variable to OMP_NUM_THREADS=4, but we've found the speed improvements to be minimal.\n\n1.a) Image Analogy\nThe algorithm is built for style transfer, but can also generate image analogies that we call a #NeuralDoodle; use the hashtag if you post your images!  Example files are included in the #\/samples\/ folder. Execute with these commands:\n# Synthesize a coastline as if painted by Monet. This uses \"*_sem.png\" masks for both images.\npython3 doodle.py --style samples\/Monet.jpg --output samples\/Coastline.png \\\n                  --device=cpu --iterations=40\n\n# Generate a scene around a lake in the style of a Renoir painting.\npython3 doodle.py --style samples\/Renoir.jpg --output samples\/Landscape.png \\\n                  --device=gpu0 --iterations=80\nNotice the Renoir results look a little better than the Monet. Some rotational variations of the source image could improve the quality of the arch outline in particular.\n\n1.b) Style Transfer\nIf you want to transfer the style given a source style with annotations, and a target content image with annotations, you can use the following command lines.  In all cases, the semantic map is loaded and used if it's found under the *_sem.png filename that matches the input file.\n# Synthesize a portrait of Seth Johnson like a Gogh portrait. This uses \"*_sem.png\" masks for both images.\npython3 doodle.py --style samples\/Gogh.jpg --content samples\/Seth.png \\\n                  --output SethAsGogh.png --device=cpu --phases=4 --iterations=40\n\n# Generate what a photo of Vincent van Gogh would look like, using Seth's portrait as reference.\npython3 doodle.py --style samples\/Seth.jpg --content samples\/Gogh.png \\\n                  --output GoghAsSeth.png --device=gpu0 --phases=4 --iterations=80\nTo perform regular style transfer without semantic annotations, simply delete or rename the files with the semantic maps.  The photo is originally by Seth Johnson, and the concept for this style transfer by Kyle McDonald.\n\n\n1.c) Texture Synthesis\nFor synthesizing bitmap textures, you only need an input style without anotations and without target output.  In this case, you simply specify one input style image and the output file as follows:\n# First synthesis uses a darker noise pattern as seed.\npython3 doodle.py --style samples\/Wall.jpg --output Wall.png\\\n                  --seed=noise --seed-range=0:128 --iterations=50 --phases=3\n\n# Second synthesis uses a lighter noise pattern as seed.\npython3 doodle.py --style samples\/Wall.jpg --output Wall.png\\\n                  --seed=noise --seed-range=192:255 --iterations=50 --phases=3\nYou can also control the output resolution using --output-size=512x512 parameter\u2014which also depends on the memory you have available. By default the size will be the same as the style image.\n\n\n1.d) Script Parameters\nYou can configure the algorithm using the following parameters. Type python3 doodle.py --help for the full list of options, or see the source code.\n\n--style-weight=50.0 \u2014 Weight of style relative to content.\n--style-layers=3_1,4_1 \u2014 The layers to match style patches.\n--semantic-weight=1.0 \u2014 Global weight of semantics vs. features.\n--smoothness=1.0 \u2014 Weight of image smoothing scheme.\n--seed=noise \u2014 Seed image path, \"noise\" or \"content\".\n--print-every=10 \u2014 How often to log statistics to stdout.\n--save-every=10 \u2014 How frequently to save PNG into frames.\n\n\n2. Installation & Setup\n\n\n2.a) Using Docker Image (recommended)\nThe easiest way to get up-and-running is to install Docker. Then, you should be able to downloand and run the pre-built image using the docker command line tool.  Find out more about the alexjc\/neural-doodle image on its Docker Hub page.\nThe easiest way to run the script from the docker image is to setup an easy access command called doodle. This will automatically:\n\nMount the frames folder from current directory into the instance for visualization.\nExpose the samples folder from the current directory so the script can access files!\n\nThis is how you can do it in your terminal console on OSX or Linux:\n# Setup the alias. Put this in your .bash_rc or .zshrc file so it's available at startup.\nalias doodle=\"docker run -v $(pwd)\/samples:\/nd\/samples -v $(pwd)\/frames:\/nd\/frames \\\n                         -it alexjc\/neural-doodle\"\n\n# Now run any of the examples above using this alias, without the `.py` extension.\ndoodle --help\nIf you want to run on your NVIDIA GPU, you can instead use the image alexjc\/neural-doodle:gpu which comes with CUDA and CUDNN pre-installed in the image.  See the scripts in docker\/*.sh for how to setup your host machine. (advanced)\n\n2.b) Manual Installation (optional)\nThis project requires Python 3.4+ and you'll also need numpy and scipy (numerical computing libraries) as well as python3-dev installed system-wide.  If you want more detailed instructions, follow these:\n\nLinux Installation of Lasagne (intermediate)\nMac OSX Installation of Lasagne (advanced)\nWindows Installation of Lasagne (expert)\n\nAfterward fetching the repository, you can run the following commands from your terminal to setup a local environment:\n# Create a local environment for Python 3.x to install dependencies here.\npython3 -m venv pyvenv --system-site-packages\n\n# If you're using bash, make this the active version of Python.\nsource pyvenv\/bin\/activate\n\n# Setup the required dependencies simply using the PIP module.\npython3 -m pip install --ignore-installed -r requirements.txt\nAfter this, you should have scikit-image, theano and lasagne installed in your virtual environment.  You'll also need to download this pre-trained neural network (VGG19, 80Mb) and put it in the same folder as the script to run. Once you're done you can just delete the #\/pyvenv\/ folder.\n\n\n3. Troubleshooting Problems\n\nIt's running out of GPU Ram, throwing MemoryError. Help!\nYou'll need a good NVIDIA card with CUDA to run this software on GPU, ideally 2Gb \/ 4Gb or better still, 8Gb to 12Gb for larger resolutions.  The code does work on CPU by default, so use that as fallback since you likely have more system RAM!\nTo improve memory consumption, you can also install NVIDIA's cudnn library version 3.0 or 4.0. This allows convolutional neural networks to run faster and save space in GPU RAM.\nFIX: Use --device=cpu to use main system memory.\n\nHow much GPU is being used? It doesn't seem very fast...\nFirst make sure CUDA is installed correctly and environment variables are set, then reinstall theano.  If everything is setup correctly, the GPU should be used regularly as the gradient calculations are offloaded. If you run NVIDIA's monitoring tool it looks something like this:\nThe third column is the utilitazition of compute resources, and the fourth column is the use of memory.  If memory is under-used you can increase resolution!  If compute is under allocated too you can try running multiple scripts in parallel!\nFIX: Run nvidia-smi dmon and check the sm column.\n\nCan't install or Unable to find pgen, not compiling formal grammar.\nThere's a Python extension compiler called Cython, and it's missing or inproperly installed. Try getting it directly from the system package manager rather than PIP.\nFIX: sudo apt-get install cython3\n\nNotImplementedError: AbstractConv2d theano optimization failed.\nThis happens when you're running without a GPU, and the CPU libraries were not found (e.g. libblas).  The neural network expressions cannot be evaluated by Theano and it's raising an exception.\nFIX: sudo apt-get install libblas-dev libopenblas-dev\n\nTypeError: max_pool_2d() got an unexpected keyword argument 'mode'\nYou need to install Lasagne and Theano directly from the versions specified in requirements.txt, rather than from the PIP versions.  These alternatives are older and don't have the required features.\nFIX: python3 -m pip install -r requirements.txt\n\nValueError: unknown locale: UTF-8\nIt seems your terminal is misconfigured and not compatible with the way Python treats locales. You may need to change this in your .bash_rc or other startup script. Alternatively, this command will fix it once for this shell instance.\nFIX: export LC_ALL=en_US.UTF-8\n\nERROR: The optimization diverged and NaNs were encountered.\nIt's possible there's a platform bug in the underlying libraries or compiler, which has been reported on MacOS El Capitan.  It's not clear how to fix it, but you can try to disable optimizations to prevent the bug. (See Issue #8.)\nFIX: Use --safe-mode flag to disable optimizations.\n\n4. Frequent Questions\n\nQ: When will this be possible in realtime? I want it as filter!\nRelated algorithms have shown this is possible in realtime\u2014if you're willing to accept slightly lower quality:\n\nTexture Networks: Feed-forward Synthesis of Textures and Stylized Images\nPerceptual Losses for Real-Time Style Transfer and Super-Resolution\nPrecomputed Real-Time Texture Synthesis with Markovian Generative Adversarial Networks\n\nThis project is not designed for real-time use, the focus is on quality.  The code in this repository is ideal for training realtime capable networks.\n\nQ: Is there an application for this? I want to download it!\nThere are many online services that provide basic style transfer with neural networks. We run @DeepForger, a Twitter & Facebook bot with web interface, that can take your requests too.  It takes time to make forgeries, so there's a queue... be patient!\n\n\n \n \n","209":"\n\n\n\nTFLearn: Deep learning library featuring a higher-level API for TensorFlow.\nTFlearn is a modular and transparent deep learning library built on top of Tensorflow.  It was designed to provide a higher-level API to TensorFlow in order to facilitate and speed-up experimentations, while remaining fully transparent and compatible with it.\nTFLearn features include:\n\nEasy-to-use and understand high-level API for implementing deep neural networks, with tutorial and examples.\nFast prototyping through highly modular built-in neural network layers, regularizers, optimizers, metrics...\nFull transparency over Tensorflow. All functions are built over tensors and can be used independently of TFLearn.\nPowerful helper functions to train any TensorFlow graph, with support of multiple inputs, outputs and optimizers.\nEasy and beautiful graph visualization, with details about weights, gradients, activations and more...\nEffortless device placement for using multiple CPU\/GPU.\n\nThe high-level API currently supports most of recent deep learning models, such as Convolutions, LSTM, BiRNN, BatchNorm, PReLU, Residual networks, Generative networks... In the future, TFLearn is also intended to stay up-to-date with latest deep learning techniques.\nNote: Latest TFLearn (v0.5) is only compatible with TensorFlow v2.0 and over.\nOverview\n# Classification\ntflearn.init_graph(num_cores=8, gpu_memory_fraction=0.5)\n\nnet = tflearn.input_data(shape=[None, 784])\nnet = tflearn.fully_connected(net, 64)\nnet = tflearn.dropout(net, 0.5)\nnet = tflearn.fully_connected(net, 10, activation='softmax')\nnet = tflearn.regression(net, optimizer='adam', loss='categorical_crossentropy')\n\nmodel = tflearn.DNN(net)\nmodel.fit(X, Y)\n# Sequence Generation\nnet = tflearn.input_data(shape=[None, 100, 5000])\nnet = tflearn.lstm(net, 64)\nnet = tflearn.dropout(net, 0.5)\nnet = tflearn.fully_connected(net, 5000, activation='softmax')\nnet = tflearn.regression(net, optimizer='adam', loss='categorical_crossentropy')\n\nmodel = tflearn.SequenceGenerator(net, dictionary=idx, seq_maxlen=100)\nmodel.fit(X, Y)\nmodel.generate(50, temperature=1.0)\nThere are many more examples available here.\nCompatibility\nTFLearn is based on the original tensorflow v1 graph API. When using TFLearn, make sure to import tensorflow that way:\nimport tflearn\nimport tensorflow.compat.v1 as tf\n\nInstallation\nTensorFlow Installation\nTFLearn requires Tensorflow (version 2.0+) to be installed.\nTo install TensorFlow, simply run:\npip install tensorflow\n\nor, with GPU-support:\npip install tensorflow-gpu\n\nFor more details see TensorFlow installation instructions\nTFLearn Installation\nTo install TFLearn, the easiest way is to run\nFor the bleeding edge version (recommended):\npip install git+https:\/\/github.com\/tflearn\/tflearn.git\nFor the latest stable version:\npip install tflearn\nOtherwise, you can also install from source by running (from source folder):\npython setup.py install\n\nFor more details, please see the Installation Guide.\n\nGetting Started\nSee Getting Started with TFLearn to learn about TFLearn basic functionalities or start browsing TFLearn Tutorials.\nExamples\nThere are many neural network implementation available, see Examples.\nDocumentation\nhttp:\/\/tflearn.org\/doc_index\nModel Visualization\nGraph\n\nLoss & Accuracy (multiple runs)\n\nLayers\n\nContributions\nThis is the first release of TFLearn, if you find any bug, please report it in the GitHub issues section.\nImprovements and requests for new features are more than welcome! Do not hesitate to twist and tweak TFLearn, and send pull-requests.\nFor more info: Contribute to TFLearn.\nLicense\nMIT License\n","210":"\nMypy: Optional Static Typing for Python\n\n\n\nGot a question? Join us on Gitter!\nWe don't have a mailing list; but we are always happy to answer\nquestions on gitter chat.  If you are\nsure you've found a bug please search our issue trackers for a\nduplicate before filing a new issue:\n\nmypy tracker\nfor mypy issues\ntypeshed tracker\nfor issues with specific modules\ntyping tracker\nfor discussion of new type system features (PEP 484 changes) and\nruntime bugs in the typing module\n\nWhat is mypy?\nMypy is an optional static type checker for Python.  You can add type\nhints (PEP 484) to your\nPython programs, and use mypy to type check them statically.\nFind bugs in your programs without even running them!\nYou can mix dynamic and static typing in your programs. You can always\nfall back to dynamic typing when static typing is not convenient, such\nas for legacy code.\nHere is a small example to whet your appetite (Python 3):\nfrom typing import Iterator\n\ndef fib(n: int) -> Iterator[int]:\n    a, b = 0, 1\n    while a < n:\n        yield a\n        a, b = b, a + b\nSee the documentation for more examples.\nFor Python 2.7, the standard annotations are written as comments:\ndef is_palindrome(s):\n    # type: (str) -> bool\n    return s == s[::-1]\nSee the documentation for Python 2 support.\nMypy is in development; some features are missing and there are bugs.\nSee 'Development status' below.\nRequirements\nYou need Python 3.5 or later to run mypy.  You can have multiple Python\nversions (2.x and 3.x) installed on the same system without problems.\nIn Ubuntu, Mint and Debian you can install Python 3 like this:\n$ sudo apt-get install python3 python3-pip\n\nFor other Linux flavors, macOS and Windows, packages are available at\nhttps:\/\/www.python.org\/getit\/\nQuick start\nMypy can be installed using pip:\n$ python3 -m pip install -U mypy\n\nIf you want to run the latest version of the code, you can install from git:\n$ python3 -m pip install -U git+git:\/\/github.com\/python\/mypy.git\n\nNow, if Python on your system is configured properly (else see\n\"Troubleshooting\" below), you can type-check the statically typed parts of a\nprogram like this:\n$ mypy PROGRAM\n\nYou can always use a Python interpreter to run your statically typed\nprograms, even if they have type errors:\n$ python3 PROGRAM\n\nYou can also try mypy in an online playground (developed by\nYusuke Miyazaki).\nIDE, Linter Integrations, and Pre-commit\nMypy can be integrated into popular IDEs:\n\nVim:\n\nUsing Syntastic: in ~\/.vimrc add\nlet g:syntastic_python_checkers=['mypy']\nUsing ALE: should be enabled by default when mypy is installed,\nor can be explicitly enabled by adding let b:ale_linters = ['mypy'] in ~\/vim\/ftplugin\/python.vim\n\n\nEmacs: using Flycheck and Flycheck-mypy\nSublime Text: SublimeLinter-contrib-mypy\nAtom: linter-mypy\nPyCharm: mypy plugin (PyCharm integrates\nits own implementation of PEP 484)\nVS Code: provides basic integration with mypy.\n\nMypy can also be set up as a pre-commit hook using pre-commit mirrors-mypy.\nWeb site and documentation\nDocumentation and additional information is available at the web site:\nhttp:\/\/www.mypy-lang.org\/\nOr you can jump straight to the documentation:\nhttps:\/\/mypy.readthedocs.io\/\nTroubleshooting\nDepending on your configuration, you may have to run pip like\nthis:\n$ python3 -m pip install -U mypy\n\nThis should automatically install the appropriate version of\nmypy's parser, typed-ast.  If for some reason it does not, you\ncan install it manually:\n$ python3 -m pip install -U typed-ast\n\nIf the mypy command isn't found after installation: After\npython3 -m pip install, the mypy script and\ndependencies, including the typing module, will be installed to\nsystem-dependent locations.  Sometimes the script directory will not\nbe in PATH, and you have to add the target directory to PATH\nmanually or create a symbolic link to the script.  In particular, on\nmacOS, the script may be installed under \/Library\/Frameworks:\n\/Library\/Frameworks\/Python.framework\/Versions\/<version>\/bin\n\nIn Windows, the script is generally installed in\n\\PythonNN\\Scripts. So, type check a program like this (replace\n\\Python34 with your Python installation path):\nC:\\>\\Python34\\python \\Python34\\Scripts\\mypy PROGRAM\n\nWorking with virtualenv\nIf you are using virtualenv,\nmake sure you are running a python3 environment. Installing via pip3\nin a v2 environment will not configure the environment to run installed\nmodules from the command line.\n$ python3 -m pip install -U virtualenv\n$ python3 -m virtualenv env\n\nQuick start for contributing to mypy\nIf you want to contribute, first clone the mypy git repository:\n$ git clone --recurse-submodules https:\/\/github.com\/python\/mypy.git\n\nIf you've already cloned the repo without --recurse-submodules,\nyou need to pull in the typeshed repo as follows:\n$ git submodule init\n$ git submodule update\n\nEither way you should now have a subdirectory typeshed inside your mypy repo,\nyour folders tree should be like mypy\/mypy\/typeshed, containing a\nclone of the typeshed repo (https:\/\/github.com\/python\/typeshed).\nFrom the mypy directory, use pip to install mypy:\n$ cd mypy\n$ python3 -m pip install -U .\n\nReplace python3 with your Python 3 interpreter.  You may have to do\nthe above as root. For example, in Ubuntu:\n$ sudo python3 -m pip install -U .\n\nNow you can use the mypy program just as above.  In case of trouble\nsee \"Troubleshooting\" above.\n\nNOTE: Installing with sudo can be a security risk, please try with flag --user first.\n$ python3 -m pip install --user -U .\n\nWorking with the git version of mypy\nmypy contains a submodule, \"typeshed\". See https:\/\/github.com\/python\/typeshed.\nThis submodule contains types for the Python standard library.\nDue to the way git submodules work, you'll have to do\n  git submodule update mypy\/typeshed\n\nwhenever you change branches, merge, rebase, or pull.\n(It's possible to automate this: Search Google for \"git hook update submodule\")\nTests\nThe basic way to run tests:\n$ pip3 install -r test-requirements.txt\n$ python2 -m pip install -U typing\n$ .\/runtests.py\n\nFor more on the tests, such as how to write tests and how to control\nwhich tests to run, see Test README.md.\nDevelopment status\nMypy is beta software, but it has already been used in production\nfor several years at Dropbox, and it has an extensive test suite.\nSee the roadmap if you are interested in plans for the\nfuture.\nChangelog\nFollow mypy's updates on the blog: https:\/\/mypy-lang.blogspot.com\/\nIssue tracker\nPlease report any bugs and enhancement ideas using the mypy issue\ntracker: https:\/\/github.com\/python\/mypy\/issues\nIf you have any questions about using mypy or types, please ask\nin the typing gitter instead: https:\/\/gitter.im\/python\/typing\nCompiled version of mypy\nWe have built a compiled version of mypy using the mypyc\ncompiler for\nmypy-annotated Python code. It is approximately 4 times faster than\ninterpreted mypy and is available (and the default) for 64-bit\nWindows, macOS, and Linux.\nTo install an interpreted mypy instead, use:\n$ python3 -m pip install --no-binary mypy -U mypy\n\nIf you wish to test out the compiled version of a development\nversion of mypy, you can directly install a binary from\nhttps:\/\/github.com\/mypyc\/mypy_mypyc-wheels\/releases\/latest.\nHelp wanted\nAny help in testing, development, documentation and other tasks is\nhighly appreciated and useful to the project. There are tasks for\ncontributors of all experience levels. If you're just getting started,\nask on the gitter chat for ideas of good\nbeginner issues.\nFor more details, see the file CONTRIBUTING.md.\nLicense\nMypy is licensed under the terms of the MIT License (see the file\nLICENSE).\n","211":"\n\n\n\n\n\n\n\n\n\nDocumentation | Paper | Colab Notebooks | External Resources | OGB Examples\nPyTorch Geometric (PyG) is a geometric deep learning extension library for PyTorch.\nIt consists of various methods for deep learning on graphs and other irregular structures, also known as geometric deep learning, from a variety of published papers.\nIn addition, it consists of an easy-to-use mini-batch loader for many small and single giant graphs, multi gpu-support, a large number of common benchmark datasets (based on simple interfaces to create your own), and helpful transforms, both for learning on arbitrary graphs as well as on 3D meshes or point clouds.\nClick here to join our Slack community!\n\nPyTorch Geometric makes implementing Graph Neural Networks a breeze (see here for the accompanying tutorial).\nFor example, this is all it takes to implement the edge convolutional layer:\nimport torch\nfrom torch.nn import Sequential as Seq, Linear as Lin, ReLU\nfrom torch_geometric.nn import MessagePassing\n\nclass EdgeConv(MessagePassing):\n    def __init__(self, F_in, F_out):\n        super(EdgeConv, self).__init__(aggr='max')  # \"Max\" aggregation.\n        self.mlp = Seq(Lin(2 * F_in, F_out), ReLU(), Lin(F_out, F_out))\n\n    def forward(self, x, edge_index):\n        # x has shape [N, F_in]\n        # edge_index has shape [2, E]\n        return self.propagate(edge_index, x=x)  # shape [N, F_out]\n\n    def message(self, x_i, x_j):\n        # x_i has shape [E, F_in]\n        # x_j has shape [E, F_in]\n        edge_features = torch.cat([x_i, x_j - x_i], dim=1)  # shape [E, 2 * F_in]\n        return self.mlp(edge_features)  # shape [E, F_out]\nIn detail, the following methods are currently implemented:\n\nSplineConv from Fey et al.: SplineCNN: Fast Geometric Deep Learning with Continuous B-Spline Kernels (CVPR 2018) [Example1, Example2]\nGCNConv from Kipf and Welling: Semi-Supervised Classification with Graph Convolutional Networks (ICLR 2017) [Example]\nGCN2Conv from Chen et al.: Simple and Deep Graph Convolutional Networks (ICML 2020) [Example1, Example2]\nChebConv from Defferrard et al.: Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering (NIPS 2016) [Example]\nNNConv from Gilmer et al.: Neural Message Passing for Quantum Chemistry (ICML 2017) [Example1, Example2]\nCGConv from Xie and Grossman: Crystal Graph Convolutional Neural Networks for an Accurate and Interpretable Prediction of Material Properties (Physical Review Letters 120, 2018)\nECConv from Simonovsky and Komodakis: Edge-Conditioned Convolution on Graphs (CVPR 2017)\nGATConv from Veli\u010dkovi\u0107 et al.: Graph Attention Networks (ICLR 2018) [Example]\nTransformerConv from Shi et al.: Masked Label Prediction: Unified Message Passing Model for Semi-Supervised Classification (CoRR 2020)\nSAGEConv from Hamilton et al.: Inductive Representation Learning on Large Graphs (NIPS 2017) [Example1, Example2, Example3]\nGraphConv from, e.g., Morris et al.: Weisfeiler and Leman Go Neural: Higher-order Graph Neural Networks (AAAI 2019)\nGatedGraphConv from Li et al.: Gated Graph Sequence Neural Networks (ICLR 2016)\nGINConv from Xu et al.: How Powerful are Graph Neural Networks? (ICLR 2019) [Example]\nGINEConv from Hu et al.: Strategies for Pre-training Graph Neural Networks (ICLR 2020)\nARMAConv from Bianchi et al.: Graph Neural Networks with Convolutional ARMA Filters (CoRR 2019) [Example]\nSGConv from Wu et al.: Simplifying Graph Convolutional Networks (CoRR 2019) [Example]\nAPPNP from Klicpera et al.: Predict then Propagate: Graph Neural Networks meet Personalized PageRank (ICLR 2019) [Example]\nMFConv from Duvenaud et al.: Convolutional Networks on Graphs for Learning Molecular Fingerprints (NIPS 2015)\nAGNNConv from Thekumparampil et al.: Attention-based Graph Neural Network for Semi-Supervised Learning (CoRR 2017) [Example]\nTAGConv from Du et al.: Topology Adaptive Graph Convolutional Networks (CoRR 2017) [Example]\nPNAConv from Corso et al.: Principal Neighbourhood Aggregation for Graph Nets (CoRR 2020) [Example]\nRGCNConv from Schlichtkrull et al.: Modeling Relational Data with Graph Convolutional Networks (ESWC 2018) [Example]\nSignedConv from Derr et al.: Signed Graph Convolutional Network (ICDM 2018) [Example]\nDNAConv from Fey: Just Jump: Dynamic Neighborhood Aggregation in Graph Neural Networks (ICLR-W 2019) [Example]\nPointConv (including Iterative Farthest Point Sampling, dynamic graph generation based on nearest neighbor or maximum distance, and k-NN interpolation for upsampling) from Qi et al.: PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation (CVPR 2017) and PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space (NIPS 2017) [Example1, Example2]\nEdgeConv from Wang et al.: Dynamic Graph CNN for Learning on Point Clouds (CoRR, 2018) [Example1, Example2]\nXConv from Li et al.: PointCNN: Convolution On X-Transformed Points (NeurIPS 2018) [Example]\nPPFConv from Deng et al.: PPFNet: Global Context Aware Local Features for Robust 3D Point Matching (CVPR 2018)\nGMMConv from Monti et al.: Geometric Deep Learning on Graphs and Manifolds using Mixture Model CNNs (CVPR 2017)\nFeaStConv from Verma et al.: FeaStNet: Feature-Steered Graph Convolutions for 3D Shape Analysis (CVPR 2018)\nHypergraphConv from Bai et al.: Hypergraph Convolution and Hypergraph Attention (CoRR 2019)\nGravNetConv from Qasim et al.: Learning Representations of Irregular Particle-detector Geometry with Distance-weighted Graph Networks (European Physics Journal C, 2019)\nA MetaLayer for building any kind of graph network similar to the TensorFlow Graph Nets library from Battaglia et al.: Relational Inductive Biases, Deep Learning, and Graph Networks (CoRR 2018)\nGlobalAttention from Li et al.: Gated Graph Sequence Neural Networks (ICLR 2016) [Example]\nSet2Set from Vinyals et al.: Order Matters: Sequence to Sequence for Sets (ICLR 2016) [Example]\nSort Pool from Zhang et al.: An End-to-End Deep Learning Architecture for Graph Classification (AAAI 2018) [Example]\nDense Differentiable Pooling from Ying et al.: Hierarchical Graph Representation Learning with Differentiable Pooling (NeurIPS 2018) [Example]\nDense MinCUT Pooling from Bianchi et al.: MinCUT Pooling in Graph Neural Networks (CoRR 2019) [Example]\nGraclus Pooling from Dhillon et al.: Weighted Graph Cuts without Eigenvectors: A Multilevel Approach (PAMI 2007) [Example]\nVoxel Grid Pooling from, e.g., Simonovsky and Komodakis: Dynamic Edge-Conditioned Filters in Convolutional Neural Networks on Graphs (CVPR 2017) [Example]\nTop-K Pooling from Gao and Ji: Graph U-Nets (ICML 2019), Cangea et al.: Towards Sparse Hierarchical Graph Classifiers (NeurIPS-W 2018) and Knyazev et al.: Understanding Attention and Generalization in Graph Neural Networks (ICLR-W 2019) [Example]\nSAG Pooling from Lee et al.: Self-Attention Graph Pooling (ICML 2019) and Knyazev et al.: Understanding Attention and Generalization in Graph Neural Networks (ICLR-W 2019) [Example]\nEdge Pooling from Diehl et al.: Towards Graph Pooling by Edge Contraction (ICML-W 2019) and Diehl: Edge Contraction Pooling for Graph Neural Networks (CoRR 2019) [Example]\nASAPooling from Ranjan et al.: ASAP: Adaptive Structure Aware Pooling for Learning Hierarchical Graph Representations (AAAI 2020) [Example]\nLocal Degree Profile from Cai and Wang: A Simple yet Effective Baseline for Non-attribute Graph Classification (CoRR 2018)\nJumping Knowledge from Xu et al.: Representation Learning on Graphs with Jumping Knowledge Networks (ICML 2018) [Example]\nNode2Vec from Grover and Leskovec: node2vec: Scalable Feature Learning for Networks (KDD 2016) [Example]\nMetaPath2Vec from Dong et al.: metapath2vec: Scalable Representation Learning for Heterogeneous Networks (KDD 2017) [Example]\nDeep Graph Infomax from Veli\u010dkovi\u0107 et al.: Deep Graph Infomax (ICLR 2019) [Example]\nAll variants of Graph Autoencoders and Variational Autoencoders from:\n\nVariational Graph Auto-Encoders from Kipf and Welling (NIPS-W 2016) [Example]\nAdversarially Regularized Graph Autoencoder for Graph Embedding from Pan et al. (IJCAI 2018) [Example]\nSimple and Effective Graph Autoencoders with One-Hop Linear Models from Salha et al. (ECML 2020) [Example]\n\n\nSEAL from Zhang and Chen: Link Prediction Based on Graph Neural Networks (NeurIPS 2018)\nRENet from Jin et al.: Recurrent Event Network for Reasoning over Temporal Knowledge Graphs (ICLR-W 2019) [Example]\nGraphUNet from Gao and Ji: Graph U-Nets (ICML 2019) [Example]\nSchNet from Sch\u00fctt et al.: SchNet: A Continuous-filter Convolutional Neural Network for Modeling Quantum Interactions (NIPS 2017) [Example]\nDimeNet from Klicpera et al.: Directional Message Passing for Molecular Graphs (ICLR 2020) [Example]\nDeepGCN and the GENConv from Li et al.: DeepGCNs: Can GCNs Go as Deep as CNNs? (ICCV 2019) and DeeperGCN: All You Need to Train Deeper GCNs (CoRR 2020) [Example]\nNeighborSampler from Hamilton et al.: Inductive Representation Learning on Large Graphs (NIPS 2017) [Example1, Example2, Example3]\nClusterGCN from Chiang et al.: Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks (KDD 2019) [Example1, Example2]\nGraphSAINT from Zeng et al.: GraphSAINT: Graph Sampling Based Inductive Learning Method (ICLR 2020) [Example]\nGDC from Klicpera et al.: Diffusion Improves Graph Learning (NeurIPS 2019) [Example]\nSIGN from Rossi et al.: SIGN: Scalable Inception Graph Neural Networks (CoRR 2020) [Example]\nGraphSizeNorm from Dwivedi et al.: Benchmarking Graph Neural Networks (CoRR 2020)\nGNNExplainer from Ying et al.: GNNExplainer: Generating Explanations for Graph Neural Networks (NeurIPS 2019) [Example]\nDropEdge from Rong et al.: DropEdge: Towards Deep Graph Convolutional Networks on Node Classification (ICLR 2020)\nPairNorm from Zhao and Akoglu: PairNorm: Tackling Oversmoothing in GNNs (ICLR 2020)\nTree Decomposition from Jin et al.: Junction Tree Variational Autoencoder for Molecular Graph Generation (ICML 2018)\n\n\nHead over to our documentation to find out more about installation, data handling, creation of datasets and a full list of implemented methods, transforms, and datasets.\nFor a quick start, check out our examples in the examples\/ directory.\nIf you notice anything unexpected, please open an issue and let us know.\nIf you are missing a specific method, feel free to open a feature request.\nWe are motivated to constantly make PyTorch Geometric even better.\nInstallation\nWe provide pip wheels for all major OS\/PyTorch\/CUDA combinations, see here.\nPyTorch 1.7.0\nTo install the binaries for PyTorch 1.7.0, simply run\n$ pip install torch-scatter==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.7.0.html\n$ pip install torch-sparse==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.7.0.html\n$ pip install torch-cluster==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.7.0.html\n$ pip install torch-spline-conv==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.7.0.html\n$ pip install torch-geometric\nwhere ${CUDA} should be replaced by either cpu, cu92, cu101, cu102, or cu110 depending on your PyTorch installation.\n\n\n\n\ncpu\ncu92\ncu101\ncu102\ncu110\n\n\n\n\nLinux\n\u2705\n\u2705\n\u2705\n\u2705\n\u2705\n\n\nWindows\n\u2705\n\u274c\n\u2705\n\u2705\n\u2705\n\n\nmacOS\n\u2705\n\n\n\n\n\n\n\nPyTorch 1.6.0\nTo install the binaries for PyTorch 1.6.0, simply run\n$ pip install torch-scatter==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.6.0.html\n$ pip install torch-sparse==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.6.0.html\n$ pip install torch-cluster==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.6.0.html\n$ pip install torch-spline-conv==latest+${CUDA} -f https:\/\/pytorch-geometric.com\/whl\/torch-1.6.0.html\n$ pip install torch-geometric\nwhere ${CUDA} should be replaced by either cpu, cu92, cu101, or cu102 depending on your PyTorch installation.\n\n\n\n\ncpu\ncu92\ncu101\ncu102\n\n\n\n\nLinux\n\u2705\n\u2705\n\u2705\n\u2705\n\n\nWindows\n\u2705\n\u274c\n\u2705\n\u2705\n\n\nmacOS\n\u2705\n\n\n\n\n\n\nNote: Binaries of older versions are also provided for PyTorch 1.4.0 and PyTorch 1.5.0\/1.5.1 (following the same procedure).\nFrom master\nIn case you want to experiment with the latest PyG features which did not get released yet, you can install PyG from master via\npip install git+https:\/\/github.com\/rusty1s\/pytorch_geometric.git\n\nRunning examples\ncd examples\npython gcn.py\n\nCite\nPlease cite our paper (and the respective papers of the methods used) if you use this code in your own work:\n@inproceedings{Fey\/Lenssen\/2019,\n  title={Fast Graph Representation Learning with {PyTorch Geometric}},\n  author={Fey, Matthias and Lenssen, Jan E.},\n  booktitle={ICLR Workshop on Representation Learning on Graphs and Manifolds},\n  year={2019},\n}\n\nFeel free to email us if you wish your work to be listed in the external resources.\nRunning tests\n$ python setup.py test\n\n","212":"Natural Language Toolkit (NLTK)\n\n\nNLTK -- the Natural Language Toolkit -- is a suite of open source Python\nmodules, data sets, and tutorials supporting research and development in Natural\nLanguage Processing. NLTK requires Python version 3.5, 3.6, 3.7, or 3.8.\nFor documentation, please visit nltk.org.\nContributing\nDo you want to contribute to NLTK development? Great!\nPlease read CONTRIBUTING.md for more details.\nSee also how to contribute to NLTK.\nDonate\nHave you found the toolkit helpful?  Please support NLTK development by donating\nto the project via PayPal, using the link on the NLTK homepage.\nCiting\nIf you publish work that uses NLTK, please cite the NLTK book, as follows:\nBird, Steven, Edward Loper and Ewan Klein (2009).\nNatural Language Processing with Python.  O'Reilly Media Inc.\n\nCopyright\nCopyright (C) 2001-2020 NLTK Project\nFor license information, see LICENSE.txt.\nAUTHORS.md contains a list of everyone who has contributed to NLTK.\nRedistributing\n\nNLTK source code is distributed under the Apache 2.0 License.\nNLTK documentation is distributed under the Creative Commons\nAttribution-Noncommercial-No Derivative Works 3.0 United States license.\nNLTK corpora are provided under the terms given in the README file for each\ncorpus; all are redistributable and available for non-commercial use.\nNLTK may be freely redistributed, subject to the provisions of these licenses.\n\n","213":"\n\n\n\u25b6\ufe0f Demo\n\u25b6\ufe0f AI-generated Elon Musk\nOpen Avatarify\nPhotorealistic avatars for video-conferencing apps. Democratized.\nBased on First Order Motion Model.\nOpen Avatarify is not affiliated with Avatarify Inc.\nNews\n\n11 July 2020. Added Docker support. Now you can run Avatarify from Docker on Linux. Thanks to mikaelhg and mintmaker for contribution!\n22 May 2020. Added Google Colab mode. Now you can run Avatarify on any computer without GPU!\n7 May 2020. Added remote GPU support for all platforms (based on mynameisfiber's solution). Demo. Deployment instructions.\n24 April 2020. Added Windows installation tutorial.\n17 April 2020. Created Slack community. Please join via invitation link.\n15 April 2020. Added StyleGAN-generated avatars. Just press Q and now you drive a person that never existed. Every time you push the button \u2013 new avatar is sampled.\n13 April 2020. Added Windows support (kudos to 9of9).\n\nTable of Contents\n\nRequirements\nInstall\n\nDownload network weights\nLinux\nMac\nWindows\nRemote GPU\nDocker\n\n\nSetup avatars\nRun\n\nLinux\nMac\nWindows\n\n\nControls\nDriving your avatar\nConfigure video meeting app\n\nSkype\nZoom\nTeams\nSlack\n\n\nUninstall\nContribution\nFAQ\nTroubleshooting\n\nRequirements\nYou can run Avatarify in two modes: locally and remotely.\nTo run Avatarify locally you need a CUDA-enabled (NVIDIA) video card. Otherwise it will fallback to the central processor and run very slowly. These are performance metrics for some hardware:\n\nGeForce GTX 1080 Ti: 33 frames per second\nGeForce GTX 1070: 15 frames per second\nGeForce GTX 950: 9 frames per second\n\nYou can also run Avatarify remotely on Google Colab (easy) or on a dedicated server with a GPU (harder). There are no special PC requirements for this mode, only a stable internet connection.\nOf course, you also need a webcam!\nInstall\nDownload network weights\nDownload model's weights from here or here or here [228 MB, md5sum 8a45a24037871c045fbb8a6a8aa95ebc]\nLinux\nLinux uses v4l2loopback to create virtual camera.\n\nDownload Miniconda Python 3.7 and install using command:\n\nbash Miniconda3-latest-Linux-x86_64.sh\n\nClone avatarify and install its dependencies (sudo privelege is required):\n\ngit clone https:\/\/github.com\/alievk\/avatarify.git\ncd avatarify\nbash scripts\/install.sh\n\nDownload network weights and place vox-adv-cpk.pth.tar file in the avatarify directory (don't unpack it).\n\nMac\n(!) Note: we found out that in versions after v4.6.8 (March 23, 2020) Zoom disabled support for virtual cameras on Mac. To use Avatarify in Zoom you can choose from 2 options:\n\nInstall Zoom v4.6.8 which is the last version that supports virtual cameras\nUse latest version of Zoom, but disable library validation by running this command in terminal:\n\ncodesign --remove-signature \/Applications\/zoom.us.app\nWe will use CamTwist to create virtual camera for Mac.\n\nInstall Miniconda Python 3.7 or use Homebrew Cask: brew cask install miniconda.\nDownload and unpack the repository or use git:\n\ngit clone https:\/\/github.com\/alievk\/avatarify.git\ncd avatarify\nbash scripts\/install_mac.sh\n\nDownload and install CamTwist from here. It's easy.\n\nWindows\n\u25b6\ufe0f Video tutorial\nThis guide is tested for Windows 10.\n\nInstall Miniconda Python 3.7.\nInstall Git.\nPress Windows button and type \"miniconda\". Run suggested Anaconda Prompt.\nDownload and install Avatarify (please copy-paste these commands and don't change them):\n\ngit clone https:\/\/github.com\/alievk\/avatarify.git\ncd avatarify\nscripts\\install_windows.bat\n\nDownload network weights and place vox-adv-cpk.pth.tar file in the avatarify directory (don't unpack it).\nRun run_windows.bat. If installation was successful, two windows \"cam\" and \"avatarify\" will appear. Leave these windows open for the next installation steps. \nInstall OBS Studio for capturing Avatarify output.\nInstall VirtualCam plugin. Choose Install and register only 1 virtual camera.\nRun OBS Studio.\nIn the Sources section, press on Add button (\"+\" sign), select Windows Capture and press OK. In the appeared window, choose \"[python.exe]: avatarify\" in Window drop-down menu and press OK. Then select Edit -> Transform -> Fit to screen.\nIn OBS Studio, go to Tools -> VirtualCam. Check AutoStart, set Buffered Frames to 0 and press Start.\nNow OBS-Camera camera should be available in Zoom (or other videoconferencing software).\n\nThe steps 10-11 are required only once during setup.\nRemote GPU\nYou can offload the heavy work to Google Colab or a server with a GPU and use your laptop just to communicate the video stream. The server and client software are native and dockerized available.\nDocker\nDocker images are only availabe on Linux.\n\nInstall Docker following the Documentation. Then run this step to make docker available for your user.\nFor using the gpu (hardly recommended): Install nvidia drivers and nvidia docker.\nClone avatarify and install its dependencies (v4l2loopback kernel module):\n\ngit clone https:\/\/github.com\/alievk\/avatarify.git\ncd avatarify\nbash scripts\/install_docker.sh\n\nBuild the Dockerfile:\n\ncd avatarify\ndocker build -t avatarify .\nSetup avatars\nAvatarify comes with a standard set of avatars of famous people, but you can extend this set simply copying your avatars into avatars folder.\nFollow these advices for better visual quality:\n\nMake square crop of your avatar picture.\nCrop avatar's face so that it's not too close not too far. Use standard avatars as reference.\nPrefer pictures with uniform background. It will diminish visual artifacts.\n\nRun\nYour web cam must be plugged-in.\nNote: run your video-conferencing app only after Avatarify is started.\nLinux\nThe run script will create virtual camera \/dev\/video9. You can change these settings in scripts\/settings.sh.\nYou can use command v4l2-ctl --list-devices to list all devices in your system.\nRun:\nbash run.sh\nIf you haven't installed a GPU add the --no-gpus flag. In order to use Docker add the --docker flag.\ncam and avatarify windows will pop-up. The cam window is for controlling your face position and avatarify is for the avatar animation preview. Please follow these recommendations to drive your avatars.\nMac\nNote: On Mac Avatarify runs only with Google Colab or a dedicated server with GPU.\nPlease find where you downloaded avatarify and substitute path \/path\/to\/avatarify below.\n\nTo run Avatarify please follow instructions for Google Colab or a dedicated server.\nGo to CamTwist.\nChoose Desktop+ and press Select.\nIn the Settings section choose Confine to Application Window and select python (avatarify) from the drop-down menu.\n\ncam and avatarify windows will pop-up. The cam window is for controlling your face position and avatarify is for the avatar animation preview. Please follow these recommendations to drive your avatars.\nWindows\n\nIn Anaconda Prompt:\n\ncd C:\\path\\to\\avatarify\nrun_windows.bat\n\n\nRun OBS Studio. It should automaitcally start streaming video from Avatarify to OBS-Camera.\n\ncam and avatarify windows will pop-up. The cam window is for controlling your face position and avatarify is for the avatar animation preview. Please follow these recommendations to drive your avatars.\nNote: To reduce video latency, in OBS Studio right click on the preview window and uncheck Enable Preview.\nControls\n\n\n\nKeys\nControls\n\n\n\n\n1-9\nThese will immediately switch between the first 9 avatars.\n\n\nQ\nTurns on StyleGAN-generated avatar. Every time you push the button \u2013 new avatar is sampled.\n\n\n0\nToggles avatar display on and off.\n\n\nA\/D\nPrevious\/next avatar in folder.\n\n\nW\/S\nZoom camera in\/out.\n\n\nU\/H\/J\/K\nTranslate camera. H - left, K - right, U - up, J - Down by 5 pixels. Add Shift to adjust by 1 pixel.\n\n\nShift-Z\nReset camera zoom and translation\n\n\nZ\/C\nAdjust avatar target overlay opacity.\n\n\nX\nReset reference frame.\n\n\nF\nToggle reference frame search mode.\n\n\nR\nMirror reference window.\n\n\nT\nMirror output window.\n\n\nL\nReload avatars.\n\n\nI\nShow FPS\n\n\nESC\nQuit\n\n\n\nDriving your avatar\nThese are the main principles for driving your avatar:\n\nAlign your face in the camera window as closely as possible in proportion and position to the target avatar. Use zoom in\/out function (W\/S keys) and camera left, right, up, down translation (U\/H\/J\/K keys). When you have aligned, hit 'X' to use this frame as reference to drive the rest of the animation\nUse the overlay function (Z\/C keys) to match your and avatar's face expressions as close as possible\n\nAlternatively, you can hit 'F' for the software to attempt to find a better reference frame itself. This will slow down the framerate, but while this is happening, you can keep moving your head around: the preview window will flash green when it finds your facial pose is a closer match to the avatar than the one it is currently using. You will see two numbers displayed as well: the first number is how closely you are currently aligned to the avatar, and the second number is how closely the reference frame is aligned.\nYou want to get the first number as small as possible - around 10 is usually a good alignment. When you are done, press 'F' again to exit reference frame search mode.\nYou don't need to be exact, and some other configurations can yield better results still, but it's usually a good starting point.\nConfigure video meeting app\nAvatarify supports any video-conferencing app where video input source can be changed (Zoom, Skype, Hangouts, Slack, ...). Here are a few examples how to configure particular app to use Avatarify.\nSkype\nGo to Settings -> Audio & Video, choose avatarify (Linux), CamTwist (Mac) or OBS-Camera (Windows) camera.\n\nZoom\nGo to Settings -> Video and choose avatarify (Linux), CamTwist (Mac) or OBS-Camera (Windows) from Camera drop-down menu.\n\nTeams\nGo to your profile picture -> Settings -> Devices and choose avatarify (Linux), CamTwist (Mac) or OBS-Camera (Windows) from Camera drop-down menu.\n\nSlack\nMake a call, allow browser using cameras, click on Settings icon, choose avatarify (Linux), CamTwist (Mac) or OBS-Camera (Windows) in Video settings drop-down menu.\n\nUninstall\nTo remove Avatarify and its related programs follow the instructions in the Wiki.\nContribution\nOur goal is to democratize photorealistic avatars for video-conferencing. To make the technology even more accessible, we have to tackle the following problems:\n\nAdd support for more platforms (Linux and Mac are already supported).\nRemote GPU support. This is a work in progress.\nPorting to non-CUDA GPUs (Intel integrated GPUs, AMD GPUs, etc) and optimization. The goal is to run Avatarify real-time (at least 10FPS) on modern laptops.\n\nPlease make pull requests if you have any improvements or bug-fixes.\nFAQ\nQ: Do I need any knowledge of programming to run Avatarify?\nA: Not really, but you need some beginner-level knowledge of the command line. For Windows we recorded a video tutorial, so it\u2019ll be easy to install.\nQ: Why does it work so slow on my Macbook?\nA: The model used in Avatarify requires a CUDA-enabled NVIDIA GPU to perform heavy computations. Macbooks don\u2019t have such GPUs,  and for processing use CPU, which has much less computing power to run Avatarify smoothly.\nQ: I don\u2019t have a NVIDIA GPU, can I run it?\nA: You still can run it without a NVIDIA GPU, but with drastically reduced performance (<1fps).\nQ: I have an ATI GPU (e.g. Radeon). Why does it work so slow?\nA: To run the neural network Avatarify uses PyTorch library, which is optimized for CUDA. If PyTorch can\u2019t find a CUDA-enabled GPU in your system it will fallback to CPU. The performance on the CPU will be much worse.\nQ: How to add a new avatar?\nA: It\u2019s easy. All you need is to find a picture of your avatar and put it in the avatars folder. More.\nQ: My avatar looks distorted.\nA: You need to calibrate your face position. Please follow the tips or watch the video tutorial.\nQ: Can I use a cloud GPU?\nA: This is work in progress. See the relevant discussion.\nQ: Avatarify crashed, what to do?\nA: First, try to find your error in the troubleshooting section. If it is not there, try to find it in the issues. If you couldn\u2019t find your issue there, please open a new one using the issue template.\nQ: Can I use Avatarify for commercial purposes?\nA: No. Avatarify and First Order Motion Model are licensed under Creative Commons Non-Commercial license, which prohibits commercial use.\nQ: What video conferencing apps does Avatarify support?\nA: Avatarify creates a virtual camera which can be plugged into any app where video input source can be changed (Zoom, Skype, Hangouts, Slack, ...).\nQ: Where can I discuss Avatarify-related topics with the community?\nA: We have Slack. Please join: \nTroubleshooting\nPlease follow the Wiki page.\n","214":"\n\n\n\n    An Apache 2.0 NLP research library, built on PyTorch, for developing state-of-the-art deep learning models on a wide variety of linguistic tasks.\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuick Links\n\nWebsite\nGuide\nDocumentation ( latest | stable | master )\nForum\nStack Overflow\nContributing Guidelines\nOfficially Supported Models\n\nPretrained Models\nDocumentation ( latest | stable | master )\n\n\nContinuous Build\nNightly Releases\n\nGetting Started Using the Library\nIf you're interested in using AllenNLP for model development, we recommend you check out the\nAllenNLP Guide.  When you're ready to start your project, we've\ncreated a couple of template repositories that you can use as a starting place:\n\nIf you want to use allennlp train and config files to specify experiments, use this\ntemplate. We recommend this approach.\nIf you'd prefer to use python code to configure your experiments and run your training loop, use\nthis template. There are a few\nthings that are currently a little harder in this setup (loading a saved model, and using\ndistributed training), but otherwise it's functionality equivalent to the config files\nsetup.\n\nIn addition, there are external tutorials:\n\nHyperparameter optimization for AllenNLP using Optuna\nTraining with multiple GPUs in AllenNLP\n\nAnd others on the AI2 AllenNLP blog.\nPlugins\nAllenNLP supports loading \"plugins\" dynamically. A plugin is just a Python package that\nprovides custom registered classes or additional allennlp subcommands.\nThere is ecosystem of open source plugins, some of which are maintained by the AllenNLP\nteam here at AI2, and some of which are maintained by the broader community.\n\n\n Plugin \n Maintainer \n CLI \n Description \n\n\n allennlp-models \n AI2 \n No \n A collection of state-of-the-art models \n\n\n allennlp-semparse \n AI2 \n No \n A framework for building semantic parsers \n\n\n allennlp-server \n AI2 \n Yes \n A simple demo server for serving models \n\n\n allennlp-optuna \n Makoto Hiramatsu \n Yes \n Optuna integration for hyperparameter optimization \n\n\nAllenNLP will automatically find any official AI2-maintained plugins that you have installed,\nbut for AllenNLP to find personal or third-party plugins you've installed,\nyou also have to create either a local plugins file named .allennlp_plugins\nin the directory where you run the allennlp command, or a global plugins file at ~\/.allennlp\/plugins.\nThe file should list the plugin modules that you want to be loaded, one per line.\nTo test that your plugins can be found and imported by AllenNLP, you can run the allennlp test-install command.\nEach discovered plugin will be logged to the terminal.\nFor more information about plugins, see the plugins API docs. And for information on how to create a custom subcommand\nto distribute as a plugin, see the subcommand API docs.\nPackage Overview\n\n\n allennlp \n An open-source NLP research library, built on PyTorch \n\n\n allennlp.commands \n Functionality for the CLI \n\n\n allennlp.common \n Utility modules that are used across the library \n\n\n allennlp.data \n A data processing module for loading datasets and encoding strings as integers for representation in matrices \n\n\n allennlp.modules \n A collection of PyTorch modules for use with text \n\n\n allennlp.nn \n Tensor utility functions, such as initializers and activation functions \n\n\n allennlp.training \n Functionality for training models \n\n\nInstallation\nAllenNLP requires Python 3.6.1 or later. The preferred way to install AllenNLP is via pip.  Just run pip install allennlp in your Python environment and you're good to go!\n\n\u26a0\ufe0f If you're using Python 3.7 or greater, you should ensure that you don't have the PyPI version of dataclasses installed after running the above command, as this could cause issues on certain platforms. You can quickly check this by running pip freeze | grep dataclasses. If you see something like dataclasses=0.6 in the output, then just run pip uninstall -y dataclasses.\n\nIf you need pointers on setting up an appropriate Python environment or would like to install AllenNLP using a different method, see below.\nWe support AllenNLP on Mac and Linux environments. We presently do not support Windows but are open to contributions.\nInstalling via pip\nSetting up a virtual environment\nConda can be used set up a virtual environment with the\nversion of Python required for AllenNLP.  If you already have a Python 3\nenvironment you want to use, you can skip to the 'installing via pip' section.\n\n\nDownload and install Conda.\n\n\nCreate a Conda environment with Python 3.7 (3.6 or 3.8 would work as well):\nconda create -n allennlp python=3.7\n\n\n\nActivate the Conda environment. You will need to activate the Conda environment in each terminal in which you want to use AllenNLP:\nconda activate allennlp\n\n\n\nInstalling the library and dependencies\nInstalling the library and dependencies is simple using pip.\npip install allennlp\nLooking for bleeding edge features? You can install nightly releases directly from pypi\nAllenNLP installs a script when you install the python package, so you can run allennlp commands just by typing allennlp into a terminal.  For example, you can now test your installation with allennlp test-install.\nYou may also want to install allennlp-models, which contains the NLP constructs to train and run our officially\nsupported models, many of which are hosted at https:\/\/demo.allennlp.org.\npip install allennlp-models\nInstalling using Docker\nDocker provides a virtual machine with everything set up to run AllenNLP--\nwhether you will leverage a GPU or just run on a CPU.  Docker provides more\nisolation and consistency, and also makes it easy to distribute your\nenvironment to a compute cluster.\nAllenNLP provides official Docker images with the library and all of its dependencies installed.\nOnce you have installed Docker,\nyou should also install the NVIDIA Container Toolkit\nif you have GPUs available.\nThen run the following command to get an environment that will run on GPU:\nmkdir -p $HOME\/.allennlp\/\ndocker run --rm --gpus all -v $HOME\/.allennlp:\/root\/.allennlp allennlp\/allennlp:latest\nYou can test the Docker environment with\ndocker run --rm --gpus all -v $HOME\/.allennlp:\/root\/.allennlp allennlp\/allennlp:latest test-install \nIf you don't have GPUs available, just omit the --gpus all flag.\nBuilding your own Docker image\nFor various reasons you may need to create your own AllenNLP Docker image, such as if you need a different version\nof PyTorch. To do so, just run make docker-image from the root of your local clone of AllenNLP.\nBy default this builds an image with the tag allennlp\/allennlp, but you can change this to anything you want\nby setting the DOCKER_TAG flag when you call make. For example,\nmake docker-image DOCKER_TAG=my-allennlp.\nIf you want to use a different version of PyTorch, set the flag DOCKER_TORCH_VERSION to something like\ntorch==1.7.0 or torch==1.7.0+cu110 -f https:\/\/download.pytorch.org\/whl\/torch_stable.html.\nThe value of this flag will passed directly to pip install.\nAfter building the image you should be able to see it listed by running docker images allennlp.\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nallennlp\/allennlp   latest              b66aee6cb593        5 minutes ago       2.38GB\n\nInstalling from source\nYou can also install AllenNLP by cloning our git repository:\ngit clone https:\/\/github.com\/allenai\/allennlp.git\nCreate a Python 3.7 or 3.8 virtual environment, and install AllenNLP in editable mode by running:\npip install --editable .\npip install -r dev-requirements.txt\nThis will make allennlp available on your system but it will use the sources from the local clone\nyou made of the source repository.\nYou can test your installation with allennlp test-install.\nSee https:\/\/github.com\/allenai\/allennlp-models\nfor instructions on installing allennlp-models from source.\nRunning AllenNLP\nOnce you've installed AllenNLP, you can run the command-line interface\nwith the allennlp command (whether you installed from pip or from source).\nallennlp has various subcommands such as train, evaluate, and predict.\nTo see the full usage information, run allennlp --help.\nYou can test your installation by running  allennlp test-install.\nIssues\nEveryone is welcome to file issues with either feature requests, bug reports, or general questions.  As a small team with our own internal goals, we may ask for contributions if a prompt fix doesn't fit into our roadmap.  To keep things tidy we will often close issues we think are answered, but don't hesitate to follow up if further discussion is needed.\nContributions\nThe AllenNLP team at AI2 (@allenai) welcomes contributions from the greater AllenNLP community, and, if you would like to get a change into the library, this is likely the fastest approach.  If you would like to contribute a larger feature, we recommend first creating an issue with a proposed design for discussion.  This will prevent you from spending significant time on an implementation which has a technical limitation someone could have pointed out early on.  Small contributions can be made directly in a pull request.\nPull requests (PRs) must have one approving review and no requested changes before they are merged.  As AllenNLP is primarily driven by AI2 (@allenai) we reserve the right to reject or revert contributions that we don't think are good additions.\nCiting\nIf you use AllenNLP in your research, please cite AllenNLP: A Deep Semantic Natural Language Processing Platform.\n@inproceedings{Gardner2017AllenNLP,\n  title={AllenNLP: A Deep Semantic Natural Language Processing Platform},\n  author={Matt Gardner and Joel Grus and Mark Neumann and Oyvind Tafjord\n    and Pradeep Dasigi and Nelson F. Liu and Matthew Peters and\n    Michael Schmitz and Luke S. Zettlemoyer},\n  year={2017},\n  Eprint = {arXiv:1803.07640},\n}\nTeam\nAllenNLP is an open-source project backed by the Allen Institute for Artificial Intelligence (AI2).\nAI2 is a non-profit institute with the mission to contribute to humanity through high-impact AI research and engineering.\nTo learn more about who specifically contributed to this codebase, see our contributors page.\n","215":"\n\n\n\n\nAbout\nWifiphisher is a rogue Access Point framework for conducting red team engagements or Wi-Fi security testing. Using Wifiphisher, penetration testers can easily achieve a man-in-the-middle position against wireless clients by performing targeted Wi-Fi association attacks. Wifiphisher can be further used to mount victim-customized web phishing attacks against the connected clients in order to capture credentials (e.g. from third party login pages or WPA\/WPA2 Pre-Shared Keys) or infect the victim stations with malwares.\nWifiphisher is...\n\n\n...powerful. Wifiphisher can run for hours inside a Raspberry Pi device\nexecuting all modern Wi-Fi association techniques (including \"Evil Twin\", \"KARMA\" and \"Known Beacons\").\n\n\n...flexible. Supports dozens of arguments and comes with a set of\ncommunity-driven phishing templates for different deployment scenarios.\n\n\n...modular. Users can write simple or complicated modules in Python to expand the functionality of the tool or create custom phishing scenarios in order to conduct specific target-oriented attacks.\n\n\n...easy to use. Advanced users can utilize the rich set of features that Wifiphisher offers but beginners may start out as simply as \".\/bin\/wifiphisher\". The interactive Textual User Interface guides the tester through the build process of the attack.\n\n\n...the result of an extensive research. Attacks like \"Known Beacons\" and \"Lure10\" as well as state-of-the-art phishing techniques, were disclosed by our developers, and Wifiphisher was the first tool to incorporate them.\n\n\n...supported by an awesome community of developers and users.\n\n\n...free. Wifiphisher is available for free download, and also comes with full\nsource code that you may study, change, or distribute under the terms of the\nGPLv3 license.\n\n\nHow it works\nWi-Fi phishing consists of two steps:\n\n\nThe first step involves the process of associating with Wi-Fi clients\nunknowingly, or in other words, obtaining a man-in-the-middle (MITM) position. Wifiphisher uses a number of different techniques to achieve this including:\n\nEvil Twin, where Wifiphisher creates a fake wireless network that looks similar to a legitimate network.\nKARMA, where Wifiphisher masquerades as a public network searched for by nearby Wi-Fi clients.\nKnown Beacons, where Wifiphisher broadcasts a dictionary of common ESSIDs, that the around wireless stations have likely connected to in the past.\n\nAt the same time, Wifiphisher keeps forging \u201cDeauthenticate\u201d or \u201cDisassociate\u201d packets to disrupt existing associations and eventually lure victims using the above techniques.\n\n\nPerforming MiTM attack\n\n\n(Optionally) There are a number of different attacks that can be carried out\nonce Wifiphisher grants the penetration tester with a man-in-the-middle\nposition. For example, the tester may perform data sniffing or scan the victim stations for vulnerabilities.\nUsing Wifiphisher, advanced web phishing techniques are possible by gathering\ninformation from the target environment and victim user. For example, in one of\nour scenarios, Wifiphisher will extract information from the broadcasted beacon\nframes and the HTTP User-Agent header to display a web-based imitation of\nWindows network manager in order to capture the Pre-Shared Key.\n\n\nFake web-based network manager\nRequirements\nFollowing are the requirements for getting the most out of Wifiphisher:\n\nA working Linux system. People have made Wifiphisher work on many distros, but Kali Linux is the officially supported distribution, thus all new features are primarily tested on this platform.\nOne wireless network adapter that supports AP & Monitor mode and is capable of injection. Drivers should support netlink.\n\nInstallation\nTo install the latest development version type the following commands:\ngit clone https:\/\/github.com\/wifiphisher\/wifiphisher.git # Download the latest revision\ncd wifiphisher # Switch to tool's directory\nsudo python setup.py install # Install any dependencies\nAlternatively, you can download the latest stable version from the Releases page.\nUsage\nRun the tool by typing wifiphisher or python bin\/wifiphisher (from inside the tool's directory).\nBy running the tool without any options, it will find the right interfaces and interactively ask the user to pick the ESSID of the target network (out of a list with all the ESSIDs in the around area) as well as a phishing scenario to perform. By default, the tool will perform both Evil Twin and KARMA attacks.\n\nwifiphisher -aI wlan0 -jI wlan4 -p firmware-upgrade --handshake-capture handshake.pcap\nUse wlan0 for spawning the rogue Access Point and wlan4 for DoS attacks. Select the target network manually from the list and perform the \"Firmware Upgrade\" scenario. Verify that the captured Pre-Shared Key is correct by checking it against the handshake in the handshake.pcap file.\nUseful for manually selecting the wireless adapters. The \"Firmware Upgrade\" scenario is an easy way for obtaining the PSK from a password-protected network.\n\nwifiphisher --essid CONFERENCE_WIFI -p plugin_update -pK s3cr3tp4ssw0rd\nAutomatically pick the right interfaces. Target the Wi-Fi with ESSID \"CONFERENCE_WIFI\" and perform the \"Plugin Update\" scenario. The Evil Twin will be password-protected with PSK \"s3cr3tp4ssw0rd\".\nUseful against networks with disclosed PSKs (e.g. in conferences). The \"Plugin Update\" scenario provides an easy way for getting the victims to download malicious executables (e.g. malwares containing a reverse shell payload).\n\nwifiphisher --essid \"FREE WI-FI\" -p oauth-login -kB\nSimply spawn an open Wi-Fi network with ESSID \"FREE WI-FI\" and perform the \"OAuth Login\" scenario. Furthermore, mount the \"Known Beacons\" Wi-Fi automatic association technique.\nUseful against victims in public areas. The \"OAuth Login\" scenario provides a simple way for capturing credentials from social networks, like Facebook.\nFollowing are all the options along with their descriptions (also available with wifiphisher -h):\n\n\n\nShort form\nLong form\nExplanation\n\n\n\n\n-h\n--help\nshow this help message and exit\n\n\n-i INTERFACE\n--interface INTERFACE\nManually choose an interface that supports both AP and monitor modes for spawning the rogue AP as well as mounting additional Wi-Fi attacks from Extensions (i.e. deauth). Example: -i wlan1\n\n\n-eI EXTENSIONSINTERFACE\n--extensionsinterface EXTENSIONSINTERFACE\nManually choose an interface that supports monitor mode for running the extensions. Example: -eI wlan1\n\n\n-aI APINTERFACE\n--apinterface APINTERFACE\nManually choose an interface that supports AP mode for spawning an AP. Example: -aI wlan0\n\n\n-pI INTERFACE\n--protectinterface INTERFACE\nSpecify one or more interfaces that will have their connection protected from being managed by NetworkManager.\n\n\n-kN\n--keepnetworkmanager\nDo not kill NetworkManager.\n\n\n-nE\n--noextensions\nDo not load any extensions.\n\n\n-e ESSID\n--essid ESSID\nEnter the ESSID of the rogue Access Point. This option will skip Access Point selection phase. Example: --essid 'Free WiFi'\n\n\n-pPD PHISHING_PAGES_DIRECTORY\n--phishing-pages-directory PHISHING_PAGES_DIRECTORY\nSearch for phishing pages in this location\n\n\n-p PHISHINGSCENARIO\n--phishingscenario PHISHINGSCENARIO\nChoose the phishing scenario to run.This option will skip the scenario selection phase. Example: -p firmware_upgrade\n\n\n-pK PRESHAREDKEY\n--presharedkey PRESHAREDKEY\nAdd WPA\/WPA2 protection on the rogue Access Point. Example: -pK s3cr3tp4ssw0rd\n\n\n-qS\n--quitonsuccess\nStop the script after successfully retrieving one pair of credentials.\n\n\n-lC\n--lure10-capture\nCapture the BSSIDs of the APs that are discovered during AP selection phase. This option is part of Lure10 attack.\n\n\n-lE LURE10_EXPLOIT\n--lure10-exploit LURE10_EXPLOIT\nFool the Windows Location Service of nearby Windows users to believe it is within an area that was previously captured with --lure10-capture. Part of the Lure10 attack.\n\n\n-iAM\n--mac-ap-interface\nSpecify the MAC address of the AP interface. Example: -iAM 38:EC:11:00:00:00\n\n\n-iEM\n--mac-extensions-interface\nSpecify the MAC address of the extensions interface. Example: -iEM E8:2A:EA:00:00:00\n\n\n-iNM\n--no-mac-randomization\nDo not change any MAC address.\n\n\n-hC\n--handshake-capture\nCapture of the WPA\/WPA2 handshakes for verifying passphrase. Example: -hC capture.pcap\n\n\n-dE ESSID\n--deauth-essid ESSID\nDeauth all the BSSIDs in the WLAN with that ESSID.\n\n\n-dC CHANNELS\n--deauth-channels CHANNELS\nChannels to deauth. Example: --deauth-channels 1,3,7\n\n\n\n--logging\nEnable logging. Output will be saved to wifiphisher.log file.\n\n\n-lP LOGPATH\n--logpath LOGPATH\nDetermine the full path of the logfile.\n\n\n-cP CREDENTIAL_LOG_PATH\n--credential-log-path CREDENTIAL_LOG_PATH\nDetermine the full path of the file that will store any captured credentials\n\n\n-cM\n--channel-monitor\nMonitor if the target access point changes the channel.\n\n\n\n--payload-path\nEnable the payload path. Intended for use with scenarios that serve payloads.\n\n\n-wP\n--wps-pbc\nMonitor if the button on a WPS-PBC Registrar side is pressed.\n\n\n-wAI\n--wpspbc-assoc-interface\nThe WLAN interface used for associating to the WPS AccessPoint.\n\n\n-kB\n--known-beacons\nPerform the known beacons Wi-Fi automatic association technique.\n\n\n-fH\n--force-hostapd\nForce the usage of hostapd installed in the system.\n\n\n\n--dnsmasq-conf DNSMASQ_CONF\nDetermine the full path of dnmasq.conf file.\n\n\n-dK\n--disable-karma\nDisables KARMA attack.\n\n\n-pE\n--phishing-essid\nDetermine the ESSID you want to use for the phishing page.\n\n\n\nScreenshots\nTargeting an access point\nA successful attack\nFake router configuration page\nFake OAuth Login Page\nFake web-based network manager\nHelp needed\nIf you are a Python developer or a web designer you can help us improve Wifiphisher. Feel free to take a look at the bug tracker for some tasks to do.\nIf you don't know how to code, you can help us by proposing improvements or reporting bugs. Please have a look at the Bug Reporting Guidelines and the FAQ document beforehand.  Note that the tool does not aim to be script-kiddie friendly. Make sure you do understand how the tool works before opening an issue.\nCredits\nThe script is based on an idea from Dan McInerney back in 2015.\nA full list of contributors lies here.\nLicense\nWifiphisher is licensed under the GPLv3 license. See LICENSE for more information.\nProject Status\nWifiphisher's current version is 1.4. You can download the latest release from here. Otherwise you can get the latest development version by cloning this repository.\nDisclaimer\n\nUsage of Wifiphisher for attacking infrastructures without prior mutual consistency can be considered as an illegal activity. It is the final user's responsibility to obey all applicable local, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program.\n\nNote: Be aware of sites pretending to be related with the Wifiphisher Project. They may be delivering malware.\nFor Wifiphisher news, follow us on Twitter or like us on Facebook.\n","216":"httpbin(1): HTTP Request & Response Service\nA Kenneth Reitz Project.\n\nRun locally:\ndocker pull kennethreitz\/httpbin\ndocker run -p 80:80 kennethreitz\/httpbin\nSee http:\/\/httpbin.org for more information.\nOfficially Deployed at:\n\nhttp:\/\/httpbin.org\nhttps:\/\/httpbin.org\nhttps:\/\/hub.docker.com\/r\/kennethreitz\/httpbin\/\n\nSEE ALSO\n\nhttp:\/\/requestb.in\nhttp:\/\/python-requests.org\nhttps:\/\/grpcb.in\/\n\nBuild Status\n\n","217":"\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684python\u722c\u866b\u4f8b\u5b50,\u5bf9\u65b0\u624b\u6bd4\u8f83\u53cb\u597d\n\n\n\n\n\n\n\n\n\n\n\u9879\u76ee\u7b80\u4ecb\n\u4e00\u4e9b\u5e38\u89c1\u7684\u7f51\u7ad9\u722c\u866b\u4f8b\u5b50\uff0c\u4ee3\u7801\u901a\u7528\u6027\u8f83\u9ad8\uff0c\u65f6\u6548\u6027\u8f83\u4e45\u3002\u9879\u76ee\u4ee3\u7801\u5bf9\u65b0\u624b\u6bd4\u8f83\u53cb\u597d\uff0c\u5c3d\u91cf\u7528\u7b80\u5355\u7684python\u4ee3\u7801\uff0c\u5e76\u914d\u6709\u5927\u91cf\u6ce8\u91ca\u3002\n\n\n\u5982\u4f55\u4e0b\u8f7d\n\u6ca1\u6709\u6216\u4e0d\u61c2\u5982\u4f55\u8bbe\u7f6e\u4ee3\u7406\u7684\u4e2d\u56fd\u7528\u6237, \u53ef\u8df3\u8f6c\u81f3\u955c\u50cf\u4ed3\u5e93\u7801\u4e91Gitee\u8fdb\u884c\u4e0b\u8f7d, \u4ee5\u4fbf\u83b7\u5f97\u8f83\u5feb\u7684\u4e0b\u8f7d\u901f\u5ea6\u3002\n\n\n1.\u6dd8\u5b9d\u6a21\u62df\u767b\u5f55\n\u4f7f\u7528\u6559\u7a0b\n\n\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d\u4e0b\u8f7dchrome\u6d4f\u89c8\u5668\n\u67e5\u770bchrome\u6d4f\u89c8\u5668\u7684\u7248\u672c\u53f7\uff0c\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u53f7\u7684chromedriver\u9a71\u52a8\npip\u5b89\u88c5\u4e0b\u5217\u5305\n\n pip install selenium\n\n\n\u70b9\u51fb\u8fd9\u91cc\u767b\u5f55\u5fae\u535a\uff0c\u5e76\u901a\u8fc7\u5fae\u535a\u7ed1\u5b9a\u6dd8\u5b9d\u8d26\u53f7\u5bc6\u7801\n\u5728main\u4e2d\u586b\u5199chromedriver\u7684\u7edd\u5bf9\u8def\u5f84\n\u5728main\u4e2d\u586b\u5199\u5fae\u535a\u8d26\u53f7\u5bc6\u7801\n\n#\u6539\u6210\u4f60\u7684chromedriver\u7684\u5b8c\u6574\u8def\u5f84\u5730\u5740\nchromedriver_path = \"\/Users\/bird\/Desktop\/chromedriver.exe\" \n#\u6539\u6210\u4f60\u7684\u5fae\u535a\u8d26\u53f7\nweibo_username = \"\u6539\u6210\u4f60\u7684\u5fae\u535a\u8d26\u53f7\"\n#\u6539\u6210\u4f60\u7684\u5fae\u535a\u5bc6\u7801\nweibo_password = \"\u6539\u6210\u4f60\u7684\u5fae\u535a\u5bc6\u7801\"\n\u6f14\u793a\u56fe\u7247\n\n\n\n2.\u5929\u732b\u5546\u54c1\u6570\u636e\u722c\u866b\n\u4f7f\u7528\u6559\u7a0b\n\n\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d\u4e0b\u8f7dchrome\u6d4f\u89c8\u5668\n\u67e5\u770bchrome\u6d4f\u89c8\u5668\u7684\u7248\u672c\u53f7\uff0c\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u53f7\u7684chromedriver\u9a71\u52a8\npip\u5b89\u88c5\u4e0b\u5217\u5305\n\n pip install selenium\n pip install pyquery\n\n\n\u70b9\u51fb\u8fd9\u91cc\u767b\u5f55\u5fae\u535a\uff0c\u5e76\u901a\u8fc7\u5fae\u535a\u7ed1\u5b9a\u6dd8\u5b9d\u8d26\u53f7\u5bc6\u7801\n\u5728main\u4e2d\u586b\u5199chromedriver\u7684\u7edd\u5bf9\u8def\u5f84\n\u5728main\u4e2d\u586b\u5199\u5fae\u535a\u8d26\u53f7\u5bc6\u7801\n\n#\u6539\u6210\u4f60\u7684chromedriver\u7684\u5b8c\u6574\u8def\u5f84\u5730\u5740\nchromedriver_path = \"\/Users\/bird\/Desktop\/chromedriver.exe\" \n#\u6539\u6210\u4f60\u7684\u5fae\u535a\u8d26\u53f7\nweibo_username = \"\u6539\u6210\u4f60\u7684\u5fae\u535a\u8d26\u53f7\"\n#\u6539\u6210\u4f60\u7684\u5fae\u535a\u5bc6\u7801\nweibo_password = \"\u6539\u6210\u4f60\u7684\u5fae\u535a\u5bc6\u7801\"\n\u6f14\u793a\u56fe\u7247\n\n\n\n\n3.\u722c\u53d6\u6dd8\u5b9d\u6211\u5df2\u8d2d\u4e70\u7684\u5b9d\u8d1d\u6570\u636e\n\u4f7f\u7528\u6559\u7a0b\n\n\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d\u4e0b\u8f7dchrome\u6d4f\u89c8\u5668\n\u67e5\u770bchrome\u6d4f\u89c8\u5668\u7684\u7248\u672c\u53f7\uff0c\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u53f7\u7684chromedriver\u9a71\u52a8\npip\u5b89\u88c5\u4e0b\u5217\u5305\n\n pip install selenium\n pip install pyquery\n\n\n\u70b9\u51fb\u8fd9\u91cc\u767b\u5f55\u5fae\u535a\uff0c\u5e76\u901a\u8fc7\u5fae\u535a\u7ed1\u5b9a\u6dd8\u5b9d\u8d26\u53f7\u5bc6\u7801\n\u5728main\u4e2d\u586b\u5199chromedriver\u7684\u7edd\u5bf9\u8def\u5f84\n\u5728main\u4e2d\u586b\u5199\u5fae\u535a\u8d26\u53f7\u5bc6\u7801\n\n#\u6539\u6210\u4f60\u7684chromedriver\u7684\u5b8c\u6574\u8def\u5f84\u5730\u5740\nchromedriver_path = \"\/Users\/bird\/Desktop\/chromedriver.exe\" \n#\u6539\u6210\u4f60\u7684\u5fae\u535a\u8d26\u53f7\nweibo_username = \"\u6539\u6210\u4f60\u7684\u5fae\u535a\u8d26\u53f7\"\n#\u6539\u6210\u4f60\u7684\u5fae\u535a\u5bc6\u7801\nweibo_password = \"\u6539\u6210\u4f60\u7684\u5fae\u535a\u5bc6\u7801\"\n\u6f14\u793a\u56fe\u7247\n\n\n\n\n4.\u6bcf\u5929\u4e0d\u540c\u65f6\u95f4\u6bb5\u901a\u8fc7\u5fae\u4fe1\u53d1\u6d88\u606f\u63d0\u9192\u5973\u53cb\n\u7b80\u4ecb\n\u6709\u65f6\u5019\uff0c\u4f60\u5f88\u60f3\u5173\u5fc3\u5979\uff0c\u4f46\u662f\u4f60\u592a\u5fd9\u4e86\uff0c\u4ee5\u81f3\u4e8e\u5979\u4e00\u76f4\u62b1\u6028\uff0c\u89c9\u5f97\u4f60\u4e0d\u591f\u5173\u5fc3\u5979\u3002\u4f60\u6697\u81ea\u4e0b\u51b3\u5fc3\uff0c\u4e0b\u6b21\u4e00\u5b9a\u8981\u51c6\u65f6\u53d1\u6d88\u606f\u7ed9\u5979\uff0c\u54ea\u6015\u662f\u51e0\u53e5\u8bdd\uff0c\u53ef\u662f\u4f60\u53c8\u5fd8\u8bb0\u4e86\u3002\u4f60\u89c9\u5f97\u81ea\u5df1\u5f88\u59d4\u5c48\ud83d\ude2d\uff0c\u4f46\u662f\u5979\u53c8\u89c9\u5f97\u4f60\u4e0d\u8d1f\u8d23\u3002\n\n\u73b0\u5728\uff0c\u518d\u4e0d\u7528\u62c5\u5fc3\u4e86\uff0c\u7528python\u5c31\u53ef\u4ee5\u7ed9\u5973\u53cb\u5b9a\u65f6\u53d1\u63d0\u793a\u6d88\u606f\u4e86\uff0c\u800c\u4e14\u4e0d\u4f1a\u6f0f\u8fc7\u6bcf\u4e00\u4e2a\u5173\u952e\u65f6\u523b\uff0c\u6bcf\u5929\u65e9\u4e0a\u8d77\u5e8a\u3001\u4e2d\u5348\u5403\u996d\u3001\u665a\u4e0a\u5403\u996d\u3001\u665a\u4e0a\u7761\u89c9\uff0c\u90fd\u4f1a\u51c6\u65f6\u53d1\u6d88\u606f\u7ed9\u5979\u4e86\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u8ba9\u5979\u5b66\u4e60\u82f1\u8bed\u5355\u8bcd\u54e6\uff01\n\n\u5728\u751f\u65e5\u6765\u4e34\u4e4b\u65f6\uff0c\u81ea\u52a8\u53d1\u795d\u798f\u8bed\u3002\u5728\u8282\u65e5\u6765\u4e34\u4e4b\u65f6\uff0c\u6bd4\u5982**\u4e09\u516b\u5987\u5973\u8282\u3001\u5973\u795e\u8282\u3001\u60c5\u4eba\u8282\u3001\u6625\u8282\u3001\u5723\u8bde\u8282**\uff0c\u81ea\u52a8\u53d1\u95ee\u5019\u8bed\u54e6\uff0c\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u4ed6\u8bf4\u4f60\u6ca1\u6709\u4eea\u5f0f\u611f\u4e86\ud83d\ude00\n\n\u6700\u91cd\u8981\u7684\u65f6\u5019\uff0c\u5b9e\u65f6\u53ef\u4ee5\u77e5\u9053\u5973\u53cb\u7684\u60c5\u611f\u60c5\u7eea\u6307\u6570\u54e6\uff0c\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u5973\u53cb\u83ab\u540d\u5176\u5999\u751f\u6c14\u4e86\u3002\n\u4f7f\u7528\u6559\u7a0b\n\npip\u5b89\u88c5\u4e0b\u5217\u5305\n\n\n pip install wxpy\n pip install requests\n\n\n\u8bbe\u7f6e\u4ee5\u4e0b\u5185\u5bb9\n\n\n \u8bbe\u7f6econfig.ini\u76f8\u5173\u4fe1\u606f\n\n\u6f14\u793a\u56fe\u7247\n\n\n\n\n5.\u722c\u53d65K\u5206\u8fa8\u7387\u8d85\u6e05\u552f\u7f8e\u58c1\u7eb8\n\u7b80\u4ecb\n\u58c1\u7eb8\u7684\u9009\u62e9\u5176\u5b9e\u5f88\u5927\u7a0b\u5ea6\u4e0a\u80fd\u770b\u51fa\u7535\u8111\u4e3b\u4eba\u7684\u5185\u5fc3\u4e16\u754c\uff0c\u6709\u7684\u4eba\u559c\u6b22\u98ce\u666f\uff0c\u6709\u7684\u4eba\u559c\u6b22\u661f\u7a7a\uff0c\u6709\u7684\u4eba\u559c\u6b22\u7f8e\u5973\uff0c\u6709\u7684\u4eba\u559c\u6b22\u52a8\u7269\u3002\u7136\u800c\uff0c\u7ec8\u7a76\u6709\u4e00\u5929\u4f60\u5df2\u7ecf\u4ea7\u751f\u5ba1\u7f8e\u75b2\u52b3\u4e86\uff0c\u4f46\u4f60\u4e0b\u5b9a\u51b3\u5b9a\u8981\u6362\u58c1\u7eb8\u7684\u65f6\u5019\uff0c\u53c8\u53d1\u73b0\u7f51\u4e0a\u7684\u58c1\u7eb8\u8981\u4e48\u5206\u8fa8\u7387\u4f4e\uff0c\u8981\u4e48\u5e26\u6709\u6c34\u5370\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u6b3eMac\u4e0b\u7684\u5c0f\u6e05\u65b0\u58c1\u7eb8\u795e\u5668Pap.er\uff0c\u53ef\u80fd\u662fMac\u4e0b\u6700\u597d\u7684\u58c1\u7eb8\u8f6f\u4ef6\uff0c\u81ea\u5e265K\u8d85\u6e05\u5206\u8fa8\u7387\u58c1\u7eb8\uff0c\u5bcc\u6709\u591a\u79cd\u7c7b\u578b\u58c1\u7eb8\uff0c\u5f53\u6211\u4eec\u60f3\u5728Windows\u6216\u8005Linux\u4e0b\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u5c065K\u8d85\u6e05\u5206\u8fa8\u7387\u58c1\u7eb8\u722c\u53d6\u4e0b\u6765\u3002\n\u4f7f\u7528\u6559\u7a0b\n\n\u786e\u4fdd\u4ee5\u4e0b\u5e93\u5747\u5df2\u5b89\u88c5\uff1a\n\n# \u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u8bf7\u4f7f\u7528pip install module\u5b89\u88c5\nimport requests\nimport filetype\nimport os\nimport json\nfrom contextlib import closing\n\u6f14\u793a\u56fe\u7247\n\n\n\n\n6.\u722c\u53d6\u8c46\u74e3\u6392\u884c\u699c\u7535\u5f71\u6570\u636e(\u542bGUI\u754c\u9762\u7248)\n\u7b80\u4ecb\n\u8fd9\u4e2a\u9879\u76ee\u6e90\u4e8e\u5927\u4e09\u67d0\u8bfe\u7a0b\u8bbe\u8ba1\u3002\u5e73\u5e38\u7ecf\u5e38\u9700\u8981\u641c\u7d22\u4e00\u4e9b\u7535\u5f71\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u54ea\u4e9b\u8bc4\u5206\u9ad8\u4e14\u8bc4\u4ef7\u4eba\u6570\u591a\u7684\u7535\u5f71\u3002\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u5c31\u5c06\u539f\u6765\u7684\u9879\u76ee\u91cd\u65b0\u6539\u5199\u4e86\u3002\u5f53\u505a\u662f\u5bf9\u722c\u866b\u6280\u672f\u3001\u53ef\u89c6\u5316\u6280\u672f\u7684\u5b9e\u8df5\u4e86\u3002\u4e3b\u8981\u662f\u901a\u8fc7\u4ece\u6392\u884c\u699c\u548c\u4ece\u5f71\u7247\u5173\u952e\u8bcd\u4e24\u79cd\u65b9\u5f0f\u722c\u53d6\u7535\u5f71\u6570\u636e\u3002\n\u4f7f\u7528\u6559\u7a0b\n\n\u6253\u5f00http:\/\/chromedriver.storage.googleapis.com\/index.html\uff0c\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8f7d\u5bf9\u5e94\u7684chromedriver\n\u6253\u5f00\u5f53\u524d\u9762\u76ee\u5f55\u4e0b\u7684**getMovieInRankingList.py**\uff0c\u5b9a\u4f4d\u5230\u7b2c59\u884c\uff0c\u5c06executable_path=\/Users\/bird\/Desktop\/chromedriver.exe\u4fee\u6539\u6210\u4f60\u81ea\u5df1\u7684chromedriver\u8def\u5f84\n\u6253\u5f00pycharm\uff0c\u4f9d\u6b21\u5b89\u88c5\u4ee5\u4e0b\u5305\n\n\npip install Pillow\npip install selenium\n\n\u6f14\u793a\u56fe\u7247\n\n\n\u5305\u542b\u529f\u80fd\n\n \u6839\u636e\u5173\u952e\u5b57\u641c\u7d22\u7535\u5f71\n \u6839\u636e\u6392\u884c\u699c(TOP250)\u641c\u7d22\u7535\u5f71\n \u663e\u793aIMDB\u8bc4\u5206\u53ca\u5176\u4ed6\u57fa\u672c\u4fe1\u606f\n \u63d0\u4f9b\u591a\u4e2a\u5728\u7ebf\u89c6\u9891\u7ad9\u70b9\uff0c\u65e0\u9700vip\n \u63d0\u4f9b\u591a\u4e2a\u4e91\u76d8\u7ad9\u70b9\u641c\u7d22\u8be5\u89c6\u9891\uff0c\u4ee5\u4fbf\u4fdd\u5b58\u5230\u4e91\u76d8\n \u63d0\u4f9b\u591a\u4e2a\u7ad9\u70b9\u4e0b\u8f7d\u8be5\u89c6\u9891\n \u7b49\u5f85\u66f4\u65b0\n\n\u5b58\u5728\u95ee\u9898\n\u76ee\u524d\u6ca1\u6709\u52a0\u5165\u53cd\u722c\u866b\u7b56\u7565\uff0c\u5982\u679c\u8fd0\u884c\u51fa\u73b0403 forbidden\u63d0\u793a\uff0c\u5219\u8bf4\u660e\u6682\u65f6\u88ab\u7981\u6b62\uff0c\u89e3\u51b3\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\u52a0\u5165cookies\n\u91c7\u7528\u968f\u673a\u5ef6\u65f6\u65b9\u5f0f\n\u91c7\u7528IP\u4ee3\u7406\u6c60\u65b9\u5f0f(\u8f83\u4e0d\u7a33\u5b9a)\n\n\n\n7.\u591a\u7ebf\u7a0b+\u4ee3\u7406\u6c60\u722c\u53d6\u5929\u5929\u57fa\u91d1\u7f51\u3001\u80a1\u7968\u6570\u636e(\u65e0\u9700\u4f7f\u7528\u722c\u866b\u6846\u67b6)\n\u7b80\u4ecb\n\u63d0\u5230\u722c\u866b\uff0c\u5927\u90e8\u5206\u4eba\u90fd\u4f1a\u60f3\u5230\u4f7f\u7528Scrapy\u5de5\u5177\uff0c\u4f46\u662f\u4ec5\u4ec5\u505c\u7559\u5728\u4f1a\u4f7f\u7528\u7684\u9636\u6bb5\u3002\u4e3a\u4e86\u589e\u52a0\u5bf9\u722c\u866b\u673a\u5236\u7684\u7406\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7684\u722c\u866b\u8fc7\u7a0b\uff0c\u540c\u65f6\uff0c\u5f15\u5165IP\u4ee3\u7406\u6c60\u8fdb\u884c\u57fa\u672c\u7684\u53cd\u722c\u64cd\u4f5c\u3002\n\u672c\u6b21\u4f7f\u7528\u5929\u5929\u57fa\u91d1\u7f51\u8fdb\u884c\u722c\u866b\uff0c\u8be5\u7f51\u7ad9\u5177\u6709\u53cd\u722c\u673a\u5236\uff0c\u540c\u65f6\u6570\u91cf\u8db3\u591f\u5927\uff0c\u591a\u7ebf\u7a0b\u6548\u679c\u8f83\u4e3a\u660e\u663e\u3002\n\u6280\u672f\u8def\u7ebf\n\nIP\u4ee3\u7406\u6c60\n\u591a\u7ebf\u7a0b\n\u722c\u866b\u4e0e\u53cd\u722c\n\n\u6570\u636e\u683c\u5f0f\n000056,\u5efa\u4fe1\u6d88\u8d39\u5347\u7ea7\u6df7\u5408,2019-03-26,1.7740,1.7914,0.98,2019-03-27 15:00\n000031,\u534e\u590f\u590d\u5174\u6df7\u5408,2019-03-26,1.5650,1.5709,0.38,2019-03-27 15:00\n000048,\u534e\u590f\u53cc\u503a\u589e\u5f3a\u503a\u5238C,2019-03-26,1.2230,1.2236,0.05,2019-03-27 15:00\n000008,\u5609\u5b9e\u4e2d\u8bc1500ETF\u8054\u63a5A,2019-03-26,1.4417,1.4552,0.93,2019-03-27 15:00\n000024,\u5927\u6469\u53cc\u5229\u589e\u5f3a\u503a\u5238A,2019-03-26,1.1670,1.1674,0.04,2019-03-27 15:00\n000054,\u9e4f\u534e\u53cc\u503a\u589e\u5229\u503a\u5238,2019-03-26,1.1697,1.1693,-0.03,2019-03-27 15:00\n000016,\u534e\u590f\u7eaf\u503a\u503a\u5238C,2019-03-26,1.1790,1.1793,0.03,2019-03-27 15:00\n\u529f\u80fd\u622a\u56fe\n\n\u914d\u7f6e\u8bf4\u660e\n\t# \u786e\u4fdd\u5b89\u88c5\u4ee5\u4e0b\u5e93\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u5728python3\u73af\u5883\u4e0b\u6267\u884cpip install \u6a21\u5757\u540d\n\timport requests\n\timport random\n\timport re\n\timport queue\n\timport threading\n\timport csv\n\timport json\n\n\n8.\u4e00\u952e\u751f\u6210\u5fae\u4fe1\u4e2a\u4eba\u4e13\u5c5e\u6570\u636e\u62a5\u544a(\u4e86\u89e3\u4f60\u7684\u5fae\u4fe1\u793e\u4ea4\u5386\u53f2))\n\u7b80\u4ecb\n\u4f60\u662f\u5426\u60f3\u8fc7\u751f\u6210\u4e00\u4efd\u5c5e\u4e8e\u4f60\u7684\u5fae\u4fe1\u4e2a\u4eba\u6570\u636e\u62a5\u544a\uff0c\u4e86\u89e3\u4f60\u7684\u5fae\u4fe1\u793e\u4ea4\u5386\u53f2\u3002\u73b0\u5728\uff0c\u6211\u4eec\u57fa\u4e8epython\u5bf9\u5fae\u4fe1\u597d\u53cb\u8fdb\u884c\u5168\u65b9\u4f4d\u6570\u636e\u5206\u6790\uff0c\u5305\u62ec\uff1a\u6635\u79f0\u3001\u6027\u522b\u3001\u5e74\u9f84\u3001\u5730\u533a\u3001\u5907\u6ce8\u540d\u3001\u4e2a\u6027\u7b7e\u540d\u3001\u5934\u50cf\u3001\u7fa4\u804a\u3001\u516c\u4f17\u53f7\u7b49\u3002\n\u5176\u4e2d\uff0c\u5728\u5206\u6790\u597d\u53cb\u7c7b\u578b\u65b9\u9762\uff0c\u4e3b\u8981\u7edf\u8ba1\u51fa\u4f60\u7684\u964c\u751f\u4eba\u3001\u661f\u6807\u597d\u53cb\u3001\u4e0d\u8ba9\u4ed6\u770b\u6211\u7684\u670b\u53cb\u5708\u7684\u597d\u53cb\u3001\u4e0d\u770b\u4ed6\u7684\u670b\u53cb\u5708\u7684\u597d\u53cb\u6570\u636e\u3002\u5728\u5206\u6790\u5730\u533a\u65b9\u9762\uff0c\u4e3b\u8981\u7edf\u8ba1\u6240\u6709\u597d\u53cb\u5728\u5168\u56fd\u7684\u5206\u5e03\u4ee5\u53ca\u5bf9\u597d\u53cb\u6570\u6700\u591a\u7684\u7701\u4efd\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u6790\u3002\u5728\u5176\u4ed6\u65b9\u9762\uff0c\u7edf\u8ba1\u51fa\u4f60\u7684\u597d\u53cb\u6027\u522b\u6bd4\u4f8b\u3001\u731c\u51fa\u4f60\u6700\u4eb2\u5bc6\u7684\u597d\u53cb\uff0c\u5206\u6790\u4f60\u7684\u7279\u6b8a\u597d\u53cb\uff0c\u627e\u51fa\u4e0e\u4f60\u6240\u5728\u5171\u540c\u7fa4\u804a\u6570\u6700\u591a\u7684\u597d\u53cb\u6570\u636e\uff0c\u5bf9\u4f60\u7684\u597d\u53cb\u4e2a\u6027\u7b7e\u540d\u8fdb\u884c\u5206\u6790\uff0c\u5bf9\u4f60\u7684\u597d\u53cb\u5934\u50cf\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u8fdb\u4e00\u6b65\u68c0\u6d4b\u51fa\u4f7f\u7528\u771f\u4eba\u5934\u50cf\u7684\u597d\u53cb\u6570\u636e\u3002\n\u76ee\u524d\u7f51\u4e0a\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u6570\u636e\u5206\u6790\u6587\u7ae0\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u8fd0\u884c\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800c\u672c\u7a0b\u5e8f\u7684\u8fd0\u884c\u5341\u5206\u7b80\u5355\uff0c\u53ea\u9700\u8981\u626b\u7801\u767b\u5f55\u4e00\u6b65\u64cd\u4f5c\u5373\u53ef\u3002\n\u529f\u80fd\u622a\u56fe\n\n\n\n\n\n\n\n\u5982\u4f55\u8fd0\u884c\n# \u8df3\u8f6c\u5230\u5f53\u524d\u76ee\u5f55\ncd \u76ee\u5f55\u540d\n# \u5148\u5378\u8f7d\u4f9d\u8d56\u5e93\npip uninstall -y -r requirement.txt\n# \u518d\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\u5e93\npip install -r requirement.txt\n# \u5f00\u59cb\u8fd0\u884c\npython generate_wx_data.py\n\u5982\u4f55\u6253\u5305\u6210\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\n# \u5b89\u88c5pyinstaller\npip install pyinstaller\n# \u8df3\u8f6c\u5230\u5f53\u524d\u76ee\u5f55\ncd \u76ee\u5f55\u540d\n# \u5148\u5378\u8f7d\u4f9d\u8d56\u5e93\npip uninstall -y -r requirement.txt\n# \u518d\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\u5e93\npip install -r requirement.txt\n# \u66f4\u65b0 setuptools\npip install --upgrade setuptools\n# \u5f00\u59cb\u6253\u5305\npyinstaller generate_wx_data.py\n9.\u4e00\u952e\u751f\u6210QQ\u4e2a\u4eba\u5386\u53f2\u62a5\u544a\n\u7b80\u4ecb\n\u8fd1\u51e0\u5e74\uff0c\u7531\u4e8e\u5fae\u4fe1\u7684\u6d41\u884c\uff0c\u5927\u90e8\u5206\u4eba\u4e0d\u518d\u9891\u7e41\u4f7f\u7528QQ\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u81ea\u5df1\u7684QQ\u6570\u636e\u5e76\u4e0d\u662f\u7279\u522b\u4e86\u89e3\u3002\u6211\u76f8\u4fe1\uff0c\u5982\u679c\u80fd\u591f\u751f\u6210\u4e00\u4efd\u5c5e\u4e8e\u81ea\u5df1\u7684QQ\u5386\u53f2\u62a5\u544a\uff0c\u90a3\u5c06\u662f\u65e0\u6bd4\u5f00\u5fc3\u7684\u4e00\u4ef6\u4e8b\u3002\n\u76ee\u524d\u7f51\u4e0a\u5173\u4e8eQQ\u7684\u6570\u636e\u5206\u6790\u5de5\u5177\u8f83\u5c11\uff0c\u539f\u56e0\u662fQQ\u76f8\u5173\u63a5\u53e3\u6bd4\u8f83\u590d\u6742\u3002\u800c\u672c\u7a0b\u5e8f\u7684\u8fd0\u884c\u5341\u5206\u7b80\u5355\uff0c\u5177\u6709\u826f\u597d\u7684\u7528\u6237\u4ea4\u4e92\u754c\u9762\uff0c\u53ea\u9700\u8981\u626b\u7801\u767b\u5f55\u4e00\u6b65\u64cd\u4f5c\u5373\u53ef\u3002\n\u76ee\u524d\u672c\u7a0b\u5e8f\u83b7\u53d6\u7684\u6570\u636e\u5305\u62ec\uff1aQQ\u8be6\u7ec6\u6570\u636e\u3001\u624b\u673a\u5728\u7ebf\u65f6\u95f4\u3001\u975e\u9690\u8eab\u72b6\u6001\u4e0b\u5728\u7ebf\u65f6\u95f4\u3001QQ\u6d3b\u8dc3\u65f6\u95f4\u3001\u5355\u5411\u597d\u53cb\u6570\u91cf\u3001QQ\u8d22\u4ea7\u5206\u6790\u3001\u7fa4\u804a\u5206\u6790\u3001\u8fc7\u53bb\u4e00\u5e74\u6211\u9000\u51fa\u7684\u7fa4\u804a\u6570\u636e\u3001\u9000\u53bb\u4e00\u4e2a\u6708\u6211\u5220\u9664\u7684\u597d\u53cb\u6570\u636e\u3001\u6240\u6709\u4ee3\u4ed8\u4fe1\u606f\u3001\u6211\u6700\u5728\u610f\u7684\u4eba\u4ee5\u53ca\u6700\u5728\u610f\u6211\u7684\u4eba\u3002\u7531\u4e8e\u76f8\u5173\u7684\u6570\u636e\u63a5\u53e3\u6709\u8bbf\u95ee\u9650\u5236\uff0c\u6240\u4ee5\u672c\u7a0b\u5e8f\u5e76\u6ca1\u6709\u5bf9QQ\u597d\u53cb\u8fdb\u884c\u5206\u6790\u3002\n\u529f\u80fd\u622a\u56fe\n\n\n\n\n\u5982\u4f55\u8fd0\u884c\n# \u8df3\u8f6c\u5230\u5f53\u524d\u76ee\u5f55\ncd \u76ee\u5f55\u540d\n# \u5148\u5378\u8f7d\u4f9d\u8d56\u5e93\npip uninstall -y -r requirement.txt\n# \u518d\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\u5e93\npip install -r requirement.txt\n# \u5f00\u59cb\u8fd0\u884c\npython main.py\n\n\n10.\u4e00\u952e\u751f\u6210\u4e2a\u4eba\u5fae\u4fe1\u670b\u53cb\u5708\u6570\u636e\u7535\u5b50\u4e66\n\u7b80\u4ecb\n\u5fae\u4fe1\u670b\u53cb\u5708\u4fdd\u7559\u7740\u4f60\u7684\u6570\u636e\uff0c\u5b83\u7559\u4f4f\u4e86\u7f8e\u597d\u7684\u56de\u5fc6\uff0c\u8bb0\u5f55\u4e86\u6211\u4eec\u6210\u957f\u7684\u70b9\u70b9\u6ef4\u6ef4\u3002\u53d1\u670b\u53cb\u5708\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bb2\u662f\u5728\u8bb0\u5f55\u751f\u6d3b\uff0c\u611f\u53d7\u751f\u6d3b\uff0c\u5e76\u4ece\u4e2d\u770b\u5230\u4e86\u6bcf\u4e2a\u4eba\u6bcf\u4e00\u6b65\u7684\u6210\u957f\u3002\n\u8fd9\u4e48\u4e00\u4efd\u73cd\u8d35\u7684\u8bb0\u5fc6\uff0c\u4f55\u4e0d\u5c06\u5b83\u4fdd\u5b58\u4e0b\u6765\u5462\uff1f\u53ea\u9700\u4e00\u676f\u5496\u5561\u7684\u65f6\u95f4\uff0c\u5373\u53ef\u4e00\u952e\u6253\u5370\u4f60\u7684\u670b\u53cb\u5708\u3002\u5b83\u53ef\u4ee5\u662f\u7eb8\u8d28\u4e66\uff0c\u4e5f\u53ef\u4ee5\u662f\u7535\u5b50\u4e66\uff0c\u53ef\u4ee5\u957f\u4e45\u4fdd\u5b58\uff0c\u6bd4\u6d17\u7167\u7247\u597d\uff0c\u53c8\u6709\u65f6\u95f4\u8db3\u8ff9\u8bb0\u5fc6\u3002\n\n\u8fd9\u672c\u4e66\uff0c\u53ef\u4ee5\u7528\u6765\uff1a\n\u9001\u7ed9\u5b69\u5b50\u7684\u751f\u65e5\u793c\u7269\n\u9001\u7ed9\u4f34\u4fa3\u7684\u751f\u65e5\u793c\u7269\n\u9001\u7ed9\u672a\u6765\u7684\u81ea\u5df1\n\u2026\u2026\n\n\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u6253\u5370\u7535\u5b50\u4e66\u6216\u8005\u7eb8\u8d28\u4e66\u3002\u6253\u5370\u7eb8\u8d28\u4e66\u7684\u8bdd\uff0c\u53ef\u4ee5\u627e\u7b2c\u4e09\u65b9\u673a\u6784\u82b1\u94b1\u8d2d\u4e70\uff1b\u6253\u5370\u7535\u5b50\u4e66\u7684\u8bdd\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u81ea\u5df1\u52a8\u624b\u751f\u6210\uff0c\u8fd9\u53ef\u4ee5\u7701\u4e0b\u4e00\u7b14\u4e0d\u5c0f\u7684\u5f00\u652f\u3002\n\u529f\u80fd\u622a\u56fe\n\u5728\u5f00\u59cb\u5199\u4ee3\u7801\u601d\u8def\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u770b\u770b\u6700\u7ec8\u751f\u6210\u7684\u6548\u679c\u3002\n\u7535\u5b50\u4e66\u6548\u679c(\u56fe\u7247\u5f15\u7528\u81ea\u51fa\u4e66\u5566)\n\n\n\u7eb8\u8d28\u4e66\u6548\u679c(\u56fe\u7247\u5f15\u7528\u81ea\u5fc3\u4e66)\n\n\u5982\u4f55\u8fd0\u884c\n# \u8df3\u8f6c\u5230\u5f53\u524d\u76ee\u5f55\ncd \u76ee\u5f55\u540d\n# \u5148\u5378\u8f7d\u4f9d\u8d56\u5e93\npip uninstall -y -r requirement.txt\n# \u518d\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\u5e93\npip install -r requirement.txt\n# \u5f00\u59cb\u8fd0\u884c\npython main.py\n\n\n11.\u4e00\u952e\u5206\u6790\u4f60\u7684\u4e0a\u7f51\u884c\u4e3a(web\u9875\u9762\u53ef\u89c6\u5316)\n\u7b80\u4ecb\n\u60f3\u770b\u770b\u4f60\u6700\u8fd1\u4e00\u5e74\u90fd\u5728\u5e72\u561b\uff1f\u770b\u770b\u4f60\u5e73\u65f6\u4e0a\u7f51\u662f\u5728\u6478\u9c7c\u8fd8\u662f\u8ba4\u771f\u5de5\u4f5c\uff1f\u60f3\u5199\u5e74\u5ea6\u6c47\u62a5\u603b\u7ed3\uff0c\u4f46\u662f\u82e6\u4e8e\u6ca1\u6709\u6570\u636e\uff1f\u73b0\u5728\uff0c\u5b83\u6765\u4e86\u3002\n\u8fd9\u662f\u4e00\u4e2a\u80fd\u8ba9\u4f60\u4e86\u89e3\u81ea\u5df1\u7684\u6d4f\u89c8\u5386\u53f2\u7684Chrome\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u5206\u6790\u7a0b\u5e8f\uff0c\u4ed6\u9002\u7528\u4e8eChrome\u6d4f\u89c8\u5668\u6216\u8005\u4ee5Chromium\u4e3a\u5185\u6838\u7684\u6d4f\u89c8\u5668\u3002\u76ee\u524d\u56fd\u5185\u5927\u90e8\u5206\u6d4f\u89c8\u5668\u5747\u662f\u4ee5Chromium\u4e3a\u5185\u6838\u7684\u6d4f\u89c8\u5668\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u4f46\u662f\u4e0d\u652f\u6301\u4ee5\u4e0b\u6d4f\u89c8\u5668\uff1aIE\u6d4f\u89c8\u5668\u3001Firefox\u6d4f\u89c8\u5668\u3001Safari\u6d4f\u89c8\u5668\u3002\n\u5728\u8be5\u9875\u9762\u4e2d\u4f60\u5c06\u53ef\u4ee5\u67e5\u770b\u6709\u5173\u81ea\u5df1\u5728\u8fc7\u53bb\u7684\u65f6\u95f4\u91cc\u6240\u8bbf\u95ee\u6d4f\u89c8\u7684\u57df\u540d\u3001URL\u4ee5\u53ca\u5fd9\u788c\u5929\u6570\u7684\u524d\u5341\u6392\u540d\u4ee5\u53ca\u76f8\u5173\u7684\u6570\u636e\u56fe\u8868\u3002\n\u529f\u80fd\u622a\u56fe\n\u5728\u5f00\u59cb\u5199\u4ee3\u7801\u601d\u8def\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u770b\u770b\u6700\u7ec8\u751f\u6210\u7684\u6548\u679c\u3002\n\n\u5982\u4f55\u8fd0\u884c\n\u5728\u7ebf\u6f14\u793a\u7a0b\u5e8f:http:\/\/39.106.118.77:8090(\u666e\u901a\u670d\u52a1\u5668\uff0c\u52ff\u6d4b\u538b)\n\u8fd0\u884c\u672c\u7a0b\u5e8f\u5341\u5206\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u547d\u4ee4\u5373\u53ef\u8fd0\u884c\uff1a\n# \u8df3\u8f6c\u5230\u5f53\u524d\u76ee\u5f55\ncd \u76ee\u5f55\u540d\n# \u5148\u5378\u8f7d\u4f9d\u8d56\u5e93\npip uninstall -y -r requirement.txt\n# \u518d\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\u5e93\npip install -r requirement.txt\n# \u5f00\u59cb\u8fd0\u884c\npython app.py\n\n# \u8fd0\u884c\u6210\u529f\u540e\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00http:\/\/localhost:8090\n\n\n12.\u4e00\u952e\u5bfc\u51fa\u5fae\u4fe1\u8bfb\u4e66\u7684\u4e66\u7c4d\u548c\u7b14\u8bb0\n\n\u672c\u9879\u76ee\u57fa\u4e8e@arry-lee\u7684\u9879\u76eewereader\u4fee\u6539\u800c\u6765\uff0c\u611f\u8c22\u539f\u4f5c\u8005\u63d0\u4f9b\u7684\u6e90\u4ee3\u7801\u3002\n\n\n\u7b80\u4ecb\n\u5168\u6c11\u9605\u8bfb\u7684\u65f6\u4ee3\u5df2\u7ecf\u6765\u4e34\uff0c\u76ee\u524d\u4f7f\u7528\u8bfb\u4e66\u8f6f\u4ef6\u7684\u7528\u6237\u65702.1\u4ebf\uff0c\u65e5\u6d3b\u8dc3\u7528\u6237\u8d85\u8fc7500\u4e07\uff0c\u5176\u4e2d19-35\u5c81\u5e74\u8f7b\u7528\u6237\u5360\u6bd4\u8d85\u8fc760%\uff0c\u672c\u79d1\u53ca\u4ee5\u4e0a\u5b66\u5386\u7528\u6237\u5360\u6bd4\u9ad8\u8fbe80%\uff0c\u5317\u4e0a\u5e7f\u6df1\u53ca\u5176\u4ed6\u7701\u4f1a\u57ce\u5e02\/\u76f4\u8f96\u5e02\u7528\u6237\u5360\u6bd4\u8d85\u8fc780%\u3002\u672c\u4eba\u4e60\u60ef\u4f7f\u7528\u5fae\u4fe1\u8bfb\u4e66\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6574\u7406\u4e66\u7c4d\u548c\u5bfc\u51fa\u7b14\u8bb0\uff0c\u4fbf\u5f00\u53d1\u4e86\u8fd9\u4e2a\u5c0f\u5de5\u5177\u3002\n\u529f\u80fd\u622a\u56fe\n\u5728\u5f00\u59cb\u5199\u4ee3\u7801\u601d\u8def\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u770b\u770b\u6700\u7ec8\u751f\u6210\u7684\u6548\u679c\u3002\n\n\n\n\u5982\u4f55\u8fd0\u884c\n# \u8df3\u8f6c\u5230\u5f53\u524d\u76ee\u5f55\ncd \u76ee\u5f55\u540d\n# \u5148\u5378\u8f7d\u4f9d\u8d56\u5e93\npip uninstall -y -r requirement.txt\n# \u518d\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\u5e93\npip install -r requirement.txt -i https:\/\/pypi.tuna.tsinghua.edu.cn\/simple\n# \u5f00\u59cb\u8fd0\u884c\npython pyqt_gui.py\n\n\n\u8865\u5145\n\u9879\u76ee\u6301\u7eed\u66f4\u65b0\uff0c\u6b22\u8fce\u60a8star\u672c\u9879\u76ee\n\n\nLicense\nThe MIT License (MIT)\n","218":"mycli\n\n\n\nA command line client for MySQL that can do auto-completion and syntax highlighting.\nHomePage: http:\/\/mycli.net\nDocumentation: http:\/\/mycli.net\/docs\n\n\nPostgres Equivalent: http:\/\/pgcli.com\nQuick Start\nIf you already know how to install python packages, then you can install it via pip:\nYou might need sudo on linux.\n$ pip install -U mycli\n\nor\n$ brew update && brew install mycli  # Only on macOS\n\nor\n$ sudo apt-get install mycli # Only on debian or ubuntu\n\nUsage\n$ mycli --help\nUsage: mycli [OPTIONS] [DATABASE]\n\n  A MySQL terminal client with auto-completion and syntax highlighting.\n\n  Examples:\n    - mycli my_database\n    - mycli -u my_user -h my_host.com my_database\n    - mycli mysql:\/\/my_user@my_host.com:3306\/my_database\n\nOptions:\n  -h, --host TEXT               Host address of the database.\n  -P, --port INTEGER            Port number to use for connection. Honors\n                                $MYSQL_TCP_PORT.\n  -u, --user TEXT               User name to connect to the database.\n  -S, --socket TEXT             The socket file to use for connection.\n  -p, --password TEXT           Password to connect to the database.\n  --pass TEXT                   Password to connect to the database.\n  --ssh-user TEXT               User name to connect to ssh server.\n  --ssh-host TEXT               Host name to connect to ssh server.\n  --ssh-port INTEGER            Port to connect to ssh server.\n  --ssh-password TEXT           Password to connect to ssh server.\n  --ssh-key-filename TEXT       Private key filename (identify file) for the\n                                ssh connection.\n  --ssh-config-path TEXT        Path to ssh configuation.\n  --ssh-config-host TEXT        Host for ssh server in ssh configuations (requires paramiko).\n  --ssl-ca PATH                 CA file in PEM format.\n  --ssl-capath TEXT             CA directory.\n  --ssl-cert PATH               X509 cert in PEM format.\n  --ssl-key PATH                X509 key in PEM format.\n  --ssl-cipher TEXT             SSL cipher to use.\n  --ssl-verify-server-cert      Verify server's \"Common Name\" in its cert\n                                against hostname used when connecting. This\n                                option is disabled by default.\n  -V, --version                 Output mycli's version.\n  -v, --verbose                 Verbose output.\n  -D, --database TEXT           Database to use.\n  -d, --dsn TEXT                Use DSN configured into the [alias_dsn]\n                                section of myclirc file.\n  --list-dsn                    list of DSN configured into the [alias_dsn]\n                                section of myclirc file.\n  --list-ssh-config             list ssh configurations in the ssh config (requires paramiko).\n  -R, --prompt TEXT             Prompt format (Default: \"\\t \\u@\\h:\\d> \").\n  -l, --logfile FILENAME        Log every query and its results to a file.\n  --defaults-group-suffix TEXT  Read MySQL config groups with the specified\n                                suffix.\n  --defaults-file PATH          Only read MySQL options from the given file.\n  --myclirc PATH                Location of myclirc file.\n  --auto-vertical-output        Automatically switch to vertical output mode\n                                if the result is wider than the terminal\n                                width.\n  -t, --table                   Display batch output in table format.\n  --csv                         Display batch output in CSV format.\n  --warn \/ --no-warn            Warn before running a destructive query.\n  --local-infile BOOLEAN        Enable\/disable LOAD DATA LOCAL INFILE.\n  --login-path TEXT             Read this path from the login file.\n  -e, --execute TEXT            Execute command and quit.\n  --init-command TEXT           SQL statement to execute after connecting.\n  --help                        Show this message and exit.\n\nFeatures\nmycli is written using prompt_toolkit.\n\nAuto-completion as you type for SQL keywords as well as tables, views and\ncolumns in the database.\nSyntax highlighting using Pygments.\nSmart-completion (enabled by default) will suggest context-sensitive completion.\n\nSELECT * FROM <tab> will only show table names.\nSELECT * FROM users WHERE <tab> will only show column names.\n\n\nSupport for multiline queries.\nFavorite queries with optional positional parameters. Save a query using\n\\fs alias query and execute it with \\f alias whenever you need.\nTiming of sql statments and table rendering.\nConfig file is automatically created at ~\/.myclirc at first launch.\nLog every query and its results to a file (disabled by default).\nPretty prints tabular data (with colors!)\nSupport for SSL connections\n\nContributions:\nIf you're interested in contributing to this project, first of all I would like\nto extend my heartfelt gratitude. I've written a small doc to describe how to\nget this running in a development setup.\nhttps:\/\/github.com\/dbcli\/mycli\/blob\/master\/CONTRIBUTING.md\nPlease feel free to reach out to me if you need help.\nMy email: amjith.r@gmail.com\nTwitter: @amjithr\nDetailed Install Instructions:\nFedora\nFedora has a package available for mycli, install it using dnf:\n$ sudo dnf install mycli\n\nRHEL, Centos\nI haven't built an RPM package for mycli for RHEL or Centos yet. So please use pip to install mycli. You can install pip on your system using:\n$ sudo yum install python-pip\n\nOnce that is installed, you can install mycli as follows:\n$ sudo pip install mycli\n\nWindows\nFollow the instructions on this blogpost: https:\/\/www.codewall.co.uk\/installing-using-mycli-on-windows\/\nCygwin\n\nMake sure the following Cygwin packages are installed:\npython3, python3-pip.\nInstall mycli: pip3 install mycli\n\nThanks:\nThis project was funded through kickstarter. My thanks to the backers who supported the project.\nA special thanks to Jonathan Slenders for\ncreating Python Prompt Toolkit,\nwhich is quite literally the backbone library, that made this app possible.\nJonathan has also provided valuable feedback and support during the development\nof this app.\nClick is used for command line option parsing\nand printing error messages.\nThanks to PyMysql for a pure python adapter to MySQL database.\nCompatibility\nMycli is tested on macOS and Linux.\nMycli is not tested on Windows, but the libraries used in this app are Windows-compatible.\nThis means it should work without any modifications. If you're unable to run it\non Windows, please file a bug.\nConfiguration and Usage\nFor more information on using and configuring mycli, check out our documentation.\nCommon topics include:\n\nConfiguring mycli\nUsing\/Disabling the pager\nSyntax colors\n\n"},"top_code":{"0":"\n\nJavaScript\n91.3%\n","1":"\n\nJavaScript\n97.7%\n","2":"\n\nJavaScript\n95.0%\n","3":"\n\nJavaScript\n46.7%\n","4":"\n\nJavaScript\n100.0%\n","5":"\n\nJavaScript\n100.0%\n","6":"\n\nJavaScript\n46.4%\n","7":"\n\nJavaScript\n100.0%\n","8":"\n\nJavaScript\n98.3%\n","9":"\n\nJavaScript\n92.5%\n","10":"\n\nJavaScript\n55.2%\n","11":"\n\nJavaScript\n100.0%\n","12":"\n\nJavaScript\n99.2%\n","13":"\n\nJavaScript\n67.1%\n","14":"\n\nJavaScript\n65.3%\n","15":"\n\nJavaScript\n98.1%\n","16":"\n\nJavaScript\n69.9%\n","17":"\n\nJavaScript\n99.8%\n","18":"\n\nJavaScript\n66.5%\n","19":"\n\nJavaScript\n93.8%\n","20":"\n\nJavaScript\n57.2%\n","21":"\n\nJavaScript\n88.9%\n","22":"\n\nJavaScript\n61.7%\n","23":"\n\nJavaScript\n99.7%\n","24":"\n\nJavaScript\n100.0%\n","25":"\n\nJavaScript\n95.9%\n","26":"\n\nJavaScript\n57.4%\n","27":"\n\nJavaScript\n81.8%\n","28":"\n\nJavaScript\n87.2%\n","29":"\n\nJavaScript\n62.9%\n","30":"\n\nJavaScript\n69.8%\n","31":"\n\nJavaScript\n80.7%\n","32":"\n\nJavaScript\n100.0%\n","33":"\n\nJavaScript\n54.8%\n","34":"\n\nJavaScript\n46.0%\n","35":"\n\nJavaScript\n99.7%\n","36":"\n\nJavaScript\n94.7%\n","37":"\n\nJavaScript\n86.1%\n","38":"\n\nJavaScript\n100.0%\n","39":"\n\nJavaScript\n98.1%\n","40":"\n\nJavaScript\n16.3%\n","41":"\n\nJavaScript\n59.3%\n","42":"\n\nJavaScript\n37.8%\n","43":"\n\nJavaScript\n98.7%\n","44":"\n\nJavaScript\n82.6%\n","45":"\n\nJavaScript\n71.9%\n","46":"\n\nJavaScript\n96.5%\n","47":"\n\nJavaScript\n88.0%\n","48":"\n\nJavaScript\n98.4%\n","49":"\n\nJavaScript\n42.6%\n","50":"\n\nJavaScript\n100.0%\n","51":"\n\nJavaScript\n98.4%\n","52":"\n\nJavaScript\n77.2%\n","53":"\n\nJavaScript\n88.5%\n","54":"\n\nJavaScript\n93.2%\n","55":"\n\nJavaScript\n100.0%\n","56":"\n\nJavaScript\n81.8%\n","57":"\n\nJavaScript\n97.0%\n","58":"\n\nJavaScript\n68.5%\n","59":"\n\nJavaScript\n83.6%\n","60":"\n\nJavaScript\n100.0%\n","61":"\n\nJavaScript\n83.9%\n","62":"\n\nJavaScript\n100.0%\n","63":"\n\nJavaScript\n100.0%\n","64":"\n\nJavaScript\n99.6%\n","65":"\n\nJavaScript\n95.1%\n","66":"\n\nJavaScript\n54.3%\n","67":"\n\nJavaScript\n93.2%\n","68":"\n\nJavaScript\n99.7%\n","69":"\n\nJavaScript\n92.6%\n","70":"\n\nJavaScript\n59.9%\n","71":"\n\nJavaScript\n99.7%\n","72":"\n\nJavaScript\n96.7%\n","73":"\n\nJavaScript\n100.0%\n","74":"\n\nJavaScript\n82.7%\n","75":"\n\nJavaScript\n77.3%\n","76":"\n\nJavaScript\n55.9%\n","77":"\n\nJavaScript\n99.0%\n","78":"\n\nJavaScript\n93.6%\n","79":"\n\nJavaScript\n100.0%\n","80":"\n\nJavaScript\n56.0%\n","81":"\n\nJavaScript\n96.5%\n","82":"\n\nJavaScript\n60.2%\n","83":"\n\nJavaScript\n77.2%\n","84":"\n\nJavaScript\n80.6%\n","85":"\n\nJavaScript\n95.6%\n","86":"\n\nJavaScript\n74.0%\n","87":"\n\nJavaScript\n94.9%\n","88":"\n\nJavaScript\n94.1%\n","89":"\n\nJavaScript\n76.9%\n","90":"\n\nJavaScript\n49.7%\n","91":"\n\nJavaScript\n100.0%\n","92":"\n\nJavaScript\n100.0%\n","93":"\n\nJavaScript\n98.7%\n","94":"\n\nJavaScript\n76.8%\n","95":"\n\nJavaScript\n100.0%\n","96":"\n\nJavaScript\n99.8%\n","97":"\n\nJavaScript\n91.9%\n","98":"\n\nJavaScript\n100.0%\n","99":"\n\nJavaScript\n99.6%\n","100":"\n\nJavaScript\n70.3%\n","101":"\n\nJavaScript\n64.1%\n","102":"\n\nJavaScript\n94.3%\n","103":"\n\nJavaScript\n99.7%\n","104":"\n\nJavaScript\n48.5%\n","105":"\n\nJavaScript\n53.5%\n","106":"\n\nJavaScript\n91.6%\n","107":"\n\nJavaScript\n90.4%\n","108":"\n\nJavaScript\n99.9%\n","109":"\n\nJavaScript\n54.1%\n","110":"\n\nPython\n98.0%\n","111":"\n\nPython\n78.7%\n","112":"\n\nPython\n57.9%\n","113":"\n\nPython\n100.0%\n","114":"\n\nPython\n92.6%\n","115":"\n\nPython\n99.6%\n","116":"\n\nPython\n88.9%\n","117":"\n\nPython\n100.0%\n","118":"\n\nPython\n97.1%\n","119":"\n\nPython\n99.9%\n","120":"\n\nPython\n95.8%\n","121":"\n\nPython\n100.0%\n","122":"\n\nPython\n88.1%\n","123":"\n\nPython\n99.7%\n","124":"\n\nPython\n97.6%\n","125":"\n\nPython\n99.7%\n","126":"\n\nPython\n50.0%\n","127":"\n\nPython\n100.0%\n","128":"\n\nPython\n99.4%\n","129":"\n\nPython\n90.6%\n","130":"\n\nPython\n91.1%\n","131":"\n\nPython\n100.0%\n","132":"\n\nPython\n63.2%\n","133":"\n\nPython\n98.7%\n","134":"\n\nPython\n90.5%\n","135":"\n\nPython\n52.4%\n","136":"\n\nPython\n97.9%\n","137":"\n\nPython\n100.0%\n","138":"\n\nPython\n40.0%\n","139":"\n\nPython\n99.1%\n","140":"\n\nPython\n100.0%\n","141":"\n\nPython\n100.0%\n","142":"\n\nPython\n95.8%\n","143":"\n\nPython\n87.5%\n","144":"\n\nPython\n95.2%\n","145":"\n\nPython\n95.3%\n","146":"\n\nPython\n59.7%\n","147":"\n\nPython\n98.0%\n","148":"\n\nPython\n100.0%\n","149":"\n\nPython\n76.3%\n","150":"\n\nPython\n52.0%\n","151":"\n\nPython\n94.2%\n","152":"\n\nPython\n99.8%\n","153":"\n\nPython\n99.8%\n","154":"\n\nPython\n100.0%\n","155":"\n\nPython\n76.8%\n","156":"\n\nPython\n67.4%\n","157":"\n\nPython\n67.7%\n","158":"\n\nPython\n100.0%\n","159":"\n\nPython\n100.0%\n","160":"\n\nPython\n100.0%\n","161":"\n\nPython\n100.0%\n","162":"\n\nPython\n97.6%\n","163":"\n\nPython\n95.1%\n","164":"\n\nPython\n100.0%\n","165":"\n\nPython\n85.7%\n","166":"\n\nPython\n100.0%\n","167":"\n\nPython\n45.3%\n","168":"\n\nPython\n99.6%\n","169":"\n\nPython\n73.4%\n","170":"\n\nPython\n62.9%\n","171":"\n\nPython\n93.3%\n","172":"\n\nPython\n58.0%\n","173":"\n\nPython\n95.3%\n","174":"\n\nPython\n100.0%\n","175":"\n\nPython\n99.8%\n","176":"\n\nPython\n98.1%\n","177":"\n\nPython\n100.0%\n","178":"\n\nPython\n99.7%\n","179":"\n\nPython\n92.8%\n","180":"\n\nPython\n97.8%\n","181":"\n\nPython\n97.8%\n","182":"\n\nPython\n100.0%\n","183":"\n\nPython\n100.0%\n","184":"\n\nPython\n91.7%\n","185":"\n\nPython\n90.5%\n","186":"\n\nPython\n100.0%\n","187":"\n\nPython\n95.8%\n","188":"\n\nPython\n100.0%\n","189":"\n\nPython\n99.7%\n","190":"\n\nPython\n100.0%\n","191":"\n\nPython\n97.9%\n","192":"\n\nPython\n52.6%\n","193":"\n\nPython\n61.2%\n","194":"\n\nPython\n90.9%\n","195":"\n\nPython\n100.0%\n","196":"\n\nPython\n97.2%\n","197":"\n\nPython\n45.9%\n","198":"\n\nPython\n48.5%\n","199":"\n\nPython\n100.0%\n","200":"\n\nPython\n95.4%\n","201":"\n\nPython\n81.8%\n","202":"\n\nPython\n95.8%\n","203":"\n\nPython\n53.8%\n","204":"\n\nPython\n100.0%\n","205":"\n\nPython\n100.0%\n","206":"\n\nPython\n100.0%\n","207":"\n\nPython\n99.3%\n","208":"\n\nPython\n96.3%\n","209":"\n\nPython\n100.0%\n","210":"\n\nPython\n95.8%\n","211":"\n\nPython\n98.7%\n","212":"\n\nPython\n98.4%\n","213":"\n\nPython\n61.8%\n","214":"\n\nPython\n97.6%\n","215":"\n\nPython\n76.3%\n","216":"\n\nPython\n74.6%\n","217":"\n\nPython\n88.1%\n","218":"\n\nPython\n98.0%\n"}}